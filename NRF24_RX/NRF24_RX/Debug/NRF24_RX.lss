
NRF24_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d4  00800100  0000609a  0000612e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000609a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000051b  008001d4  008001d4  00006202  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006202  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006260  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004b0  00000000  00000000  000062a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a18a  00000000  00000000  00006750  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a45  00000000  00000000  000108da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004777  00000000  00000000  0001231f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001324  00000000  00000000  00016a98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f99  00000000  00000000  00017dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006b9f  00000000  00000000  00018d55  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  0001f8f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__ctors_end>
       4:	0c 94 40 11 	jmp	0x2280	; 0x2280 <__vector_1>
       8:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
       c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      10:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      14:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      18:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      1c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      20:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      24:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      28:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      2c:	0c 94 15 0c 	jmp	0x182a	; 0x182a <__vector_11>
      30:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      34:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      38:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      3c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      40:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      44:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      48:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      4c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      50:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      54:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      58:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      5c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      60:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      64:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      68:	10 20       	and	r1, r0
      6a:	18 20       	and	r1, r8
      6c:	20 20       	and	r2, r0
      6e:	28 20       	and	r2, r8
      70:	30 20       	and	r3, r0
      72:	38 20       	and	r3, r8
      74:	40 20       	and	r4, r0
      76:	55 20       	and	r5, r5
      78:	60 20       	and	r6, r0
      7a:	6b 20       	and	r6, r11
      7c:	76 20       	and	r7, r6
      7e:	81 20       	and	r8, r1
      80:	8c 20       	and	r8, r12
      82:	97 20       	and	r9, r7
      84:	a2 20       	and	r10, r2
      86:	ad 20       	and	r10, r13
      88:	b8 20       	and	r11, r8
      8a:	c3 20       	and	r12, r3
      8c:	ce 20       	and	r12, r14

0000008e <__trampolines_end>:
      8e:	6e 61       	ori	r22, 0x1E	; 30
      90:	6e 00       	.word	0x006e	; ????

00000092 <__c.2332>:
      92:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a2:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b2:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c2:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d2:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e2:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f2:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     102:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     112:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     122:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     132:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     142:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     152:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     162:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     172:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     182:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000190 <__c.2474>:
     190:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

0000019c <__ctors_end>:
     19c:	11 24       	eor	r1, r1
     19e:	1f be       	out	0x3f, r1	; 63
     1a0:	cf ef       	ldi	r28, 0xFF	; 255
     1a2:	d8 e0       	ldi	r29, 0x08	; 8
     1a4:	de bf       	out	0x3e, r29	; 62
     1a6:	cd bf       	out	0x3d, r28	; 61

000001a8 <__do_copy_data>:
     1a8:	11 e0       	ldi	r17, 0x01	; 1
     1aa:	a0 e0       	ldi	r26, 0x00	; 0
     1ac:	b1 e0       	ldi	r27, 0x01	; 1
     1ae:	ea e9       	ldi	r30, 0x9A	; 154
     1b0:	f0 e6       	ldi	r31, 0x60	; 96
     1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <__do_copy_data+0x10>
     1b4:	05 90       	lpm	r0, Z+
     1b6:	0d 92       	st	X+, r0
     1b8:	a4 3d       	cpi	r26, 0xD4	; 212
     1ba:	b1 07       	cpc	r27, r17
     1bc:	d9 f7       	brne	.-10     	; 0x1b4 <__do_copy_data+0xc>

000001be <__do_clear_bss>:
     1be:	26 e0       	ldi	r18, 0x06	; 6
     1c0:	a4 ed       	ldi	r26, 0xD4	; 212
     1c2:	b1 e0       	ldi	r27, 0x01	; 1
     1c4:	01 c0       	rjmp	.+2      	; 0x1c8 <.do_clear_bss_start>

000001c6 <.do_clear_bss_loop>:
     1c6:	1d 92       	st	X+, r1

000001c8 <.do_clear_bss_start>:
     1c8:	af 3e       	cpi	r26, 0xEF	; 239
     1ca:	b2 07       	cpc	r27, r18
     1cc:	e1 f7       	brne	.-8      	; 0x1c6 <.do_clear_bss_loop>
     1ce:	0e 94 b9 0c 	call	0x1972	; 0x1972 <main>
     1d2:	0c 94 4b 30 	jmp	0x6096	; 0x6096 <_exit>

000001d6 <__bad_interrupt>:
     1d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001da <Read>:
#define BMP180_R 0xEF
#define BMP180_W 0xEE

// чтение регистра 16 бит
uint16_t Read(uint8_t address) 
{
     1da:	0f 93       	push	r16
     1dc:	1f 93       	push	r17
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	c8 2f       	mov	r28, r24
	uint16_t msb=0;
	uint16_t lsb=0;
	uint16_t data;

	I2C_StartCondition();               // запуск i2c
     1e4:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     1e8:	8e ee       	ldi	r24, 0xEE	; 238
     1ea:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(address);	        // передача адреса памяти
     1ee:	8c 2f       	mov	r24, r28
     1f0:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     1f4:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>

	I2C_StartCondition();               // запуск i2c
     1f8:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(BMP180_R);        // передача адреса устройства, режим чтения
     1fc:	8f ee       	ldi	r24, 0xEF	; 239
     1fe:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	msb = I2C_ReadByte();
     202:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
     206:	c8 2f       	mov	r28, r24
     208:	d0 e0       	ldi	r29, 0x00	; 0
	lsb = I2C_ReadLastByte();
     20a:	0e 94 b5 19 	call	0x336a	; 0x336a <I2C_ReadLastByte>
     20e:	08 2f       	mov	r16, r24
     210:	10 e0       	ldi	r17, 0x00	; 0
	I2C_StopCondition();                // остановка i2c
     212:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>

	data = (uint16_t)((msb << 8) + lsb);
     216:	9c 2f       	mov	r25, r28
     218:	88 27       	eor	r24, r24
	return data;
}
     21a:	80 0f       	add	r24, r16
     21c:	91 1f       	adc	r25, r17
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	1f 91       	pop	r17
     224:	0f 91       	pop	r16
     226:	08 95       	ret

00000228 <BMP180_Calibration>:
// получить данные для калибровки
void BMP180_Calibration (void) 
{
	ac1 = Read(0xAA);
     228:	8a ea       	ldi	r24, 0xAA	; 170
     22a:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     22e:	90 93 a5 06 	sts	0x06A5, r25	; 0x8006a5 <ac1+0x1>
     232:	80 93 a4 06 	sts	0x06A4, r24	; 0x8006a4 <ac1>
	ac2 = Read(0xAC);
     236:	8c ea       	ldi	r24, 0xAC	; 172
     238:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     23c:	90 93 ad 06 	sts	0x06AD, r25	; 0x8006ad <ac2+0x1>
     240:	80 93 ac 06 	sts	0x06AC, r24	; 0x8006ac <ac2>
	ac3 = Read(0xAE);
     244:	8e ea       	ldi	r24, 0xAE	; 174
     246:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     24a:	90 93 bd 06 	sts	0x06BD, r25	; 0x8006bd <ac3+0x1>
     24e:	80 93 bc 06 	sts	0x06BC, r24	; 0x8006bc <ac3>
	ac4 = Read(0xB0);
     252:	80 eb       	ldi	r24, 0xB0	; 176
     254:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     258:	90 93 b1 06 	sts	0x06B1, r25	; 0x8006b1 <ac4+0x1>
     25c:	80 93 b0 06 	sts	0x06B0, r24	; 0x8006b0 <ac4>
	ac5 = Read(0xB2);
     260:	82 eb       	ldi	r24, 0xB2	; 178
     262:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     266:	90 93 ab 06 	sts	0x06AB, r25	; 0x8006ab <ac5+0x1>
     26a:	80 93 aa 06 	sts	0x06AA, r24	; 0x8006aa <ac5>
	ac6 = Read(0xB4);
     26e:	84 eb       	ldi	r24, 0xB4	; 180
     270:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     274:	90 93 a9 06 	sts	0x06A9, r25	; 0x8006a9 <ac6+0x1>
     278:	80 93 a8 06 	sts	0x06A8, r24	; 0x8006a8 <ac6>
	b1  = Read(0xB6);
     27c:	86 eb       	ldi	r24, 0xB6	; 182
     27e:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     282:	90 93 a7 06 	sts	0x06A7, r25	; 0x8006a7 <b1+0x1>
     286:	80 93 a6 06 	sts	0x06A6, r24	; 0x8006a6 <b1>
	b2  = Read(0xB8);
     28a:	88 eb       	ldi	r24, 0xB8	; 184
     28c:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     290:	90 93 a1 06 	sts	0x06A1, r25	; 0x8006a1 <b2+0x1>
     294:	80 93 a0 06 	sts	0x06A0, r24	; 0x8006a0 <b2>
	mb  = Read(0xBA);
     298:	8a eb       	ldi	r24, 0xBA	; 186
     29a:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     29e:	90 93 a3 06 	sts	0x06A3, r25	; 0x8006a3 <mb+0x1>
     2a2:	80 93 a2 06 	sts	0x06A2, r24	; 0x8006a2 <mb>
	mc  = Read(0xBC);
     2a6:	8c eb       	ldi	r24, 0xBC	; 188
     2a8:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     2ac:	90 93 b3 06 	sts	0x06B3, r25	; 0x8006b3 <mc+0x1>
     2b0:	80 93 b2 06 	sts	0x06B2, r24	; 0x8006b2 <mc>
	md  = Read(0xBE);
     2b4:	8e eb       	ldi	r24, 0xBE	; 190
     2b6:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     2ba:	90 93 af 06 	sts	0x06AF, r25	; 0x8006af <md+0x1>
     2be:	80 93 ae 06 	sts	0x06AE, r24	; 0x8006ae <md>
     2c2:	08 95       	ret

000002c4 <BMP180_get_temper>:
	md = 2705;*/
}
// прочитать значение температуры
int32_t BMP180_get_temper(void)
{
	I2C_StartCondition();               // запуск i2c
     2c4:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     2c8:	8e ee       	ldi	r24, 0xEE	; 238
     2ca:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0xF4);	        // передача адреса памяти
     2ce:	84 ef       	ldi	r24, 0xF4	; 244
     2d0:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0x2E);	        // передача разрешения (oss) адреса памяти температуры (можно так же как для давления)
     2d4:	8e e2       	ldi	r24, 0x2E	; 46
     2d6:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     2da:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2de:	8f e0       	ldi	r24, 0x0F	; 15
     2e0:	97 e2       	ldi	r25, 0x27	; 39
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <BMP180_get_temper+0x1e>
     2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <BMP180_get_temper+0x24>
     2e8:	00 00       	nop

	_delay_ms(5);                   // время на замер (от 5 до 26 мс в зависимости от разрешения (oss))

	return Read(0xF6);     // вычислить температуру
     2ea:	86 ef       	ldi	r24, 0xF6	; 246
     2ec:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     2f0:	bc 01       	movw	r22, r24
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	90 e0       	ldi	r25, 0x00	; 0
}
     2f6:	08 95       	ret

000002f8 <BMP180_get_pressure>:
// прочитать значение атмосферного давления
int32_t BMP180_get_pressure()
{
	I2C_StartCondition();               // запуск i2c
     2f8:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     2fc:	8e ee       	ldi	r24, 0xEE	; 238
     2fe:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0xF4);	        // передача адреса памяти
     302:	84 ef       	ldi	r24, 0xF4	; 244
     304:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0x34+(OSS<<6));	// передача разрешения (oss) адреса памяти температуры
     308:	84 ef       	ldi	r24, 0xF4	; 244
     30a:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     30e:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>
     312:	8f e1       	ldi	r24, 0x1F	; 31
     314:	9b ec       	ldi	r25, 0xCB	; 203
     316:	01 97       	sbiw	r24, 0x01	; 1
     318:	f1 f7       	brne	.-4      	; 0x316 <BMP180_get_pressure+0x1e>
     31a:	00 c0       	rjmp	.+0      	; 0x31c <BMP180_get_pressure+0x24>
     31c:	00 00       	nop

	_delay_ms(26);                  // время на замер (от 5 до 26 мс в зависимости от разрешения (oss))
	
	I2C_StartCondition();               // запуск i2c
     31e:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     322:	8e ee       	ldi	r24, 0xEE	; 238
     324:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0xF6);	        // передача адреса памяти
     328:	86 ef       	ldi	r24, 0xF6	; 246
     32a:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     32e:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>

	I2C_StartCondition();               // запуск i2c
     332:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(BMP180_R);        // передача адреса устройства, режим чтения
     336:	8f ee       	ldi	r24, 0xEF	; 239
     338:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	D1=I2C_ReadByte();             // MSB
     33c:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	a0 e0       	ldi	r26, 0x00	; 0
     344:	b0 e0       	ldi	r27, 0x00	; 0
     346:	80 93 b8 06 	sts	0x06B8, r24	; 0x8006b8 <D1>
     34a:	90 93 b9 06 	sts	0x06B9, r25	; 0x8006b9 <D1+0x1>
     34e:	a0 93 ba 06 	sts	0x06BA, r26	; 0x8006ba <D1+0x2>
     352:	b0 93 bb 06 	sts	0x06BB, r27	; 0x8006bb <D1+0x3>
	D2=I2C_ReadByte();             // LSB
     356:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	a0 e0       	ldi	r26, 0x00	; 0
     35e:	b0 e0       	ldi	r27, 0x00	; 0
     360:	80 93 b4 06 	sts	0x06B4, r24	; 0x8006b4 <D2>
     364:	90 93 b5 06 	sts	0x06B5, r25	; 0x8006b5 <D2+0x1>
     368:	a0 93 b6 06 	sts	0x06B6, r26	; 0x8006b6 <D2+0x2>
     36c:	b0 93 b7 06 	sts	0x06B7, r27	; 0x8006b7 <D2+0x3>
	D3=I2C_ReadLastByte();             // XLSB
     370:	0e 94 b5 19 	call	0x336a	; 0x336a <I2C_ReadLastByte>
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b0 e0       	ldi	r27, 0x00	; 0
     37a:	80 93 9c 06 	sts	0x069C, r24	; 0x80069c <D3>
     37e:	90 93 9d 06 	sts	0x069D, r25	; 0x80069d <D3+0x1>
     382:	a0 93 9e 06 	sts	0x069E, r26	; 0x80069e <D3+0x2>
     386:	b0 93 9f 06 	sts	0x069F, r27	; 0x80069f <D3+0x3>
	I2C_StopCondition();                // остановка i2c
     38a:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>
	

	return (int32_t)(((D1 << 16) + (D2 << 8) + D3) >> (8-OSS));  // вычислить давление (в Па ?)
     38e:	40 91 b8 06 	lds	r20, 0x06B8	; 0x8006b8 <D1>
     392:	50 91 b9 06 	lds	r21, 0x06B9	; 0x8006b9 <D1+0x1>
     396:	60 91 ba 06 	lds	r22, 0x06BA	; 0x8006ba <D1+0x2>
     39a:	70 91 bb 06 	lds	r23, 0x06BB	; 0x8006bb <D1+0x3>
     39e:	ba 01       	movw	r22, r20
     3a0:	55 27       	eor	r21, r21
     3a2:	44 27       	eor	r20, r20
     3a4:	80 91 b4 06 	lds	r24, 0x06B4	; 0x8006b4 <D2>
     3a8:	90 91 b5 06 	lds	r25, 0x06B5	; 0x8006b5 <D2+0x1>
     3ac:	a0 91 b6 06 	lds	r26, 0x06B6	; 0x8006b6 <D2+0x2>
     3b0:	b0 91 b7 06 	lds	r27, 0x06B7	; 0x8006b7 <D2+0x3>
     3b4:	ba 2f       	mov	r27, r26
     3b6:	a9 2f       	mov	r26, r25
     3b8:	98 2f       	mov	r25, r24
     3ba:	88 27       	eor	r24, r24
     3bc:	48 0f       	add	r20, r24
     3be:	59 1f       	adc	r21, r25
     3c0:	6a 1f       	adc	r22, r26
     3c2:	7b 1f       	adc	r23, r27
     3c4:	80 91 9c 06 	lds	r24, 0x069C	; 0x80069c <D3>
     3c8:	90 91 9d 06 	lds	r25, 0x069D	; 0x80069d <D3+0x1>
     3cc:	a0 91 9e 06 	lds	r26, 0x069E	; 0x80069e <D3+0x2>
     3d0:	b0 91 9f 06 	lds	r27, 0x069F	; 0x80069f <D3+0x3>
     3d4:	84 0f       	add	r24, r20
     3d6:	95 1f       	adc	r25, r21
     3d8:	a6 1f       	adc	r26, r22
     3da:	b7 1f       	adc	r27, r23
     3dc:	bc 01       	movw	r22, r24
     3de:	cd 01       	movw	r24, r26
     3e0:	68 94       	set
     3e2:	14 f8       	bld	r1, 4
     3e4:	96 95       	lsr	r25
     3e6:	87 95       	ror	r24
     3e8:	77 95       	ror	r23
     3ea:	67 95       	ror	r22
     3ec:	16 94       	lsr	r1
     3ee:	d1 f7       	brne	.-12     	; 0x3e4 <BMP180_get_pressure+0xec>
}
     3f0:	08 95       	ret

000003f2 <BMP180_calculation>:
// получить значения температуры и атмосферного давления с учетом калибровочных коэффициентов
int32_t BMP180_calculation () 
{
     3f2:	4f 92       	push	r4
     3f4:	5f 92       	push	r5
     3f6:	6f 92       	push	r6
     3f8:	7f 92       	push	r7
     3fa:	8f 92       	push	r8
     3fc:	9f 92       	push	r9
     3fe:	af 92       	push	r10
     400:	bf 92       	push	r11
     402:	cf 92       	push	r12
     404:	df 92       	push	r13
     406:	ef 92       	push	r14
     408:	ff 92       	push	r15
     40a:	0f 93       	push	r16
     40c:	1f 93       	push	r17
     40e:	cf 93       	push	r28
     410:	df 93       	push	r29
     412:	00 d0       	rcall	.+0      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     414:	00 d0       	rcall	.+0      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     416:	cd b7       	in	r28, 0x3d	; 61
     418:	de b7       	in	r29, 0x3e	; 62
	int32_t ut=0;
	int32_t up=0;
	int32_t x1, x2, b5, b6, x3, b3, p;
	uint32_t b4, b7;

	ut += BMP180_get_temper();
     41a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <BMP180_get_temper>
     41e:	6b 01       	movw	r12, r22
     420:	7c 01       	movw	r14, r24

	up = BMP180_get_pressure();
     422:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <BMP180_get_pressure>
     426:	69 83       	std	Y+1, r22	; 0x01
     428:	7a 83       	std	Y+2, r23	; 0x02
     42a:	8b 83       	std	Y+3, r24	; 0x03
     42c:	9c 83       	std	Y+4, r25	; 0x04

	x1 = ((int32_t)ut - (int32_t)ac6) * (int32_t)ac5 >> 15;
     42e:	80 91 a8 06 	lds	r24, 0x06A8	; 0x8006a8 <ac6>
     432:	90 91 a9 06 	lds	r25, 0x06A9	; 0x8006a9 <ac6+0x1>
     436:	a7 01       	movw	r20, r14
     438:	96 01       	movw	r18, r12
     43a:	28 1b       	sub	r18, r24
     43c:	39 0b       	sbc	r19, r25
     43e:	41 09       	sbc	r20, r1
     440:	51 09       	sbc	r21, r1
     442:	a0 91 aa 06 	lds	r26, 0x06AA	; 0x8006aa <ac5>
     446:	b0 91 ab 06 	lds	r27, 0x06AB	; 0x8006ab <ac5+0x1>
     44a:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
     44e:	2b 01       	movw	r4, r22
     450:	3c 01       	movw	r6, r24
     452:	03 2e       	mov	r0, r19
     454:	3f e0       	ldi	r19, 0x0F	; 15
     456:	75 94       	asr	r7
     458:	67 94       	ror	r6
     45a:	57 94       	ror	r5
     45c:	47 94       	ror	r4
     45e:	3a 95       	dec	r19
     460:	d1 f7       	brne	.-12     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     462:	30 2d       	mov	r19, r0
	x2 = ((int32_t)mc << 11) / (x1 + md);
     464:	60 91 b2 06 	lds	r22, 0x06B2	; 0x8006b2 <mc>
     468:	70 91 b3 06 	lds	r23, 0x06B3	; 0x8006b3 <mc+0x1>
     46c:	cb 01       	movw	r24, r22
     46e:	77 0f       	add	r23, r23
     470:	aa 0b       	sbc	r26, r26
     472:	bb 0b       	sbc	r27, r27
     474:	bc 01       	movw	r22, r24
     476:	cd 01       	movw	r24, r26
     478:	05 2e       	mov	r0, r21
     47a:	5b e0       	ldi	r21, 0x0B	; 11
     47c:	66 0f       	add	r22, r22
     47e:	77 1f       	adc	r23, r23
     480:	88 1f       	adc	r24, r24
     482:	99 1f       	adc	r25, r25
     484:	5a 95       	dec	r21
     486:	d1 f7       	brne	.-12     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     488:	50 2d       	mov	r21, r0
     48a:	20 91 ae 06 	lds	r18, 0x06AE	; 0x8006ae <md>
     48e:	30 91 af 06 	lds	r19, 0x06AF	; 0x8006af <md+0x1>
     492:	89 01       	movw	r16, r18
     494:	33 0f       	add	r19, r19
     496:	22 0b       	sbc	r18, r18
     498:	33 0b       	sbc	r19, r19
     49a:	a9 01       	movw	r20, r18
     49c:	98 01       	movw	r18, r16
     49e:	24 0d       	add	r18, r4
     4a0:	35 1d       	adc	r19, r5
     4a2:	46 1d       	adc	r20, r6
     4a4:	57 1d       	adc	r21, r7
     4a6:	0e 94 d4 2a 	call	0x55a8	; 0x55a8 <__divmodsi4>
	b5 = x1 + x2;
     4aa:	42 0e       	add	r4, r18
     4ac:	53 1e       	adc	r5, r19
     4ae:	64 1e       	adc	r6, r20
     4b0:	75 1e       	adc	r7, r21
	//*temperature = (b5 + 8) >> 4;
	
	b6 = b5 - 4000;
     4b2:	80 ea       	ldi	r24, 0xA0	; 160
     4b4:	48 1a       	sub	r4, r24
     4b6:	8f e0       	ldi	r24, 0x0F	; 15
     4b8:	58 0a       	sbc	r5, r24
     4ba:	61 08       	sbc	r6, r1
     4bc:	71 08       	sbc	r7, r1
	x1 = (b2 * ((b6 * b6) >> 12)) >> 11;
     4be:	a3 01       	movw	r20, r6
     4c0:	92 01       	movw	r18, r4
     4c2:	c3 01       	movw	r24, r6
     4c4:	b2 01       	movw	r22, r4
     4c6:	0e 94 a2 2a 	call	0x5544	; 0x5544 <__mulsi3>
     4ca:	4b 01       	movw	r8, r22
     4cc:	5c 01       	movw	r10, r24
     4ce:	07 2e       	mov	r0, r23
     4d0:	7c e0       	ldi	r23, 0x0C	; 12
     4d2:	b5 94       	asr	r11
     4d4:	a7 94       	ror	r10
     4d6:	97 94       	ror	r9
     4d8:	87 94       	ror	r8
     4da:	7a 95       	dec	r23
     4dc:	d1 f7       	brne	.-12     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
     4de:	70 2d       	mov	r23, r0
     4e0:	a0 91 a0 06 	lds	r26, 0x06A0	; 0x8006a0 <b2>
     4e4:	b0 91 a1 06 	lds	r27, 0x06A1	; 0x8006a1 <b2+0x1>
     4e8:	a5 01       	movw	r20, r10
     4ea:	94 01       	movw	r18, r8
     4ec:	0e 94 04 2b 	call	0x5608	; 0x5608 <__mulshisi3>
     4f0:	6b 01       	movw	r12, r22
     4f2:	7c 01       	movw	r14, r24
     4f4:	0b 2e       	mov	r0, r27
     4f6:	bb e0       	ldi	r27, 0x0B	; 11
     4f8:	f5 94       	asr	r15
     4fa:	e7 94       	ror	r14
     4fc:	d7 94       	ror	r13
     4fe:	c7 94       	ror	r12
     500:	ba 95       	dec	r27
     502:	d1 f7       	brne	.-12     	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
     504:	b0 2d       	mov	r27, r0
	x2 = (ac2 * b6) >> 11;
     506:	a0 91 ac 06 	lds	r26, 0x06AC	; 0x8006ac <ac2>
     50a:	b0 91 ad 06 	lds	r27, 0x06AD	; 0x8006ad <ac2+0x1>
     50e:	a3 01       	movw	r20, r6
     510:	92 01       	movw	r18, r4
     512:	0e 94 04 2b 	call	0x5608	; 0x5608 <__mulshisi3>
     516:	dc 01       	movw	r26, r24
     518:	cb 01       	movw	r24, r22
     51a:	07 2e       	mov	r0, r23
     51c:	7b e0       	ldi	r23, 0x0B	; 11
     51e:	b5 95       	asr	r27
     520:	a7 95       	ror	r26
     522:	97 95       	ror	r25
     524:	87 95       	ror	r24
     526:	7a 95       	dec	r23
     528:	d1 f7       	brne	.-12     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
     52a:	70 2d       	mov	r23, r0
	x3 = x1 + x2;
     52c:	c8 0e       	add	r12, r24
     52e:	d9 1e       	adc	r13, r25
     530:	ea 1e       	adc	r14, r26
     532:	fb 1e       	adc	r15, r27
	b3 = (((((int32_t) ac1) * 4 + x3)<<OSS) + 2)>> 2;
     534:	80 91 a4 06 	lds	r24, 0x06A4	; 0x8006a4 <ac1>
     538:	90 91 a5 06 	lds	r25, 0x06A5	; 0x8006a5 <ac1+0x1>
     53c:	09 2e       	mov	r0, r25
     53e:	00 0c       	add	r0, r0
     540:	aa 0b       	sbc	r26, r26
     542:	bb 0b       	sbc	r27, r27
     544:	88 0f       	add	r24, r24
     546:	99 1f       	adc	r25, r25
     548:	aa 1f       	adc	r26, r26
     54a:	bb 1f       	adc	r27, r27
     54c:	88 0f       	add	r24, r24
     54e:	99 1f       	adc	r25, r25
     550:	aa 1f       	adc	r26, r26
     552:	bb 1f       	adc	r27, r27
     554:	c8 0e       	add	r12, r24
     556:	d9 1e       	adc	r13, r25
     558:	ea 1e       	adc	r14, r26
     55a:	fb 1e       	adc	r15, r27
     55c:	cc 0c       	add	r12, r12
     55e:	dd 1c       	adc	r13, r13
     560:	ee 1c       	adc	r14, r14
     562:	ff 1c       	adc	r15, r15
	x1 = (ac3 * b6) >> 13;
     564:	a0 91 bc 06 	lds	r26, 0x06BC	; 0x8006bc <ac3>
     568:	b0 91 bd 06 	lds	r27, 0x06BD	; 0x8006bd <ac3+0x1>
     56c:	0e 94 04 2b 	call	0x5608	; 0x5608 <__mulshisi3>
     570:	2b 01       	movw	r4, r22
     572:	3c 01       	movw	r6, r24
     574:	03 2e       	mov	r0, r19
     576:	3d e0       	ldi	r19, 0x0D	; 13
     578:	75 94       	asr	r7
     57a:	67 94       	ror	r6
     57c:	57 94       	ror	r5
     57e:	47 94       	ror	r4
     580:	3a 95       	dec	r19
     582:	d1 f7       	brne	.-12     	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
     584:	30 2d       	mov	r19, r0
	x2 = (b1 * ((b6 * b6) >> 12)) >> 16;
     586:	a0 91 a6 06 	lds	r26, 0x06A6	; 0x8006a6 <b1>
     58a:	b0 91 a7 06 	lds	r27, 0x06A7	; 0x8006a7 <b1+0x1>
     58e:	a5 01       	movw	r20, r10
     590:	94 01       	movw	r18, r8
     592:	0e 94 04 2b 	call	0x5608	; 0x5608 <__mulshisi3>
     596:	bb 27       	eor	r27, r27
     598:	97 fd       	sbrc	r25, 7
     59a:	b0 95       	com	r27
     59c:	ab 2f       	mov	r26, r27
	x3 = ((x1 + x2) + 2) >> 2;
     59e:	84 0d       	add	r24, r4
     5a0:	95 1d       	adc	r25, r5
     5a2:	a6 1d       	adc	r26, r6
     5a4:	b7 1d       	adc	r27, r7
     5a6:	02 96       	adiw	r24, 0x02	; 2
     5a8:	a1 1d       	adc	r26, r1
     5aa:	b1 1d       	adc	r27, r1
     5ac:	b5 95       	asr	r27
     5ae:	a7 95       	ror	r26
     5b0:	97 95       	ror	r25
     5b2:	87 95       	ror	r24
     5b4:	b5 95       	asr	r27
     5b6:	a7 95       	ror	r26
     5b8:	97 95       	ror	r25
     5ba:	87 95       	ror	r24
	b4 = (ac4 * (uint32_t) (x3 + 32768)) >> 15;
     5bc:	9c 01       	movw	r18, r24
     5be:	ad 01       	movw	r20, r26
     5c0:	30 58       	subi	r19, 0x80	; 128
     5c2:	4f 4f       	sbci	r20, 0xFF	; 255
     5c4:	5f 4f       	sbci	r21, 0xFF	; 255
     5c6:	a0 91 b0 06 	lds	r26, 0x06B0	; 0x8006b0 <ac4>
     5ca:	b0 91 b1 06 	lds	r27, 0x06B1	; 0x8006b1 <ac4+0x1>
     5ce:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
     5d2:	2b 01       	movw	r4, r22
     5d4:	3c 01       	movw	r6, r24
     5d6:	03 2e       	mov	r0, r19
     5d8:	3f e0       	ldi	r19, 0x0F	; 15
     5da:	76 94       	lsr	r7
     5dc:	67 94       	ror	r6
     5de:	57 94       	ror	r5
     5e0:	47 94       	ror	r4
     5e2:	3a 95       	dec	r19
     5e4:	d1 f7       	brne	.-12     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
     5e6:	30 2d       	mov	r19, r0
	b7 = ((uint32_t) (up - b3) * (50000 >> OSS));
     5e8:	29 81       	ldd	r18, Y+1	; 0x01
     5ea:	3a 81       	ldd	r19, Y+2	; 0x02
     5ec:	4b 81       	ldd	r20, Y+3	; 0x03
     5ee:	5c 81       	ldd	r21, Y+4	; 0x04
     5f0:	2c 19       	sub	r18, r12
     5f2:	3d 09       	sbc	r19, r13
     5f4:	4e 09       	sbc	r20, r14
     5f6:	5f 09       	sbc	r21, r15
     5f8:	aa e6       	ldi	r26, 0x6A	; 106
     5fa:	b8 e1       	ldi	r27, 0x18	; 24
     5fc:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
	//p = b7 < 0x80000000 ? (b7 * 2) / b4 : (b7 / b4) * 2;
	
	if (b7 < 0x80000000)
     600:	99 23       	and	r25, r25
     602:	5c f0       	brlt	.+22     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
	{
		p = (b7 << 1) / b4;
     604:	66 0f       	add	r22, r22
     606:	77 1f       	adc	r23, r23
     608:	88 1f       	adc	r24, r24
     60a:	99 1f       	adc	r25, r25
     60c:	a3 01       	movw	r20, r6
     60e:	92 01       	movw	r18, r4
     610:	0e 94 b2 2a 	call	0x5564	; 0x5564 <__udivmodsi4>
     614:	29 01       	movw	r4, r18
     616:	3a 01       	movw	r6, r20
     618:	0a c0       	rjmp	.+20     	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
	}
	else
	{
		p = (b7 / b4) << 1;
     61a:	a3 01       	movw	r20, r6
     61c:	92 01       	movw	r18, r4
     61e:	0e 94 b2 2a 	call	0x5564	; 0x5564 <__udivmodsi4>
     622:	29 01       	movw	r4, r18
     624:	3a 01       	movw	r6, r20
     626:	44 0c       	add	r4, r4
     628:	55 1c       	adc	r5, r5
     62a:	66 1c       	adc	r6, r6
     62c:	77 1c       	adc	r7, r7
	}

	x1 = (p / (pow(2,8))) * (p / (pow(2,8)));
     62e:	c3 01       	movw	r24, r6
     630:	b2 01       	movw	r22, r4
     632:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
     636:	6b 01       	movw	r12, r22
     638:	7c 01       	movw	r14, r24
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	40 e8       	ldi	r20, 0x80	; 128
     640:	5b e3       	ldi	r21, 0x3B	; 59
     642:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
     646:	9b 01       	movw	r18, r22
     648:	ac 01       	movw	r20, r24
     64a:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
     64e:	0e 94 cb 25 	call	0x4b96	; 0x4b96 <__fixsfsi>
     652:	9b 01       	movw	r18, r22
     654:	ac 01       	movw	r20, r24
	x1 = (x1 * 3038) / (pow(2,16));
     656:	ae ed       	ldi	r26, 0xDE	; 222
     658:	bb e0       	ldi	r27, 0x0B	; 11
     65a:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
     65e:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	40 e8       	ldi	r20, 0x80	; 128
     668:	57 e3       	ldi	r21, 0x37	; 55
     66a:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
     66e:	0e 94 cb 25 	call	0x4b96	; 0x4b96 <__fixsfsi>
     672:	4b 01       	movw	r8, r22
     674:	5c 01       	movw	r10, r24
	x2 = (-7357 * p) / (pow(2,16));
     676:	a3 e4       	ldi	r26, 0x43	; 67
     678:	b3 ee       	ldi	r27, 0xE3	; 227
     67a:	a3 01       	movw	r20, r6
     67c:	92 01       	movw	r18, r4
     67e:	0e 94 07 2b 	call	0x560e	; 0x560e <__mulohisi3>
     682:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	40 e8       	ldi	r20, 0x80	; 128
     68c:	57 e3       	ldi	r21, 0x37	; 55
     68e:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
     692:	0e 94 cb 25 	call	0x4b96	; 0x4b96 <__fixsfsi>
	pressure = p + ((x1 + x2 + 3791) / (pow(2,4)));
     696:	dc 01       	movw	r26, r24
     698:	cb 01       	movw	r24, r22
     69a:	88 0d       	add	r24, r8
     69c:	99 1d       	adc	r25, r9
     69e:	aa 1d       	adc	r26, r10
     6a0:	bb 1d       	adc	r27, r11
     6a2:	bc 01       	movw	r22, r24
     6a4:	cd 01       	movw	r24, r26
     6a6:	61 53       	subi	r22, 0x31	; 49
     6a8:	71 4f       	sbci	r23, 0xF1	; 241
     6aa:	8f 4f       	sbci	r24, 0xFF	; 255
     6ac:	9f 4f       	sbci	r25, 0xFF	; 255
     6ae:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
     6b2:	20 e0       	ldi	r18, 0x00	; 0
     6b4:	30 e0       	ldi	r19, 0x00	; 0
     6b6:	40 e8       	ldi	r20, 0x80	; 128
     6b8:	5d e3       	ldi	r21, 0x3D	; 61
     6ba:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
     6be:	9b 01       	movw	r18, r22
     6c0:	ac 01       	movw	r20, r24
     6c2:	c7 01       	movw	r24, r14
     6c4:	b6 01       	movw	r22, r12
     6c6:	0e 94 e8 24 	call	0x49d0	; 0x49d0 <__addsf3>
     6ca:	0e 94 cb 25 	call	0x4b96	; 0x4b96 <__fixsfsi>
     6ce:	60 93 d4 01 	sts	0x01D4, r22	; 0x8001d4 <__data_end>
     6d2:	70 93 d5 01 	sts	0x01D5, r23	; 0x8001d5 <__data_end+0x1>
     6d6:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <__data_end+0x2>
     6da:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <__data_end+0x3>
	return pressure;
}
     6de:	0f 90       	pop	r0
     6e0:	0f 90       	pop	r0
     6e2:	0f 90       	pop	r0
     6e4:	0f 90       	pop	r0
     6e6:	df 91       	pop	r29
     6e8:	cf 91       	pop	r28
     6ea:	1f 91       	pop	r17
     6ec:	0f 91       	pop	r16
     6ee:	ff 90       	pop	r15
     6f0:	ef 90       	pop	r14
     6f2:	df 90       	pop	r13
     6f4:	cf 90       	pop	r12
     6f6:	bf 90       	pop	r11
     6f8:	af 90       	pop	r10
     6fa:	9f 90       	pop	r9
     6fc:	8f 90       	pop	r8
     6fe:	7f 90       	pop	r7
     700:	6f 90       	pop	r6
     702:	5f 90       	pop	r5
     704:	4f 90       	pop	r4
     706:	08 95       	ret

00000708 <dht22_init>:
     708:	2f ef       	ldi	r18, 0xFF	; 255
     70a:	83 ed       	ldi	r24, 0xD3	; 211
     70c:	90 e3       	ldi	r25, 0x30	; 48
     70e:	21 50       	subi	r18, 0x01	; 1
     710:	80 40       	sbci	r24, 0x00	; 0
     712:	90 40       	sbci	r25, 0x00	; 0
     714:	e1 f7       	brne	.-8      	; 0x70e <dht22_init+0x6>
     716:	00 c0       	rjmp	.+0      	; 0x718 <dht22_init+0x10>
     718:	00 00       	nop
#include "DHT22.h"

uint8_t dht22_init (void)
{
	_delay_ms(2000);
	DDRC |= (1<<DHT22_PORT);   // set as output
     71a:	87 b1       	in	r24, 0x07	; 7
     71c:	81 60       	ori	r24, 0x01	; 1
     71e:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1<<DHT22_PORT);// pull the pin high
     720:	88 b1       	in	r24, 0x08	; 8
     722:	81 60       	ori	r24, 0x01	; 1
     724:	88 b9       	out	0x08, r24	; 8

	return 0;
}
     726:	80 e0       	ldi	r24, 0x00	; 0
     728:	08 95       	ret

0000072a <dht22_GetData>:
uint8_t dht22_GetData (uint8_t *data)
{
     72a:	bc 01       	movw	r22, r24
	uint8_t i, j = 0;
	DDRC |= (1<<DHT22_PORT);   // set as output
     72c:	87 b1       	in	r24, 0x07	; 7
     72e:	81 60       	ori	r24, 0x01	; 1
     730:	87 b9       	out	0x07, r24	; 7
	//reset ports
	PORTC &= ~(1<<DHT22_PORT);// pull the pin low
     732:	88 b1       	in	r24, 0x08	; 8
     734:	8e 7f       	andi	r24, 0xFE	; 254
     736:	88 b9       	out	0x08, r24	; 8
	PORTC |= (1<<DHT22_PORT);// pull the pin high
     738:	88 b1       	in	r24, 0x08	; 8
     73a:	81 60       	ori	r24, 0x01	; 1
     73c:	88 b9       	out	0x08, r24	; 8
     73e:	2f ef       	ldi	r18, 0xFF	; 255
     740:	80 e7       	ldi	r24, 0x70	; 112
     742:	92 e0       	ldi	r25, 0x02	; 2
     744:	21 50       	subi	r18, 0x01	; 1
     746:	80 40       	sbci	r24, 0x00	; 0
     748:	90 40       	sbci	r25, 0x00	; 0
     74a:	e1 f7       	brne	.-8      	; 0x744 <dht22_GetData+0x1a>
     74c:	00 c0       	rjmp	.+0      	; 0x74e <dht22_GetData+0x24>
     74e:	00 00       	nop
	_delay_ms(100);
	//start
	PORTC &= ~(1<<DHT22_PORT);// pull the pin low
     750:	88 b1       	in	r24, 0x08	; 8
     752:	8e 7f       	andi	r24, 0xFE	; 254
     754:	88 b9       	out	0x08, r24	; 8
     756:	8f e9       	ldi	r24, 0x9F	; 159
     758:	9c e8       	ldi	r25, 0x8C	; 140
     75a:	01 97       	sbiw	r24, 0x01	; 1
     75c:	f1 f7       	brne	.-4      	; 0x75a <dht22_GetData+0x30>
     75e:	00 c0       	rjmp	.+0      	; 0x760 <dht22_GetData+0x36>
     760:	00 00       	nop
	_delay_ms(18);
	PORTC |= (1<<DHT22_PORT);// pull the pin high
     762:	88 b1       	in	r24, 0x08	; 8
     764:	81 60       	ori	r24, 0x01	; 1
     766:	88 b9       	out	0x08, r24	; 8
	//ждем ответа датчика
	DDRC &= ~(1<<DHT22_PORT);   // set as input
     768:	87 b1       	in	r24, 0x07	; 7
     76a:	8e 7f       	andi	r24, 0xFE	; 254
     76c:	87 b9       	out	0x07, r24	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     76e:	90 ea       	ldi	r25, 0xA0	; 160
     770:	9a 95       	dec	r25
     772:	f1 f7       	brne	.-4      	; 0x770 <dht22_GetData+0x46>
	_delay_us(60);//экспериментом выявлено 60 а не 40 сек
	//если датчик не ответил притягиванием шины, то ошибка
	if (PINC & (1 << DHT22_PORT))
     774:	30 99       	sbic	0x06, 0	; 6
     776:	38 c0       	rjmp	.+112    	; 0x7e8 <dht22_GetData+0xbe>
     778:	25 ed       	ldi	r18, 0xD5	; 213
     77a:	2a 95       	dec	r18
     77c:	f1 f7       	brne	.-4      	; 0x77a <dht22_GetData+0x50>
     77e:	00 00       	nop
	{
		return 0;
	}
	_delay_us(80);
	//если датчик не отпустил шину, то ошибка
	if (!(PINC & (1 << DHT22_PORT)))
     780:	96 b1       	in	r25, 0x06	; 6
     782:	89 2f       	mov	r24, r25
     784:	81 70       	andi	r24, 0x01	; 1
     786:	90 ff       	sbrs	r25, 0
     788:	30 c0       	rjmp	.+96     	; 0x7ea <dht22_GetData+0xc0>
     78a:	85 ed       	ldi	r24, 0xD5	; 213
     78c:	8a 95       	dec	r24
     78e:	f1 f7       	brne	.-4      	; 0x78c <dht22_GetData+0x62>
     790:	00 00       	nop
	}
	_delay_us(80);
	//читаем данные (записываем байты в массив наоборот,
	//т.к. сначала передается старший, чтобы потом
	//не переворачивать двухбайтовый результат
	for (j=0; j<5; j++)
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	25 c0       	rjmp	.+74     	; 0x7e0 <dht22_GetData+0xb6>
	{
		data[4-j] = 0;
     796:	e4 e0       	ldi	r30, 0x04	; 4
     798:	f0 e0       	ldi	r31, 0x00	; 0
     79a:	e8 1b       	sub	r30, r24
     79c:	f1 09       	sbc	r31, r1
     79e:	e6 0f       	add	r30, r22
     7a0:	f7 1f       	adc	r31, r23
     7a2:	10 82       	st	Z, r1
		for (i = 0; i<8; i++)
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	19 c0       	rjmp	.+50     	; 0x7da <dht22_GetData+0xb0>
		{
			while(!(PINC & (1 << DHT22_PORT)));//ждем отпускания шины
     7a8:	30 9b       	sbis	0x06, 0	; 6
     7aa:	fe cf       	rjmp	.-4      	; 0x7a8 <dht22_GetData+0x7e>
     7ac:	2d e5       	ldi	r18, 0x5D	; 93
     7ae:	2a 95       	dec	r18
     7b0:	f1 f7       	brne	.-4      	; 0x7ae <dht22_GetData+0x84>
     7b2:	00 00       	nop
			_delay_us(35);
			if (PINC & (1 << DHT22_PORT))//читаем результат по прошествии 30 микросекунд
     7b4:	30 9b       	sbis	0x06, 0	; 6
     7b6:	0e c0       	rjmp	.+28     	; 0x7d4 <dht22_GetData+0xaa>
			//если шина за это время не притянулась к земле, то значит это единица, иначе ноль
			data[4-j] |= (1<<(7-i));
     7b8:	47 e0       	ldi	r20, 0x07	; 7
     7ba:	50 e0       	ldi	r21, 0x00	; 0
     7bc:	49 1b       	sub	r20, r25
     7be:	51 09       	sbc	r21, r1
     7c0:	21 e0       	ldi	r18, 0x01	; 1
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <dht22_GetData+0xa0>
     7c6:	22 0f       	add	r18, r18
     7c8:	33 1f       	adc	r19, r19
     7ca:	4a 95       	dec	r20
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <dht22_GetData+0x9c>
     7ce:	30 81       	ld	r19, Z
     7d0:	23 2b       	or	r18, r19
     7d2:	20 83       	st	Z, r18
			while(PINC & (1 << DHT22_PORT));//ждем пока датчик притянет шину(в случае единицы)
     7d4:	30 99       	sbic	0x06, 0	; 6
     7d6:	fe cf       	rjmp	.-4      	; 0x7d4 <dht22_GetData+0xaa>
	//т.к. сначала передается старший, чтобы потом
	//не переворачивать двухбайтовый результат
	for (j=0; j<5; j++)
	{
		data[4-j] = 0;
		for (i = 0; i<8; i++)
     7d8:	9f 5f       	subi	r25, 0xFF	; 255
     7da:	98 30       	cpi	r25, 0x08	; 8
     7dc:	28 f3       	brcs	.-54     	; 0x7a8 <dht22_GetData+0x7e>
	}
	_delay_us(80);
	//читаем данные (записываем байты в массив наоборот,
	//т.к. сначала передается старший, чтобы потом
	//не переворачивать двухбайтовый результат
	for (j=0; j<5; j++)
     7de:	8f 5f       	subi	r24, 0xFF	; 255
     7e0:	85 30       	cpi	r24, 0x05	; 5
     7e2:	c8 f2       	brcs	.-78     	; 0x796 <dht22_GetData+0x6c>
			//если шина за это время не притянулась к земле, то значит это единица, иначе ноль
			data[4-j] |= (1<<(7-i));
			while(PINC & (1 << DHT22_PORT));//ждем пока датчик притянет шину(в случае единицы)
		}
	}
	return 1;
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	08 95       	ret
	DDRC &= ~(1<<DHT22_PORT);   // set as input
	_delay_us(60);//экспериментом выявлено 60 а не 40 сек
	//если датчик не ответил притягиванием шины, то ошибка
	if (PINC & (1 << DHT22_PORT))
	{
		return 0;
     7e8:	80 e0       	ldi	r24, 0x00	; 0
			data[4-j] |= (1<<(7-i));
			while(PINC & (1 << DHT22_PORT));//ждем пока датчик притянет шину(в случае единицы)
		}
	}
	return 1;
     7ea:	08 95       	ret

000007ec <LCD_12864_Draw_pixel>:
			LCD_12864_send_data(0x00);
			LCD_12864_send_data(0x00);
		}
	}
	LCD_12864_Clean_Frame_buffer();
}
     7ec:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7f0:	69 17       	cp	r22, r25
     7f2:	e0 f4       	brcc	.+56     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     7f4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     7f8:	89 17       	cp	r24, r25
     7fa:	c0 f4       	brcc	.+48     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     7fc:	96 2f       	mov	r25, r22
     7fe:	96 95       	lsr	r25
     800:	96 95       	lsr	r25
     802:	96 95       	lsr	r25
     804:	e8 2f       	mov	r30, r24
     806:	f0 e0       	ldi	r31, 0x00	; 0
     808:	80 e8       	ldi	r24, 0x80	; 128
     80a:	98 9f       	mul	r25, r24
     80c:	e0 0d       	add	r30, r0
     80e:	f1 1d       	adc	r31, r1
     810:	11 24       	eor	r1, r1
     812:	67 70       	andi	r22, 0x07	; 7
     814:	81 e0       	ldi	r24, 0x01	; 1
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	02 c0       	rjmp	.+4      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     81a:	88 0f       	add	r24, r24
     81c:	99 1f       	adc	r25, r25
     81e:	6a 95       	dec	r22
     820:	e2 f7       	brpl	.-8      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     822:	ef 56       	subi	r30, 0x6F	; 111
     824:	fd 4f       	sbci	r31, 0xFD	; 253
     826:	90 81       	ld	r25, Z
     828:	89 2b       	or	r24, r25
     82a:	80 83       	st	Z, r24
     82c:	08 95       	ret

0000082e <LCD_12864_Clean_pixel>:
     82e:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     832:	69 17       	cp	r22, r25
     834:	e0 f4       	brcc	.+56     	; 0x86e <LCD_12864_Clean_pixel+0x40>
     836:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     83a:	89 17       	cp	r24, r25
     83c:	c0 f4       	brcc	.+48     	; 0x86e <LCD_12864_Clean_pixel+0x40>
     83e:	96 2f       	mov	r25, r22
     840:	96 95       	lsr	r25
     842:	96 95       	lsr	r25
     844:	96 95       	lsr	r25
     846:	e8 2f       	mov	r30, r24
     848:	f0 e0       	ldi	r31, 0x00	; 0
     84a:	80 e8       	ldi	r24, 0x80	; 128
     84c:	98 9f       	mul	r25, r24
     84e:	e0 0d       	add	r30, r0
     850:	f1 1d       	adc	r31, r1
     852:	11 24       	eor	r1, r1
     854:	67 70       	andi	r22, 0x07	; 7
     856:	8e ef       	ldi	r24, 0xFE	; 254
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	02 c0       	rjmp	.+4      	; 0x860 <LCD_12864_Clean_pixel+0x32>
     85c:	88 0f       	add	r24, r24
     85e:	99 1f       	adc	r25, r25
     860:	6a 95       	dec	r22
     862:	e2 f7       	brpl	.-8      	; 0x85c <LCD_12864_Clean_pixel+0x2e>
     864:	ef 56       	subi	r30, 0x6F	; 111
     866:	fd 4f       	sbci	r31, 0xFD	; 253
     868:	90 81       	ld	r25, Z
     86a:	89 23       	and	r24, r25
     86c:	80 83       	st	Z, r24
     86e:	08 95       	ret

00000870 <strob>:
     870:	82 e0       	ldi	r24, 0x02	; 2
     872:	8a 95       	dec	r24
     874:	f1 f7       	brne	.-4      	; 0x872 <strob+0x2>
     876:	00 c0       	rjmp	.+0      	; 0x878 <strob+0x8>
     878:	8b b1       	in	r24, 0x0b	; 11
     87a:	80 62       	ori	r24, 0x20	; 32
     87c:	8b b9       	out	0x0b, r24	; 11
     87e:	82 e0       	ldi	r24, 0x02	; 2
     880:	8a 95       	dec	r24
     882:	f1 f7       	brne	.-4      	; 0x880 <strob+0x10>
     884:	00 c0       	rjmp	.+0      	; 0x886 <strob+0x16>
     886:	8b b1       	in	r24, 0x0b	; 11
     888:	8f 7d       	andi	r24, 0xDF	; 223
     88a:	8b b9       	out	0x0b, r24	; 11
     88c:	82 e0       	ldi	r24, 0x02	; 2
     88e:	8a 95       	dec	r24
     890:	f1 f7       	brne	.-4      	; 0x88e <strob+0x1e>
     892:	00 c0       	rjmp	.+0      	; 0x894 <strob+0x24>
     894:	08 95       	ret

00000896 <LCD_12864_send_data>:
     896:	1f 93       	push	r17
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	18 2f       	mov	r17, r24
     89e:	8b b1       	in	r24, 0x0b	; 11
     8a0:	80 68       	ori	r24, 0x80	; 128
     8a2:	8b b9       	out	0x0b, r24	; 11
     8a4:	8b b1       	in	r24, 0x0b	; 11
     8a6:	80 64       	ori	r24, 0x40	; 64
     8a8:	8b b9       	out	0x0b, r24	; 11
     8aa:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8ae:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8b2:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8b6:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8ba:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8be:	8b b1       	in	r24, 0x0b	; 11
     8c0:	8f 7b       	andi	r24, 0xBF	; 191
     8c2:	8b b9       	out	0x0b, r24	; 11
     8c4:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8c8:	8b b1       	in	r24, 0x0b	; 11
     8ca:	80 64       	ori	r24, 0x40	; 64
     8cc:	8b b9       	out	0x0b, r24	; 11
     8ce:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8d2:	8b b1       	in	r24, 0x0b	; 11
     8d4:	8f 7b       	andi	r24, 0xBF	; 191
     8d6:	8b b9       	out	0x0b, r24	; 11
     8d8:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8dc:	c0 e0       	ldi	r28, 0x00	; 0
     8de:	d0 e0       	ldi	r29, 0x00	; 0
     8e0:	1c c0       	rjmp	.+56     	; 0x91a <__stack+0x1b>
     8e2:	ce 01       	movw	r24, r28
     8e4:	04 97       	sbiw	r24, 0x04	; 4
     8e6:	04 97       	sbiw	r24, 0x04	; 4
     8e8:	30 f4       	brcc	.+12     	; 0x8f6 <LCD_12864_send_data+0x60>
     8ea:	8b b1       	in	r24, 0x0b	; 11
     8ec:	8f 7b       	andi	r24, 0xBF	; 191
     8ee:	8b b9       	out	0x0b, r24	; 11
     8f0:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     8f4:	11 c0       	rjmp	.+34     	; 0x918 <__stack+0x19>
     8f6:	81 2f       	mov	r24, r17
     8f8:	80 78       	andi	r24, 0x80	; 128
     8fa:	41 f0       	breq	.+16     	; 0x90c <__stack+0xd>
     8fc:	80 38       	cpi	r24, 0x80	; 128
     8fe:	59 f4       	brne	.+22     	; 0x916 <__stack+0x17>
     900:	8b b1       	in	r24, 0x0b	; 11
     902:	80 64       	ori	r24, 0x40	; 64
     904:	8b b9       	out	0x0b, r24	; 11
     906:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     90a:	05 c0       	rjmp	.+10     	; 0x916 <__stack+0x17>
     90c:	8b b1       	in	r24, 0x0b	; 11
     90e:	8f 7b       	andi	r24, 0xBF	; 191
     910:	8b b9       	out	0x0b, r24	; 11
     912:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     916:	11 0f       	add	r17, r17
     918:	21 96       	adiw	r28, 0x01	; 1
     91a:	cc 30       	cpi	r28, 0x0C	; 12
     91c:	d1 05       	cpc	r29, r1
     91e:	0c f3       	brlt	.-62     	; 0x8e2 <LCD_12864_send_data+0x4c>
     920:	8b b1       	in	r24, 0x0b	; 11
     922:	8f 7b       	andi	r24, 0xBF	; 191
     924:	8b b9       	out	0x0b, r24	; 11
     926:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     92a:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     92e:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     932:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     936:	8b b1       	in	r24, 0x0b	; 11
     938:	8f 77       	andi	r24, 0x7F	; 127
     93a:	8b b9       	out	0x0b, r24	; 11
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	08 95       	ret

00000944 <LCD_12864_send_command>:
     944:	1f 93       	push	r17
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	18 2f       	mov	r17, r24
     94c:	8b b1       	in	r24, 0x0b	; 11
     94e:	80 68       	ori	r24, 0x80	; 128
     950:	8b b9       	out	0x0b, r24	; 11
     952:	8b b1       	in	r24, 0x0b	; 11
     954:	80 64       	ori	r24, 0x40	; 64
     956:	8b b9       	out	0x0b, r24	; 11
     958:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     95c:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     960:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     964:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     968:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     96c:	8b b1       	in	r24, 0x0b	; 11
     96e:	8f 7b       	andi	r24, 0xBF	; 191
     970:	8b b9       	out	0x0b, r24	; 11
     972:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     976:	8b b1       	in	r24, 0x0b	; 11
     978:	8f 7b       	andi	r24, 0xBF	; 191
     97a:	8b b9       	out	0x0b, r24	; 11
     97c:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     980:	8b b1       	in	r24, 0x0b	; 11
     982:	8f 7b       	andi	r24, 0xBF	; 191
     984:	8b b9       	out	0x0b, r24	; 11
     986:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     98a:	c0 e0       	ldi	r28, 0x00	; 0
     98c:	d0 e0       	ldi	r29, 0x00	; 0
     98e:	1c c0       	rjmp	.+56     	; 0x9c8 <LCD_12864_send_command+0x84>
     990:	ce 01       	movw	r24, r28
     992:	04 97       	sbiw	r24, 0x04	; 4
     994:	04 97       	sbiw	r24, 0x04	; 4
     996:	30 f4       	brcc	.+12     	; 0x9a4 <LCD_12864_send_command+0x60>
     998:	8b b1       	in	r24, 0x0b	; 11
     99a:	8f 7b       	andi	r24, 0xBF	; 191
     99c:	8b b9       	out	0x0b, r24	; 11
     99e:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     9a2:	11 c0       	rjmp	.+34     	; 0x9c6 <LCD_12864_send_command+0x82>
     9a4:	81 2f       	mov	r24, r17
     9a6:	80 78       	andi	r24, 0x80	; 128
     9a8:	41 f0       	breq	.+16     	; 0x9ba <LCD_12864_send_command+0x76>
     9aa:	80 38       	cpi	r24, 0x80	; 128
     9ac:	59 f4       	brne	.+22     	; 0x9c4 <LCD_12864_send_command+0x80>
     9ae:	8b b1       	in	r24, 0x0b	; 11
     9b0:	80 64       	ori	r24, 0x40	; 64
     9b2:	8b b9       	out	0x0b, r24	; 11
     9b4:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <LCD_12864_send_command+0x80>
     9ba:	8b b1       	in	r24, 0x0b	; 11
     9bc:	8f 7b       	andi	r24, 0xBF	; 191
     9be:	8b b9       	out	0x0b, r24	; 11
     9c0:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     9c4:	11 0f       	add	r17, r17
     9c6:	21 96       	adiw	r28, 0x01	; 1
     9c8:	cc 30       	cpi	r28, 0x0C	; 12
     9ca:	d1 05       	cpc	r29, r1
     9cc:	0c f3       	brlt	.-62     	; 0x990 <LCD_12864_send_command+0x4c>
     9ce:	8b b1       	in	r24, 0x0b	; 11
     9d0:	8f 7b       	andi	r24, 0xBF	; 191
     9d2:	8b b9       	out	0x0b, r24	; 11
     9d4:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     9d8:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     9dc:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     9e0:	0e 94 38 04 	call	0x870	; 0x870 <strob>
     9e4:	8b b1       	in	r24, 0x0b	; 11
     9e6:	8f 77       	andi	r24, 0x7F	; 127
     9e8:	8b b9       	out	0x0b, r24	; 11
     9ea:	df 91       	pop	r29
     9ec:	cf 91       	pop	r28
     9ee:	1f 91       	pop	r17
     9f0:	08 95       	ret

000009f2 <LCD_12864_GrapnicMode>:
     9f2:	88 23       	and	r24, r24
     9f4:	99 f0       	breq	.+38     	; 0xa1c <LCD_12864_GrapnicMode+0x2a>
     9f6:	84 e3       	ldi	r24, 0x34	; 52
     9f8:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     9fc:	8f ec       	ldi	r24, 0xCF	; 207
     9fe:	97 e0       	ldi	r25, 0x07	; 7
     a00:	01 97       	sbiw	r24, 0x01	; 1
     a02:	f1 f7       	brne	.-4      	; 0xa00 <LCD_12864_GrapnicMode+0xe>
     a04:	00 c0       	rjmp	.+0      	; 0xa06 <LCD_12864_GrapnicMode+0x14>
     a06:	00 00       	nop
     a08:	86 e3       	ldi	r24, 0x36	; 54
     a0a:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     a0e:	8f ec       	ldi	r24, 0xCF	; 207
     a10:	97 e0       	ldi	r25, 0x07	; 7
     a12:	01 97       	sbiw	r24, 0x01	; 1
     a14:	f1 f7       	brne	.-4      	; 0xa12 <LCD_12864_GrapnicMode+0x20>
     a16:	00 c0       	rjmp	.+0      	; 0xa18 <LCD_12864_GrapnicMode+0x26>
     a18:	00 00       	nop
     a1a:	08 95       	ret
     a1c:	80 e3       	ldi	r24, 0x30	; 48
     a1e:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     a22:	8f ec       	ldi	r24, 0xCF	; 207
     a24:	97 e0       	ldi	r25, 0x07	; 7
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	f1 f7       	brne	.-4      	; 0xa26 <LCD_12864_GrapnicMode+0x34>
     a2a:	00 c0       	rjmp	.+0      	; 0xa2c <LCD_12864_GrapnicMode+0x3a>
     a2c:	00 00       	nop
     a2e:	08 95       	ret

00000a30 <LCD_12864_Draw_bitmap>:
     a30:	8f 92       	push	r8
     a32:	9f 92       	push	r9
     a34:	af 92       	push	r10
     a36:	bf 92       	push	r11
     a38:	df 92       	push	r13
     a3a:	ef 92       	push	r14
     a3c:	ff 92       	push	r15
     a3e:	0f 93       	push	r16
     a40:	1f 93       	push	r17
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	7c 01       	movw	r14, r24
     a48:	d1 2c       	mov	r13, r1
     a4a:	31 c1       	rjmp	.+610    	; 0xcae <LCD_12864_Draw_bitmap+0x27e>
     a4c:	8f e1       	ldi	r24, 0x1F	; 31
     a4e:	8d 15       	cp	r24, r13
     a50:	48 f0       	brcs	.+18     	; 0xa64 <LCD_12864_Draw_bitmap+0x34>
     a52:	8d 2d       	mov	r24, r13
     a54:	80 68       	ori	r24, 0x80	; 128
     a56:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     a5a:	80 2f       	mov	r24, r16
     a5c:	80 68       	ori	r24, 0x80	; 128
     a5e:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     a62:	09 c0       	rjmp	.+18     	; 0xa76 <LCD_12864_Draw_bitmap+0x46>
     a64:	80 ee       	ldi	r24, 0xE0	; 224
     a66:	8d 0d       	add	r24, r13
     a68:	80 68       	ori	r24, 0x80	; 128
     a6a:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     a6e:	80 2f       	mov	r24, r16
     a70:	88 68       	ori	r24, 0x88	; 136
     a72:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     a76:	cd 2d       	mov	r28, r13
     a78:	c6 95       	lsr	r28
     a7a:	c6 95       	lsr	r28
     a7c:	c6 95       	lsr	r28
     a7e:	d0 e0       	ldi	r29, 0x00	; 0
     a80:	cc 0f       	add	r28, r28
     a82:	dd 1f       	adc	r29, r29
     a84:	cc 0f       	add	r28, r28
     a86:	dd 1f       	adc	r29, r29
     a88:	cc 0f       	add	r28, r28
     a8a:	dd 1f       	adc	r29, r29
     a8c:	c0 0f       	add	r28, r16
     a8e:	d1 1d       	adc	r29, r1
     a90:	c2 95       	swap	r28
     a92:	d2 95       	swap	r29
     a94:	d0 7f       	andi	r29, 0xF0	; 240
     a96:	dc 27       	eor	r29, r28
     a98:	c0 7f       	andi	r28, 0xF0	; 240
     a9a:	dc 27       	eor	r29, r28
     a9c:	ce 0d       	add	r28, r14
     a9e:	df 1d       	adc	r29, r15
     aa0:	88 80       	ld	r8, Y
     aa2:	91 2c       	mov	r9, r1
     aa4:	1d 2d       	mov	r17, r13
     aa6:	17 70       	andi	r17, 0x07	; 7
     aa8:	01 2e       	mov	r0, r17
     aaa:	02 c0       	rjmp	.+4      	; 0xab0 <LCD_12864_Draw_bitmap+0x80>
     aac:	95 94       	asr	r9
     aae:	87 94       	ror	r8
     ab0:	0a 94       	dec	r0
     ab2:	e2 f7       	brpl	.-8      	; 0xaac <LCD_12864_Draw_bitmap+0x7c>
     ab4:	96 94       	lsr	r9
     ab6:	98 2c       	mov	r9, r8
     ab8:	88 24       	eor	r8, r8
     aba:	97 94       	ror	r9
     abc:	87 94       	ror	r8
     abe:	a9 80       	ldd	r10, Y+1	; 0x01
     ac0:	b1 2c       	mov	r11, r1
     ac2:	01 2e       	mov	r0, r17
     ac4:	02 c0       	rjmp	.+4      	; 0xaca <LCD_12864_Draw_bitmap+0x9a>
     ac6:	b5 94       	asr	r11
     ac8:	a7 94       	ror	r10
     aca:	0a 94       	dec	r0
     acc:	e2 f7       	brpl	.-8      	; 0xac6 <LCD_12864_Draw_bitmap+0x96>
     ace:	81 e0       	ldi	r24, 0x01	; 1
     ad0:	a8 22       	and	r10, r24
     ad2:	bb 24       	eor	r11, r11
     ad4:	00 24       	eor	r0, r0
     ad6:	b6 94       	lsr	r11
     ad8:	a7 94       	ror	r10
     ada:	07 94       	ror	r0
     adc:	b6 94       	lsr	r11
     ade:	a7 94       	ror	r10
     ae0:	07 94       	ror	r0
     ae2:	ba 2c       	mov	r11, r10
     ae4:	a0 2c       	mov	r10, r0
     ae6:	aa 81       	ldd	r26, Y+2	; 0x02
     ae8:	b0 e0       	ldi	r27, 0x00	; 0
     aea:	01 2e       	mov	r0, r17
     aec:	02 c0       	rjmp	.+4      	; 0xaf2 <LCD_12864_Draw_bitmap+0xc2>
     aee:	b5 95       	asr	r27
     af0:	a7 95       	ror	r26
     af2:	0a 94       	dec	r0
     af4:	e2 f7       	brpl	.-8      	; 0xaee <LCD_12864_Draw_bitmap+0xbe>
     af6:	a1 70       	andi	r26, 0x01	; 1
     af8:	bb 27       	eor	r27, r27
     afa:	aa 0f       	add	r26, r26
     afc:	bb 1f       	adc	r27, r27
     afe:	a2 95       	swap	r26
     b00:	b2 95       	swap	r27
     b02:	b0 7f       	andi	r27, 0xF0	; 240
     b04:	ba 27       	eor	r27, r26
     b06:	a0 7f       	andi	r26, 0xF0	; 240
     b08:	ba 27       	eor	r27, r26
     b0a:	eb 81       	ldd	r30, Y+3	; 0x03
     b0c:	f0 e0       	ldi	r31, 0x00	; 0
     b0e:	01 2e       	mov	r0, r17
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <LCD_12864_Draw_bitmap+0xe6>
     b12:	f5 95       	asr	r31
     b14:	e7 95       	ror	r30
     b16:	0a 94       	dec	r0
     b18:	e2 f7       	brpl	.-8      	; 0xb12 <LCD_12864_Draw_bitmap+0xe2>
     b1a:	e1 70       	andi	r30, 0x01	; 1
     b1c:	ff 27       	eor	r31, r31
     b1e:	e2 95       	swap	r30
     b20:	f2 95       	swap	r31
     b22:	f0 7f       	andi	r31, 0xF0	; 240
     b24:	fe 27       	eor	r31, r30
     b26:	e0 7f       	andi	r30, 0xF0	; 240
     b28:	fe 27       	eor	r31, r30
     b2a:	6c 81       	ldd	r22, Y+4	; 0x04
     b2c:	70 e0       	ldi	r23, 0x00	; 0
     b2e:	01 2e       	mov	r0, r17
     b30:	02 c0       	rjmp	.+4      	; 0xb36 <LCD_12864_Draw_bitmap+0x106>
     b32:	75 95       	asr	r23
     b34:	67 95       	ror	r22
     b36:	0a 94       	dec	r0
     b38:	e2 f7       	brpl	.-8      	; 0xb32 <LCD_12864_Draw_bitmap+0x102>
     b3a:	61 70       	andi	r22, 0x01	; 1
     b3c:	77 27       	eor	r23, r23
     b3e:	66 0f       	add	r22, r22
     b40:	77 1f       	adc	r23, r23
     b42:	66 0f       	add	r22, r22
     b44:	77 1f       	adc	r23, r23
     b46:	66 0f       	add	r22, r22
     b48:	77 1f       	adc	r23, r23
     b4a:	4d 81       	ldd	r20, Y+5	; 0x05
     b4c:	50 e0       	ldi	r21, 0x00	; 0
     b4e:	01 2e       	mov	r0, r17
     b50:	02 c0       	rjmp	.+4      	; 0xb56 <LCD_12864_Draw_bitmap+0x126>
     b52:	55 95       	asr	r21
     b54:	47 95       	ror	r20
     b56:	0a 94       	dec	r0
     b58:	e2 f7       	brpl	.-8      	; 0xb52 <LCD_12864_Draw_bitmap+0x122>
     b5a:	41 70       	andi	r20, 0x01	; 1
     b5c:	55 27       	eor	r21, r21
     b5e:	44 0f       	add	r20, r20
     b60:	55 1f       	adc	r21, r21
     b62:	44 0f       	add	r20, r20
     b64:	55 1f       	adc	r21, r21
     b66:	2e 81       	ldd	r18, Y+6	; 0x06
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	01 2e       	mov	r0, r17
     b6c:	02 c0       	rjmp	.+4      	; 0xb72 <LCD_12864_Draw_bitmap+0x142>
     b6e:	35 95       	asr	r19
     b70:	27 95       	ror	r18
     b72:	0a 94       	dec	r0
     b74:	e2 f7       	brpl	.-8      	; 0xb6e <LCD_12864_Draw_bitmap+0x13e>
     b76:	21 70       	andi	r18, 0x01	; 1
     b78:	33 27       	eor	r19, r19
     b7a:	22 0f       	add	r18, r18
     b7c:	33 1f       	adc	r19, r19
     b7e:	8f 81       	ldd	r24, Y+7	; 0x07
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	01 2e       	mov	r0, r17
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <LCD_12864_Draw_bitmap+0x15a>
     b86:	95 95       	asr	r25
     b88:	87 95       	ror	r24
     b8a:	0a 94       	dec	r0
     b8c:	e2 f7       	brpl	.-8      	; 0xb86 <LCD_12864_Draw_bitmap+0x156>
     b8e:	a8 28       	or	r10, r8
     b90:	aa 29       	or	r26, r10
     b92:	ea 2b       	or	r30, r26
     b94:	6e 2b       	or	r22, r30
     b96:	46 2b       	or	r20, r22
     b98:	24 2b       	or	r18, r20
     b9a:	81 70       	andi	r24, 0x01	; 1
     b9c:	82 2b       	or	r24, r18
     b9e:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_12864_send_data>
     ba2:	88 84       	ldd	r8, Y+8	; 0x08
     ba4:	91 2c       	mov	r9, r1
     ba6:	01 2e       	mov	r0, r17
     ba8:	02 c0       	rjmp	.+4      	; 0xbae <LCD_12864_Draw_bitmap+0x17e>
     baa:	95 94       	asr	r9
     bac:	87 94       	ror	r8
     bae:	0a 94       	dec	r0
     bb0:	e2 f7       	brpl	.-8      	; 0xbaa <LCD_12864_Draw_bitmap+0x17a>
     bb2:	96 94       	lsr	r9
     bb4:	98 2c       	mov	r9, r8
     bb6:	88 24       	eor	r8, r8
     bb8:	97 94       	ror	r9
     bba:	87 94       	ror	r8
     bbc:	a9 84       	ldd	r10, Y+9	; 0x09
     bbe:	b1 2c       	mov	r11, r1
     bc0:	01 2e       	mov	r0, r17
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <LCD_12864_Draw_bitmap+0x198>
     bc4:	b5 94       	asr	r11
     bc6:	a7 94       	ror	r10
     bc8:	0a 94       	dec	r0
     bca:	e2 f7       	brpl	.-8      	; 0xbc4 <LCD_12864_Draw_bitmap+0x194>
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	a8 22       	and	r10, r24
     bd0:	bb 24       	eor	r11, r11
     bd2:	00 24       	eor	r0, r0
     bd4:	b6 94       	lsr	r11
     bd6:	a7 94       	ror	r10
     bd8:	07 94       	ror	r0
     bda:	b6 94       	lsr	r11
     bdc:	a7 94       	ror	r10
     bde:	07 94       	ror	r0
     be0:	ba 2c       	mov	r11, r10
     be2:	a0 2c       	mov	r10, r0
     be4:	aa 85       	ldd	r26, Y+10	; 0x0a
     be6:	b0 e0       	ldi	r27, 0x00	; 0
     be8:	01 2e       	mov	r0, r17
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <LCD_12864_Draw_bitmap+0x1c0>
     bec:	b5 95       	asr	r27
     bee:	a7 95       	ror	r26
     bf0:	0a 94       	dec	r0
     bf2:	e2 f7       	brpl	.-8      	; 0xbec <LCD_12864_Draw_bitmap+0x1bc>
     bf4:	a1 70       	andi	r26, 0x01	; 1
     bf6:	bb 27       	eor	r27, r27
     bf8:	aa 0f       	add	r26, r26
     bfa:	bb 1f       	adc	r27, r27
     bfc:	a2 95       	swap	r26
     bfe:	b2 95       	swap	r27
     c00:	b0 7f       	andi	r27, 0xF0	; 240
     c02:	ba 27       	eor	r27, r26
     c04:	a0 7f       	andi	r26, 0xF0	; 240
     c06:	ba 27       	eor	r27, r26
     c08:	eb 85       	ldd	r30, Y+11	; 0x0b
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	01 2e       	mov	r0, r17
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <LCD_12864_Draw_bitmap+0x1e4>
     c10:	f5 95       	asr	r31
     c12:	e7 95       	ror	r30
     c14:	0a 94       	dec	r0
     c16:	e2 f7       	brpl	.-8      	; 0xc10 <LCD_12864_Draw_bitmap+0x1e0>
     c18:	e1 70       	andi	r30, 0x01	; 1
     c1a:	ff 27       	eor	r31, r31
     c1c:	e2 95       	swap	r30
     c1e:	f2 95       	swap	r31
     c20:	f0 7f       	andi	r31, 0xF0	; 240
     c22:	fe 27       	eor	r31, r30
     c24:	e0 7f       	andi	r30, 0xF0	; 240
     c26:	fe 27       	eor	r31, r30
     c28:	6c 85       	ldd	r22, Y+12	; 0x0c
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	01 2e       	mov	r0, r17
     c2e:	02 c0       	rjmp	.+4      	; 0xc34 <LCD_12864_Draw_bitmap+0x204>
     c30:	75 95       	asr	r23
     c32:	67 95       	ror	r22
     c34:	0a 94       	dec	r0
     c36:	e2 f7       	brpl	.-8      	; 0xc30 <LCD_12864_Draw_bitmap+0x200>
     c38:	61 70       	andi	r22, 0x01	; 1
     c3a:	77 27       	eor	r23, r23
     c3c:	66 0f       	add	r22, r22
     c3e:	77 1f       	adc	r23, r23
     c40:	66 0f       	add	r22, r22
     c42:	77 1f       	adc	r23, r23
     c44:	66 0f       	add	r22, r22
     c46:	77 1f       	adc	r23, r23
     c48:	4d 85       	ldd	r20, Y+13	; 0x0d
     c4a:	50 e0       	ldi	r21, 0x00	; 0
     c4c:	01 2e       	mov	r0, r17
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <LCD_12864_Draw_bitmap+0x224>
     c50:	55 95       	asr	r21
     c52:	47 95       	ror	r20
     c54:	0a 94       	dec	r0
     c56:	e2 f7       	brpl	.-8      	; 0xc50 <LCD_12864_Draw_bitmap+0x220>
     c58:	41 70       	andi	r20, 0x01	; 1
     c5a:	55 27       	eor	r21, r21
     c5c:	44 0f       	add	r20, r20
     c5e:	55 1f       	adc	r21, r21
     c60:	44 0f       	add	r20, r20
     c62:	55 1f       	adc	r21, r21
     c64:	2e 85       	ldd	r18, Y+14	; 0x0e
     c66:	30 e0       	ldi	r19, 0x00	; 0
     c68:	01 2e       	mov	r0, r17
     c6a:	02 c0       	rjmp	.+4      	; 0xc70 <LCD_12864_Draw_bitmap+0x240>
     c6c:	35 95       	asr	r19
     c6e:	27 95       	ror	r18
     c70:	0a 94       	dec	r0
     c72:	e2 f7       	brpl	.-8      	; 0xc6c <LCD_12864_Draw_bitmap+0x23c>
     c74:	21 70       	andi	r18, 0x01	; 1
     c76:	33 27       	eor	r19, r19
     c78:	22 0f       	add	r18, r18
     c7a:	33 1f       	adc	r19, r19
     c7c:	cf 85       	ldd	r28, Y+15	; 0x0f
     c7e:	d0 e0       	ldi	r29, 0x00	; 0
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <LCD_12864_Draw_bitmap+0x256>
     c82:	d5 95       	asr	r29
     c84:	c7 95       	ror	r28
     c86:	1a 95       	dec	r17
     c88:	e2 f7       	brpl	.-8      	; 0xc82 <LCD_12864_Draw_bitmap+0x252>
     c8a:	88 2d       	mov	r24, r8
     c8c:	8a 29       	or	r24, r10
     c8e:	8a 2b       	or	r24, r26
     c90:	8e 2b       	or	r24, r30
     c92:	86 2b       	or	r24, r22
     c94:	84 2b       	or	r24, r20
     c96:	82 2b       	or	r24, r18
     c98:	c1 70       	andi	r28, 0x01	; 1
     c9a:	8c 2b       	or	r24, r28
     c9c:	0e 94 4b 04 	call	0x896	; 0x896 <LCD_12864_send_data>
     ca0:	0f 5f       	subi	r16, 0xFF	; 255
     ca2:	01 c0       	rjmp	.+2      	; 0xca6 <LCD_12864_Draw_bitmap+0x276>
     ca4:	00 e0       	ldi	r16, 0x00	; 0
     ca6:	08 30       	cpi	r16, 0x08	; 8
     ca8:	08 f4       	brcc	.+2      	; 0xcac <LCD_12864_Draw_bitmap+0x27c>
     caa:	d0 ce       	rjmp	.-608    	; 0xa4c <LCD_12864_Draw_bitmap+0x1c>
     cac:	d3 94       	inc	r13
     cae:	8f e3       	ldi	r24, 0x3F	; 63
     cb0:	8d 15       	cp	r24, r13
     cb2:	c0 f7       	brcc	.-16     	; 0xca4 <LCD_12864_Draw_bitmap+0x274>
     cb4:	df 91       	pop	r29
     cb6:	cf 91       	pop	r28
     cb8:	1f 91       	pop	r17
     cba:	0f 91       	pop	r16
     cbc:	ff 90       	pop	r15
     cbe:	ef 90       	pop	r14
     cc0:	df 90       	pop	r13
     cc2:	bf 90       	pop	r11
     cc4:	af 90       	pop	r10
     cc6:	9f 90       	pop	r9
     cc8:	8f 90       	pop	r8
     cca:	08 95       	ret

00000ccc <clear_LCD_12864>:
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     cd2:	8f e1       	ldi	r24, 0x1F	; 31
     cd4:	9e e4       	ldi	r25, 0x4E	; 78
     cd6:	01 97       	sbiw	r24, 0x01	; 1
     cd8:	f1 f7       	brne	.-4      	; 0xcd6 <clear_LCD_12864+0xa>
     cda:	00 c0       	rjmp	.+0      	; 0xcdc <clear_LCD_12864+0x10>
     cdc:	00 00       	nop
     cde:	08 95       	ret

00000ce0 <LCD_12864_ini>:
     ce0:	2f ef       	ldi	r18, 0xFF	; 255
     ce2:	89 ef       	ldi	r24, 0xF9	; 249
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	21 50       	subi	r18, 0x01	; 1
     ce8:	80 40       	sbci	r24, 0x00	; 0
     cea:	90 40       	sbci	r25, 0x00	; 0
     cec:	e1 f7       	brne	.-8      	; 0xce6 <LCD_12864_ini+0x6>
     cee:	00 c0       	rjmp	.+0      	; 0xcf0 <LCD_12864_ini+0x10>
     cf0:	00 00       	nop
     cf2:	8c e0       	ldi	r24, 0x0C	; 12
     cf4:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     cf8:	87 ec       	ldi	r24, 0xC7	; 199
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	01 97       	sbiw	r24, 0x01	; 1
     cfe:	f1 f7       	brne	.-4      	; 0xcfc <LCD_12864_ini+0x1c>
     d00:	00 c0       	rjmp	.+0      	; 0xd02 <LCD_12864_ini+0x22>
     d02:	00 00       	nop
     d04:	0e 94 66 06 	call	0xccc	; 0xccc <clear_LCD_12864>
     d08:	86 e0       	ldi	r24, 0x06	; 6
     d0a:	0e 94 a2 04 	call	0x944	; 0x944 <LCD_12864_send_command>
     d0e:	8f e1       	ldi	r24, 0x1F	; 31
     d10:	9e e4       	ldi	r25, 0x4E	; 78
     d12:	01 97       	sbiw	r24, 0x01	; 1
     d14:	f1 f7       	brne	.-4      	; 0xd12 <LCD_12864_ini+0x32>
     d16:	00 c0       	rjmp	.+0      	; 0xd18 <LCD_12864_ini+0x38>
     d18:	00 00       	nop
     d1a:	08 95       	ret

00000d1c <LCD_12864_print_symbol>:
     d1c:	bf 92       	push	r11
     d1e:	cf 92       	push	r12
     d20:	df 92       	push	r13
     d22:	ef 92       	push	r14
     d24:	ff 92       	push	r15
     d26:	0f 93       	push	r16
     d28:	1f 93       	push	r17
     d2a:	cf 93       	push	r28
     d2c:	df 93       	push	r29
     d2e:	6c 01       	movw	r12, r24
     d30:	7b 01       	movw	r14, r22
     d32:	b4 2e       	mov	r11, r20
     d34:	c0 e0       	ldi	r28, 0x00	; 0
     d36:	d0 e0       	ldi	r29, 0x00	; 0
     d38:	2d c0       	rjmp	.+90     	; 0xd94 <LCD_12864_print_symbol+0x78>
     d3a:	bb 20       	and	r11, r11
     d3c:	b1 f0       	breq	.+44     	; 0xd6a <LCD_12864_print_symbol+0x4e>
     d3e:	8e 01       	movw	r16, r28
     d40:	0c 0d       	add	r16, r12
     d42:	1d 1d       	adc	r17, r13
     d44:	01 50       	subi	r16, 0x01	; 1
     d46:	11 09       	sbc	r17, r1
     d48:	c7 01       	movw	r24, r14
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	8e 0d       	add	r24, r14
     d50:	9f 1d       	adc	r25, r15
     d52:	88 0f       	add	r24, r24
     d54:	99 1f       	adc	r25, r25
     d56:	8c 0f       	add	r24, r28
     d58:	9d 1f       	adc	r25, r29
     d5a:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     d5e:	f8 01       	movw	r30, r16
     d60:	ef 56       	subi	r30, 0x6F	; 111
     d62:	fd 4f       	sbci	r31, 0xFD	; 253
     d64:	80 95       	com	r24
     d66:	80 83       	st	Z, r24
     d68:	14 c0       	rjmp	.+40     	; 0xd92 <LCD_12864_print_symbol+0x76>
     d6a:	86 01       	movw	r16, r12
     d6c:	0c 0f       	add	r16, r28
     d6e:	1d 1f       	adc	r17, r29
     d70:	01 50       	subi	r16, 0x01	; 1
     d72:	11 09       	sbc	r17, r1
     d74:	c7 01       	movw	r24, r14
     d76:	88 0f       	add	r24, r24
     d78:	99 1f       	adc	r25, r25
     d7a:	8e 0d       	add	r24, r14
     d7c:	9f 1d       	adc	r25, r15
     d7e:	88 0f       	add	r24, r24
     d80:	99 1f       	adc	r25, r25
     d82:	8c 0f       	add	r24, r28
     d84:	9d 1f       	adc	r25, r29
     d86:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     d8a:	f8 01       	movw	r30, r16
     d8c:	ef 56       	subi	r30, 0x6F	; 111
     d8e:	fd 4f       	sbci	r31, 0xFD	; 253
     d90:	80 83       	st	Z, r24
     d92:	21 96       	adiw	r28, 0x01	; 1
     d94:	c7 30       	cpi	r28, 0x07	; 7
     d96:	d1 05       	cpc	r29, r1
     d98:	84 f2       	brlt	.-96     	; 0xd3a <LCD_12864_print_symbol+0x1e>
     d9a:	df 91       	pop	r29
     d9c:	cf 91       	pop	r28
     d9e:	1f 91       	pop	r17
     da0:	0f 91       	pop	r16
     da2:	ff 90       	pop	r15
     da4:	ef 90       	pop	r14
     da6:	df 90       	pop	r13
     da8:	cf 90       	pop	r12
     daa:	bf 90       	pop	r11
     dac:	08 95       	ret

00000dae <LCD_12864_print_symbol_4_6>:
     dae:	bf 92       	push	r11
     db0:	cf 92       	push	r12
     db2:	df 92       	push	r13
     db4:	ef 92       	push	r14
     db6:	ff 92       	push	r15
     db8:	0f 93       	push	r16
     dba:	1f 93       	push	r17
     dbc:	cf 93       	push	r28
     dbe:	df 93       	push	r29
     dc0:	6c 01       	movw	r12, r24
     dc2:	7b 01       	movw	r14, r22
     dc4:	b4 2e       	mov	r11, r20
     dc6:	c0 e0       	ldi	r28, 0x00	; 0
     dc8:	d0 e0       	ldi	r29, 0x00	; 0
     dca:	29 c0       	rjmp	.+82     	; 0xe1e <LCD_12864_print_symbol_4_6+0x70>
     dcc:	bb 20       	and	r11, r11
     dce:	a1 f0       	breq	.+40     	; 0xdf8 <LCD_12864_print_symbol_4_6+0x4a>
     dd0:	8e 01       	movw	r16, r28
     dd2:	0c 0d       	add	r16, r12
     dd4:	1d 1d       	adc	r17, r13
     dd6:	01 50       	subi	r16, 0x01	; 1
     dd8:	11 09       	sbc	r17, r1
     dda:	c7 01       	movw	r24, r14
     ddc:	88 0f       	add	r24, r24
     dde:	99 1f       	adc	r25, r25
     de0:	88 0f       	add	r24, r24
     de2:	99 1f       	adc	r25, r25
     de4:	8c 0f       	add	r24, r28
     de6:	9d 1f       	adc	r25, r29
     de8:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     dec:	f8 01       	movw	r30, r16
     dee:	ef 56       	subi	r30, 0x6F	; 111
     df0:	fd 4f       	sbci	r31, 0xFD	; 253
     df2:	80 95       	com	r24
     df4:	80 83       	st	Z, r24
     df6:	12 c0       	rjmp	.+36     	; 0xe1c <LCD_12864_print_symbol_4_6+0x6e>
     df8:	86 01       	movw	r16, r12
     dfa:	0c 0f       	add	r16, r28
     dfc:	1d 1f       	adc	r17, r29
     dfe:	01 50       	subi	r16, 0x01	; 1
     e00:	11 09       	sbc	r17, r1
     e02:	c7 01       	movw	r24, r14
     e04:	88 0f       	add	r24, r24
     e06:	99 1f       	adc	r25, r25
     e08:	88 0f       	add	r24, r24
     e0a:	99 1f       	adc	r25, r25
     e0c:	8c 0f       	add	r24, r28
     e0e:	9d 1f       	adc	r25, r29
     e10:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     e14:	f8 01       	movw	r30, r16
     e16:	ef 56       	subi	r30, 0x6F	; 111
     e18:	fd 4f       	sbci	r31, 0xFD	; 253
     e1a:	80 83       	st	Z, r24
     e1c:	21 96       	adiw	r28, 0x01	; 1
     e1e:	c4 30       	cpi	r28, 0x04	; 4
     e20:	d1 05       	cpc	r29, r1
     e22:	a4 f2       	brlt	.-88     	; 0xdcc <LCD_12864_print_symbol_4_6+0x1e>
     e24:	df 91       	pop	r29
     e26:	cf 91       	pop	r28
     e28:	1f 91       	pop	r17
     e2a:	0f 91       	pop	r16
     e2c:	ff 90       	pop	r15
     e2e:	ef 90       	pop	r14
     e30:	df 90       	pop	r13
     e32:	cf 90       	pop	r12
     e34:	bf 90       	pop	r11
     e36:	08 95       	ret

00000e38 <LCD_12864_print_symbol_11_16>:
     e38:	bf 92       	push	r11
     e3a:	cf 92       	push	r12
     e3c:	df 92       	push	r13
     e3e:	ef 92       	push	r14
     e40:	ff 92       	push	r15
     e42:	0f 93       	push	r16
     e44:	1f 93       	push	r17
     e46:	cf 93       	push	r28
     e48:	df 93       	push	r29
     e4a:	6c 01       	movw	r12, r24
     e4c:	7b 01       	movw	r14, r22
     e4e:	b4 2e       	mov	r11, r20
     e50:	c0 e0       	ldi	r28, 0x00	; 0
     e52:	d0 e0       	ldi	r29, 0x00	; 0
     e54:	2b c0       	rjmp	.+86     	; 0xeac <LCD_12864_print_symbol_11_16+0x74>
     e56:	bb 20       	and	r11, r11
     e58:	a9 f0       	breq	.+42     	; 0xe84 <LCD_12864_print_symbol_11_16+0x4c>
     e5a:	8e 01       	movw	r16, r28
     e5c:	0c 0d       	add	r16, r12
     e5e:	1d 1d       	adc	r17, r13
     e60:	01 50       	subi	r16, 0x01	; 1
     e62:	11 09       	sbc	r17, r1
     e64:	26 e1       	ldi	r18, 0x16	; 22
     e66:	2e 9d       	mul	r18, r14
     e68:	c0 01       	movw	r24, r0
     e6a:	2f 9d       	mul	r18, r15
     e6c:	90 0d       	add	r25, r0
     e6e:	11 24       	eor	r1, r1
     e70:	8c 0f       	add	r24, r28
     e72:	9d 1f       	adc	r25, r29
     e74:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     e78:	f8 01       	movw	r30, r16
     e7a:	ef 56       	subi	r30, 0x6F	; 111
     e7c:	fd 4f       	sbci	r31, 0xFD	; 253
     e7e:	80 95       	com	r24
     e80:	80 83       	st	Z, r24
     e82:	13 c0       	rjmp	.+38     	; 0xeaa <LCD_12864_print_symbol_11_16+0x72>
     e84:	86 01       	movw	r16, r12
     e86:	0c 0f       	add	r16, r28
     e88:	1d 1f       	adc	r17, r29
     e8a:	01 50       	subi	r16, 0x01	; 1
     e8c:	11 09       	sbc	r17, r1
     e8e:	26 e1       	ldi	r18, 0x16	; 22
     e90:	2e 9d       	mul	r18, r14
     e92:	c0 01       	movw	r24, r0
     e94:	2f 9d       	mul	r18, r15
     e96:	90 0d       	add	r25, r0
     e98:	11 24       	eor	r1, r1
     e9a:	8c 0f       	add	r24, r28
     e9c:	9d 1f       	adc	r25, r29
     e9e:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     ea2:	f8 01       	movw	r30, r16
     ea4:	ef 56       	subi	r30, 0x6F	; 111
     ea6:	fd 4f       	sbci	r31, 0xFD	; 253
     ea8:	80 83       	st	Z, r24
     eaa:	21 96       	adiw	r28, 0x01	; 1
     eac:	cb 30       	cpi	r28, 0x0B	; 11
     eae:	d1 05       	cpc	r29, r1
     eb0:	94 f2       	brlt	.-92     	; 0xe56 <LCD_12864_print_symbol_11_16+0x1e>
     eb2:	85 e7       	ldi	r24, 0x75	; 117
     eb4:	c8 0e       	add	r12, r24
     eb6:	d1 1c       	adc	r13, r1
     eb8:	cb e0       	ldi	r28, 0x0B	; 11
     eba:	d0 e0       	ldi	r29, 0x00	; 0
     ebc:	2b c0       	rjmp	.+86     	; 0xf14 <LCD_12864_print_symbol_11_16+0xdc>
     ebe:	bb 20       	and	r11, r11
     ec0:	a9 f0       	breq	.+42     	; 0xeec <LCD_12864_print_symbol_11_16+0xb4>
     ec2:	86 01       	movw	r16, r12
     ec4:	0c 0f       	add	r16, r28
     ec6:	1d 1f       	adc	r17, r29
     ec8:	01 50       	subi	r16, 0x01	; 1
     eca:	11 09       	sbc	r17, r1
     ecc:	26 e1       	ldi	r18, 0x16	; 22
     ece:	2e 9d       	mul	r18, r14
     ed0:	c0 01       	movw	r24, r0
     ed2:	2f 9d       	mul	r18, r15
     ed4:	90 0d       	add	r25, r0
     ed6:	11 24       	eor	r1, r1
     ed8:	8c 0f       	add	r24, r28
     eda:	9d 1f       	adc	r25, r29
     edc:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     ee0:	f8 01       	movw	r30, r16
     ee2:	ef 56       	subi	r30, 0x6F	; 111
     ee4:	fd 4f       	sbci	r31, 0xFD	; 253
     ee6:	80 95       	com	r24
     ee8:	80 83       	st	Z, r24
     eea:	13 c0       	rjmp	.+38     	; 0xf12 <LCD_12864_print_symbol_11_16+0xda>
     eec:	86 01       	movw	r16, r12
     eee:	0c 0f       	add	r16, r28
     ef0:	1d 1f       	adc	r17, r29
     ef2:	01 50       	subi	r16, 0x01	; 1
     ef4:	11 09       	sbc	r17, r1
     ef6:	26 e1       	ldi	r18, 0x16	; 22
     ef8:	2e 9d       	mul	r18, r14
     efa:	c0 01       	movw	r24, r0
     efc:	2f 9d       	mul	r18, r15
     efe:	90 0d       	add	r25, r0
     f00:	11 24       	eor	r1, r1
     f02:	8c 0f       	add	r24, r28
     f04:	9d 1f       	adc	r25, r29
     f06:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     f0a:	f8 01       	movw	r30, r16
     f0c:	ef 56       	subi	r30, 0x6F	; 111
     f0e:	fd 4f       	sbci	r31, 0xFD	; 253
     f10:	80 83       	st	Z, r24
     f12:	21 96       	adiw	r28, 0x01	; 1
     f14:	c6 31       	cpi	r28, 0x16	; 22
     f16:	d1 05       	cpc	r29, r1
     f18:	94 f2       	brlt	.-92     	; 0xebe <LCD_12864_print_symbol_11_16+0x86>
     f1a:	df 91       	pop	r29
     f1c:	cf 91       	pop	r28
     f1e:	1f 91       	pop	r17
     f20:	0f 91       	pop	r16
     f22:	ff 90       	pop	r15
     f24:	ef 90       	pop	r14
     f26:	df 90       	pop	r13
     f28:	cf 90       	pop	r12
     f2a:	bf 90       	pop	r11
     f2c:	08 95       	ret

00000f2e <LCD_12864_print_symbol_7_11>:
     f2e:	bf 92       	push	r11
     f30:	cf 92       	push	r12
     f32:	df 92       	push	r13
     f34:	ef 92       	push	r14
     f36:	ff 92       	push	r15
     f38:	0f 93       	push	r16
     f3a:	1f 93       	push	r17
     f3c:	cf 93       	push	r28
     f3e:	df 93       	push	r29
     f40:	6c 01       	movw	r12, r24
     f42:	7b 01       	movw	r14, r22
     f44:	b4 2e       	mov	r11, r20
     f46:	c0 e0       	ldi	r28, 0x00	; 0
     f48:	d0 e0       	ldi	r29, 0x00	; 0
     f4a:	37 c0       	rjmp	.+110    	; 0xfba <LCD_12864_print_symbol_7_11+0x8c>
     f4c:	bb 20       	and	r11, r11
     f4e:	d9 f0       	breq	.+54     	; 0xf86 <LCD_12864_print_symbol_7_11+0x58>
     f50:	8e 01       	movw	r16, r28
     f52:	0c 0d       	add	r16, r12
     f54:	1d 1d       	adc	r17, r13
     f56:	01 50       	subi	r16, 0x01	; 1
     f58:	11 09       	sbc	r17, r1
     f5a:	97 01       	movw	r18, r14
     f5c:	22 0f       	add	r18, r18
     f5e:	33 1f       	adc	r19, r19
     f60:	c9 01       	movw	r24, r18
     f62:	88 0f       	add	r24, r24
     f64:	99 1f       	adc	r25, r25
     f66:	88 0f       	add	r24, r24
     f68:	99 1f       	adc	r25, r25
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	82 1b       	sub	r24, r18
     f70:	93 0b       	sbc	r25, r19
     f72:	8c 0f       	add	r24, r28
     f74:	9d 1f       	adc	r25, r29
     f76:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     f7a:	f8 01       	movw	r30, r16
     f7c:	ef 56       	subi	r30, 0x6F	; 111
     f7e:	fd 4f       	sbci	r31, 0xFD	; 253
     f80:	80 95       	com	r24
     f82:	80 83       	st	Z, r24
     f84:	19 c0       	rjmp	.+50     	; 0xfb8 <LCD_12864_print_symbol_7_11+0x8a>
     f86:	86 01       	movw	r16, r12
     f88:	0c 0f       	add	r16, r28
     f8a:	1d 1f       	adc	r17, r29
     f8c:	01 50       	subi	r16, 0x01	; 1
     f8e:	11 09       	sbc	r17, r1
     f90:	97 01       	movw	r18, r14
     f92:	22 0f       	add	r18, r18
     f94:	33 1f       	adc	r19, r19
     f96:	c9 01       	movw	r24, r18
     f98:	88 0f       	add	r24, r24
     f9a:	99 1f       	adc	r25, r25
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	88 0f       	add	r24, r24
     fa2:	99 1f       	adc	r25, r25
     fa4:	82 1b       	sub	r24, r18
     fa6:	93 0b       	sbc	r25, r19
     fa8:	8c 0f       	add	r24, r28
     faa:	9d 1f       	adc	r25, r29
     fac:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     fb0:	f8 01       	movw	r30, r16
     fb2:	ef 56       	subi	r30, 0x6F	; 111
     fb4:	fd 4f       	sbci	r31, 0xFD	; 253
     fb6:	80 83       	st	Z, r24
     fb8:	21 96       	adiw	r28, 0x01	; 1
     fba:	c7 30       	cpi	r28, 0x07	; 7
     fbc:	d1 05       	cpc	r29, r1
     fbe:	34 f2       	brlt	.-116    	; 0xf4c <LCD_12864_print_symbol_7_11+0x1e>
     fc0:	89 e7       	ldi	r24, 0x79	; 121
     fc2:	c8 0e       	add	r12, r24
     fc4:	d1 1c       	adc	r13, r1
     fc6:	c7 e0       	ldi	r28, 0x07	; 7
     fc8:	d0 e0       	ldi	r29, 0x00	; 0
     fca:	37 c0       	rjmp	.+110    	; 0x103a <LCD_12864_print_symbol_7_11+0x10c>
     fcc:	bb 20       	and	r11, r11
     fce:	d9 f0       	breq	.+54     	; 0x1006 <LCD_12864_print_symbol_7_11+0xd8>
     fd0:	86 01       	movw	r16, r12
     fd2:	0c 0f       	add	r16, r28
     fd4:	1d 1f       	adc	r17, r29
     fd6:	01 50       	subi	r16, 0x01	; 1
     fd8:	11 09       	sbc	r17, r1
     fda:	97 01       	movw	r18, r14
     fdc:	22 0f       	add	r18, r18
     fde:	33 1f       	adc	r19, r19
     fe0:	c9 01       	movw	r24, r18
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	88 0f       	add	r24, r24
     fe8:	99 1f       	adc	r25, r25
     fea:	88 0f       	add	r24, r24
     fec:	99 1f       	adc	r25, r25
     fee:	82 1b       	sub	r24, r18
     ff0:	93 0b       	sbc	r25, r19
     ff2:	8c 0f       	add	r24, r28
     ff4:	9d 1f       	adc	r25, r29
     ff6:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
     ffa:	f8 01       	movw	r30, r16
     ffc:	ef 56       	subi	r30, 0x6F	; 111
     ffe:	fd 4f       	sbci	r31, 0xFD	; 253
    1000:	80 95       	com	r24
    1002:	80 83       	st	Z, r24
    1004:	19 c0       	rjmp	.+50     	; 0x1038 <LCD_12864_print_symbol_7_11+0x10a>
    1006:	86 01       	movw	r16, r12
    1008:	0c 0f       	add	r16, r28
    100a:	1d 1f       	adc	r17, r29
    100c:	01 50       	subi	r16, 0x01	; 1
    100e:	11 09       	sbc	r17, r1
    1010:	97 01       	movw	r18, r14
    1012:	22 0f       	add	r18, r18
    1014:	33 1f       	adc	r19, r19
    1016:	c9 01       	movw	r24, r18
    1018:	88 0f       	add	r24, r24
    101a:	99 1f       	adc	r25, r25
    101c:	88 0f       	add	r24, r24
    101e:	99 1f       	adc	r25, r25
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	82 1b       	sub	r24, r18
    1026:	93 0b       	sbc	r25, r19
    1028:	8c 0f       	add	r24, r28
    102a:	9d 1f       	adc	r25, r29
    102c:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
    1030:	f8 01       	movw	r30, r16
    1032:	ef 56       	subi	r30, 0x6F	; 111
    1034:	fd 4f       	sbci	r31, 0xFD	; 253
    1036:	80 83       	st	Z, r24
    1038:	21 96       	adiw	r28, 0x01	; 1
    103a:	ce 30       	cpi	r28, 0x0E	; 14
    103c:	d1 05       	cpc	r29, r1
    103e:	34 f2       	brlt	.-116    	; 0xfcc <LCD_12864_print_symbol_7_11+0x9e>
    1040:	df 91       	pop	r29
    1042:	cf 91       	pop	r28
    1044:	1f 91       	pop	r17
    1046:	0f 91       	pop	r16
    1048:	ff 90       	pop	r15
    104a:	ef 90       	pop	r14
    104c:	df 90       	pop	r13
    104e:	cf 90       	pop	r12
    1050:	bf 90       	pop	r11
    1052:	08 95       	ret

00001054 <LCD_12864_Print_7_11>:
    1054:	bf 92       	push	r11
    1056:	cf 92       	push	r12
    1058:	df 92       	push	r13
    105a:	ef 92       	push	r14
    105c:	ff 92       	push	r15
    105e:	0f 93       	push	r16
    1060:	1f 93       	push	r17
    1062:	cf 93       	push	r28
    1064:	df 93       	push	r29
    1066:	cd b7       	in	r28, 0x3d	; 61
    1068:	de b7       	in	r29, 0x3e	; 62
    106a:	ac 97       	sbiw	r28, 0x2c	; 44
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	f8 94       	cli
    1070:	de bf       	out	0x3e, r29	; 62
    1072:	0f be       	out	0x3f, r0	; 63
    1074:	cd bf       	out	0x3d, r28	; 61
    1076:	6c 01       	movw	r12, r24
    1078:	16 2f       	mov	r17, r22
    107a:	b4 2e       	mov	r11, r20
    107c:	79 01       	movw	r14, r18
    107e:	00 00       	nop
    1080:	ce 01       	movw	r24, r28
    1082:	01 96       	adiw	r24, 0x01	; 1
    1084:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    1088:	85 e0       	ldi	r24, 0x05	; 5
    108a:	91 e0       	ldi	r25, 0x01	; 1
    108c:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <pf_open>
    1090:	80 e8       	ldi	r24, 0x80	; 128
    1092:	18 9f       	mul	r17, r24
    1094:	c0 0c       	add	r12, r0
    1096:	d1 1c       	adc	r13, r1
    1098:	11 24       	eor	r1, r1
    109a:	00 e0       	ldi	r16, 0x00	; 0
    109c:	10 e0       	ldi	r17, 0x00	; 0
    109e:	2d c0       	rjmp	.+90     	; 0x10fa <LCD_12864_Print_7_11+0xa6>
    10a0:	f7 01       	movw	r30, r14
    10a2:	e0 0f       	add	r30, r16
    10a4:	f1 1f       	adc	r31, r17
    10a6:	60 81       	ld	r22, Z
    10a8:	70 e0       	ldi	r23, 0x00	; 0
    10aa:	bb 20       	and	r11, r11
    10ac:	89 f0       	breq	.+34     	; 0x10d0 <LCD_12864_Print_7_11+0x7c>
    10ae:	6e 32       	cpi	r22, 0x2E	; 46
    10b0:	71 05       	cpc	r23, r1
    10b2:	39 f0       	breq	.+14     	; 0x10c2 <LCD_12864_Print_7_11+0x6e>
    10b4:	60 53       	subi	r22, 0x30	; 48
    10b6:	71 09       	sbc	r23, r1
    10b8:	41 e0       	ldi	r20, 0x01	; 1
    10ba:	c6 01       	movw	r24, r12
    10bc:	0e 94 97 07 	call	0xf2e	; 0xf2e <LCD_12864_print_symbol_7_11>
    10c0:	17 c0       	rjmp	.+46     	; 0x10f0 <LCD_12864_Print_7_11+0x9c>
    10c2:	41 e0       	ldi	r20, 0x01	; 1
    10c4:	6a e0       	ldi	r22, 0x0A	; 10
    10c6:	70 e0       	ldi	r23, 0x00	; 0
    10c8:	c6 01       	movw	r24, r12
    10ca:	0e 94 97 07 	call	0xf2e	; 0xf2e <LCD_12864_print_symbol_7_11>
    10ce:	10 c0       	rjmp	.+32     	; 0x10f0 <LCD_12864_Print_7_11+0x9c>
    10d0:	6e 32       	cpi	r22, 0x2E	; 46
    10d2:	71 05       	cpc	r23, r1
    10d4:	39 f0       	breq	.+14     	; 0x10e4 <LCD_12864_Print_7_11+0x90>
    10d6:	60 53       	subi	r22, 0x30	; 48
    10d8:	71 09       	sbc	r23, r1
    10da:	40 e0       	ldi	r20, 0x00	; 0
    10dc:	c6 01       	movw	r24, r12
    10de:	0e 94 97 07 	call	0xf2e	; 0xf2e <LCD_12864_print_symbol_7_11>
    10e2:	06 c0       	rjmp	.+12     	; 0x10f0 <LCD_12864_Print_7_11+0x9c>
    10e4:	40 e0       	ldi	r20, 0x00	; 0
    10e6:	6a e0       	ldi	r22, 0x0A	; 10
    10e8:	70 e0       	ldi	r23, 0x00	; 0
    10ea:	c6 01       	movw	r24, r12
    10ec:	0e 94 97 07 	call	0xf2e	; 0xf2e <LCD_12864_print_symbol_7_11>
    10f0:	88 e0       	ldi	r24, 0x08	; 8
    10f2:	c8 0e       	add	r12, r24
    10f4:	d1 1c       	adc	r13, r1
    10f6:	0f 5f       	subi	r16, 0xFF	; 255
    10f8:	1f 4f       	sbci	r17, 0xFF	; 255
    10fa:	f7 01       	movw	r30, r14
    10fc:	01 90       	ld	r0, Z+
    10fe:	00 20       	and	r0, r0
    1100:	e9 f7       	brne	.-6      	; 0x10fc <LCD_12864_Print_7_11+0xa8>
    1102:	31 97       	sbiw	r30, 0x01	; 1
    1104:	ee 19       	sub	r30, r14
    1106:	ff 09       	sbc	r31, r15
    1108:	0e 17       	cp	r16, r30
    110a:	1f 07       	cpc	r17, r31
    110c:	48 f2       	brcs	.-110    	; 0x10a0 <LCD_12864_Print_7_11+0x4c>
    110e:	80 e0       	ldi	r24, 0x00	; 0
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    1116:	ac 96       	adiw	r28, 0x2c	; 44
    1118:	0f b6       	in	r0, 0x3f	; 63
    111a:	f8 94       	cli
    111c:	de bf       	out	0x3e, r29	; 62
    111e:	0f be       	out	0x3f, r0	; 63
    1120:	cd bf       	out	0x3d, r28	; 61
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	1f 91       	pop	r17
    1128:	0f 91       	pop	r16
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	df 90       	pop	r13
    1130:	cf 90       	pop	r12
    1132:	bf 90       	pop	r11
    1134:	08 95       	ret

00001136 <LCD_12864_Print_4_6>:
    1136:	bf 92       	push	r11
    1138:	cf 92       	push	r12
    113a:	df 92       	push	r13
    113c:	ef 92       	push	r14
    113e:	ff 92       	push	r15
    1140:	0f 93       	push	r16
    1142:	1f 93       	push	r17
    1144:	cf 93       	push	r28
    1146:	df 93       	push	r29
    1148:	cd b7       	in	r28, 0x3d	; 61
    114a:	de b7       	in	r29, 0x3e	; 62
    114c:	ac 97       	sbiw	r28, 0x2c	; 44
    114e:	0f b6       	in	r0, 0x3f	; 63
    1150:	f8 94       	cli
    1152:	de bf       	out	0x3e, r29	; 62
    1154:	0f be       	out	0x3f, r0	; 63
    1156:	cd bf       	out	0x3d, r28	; 61
    1158:	6c 01       	movw	r12, r24
    115a:	16 2f       	mov	r17, r22
    115c:	b4 2e       	mov	r11, r20
    115e:	79 01       	movw	r14, r18
    1160:	00 00       	nop
    1162:	ce 01       	movw	r24, r28
    1164:	01 96       	adiw	r24, 0x01	; 1
    1166:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    116a:	8f e0       	ldi	r24, 0x0F	; 15
    116c:	91 e0       	ldi	r25, 0x01	; 1
    116e:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <pf_open>
    1172:	80 e8       	ldi	r24, 0x80	; 128
    1174:	18 9f       	mul	r17, r24
    1176:	c0 0c       	add	r12, r0
    1178:	d1 1c       	adc	r13, r1
    117a:	11 24       	eor	r1, r1
    117c:	00 e0       	ldi	r16, 0x00	; 0
    117e:	10 e0       	ldi	r17, 0x00	; 0
    1180:	2d c0       	rjmp	.+90     	; 0x11dc <LCD_12864_Print_4_6+0xa6>
    1182:	f7 01       	movw	r30, r14
    1184:	e0 0f       	add	r30, r16
    1186:	f1 1f       	adc	r31, r17
    1188:	60 81       	ld	r22, Z
    118a:	70 e0       	ldi	r23, 0x00	; 0
    118c:	bb 20       	and	r11, r11
    118e:	89 f0       	breq	.+34     	; 0x11b2 <LCD_12864_Print_4_6+0x7c>
    1190:	6e 32       	cpi	r22, 0x2E	; 46
    1192:	71 05       	cpc	r23, r1
    1194:	39 f0       	breq	.+14     	; 0x11a4 <LCD_12864_Print_4_6+0x6e>
    1196:	60 53       	subi	r22, 0x30	; 48
    1198:	71 09       	sbc	r23, r1
    119a:	41 e0       	ldi	r20, 0x01	; 1
    119c:	c6 01       	movw	r24, r12
    119e:	0e 94 d7 06 	call	0xdae	; 0xdae <LCD_12864_print_symbol_4_6>
    11a2:	17 c0       	rjmp	.+46     	; 0x11d2 <LCD_12864_Print_4_6+0x9c>
    11a4:	41 e0       	ldi	r20, 0x01	; 1
    11a6:	6a e0       	ldi	r22, 0x0A	; 10
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	c6 01       	movw	r24, r12
    11ac:	0e 94 d7 06 	call	0xdae	; 0xdae <LCD_12864_print_symbol_4_6>
    11b0:	10 c0       	rjmp	.+32     	; 0x11d2 <LCD_12864_Print_4_6+0x9c>
    11b2:	6e 32       	cpi	r22, 0x2E	; 46
    11b4:	71 05       	cpc	r23, r1
    11b6:	39 f0       	breq	.+14     	; 0x11c6 <LCD_12864_Print_4_6+0x90>
    11b8:	60 53       	subi	r22, 0x30	; 48
    11ba:	71 09       	sbc	r23, r1
    11bc:	40 e0       	ldi	r20, 0x00	; 0
    11be:	c6 01       	movw	r24, r12
    11c0:	0e 94 d7 06 	call	0xdae	; 0xdae <LCD_12864_print_symbol_4_6>
    11c4:	06 c0       	rjmp	.+12     	; 0x11d2 <LCD_12864_Print_4_6+0x9c>
    11c6:	40 e0       	ldi	r20, 0x00	; 0
    11c8:	6a e0       	ldi	r22, 0x0A	; 10
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	c6 01       	movw	r24, r12
    11ce:	0e 94 d7 06 	call	0xdae	; 0xdae <LCD_12864_print_symbol_4_6>
    11d2:	85 e0       	ldi	r24, 0x05	; 5
    11d4:	c8 0e       	add	r12, r24
    11d6:	d1 1c       	adc	r13, r1
    11d8:	0f 5f       	subi	r16, 0xFF	; 255
    11da:	1f 4f       	sbci	r17, 0xFF	; 255
    11dc:	f7 01       	movw	r30, r14
    11de:	01 90       	ld	r0, Z+
    11e0:	00 20       	and	r0, r0
    11e2:	e9 f7       	brne	.-6      	; 0x11de <LCD_12864_Print_4_6+0xa8>
    11e4:	31 97       	sbiw	r30, 0x01	; 1
    11e6:	ee 19       	sub	r30, r14
    11e8:	ff 09       	sbc	r31, r15
    11ea:	0e 17       	cp	r16, r30
    11ec:	1f 07       	cpc	r17, r31
    11ee:	48 f2       	brcs	.-110    	; 0x1182 <LCD_12864_Print_4_6+0x4c>
    11f0:	80 e0       	ldi	r24, 0x00	; 0
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    11f8:	ac 96       	adiw	r28, 0x2c	; 44
    11fa:	0f b6       	in	r0, 0x3f	; 63
    11fc:	f8 94       	cli
    11fe:	de bf       	out	0x3e, r29	; 62
    1200:	0f be       	out	0x3f, r0	; 63
    1202:	cd bf       	out	0x3d, r28	; 61
    1204:	df 91       	pop	r29
    1206:	cf 91       	pop	r28
    1208:	1f 91       	pop	r17
    120a:	0f 91       	pop	r16
    120c:	ff 90       	pop	r15
    120e:	ef 90       	pop	r14
    1210:	df 90       	pop	r13
    1212:	cf 90       	pop	r12
    1214:	bf 90       	pop	r11
    1216:	08 95       	ret

00001218 <LCD_12864_Print_11_16>:
    1218:	bf 92       	push	r11
    121a:	cf 92       	push	r12
    121c:	df 92       	push	r13
    121e:	ef 92       	push	r14
    1220:	ff 92       	push	r15
    1222:	0f 93       	push	r16
    1224:	1f 93       	push	r17
    1226:	cf 93       	push	r28
    1228:	df 93       	push	r29
    122a:	cd b7       	in	r28, 0x3d	; 61
    122c:	de b7       	in	r29, 0x3e	; 62
    122e:	ac 97       	sbiw	r28, 0x2c	; 44
    1230:	0f b6       	in	r0, 0x3f	; 63
    1232:	f8 94       	cli
    1234:	de bf       	out	0x3e, r29	; 62
    1236:	0f be       	out	0x3f, r0	; 63
    1238:	cd bf       	out	0x3d, r28	; 61
    123a:	7c 01       	movw	r14, r24
    123c:	16 2f       	mov	r17, r22
    123e:	b4 2e       	mov	r11, r20
    1240:	69 01       	movw	r12, r18
    1242:	00 00       	nop
    1244:	ce 01       	movw	r24, r28
    1246:	01 96       	adiw	r24, 0x01	; 1
    1248:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    124c:	88 e1       	ldi	r24, 0x18	; 24
    124e:	91 e0       	ldi	r25, 0x01	; 1
    1250:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <pf_open>
    1254:	80 e8       	ldi	r24, 0x80	; 128
    1256:	18 9f       	mul	r17, r24
    1258:	e0 0c       	add	r14, r0
    125a:	f1 1c       	adc	r15, r1
    125c:	11 24       	eor	r1, r1
    125e:	00 e0       	ldi	r16, 0x00	; 0
    1260:	10 e0       	ldi	r17, 0x00	; 0
    1262:	19 c0       	rjmp	.+50     	; 0x1296 <LCD_12864_Print_11_16+0x7e>
    1264:	f6 01       	movw	r30, r12
    1266:	e0 0f       	add	r30, r16
    1268:	f1 1f       	adc	r31, r17
    126a:	60 81       	ld	r22, Z
    126c:	70 e0       	ldi	r23, 0x00	; 0
    126e:	bb 20       	and	r11, r11
    1270:	39 f0       	breq	.+14     	; 0x1280 <LCD_12864_Print_11_16+0x68>
    1272:	60 53       	subi	r22, 0x30	; 48
    1274:	71 09       	sbc	r23, r1
    1276:	41 e0       	ldi	r20, 0x01	; 1
    1278:	c7 01       	movw	r24, r14
    127a:	0e 94 1c 07 	call	0xe38	; 0xe38 <LCD_12864_print_symbol_11_16>
    127e:	06 c0       	rjmp	.+12     	; 0x128c <LCD_12864_Print_11_16+0x74>
    1280:	60 53       	subi	r22, 0x30	; 48
    1282:	71 09       	sbc	r23, r1
    1284:	40 e0       	ldi	r20, 0x00	; 0
    1286:	c7 01       	movw	r24, r14
    1288:	0e 94 1c 07 	call	0xe38	; 0xe38 <LCD_12864_print_symbol_11_16>
    128c:	8c e0       	ldi	r24, 0x0C	; 12
    128e:	e8 0e       	add	r14, r24
    1290:	f1 1c       	adc	r15, r1
    1292:	0f 5f       	subi	r16, 0xFF	; 255
    1294:	1f 4f       	sbci	r17, 0xFF	; 255
    1296:	f6 01       	movw	r30, r12
    1298:	01 90       	ld	r0, Z+
    129a:	00 20       	and	r0, r0
    129c:	e9 f7       	brne	.-6      	; 0x1298 <LCD_12864_Print_11_16+0x80>
    129e:	31 97       	sbiw	r30, 0x01	; 1
    12a0:	ec 19       	sub	r30, r12
    12a2:	fd 09       	sbc	r31, r13
    12a4:	0e 17       	cp	r16, r30
    12a6:	1f 07       	cpc	r17, r31
    12a8:	e8 f2       	brcs	.-70     	; 0x1264 <LCD_12864_Print_11_16+0x4c>
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    12b2:	ac 96       	adiw	r28, 0x2c	; 44
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	f8 94       	cli
    12b8:	de bf       	out	0x3e, r29	; 62
    12ba:	0f be       	out	0x3f, r0	; 63
    12bc:	cd bf       	out	0x3d, r28	; 61
    12be:	df 91       	pop	r29
    12c0:	cf 91       	pop	r28
    12c2:	1f 91       	pop	r17
    12c4:	0f 91       	pop	r16
    12c6:	ff 90       	pop	r15
    12c8:	ef 90       	pop	r14
    12ca:	df 90       	pop	r13
    12cc:	cf 90       	pop	r12
    12ce:	bf 90       	pop	r11
    12d0:	08 95       	ret

000012d2 <LCD_12864_Decode_UTF8>:
    12d2:	9f 92       	push	r9
    12d4:	af 92       	push	r10
    12d6:	bf 92       	push	r11
    12d8:	cf 92       	push	r12
    12da:	df 92       	push	r13
    12dc:	ef 92       	push	r14
    12de:	ff 92       	push	r15
    12e0:	0f 93       	push	r16
    12e2:	1f 93       	push	r17
    12e4:	cf 93       	push	r28
    12e6:	df 93       	push	r29
    12e8:	cd b7       	in	r28, 0x3d	; 61
    12ea:	de b7       	in	r29, 0x3e	; 62
    12ec:	ac 97       	sbiw	r28, 0x2c	; 44
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	f8 94       	cli
    12f2:	de bf       	out	0x3e, r29	; 62
    12f4:	0f be       	out	0x3f, r0	; 63
    12f6:	cd bf       	out	0x3d, r28	; 61
    12f8:	6c 01       	movw	r12, r24
    12fa:	16 2f       	mov	r17, r22
    12fc:	94 2e       	mov	r9, r20
    12fe:	59 01       	movw	r10, r18
    1300:	00 00       	nop
    1302:	ce 01       	movw	r24, r28
    1304:	01 96       	adiw	r24, 0x01	; 1
    1306:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    130a:	82 e2       	ldi	r24, 0x22	; 34
    130c:	91 e0       	ldi	r25, 0x01	; 1
    130e:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <pf_open>
    1312:	80 e8       	ldi	r24, 0x80	; 128
    1314:	18 9f       	mul	r17, r24
    1316:	c0 0c       	add	r12, r0
    1318:	d1 1c       	adc	r13, r1
    131a:	11 24       	eor	r1, r1
    131c:	e1 2c       	mov	r14, r1
    131e:	f1 2c       	mov	r15, r1
    1320:	7e c0       	rjmp	.+252    	; 0x141e <LCD_12864_Decode_UTF8+0x14c>
    1322:	f5 01       	movw	r30, r10
    1324:	ee 0d       	add	r30, r14
    1326:	ff 1d       	adc	r31, r15
    1328:	00 81       	ld	r16, Z
    132a:	00 3c       	cpi	r16, 0xC0	; 192
    132c:	d8 f4       	brcc	.+54     	; 0x1364 <LCD_12864_Decode_UTF8+0x92>
    132e:	08 3a       	cpi	r16, 0xA8	; 168
    1330:	c9 f0       	breq	.+50     	; 0x1364 <LCD_12864_Decode_UTF8+0x92>
    1332:	08 3b       	cpi	r16, 0xB8	; 184
    1334:	b9 f0       	breq	.+46     	; 0x1364 <LCD_12864_Decode_UTF8+0x92>
    1336:	00 3b       	cpi	r16, 0xB0	; 176
    1338:	a9 f0       	breq	.+42     	; 0x1364 <LCD_12864_Decode_UTF8+0x92>
    133a:	60 2f       	mov	r22, r16
    133c:	70 e0       	ldi	r23, 0x00	; 0
    133e:	99 20       	and	r9, r9
    1340:	39 f0       	breq	.+14     	; 0x1350 <LCD_12864_Decode_UTF8+0x7e>
    1342:	60 52       	subi	r22, 0x20	; 32
    1344:	71 09       	sbc	r23, r1
    1346:	41 e0       	ldi	r20, 0x01	; 1
    1348:	c6 01       	movw	r24, r12
    134a:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    134e:	06 c0       	rjmp	.+12     	; 0x135c <LCD_12864_Decode_UTF8+0x8a>
    1350:	60 52       	subi	r22, 0x20	; 32
    1352:	71 09       	sbc	r23, r1
    1354:	40 e0       	ldi	r20, 0x00	; 0
    1356:	c6 01       	movw	r24, r12
    1358:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    135c:	86 e0       	ldi	r24, 0x06	; 6
    135e:	c8 0e       	add	r12, r24
    1360:	d1 1c       	adc	r13, r1
    1362:	5a c0       	rjmp	.+180    	; 0x1418 <LCD_12864_Decode_UTF8+0x146>
    1364:	10 e0       	ldi	r17, 0x00	; 0
    1366:	c8 01       	movw	r24, r16
    1368:	80 5c       	subi	r24, 0xC0	; 192
    136a:	91 09       	sbc	r25, r1
    136c:	80 34       	cpi	r24, 0x40	; 64
    136e:	91 05       	cpc	r25, r1
    1370:	a0 f4       	brcc	.+40     	; 0x139a <LCD_12864_Decode_UTF8+0xc8>
    1372:	99 20       	and	r9, r9
    1374:	41 f0       	breq	.+16     	; 0x1386 <LCD_12864_Decode_UTF8+0xb4>
    1376:	41 e0       	ldi	r20, 0x01	; 1
    1378:	b8 01       	movw	r22, r16
    137a:	61 56       	subi	r22, 0x61	; 97
    137c:	71 09       	sbc	r23, r1
    137e:	c6 01       	movw	r24, r12
    1380:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    1384:	07 c0       	rjmp	.+14     	; 0x1394 <LCD_12864_Decode_UTF8+0xc2>
    1386:	40 e0       	ldi	r20, 0x00	; 0
    1388:	b8 01       	movw	r22, r16
    138a:	61 56       	subi	r22, 0x61	; 97
    138c:	71 09       	sbc	r23, r1
    138e:	c6 01       	movw	r24, r12
    1390:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    1394:	86 e0       	ldi	r24, 0x06	; 6
    1396:	c8 0e       	add	r12, r24
    1398:	d1 1c       	adc	r13, r1
    139a:	08 3a       	cpi	r16, 0xA8	; 168
    139c:	11 05       	cpc	r17, r1
    139e:	91 f4       	brne	.+36     	; 0x13c4 <LCD_12864_Decode_UTF8+0xf2>
    13a0:	99 20       	and	r9, r9
    13a2:	39 f0       	breq	.+14     	; 0x13b2 <LCD_12864_Decode_UTF8+0xe0>
    13a4:	41 e0       	ldi	r20, 0x01	; 1
    13a6:	6f e9       	ldi	r22, 0x9F	; 159
    13a8:	70 e0       	ldi	r23, 0x00	; 0
    13aa:	c6 01       	movw	r24, r12
    13ac:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    13b0:	06 c0       	rjmp	.+12     	; 0x13be <LCD_12864_Decode_UTF8+0xec>
    13b2:	40 e0       	ldi	r20, 0x00	; 0
    13b4:	6f e9       	ldi	r22, 0x9F	; 159
    13b6:	70 e0       	ldi	r23, 0x00	; 0
    13b8:	c6 01       	movw	r24, r12
    13ba:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    13be:	86 e0       	ldi	r24, 0x06	; 6
    13c0:	c8 0e       	add	r12, r24
    13c2:	d1 1c       	adc	r13, r1
    13c4:	08 3b       	cpi	r16, 0xB8	; 184
    13c6:	11 05       	cpc	r17, r1
    13c8:	91 f4       	brne	.+36     	; 0x13ee <LCD_12864_Decode_UTF8+0x11c>
    13ca:	99 20       	and	r9, r9
    13cc:	39 f0       	breq	.+14     	; 0x13dc <LCD_12864_Decode_UTF8+0x10a>
    13ce:	41 e0       	ldi	r20, 0x01	; 1
    13d0:	60 ea       	ldi	r22, 0xA0	; 160
    13d2:	70 e0       	ldi	r23, 0x00	; 0
    13d4:	c6 01       	movw	r24, r12
    13d6:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    13da:	06 c0       	rjmp	.+12     	; 0x13e8 <LCD_12864_Decode_UTF8+0x116>
    13dc:	40 e0       	ldi	r20, 0x00	; 0
    13de:	60 ea       	ldi	r22, 0xA0	; 160
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	c6 01       	movw	r24, r12
    13e4:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    13e8:	86 e0       	ldi	r24, 0x06	; 6
    13ea:	c8 0e       	add	r12, r24
    13ec:	d1 1c       	adc	r13, r1
    13ee:	00 3b       	cpi	r16, 0xB0	; 176
    13f0:	11 05       	cpc	r17, r1
    13f2:	91 f4       	brne	.+36     	; 0x1418 <LCD_12864_Decode_UTF8+0x146>
    13f4:	99 20       	and	r9, r9
    13f6:	39 f0       	breq	.+14     	; 0x1406 <LCD_12864_Decode_UTF8+0x134>
    13f8:	41 e0       	ldi	r20, 0x01	; 1
    13fa:	61 ea       	ldi	r22, 0xA1	; 161
    13fc:	70 e0       	ldi	r23, 0x00	; 0
    13fe:	c6 01       	movw	r24, r12
    1400:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    1404:	06 c0       	rjmp	.+12     	; 0x1412 <LCD_12864_Decode_UTF8+0x140>
    1406:	40 e0       	ldi	r20, 0x00	; 0
    1408:	61 ea       	ldi	r22, 0xA1	; 161
    140a:	70 e0       	ldi	r23, 0x00	; 0
    140c:	c6 01       	movw	r24, r12
    140e:	0e 94 8e 06 	call	0xd1c	; 0xd1c <LCD_12864_print_symbol>
    1412:	86 e0       	ldi	r24, 0x06	; 6
    1414:	c8 0e       	add	r12, r24
    1416:	d1 1c       	adc	r13, r1
    1418:	8f ef       	ldi	r24, 0xFF	; 255
    141a:	e8 1a       	sub	r14, r24
    141c:	f8 0a       	sbc	r15, r24
    141e:	f5 01       	movw	r30, r10
    1420:	01 90       	ld	r0, Z+
    1422:	00 20       	and	r0, r0
    1424:	e9 f7       	brne	.-6      	; 0x1420 <LCD_12864_Decode_UTF8+0x14e>
    1426:	31 97       	sbiw	r30, 0x01	; 1
    1428:	ea 19       	sub	r30, r10
    142a:	fb 09       	sbc	r31, r11
    142c:	ee 16       	cp	r14, r30
    142e:	ff 06       	cpc	r15, r31
    1430:	08 f4       	brcc	.+2      	; 0x1434 <LCD_12864_Decode_UTF8+0x162>
    1432:	77 cf       	rjmp	.-274    	; 0x1322 <LCD_12864_Decode_UTF8+0x50>
    1434:	80 e0       	ldi	r24, 0x00	; 0
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    143c:	ac 96       	adiw	r28, 0x2c	; 44
    143e:	0f b6       	in	r0, 0x3f	; 63
    1440:	f8 94       	cli
    1442:	de bf       	out	0x3e, r29	; 62
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	cd bf       	out	0x3d, r28	; 61
    1448:	df 91       	pop	r29
    144a:	cf 91       	pop	r28
    144c:	1f 91       	pop	r17
    144e:	0f 91       	pop	r16
    1450:	ff 90       	pop	r15
    1452:	ef 90       	pop	r14
    1454:	df 90       	pop	r13
    1456:	cf 90       	pop	r12
    1458:	bf 90       	pop	r11
    145a:	af 90       	pop	r10
    145c:	9f 90       	pop	r9
    145e:	08 95       	ret

00001460 <LCD_12864_Print_jpeg>:
    1460:	af 92       	push	r10
    1462:	bf 92       	push	r11
    1464:	cf 92       	push	r12
    1466:	df 92       	push	r13
    1468:	ef 92       	push	r14
    146a:	ff 92       	push	r15
    146c:	0f 93       	push	r16
    146e:	1f 93       	push	r17
    1470:	cf 93       	push	r28
    1472:	df 93       	push	r29
    1474:	cd b7       	in	r28, 0x3d	; 61
    1476:	de b7       	in	r29, 0x3e	; 62
    1478:	ac 97       	sbiw	r28, 0x2c	; 44
    147a:	0f b6       	in	r0, 0x3f	; 63
    147c:	f8 94       	cli
    147e:	de bf       	out	0x3e, r29	; 62
    1480:	0f be       	out	0x3f, r0	; 63
    1482:	cd bf       	out	0x3d, r28	; 61
    1484:	00 00       	nop
    1486:	ce 01       	movw	r24, r28
    1488:	01 96       	adiw	r24, 0x01	; 1
    148a:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    148e:	8c e2       	ldi	r24, 0x2C	; 44
    1490:	91 e0       	ldi	r25, 0x01	; 1
    1492:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <pf_open>
    1496:	a1 2c       	mov	r10, r1
    1498:	b1 2c       	mov	r11, r1
    149a:	e1 2c       	mov	r14, r1
    149c:	f1 2c       	mov	r15, r1
    149e:	1f c0       	rjmp	.+62     	; 0x14de <LCD_12864_Print_jpeg+0x7e>
    14a0:	65 01       	movw	r12, r10
    14a2:	d6 94       	lsr	r13
    14a4:	dc 2c       	mov	r13, r12
    14a6:	cc 24       	eor	r12, r12
    14a8:	d7 94       	ror	r13
    14aa:	c7 94       	ror	r12
    14ac:	86 01       	movw	r16, r12
    14ae:	01 5e       	subi	r16, 0xE1	; 225
    14b0:	1f 4f       	sbci	r17, 0xFF	; 255
    14b2:	0c c0       	rjmp	.+24     	; 0x14cc <LCD_12864_Print_jpeg+0x6c>
    14b4:	c7 01       	movw	r24, r14
    14b6:	0e 94 4c 19 	call	0x3298	; 0x3298 <read_symbol_from_SD>
    14ba:	f8 01       	movw	r30, r16
    14bc:	ef 56       	subi	r30, 0x6F	; 111
    14be:	fd 4f       	sbci	r31, 0xFD	; 253
    14c0:	80 83       	st	Z, r24
    14c2:	8f ef       	ldi	r24, 0xFF	; 255
    14c4:	e8 1a       	sub	r14, r24
    14c6:	f8 0a       	sbc	r15, r24
    14c8:	0f 5f       	subi	r16, 0xFF	; 255
    14ca:	1f 4f       	sbci	r17, 0xFF	; 255
    14cc:	c6 01       	movw	r24, r12
    14ce:	81 5a       	subi	r24, 0xA1	; 161
    14d0:	9f 4f       	sbci	r25, 0xFF	; 255
    14d2:	08 17       	cp	r16, r24
    14d4:	19 07       	cpc	r17, r25
    14d6:	74 f3       	brlt	.-36     	; 0x14b4 <LCD_12864_Print_jpeg+0x54>
    14d8:	8f ef       	ldi	r24, 0xFF	; 255
    14da:	a8 1a       	sub	r10, r24
    14dc:	b8 0a       	sbc	r11, r24
    14de:	88 e0       	ldi	r24, 0x08	; 8
    14e0:	a8 16       	cp	r10, r24
    14e2:	b1 04       	cpc	r11, r1
    14e4:	ec f2       	brlt	.-70     	; 0x14a0 <LCD_12864_Print_jpeg+0x40>
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	0e 94 7e 15 	call	0x2afc	; 0x2afc <pf_mount>
    14ee:	ac 96       	adiw	r28, 0x2c	; 44
    14f0:	0f b6       	in	r0, 0x3f	; 63
    14f2:	f8 94       	cli
    14f4:	de bf       	out	0x3e, r29	; 62
    14f6:	0f be       	out	0x3f, r0	; 63
    14f8:	cd bf       	out	0x3d, r28	; 61
    14fa:	df 91       	pop	r29
    14fc:	cf 91       	pop	r28
    14fe:	1f 91       	pop	r17
    1500:	0f 91       	pop	r16
    1502:	ff 90       	pop	r15
    1504:	ef 90       	pop	r14
    1506:	df 90       	pop	r13
    1508:	cf 90       	pop	r12
    150a:	bf 90       	pop	r11
    150c:	af 90       	pop	r10
    150e:	08 95       	ret

00001510 <LCD_12864_Clean_Frame_buffer>:
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	94 e0       	ldi	r25, 0x04	; 4
    1514:	e1 e9       	ldi	r30, 0x91	; 145
    1516:	f2 e0       	ldi	r31, 0x02	; 2
    1518:	df 01       	movw	r26, r30
    151a:	9c 01       	movw	r18, r24
    151c:	1d 92       	st	X+, r1
    151e:	21 50       	subi	r18, 0x01	; 1
    1520:	30 40       	sbci	r19, 0x00	; 0
    1522:	e1 f7       	brne	.-8      	; 0x151c <LCD_12864_Clean_Frame_buffer+0xc>
    1524:	08 95       	ret

00001526 <LCD_12864_Draw_line>:
	memset(Frame_buffer, 0x00, sizeof(Frame_buffer));
}
/*----------Различная графика--------------------*/
/*-----------------------------------------------*/
/*----------Линия--------------------*/
void LCD_12864_Draw_line(uint8_t x_start, uint8_t y_start, uint8_t x_end, uint8_t y_end) {
    1526:	8f 92       	push	r8
    1528:	9f 92       	push	r9
    152a:	af 92       	push	r10
    152c:	bf 92       	push	r11
    152e:	cf 92       	push	r12
    1530:	df 92       	push	r13
    1532:	ef 92       	push	r14
    1534:	ff 92       	push	r15
    1536:	0f 93       	push	r16
    1538:	1f 93       	push	r17
    153a:	cf 93       	push	r28
    153c:	df 93       	push	r29
    153e:	c8 2f       	mov	r28, r24
    1540:	d6 2f       	mov	r29, r22
    1542:	b4 2e       	mov	r11, r20
    1544:	82 2e       	mov	r8, r18
	int dx = (x_end >= x_start) ? x_end - x_start : x_start - x_end;
    1546:	48 17       	cp	r20, r24
    1548:	28 f0       	brcs	.+10     	; 0x1554 <LCD_12864_Draw_line+0x2e>
    154a:	c4 2e       	mov	r12, r20
    154c:	d1 2c       	mov	r13, r1
    154e:	c8 1a       	sub	r12, r24
    1550:	d1 08       	sbc	r13, r1
    1552:	04 c0       	rjmp	.+8      	; 0x155c <LCD_12864_Draw_line+0x36>
    1554:	c8 2e       	mov	r12, r24
    1556:	d1 2c       	mov	r13, r1
    1558:	c4 1a       	sub	r12, r20
    155a:	d1 08       	sbc	r13, r1
	int dy = (y_end >= y_start) ? y_end - y_start : y_start - y_end;
    155c:	8d 16       	cp	r8, r29
    155e:	28 f0       	brcs	.+10     	; 0x156a <LCD_12864_Draw_line+0x44>
    1560:	e8 2c       	mov	r14, r8
    1562:	f1 2c       	mov	r15, r1
    1564:	ed 1a       	sub	r14, r29
    1566:	f1 08       	sbc	r15, r1
    1568:	04 c0       	rjmp	.+8      	; 0x1572 <LCD_12864_Draw_line+0x4c>
    156a:	ed 2e       	mov	r14, r29
    156c:	f1 2c       	mov	r15, r1
    156e:	e8 18       	sub	r14, r8
    1570:	f1 08       	sbc	r15, r1
	int sx = (x_start < x_end) ? 1 : -1;
    1572:	cb 15       	cp	r28, r11
    1574:	18 f4       	brcc	.+6      	; 0x157c <LCD_12864_Draw_line+0x56>
    1576:	aa 24       	eor	r10, r10
    1578:	a3 94       	inc	r10
    157a:	02 c0       	rjmp	.+4      	; 0x1580 <LCD_12864_Draw_line+0x5a>
    157c:	aa 24       	eor	r10, r10
    157e:	aa 94       	dec	r10
	int sy = (y_start < y_end) ? 1 : -1;
    1580:	d8 15       	cp	r29, r8
    1582:	18 f4       	brcc	.+6      	; 0x158a <LCD_12864_Draw_line+0x64>
    1584:	99 24       	eor	r9, r9
    1586:	93 94       	inc	r9
    1588:	02 c0       	rjmp	.+4      	; 0x158e <LCD_12864_Draw_line+0x68>
    158a:	99 24       	eor	r9, r9
    158c:	9a 94       	dec	r9
	int err = dx - dy;
    158e:	86 01       	movw	r16, r12
    1590:	0e 19       	sub	r16, r14
    1592:	1f 09       	sbc	r17, r15

	for (;;) {
		LCD_12864_Draw_pixel(x_start, y_start);
    1594:	6d 2f       	mov	r22, r29
    1596:	8c 2f       	mov	r24, r28
    1598:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		if (x_start == x_end && y_start == y_end)
    159c:	cb 11       	cpse	r28, r11
    159e:	02 c0       	rjmp	.+4      	; 0x15a4 <LCD_12864_Draw_line+0x7e>
    15a0:	d8 15       	cp	r29, r8
    15a2:	a1 f0       	breq	.+40     	; 0x15cc <LCD_12864_Draw_line+0xa6>
		break;
		int e2 = err + err;
    15a4:	c8 01       	movw	r24, r16
    15a6:	88 0f       	add	r24, r24
    15a8:	99 1f       	adc	r25, r25
		if (e2 > -dy) {
    15aa:	22 27       	eor	r18, r18
    15ac:	33 27       	eor	r19, r19
    15ae:	2e 19       	sub	r18, r14
    15b0:	3f 09       	sbc	r19, r15
    15b2:	28 17       	cp	r18, r24
    15b4:	39 07       	cpc	r19, r25
    15b6:	1c f4       	brge	.+6      	; 0x15be <LCD_12864_Draw_line+0x98>
			err -= dy;
    15b8:	0e 19       	sub	r16, r14
    15ba:	1f 09       	sbc	r17, r15
			x_start += sx;
    15bc:	ca 0d       	add	r28, r10
		}
		if (e2 < dx) {
    15be:	8c 15       	cp	r24, r12
    15c0:	9d 05       	cpc	r25, r13
    15c2:	44 f7       	brge	.-48     	; 0x1594 <LCD_12864_Draw_line+0x6e>
			err += dx;
    15c4:	0c 0d       	add	r16, r12
    15c6:	1d 1d       	adc	r17, r13
			y_start += sy;
    15c8:	d9 0d       	add	r29, r9
    15ca:	e4 cf       	rjmp	.-56     	; 0x1594 <LCD_12864_Draw_line+0x6e>
		}
	}
}
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	1f 91       	pop	r17
    15d2:	0f 91       	pop	r16
    15d4:	ff 90       	pop	r15
    15d6:	ef 90       	pop	r14
    15d8:	df 90       	pop	r13
    15da:	cf 90       	pop	r12
    15dc:	bf 90       	pop	r11
    15de:	af 90       	pop	r10
    15e0:	9f 90       	pop	r9
    15e2:	8f 90       	pop	r8
    15e4:	08 95       	ret

000015e6 <LCD_12864_Draw_rectangle>:
/*----------Пустотелый прямоугольник--------------------*/
void LCD_12864_Draw_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
    15e6:	ef 92       	push	r14
    15e8:	ff 92       	push	r15
    15ea:	0f 93       	push	r16
    15ec:	1f 93       	push	r17
    15ee:	cf 93       	push	r28
    15f0:	df 93       	push	r29
    15f2:	7c 01       	movw	r14, r24
    15f4:	8b 01       	movw	r16, r22
    15f6:	e9 01       	movw	r28, r18
	/// \param y - начальная точка по оси "y"
	/// \param width - ширина прямоугольника
	/// \param height - высота прямоугольника

	/*Проверка ширины и высоты*/
	if ((x + width) >= ST7920_width) {
    15f8:	9c 01       	movw	r18, r24
    15fa:	24 0f       	add	r18, r20
    15fc:	35 1f       	adc	r19, r21
    15fe:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ST7920_width>
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	28 17       	cp	r18, r24
    1606:	39 07       	cpc	r19, r25
    1608:	18 f0       	brcs	.+6      	; 0x1610 <LCD_12864_Draw_rectangle+0x2a>
		width = ST7920_width - x;
    160a:	ac 01       	movw	r20, r24
    160c:	4e 19       	sub	r20, r14
    160e:	5f 09       	sbc	r21, r15
	}
	if ((y + height) >= ST7920_height) {
    1610:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	98 01       	movw	r18, r16
    1618:	2c 0f       	add	r18, r28
    161a:	3d 1f       	adc	r19, r29
    161c:	28 17       	cp	r18, r24
    161e:	39 07       	cpc	r19, r25
    1620:	18 f0       	brcs	.+6      	; 0x1628 <LCD_12864_Draw_rectangle+0x42>
		height = ST7920_height - y;
    1622:	ec 01       	movw	r28, r24
    1624:	c0 1b       	sub	r28, r16
    1626:	d1 0b       	sbc	r29, r17
	}

	/*Рисуем линии*/
	LCD_12864_Draw_line(x, y, x + width, y); /*Верх прямоугольника*/
    1628:	de 2d       	mov	r29, r14
    162a:	d4 0f       	add	r29, r20
    162c:	20 2f       	mov	r18, r16
    162e:	4d 2f       	mov	r20, r29
    1630:	60 2f       	mov	r22, r16
    1632:	8e 2d       	mov	r24, r14
    1634:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y + height, x + width, y + height); /*Низ прямоугольника*/
    1638:	c0 0f       	add	r28, r16
    163a:	2c 2f       	mov	r18, r28
    163c:	4d 2f       	mov	r20, r29
    163e:	6c 2f       	mov	r22, r28
    1640:	8e 2d       	mov	r24, r14
    1642:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y, x, y + height); /*Левая сторона прямоугольника*/
    1646:	2c 2f       	mov	r18, r28
    1648:	4e 2d       	mov	r20, r14
    164a:	60 2f       	mov	r22, r16
    164c:	8e 2d       	mov	r24, r14
    164e:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x + width, y, x + width, y + height); /*Правая сторона прямоугольника*/
    1652:	2c 2f       	mov	r18, r28
    1654:	4d 2f       	mov	r20, r29
    1656:	60 2f       	mov	r22, r16
    1658:	8d 2f       	mov	r24, r29
    165a:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
}
    165e:	df 91       	pop	r29
    1660:	cf 91       	pop	r28
    1662:	1f 91       	pop	r17
    1664:	0f 91       	pop	r16
    1666:	ff 90       	pop	r15
    1668:	ef 90       	pop	r14
    166a:	08 95       	ret

0000166c <LCD_12864_Draw_rectangle_filled>:
/*-------------------------------Закрашенный прямоугольник---------------------------------*/
void LCD_12864_Draw_rectangle_filled(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
    166c:	af 92       	push	r10
    166e:	bf 92       	push	r11
    1670:	cf 92       	push	r12
    1672:	df 92       	push	r13
    1674:	ef 92       	push	r14
    1676:	ff 92       	push	r15
    1678:	0f 93       	push	r16
    167a:	1f 93       	push	r17
    167c:	cf 93       	push	r28
    167e:	8c 01       	movw	r16, r24
    1680:	6b 01       	movw	r12, r22
    1682:	5a 01       	movw	r10, r20
    1684:	79 01       	movw	r14, r18
	/// \param y - начальная точка по оси "y"
	/// \param width - ширина прямоугольника
	/// \param height - высота прямоугольника

	/*Проверка ширины и высоты*/
	if ((x + width) >= ST7920_width) {
    1686:	9c 01       	movw	r18, r24
    1688:	24 0f       	add	r18, r20
    168a:	35 1f       	adc	r19, r21
    168c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ST7920_width>
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	28 17       	cp	r18, r24
    1694:	39 07       	cpc	r19, r25
    1696:	18 f0       	brcs	.+6      	; 0x169e <LCD_12864_Draw_rectangle_filled+0x32>
		width = ST7920_width - x;
    1698:	5c 01       	movw	r10, r24
    169a:	a0 1a       	sub	r10, r16
    169c:	b1 0a       	sbc	r11, r17
	}
	if ((y + height) >= ST7920_height) {
    169e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	96 01       	movw	r18, r12
    16a6:	2e 0d       	add	r18, r14
    16a8:	3f 1d       	adc	r19, r15
    16aa:	28 17       	cp	r18, r24
    16ac:	39 07       	cpc	r19, r25
    16ae:	18 f0       	brcs	.+6      	; 0x16b6 <LCD_12864_Draw_rectangle_filled+0x4a>
		height = ST7920_height - y;
    16b0:	7c 01       	movw	r14, r24
    16b2:	ec 18       	sub	r14, r12
    16b4:	fd 08       	sbc	r15, r13
	}

	/*Рисуем линии*/
	for (uint8_t i = 0; i <= height; i++) {
    16b6:	c0 e0       	ldi	r28, 0x00	; 0
    16b8:	09 c0       	rjmp	.+18     	; 0x16cc <LCD_12864_Draw_rectangle_filled+0x60>
		LCD_12864_Draw_line(x, y + i, x + width, y + i);
    16ba:	6c 2f       	mov	r22, r28
    16bc:	6c 0d       	add	r22, r12
    16be:	26 2f       	mov	r18, r22
    16c0:	40 2f       	mov	r20, r16
    16c2:	4a 0d       	add	r20, r10
    16c4:	80 2f       	mov	r24, r16
    16c6:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	if ((y + height) >= ST7920_height) {
		height = ST7920_height - y;
	}

	/*Рисуем линии*/
	for (uint8_t i = 0; i <= height; i++) {
    16ca:	cf 5f       	subi	r28, 0xFF	; 255
    16cc:	8c 2f       	mov	r24, r28
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	e8 16       	cp	r14, r24
    16d2:	f9 06       	cpc	r15, r25
    16d4:	90 f7       	brcc	.-28     	; 0x16ba <LCD_12864_Draw_rectangle_filled+0x4e>
		LCD_12864_Draw_line(x, y + i, x + width, y + i);
	}
}
    16d6:	cf 91       	pop	r28
    16d8:	1f 91       	pop	r17
    16da:	0f 91       	pop	r16
    16dc:	ff 90       	pop	r15
    16de:	ef 90       	pop	r14
    16e0:	df 90       	pop	r13
    16e2:	cf 90       	pop	r12
    16e4:	bf 90       	pop	r11
    16e6:	af 90       	pop	r10
    16e8:	08 95       	ret

000016ea <LCD_12864_Draw_circle>:
/*---------------------------------Пустотелая окружность-----------------------------------*/
void LCD_12864_Draw_circle(uint8_t x, uint8_t y, uint8_t radius) {
    16ea:	5f 92       	push	r5
    16ec:	6f 92       	push	r6
    16ee:	7f 92       	push	r7
    16f0:	8f 92       	push	r8
    16f2:	9f 92       	push	r9
    16f4:	af 92       	push	r10
    16f6:	bf 92       	push	r11
    16f8:	cf 92       	push	r12
    16fa:	df 92       	push	r13
    16fc:	ef 92       	push	r14
    16fe:	ff 92       	push	r15
    1700:	0f 93       	push	r16
    1702:	1f 93       	push	r17
    1704:	cf 93       	push	r28
    1706:	df 93       	push	r29
    1708:	78 2e       	mov	r7, r24
    170a:	66 2e       	mov	r6, r22
    170c:	c4 2f       	mov	r28, r20
	/// Вывести пустотелую окружность
	/// \param x - точка центра окружности по оси "x"
	/// \param y - точка центра окружности по оси "y"
	/// \param radius - радиус окружности

	int f = 1 - (int) radius;
    170e:	04 2f       	mov	r16, r20
    1710:	10 e0       	ldi	r17, 0x00	; 0
    1712:	81 e0       	ldi	r24, 0x01	; 1
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	6c 01       	movw	r12, r24
    1718:	c0 1a       	sub	r12, r16
    171a:	d1 0a       	sbc	r13, r17
	int ddF_x = 1;

	int ddF_y = -2 * (int) radius;
    171c:	aa 24       	eor	r10, r10
    171e:	bb 24       	eor	r11, r11
    1720:	a0 1a       	sub	r10, r16
    1722:	b1 0a       	sbc	r11, r17
    1724:	aa 0c       	add	r10, r10
    1726:	bb 1c       	adc	r11, r11
	int x_0 = 0;

	LCD_12864_Draw_pixel(x, y + radius);
    1728:	64 2f       	mov	r22, r20
    172a:	66 0d       	add	r22, r6
    172c:	87 2d       	mov	r24, r7
    172e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x, y - radius);
    1732:	66 2d       	mov	r22, r6
    1734:	6c 1b       	sub	r22, r28
    1736:	87 2d       	mov	r24, r7
    1738:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x + radius, y);
    173c:	66 2d       	mov	r22, r6
    173e:	8c 2f       	mov	r24, r28
    1740:	87 0d       	add	r24, r7
    1742:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x - radius, y);
    1746:	66 2d       	mov	r22, r6
    1748:	87 2d       	mov	r24, r7
    174a:	8c 1b       	sub	r24, r28
    174c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>

	int f = 1 - (int) radius;
	int ddF_x = 1;

	int ddF_y = -2 * (int) radius;
	int x_0 = 0;
    1750:	c0 e0       	ldi	r28, 0x00	; 0
    1752:	d0 e0       	ldi	r29, 0x00	; 0
	/// \param x - точка центра окружности по оси "x"
	/// \param y - точка центра окружности по оси "y"
	/// \param radius - радиус окружности

	int f = 1 - (int) radius;
	int ddF_x = 1;
    1754:	88 24       	eor	r8, r8
    1756:	83 94       	inc	r8
    1758:	91 2c       	mov	r9, r1
	LCD_12864_Draw_pixel(x, y - radius);
	LCD_12864_Draw_pixel(x + radius, y);
	LCD_12864_Draw_pixel(x - radius, y);

	int y_0 = radius;
	while (x_0 < y_0) {
    175a:	3f c0       	rjmp	.+126    	; 0x17da <LCD_12864_Draw_circle+0xf0>
		if (f >= 0) {
    175c:	dd 20       	and	r13, r13
    175e:	3c f0       	brlt	.+14     	; 0x176e <LCD_12864_Draw_circle+0x84>
			y_0--;
    1760:	01 50       	subi	r16, 0x01	; 1
    1762:	11 09       	sbc	r17, r1
			ddF_y += 2;
    1764:	82 e0       	ldi	r24, 0x02	; 2
    1766:	a8 0e       	add	r10, r24
    1768:	b1 1c       	adc	r11, r1
			f += ddF_y;
    176a:	ca 0c       	add	r12, r10
    176c:	db 1c       	adc	r13, r11
		}
		x_0++;
    176e:	21 96       	adiw	r28, 0x01	; 1
		ddF_x += 2;
    1770:	82 e0       	ldi	r24, 0x02	; 2
    1772:	88 0e       	add	r8, r24
    1774:	91 1c       	adc	r9, r1
		f += ddF_x;
    1776:	c8 0c       	add	r12, r8
    1778:	d9 1c       	adc	r13, r9
		LCD_12864_Draw_pixel(x + x_0, y + y_0);
    177a:	5c 2e       	mov	r5, r28
    177c:	57 0c       	add	r5, r7
    177e:	f6 2c       	mov	r15, r6
    1780:	f0 0e       	add	r15, r16
    1782:	6f 2d       	mov	r22, r15
    1784:	85 2d       	mov	r24, r5
    1786:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - x_0, y + y_0);
    178a:	e7 2c       	mov	r14, r7
    178c:	ec 1a       	sub	r14, r28
    178e:	6f 2d       	mov	r22, r15
    1790:	8e 2d       	mov	r24, r14
    1792:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x + x_0, y - y_0);
    1796:	f6 2c       	mov	r15, r6
    1798:	f0 1a       	sub	r15, r16
    179a:	6f 2d       	mov	r22, r15
    179c:	85 2d       	mov	r24, r5
    179e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - x_0, y - y_0);
    17a2:	6f 2d       	mov	r22, r15
    17a4:	8e 2d       	mov	r24, r14
    17a6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x + y_0, y + x_0);
    17aa:	fc 2e       	mov	r15, r28
    17ac:	f6 0c       	add	r15, r6
    17ae:	6f 2d       	mov	r22, r15
    17b0:	e7 2c       	mov	r14, r7
    17b2:	e0 0e       	add	r14, r16
    17b4:	8e 2d       	mov	r24, r14
    17b6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - y_0, y + x_0);
    17ba:	6f 2d       	mov	r22, r15
    17bc:	f7 2c       	mov	r15, r7
    17be:	f0 1a       	sub	r15, r16
    17c0:	8f 2d       	mov	r24, r15
    17c2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x + y_0, y - x_0);
    17c6:	56 2c       	mov	r5, r6
    17c8:	5c 1a       	sub	r5, r28
    17ca:	65 2d       	mov	r22, r5
    17cc:	8e 2d       	mov	r24, r14
    17ce:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - y_0, y - x_0);
    17d2:	65 2d       	mov	r22, r5
    17d4:	8f 2d       	mov	r24, r15
    17d6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x, y - radius);
	LCD_12864_Draw_pixel(x + radius, y);
	LCD_12864_Draw_pixel(x - radius, y);

	int y_0 = radius;
	while (x_0 < y_0) {
    17da:	c0 17       	cp	r28, r16
    17dc:	d1 07       	cpc	r29, r17
    17de:	0c f4       	brge	.+2      	; 0x17e2 <LCD_12864_Draw_circle+0xf8>
    17e0:	bd cf       	rjmp	.-134    	; 0x175c <LCD_12864_Draw_circle+0x72>
		LCD_12864_Draw_pixel(x + y_0, y + x_0);
		LCD_12864_Draw_pixel(x - y_0, y + x_0);
		LCD_12864_Draw_pixel(x + y_0, y - x_0);
		LCD_12864_Draw_pixel(x - y_0, y - x_0);
	}
}
    17e2:	df 91       	pop	r29
    17e4:	cf 91       	pop	r28
    17e6:	1f 91       	pop	r17
    17e8:	0f 91       	pop	r16
    17ea:	ff 90       	pop	r15
    17ec:	ef 90       	pop	r14
    17ee:	df 90       	pop	r13
    17f0:	cf 90       	pop	r12
    17f2:	bf 90       	pop	r11
    17f4:	af 90       	pop	r10
    17f6:	9f 90       	pop	r9
    17f8:	8f 90       	pop	r8
    17fa:	7f 90       	pop	r7
    17fc:	6f 90       	pop	r6
    17fe:	5f 90       	pop	r5
    1800:	08 95       	ret

00001802 <timer_ini>:
uint8_t flag_irq = 1;


void timer_ini(void)//период 4сек
{
	TCCR1B |= (1<<WGM12); // устанавливаем режим СТС (сброс по совпадению)
    1802:	e1 e8       	ldi	r30, 0x81	; 129
    1804:	f0 e0       	ldi	r31, 0x00	; 0
    1806:	80 81       	ld	r24, Z
    1808:	88 60       	ori	r24, 0x08	; 8
    180a:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); //устанавливаем бит разрешения прерывания 1ого счетчика по совпадению с OCR1A(H и L)
    180c:	af e6       	ldi	r26, 0x6F	; 111
    180e:	b0 e0       	ldi	r27, 0x00	; 0
    1810:	8c 91       	ld	r24, X
    1812:	82 60       	ori	r24, 0x02	; 2
    1814:	8c 93       	st	X, r24
	OCR1AH = 0b01111010; //записываем в регистр число для сравнения
    1816:	8a e7       	ldi	r24, 0x7A	; 122
    1818:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0b00010010;
    181c:	82 e1       	ldi	r24, 0x12	; 18
    181e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1B |= (1<<CS12)|(1<<CS10);//установим делитель 1024.
    1822:	80 81       	ld	r24, Z
    1824:	85 60       	ori	r24, 0x05	; 5
    1826:	80 83       	st	Z, r24
    1828:	08 95       	ret

0000182a <__vector_11>:
}
//——————————————–
ISR (TIMER1_COMPA_vect)
{
    182a:	1f 92       	push	r1
    182c:	0f 92       	push	r0
    182e:	0f b6       	in	r0, 0x3f	; 63
    1830:	0f 92       	push	r0
    1832:	11 24       	eor	r1, r1
    1834:	2f 93       	push	r18
    1836:	3f 93       	push	r19
    1838:	4f 93       	push	r20
    183a:	5f 93       	push	r21
    183c:	6f 93       	push	r22
    183e:	7f 93       	push	r23
    1840:	8f 93       	push	r24
    1842:	9f 93       	push	r25
    1844:	af 93       	push	r26
    1846:	bf 93       	push	r27
    1848:	ef 93       	push	r30
    184a:	ff 93       	push	r31
	if((strlen(temp_street)!=0)&&(strlen(hum_street)!=0)&&(strlen(WIND_speed)!=0)&&(strlen(Rain)!=0)&&(strlen(Vbat)!=0)&&(strlen(wind_direction)!=0))
    184c:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <temp_street>
    1850:	88 23       	and	r24, r24
    1852:	09 f4       	brne	.+2      	; 0x1856 <__vector_11+0x2c>
    1854:	4c c0       	rjmp	.+152    	; 0x18ee <__vector_11+0xc4>
    1856:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <hum_street>
    185a:	88 23       	and	r24, r24
    185c:	09 f4       	brne	.+2      	; 0x1860 <__vector_11+0x36>
    185e:	47 c0       	rjmp	.+142    	; 0x18ee <__vector_11+0xc4>
    1860:	80 91 55 02 	lds	r24, 0x0255	; 0x800255 <WIND_speed>
    1864:	88 23       	and	r24, r24
    1866:	09 f4       	brne	.+2      	; 0x186a <__vector_11+0x40>
    1868:	42 c0       	rjmp	.+132    	; 0x18ee <__vector_11+0xc4>
    186a:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <Rain>
    186e:	88 23       	and	r24, r24
    1870:	f1 f1       	breq	.+124    	; 0x18ee <__vector_11+0xc4>
    1872:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <Vbat>
    1876:	88 23       	and	r24, r24
    1878:	d1 f1       	breq	.+116    	; 0x18ee <__vector_11+0xc4>
    187a:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <wind_direction>
    187e:	88 23       	and	r24, r24
    1880:	b1 f1       	breq	.+108    	; 0x18ee <__vector_11+0xc4>
	{
		//отправка строки по UART в формате: ул.темп./скор.ветра/осадки/ул.влажность/заряд АКБ/направл.ветра
	    sprintf(DATA_TO_UART,"%s ",temp_street);
    1882:	87 e8       	ldi	r24, 0x87	; 135
    1884:	92 e0       	ldi	r25, 0x02	; 2
    1886:	9f 93       	push	r25
    1888:	8f 93       	push	r24
    188a:	86 e3       	ldi	r24, 0x36	; 54
    188c:	91 e0       	ldi	r25, 0x01	; 1
    188e:	9f 93       	push	r25
    1890:	8f 93       	push	r24
    1892:	81 ef       	ldi	r24, 0xF1	; 241
    1894:	91 e0       	ldi	r25, 0x01	; 1
    1896:	9f 93       	push	r25
    1898:	8f 93       	push	r24
    189a:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
		strcat(DATA_TO_UART,WIND_speed);
    189e:	65 e5       	ldi	r22, 0x55	; 85
    18a0:	72 e0       	ldi	r23, 0x02	; 2
    18a2:	81 ef       	ldi	r24, 0xF1	; 241
    18a4:	91 e0       	ldi	r25, 0x01	; 1
    18a6:	0e 94 3c 2c 	call	0x5878	; 0x5878 <strcat>
		strcat(DATA_TO_UART,Rain);
    18aa:	63 e2       	ldi	r22, 0x23	; 35
    18ac:	72 e0       	ldi	r23, 0x02	; 2
    18ae:	81 ef       	ldi	r24, 0xF1	; 241
    18b0:	91 e0       	ldi	r25, 0x01	; 1
    18b2:	0e 94 3c 2c 	call	0x5878	; 0x5878 <strcat>
		strcat(DATA_TO_UART,hum_street);
    18b6:	6d e7       	ldi	r22, 0x7D	; 125
    18b8:	72 e0       	ldi	r23, 0x02	; 2
    18ba:	81 ef       	ldi	r24, 0xF1	; 241
    18bc:	91 e0       	ldi	r25, 0x01	; 1
    18be:	0e 94 3c 2c 	call	0x5878	; 0x5878 <strcat>
		strcat(DATA_TO_UART,Vbat);
    18c2:	6d e2       	ldi	r22, 0x2D	; 45
    18c4:	72 e0       	ldi	r23, 0x02	; 2
    18c6:	81 ef       	ldi	r24, 0xF1	; 241
    18c8:	91 e0       	ldi	r25, 0x01	; 1
    18ca:	0e 94 3c 2c 	call	0x5878	; 0x5878 <strcat>
		strcat(DATA_TO_UART,wind_direction);
    18ce:	6b e4       	ldi	r22, 0x4B	; 75
    18d0:	72 e0       	ldi	r23, 0x02	; 2
    18d2:	81 ef       	ldi	r24, 0xF1	; 241
    18d4:	91 e0       	ldi	r25, 0x01	; 1
    18d6:	0e 94 3c 2c 	call	0x5878	; 0x5878 <strcat>
		USART_Transmit(DATA_TO_UART);
    18da:	81 ef       	ldi	r24, 0xF1	; 241
    18dc:	91 e0       	ldi	r25, 0x01	; 1
    18de:	0e 94 d5 19 	call	0x33aa	; 0x33aa <USART_Transmit>
    18e2:	0f 90       	pop	r0
    18e4:	0f 90       	pop	r0
    18e6:	0f 90       	pop	r0
    18e8:	0f 90       	pop	r0
    18ea:	0f 90       	pop	r0
    18ec:	0f 90       	pop	r0
	}
}
    18ee:	ff 91       	pop	r31
    18f0:	ef 91       	pop	r30
    18f2:	bf 91       	pop	r27
    18f4:	af 91       	pop	r26
    18f6:	9f 91       	pop	r25
    18f8:	8f 91       	pop	r24
    18fa:	7f 91       	pop	r23
    18fc:	6f 91       	pop	r22
    18fe:	5f 91       	pop	r21
    1900:	4f 91       	pop	r20
    1902:	3f 91       	pop	r19
    1904:	2f 91       	pop	r18
    1906:	0f 90       	pop	r0
    1908:	0f be       	out	0x3f, r0	; 63
    190a:	0f 90       	pop	r0
    190c:	1f 90       	pop	r1
    190e:	18 95       	reti

00001910 <SPI_init>:

void SPI_init(void) //инициализация SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //ножки SPI на выход
    1910:	84 b1       	in	r24, 0x04	; 4
    1912:	8e 62       	ori	r24, 0x2E	; 46
    1914:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //низкий уровень
    1916:	85 b1       	in	r24, 0x05	; 5
    1918:	83 7d       	andi	r24, 0xD3	; 211
    191a:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<IRQ);
    191c:	8a b1       	in	r24, 0x0a	; 10
    191e:	8b 7f       	andi	r24, 0xFB	; 251
    1920:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<IRQ);
    1922:	8b b1       	in	r24, 0x0b	; 11
    1924:	84 60       	ori	r24, 0x04	; 4
    1926:	8b b9       	out	0x0b, r24	; 11
	HIGH_CSN;
    1928:	85 b1       	in	r24, 0x05	; 5
    192a:	84 60       	ori	r24, 0x04	; 4
    192c:	85 b9       	out	0x05, r24	; 5
	SPCR = ((1<<SPE)|(1<<MSTR));//включим шину, объявим ведущим
    192e:	80 e5       	ldi	r24, 0x50	; 80
    1930:	8c bd       	out	0x2c, r24	; 44
    1932:	08 95       	ret

00001934 <port_init>:
}
//-------------------------------------------------------------
void port_init(void)
{
	//инициализация портов для светодиода
	DDRD |= (1 << LED);//led
    1934:	8a b1       	in	r24, 0x0a	; 10
    1936:	80 61       	ori	r24, 0x10	; 16
    1938:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~ (1 << LED);
    193a:	8b b1       	in	r24, 0x0b	; 11
    193c:	8f 7e       	andi	r24, 0xEF	; 239
    193e:	8b b9       	out	0x0b, r24	; 11
	
	//инициализация портов для LCD12864
	DDRD |= (1<<RS);//ножка RS на выход для LCD12864
    1940:	8a b1       	in	r24, 0x0a	; 10
    1942:	80 68       	ori	r24, 0x80	; 128
    1944:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RS);
    1946:	8b b1       	in	r24, 0x0b	; 11
    1948:	8f 77       	andi	r24, 0x7F	; 127
    194a:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<E);
    194c:	8a b1       	in	r24, 0x0a	; 10
    194e:	80 62       	ori	r24, 0x20	; 32
    1950:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<E);
    1952:	8b b1       	in	r24, 0x0b	; 11
    1954:	8f 7d       	andi	r24, 0xDF	; 223
    1956:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<RW);
    1958:	8a b1       	in	r24, 0x0a	; 10
    195a:	80 64       	ori	r24, 0x40	; 64
    195c:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RW);
    195e:	8b b1       	in	r24, 0x0b	; 11
    1960:	8f 7b       	andi	r24, 0xBF	; 191
    1962:	8b b9       	out	0x0b, r24	; 11
    1964:	08 95       	ret

00001966 <spi_send_recv>:
	 DDRC|=(1<<MOSI_SD)|(1<<SCK_SD);*/
} 
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // Передаёт и принимает 1 байт по SPI, возвращает полученное значение
{
	SPDR = data;
    1966:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
    1968:	0d b4       	in	r0, 0x2d	; 45
    196a:	07 fe       	sbrs	r0, 7
    196c:	fd cf       	rjmp	.-6      	; 0x1968 <spi_send_recv+0x2>
	return SPDR;
    196e:	8e b5       	in	r24, 0x2e	; 46
}
    1970:	08 95       	ret

00001972 <main>:
void main(void)
{	
	port_init();
    1972:	0e 94 9a 0c 	call	0x1934	; 0x1934 <port_init>
	PORTD |= (1<<LED);
    1976:	8b b1       	in	r24, 0x0b	; 11
    1978:	80 61       	ori	r24, 0x10	; 16
    197a:	8b b9       	out	0x0b, r24	; 11
	LCD_12864_ini();
    197c:	0e 94 70 06 	call	0xce0	; 0xce0 <LCD_12864_ini>
	//очистка дисплея
	LCD_12864_GrapnicMode(1);
    1980:	81 e0       	ldi	r24, 0x01	; 1
    1982:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
	LCD_12864_Clean_Frame_buffer();
    1986:	0e 94 88 0a 	call	0x1510	; 0x1510 <LCD_12864_Clean_Frame_buffer>
	LCD_12864_Draw_bitmap(Frame_buffer);
    198a:	81 e9       	ldi	r24, 0x91	; 145
    198c:	92 e0       	ldi	r25, 0x02	; 2
    198e:	0e 94 18 05 	call	0xa30	; 0xa30 <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
	//Вывод приветствия
	Print_Hello_World(Frame_buffer);
    1998:	81 e9       	ldi	r24, 0x91	; 145
    199a:	92 e0       	ldi	r25, 0x02	; 2
    199c:	0e 94 f0 19 	call	0x33e0	; 0x33e0 <Print_Hello_World>
	//Инициализация 
	SPI_init();
    19a0:	0e 94 88 0c 	call	0x1910	; 0x1910 <SPI_init>
	timer_ini();
    19a4:	0e 94 01 0c 	call	0x1802	; 0x1802 <timer_ini>
	I2C_Init();
    19a8:	0e 94 91 19 	call	0x3322	; 0x3322 <I2C_Init>
    USART_Init(8);    //Инициализация модуля USART скорость 115200
    19ac:	88 e0       	ldi	r24, 0x08	; 8
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	0e 94 bf 19 	call	0x337e	; 0x337e <USART_Init>
	NRF24_ini();
    19b4:	0e 94 9e 11 	call	0x233c	; 0x233c <NRF24_ini>
	RTC_init();
    19b8:	0e 94 3b 19 	call	0x3276	; 0x3276 <RTC_init>
	dht22_init();
    19bc:	0e 94 84 03 	call	0x708	; 0x708 <dht22_init>
	BMP180_Calibration();
    19c0:	0e 94 14 01 	call	0x228	; 0x228 <BMP180_Calibration>
	// Установка времени для DS3231(делается 1 разv)
	//RTC_write_time(13, 30, 0);
	//RTC_write_date(2, 28, 6, 22);
	// настраиваем параметры прерывания
	EICRA = (1<<ISC01) | (0<<ISC00);
    19c4:	82 e0       	ldi	r24, 0x02	; 2
    19c6:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT0);
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	8d bb       	out	0x1d, r24	; 29
	// и разрешаем его глобально
	sei();
    19ce:	78 94       	sei
	//Вывод окна загрузки
	Print_Download(Frame_buffer);
    19d0:	81 e9       	ldi	r24, 0x91	; 145
    19d2:	92 e0       	ldi	r25, 0x02	; 2
    19d4:	0e 94 1a 1a 	call	0x3434	; 0x3434 <Print_Download>
	PORTD &= ~(1<<LED);
    19d8:	8b b1       	in	r24, 0x0b	; 11
    19da:	8f 7e       	andi	r24, 0xEF	; 239
    19dc:	8b b9       	out	0x0b, r24	; 11
    while (1) 
    {
		Print_Home_Page(Frame_buffer);
    19de:	81 e9       	ldi	r24, 0x91	; 145
    19e0:	92 e0       	ldi	r25, 0x02	; 2
    19e2:	0e 94 c4 22 	call	0x4588	; 0x4588 <Print_Home_Page>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    19e6:	2f ef       	ldi	r18, 0xFF	; 255
    19e8:	83 ed       	ldi	r24, 0xD3	; 211
    19ea:	90 e3       	ldi	r25, 0x30	; 48
    19ec:	21 50       	subi	r18, 0x01	; 1
    19ee:	80 40       	sbci	r24, 0x00	; 0
    19f0:	90 40       	sbci	r25, 0x00	; 0
    19f2:	e1 f7       	brne	.-8      	; 0x19ec <main+0x7a>
    19f4:	00 c0       	rjmp	.+0      	; 0x19f6 <main+0x84>
    19f6:	00 00       	nop
    19f8:	f2 cf       	rjmp	.-28     	; 0x19de <main+0x6c>

000019fa <xmit_spi>:
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    19fa:	20 e0       	ldi	r18, 0x00	; 0
    19fc:	12 c0       	rjmp	.+36     	; 0x1a22 <xmit_spi+0x28>
  {
   if ((data&0x80)==0x00) PORTC&=~_BV(SD_DI);
    19fe:	88 23       	and	r24, r24
    1a00:	24 f0       	brlt	.+8      	; 0x1a0a <xmit_spi+0x10>
    1a02:	98 b1       	in	r25, 0x08	; 8
    1a04:	9b 7f       	andi	r25, 0xFB	; 251
    1a06:	98 b9       	out	0x08, r25	; 8
    1a08:	03 c0       	rjmp	.+6      	; 0x1a10 <xmit_spi+0x16>
                     else PORTC|=_BV(SD_DI);
    1a0a:	98 b1       	in	r25, 0x08	; 8
    1a0c:	94 60       	ori	r25, 0x04	; 4
    1a0e:	98 b9       	out	0x08, r25	; 8
   data=data<<1; 
    1a10:	88 0f       	add	r24, r24
   PORTC|=_BV(SD_CLK);
    1a12:	98 b1       	in	r25, 0x08	; 8
    1a14:	98 60       	ori	r25, 0x08	; 8
    1a16:	98 b9       	out	0x08, r25	; 8
   asm("nop"); 
    1a18:	00 00       	nop
   PORTC&=~_BV(SD_CLK);
    1a1a:	98 b1       	in	r25, 0x08	; 8
    1a1c:	97 7f       	andi	r25, 0xF7	; 247
    1a1e:	98 b9       	out	0x08, r25	; 8
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    1a20:	2f 5f       	subi	r18, 0xFF	; 255
    1a22:	28 30       	cpi	r18, 0x08	; 8
    1a24:	60 f3       	brcs	.-40     	; 0x19fe <xmit_spi+0x4>
   data=data<<1; 
   PORTC|=_BV(SD_CLK);
   asm("nop"); 
   PORTC&=~_BV(SD_CLK);
  }
}
    1a26:	08 95       	ret

00001a28 <rcv_spi>:

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);
    1a28:	88 b1       	in	r24, 0x08	; 8
    1a2a:	84 60       	ori	r24, 0x04	; 4
    1a2c:	88 b9       	out	0x08, r24	; 8
   PORTC&=~_BV(SD_CLK);
  }
}

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;
    1a2e:	80 e0       	ldi	r24, 0x00	; 0

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
    1a30:	20 e0       	ldi	r18, 0x00	; 0
    1a32:	0b c0       	rjmp	.+22     	; 0x1a4a <rcv_spi+0x22>
  {
   PORTC|=_BV(SD_CLK);
    1a34:	98 b1       	in	r25, 0x08	; 8
    1a36:	98 60       	ori	r25, 0x08	; 8
    1a38:	98 b9       	out	0x08, r25	; 8
   res=res<<1;
    1a3a:	88 0f       	add	r24, r24
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
    1a3c:	31 99       	sbic	0x06, 1	; 6
    1a3e:	81 60       	ori	r24, 0x01	; 1
   PORTC&=~_BV(SD_CLK);
    1a40:	98 b1       	in	r25, 0x08	; 8
    1a42:	97 7f       	andi	r25, 0xF7	; 247
    1a44:	98 b9       	out	0x08, r25	; 8
   asm("nop");
    1a46:	00 00       	nop
BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
    1a48:	2f 5f       	subi	r18, 0xFF	; 255
    1a4a:	28 30       	cpi	r18, 0x08	; 8
    1a4c:	98 f3       	brcs	.-26     	; 0x1a34 <rcv_spi+0xc>
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
   PORTC&=~_BV(SD_CLK);
   asm("nop");
  }
 return res;
}	/* Send 0xFF and receive a byte */
    1a4e:	08 95       	ret

00001a50 <send_cmd>:
static
BYTE send_cmd (
	BYTE cmd,		// Command byte 
	DWORD arg		// Argument 
)
{
    1a50:	ff 92       	push	r15
    1a52:	0f 93       	push	r16
    1a54:	1f 93       	push	r17
    1a56:	cf 93       	push	r28
    1a58:	df 93       	push	r29
    1a5a:	c8 2f       	mov	r28, r24
    1a5c:	d4 2f       	mov	r29, r20
    1a5e:	15 2f       	mov	r17, r21
    1a60:	06 2f       	mov	r16, r22
    1a62:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	// ACMD<n> is the command sequense of CMD55-CMD<n> 
    1a64:	88 23       	and	r24, r24
    1a66:	4c f4       	brge	.+18     	; 0x1a7a <send_cmd+0x2a>
		cmd &= 0x7F;
    1a68:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
    1a6a:	40 e0       	ldi	r20, 0x00	; 0
    1a6c:	50 e0       	ldi	r21, 0x00	; 0
    1a6e:	ba 01       	movw	r22, r20
    1a70:	87 e7       	ldi	r24, 0x77	; 119
    1a72:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
		if (res > 1) return res;
    1a76:	82 30       	cpi	r24, 0x02	; 2
    1a78:	50 f5       	brcc	.+84     	; 0x1ace <send_cmd+0x7e>
	}

	// Select the card 
	DESELECT();
    1a7a:	85 b1       	in	r24, 0x05	; 5
    1a7c:	81 60       	ori	r24, 0x01	; 1
    1a7e:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
    1a80:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
	SELECT();
    1a84:	85 b1       	in	r24, 0x05	; 5
    1a86:	8e 7f       	andi	r24, 0xFE	; 254
    1a88:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
    1a8a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>

	// Send a command packet 
	xmit_spi(cmd);						// Start + Command index 
    1a8e:	8c 2f       	mov	r24, r28
    1a90:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
    1a94:	8f 2d       	mov	r24, r15
    1a96:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
    1a9a:	80 2f       	mov	r24, r16
    1a9c:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
    1aa0:	81 2f       	mov	r24, r17
    1aa2:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
	xmit_spi((BYTE)arg);				// Argument[7..0] 
    1aa6:	8d 2f       	mov	r24, r29
    1aa8:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
	n = 0x01;							// Dummy CRC + Stop 
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    1aac:	c0 34       	cpi	r28, 0x40	; 64
    1aae:	11 f0       	breq	.+4      	; 0x1ab4 <send_cmd+0x64>
	xmit_spi(cmd);						// Start + Command index 
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
	xmit_spi((BYTE)arg);				// Argument[7..0] 
	n = 0x01;							// Dummy CRC + Stop 
    1ab0:	81 e0       	ldi	r24, 0x01	; 1
    1ab2:	01 c0       	rjmp	.+2      	; 0x1ab6 <send_cmd+0x66>
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    1ab4:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;			// Valid CRC for CMD8(0x1AA) 
    1ab6:	c8 34       	cpi	r28, 0x48	; 72
    1ab8:	09 f4       	brne	.+2      	; 0x1abc <send_cmd+0x6c>
    1aba:	87 e8       	ldi	r24, 0x87	; 135
	xmit_spi(n);
    1abc:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>

	// Receive a command response 
	n = 10;								// Wait for a valid response in timeout of 10 attempts 
    1ac0:	ca e0       	ldi	r28, 0x0A	; 10
	do {
		res = rcv_spi();
    1ac2:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
	} while ((res & 0x80) && --n);
    1ac6:	88 23       	and	r24, r24
    1ac8:	14 f4       	brge	.+4      	; 0x1ace <send_cmd+0x7e>
    1aca:	c1 50       	subi	r28, 0x01	; 1
    1acc:	d1 f7       	brne	.-12     	; 0x1ac2 <send_cmd+0x72>

	return res;			// Return with the response value 
}
    1ace:	df 91       	pop	r29
    1ad0:	cf 91       	pop	r28
    1ad2:	1f 91       	pop	r17
    1ad4:	0f 91       	pop	r16
    1ad6:	ff 90       	pop	r15
    1ad8:	08 95       	ret

00001ada <release_spi>:
// Deselect the card and release SPI bus                                 
//-----------------------------------------------------------------------
static
void release_spi (void)
{
	rcv_spi();
    1ada:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1ade:	08 95       	ret

00001ae0 <disk_readp>:
	BYTE *buff,		// Pointer to the read buffer (NULL:Read bytes are forwarded to the stream) 
	DWORD lba,		// Sector number (LBA) 
	WORD ofs,		// Byte offset to read from (0..511) 
	WORD cnt		// Number of bytes to read (ofs + cnt mus be <= 512) 
)
{
    1ae0:	cf 92       	push	r12
    1ae2:	df 92       	push	r13
    1ae4:	ef 92       	push	r14
    1ae6:	ff 92       	push	r15
    1ae8:	0f 93       	push	r16
    1aea:	1f 93       	push	r17
    1aec:	cf 93       	push	r28
    1aee:	df 93       	push	r29
    1af0:	7c 01       	movw	r14, r24
    1af2:	69 01       	movw	r12, r18
	BYTE rc;
	WORD bc;

//	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;

	if (!(CardType & CT_BLOCK))
    1af4:	80 91 93 06 	lds	r24, 0x0693	; 0x800693 <CardType>
    1af8:	83 fd       	sbrc	r24, 3
    1afa:	09 c0       	rjmp	.+18     	; 0x1b0e <disk_readp+0x2e>
	{
		lba *= 512;		// Convert to byte address if needed 
    1afc:	03 2e       	mov	r0, r19
    1afe:	39 e0       	ldi	r19, 0x09	; 9
    1b00:	44 0f       	add	r20, r20
    1b02:	55 1f       	adc	r21, r21
    1b04:	66 1f       	adc	r22, r22
    1b06:	77 1f       	adc	r23, r23
    1b08:	3a 95       	dec	r19
    1b0a:	d1 f7       	brne	.-12     	; 0x1b00 <disk_readp+0x20>
    1b0c:	30 2d       	mov	r19, r0
	}
	res = RES_ERROR;
	if (send_cmd(CMD17, lba) == 0) {		// READ_SINGLE_BLOCK 
    1b0e:	81 e5       	ldi	r24, 0x51	; 81
    1b10:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1b14:	81 11       	cpse	r24, r1
    1b16:	34 c0       	rjmp	.+104    	; 0x1b80 <disk_readp+0xa0>
    1b18:	c0 e3       	ldi	r28, 0x30	; 48
    1b1a:	d5 e7       	ldi	r29, 0x75	; 117
		bc = 30000;
		do {							// Wait for data packet in timeout of 100ms 
			rc = rcv_spi();
    1b1c:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
		} while (rc == 0xFF && --bc);
    1b20:	8f 3f       	cpi	r24, 0xFF	; 255
    1b22:	11 f4       	brne	.+4      	; 0x1b28 <disk_readp+0x48>
    1b24:	21 97       	sbiw	r28, 0x01	; 1
    1b26:	d1 f7       	brne	.-12     	; 0x1b1c <disk_readp+0x3c>

		if (rc == 0xFE) {				// A data packet arrived 
    1b28:	8e 3f       	cpi	r24, 0xFE	; 254
    1b2a:	61 f5       	brne	.+88     	; 0x1b84 <disk_readp+0xa4>
			bc = 514 - ofs - cnt;
    1b2c:	cc 27       	eor	r28, r28
    1b2e:	dd 27       	eor	r29, r29
    1b30:	cc 19       	sub	r28, r12
    1b32:	dd 09       	sbc	r29, r13
    1b34:	c0 1b       	sub	r28, r16
    1b36:	d1 0b       	sbc	r29, r17
    1b38:	ce 5f       	subi	r28, 0xFE	; 254
    1b3a:	dd 4f       	sbci	r29, 0xFD	; 253

			// Skip leading bytes 
			if (ofs) {
    1b3c:	c1 14       	cp	r12, r1
    1b3e:	d1 04       	cpc	r13, r1
    1b40:	31 f0       	breq	.+12     	; 0x1b4e <disk_readp+0x6e>
				do rcv_spi(); while (--ofs);
    1b42:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1b46:	81 e0       	ldi	r24, 0x01	; 1
    1b48:	c8 1a       	sub	r12, r24
    1b4a:	d1 08       	sbc	r13, r1
    1b4c:	d1 f7       	brne	.-12     	; 0x1b42 <disk_readp+0x62>
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
    1b4e:	e1 14       	cp	r14, r1
    1b50:	f1 04       	cpc	r15, r1
    1b52:	69 f0       	breq	.+26     	; 0x1b6e <disk_readp+0x8e>
				do
					*buff++ = rcv_spi();
    1b54:	67 01       	movw	r12, r14
    1b56:	ef ef       	ldi	r30, 0xFF	; 255
    1b58:	ce 1a       	sub	r12, r30
    1b5a:	de 0a       	sbc	r13, r30
    1b5c:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1b60:	f7 01       	movw	r30, r14
    1b62:	80 83       	st	Z, r24
				while (--cnt);
    1b64:	01 50       	subi	r16, 0x01	; 1
    1b66:	11 09       	sbc	r17, r1
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
				do
					*buff++ = rcv_spi();
    1b68:	76 01       	movw	r14, r12
				while (--cnt);
    1b6a:	a1 f7       	brne	.-24     	; 0x1b54 <disk_readp+0x74>
    1b6c:	03 c0       	rjmp	.+6      	; 0x1b74 <disk_readp+0x94>
			} else {	// Forward data to the outgoing stream (depends on the project) 
				do 
                ;//uart_transmit(rcv_spi());		// (Console output) 
				while (--cnt);
    1b6e:	01 50       	subi	r16, 0x01	; 1
    1b70:	11 09       	sbc	r17, r1
    1b72:	e9 f7       	brne	.-6      	; 0x1b6e <disk_readp+0x8e>
			}

			// Skip trailing bytes and CRC 
			do rcv_spi(); while (--bc);
    1b74:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1b78:	21 97       	sbiw	r28, 0x01	; 1
    1b7a:	e1 f7       	brne	.-8      	; 0x1b74 <disk_readp+0x94>

			res = RES_OK;
    1b7c:	c0 e0       	ldi	r28, 0x00	; 0
    1b7e:	03 c0       	rjmp	.+6      	; 0x1b86 <disk_readp+0xa6>

	if (!(CardType & CT_BLOCK))
	{
		lba *= 512;		// Convert to byte address if needed 
	}
	res = RES_ERROR;
    1b80:	c1 e0       	ldi	r28, 0x01	; 1
    1b82:	01 c0       	rjmp	.+2      	; 0x1b86 <disk_readp+0xa6>
    1b84:	c1 e0       	ldi	r28, 0x01	; 1

			res = RES_OK;
		}
	}

	release_spi();
    1b86:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <release_spi>

	return res;
}
    1b8a:	8c 2f       	mov	r24, r28
    1b8c:	df 91       	pop	r29
    1b8e:	cf 91       	pop	r28
    1b90:	1f 91       	pop	r17
    1b92:	0f 91       	pop	r16
    1b94:	ff 90       	pop	r15
    1b96:	ef 90       	pop	r14
    1b98:	df 90       	pop	r13
    1b9a:	cf 90       	pop	r12
    1b9c:	08 95       	ret

00001b9e <disk_writep>:

DRESULT disk_writep (
	const BYTE *buff,	// Pointer to the bytes to be written (NULL:Initiate/Finalize sector write) 
	DWORD sa			// Number of bytes to send, Sector number (LBA) or zero 
)
{
    1b9e:	0f 93       	push	r16
    1ba0:	1f 93       	push	r17
    1ba2:	cf 93       	push	r28
    1ba4:	df 93       	push	r29
    1ba6:	fc 01       	movw	r30, r24
// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
    1ba8:	89 2b       	or	r24, r25
    1baa:	f1 f0       	breq	.+60     	; 0x1be8 <disk_writep+0x4a>
		bc = (WORD)sa;
    1bac:	ea 01       	movw	r28, r20
		while (bc && wc) {		// Send data bytes to the card 
    1bae:	11 c0       	rjmp	.+34     	; 0x1bd2 <disk_writep+0x34>
			xmit_spi(*buff++);
    1bb0:	8f 01       	movw	r16, r30
    1bb2:	0f 5f       	subi	r16, 0xFF	; 255
    1bb4:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb6:	80 81       	ld	r24, Z
    1bb8:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
			wc--; bc--;
    1bbc:	80 91 91 06 	lds	r24, 0x0691	; 0x800691 <wc.1710>
    1bc0:	90 91 92 06 	lds	r25, 0x0692	; 0x800692 <wc.1710+0x1>
    1bc4:	01 97       	sbiw	r24, 0x01	; 1
    1bc6:	90 93 92 06 	sts	0x0692, r25	; 0x800692 <wc.1710+0x1>
    1bca:	80 93 91 06 	sts	0x0691, r24	; 0x800691 <wc.1710>
    1bce:	21 97       	sbiw	r28, 0x01	; 1
	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
    1bd0:	f8 01       	movw	r30, r16

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
    1bd2:	20 97       	sbiw	r28, 0x00	; 0
    1bd4:	09 f4       	brne	.+2      	; 0x1bd8 <disk_writep+0x3a>
    1bd6:	54 c0       	rjmp	.+168    	; 0x1c80 <disk_writep+0xe2>
    1bd8:	80 91 91 06 	lds	r24, 0x0691	; 0x800691 <wc.1710>
    1bdc:	90 91 92 06 	lds	r25, 0x0692	; 0x800692 <wc.1710+0x1>
    1be0:	89 2b       	or	r24, r25
    1be2:	31 f7       	brne	.-52     	; 0x1bb0 <disk_writep+0x12>
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    1be4:	c0 e0       	ldi	r28, 0x00	; 0
    1be6:	4f c0       	rjmp	.+158    	; 0x1c86 <disk_writep+0xe8>
	} else {
		if (sa) {	// Initiate sector write process 
    1be8:	41 15       	cp	r20, r1
    1bea:	51 05       	cpc	r21, r1
    1bec:	61 05       	cpc	r22, r1
    1bee:	71 05       	cpc	r23, r1
    1bf0:	01 f1       	breq	.+64     	; 0x1c32 <disk_writep+0x94>
			if (!(CardType & CT_BLOCK)) sa *= 512;	// Convert to byte address if needed 
    1bf2:	80 91 93 06 	lds	r24, 0x0693	; 0x800693 <CardType>
    1bf6:	83 fd       	sbrc	r24, 3
    1bf8:	09 c0       	rjmp	.+18     	; 0x1c0c <disk_writep+0x6e>
    1bfa:	03 2e       	mov	r0, r19
    1bfc:	39 e0       	ldi	r19, 0x09	; 9
    1bfe:	44 0f       	add	r20, r20
    1c00:	55 1f       	adc	r21, r21
    1c02:	66 1f       	adc	r22, r22
    1c04:	77 1f       	adc	r23, r23
    1c06:	3a 95       	dec	r19
    1c08:	d1 f7       	brne	.-12     	; 0x1bfe <disk_writep+0x60>
    1c0a:	30 2d       	mov	r19, r0
			if (send_cmd(CMD24, sa) == 0) {			// WRITE_SINGLE_BLOCK 
    1c0c:	88 e5       	ldi	r24, 0x58	; 88
    1c0e:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1c12:	81 11       	cpse	r24, r1
    1c14:	37 c0       	rjmp	.+110    	; 0x1c84 <disk_writep+0xe6>
				xmit_spi(0xFF); xmit_spi(0xFE);		// Data block header 
    1c16:	8f ef       	ldi	r24, 0xFF	; 255
    1c18:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
    1c1c:	8e ef       	ldi	r24, 0xFE	; 254
    1c1e:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
				wc = 512;							// Set byte counter 
    1c22:	80 e0       	ldi	r24, 0x00	; 0
    1c24:	92 e0       	ldi	r25, 0x02	; 2
    1c26:	90 93 92 06 	sts	0x0692, r25	; 0x800692 <wc.1710+0x1>
    1c2a:	80 93 91 06 	sts	0x0691, r24	; 0x800691 <wc.1710>
				res = RES_OK;
    1c2e:	c0 e0       	ldi	r28, 0x00	; 0
    1c30:	2a c0       	rjmp	.+84     	; 0x1c86 <disk_writep+0xe8>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
    1c32:	80 91 91 06 	lds	r24, 0x0691	; 0x800691 <wc.1710>
    1c36:	90 91 92 06 	lds	r25, 0x0692	; 0x800692 <wc.1710+0x1>
    1c3a:	02 96       	adiw	r24, 0x02	; 2
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
    1c3c:	04 c0       	rjmp	.+8      	; 0x1c46 <disk_writep+0xa8>
    1c3e:	80 e0       	ldi	r24, 0x00	; 0
    1c40:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <xmit_spi>
    1c44:	ce 01       	movw	r24, r28
    1c46:	ec 01       	movw	r28, r24
    1c48:	21 97       	sbiw	r28, 0x01	; 1
    1c4a:	89 2b       	or	r24, r25
    1c4c:	c1 f7       	brne	.-16     	; 0x1c3e <disk_writep+0xa0>
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
    1c4e:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1c52:	8f 71       	andi	r24, 0x1F	; 31
    1c54:	85 30       	cpi	r24, 0x05	; 5
    1c56:	21 f0       	breq	.+8      	; 0x1c60 <disk_writep+0xc2>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1c58:	c1 e0       	ldi	r28, 0x01	; 1
    1c5a:	0f c0       	rjmp	.+30     	; 0x1c7a <disk_writep+0xdc>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
    1c5c:	21 97       	sbiw	r28, 0x01	; 1
    1c5e:	02 c0       	rjmp	.+4      	; 0x1c64 <disk_writep+0xc6>
    1c60:	c8 ee       	ldi	r28, 0xE8	; 232
    1c62:	dd ef       	ldi	r29, 0xFD	; 253
    1c64:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1c68:	8f 3f       	cpi	r24, 0xFF	; 255
    1c6a:	11 f0       	breq	.+4      	; 0x1c70 <disk_writep+0xd2>
    1c6c:	20 97       	sbiw	r28, 0x00	; 0
    1c6e:	b1 f7       	brne	.-20     	; 0x1c5c <disk_writep+0xbe>
				if (bc) res = RES_OK;
    1c70:	cd 2b       	or	r28, r29
    1c72:	11 f4       	brne	.+4      	; 0x1c78 <disk_writep+0xda>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1c74:	c1 e0       	ldi	r28, 0x01	; 1
    1c76:	01 c0       	rjmp	.+2      	; 0x1c7a <disk_writep+0xdc>
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
				if (bc) res = RES_OK;
    1c78:	c0 e0       	ldi	r28, 0x00	; 0
			}
			release_spi();
    1c7a:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <release_spi>
    1c7e:	03 c0       	rjmp	.+6      	; 0x1c86 <disk_writep+0xe8>
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    1c80:	c0 e0       	ldi	r28, 0x00	; 0
    1c82:	01 c0       	rjmp	.+2      	; 0x1c86 <disk_writep+0xe8>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1c84:	c1 e0       	ldi	r28, 0x01	; 1
			release_spi();
		}
	}

	return res;
}
    1c86:	8c 2f       	mov	r24, r28
    1c88:	df 91       	pop	r29
    1c8a:	cf 91       	pop	r28
    1c8c:	1f 91       	pop	r17
    1c8e:	0f 91       	pop	r16
    1c90:	08 95       	ret

00001c92 <disk_initialize>:

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    1c92:	ef 92       	push	r14
    1c94:	ff 92       	push	r15
    1c96:	0f 93       	push	r16
    1c98:	1f 93       	push	r17
    1c9a:	cf 93       	push	r28
    1c9c:	df 93       	push	r29
    1c9e:	00 d0       	rcall	.+0      	; 0x1ca0 <disk_initialize+0xe>
    1ca0:	00 d0       	rcall	.+0      	; 0x1ca2 <disk_initialize+0x10>
    1ca2:	cd b7       	in	r28, 0x3d	; 61
    1ca4:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];
	WORD tmr;


	INIT_SPI();
    1ca6:	85 b1       	in	r24, 0x05	; 5
    1ca8:	81 60       	ori	r24, 0x01	; 1
    1caa:	85 b9       	out	0x05, r24	; 5
    1cac:	88 b1       	in	r24, 0x08	; 8
    1cae:	86 60       	ori	r24, 0x06	; 6
    1cb0:	88 b9       	out	0x08, r24	; 8
    1cb2:	84 b1       	in	r24, 0x04	; 4
    1cb4:	81 60       	ori	r24, 0x01	; 1
    1cb6:	84 b9       	out	0x04, r24	; 4
    1cb8:	87 b1       	in	r24, 0x07	; 7
    1cba:	8c 60       	ori	r24, 0x0C	; 12
    1cbc:	87 b9       	out	0x07, r24	; 7

//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
    1cbe:	28 99       	sbic	0x05, 0	; 5
    1cc0:	07 c0       	rjmp	.+14     	; 0x1cd0 <disk_initialize+0x3e>
    1cc2:	40 e0       	ldi	r20, 0x00	; 0
    1cc4:	50 e0       	ldi	r21, 0x00	; 0
    1cc6:	ba 01       	movw	r22, r20
    1cc8:	80 e0       	ldi	r24, 0x00	; 0
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <disk_writep>

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    1cd0:	14 e6       	ldi	r17, 0x64	; 100
    1cd2:	03 c0       	rjmp	.+6      	; 0x1cda <disk_initialize+0x48>
//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 
    1cd4:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1cd8:	11 50       	subi	r17, 0x01	; 1
    1cda:	11 11       	cpse	r17, r1
    1cdc:	fb cf       	rjmp	.-10     	; 0x1cd4 <disk_initialize+0x42>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			// Enter Idle state 
    1cde:	40 e0       	ldi	r20, 0x00	; 0
    1ce0:	50 e0       	ldi	r21, 0x00	; 0
    1ce2:	ba 01       	movw	r22, r20
    1ce4:	80 e4       	ldi	r24, 0x40	; 64
    1ce6:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1cea:	81 30       	cpi	r24, 0x01	; 1
    1cec:	09 f0       	breq	.+2      	; 0x1cf0 <disk_initialize+0x5e>
    1cee:	8f c0       	rjmp	.+286    	; 0x1e0e <disk_initialize+0x17c>
		if (send_cmd(CMD8, 0x1AA) == 1) {	// SDv2 
    1cf0:	4a ea       	ldi	r20, 0xAA	; 170
    1cf2:	51 e0       	ldi	r21, 0x01	; 1
    1cf4:	60 e0       	ldi	r22, 0x00	; 0
    1cf6:	70 e0       	ldi	r23, 0x00	; 0
    1cf8:	88 e4       	ldi	r24, 0x48	; 72
    1cfa:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1cfe:	81 30       	cpi	r24, 0x01	; 1
    1d00:	09 f0       	breq	.+2      	; 0x1d04 <disk_initialize+0x72>
    1d02:	53 c0       	rjmp	.+166    	; 0x1daa <disk_initialize+0x118>
    1d04:	0d c0       	rjmp	.+26     	; 0x1d20 <disk_initialize+0x8e>

// 	  		setpos(0,3);
// 	  		str_lcd("SDv2");

			for (n = 0; n < 4; n++) ocr[n] = rcv_spi();		// Get trailing return value of R7 resp 
    1d06:	e0 2e       	mov	r14, r16
    1d08:	f1 2c       	mov	r15, r1
    1d0a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1d0e:	e1 e0       	ldi	r30, 0x01	; 1
    1d10:	f0 e0       	ldi	r31, 0x00	; 0
    1d12:	ec 0f       	add	r30, r28
    1d14:	fd 1f       	adc	r31, r29
    1d16:	ee 0d       	add	r30, r14
    1d18:	ff 1d       	adc	r31, r15
    1d1a:	80 83       	st	Z, r24
    1d1c:	0f 5f       	subi	r16, 0xFF	; 255
    1d1e:	01 c0       	rjmp	.+2      	; 0x1d22 <disk_initialize+0x90>
    1d20:	01 2f       	mov	r16, r17
    1d22:	04 30       	cpi	r16, 0x04	; 4
    1d24:	80 f3       	brcs	.-32     	; 0x1d06 <disk_initialize+0x74>
//  			sprintf(str,"%02X",ocr[1]);
//  			str_lcd(str);
//  			setpos(17,0);
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
    1d26:	8b 81       	ldd	r24, Y+3	; 0x03
    1d28:	81 30       	cpi	r24, 0x01	; 1
    1d2a:	09 f0       	breq	.+2      	; 0x1d2e <disk_initialize+0x9c>
    1d2c:	72 c0       	rjmp	.+228    	; 0x1e12 <disk_initialize+0x180>
    1d2e:	8c 81       	ldd	r24, Y+4	; 0x04
    1d30:	8a 3a       	cpi	r24, 0xAA	; 170
    1d32:	31 f0       	breq	.+12     	; 0x1d40 <disk_initialize+0xae>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1d34:	f1 2c       	mov	r15, r1
    1d36:	78 c0       	rjmp	.+240    	; 0x1e28 <disk_initialize+0x196>
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
// 	  		setpos(5,3);
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
    1d38:	81 e0       	ldi	r24, 0x01	; 1
    1d3a:	e8 1a       	sub	r14, r24
    1d3c:	f1 08       	sbc	r15, r1
    1d3e:	06 c0       	rjmp	.+12     	; 0x1d4c <disk_initialize+0xba>
    1d40:	0f 2e       	mov	r0, r31
    1d42:	f0 ee       	ldi	r31, 0xE0	; 224
    1d44:	ef 2e       	mov	r14, r31
    1d46:	fe e2       	ldi	r31, 0x2E	; 46
    1d48:	ff 2e       	mov	r15, r31
    1d4a:	f0 2d       	mov	r31, r0
    1d4c:	e1 14       	cp	r14, r1
    1d4e:	f1 04       	cpc	r15, r1
    1d50:	49 f0       	breq	.+18     	; 0x1d64 <disk_initialize+0xd2>
    1d52:	40 e0       	ldi	r20, 0x00	; 0
    1d54:	50 e0       	ldi	r21, 0x00	; 0
    1d56:	60 e0       	ldi	r22, 0x00	; 0
    1d58:	70 e4       	ldi	r23, 0x40	; 64
    1d5a:	89 ee       	ldi	r24, 0xE9	; 233
    1d5c:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1d60:	81 11       	cpse	r24, r1
    1d62:	ea cf       	rjmp	.-44     	; 0x1d38 <disk_initialize+0xa6>
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
    1d64:	ef 28       	or	r14, r15
    1d66:	09 f4       	brne	.+2      	; 0x1d6a <disk_initialize+0xd8>
    1d68:	56 c0       	rjmp	.+172    	; 0x1e16 <disk_initialize+0x184>
    1d6a:	40 e0       	ldi	r20, 0x00	; 0
    1d6c:	50 e0       	ldi	r21, 0x00	; 0
    1d6e:	ba 01       	movw	r22, r20
    1d70:	8a e7       	ldi	r24, 0x7A	; 122
    1d72:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1d76:	88 23       	and	r24, r24
    1d78:	71 f0       	breq	.+28     	; 0x1d96 <disk_initialize+0x104>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1d7a:	f1 2c       	mov	r15, r1
    1d7c:	55 c0       	rjmp	.+170    	; 0x1e28 <disk_initialize+0x196>
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
// 			  		setpos(10,3);
// 					str_lcd("CCS");
					for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
    1d7e:	e1 2e       	mov	r14, r17
    1d80:	f1 2c       	mov	r15, r1
    1d82:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <rcv_spi>
    1d86:	e1 e0       	ldi	r30, 0x01	; 1
    1d88:	f0 e0       	ldi	r31, 0x00	; 0
    1d8a:	ec 0f       	add	r30, r28
    1d8c:	fd 1f       	adc	r31, r29
    1d8e:	ee 0d       	add	r30, r14
    1d90:	ff 1d       	adc	r31, r15
    1d92:	80 83       	st	Z, r24
    1d94:	1f 5f       	subi	r17, 0xFF	; 255
    1d96:	14 30       	cpi	r17, 0x04	; 4
    1d98:	90 f3       	brcs	.-28     	; 0x1d7e <disk_initialize+0xec>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1d9a:	89 81       	ldd	r24, Y+1	; 0x01
    1d9c:	86 ff       	sbrs	r24, 6
    1d9e:	3d c0       	rjmp	.+122    	; 0x1e1a <disk_initialize+0x188>
    1da0:	0f 2e       	mov	r0, r31
    1da2:	fc e0       	ldi	r31, 0x0C	; 12
    1da4:	ff 2e       	mov	r15, r31
    1da6:	f0 2d       	mov	r31, r0
    1da8:	3f c0       	rjmp	.+126    	; 0x1e28 <disk_initialize+0x196>
				}
			}
		} else {							// SDv1 or MMCv3 
			if (send_cmd(ACMD41, 0) <= 1) 	{
    1daa:	40 e0       	ldi	r20, 0x00	; 0
    1dac:	50 e0       	ldi	r21, 0x00	; 0
    1dae:	ba 01       	movw	r22, r20
    1db0:	89 ee       	ldi	r24, 0xE9	; 233
    1db2:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1db6:	82 30       	cpi	r24, 0x02	; 2
    1db8:	40 f4       	brcc	.+16     	; 0x1dca <disk_initialize+0x138>
				ty = CT_SD1; cmd = ACMD41;	// SDv1 
    1dba:	68 94       	set
    1dbc:	ff 24       	eor	r15, r15
    1dbe:	f1 f8       	bld	r15, 1
    1dc0:	0f 2e       	mov	r0, r31
    1dc2:	f9 ee       	ldi	r31, 0xE9	; 233
    1dc4:	ef 2e       	mov	r14, r31
    1dc6:	f0 2d       	mov	r31, r0
    1dc8:	06 c0       	rjmp	.+12     	; 0x1dd6 <disk_initialize+0x144>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
    1dca:	ff 24       	eor	r15, r15
    1dcc:	f3 94       	inc	r15
    1dce:	0f 2e       	mov	r0, r31
    1dd0:	f1 e4       	ldi	r31, 0x41	; 65
    1dd2:	ef 2e       	mov	r14, r31
    1dd4:	f0 2d       	mov	r31, r0
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
    1dd6:	08 ea       	ldi	r16, 0xA8	; 168
    1dd8:	11 e6       	ldi	r17, 0x61	; 97
    1dda:	02 c0       	rjmp	.+4      	; 0x1de0 <disk_initialize+0x14e>
    1ddc:	01 50       	subi	r16, 0x01	; 1
    1dde:	11 09       	sbc	r17, r1
    1de0:	01 15       	cp	r16, r1
    1de2:	11 05       	cpc	r17, r1
    1de4:	41 f0       	breq	.+16     	; 0x1df6 <disk_initialize+0x164>
    1de6:	40 e0       	ldi	r20, 0x00	; 0
    1de8:	50 e0       	ldi	r21, 0x00	; 0
    1dea:	ba 01       	movw	r22, r20
    1dec:	8e 2d       	mov	r24, r14
    1dee:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1df2:	81 11       	cpse	r24, r1
    1df4:	f3 cf       	rjmp	.-26     	; 0x1ddc <disk_initialize+0x14a>
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
    1df6:	01 2b       	or	r16, r17
    1df8:	a1 f0       	breq	.+40     	; 0x1e22 <disk_initialize+0x190>
    1dfa:	40 e0       	ldi	r20, 0x00	; 0
    1dfc:	52 e0       	ldi	r21, 0x02	; 2
    1dfe:	60 e0       	ldi	r22, 0x00	; 0
    1e00:	70 e0       	ldi	r23, 0x00	; 0
    1e02:	80 e5       	ldi	r24, 0x50	; 80
    1e04:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <send_cmd>
    1e08:	81 11       	cpse	r24, r1
    1e0a:	0d c0       	rjmp	.+26     	; 0x1e26 <disk_initialize+0x194>
    1e0c:	0d c0       	rjmp	.+26     	; 0x1e28 <disk_initialize+0x196>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1e0e:	f1 2c       	mov	r15, r1
    1e10:	0b c0       	rjmp	.+22     	; 0x1e28 <disk_initialize+0x196>
    1e12:	f1 2c       	mov	r15, r1
    1e14:	09 c0       	rjmp	.+18     	; 0x1e28 <disk_initialize+0x196>
    1e16:	f1 2c       	mov	r15, r1
    1e18:	07 c0       	rjmp	.+14     	; 0x1e28 <disk_initialize+0x196>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1e1a:	68 94       	set
    1e1c:	ff 24       	eor	r15, r15
    1e1e:	f2 f8       	bld	r15, 2
    1e20:	03 c0       	rjmp	.+6      	; 0x1e28 <disk_initialize+0x196>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
				ty = 0;
    1e22:	f1 2c       	mov	r15, r1
    1e24:	01 c0       	rjmp	.+2      	; 0x1e28 <disk_initialize+0x196>
    1e26:	f1 2c       	mov	r15, r1
		}
	}
	CardType = ty;
    1e28:	f0 92 93 06 	sts	0x0693, r15	; 0x800693 <CardType>
//   	sprintf(str,"%d",CardType);
//   	setpos(0,1);
//   	str_lcd(str);
	release_spi();
    1e2c:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <release_spi>

	return ty ? 0 : STA_NOINIT;
    1e30:	81 e0       	ldi	r24, 0x01	; 1
    1e32:	f1 10       	cpse	r15, r1
    1e34:	80 e0       	ldi	r24, 0x00	; 0
}
    1e36:	0f 90       	pop	r0
    1e38:	0f 90       	pop	r0
    1e3a:	0f 90       	pop	r0
    1e3c:	0f 90       	pop	r0
    1e3e:	df 91       	pop	r29
    1e40:	cf 91       	pop	r28
    1e42:	1f 91       	pop	r17
    1e44:	0f 91       	pop	r16
    1e46:	ff 90       	pop	r15
    1e48:	ef 90       	pop	r14
    1e4a:	08 95       	ret

00001e4c <NRF24L01_Receive>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
    1e4c:	cf 93       	push	r28
    1e4e:	df 93       	push	r29
    1e50:	80 91 94 06 	lds	r24, 0x0694	; 0x800694 <rx_flag>
    1e54:	81 30       	cpi	r24, 0x01	; 1
    1e56:	09 f0       	breq	.+2      	; 0x1e5a <NRF24L01_Receive+0xe>
    1e58:	63 c1       	rjmp	.+710    	; 0x2120 <NRF24L01_Receive+0x2d4>
    1e5a:	80 91 95 06 	lds	r24, 0x0695	; 0x800695 <RX_BUF>
    1e5e:	81 30       	cpi	r24, 0x01	; 1
    1e60:	09 f0       	breq	.+2      	; 0x1e64 <NRF24L01_Receive+0x18>
    1e62:	59 c0       	rjmp	.+178    	; 0x1f16 <NRF24L01_Receive+0xca>
    1e64:	e7 e8       	ldi	r30, 0x87	; 135
    1e66:	f2 e0       	ldi	r31, 0x02	; 2
    1e68:	01 90       	ld	r0, Z+
    1e6a:	00 20       	and	r0, r0
    1e6c:	e9 f7       	brne	.-6      	; 0x1e68 <NRF24L01_Receive+0x1c>
    1e6e:	31 97       	sbiw	r30, 0x01	; 1
    1e70:	af 01       	movw	r20, r30
    1e72:	47 58       	subi	r20, 0x87	; 135
    1e74:	52 40       	sbci	r21, 0x02	; 2
    1e76:	44 0f       	add	r20, r20
    1e78:	55 1f       	adc	r21, r21
    1e7a:	60 e0       	ldi	r22, 0x00	; 0
    1e7c:	70 e0       	ldi	r23, 0x00	; 0
    1e7e:	87 e8       	ldi	r24, 0x87	; 135
    1e80:	92 e0       	ldi	r25, 0x02	; 2
    1e82:	0e 94 35 2c 	call	0x586a	; 0x586a <memset>
    1e86:	e5 e9       	ldi	r30, 0x95	; 149
    1e88:	f6 e0       	ldi	r31, 0x06	; 6
    1e8a:	81 81       	ldd	r24, Z+1	; 0x01
    1e8c:	c2 81       	ldd	r28, Z+2	; 0x02
    1e8e:	d0 e0       	ldi	r29, 0x00	; 0
    1e90:	dc 2f       	mov	r29, r28
    1e92:	cc 27       	eor	r28, r28
    1e94:	c8 2b       	or	r28, r24
    1e96:	be 01       	movw	r22, r28
    1e98:	0d 2e       	mov	r0, r29
    1e9a:	00 0c       	add	r0, r0
    1e9c:	88 0b       	sbc	r24, r24
    1e9e:	99 0b       	sbc	r25, r25
    1ea0:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    1ea4:	20 e0       	ldi	r18, 0x00	; 0
    1ea6:	30 e0       	ldi	r19, 0x00	; 0
    1ea8:	40 e2       	ldi	r20, 0x20	; 32
    1eaa:	51 e4       	ldi	r21, 0x41	; 65
    1eac:	0e 94 59 25 	call	0x4ab2	; 0x4ab2 <__divsf3>
    1eb0:	60 93 e3 01 	sts	0x01E3, r22	; 0x8001e3 <temp>
    1eb4:	70 93 e4 01 	sts	0x01E4, r23	; 0x8001e4 <temp+0x1>
    1eb8:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <temp+0x2>
    1ebc:	90 93 e6 01 	sts	0x01E6, r25	; 0x8001e6 <temp+0x3>
    1ec0:	dd 23       	and	r29, r29
    1ec2:	5c f4       	brge	.+22     	; 0x1eda <NRF24L01_Receive+0x8e>
    1ec4:	dc 01       	movw	r26, r24
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	b0 58       	subi	r27, 0x80	; 128
    1eca:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <temp>
    1ece:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <temp+0x1>
    1ed2:	a0 93 e5 01 	sts	0x01E5, r26	; 0x8001e5 <temp+0x2>
    1ed6:	b0 93 e6 01 	sts	0x01E6, r27	; 0x8001e6 <temp+0x3>
    1eda:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <temp+0x3>
    1ede:	8f 93       	push	r24
    1ee0:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <temp+0x2>
    1ee4:	8f 93       	push	r24
    1ee6:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <temp+0x1>
    1eea:	8f 93       	push	r24
    1eec:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <temp>
    1ef0:	8f 93       	push	r24
    1ef2:	8a e3       	ldi	r24, 0x3A	; 58
    1ef4:	91 e0       	ldi	r25, 0x01	; 1
    1ef6:	9f 93       	push	r25
    1ef8:	8f 93       	push	r24
    1efa:	87 e8       	ldi	r24, 0x87	; 135
    1efc:	92 e0       	ldi	r25, 0x02	; 2
    1efe:	9f 93       	push	r25
    1f00:	8f 93       	push	r24
    1f02:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    1f06:	8d b7       	in	r24, 0x3d	; 61
    1f08:	9e b7       	in	r25, 0x3e	; 62
    1f0a:	08 96       	adiw	r24, 0x08	; 8
    1f0c:	0f b6       	in	r0, 0x3f	; 63
    1f0e:	f8 94       	cli
    1f10:	9e bf       	out	0x3e, r25	; 62
    1f12:	0f be       	out	0x3f, r0	; 63
    1f14:	8d bf       	out	0x3d, r24	; 61
    1f16:	80 91 95 06 	lds	r24, 0x0695	; 0x800695 <RX_BUF>
    1f1a:	85 30       	cpi	r24, 0x05	; 5
    1f1c:	09 f0       	breq	.+2      	; 0x1f20 <NRF24L01_Receive+0xd4>
    1f1e:	3f c0       	rjmp	.+126    	; 0x1f9e <NRF24L01_Receive+0x152>
    1f20:	cd e7       	ldi	r28, 0x7D	; 125
    1f22:	d2 e0       	ldi	r29, 0x02	; 2
    1f24:	fe 01       	movw	r30, r28
    1f26:	01 90       	ld	r0, Z+
    1f28:	00 20       	and	r0, r0
    1f2a:	e9 f7       	brne	.-6      	; 0x1f26 <NRF24L01_Receive+0xda>
    1f2c:	31 97       	sbiw	r30, 0x01	; 1
    1f2e:	af 01       	movw	r20, r30
    1f30:	4d 57       	subi	r20, 0x7D	; 125
    1f32:	52 40       	sbci	r21, 0x02	; 2
    1f34:	44 0f       	add	r20, r20
    1f36:	55 1f       	adc	r21, r21
    1f38:	60 e0       	ldi	r22, 0x00	; 0
    1f3a:	70 e0       	ldi	r23, 0x00	; 0
    1f3c:	ce 01       	movw	r24, r28
    1f3e:	0e 94 35 2c 	call	0x586a	; 0x586a <memset>
    1f42:	e5 e9       	ldi	r30, 0x95	; 149
    1f44:	f6 e0       	ldi	r31, 0x06	; 6
    1f46:	81 81       	ldd	r24, Z+1	; 0x01
    1f48:	62 81       	ldd	r22, Z+2	; 0x02
    1f4a:	70 e0       	ldi	r23, 0x00	; 0
    1f4c:	76 2f       	mov	r23, r22
    1f4e:	66 27       	eor	r22, r22
    1f50:	68 2b       	or	r22, r24
    1f52:	07 2e       	mov	r0, r23
    1f54:	00 0c       	add	r0, r0
    1f56:	88 0b       	sbc	r24, r24
    1f58:	99 0b       	sbc	r25, r25
    1f5a:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    1f5e:	20 e0       	ldi	r18, 0x00	; 0
    1f60:	30 e0       	ldi	r19, 0x00	; 0
    1f62:	40 e2       	ldi	r20, 0x20	; 32
    1f64:	51 e4       	ldi	r21, 0x41	; 65
    1f66:	0e 94 59 25 	call	0x4ab2	; 0x4ab2 <__divsf3>
    1f6a:	60 93 df 01 	sts	0x01DF, r22	; 0x8001df <hum>
    1f6e:	70 93 e0 01 	sts	0x01E0, r23	; 0x8001e0 <hum+0x1>
    1f72:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <hum+0x2>
    1f76:	90 93 e2 01 	sts	0x01E2, r25	; 0x8001e2 <hum+0x3>
    1f7a:	0e 94 cb 25 	call	0x4b96	; 0x4b96 <__fixsfsi>
    1f7e:	7f 93       	push	r23
    1f80:	6f 93       	push	r22
    1f82:	84 e9       	ldi	r24, 0x94	; 148
    1f84:	91 e0       	ldi	r25, 0x01	; 1
    1f86:	9f 93       	push	r25
    1f88:	8f 93       	push	r24
    1f8a:	df 93       	push	r29
    1f8c:	cf 93       	push	r28
    1f8e:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    1f92:	0f 90       	pop	r0
    1f94:	0f 90       	pop	r0
    1f96:	0f 90       	pop	r0
    1f98:	0f 90       	pop	r0
    1f9a:	0f 90       	pop	r0
    1f9c:	0f 90       	pop	r0
    1f9e:	c0 91 95 06 	lds	r28, 0x0695	; 0x800695 <RX_BUF>
    1fa2:	c2 30       	cpi	r28, 0x02	; 2
    1fa4:	61 f5       	brne	.+88     	; 0x1ffe <NRF24L01_Receive+0x1b2>
    1fa6:	ef e5       	ldi	r30, 0x5F	; 95
    1fa8:	f2 e0       	ldi	r31, 0x02	; 2
    1faa:	01 90       	ld	r0, Z+
    1fac:	00 20       	and	r0, r0
    1fae:	e9 f7       	brne	.-6      	; 0x1faa <NRF24L01_Receive+0x15e>
    1fb0:	31 97       	sbiw	r30, 0x01	; 1
    1fb2:	af 01       	movw	r20, r30
    1fb4:	4f 55       	subi	r20, 0x5F	; 95
    1fb6:	52 40       	sbci	r21, 0x02	; 2
    1fb8:	44 0f       	add	r20, r20
    1fba:	55 1f       	adc	r21, r21
    1fbc:	60 e0       	ldi	r22, 0x00	; 0
    1fbe:	70 e0       	ldi	r23, 0x00	; 0
    1fc0:	8f e5       	ldi	r24, 0x5F	; 95
    1fc2:	92 e0       	ldi	r25, 0x02	; 2
    1fc4:	0e 94 35 2c 	call	0x586a	; 0x586a <memset>
    1fc8:	20 e0       	ldi	r18, 0x00	; 0
    1fca:	0b c0       	rjmp	.+22     	; 0x1fe2 <NRF24L01_Receive+0x196>
    1fcc:	82 2f       	mov	r24, r18
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	ea 56       	subi	r30, 0x6A	; 106
    1fd4:	f9 4f       	sbci	r31, 0xF9	; 249
    1fd6:	30 81       	ld	r19, Z
    1fd8:	fc 01       	movw	r30, r24
    1fda:	e1 5a       	subi	r30, 0xA1	; 161
    1fdc:	fd 4f       	sbci	r31, 0xFD	; 253
    1fde:	30 83       	st	Z, r19
    1fe0:	2f 5f       	subi	r18, 0xFF	; 255
    1fe2:	82 2f       	mov	r24, r18
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	e5 e9       	ldi	r30, 0x95	; 149
    1fe8:	f6 e0       	ldi	r31, 0x06	; 6
    1fea:	01 90       	ld	r0, Z+
    1fec:	00 20       	and	r0, r0
    1fee:	e9 f7       	brne	.-6      	; 0x1fea <NRF24L01_Receive+0x19e>
    1ff0:	31 97       	sbiw	r30, 0x01	; 1
    1ff2:	e5 59       	subi	r30, 0x95	; 149
    1ff4:	f6 40       	sbci	r31, 0x06	; 6
    1ff6:	31 97       	sbiw	r30, 0x01	; 1
    1ff8:	8e 17       	cp	r24, r30
    1ffa:	9f 07       	cpc	r25, r31
    1ffc:	38 f3       	brcs	.-50     	; 0x1fcc <NRF24L01_Receive+0x180>
    1ffe:	c3 30       	cpi	r28, 0x03	; 3
    2000:	89 f5       	brne	.+98     	; 0x2064 <NRF24L01_Receive+0x218>
    2002:	eb e4       	ldi	r30, 0x4B	; 75
    2004:	f2 e0       	ldi	r31, 0x02	; 2
    2006:	01 90       	ld	r0, Z+
    2008:	00 20       	and	r0, r0
    200a:	e9 f7       	brne	.-6      	; 0x2006 <NRF24L01_Receive+0x1ba>
    200c:	31 97       	sbiw	r30, 0x01	; 1
    200e:	af 01       	movw	r20, r30
    2010:	4b 54       	subi	r20, 0x4B	; 75
    2012:	52 40       	sbci	r21, 0x02	; 2
    2014:	44 0f       	add	r20, r20
    2016:	55 1f       	adc	r21, r21
    2018:	60 e0       	ldi	r22, 0x00	; 0
    201a:	70 e0       	ldi	r23, 0x00	; 0
    201c:	8b e4       	ldi	r24, 0x4B	; 75
    201e:	92 e0       	ldi	r25, 0x02	; 2
    2020:	0e 94 35 2c 	call	0x586a	; 0x586a <memset>
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	0b c0       	rjmp	.+22     	; 0x203e <NRF24L01_Receive+0x1f2>
    2028:	82 2f       	mov	r24, r18
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	fc 01       	movw	r30, r24
    202e:	ea 56       	subi	r30, 0x6A	; 106
    2030:	f9 4f       	sbci	r31, 0xF9	; 249
    2032:	30 81       	ld	r19, Z
    2034:	fc 01       	movw	r30, r24
    2036:	e5 5b       	subi	r30, 0xB5	; 181
    2038:	fd 4f       	sbci	r31, 0xFD	; 253
    203a:	30 83       	st	Z, r19
    203c:	2f 5f       	subi	r18, 0xFF	; 255
    203e:	82 2f       	mov	r24, r18
    2040:	90 e0       	ldi	r25, 0x00	; 0
    2042:	e5 e9       	ldi	r30, 0x95	; 149
    2044:	f6 e0       	ldi	r31, 0x06	; 6
    2046:	01 90       	ld	r0, Z+
    2048:	00 20       	and	r0, r0
    204a:	e9 f7       	brne	.-6      	; 0x2046 <NRF24L01_Receive+0x1fa>
    204c:	31 97       	sbiw	r30, 0x01	; 1
    204e:	e5 59       	subi	r30, 0x95	; 149
    2050:	f6 40       	sbci	r31, 0x06	; 6
    2052:	31 97       	sbiw	r30, 0x01	; 1
    2054:	8e 17       	cp	r24, r30
    2056:	9f 07       	cpc	r25, r31
    2058:	38 f3       	brcs	.-50     	; 0x2028 <NRF24L01_Receive+0x1dc>
    205a:	fc 01       	movw	r30, r24
    205c:	e4 5b       	subi	r30, 0xB4	; 180
    205e:	fd 4f       	sbci	r31, 0xFD	; 253
    2060:	80 e2       	ldi	r24, 0x20	; 32
    2062:	80 83       	st	Z, r24
    2064:	c4 30       	cpi	r28, 0x04	; 4
    2066:	61 f5       	brne	.+88     	; 0x20c0 <NRF24L01_Receive+0x274>
    2068:	e1 e4       	ldi	r30, 0x41	; 65
    206a:	f2 e0       	ldi	r31, 0x02	; 2
    206c:	01 90       	ld	r0, Z+
    206e:	00 20       	and	r0, r0
    2070:	e9 f7       	brne	.-6      	; 0x206c <NRF24L01_Receive+0x220>
    2072:	31 97       	sbiw	r30, 0x01	; 1
    2074:	af 01       	movw	r20, r30
    2076:	41 54       	subi	r20, 0x41	; 65
    2078:	52 40       	sbci	r21, 0x02	; 2
    207a:	44 0f       	add	r20, r20
    207c:	55 1f       	adc	r21, r21
    207e:	60 e0       	ldi	r22, 0x00	; 0
    2080:	70 e0       	ldi	r23, 0x00	; 0
    2082:	81 e4       	ldi	r24, 0x41	; 65
    2084:	92 e0       	ldi	r25, 0x02	; 2
    2086:	0e 94 35 2c 	call	0x586a	; 0x586a <memset>
    208a:	20 e0       	ldi	r18, 0x00	; 0
    208c:	0b c0       	rjmp	.+22     	; 0x20a4 <NRF24L01_Receive+0x258>
    208e:	82 2f       	mov	r24, r18
    2090:	90 e0       	ldi	r25, 0x00	; 0
    2092:	fc 01       	movw	r30, r24
    2094:	ea 56       	subi	r30, 0x6A	; 106
    2096:	f9 4f       	sbci	r31, 0xF9	; 249
    2098:	30 81       	ld	r19, Z
    209a:	fc 01       	movw	r30, r24
    209c:	ef 5b       	subi	r30, 0xBF	; 191
    209e:	fd 4f       	sbci	r31, 0xFD	; 253
    20a0:	30 83       	st	Z, r19
    20a2:	2f 5f       	subi	r18, 0xFF	; 255
    20a4:	82 2f       	mov	r24, r18
    20a6:	90 e0       	ldi	r25, 0x00	; 0
    20a8:	e5 e9       	ldi	r30, 0x95	; 149
    20aa:	f6 e0       	ldi	r31, 0x06	; 6
    20ac:	01 90       	ld	r0, Z+
    20ae:	00 20       	and	r0, r0
    20b0:	e9 f7       	brne	.-6      	; 0x20ac <NRF24L01_Receive+0x260>
    20b2:	31 97       	sbiw	r30, 0x01	; 1
    20b4:	e5 59       	subi	r30, 0x95	; 149
    20b6:	f6 40       	sbci	r31, 0x06	; 6
    20b8:	31 97       	sbiw	r30, 0x01	; 1
    20ba:	8e 17       	cp	r24, r30
    20bc:	9f 07       	cpc	r25, r31
    20be:	38 f3       	brcs	.-50     	; 0x208e <NRF24L01_Receive+0x242>
    20c0:	c6 30       	cpi	r28, 0x06	; 6
    20c2:	61 f5       	brne	.+88     	; 0x211c <NRF24L01_Receive+0x2d0>
    20c4:	e7 e3       	ldi	r30, 0x37	; 55
    20c6:	f2 e0       	ldi	r31, 0x02	; 2
    20c8:	01 90       	ld	r0, Z+
    20ca:	00 20       	and	r0, r0
    20cc:	e9 f7       	brne	.-6      	; 0x20c8 <NRF24L01_Receive+0x27c>
    20ce:	31 97       	sbiw	r30, 0x01	; 1
    20d0:	af 01       	movw	r20, r30
    20d2:	47 53       	subi	r20, 0x37	; 55
    20d4:	52 40       	sbci	r21, 0x02	; 2
    20d6:	44 0f       	add	r20, r20
    20d8:	55 1f       	adc	r21, r21
    20da:	60 e0       	ldi	r22, 0x00	; 0
    20dc:	70 e0       	ldi	r23, 0x00	; 0
    20de:	87 e3       	ldi	r24, 0x37	; 55
    20e0:	92 e0       	ldi	r25, 0x02	; 2
    20e2:	0e 94 35 2c 	call	0x586a	; 0x586a <memset>
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	0b c0       	rjmp	.+22     	; 0x2100 <NRF24L01_Receive+0x2b4>
    20ea:	82 2f       	mov	r24, r18
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	fc 01       	movw	r30, r24
    20f0:	ea 56       	subi	r30, 0x6A	; 106
    20f2:	f9 4f       	sbci	r31, 0xF9	; 249
    20f4:	30 81       	ld	r19, Z
    20f6:	fc 01       	movw	r30, r24
    20f8:	e9 5c       	subi	r30, 0xC9	; 201
    20fa:	fd 4f       	sbci	r31, 0xFD	; 253
    20fc:	30 83       	st	Z, r19
    20fe:	2f 5f       	subi	r18, 0xFF	; 255
    2100:	82 2f       	mov	r24, r18
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	e5 e9       	ldi	r30, 0x95	; 149
    2106:	f6 e0       	ldi	r31, 0x06	; 6
    2108:	01 90       	ld	r0, Z+
    210a:	00 20       	and	r0, r0
    210c:	e9 f7       	brne	.-6      	; 0x2108 <NRF24L01_Receive+0x2bc>
    210e:	31 97       	sbiw	r30, 0x01	; 1
    2110:	e5 59       	subi	r30, 0x95	; 149
    2112:	f6 40       	sbci	r31, 0x06	; 6
    2114:	31 97       	sbiw	r30, 0x01	; 1
    2116:	8e 17       	cp	r24, r30
    2118:	9f 07       	cpc	r25, r31
    211a:	38 f3       	brcs	.-50     	; 0x20ea <NRF24L01_Receive+0x29e>
    211c:	10 92 94 06 	sts	0x0694, r1	; 0x800694 <rx_flag>
    2120:	df 91       	pop	r29
    2122:	cf 91       	pop	r28
    2124:	08 95       	ret

00002126 <NRF24_FlushRX>:
    2126:	85 b1       	in	r24, 0x05	; 5
    2128:	8b 7f       	andi	r24, 0xFB	; 251
    212a:	85 b9       	out	0x05, r24	; 5
    212c:	82 ee       	ldi	r24, 0xE2	; 226
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    2134:	82 e0       	ldi	r24, 0x02	; 2
    2136:	8a 95       	dec	r24
    2138:	f1 f7       	brne	.-4      	; 0x2136 <NRF24_FlushRX+0x10>
    213a:	00 c0       	rjmp	.+0      	; 0x213c <NRF24_FlushRX+0x16>
    213c:	85 b1       	in	r24, 0x05	; 5
    213e:	84 60       	ori	r24, 0x04	; 4
    2140:	85 b9       	out	0x05, r24	; 5
    2142:	08 95       	ret

00002144 <NRF24_FlushTX>:
    2144:	85 b1       	in	r24, 0x05	; 5
    2146:	8b 7f       	andi	r24, 0xFB	; 251
    2148:	85 b9       	out	0x05, r24	; 5
    214a:	81 ee       	ldi	r24, 0xE1	; 225
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    2152:	82 e0       	ldi	r24, 0x02	; 2
    2154:	8a 95       	dec	r24
    2156:	f1 f7       	brne	.-4      	; 0x2154 <NRF24_FlushTX+0x10>
    2158:	00 c0       	rjmp	.+0      	; 0x215a <NRF24_FlushTX+0x16>
    215a:	85 b1       	in	r24, 0x05	; 5
    215c:	84 60       	ori	r24, 0x04	; 4
    215e:	85 b9       	out	0x05, r24	; 5
    2160:	08 95       	ret

00002162 <NRF24_ToggleFeatures>:
    2162:	85 b1       	in	r24, 0x05	; 5
    2164:	8b 7f       	andi	r24, 0xFB	; 251
    2166:	85 b9       	out	0x05, r24	; 5
    2168:	80 e5       	ldi	r24, 0x50	; 80
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    2170:	82 e0       	ldi	r24, 0x02	; 2
    2172:	8a 95       	dec	r24
    2174:	f1 f7       	brne	.-4      	; 0x2172 <NRF24_ToggleFeatures+0x10>
    2176:	00 c0       	rjmp	.+0      	; 0x2178 <NRF24_ToggleFeatures+0x16>
    2178:	83 e7       	ldi	r24, 0x73	; 115
    217a:	90 e0       	ldi	r25, 0x00	; 0
    217c:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    2180:	85 b1       	in	r24, 0x05	; 5
    2182:	84 60       	ori	r24, 0x04	; 4
    2184:	85 b9       	out	0x05, r24	; 5
    2186:	08 95       	ret

00002188 <NRF24_Read_Buf>:
    2188:	ef 92       	push	r14
    218a:	ff 92       	push	r15
    218c:	0f 93       	push	r16
    218e:	1f 93       	push	r17
    2190:	cf 93       	push	r28
    2192:	df 93       	push	r29
    2194:	8b 01       	movw	r16, r22
    2196:	c4 2f       	mov	r28, r20
    2198:	95 b1       	in	r25, 0x05	; 5
    219a:	9b 7f       	andi	r25, 0xFB	; 251
    219c:	95 b9       	out	0x05, r25	; 5
    219e:	90 e0       	ldi	r25, 0x00	; 0
    21a0:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    21a4:	0c c0       	rjmp	.+24     	; 0x21be <NRF24_Read_Buf+0x36>
    21a6:	78 01       	movw	r14, r16
    21a8:	8f ef       	ldi	r24, 0xFF	; 255
    21aa:	e8 1a       	sub	r14, r24
    21ac:	f8 0a       	sbc	r15, r24
    21ae:	8f ef       	ldi	r24, 0xFF	; 255
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    21b6:	f8 01       	movw	r30, r16
    21b8:	80 83       	st	Z, r24
    21ba:	cd 2f       	mov	r28, r29
    21bc:	87 01       	movw	r16, r14
    21be:	df ef       	ldi	r29, 0xFF	; 255
    21c0:	dc 0f       	add	r29, r28
    21c2:	c1 11       	cpse	r28, r1
    21c4:	f0 cf       	rjmp	.-32     	; 0x21a6 <NRF24_Read_Buf+0x1e>
    21c6:	85 b1       	in	r24, 0x05	; 5
    21c8:	84 60       	ori	r24, 0x04	; 4
    21ca:	85 b9       	out	0x05, r24	; 5
    21cc:	df 91       	pop	r29
    21ce:	cf 91       	pop	r28
    21d0:	1f 91       	pop	r17
    21d2:	0f 91       	pop	r16
    21d4:	ff 90       	pop	r15
    21d6:	ef 90       	pop	r14
    21d8:	08 95       	ret

000021da <NRF24_Write_Buf>:
    21da:	ef 92       	push	r14
    21dc:	ff 92       	push	r15
    21de:	0f 93       	push	r16
    21e0:	1f 93       	push	r17
    21e2:	cf 93       	push	r28
    21e4:	df 93       	push	r29
    21e6:	8b 01       	movw	r16, r22
    21e8:	c4 2f       	mov	r28, r20
    21ea:	80 62       	ori	r24, 0x20	; 32
    21ec:	95 b1       	in	r25, 0x05	; 5
    21ee:	9b 7f       	andi	r25, 0xFB	; 251
    21f0:	95 b9       	out	0x05, r25	; 5
    21f2:	90 e0       	ldi	r25, 0x00	; 0
    21f4:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    21f8:	82 e0       	ldi	r24, 0x02	; 2
    21fa:	8a 95       	dec	r24
    21fc:	f1 f7       	brne	.-4      	; 0x21fa <NRF24_Write_Buf+0x20>
    21fe:	00 c0       	rjmp	.+0      	; 0x2200 <NRF24_Write_Buf+0x26>
    2200:	0b c0       	rjmp	.+22     	; 0x2218 <NRF24_Write_Buf+0x3e>
    2202:	78 01       	movw	r14, r16
    2204:	ef ef       	ldi	r30, 0xFF	; 255
    2206:	ee 1a       	sub	r14, r30
    2208:	fe 0a       	sbc	r15, r30
    220a:	f8 01       	movw	r30, r16
    220c:	80 81       	ld	r24, Z
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
    2214:	cd 2f       	mov	r28, r29
    2216:	87 01       	movw	r16, r14
    2218:	df ef       	ldi	r29, 0xFF	; 255
    221a:	dc 0f       	add	r29, r28
    221c:	c1 11       	cpse	r28, r1
    221e:	f1 cf       	rjmp	.-30     	; 0x2202 <NRF24_Write_Buf+0x28>
    2220:	85 b1       	in	r24, 0x05	; 5
    2222:	84 60       	ori	r24, 0x04	; 4
    2224:	85 b9       	out	0x05, r24	; 5
    2226:	df 91       	pop	r29
    2228:	cf 91       	pop	r28
    222a:	1f 91       	pop	r17
    222c:	0f 91       	pop	r16
    222e:	ff 90       	pop	r15
    2230:	ef 90       	pop	r14
    2232:	08 95       	ret

00002234 <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
    2234:	cf 93       	push	r28
    2236:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
    2238:	80 62       	ori	r24, 0x20	; 32
	LOW_CSN;
    223a:	95 b1       	in	r25, 0x05	; 5
    223c:	9b 7f       	andi	r25, 0xFB	; 251
    223e:	95 b9       	out	0x05, r25	; 5
	spi_send_recv(reg);
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
	spi_send_recv(data_out);
    2246:	8c 2f       	mov	r24, r28
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
	HIGH_CSN;
    224e:	85 b1       	in	r24, 0x05	; 5
    2250:	84 60       	ori	r24, 0x04	; 4
    2252:	85 b9       	out	0x05, r24	; 5
}
    2254:	cf 91       	pop	r28
    2256:	08 95       	ret

00002258 <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
    2258:	cf 93       	push	r28
    225a:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
    225c:	85 b1       	in	r24, 0x05	; 5
    225e:	8b 7f       	andi	r24, 0xFB	; 251
    2260:	85 b9       	out	0x05, r24	; 5
	data_in = spi_send_recv(reg);
    2262:	8c 2f       	mov	r24, r28
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
	if(reg != STATUS)
    226a:	c7 30       	cpi	r28, 0x07	; 7
    226c:	21 f0       	breq	.+8      	; 0x2276 <nRF_read_register+0x1e>
	{
		data_in = spi_send_recv(NOP);
    226e:	8f ef       	ldi	r24, 0xFF	; 255
    2270:	90 e0       	ldi	r25, 0x00	; 0
    2272:	0e 94 b3 0c 	call	0x1966	; 0x1966 <spi_send_recv>
	}
	HIGH_CSN;
    2276:	95 b1       	in	r25, 0x05	; 5
    2278:	94 60       	ori	r25, 0x04	; 4
    227a:	95 b9       	out	0x05, r25	; 5
	return data_in;
}
    227c:	cf 91       	pop	r28
    227e:	08 95       	ret

00002280 <__vector_1>:
		//memset(RX_BUF, 0, sizeof(int) * strlen(RX_BUF));//очистка массива
		rx_flag = 0;
	}
}
ISR(INT0_vect)
{
    2280:	1f 92       	push	r1
    2282:	0f 92       	push	r0
    2284:	0f b6       	in	r0, 0x3f	; 63
    2286:	0f 92       	push	r0
    2288:	11 24       	eor	r1, r1
    228a:	2f 93       	push	r18
    228c:	3f 93       	push	r19
    228e:	4f 93       	push	r20
    2290:	5f 93       	push	r21
    2292:	6f 93       	push	r22
    2294:	7f 93       	push	r23
    2296:	8f 93       	push	r24
    2298:	9f 93       	push	r25
    229a:	af 93       	push	r26
    229c:	bf 93       	push	r27
    229e:	ef 93       	push	r30
    22a0:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    22a2:	87 e5       	ldi	r24, 0x57	; 87
    22a4:	92 e0       	ldi	r25, 0x02	; 2
    22a6:	01 97       	sbiw	r24, 0x01	; 1
    22a8:	f1 f7       	brne	.-4      	; 0x22a6 <__vector_1+0x26>
    22aa:	00 c0       	rjmp	.+0      	; 0x22ac <__vector_1+0x2c>
    22ac:	00 00       	nop
	uint8_t status=0x01;
	uint8_t pipe;
	_delay_us(300);
	PORTD |= (1<<LED);
    22ae:	8b b1       	in	r24, 0x0b	; 11
    22b0:	80 61       	ori	r24, 0x10	; 16
    22b2:	8b b9       	out	0x0b, r24	; 11
    22b4:	87 e5       	ldi	r24, 0x57	; 87
    22b6:	92 e0       	ldi	r25, 0x02	; 2
    22b8:	01 97       	sbiw	r24, 0x01	; 1
    22ba:	f1 f7       	brne	.-4      	; 0x22b8 <__vector_1+0x38>
    22bc:	00 c0       	rjmp	.+0      	; 0x22be <__vector_1+0x3e>
    22be:	00 00       	nop
	_delay_us(300);
	PORTD &= ~(1<<LED);
    22c0:	8b b1       	in	r24, 0x0b	; 11
    22c2:	8f 7e       	andi	r24, 0xEF	; 239
    22c4:	8b b9       	out	0x0b, r24	; 11
	status = nRF_read_register(STATUS);
    22c6:	87 e0       	ldi	r24, 0x07	; 7
    22c8:	0e 94 2c 11 	call	0x2258	; 0x2258 <nRF_read_register>
	if(status & 0x40)
    22cc:	86 ff       	sbrs	r24, 6
    22ce:	0a c0       	rjmp	.+20     	; 0x22e4 <__vector_1+0x64>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    22d0:	45 e0       	ldi	r20, 0x05	; 5
    22d2:	65 e9       	ldi	r22, 0x95	; 149
    22d4:	76 e0       	ldi	r23, 0x06	; 6
    22d6:	81 e6       	ldi	r24, 0x61	; 97
    22d8:	0e 94 c4 10 	call	0x2188	; 0x2188 <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    22dc:	60 e4       	ldi	r22, 0x40	; 64
    22de:	87 e0       	ldi	r24, 0x07	; 7
    22e0:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	}
	 rx_flag = 1;
    22e4:	81 e0       	ldi	r24, 0x01	; 1
    22e6:	80 93 94 06 	sts	0x0694, r24	; 0x800694 <rx_flag>
	 NRF24L01_Receive();
    22ea:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <NRF24L01_Receive>
}
    22ee:	ff 91       	pop	r31
    22f0:	ef 91       	pop	r30
    22f2:	bf 91       	pop	r27
    22f4:	af 91       	pop	r26
    22f6:	9f 91       	pop	r25
    22f8:	8f 91       	pop	r24
    22fa:	7f 91       	pop	r23
    22fc:	6f 91       	pop	r22
    22fe:	5f 91       	pop	r21
    2300:	4f 91       	pop	r20
    2302:	3f 91       	pop	r19
    2304:	2f 91       	pop	r18
    2306:	0f 90       	pop	r0
    2308:	0f be       	out	0x3f, r0	; 63
    230a:	0f 90       	pop	r0
    230c:	1f 90       	pop	r1
    230e:	18 95       	reti

00002310 <NRF24L01_RX_Mode>:
}
//-------------------------------------------------------------
void NRF24L01_RX_Mode(void) // включение режима приема
{
	uint8_t regval = 0x00;
	regval = nRF_read_register(CONFIG);
    2310:	80 e0       	ldi	r24, 0x00	; 0
    2312:	0e 94 2c 11 	call	0x2258	; 0x2258 <nRF_read_register>
	//разбудим модуль и переведём его в режим приёмника, включив биты PWR_UP и PRIM_RX
	regval |= (1<<PWR_UP)|(1<<PRIM_RX);
    2316:	68 2f       	mov	r22, r24
    2318:	63 60       	ori	r22, 0x03	; 3
	nRF_write_register(CONFIG,regval);
    231a:	80 e0       	ldi	r24, 0x00	; 0
    231c:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	HIGH_CE;
    2320:	85 b1       	in	r24, 0x05	; 5
    2322:	82 60       	ori	r24, 0x02	; 2
    2324:	85 b9       	out	0x05, r24	; 5
    2326:	8b e2       	ldi	r24, 0x2B	; 43
    2328:	91 e0       	ldi	r25, 0x01	; 1
    232a:	01 97       	sbiw	r24, 0x01	; 1
    232c:	f1 f7       	brne	.-4      	; 0x232a <NRF24L01_RX_Mode+0x1a>
    232e:	00 c0       	rjmp	.+0      	; 0x2330 <NRF24L01_RX_Mode+0x20>
    2330:	00 00       	nop
	_delay_us(150); //Задержка минимум 130 мкс
	// Flush buffers
	NRF24_FlushRX();
    2332:	0e 94 93 10 	call	0x2126	; 0x2126 <NRF24_FlushRX>
	NRF24_FlushTX();
    2336:	0e 94 a2 10 	call	0x2144	; 0x2144 <NRF24_FlushTX>
    233a:	08 95       	ret

0000233c <NRF24_ini>:
volatile uint8_t rx_flag = 0;
extern uint8_t Frame_buffer[1024];
//-------------------------------------------------------------
void NRF24_ini(void)
{
	LOW_CE;
    233c:	85 b1       	in	r24, 0x05	; 5
    233e:	8d 7f       	andi	r24, 0xFD	; 253
    2340:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2342:	8f e0       	ldi	r24, 0x0F	; 15
    2344:	97 e2       	ldi	r25, 0x27	; 39
    2346:	01 97       	sbiw	r24, 0x01	; 1
    2348:	f1 f7       	brne	.-4      	; 0x2346 <NRF24_ini+0xa>
    234a:	00 c0       	rjmp	.+0      	; 0x234c <NRF24_ini+0x10>
    234c:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(CONFIG, 0x0a); // Set PWR_UP bit, enable CRC(1 byte) &Prim_RX:0 (Transmitter)
    234e:	6a e0       	ldi	r22, 0x0A	; 10
    2350:	80 e0       	ldi	r24, 0x00	; 0
    2352:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
    2356:	8f e0       	ldi	r24, 0x0F	; 15
    2358:	97 e2       	ldi	r25, 0x27	; 39
    235a:	01 97       	sbiw	r24, 0x01	; 1
    235c:	f1 f7       	brne	.-4      	; 0x235a <NRF24_ini+0x1e>
    235e:	00 c0       	rjmp	.+0      	; 0x2360 <NRF24_ini+0x24>
    2360:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(EN_AA, 0x02); // Enable Pipe1
    2362:	62 e0       	ldi	r22, 0x02	; 2
    2364:	81 e0       	ldi	r24, 0x01	; 1
    2366:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	nRF_write_register(EN_RXADDR, 0x02); // Enable Pipe1
    236a:	62 e0       	ldi	r22, 0x02	; 2
    236c:	82 e0       	ldi	r24, 0x02	; 2
    236e:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	nRF_write_register(SETUP_AW, 0x01); // Setup address width=3 bytes
    2372:	61 e0       	ldi	r22, 0x01	; 1
    2374:	83 e0       	ldi	r24, 0x03	; 3
    2376:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	nRF_write_register(SETUP_RETR, 0x5F); // // 1500us, 15 retrans
    237a:	6f e5       	ldi	r22, 0x5F	; 95
    237c:	84 e0       	ldi	r24, 0x04	; 4
    237e:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	NRF24_ToggleFeatures();
    2382:	0e 94 b1 10 	call	0x2162	; 0x2162 <NRF24_ToggleFeatures>
	nRF_write_register(FEATURE, 0);
    2386:	60 e0       	ldi	r22, 0x00	; 0
    2388:	8d e1       	ldi	r24, 0x1D	; 29
    238a:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	nRF_write_register(DYNPD, 0);
    238e:	60 e0       	ldi	r22, 0x00	; 0
    2390:	8c e1       	ldi	r24, 0x1C	; 28
    2392:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	nRF_write_register(STATUS, 0x70);//Reset flags for IRQ
    2396:	60 e7       	ldi	r22, 0x70	; 112
    2398:	87 e0       	ldi	r24, 0x07	; 7
    239a:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	nRF_write_register(RF_CH, 76); // частота 2476 MHz
    239e:	6c e4       	ldi	r22, 0x4C	; 76
    23a0:	85 e0       	ldi	r24, 0x05	; 5
    23a2:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	nRF_write_register(RF_SETUP, 0x06); //TX_PWR:0dBm, Datarate:1Mbps
    23a6:	66 e0       	ldi	r22, 0x06	; 6
    23a8:	86 e0       	ldi	r24, 0x06	; 6
    23aa:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	NRF24_Write_Buf(TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);
    23ae:	43 e0       	ldi	r20, 0x03	; 3
    23b0:	62 e0       	ldi	r22, 0x02	; 2
    23b2:	71 e0       	ldi	r23, 0x01	; 1
    23b4:	80 e1       	ldi	r24, 0x10	; 16
    23b6:	0e 94 ed 10 	call	0x21da	; 0x21da <NRF24_Write_Buf>
	NRF24_Write_Buf(RX_ADDR_P1, TX_ADDRESS, TX_ADR_WIDTH);
    23ba:	43 e0       	ldi	r20, 0x03	; 3
    23bc:	62 e0       	ldi	r22, 0x02	; 2
    23be:	71 e0       	ldi	r23, 0x01	; 1
    23c0:	8b e0       	ldi	r24, 0x0B	; 11
    23c2:	0e 94 ed 10 	call	0x21da	; 0x21da <NRF24_Write_Buf>
	nRF_write_register(RX_PW_P1, TX_PLOAD_WIDTH); //Number of bytes in RX payload in data pipe 1
    23c6:	65 e0       	ldi	r22, 0x05	; 5
    23c8:	82 e1       	ldi	r24, 0x12	; 18
    23ca:	0e 94 1a 11 	call	0x2234	; 0x2234 <nRF_write_register>
	//пока уходим в режим приёмника
	NRF24L01_RX_Mode();
    23ce:	0e 94 88 11 	call	0x2310	; 0x2310 <NRF24L01_RX_Mode>
    23d2:	08 95       	ret

000023d4 <mem_set>:
	return FR_OK;

fw_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    23d4:	fc 01       	movw	r30, r24
    23d6:	03 c0       	rjmp	.+6      	; 0x23de <mem_set+0xa>
    23d8:	60 83       	st	Z, r22
    23da:	ac 01       	movw	r20, r24
    23dc:	31 96       	adiw	r30, 0x01	; 1
    23de:	ca 01       	movw	r24, r20
    23e0:	01 97       	sbiw	r24, 0x01	; 1
    23e2:	45 2b       	or	r20, r21
    23e4:	c9 f7       	brne	.-14     	; 0x23d8 <mem_set+0x4>
    23e6:	08 95       	ret

000023e8 <mem_cmp>:
    23e8:	cf 93       	push	r28
    23ea:	df 93       	push	r29
    23ec:	dc 01       	movw	r26, r24
    23ee:	fb 01       	movw	r30, r22
    23f0:	80 e0       	ldi	r24, 0x00	; 0
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	02 c0       	rjmp	.+4      	; 0x23fa <mem_cmp+0x12>
    23f6:	fb 01       	movw	r30, r22
    23f8:	de 01       	movw	r26, r28
    23fa:	9a 01       	movw	r18, r20
    23fc:	21 50       	subi	r18, 0x01	; 1
    23fe:	31 09       	sbc	r19, r1
    2400:	45 2b       	or	r20, r21
    2402:	61 f0       	breq	.+24     	; 0x241c <mem_cmp+0x34>
    2404:	ed 01       	movw	r28, r26
    2406:	21 96       	adiw	r28, 0x01	; 1
    2408:	8c 91       	ld	r24, X
    240a:	90 e0       	ldi	r25, 0x00	; 0
    240c:	bf 01       	movw	r22, r30
    240e:	6f 5f       	subi	r22, 0xFF	; 255
    2410:	7f 4f       	sbci	r23, 0xFF	; 255
    2412:	40 81       	ld	r20, Z
    2414:	84 1b       	sub	r24, r20
    2416:	91 09       	sbc	r25, r1
    2418:	a9 01       	movw	r20, r18
    241a:	69 f3       	breq	.-38     	; 0x23f6 <mem_cmp+0xe>
    241c:	df 91       	pop	r29
    241e:	cf 91       	pop	r28
    2420:	08 95       	ret

00002422 <clust2sect>:
    2422:	0f 93       	push	r16
    2424:	1f 93       	push	r17
    2426:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    242a:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    242e:	9b 01       	movw	r18, r22
    2430:	ac 01       	movw	r20, r24
    2432:	22 50       	subi	r18, 0x02	; 2
    2434:	31 09       	sbc	r19, r1
    2436:	41 09       	sbc	r20, r1
    2438:	51 09       	sbc	r21, r1
    243a:	80 85       	ldd	r24, Z+8	; 0x08
    243c:	91 85       	ldd	r25, Z+9	; 0x09
    243e:	a2 85       	ldd	r26, Z+10	; 0x0a
    2440:	b3 85       	ldd	r27, Z+11	; 0x0b
    2442:	02 97       	sbiw	r24, 0x02	; 2
    2444:	a1 09       	sbc	r26, r1
    2446:	b1 09       	sbc	r27, r1
    2448:	28 17       	cp	r18, r24
    244a:	39 07       	cpc	r19, r25
    244c:	4a 07       	cpc	r20, r26
    244e:	5b 07       	cpc	r21, r27
    2450:	68 f4       	brcc	.+26     	; 0x246c <clust2sect+0x4a>
    2452:	a1 81       	ldd	r26, Z+1	; 0x01
    2454:	b0 e0       	ldi	r27, 0x00	; 0
    2456:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
    245a:	04 89       	ldd	r16, Z+20	; 0x14
    245c:	15 89       	ldd	r17, Z+21	; 0x15
    245e:	26 89       	ldd	r18, Z+22	; 0x16
    2460:	37 89       	ldd	r19, Z+23	; 0x17
    2462:	60 0f       	add	r22, r16
    2464:	71 1f       	adc	r23, r17
    2466:	82 1f       	adc	r24, r18
    2468:	93 1f       	adc	r25, r19
    246a:	03 c0       	rjmp	.+6      	; 0x2472 <clust2sect+0x50>
    246c:	60 e0       	ldi	r22, 0x00	; 0
    246e:	70 e0       	ldi	r23, 0x00	; 0
    2470:	cb 01       	movw	r24, r22
    2472:	1f 91       	pop	r17
    2474:	0f 91       	pop	r16
    2476:	08 95       	ret

00002478 <dir_rewind>:
    2478:	0f 93       	push	r16
    247a:	1f 93       	push	r17
    247c:	cf 93       	push	r28
    247e:	df 93       	push	r29
    2480:	fc 01       	movw	r30, r24
    2482:	a0 91 9a 06 	lds	r26, 0x069A	; 0x80069a <FatFs>
    2486:	b0 91 9b 06 	lds	r27, 0x069B	; 0x80069b <FatFs+0x1>
    248a:	11 82       	std	Z+1, r1	; 0x01
    248c:	10 82       	st	Z, r1
    248e:	64 81       	ldd	r22, Z+4	; 0x04
    2490:	75 81       	ldd	r23, Z+5	; 0x05
    2492:	86 81       	ldd	r24, Z+6	; 0x06
    2494:	97 81       	ldd	r25, Z+7	; 0x07
    2496:	61 30       	cpi	r22, 0x01	; 1
    2498:	71 05       	cpc	r23, r1
    249a:	81 05       	cpc	r24, r1
    249c:	91 05       	cpc	r25, r1
    249e:	91 f1       	breq	.+100    	; 0x2504 <dir_rewind+0x8c>
    24a0:	18 96       	adiw	r26, 0x08	; 8
    24a2:	0d 91       	ld	r16, X+
    24a4:	1d 91       	ld	r17, X+
    24a6:	2d 91       	ld	r18, X+
    24a8:	3c 91       	ld	r19, X
    24aa:	1b 97       	sbiw	r26, 0x0b	; 11
    24ac:	60 17       	cp	r22, r16
    24ae:	71 07       	cpc	r23, r17
    24b0:	82 07       	cpc	r24, r18
    24b2:	93 07       	cpc	r25, r19
    24b4:	48 f5       	brcc	.+82     	; 0x2508 <dir_rewind+0x90>
    24b6:	61 15       	cp	r22, r1
    24b8:	71 05       	cpc	r23, r1
    24ba:	81 05       	cpc	r24, r1
    24bc:	91 05       	cpc	r25, r1
    24be:	49 f4       	brne	.+18     	; 0x24d2 <dir_rewind+0x5a>
    24c0:	2c 91       	ld	r18, X
    24c2:	23 30       	cpi	r18, 0x03	; 3
    24c4:	31 f4       	brne	.+12     	; 0x24d2 <dir_rewind+0x5a>
    24c6:	50 96       	adiw	r26, 0x10	; 16
    24c8:	6d 91       	ld	r22, X+
    24ca:	7d 91       	ld	r23, X+
    24cc:	8d 91       	ld	r24, X+
    24ce:	9c 91       	ld	r25, X
    24d0:	53 97       	sbiw	r26, 0x13	; 19
    24d2:	ef 01       	movw	r28, r30
    24d4:	60 87       	std	Z+8, r22	; 0x08
    24d6:	71 87       	std	Z+9, r23	; 0x09
    24d8:	82 87       	std	Z+10, r24	; 0x0a
    24da:	93 87       	std	Z+11, r25	; 0x0b
    24dc:	61 15       	cp	r22, r1
    24de:	71 05       	cpc	r23, r1
    24e0:	81 05       	cpc	r24, r1
    24e2:	91 05       	cpc	r25, r1
    24e4:	19 f0       	breq	.+6      	; 0x24ec <dir_rewind+0x74>
    24e6:	0e 94 11 12 	call	0x2422	; 0x2422 <clust2sect>
    24ea:	06 c0       	rjmp	.+12     	; 0x24f8 <dir_rewind+0x80>
    24ec:	50 96       	adiw	r26, 0x10	; 16
    24ee:	6d 91       	ld	r22, X+
    24f0:	7d 91       	ld	r23, X+
    24f2:	8d 91       	ld	r24, X+
    24f4:	9c 91       	ld	r25, X
    24f6:	53 97       	sbiw	r26, 0x13	; 19
    24f8:	6c 87       	std	Y+12, r22	; 0x0c
    24fa:	7d 87       	std	Y+13, r23	; 0x0d
    24fc:	8e 87       	std	Y+14, r24	; 0x0e
    24fe:	9f 87       	std	Y+15, r25	; 0x0f
    2500:	80 e0       	ldi	r24, 0x00	; 0
    2502:	03 c0       	rjmp	.+6      	; 0x250a <dir_rewind+0x92>
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	01 c0       	rjmp	.+2      	; 0x250a <dir_rewind+0x92>
    2508:	81 e0       	ldi	r24, 0x01	; 1
    250a:	df 91       	pop	r29
    250c:	cf 91       	pop	r28
    250e:	1f 91       	pop	r17
    2510:	0f 91       	pop	r16
    2512:	08 95       	ret

00002514 <create_name>:
    2514:	0f 93       	push	r16
    2516:	1f 93       	push	r17
    2518:	cf 93       	push	r28
    251a:	df 93       	push	r29
    251c:	eb 01       	movw	r28, r22
    251e:	fc 01       	movw	r30, r24
    2520:	02 81       	ldd	r16, Z+2	; 0x02
    2522:	13 81       	ldd	r17, Z+3	; 0x03
    2524:	4b e0       	ldi	r20, 0x0B	; 11
    2526:	50 e0       	ldi	r21, 0x00	; 0
    2528:	60 e2       	ldi	r22, 0x20	; 32
    252a:	70 e0       	ldi	r23, 0x00	; 0
    252c:	c8 01       	movw	r24, r16
    252e:	0e 94 ea 11 	call	0x23d4	; 0x23d4 <mem_set>
    2532:	28 81       	ld	r18, Y
    2534:	39 81       	ldd	r19, Y+1	; 0x01
    2536:	90 e0       	ldi	r25, 0x00	; 0
    2538:	80 e0       	ldi	r24, 0x00	; 0
    253a:	58 e0       	ldi	r21, 0x08	; 8
    253c:	01 c0       	rjmp	.+2      	; 0x2540 <create_name+0x2c>
    253e:	84 2f       	mov	r24, r20
    2540:	41 e0       	ldi	r20, 0x01	; 1
    2542:	48 0f       	add	r20, r24
    2544:	f9 01       	movw	r30, r18
    2546:	e8 0f       	add	r30, r24
    2548:	f1 1d       	adc	r31, r1
    254a:	80 81       	ld	r24, Z
    254c:	81 32       	cpi	r24, 0x21	; 33
    254e:	c0 f0       	brcs	.+48     	; 0x2580 <create_name+0x6c>
    2550:	8f 32       	cpi	r24, 0x2F	; 47
    2552:	b1 f0       	breq	.+44     	; 0x2580 <create_name+0x6c>
    2554:	8e 32       	cpi	r24, 0x2E	; 46
    2556:	11 f0       	breq	.+4      	; 0x255c <create_name+0x48>
    2558:	95 17       	cp	r25, r21
    255a:	38 f0       	brcs	.+14     	; 0x256a <create_name+0x56>
    255c:	58 30       	cpi	r21, 0x08	; 8
    255e:	81 f4       	brne	.+32     	; 0x2580 <create_name+0x6c>
    2560:	8e 32       	cpi	r24, 0x2E	; 46
    2562:	71 f4       	brne	.+28     	; 0x2580 <create_name+0x6c>
    2564:	98 e0       	ldi	r25, 0x08	; 8
    2566:	5b e0       	ldi	r21, 0x0B	; 11
    2568:	ea cf       	rjmp	.-44     	; 0x253e <create_name+0x2a>
    256a:	6f e9       	ldi	r22, 0x9F	; 159
    256c:	68 0f       	add	r22, r24
    256e:	6a 31       	cpi	r22, 0x1A	; 26
    2570:	08 f4       	brcc	.+2      	; 0x2574 <create_name+0x60>
    2572:	80 52       	subi	r24, 0x20	; 32
    2574:	f8 01       	movw	r30, r16
    2576:	e9 0f       	add	r30, r25
    2578:	f1 1d       	adc	r31, r1
    257a:	80 83       	st	Z, r24
    257c:	9f 5f       	subi	r25, 0xFF	; 255
    257e:	df cf       	rjmp	.-66     	; 0x253e <create_name+0x2a>
    2580:	24 0f       	add	r18, r20
    2582:	31 1d       	adc	r19, r1
    2584:	39 83       	std	Y+1, r19	; 0x01
    2586:	28 83       	st	Y, r18
    2588:	91 e0       	ldi	r25, 0x01	; 1
    258a:	81 32       	cpi	r24, 0x21	; 33
    258c:	08 f0       	brcs	.+2      	; 0x2590 <create_name+0x7c>
    258e:	90 e0       	ldi	r25, 0x00	; 0
    2590:	f8 01       	movw	r30, r16
    2592:	93 87       	std	Z+11, r25	; 0x0b
    2594:	80 e0       	ldi	r24, 0x00	; 0
    2596:	df 91       	pop	r29
    2598:	cf 91       	pop	r28
    259a:	1f 91       	pop	r17
    259c:	0f 91       	pop	r16
    259e:	08 95       	ret

000025a0 <check_fs>:
    25a0:	cf 92       	push	r12
    25a2:	df 92       	push	r13
    25a4:	ef 92       	push	r14
    25a6:	ff 92       	push	r15
    25a8:	0f 93       	push	r16
    25aa:	1f 93       	push	r17
    25ac:	cf 93       	push	r28
    25ae:	df 93       	push	r29
    25b0:	ec 01       	movw	r28, r24
    25b2:	6a 01       	movw	r12, r20
    25b4:	7b 01       	movw	r14, r22
    25b6:	02 e0       	ldi	r16, 0x02	; 2
    25b8:	10 e0       	ldi	r17, 0x00	; 0
    25ba:	2e ef       	ldi	r18, 0xFE	; 254
    25bc:	31 e0       	ldi	r19, 0x01	; 1
    25be:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    25c2:	81 11       	cpse	r24, r1
    25c4:	25 c0       	rjmp	.+74     	; 0x2610 <check_fs+0x70>
    25c6:	88 81       	ld	r24, Y
    25c8:	99 81       	ldd	r25, Y+1	; 0x01
    25ca:	85 35       	cpi	r24, 0x55	; 85
    25cc:	9a 4a       	sbci	r25, 0xAA	; 170
    25ce:	11 f5       	brne	.+68     	; 0x2614 <check_fs+0x74>
    25d0:	26 e3       	ldi	r18, 0x36	; 54
    25d2:	30 e0       	ldi	r19, 0x00	; 0
    25d4:	b7 01       	movw	r22, r14
    25d6:	a6 01       	movw	r20, r12
    25d8:	ce 01       	movw	r24, r28
    25da:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    25de:	81 11       	cpse	r24, r1
    25e0:	05 c0       	rjmp	.+10     	; 0x25ec <check_fs+0x4c>
    25e2:	88 81       	ld	r24, Y
    25e4:	99 81       	ldd	r25, Y+1	; 0x01
    25e6:	86 34       	cpi	r24, 0x46	; 70
    25e8:	91 44       	sbci	r25, 0x41	; 65
    25ea:	b1 f0       	breq	.+44     	; 0x2618 <check_fs+0x78>
    25ec:	02 e0       	ldi	r16, 0x02	; 2
    25ee:	10 e0       	ldi	r17, 0x00	; 0
    25f0:	22 e5       	ldi	r18, 0x52	; 82
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	b7 01       	movw	r22, r14
    25f6:	a6 01       	movw	r20, r12
    25f8:	ce 01       	movw	r24, r28
    25fa:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    25fe:	81 11       	cpse	r24, r1
    2600:	0d c0       	rjmp	.+26     	; 0x261c <check_fs+0x7c>
    2602:	88 81       	ld	r24, Y
    2604:	99 81       	ldd	r25, Y+1	; 0x01
    2606:	86 34       	cpi	r24, 0x46	; 70
    2608:	91 44       	sbci	r25, 0x41	; 65
    260a:	51 f0       	breq	.+20     	; 0x2620 <check_fs+0x80>
    260c:	81 e0       	ldi	r24, 0x01	; 1
    260e:	09 c0       	rjmp	.+18     	; 0x2622 <check_fs+0x82>
    2610:	83 e0       	ldi	r24, 0x03	; 3
    2612:	07 c0       	rjmp	.+14     	; 0x2622 <check_fs+0x82>
    2614:	82 e0       	ldi	r24, 0x02	; 2
    2616:	05 c0       	rjmp	.+10     	; 0x2622 <check_fs+0x82>
    2618:	80 e0       	ldi	r24, 0x00	; 0
    261a:	03 c0       	rjmp	.+6      	; 0x2622 <check_fs+0x82>
    261c:	81 e0       	ldi	r24, 0x01	; 1
    261e:	01 c0       	rjmp	.+2      	; 0x2622 <check_fs+0x82>
    2620:	80 e0       	ldi	r24, 0x00	; 0
    2622:	df 91       	pop	r29
    2624:	cf 91       	pop	r28
    2626:	1f 91       	pop	r17
    2628:	0f 91       	pop	r16
    262a:	ff 90       	pop	r15
    262c:	ef 90       	pop	r14
    262e:	df 90       	pop	r13
    2630:	cf 90       	pop	r12
    2632:	08 95       	ret

00002634 <get_fat>:
    2634:	4f 92       	push	r4
    2636:	5f 92       	push	r5
    2638:	6f 92       	push	r6
    263a:	7f 92       	push	r7
    263c:	8f 92       	push	r8
    263e:	9f 92       	push	r9
    2640:	af 92       	push	r10
    2642:	bf 92       	push	r11
    2644:	cf 92       	push	r12
    2646:	df 92       	push	r13
    2648:	ef 92       	push	r14
    264a:	ff 92       	push	r15
    264c:	0f 93       	push	r16
    264e:	1f 93       	push	r17
    2650:	cf 93       	push	r28
    2652:	df 93       	push	r29
    2654:	00 d0       	rcall	.+0      	; 0x2656 <get_fat+0x22>
    2656:	00 d0       	rcall	.+0      	; 0x2658 <get_fat+0x24>
    2658:	cd b7       	in	r28, 0x3d	; 61
    265a:	de b7       	in	r29, 0x3e	; 62
    265c:	e0 90 9a 06 	lds	r14, 0x069A	; 0x80069a <FatFs>
    2660:	f0 90 9b 06 	lds	r15, 0x069B	; 0x80069b <FatFs+0x1>
    2664:	62 30       	cpi	r22, 0x02	; 2
    2666:	71 05       	cpc	r23, r1
    2668:	81 05       	cpc	r24, r1
    266a:	91 05       	cpc	r25, r1
    266c:	08 f4       	brcc	.+2      	; 0x2670 <get_fat+0x3c>
    266e:	bf c0       	rjmp	.+382    	; 0x27ee <get_fat+0x1ba>
    2670:	f7 01       	movw	r30, r14
    2672:	80 84       	ldd	r8, Z+8	; 0x08
    2674:	91 84       	ldd	r9, Z+9	; 0x09
    2676:	a2 84       	ldd	r10, Z+10	; 0x0a
    2678:	b3 84       	ldd	r11, Z+11	; 0x0b
    267a:	68 15       	cp	r22, r8
    267c:	79 05       	cpc	r23, r9
    267e:	8a 05       	cpc	r24, r10
    2680:	9b 05       	cpc	r25, r11
    2682:	08 f0       	brcs	.+2      	; 0x2686 <get_fat+0x52>
    2684:	b9 c0       	rjmp	.+370    	; 0x27f8 <get_fat+0x1c4>
    2686:	4b 01       	movw	r8, r22
    2688:	5c 01       	movw	r10, r24
    268a:	80 81       	ld	r24, Z
    268c:	82 30       	cpi	r24, 0x02	; 2
    268e:	09 f4       	brne	.+2      	; 0x2692 <get_fat+0x5e>
    2690:	62 c0       	rjmp	.+196    	; 0x2756 <get_fat+0x122>
    2692:	83 30       	cpi	r24, 0x03	; 3
    2694:	09 f4       	brne	.+2      	; 0x2698 <get_fat+0x64>
    2696:	7f c0       	rjmp	.+254    	; 0x2796 <get_fat+0x162>
    2698:	81 30       	cpi	r24, 0x01	; 1
    269a:	09 f0       	breq	.+2      	; 0x269e <get_fat+0x6a>
    269c:	b2 c0       	rjmp	.+356    	; 0x2802 <get_fat+0x1ce>
    269e:	c4 01       	movw	r24, r8
    26a0:	96 95       	lsr	r25
    26a2:	87 95       	ror	r24
    26a4:	88 0d       	add	r24, r8
    26a6:	99 1d       	adc	r25, r9
    26a8:	9c 01       	movw	r18, r24
    26aa:	31 70       	andi	r19, 0x01	; 1
    26ac:	89 2f       	mov	r24, r25
    26ae:	99 27       	eor	r25, r25
    26b0:	86 95       	lsr	r24
    26b2:	2f 3f       	cpi	r18, 0xFF	; 255
    26b4:	f1 e0       	ldi	r31, 0x01	; 1
    26b6:	3f 07       	cpc	r19, r31
    26b8:	91 f0       	breq	.+36     	; 0x26de <get_fat+0xaa>
    26ba:	f7 01       	movw	r30, r14
    26bc:	44 85       	ldd	r20, Z+12	; 0x0c
    26be:	55 85       	ldd	r21, Z+13	; 0x0d
    26c0:	66 85       	ldd	r22, Z+14	; 0x0e
    26c2:	77 85       	ldd	r23, Z+15	; 0x0f
    26c4:	48 0f       	add	r20, r24
    26c6:	59 1f       	adc	r21, r25
    26c8:	61 1d       	adc	r22, r1
    26ca:	71 1d       	adc	r23, r1
    26cc:	02 e0       	ldi	r16, 0x02	; 2
    26ce:	10 e0       	ldi	r17, 0x00	; 0
    26d0:	ce 01       	movw	r24, r28
    26d2:	01 96       	adiw	r24, 0x01	; 1
    26d4:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    26d8:	88 23       	and	r24, r24
    26da:	61 f1       	breq	.+88     	; 0x2734 <get_fat+0x100>
    26dc:	97 c0       	rjmp	.+302    	; 0x280c <get_fat+0x1d8>
    26de:	f7 01       	movw	r30, r14
    26e0:	44 85       	ldd	r20, Z+12	; 0x0c
    26e2:	55 85       	ldd	r21, Z+13	; 0x0d
    26e4:	66 85       	ldd	r22, Z+14	; 0x0e
    26e6:	77 85       	ldd	r23, Z+15	; 0x0f
    26e8:	2c 01       	movw	r4, r24
    26ea:	61 2c       	mov	r6, r1
    26ec:	71 2c       	mov	r7, r1
    26ee:	44 0d       	add	r20, r4
    26f0:	55 1d       	adc	r21, r5
    26f2:	66 1d       	adc	r22, r6
    26f4:	77 1d       	adc	r23, r7
    26f6:	01 e0       	ldi	r16, 0x01	; 1
    26f8:	10 e0       	ldi	r17, 0x00	; 0
    26fa:	2f ef       	ldi	r18, 0xFF	; 255
    26fc:	31 e0       	ldi	r19, 0x01	; 1
    26fe:	ce 01       	movw	r24, r28
    2700:	01 96       	adiw	r24, 0x01	; 1
    2702:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    2706:	81 11       	cpse	r24, r1
    2708:	86 c0       	rjmp	.+268    	; 0x2816 <get_fat+0x1e2>
    270a:	f7 01       	movw	r30, r14
    270c:	44 85       	ldd	r20, Z+12	; 0x0c
    270e:	55 85       	ldd	r21, Z+13	; 0x0d
    2710:	66 85       	ldd	r22, Z+14	; 0x0e
    2712:	77 85       	ldd	r23, Z+15	; 0x0f
    2714:	44 0d       	add	r20, r4
    2716:	55 1d       	adc	r21, r5
    2718:	66 1d       	adc	r22, r6
    271a:	77 1d       	adc	r23, r7
    271c:	4f 5f       	subi	r20, 0xFF	; 255
    271e:	5f 4f       	sbci	r21, 0xFF	; 255
    2720:	6f 4f       	sbci	r22, 0xFF	; 255
    2722:	7f 4f       	sbci	r23, 0xFF	; 255
    2724:	20 e0       	ldi	r18, 0x00	; 0
    2726:	30 e0       	ldi	r19, 0x00	; 0
    2728:	ce 01       	movw	r24, r28
    272a:	02 96       	adiw	r24, 0x02	; 2
    272c:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    2730:	81 11       	cpse	r24, r1
    2732:	76 c0       	rjmp	.+236    	; 0x2820 <get_fat+0x1ec>
    2734:	69 81       	ldd	r22, Y+1	; 0x01
    2736:	7a 81       	ldd	r23, Y+2	; 0x02
    2738:	80 fe       	sbrs	r8, 0
    273a:	09 c0       	rjmp	.+18     	; 0x274e <get_fat+0x11a>
    273c:	72 95       	swap	r23
    273e:	62 95       	swap	r22
    2740:	6f 70       	andi	r22, 0x0F	; 15
    2742:	67 27       	eor	r22, r23
    2744:	7f 70       	andi	r23, 0x0F	; 15
    2746:	67 27       	eor	r22, r23
    2748:	80 e0       	ldi	r24, 0x00	; 0
    274a:	90 e0       	ldi	r25, 0x00	; 0
    274c:	77 c0       	rjmp	.+238    	; 0x283c <get_fat+0x208>
    274e:	7f 70       	andi	r23, 0x0F	; 15
    2750:	80 e0       	ldi	r24, 0x00	; 0
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	73 c0       	rjmp	.+230    	; 0x283c <get_fat+0x208>
    2756:	94 01       	movw	r18, r8
    2758:	33 27       	eor	r19, r19
    275a:	22 0f       	add	r18, r18
    275c:	33 1f       	adc	r19, r19
    275e:	f7 01       	movw	r30, r14
    2760:	c4 84       	ldd	r12, Z+12	; 0x0c
    2762:	d5 84       	ldd	r13, Z+13	; 0x0d
    2764:	e6 84       	ldd	r14, Z+14	; 0x0e
    2766:	f7 84       	ldd	r15, Z+15	; 0x0f
    2768:	bb 27       	eor	r27, r27
    276a:	ab 2d       	mov	r26, r11
    276c:	9a 2d       	mov	r25, r10
    276e:	89 2d       	mov	r24, r9
    2770:	b7 01       	movw	r22, r14
    2772:	a6 01       	movw	r20, r12
    2774:	48 0f       	add	r20, r24
    2776:	59 1f       	adc	r21, r25
    2778:	6a 1f       	adc	r22, r26
    277a:	7b 1f       	adc	r23, r27
    277c:	02 e0       	ldi	r16, 0x02	; 2
    277e:	10 e0       	ldi	r17, 0x00	; 0
    2780:	ce 01       	movw	r24, r28
    2782:	01 96       	adiw	r24, 0x01	; 1
    2784:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    2788:	81 11       	cpse	r24, r1
    278a:	4f c0       	rjmp	.+158    	; 0x282a <get_fat+0x1f6>
    278c:	69 81       	ldd	r22, Y+1	; 0x01
    278e:	7a 81       	ldd	r23, Y+2	; 0x02
    2790:	80 e0       	ldi	r24, 0x00	; 0
    2792:	90 e0       	ldi	r25, 0x00	; 0
    2794:	53 c0       	rjmp	.+166    	; 0x283c <get_fat+0x208>
    2796:	94 01       	movw	r18, r8
    2798:	2f 77       	andi	r18, 0x7F	; 127
    279a:	33 27       	eor	r19, r19
    279c:	22 0f       	add	r18, r18
    279e:	33 1f       	adc	r19, r19
    27a0:	22 0f       	add	r18, r18
    27a2:	33 1f       	adc	r19, r19
    27a4:	f7 01       	movw	r30, r14
    27a6:	c4 84       	ldd	r12, Z+12	; 0x0c
    27a8:	d5 84       	ldd	r13, Z+13	; 0x0d
    27aa:	e6 84       	ldd	r14, Z+14	; 0x0e
    27ac:	f7 84       	ldd	r15, Z+15	; 0x0f
    27ae:	d5 01       	movw	r26, r10
    27b0:	c4 01       	movw	r24, r8
    27b2:	68 94       	set
    27b4:	16 f8       	bld	r1, 6
    27b6:	b6 95       	lsr	r27
    27b8:	a7 95       	ror	r26
    27ba:	97 95       	ror	r25
    27bc:	87 95       	ror	r24
    27be:	16 94       	lsr	r1
    27c0:	d1 f7       	brne	.-12     	; 0x27b6 <get_fat+0x182>
    27c2:	b7 01       	movw	r22, r14
    27c4:	a6 01       	movw	r20, r12
    27c6:	48 0f       	add	r20, r24
    27c8:	59 1f       	adc	r21, r25
    27ca:	6a 1f       	adc	r22, r26
    27cc:	7b 1f       	adc	r23, r27
    27ce:	04 e0       	ldi	r16, 0x04	; 4
    27d0:	10 e0       	ldi	r17, 0x00	; 0
    27d2:	ce 01       	movw	r24, r28
    27d4:	01 96       	adiw	r24, 0x01	; 1
    27d6:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    27da:	81 11       	cpse	r24, r1
    27dc:	2b c0       	rjmp	.+86     	; 0x2834 <get_fat+0x200>
    27de:	89 81       	ldd	r24, Y+1	; 0x01
    27e0:	9a 81       	ldd	r25, Y+2	; 0x02
    27e2:	ab 81       	ldd	r26, Y+3	; 0x03
    27e4:	bc 81       	ldd	r27, Y+4	; 0x04
    27e6:	bc 01       	movw	r22, r24
    27e8:	cd 01       	movw	r24, r26
    27ea:	9f 70       	andi	r25, 0x0F	; 15
    27ec:	27 c0       	rjmp	.+78     	; 0x283c <get_fat+0x208>
    27ee:	61 e0       	ldi	r22, 0x01	; 1
    27f0:	70 e0       	ldi	r23, 0x00	; 0
    27f2:	80 e0       	ldi	r24, 0x00	; 0
    27f4:	90 e0       	ldi	r25, 0x00	; 0
    27f6:	22 c0       	rjmp	.+68     	; 0x283c <get_fat+0x208>
    27f8:	61 e0       	ldi	r22, 0x01	; 1
    27fa:	70 e0       	ldi	r23, 0x00	; 0
    27fc:	80 e0       	ldi	r24, 0x00	; 0
    27fe:	90 e0       	ldi	r25, 0x00	; 0
    2800:	1d c0       	rjmp	.+58     	; 0x283c <get_fat+0x208>
    2802:	61 e0       	ldi	r22, 0x01	; 1
    2804:	70 e0       	ldi	r23, 0x00	; 0
    2806:	80 e0       	ldi	r24, 0x00	; 0
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	18 c0       	rjmp	.+48     	; 0x283c <get_fat+0x208>
    280c:	61 e0       	ldi	r22, 0x01	; 1
    280e:	70 e0       	ldi	r23, 0x00	; 0
    2810:	80 e0       	ldi	r24, 0x00	; 0
    2812:	90 e0       	ldi	r25, 0x00	; 0
    2814:	13 c0       	rjmp	.+38     	; 0x283c <get_fat+0x208>
    2816:	61 e0       	ldi	r22, 0x01	; 1
    2818:	70 e0       	ldi	r23, 0x00	; 0
    281a:	80 e0       	ldi	r24, 0x00	; 0
    281c:	90 e0       	ldi	r25, 0x00	; 0
    281e:	0e c0       	rjmp	.+28     	; 0x283c <get_fat+0x208>
    2820:	61 e0       	ldi	r22, 0x01	; 1
    2822:	70 e0       	ldi	r23, 0x00	; 0
    2824:	80 e0       	ldi	r24, 0x00	; 0
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	09 c0       	rjmp	.+18     	; 0x283c <get_fat+0x208>
    282a:	61 e0       	ldi	r22, 0x01	; 1
    282c:	70 e0       	ldi	r23, 0x00	; 0
    282e:	80 e0       	ldi	r24, 0x00	; 0
    2830:	90 e0       	ldi	r25, 0x00	; 0
    2832:	04 c0       	rjmp	.+8      	; 0x283c <get_fat+0x208>
    2834:	61 e0       	ldi	r22, 0x01	; 1
    2836:	70 e0       	ldi	r23, 0x00	; 0
    2838:	80 e0       	ldi	r24, 0x00	; 0
    283a:	90 e0       	ldi	r25, 0x00	; 0
    283c:	0f 90       	pop	r0
    283e:	0f 90       	pop	r0
    2840:	0f 90       	pop	r0
    2842:	0f 90       	pop	r0
    2844:	df 91       	pop	r29
    2846:	cf 91       	pop	r28
    2848:	1f 91       	pop	r17
    284a:	0f 91       	pop	r16
    284c:	ff 90       	pop	r15
    284e:	ef 90       	pop	r14
    2850:	df 90       	pop	r13
    2852:	cf 90       	pop	r12
    2854:	bf 90       	pop	r11
    2856:	af 90       	pop	r10
    2858:	9f 90       	pop	r9
    285a:	8f 90       	pop	r8
    285c:	7f 90       	pop	r7
    285e:	6f 90       	pop	r6
    2860:	5f 90       	pop	r5
    2862:	4f 90       	pop	r4
    2864:	08 95       	ret

00002866 <dir_next>:
    2866:	cf 92       	push	r12
    2868:	df 92       	push	r13
    286a:	ef 92       	push	r14
    286c:	ff 92       	push	r15
    286e:	0f 93       	push	r16
    2870:	1f 93       	push	r17
    2872:	cf 93       	push	r28
    2874:	df 93       	push	r29
    2876:	e0 90 9a 06 	lds	r14, 0x069A	; 0x80069a <FatFs>
    287a:	f0 90 9b 06 	lds	r15, 0x069B	; 0x80069b <FatFs+0x1>
    287e:	fc 01       	movw	r30, r24
    2880:	c0 81       	ld	r28, Z
    2882:	d1 81       	ldd	r29, Z+1	; 0x01
    2884:	21 96       	adiw	r28, 0x01	; 1
    2886:	09 f4       	brne	.+2      	; 0x288a <dir_next+0x24>
    2888:	5c c0       	rjmp	.+184    	; 0x2942 <dir_next+0xdc>
    288a:	44 85       	ldd	r20, Z+12	; 0x0c
    288c:	55 85       	ldd	r21, Z+13	; 0x0d
    288e:	66 85       	ldd	r22, Z+14	; 0x0e
    2890:	77 85       	ldd	r23, Z+15	; 0x0f
    2892:	41 15       	cp	r20, r1
    2894:	51 05       	cpc	r21, r1
    2896:	61 05       	cpc	r22, r1
    2898:	71 05       	cpc	r23, r1
    289a:	09 f4       	brne	.+2      	; 0x289e <dir_next+0x38>
    289c:	54 c0       	rjmp	.+168    	; 0x2946 <dir_next+0xe0>
    289e:	8c 01       	movw	r16, r24
    28a0:	ce 01       	movw	r24, r28
    28a2:	8f 70       	andi	r24, 0x0F	; 15
    28a4:	99 27       	eor	r25, r25
    28a6:	89 2b       	or	r24, r25
    28a8:	09 f0       	breq	.+2      	; 0x28ac <dir_next+0x46>
    28aa:	46 c0       	rjmp	.+140    	; 0x2938 <dir_next+0xd2>
    28ac:	4f 5f       	subi	r20, 0xFF	; 255
    28ae:	5f 4f       	sbci	r21, 0xFF	; 255
    28b0:	6f 4f       	sbci	r22, 0xFF	; 255
    28b2:	7f 4f       	sbci	r23, 0xFF	; 255
    28b4:	44 87       	std	Z+12, r20	; 0x0c
    28b6:	55 87       	std	Z+13, r21	; 0x0d
    28b8:	66 87       	std	Z+14, r22	; 0x0e
    28ba:	77 87       	std	Z+15, r23	; 0x0f
    28bc:	40 85       	ldd	r20, Z+8	; 0x08
    28be:	51 85       	ldd	r21, Z+9	; 0x09
    28c0:	62 85       	ldd	r22, Z+10	; 0x0a
    28c2:	73 85       	ldd	r23, Z+11	; 0x0b
    28c4:	41 15       	cp	r20, r1
    28c6:	51 05       	cpc	r21, r1
    28c8:	61 05       	cpc	r22, r1
    28ca:	71 05       	cpc	r23, r1
    28cc:	39 f4       	brne	.+14     	; 0x28dc <dir_next+0x76>
    28ce:	f7 01       	movw	r30, r14
    28d0:	84 81       	ldd	r24, Z+4	; 0x04
    28d2:	95 81       	ldd	r25, Z+5	; 0x05
    28d4:	c8 17       	cp	r28, r24
    28d6:	d9 07       	cpc	r29, r25
    28d8:	c0 f5       	brcc	.+112    	; 0x294a <dir_next+0xe4>
    28da:	2e c0       	rjmp	.+92     	; 0x2938 <dir_next+0xd2>
    28dc:	f7 01       	movw	r30, r14
    28de:	81 81       	ldd	r24, Z+1	; 0x01
    28e0:	90 e0       	ldi	r25, 0x00	; 0
    28e2:	01 97       	sbiw	r24, 0x01	; 1
    28e4:	9e 01       	movw	r18, r28
    28e6:	32 95       	swap	r19
    28e8:	22 95       	swap	r18
    28ea:	2f 70       	andi	r18, 0x0F	; 15
    28ec:	23 27       	eor	r18, r19
    28ee:	3f 70       	andi	r19, 0x0F	; 15
    28f0:	23 27       	eor	r18, r19
    28f2:	82 23       	and	r24, r18
    28f4:	93 23       	and	r25, r19
    28f6:	89 2b       	or	r24, r25
    28f8:	f9 f4       	brne	.+62     	; 0x2938 <dir_next+0xd2>
    28fa:	cb 01       	movw	r24, r22
    28fc:	ba 01       	movw	r22, r20
    28fe:	0e 94 1a 13 	call	0x2634	; 0x2634 <get_fat>
    2902:	62 30       	cpi	r22, 0x02	; 2
    2904:	71 05       	cpc	r23, r1
    2906:	81 05       	cpc	r24, r1
    2908:	91 05       	cpc	r25, r1
    290a:	08 f1       	brcs	.+66     	; 0x294e <dir_next+0xe8>
    290c:	f7 01       	movw	r30, r14
    290e:	c0 84       	ldd	r12, Z+8	; 0x08
    2910:	d1 84       	ldd	r13, Z+9	; 0x09
    2912:	e2 84       	ldd	r14, Z+10	; 0x0a
    2914:	f3 84       	ldd	r15, Z+11	; 0x0b
    2916:	6c 15       	cp	r22, r12
    2918:	7d 05       	cpc	r23, r13
    291a:	8e 05       	cpc	r24, r14
    291c:	9f 05       	cpc	r25, r15
    291e:	c8 f4       	brcc	.+50     	; 0x2952 <dir_next+0xec>
    2920:	f8 01       	movw	r30, r16
    2922:	60 87       	std	Z+8, r22	; 0x08
    2924:	71 87       	std	Z+9, r23	; 0x09
    2926:	82 87       	std	Z+10, r24	; 0x0a
    2928:	93 87       	std	Z+11, r25	; 0x0b
    292a:	0e 94 11 12 	call	0x2422	; 0x2422 <clust2sect>
    292e:	f8 01       	movw	r30, r16
    2930:	64 87       	std	Z+12, r22	; 0x0c
    2932:	75 87       	std	Z+13, r23	; 0x0d
    2934:	86 87       	std	Z+14, r24	; 0x0e
    2936:	97 87       	std	Z+15, r25	; 0x0f
    2938:	f8 01       	movw	r30, r16
    293a:	d1 83       	std	Z+1, r29	; 0x01
    293c:	c0 83       	st	Z, r28
    293e:	80 e0       	ldi	r24, 0x00	; 0
    2940:	09 c0       	rjmp	.+18     	; 0x2954 <dir_next+0xee>
    2942:	83 e0       	ldi	r24, 0x03	; 3
    2944:	07 c0       	rjmp	.+14     	; 0x2954 <dir_next+0xee>
    2946:	83 e0       	ldi	r24, 0x03	; 3
    2948:	05 c0       	rjmp	.+10     	; 0x2954 <dir_next+0xee>
    294a:	83 e0       	ldi	r24, 0x03	; 3
    294c:	03 c0       	rjmp	.+6      	; 0x2954 <dir_next+0xee>
    294e:	81 e0       	ldi	r24, 0x01	; 1
    2950:	01 c0       	rjmp	.+2      	; 0x2954 <dir_next+0xee>
    2952:	83 e0       	ldi	r24, 0x03	; 3
    2954:	df 91       	pop	r29
    2956:	cf 91       	pop	r28
    2958:	1f 91       	pop	r17
    295a:	0f 91       	pop	r16
    295c:	ff 90       	pop	r15
    295e:	ef 90       	pop	r14
    2960:	df 90       	pop	r13
    2962:	cf 90       	pop	r12
    2964:	08 95       	ret

00002966 <dir_find>:
    2966:	df 92       	push	r13
    2968:	ef 92       	push	r14
    296a:	ff 92       	push	r15
    296c:	0f 93       	push	r16
    296e:	1f 93       	push	r17
    2970:	cf 93       	push	r28
    2972:	df 93       	push	r29
    2974:	7c 01       	movw	r14, r24
    2976:	0e 94 3c 12 	call	0x2478	; 0x2478 <dir_rewind>
    297a:	81 11       	cpse	r24, r1
    297c:	3e c0       	rjmp	.+124    	; 0x29fa <dir_find+0x94>
    297e:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    2982:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    2986:	c6 81       	ldd	r28, Z+6	; 0x06
    2988:	d7 81       	ldd	r29, Z+7	; 0x07
    298a:	f7 01       	movw	r30, r14
    298c:	20 81       	ld	r18, Z
    298e:	31 81       	ldd	r19, Z+1	; 0x01
    2990:	2f 70       	andi	r18, 0x0F	; 15
    2992:	33 27       	eor	r19, r19
    2994:	22 0f       	add	r18, r18
    2996:	33 1f       	adc	r19, r19
    2998:	22 95       	swap	r18
    299a:	32 95       	swap	r19
    299c:	30 7f       	andi	r19, 0xF0	; 240
    299e:	32 27       	eor	r19, r18
    29a0:	20 7f       	andi	r18, 0xF0	; 240
    29a2:	32 27       	eor	r19, r18
    29a4:	44 85       	ldd	r20, Z+12	; 0x0c
    29a6:	55 85       	ldd	r21, Z+13	; 0x0d
    29a8:	66 85       	ldd	r22, Z+14	; 0x0e
    29aa:	77 85       	ldd	r23, Z+15	; 0x0f
    29ac:	00 e2       	ldi	r16, 0x20	; 32
    29ae:	10 e0       	ldi	r17, 0x00	; 0
    29b0:	ce 01       	movw	r24, r28
    29b2:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    29b6:	91 e0       	ldi	r25, 0x01	; 1
    29b8:	81 11       	cpse	r24, r1
    29ba:	01 c0       	rjmp	.+2      	; 0x29be <dir_find+0x58>
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	d9 2e       	mov	r13, r25
    29c0:	91 11       	cpse	r25, r1
    29c2:	16 c0       	rjmp	.+44     	; 0x29f0 <dir_find+0x8a>
    29c4:	88 81       	ld	r24, Y
    29c6:	88 23       	and	r24, r24
    29c8:	a9 f0       	breq	.+42     	; 0x29f4 <dir_find+0x8e>
    29ca:	8b 85       	ldd	r24, Y+11	; 0x0b
    29cc:	83 fd       	sbrc	r24, 3
    29ce:	0a c0       	rjmp	.+20     	; 0x29e4 <dir_find+0x7e>
    29d0:	f7 01       	movw	r30, r14
    29d2:	62 81       	ldd	r22, Z+2	; 0x02
    29d4:	73 81       	ldd	r23, Z+3	; 0x03
    29d6:	4b e0       	ldi	r20, 0x0B	; 11
    29d8:	50 e0       	ldi	r21, 0x00	; 0
    29da:	ce 01       	movw	r24, r28
    29dc:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <mem_cmp>
    29e0:	89 2b       	or	r24, r25
    29e2:	51 f0       	breq	.+20     	; 0x29f8 <dir_find+0x92>
    29e4:	c7 01       	movw	r24, r14
    29e6:	0e 94 33 14 	call	0x2866	; 0x2866 <dir_next>
    29ea:	88 23       	and	r24, r24
    29ec:	71 f2       	breq	.-100    	; 0x298a <dir_find+0x24>
    29ee:	05 c0       	rjmp	.+10     	; 0x29fa <dir_find+0x94>
    29f0:	89 2f       	mov	r24, r25
    29f2:	03 c0       	rjmp	.+6      	; 0x29fa <dir_find+0x94>
    29f4:	83 e0       	ldi	r24, 0x03	; 3
    29f6:	01 c0       	rjmp	.+2      	; 0x29fa <dir_find+0x94>
    29f8:	8d 2d       	mov	r24, r13
    29fa:	df 91       	pop	r29
    29fc:	cf 91       	pop	r28
    29fe:	1f 91       	pop	r17
    2a00:	0f 91       	pop	r16
    2a02:	ff 90       	pop	r15
    2a04:	ef 90       	pop	r14
    2a06:	df 90       	pop	r13
    2a08:	08 95       	ret

00002a0a <follow_path>:
    2a0a:	0f 93       	push	r16
    2a0c:	1f 93       	push	r17
    2a0e:	cf 93       	push	r28
    2a10:	df 93       	push	r29
    2a12:	00 d0       	rcall	.+0      	; 0x2a14 <follow_path+0xa>
    2a14:	cd b7       	in	r28, 0x3d	; 61
    2a16:	de b7       	in	r29, 0x3e	; 62
    2a18:	8c 01       	movw	r16, r24
    2a1a:	7a 83       	std	Y+2, r23	; 0x02
    2a1c:	69 83       	std	Y+1, r22	; 0x01
    2a1e:	03 c0       	rjmp	.+6      	; 0x2a26 <follow_path+0x1c>
    2a20:	31 96       	adiw	r30, 0x01	; 1
    2a22:	fa 83       	std	Y+2, r31	; 0x02
    2a24:	e9 83       	std	Y+1, r30	; 0x01
    2a26:	e9 81       	ldd	r30, Y+1	; 0x01
    2a28:	fa 81       	ldd	r31, Y+2	; 0x02
    2a2a:	80 81       	ld	r24, Z
    2a2c:	80 32       	cpi	r24, 0x20	; 32
    2a2e:	c1 f3       	breq	.-16     	; 0x2a20 <follow_path+0x16>
    2a30:	8f 32       	cpi	r24, 0x2F	; 47
    2a32:	19 f4       	brne	.+6      	; 0x2a3a <follow_path+0x30>
    2a34:	31 96       	adiw	r30, 0x01	; 1
    2a36:	fa 83       	std	Y+2, r31	; 0x02
    2a38:	e9 83       	std	Y+1, r30	; 0x01
    2a3a:	d8 01       	movw	r26, r16
    2a3c:	14 96       	adiw	r26, 0x04	; 4
    2a3e:	1d 92       	st	X+, r1
    2a40:	1d 92       	st	X+, r1
    2a42:	1d 92       	st	X+, r1
    2a44:	1c 92       	st	X, r1
    2a46:	17 97       	sbiw	r26, 0x07	; 7
    2a48:	e9 81       	ldd	r30, Y+1	; 0x01
    2a4a:	fa 81       	ldd	r31, Y+2	; 0x02
    2a4c:	80 81       	ld	r24, Z
    2a4e:	81 32       	cpi	r24, 0x21	; 33
    2a50:	60 f4       	brcc	.+24     	; 0x2a6a <follow_path+0x60>
    2a52:	c8 01       	movw	r24, r16
    2a54:	0e 94 3c 12 	call	0x2478	; 0x2478 <dir_rewind>
    2a58:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    2a5c:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    2a60:	06 80       	ldd	r0, Z+6	; 0x06
    2a62:	f7 81       	ldd	r31, Z+7	; 0x07
    2a64:	e0 2d       	mov	r30, r0
    2a66:	10 82       	st	Z, r1
    2a68:	42 c0       	rjmp	.+132    	; 0x2aee <follow_path+0xe4>
    2a6a:	be 01       	movw	r22, r28
    2a6c:	6f 5f       	subi	r22, 0xFF	; 255
    2a6e:	7f 4f       	sbci	r23, 0xFF	; 255
    2a70:	c8 01       	movw	r24, r16
    2a72:	0e 94 8a 12 	call	0x2514	; 0x2514 <create_name>
    2a76:	81 11       	cpse	r24, r1
    2a78:	3a c0       	rjmp	.+116    	; 0x2aee <follow_path+0xe4>
    2a7a:	c8 01       	movw	r24, r16
    2a7c:	0e 94 b3 14 	call	0x2966	; 0x2966 <dir_find>
    2a80:	88 23       	and	r24, r24
    2a82:	59 f0       	breq	.+22     	; 0x2a9a <follow_path+0x90>
    2a84:	83 30       	cpi	r24, 0x03	; 3
    2a86:	99 f5       	brne	.+102    	; 0x2aee <follow_path+0xe4>
    2a88:	d8 01       	movw	r26, r16
    2a8a:	12 96       	adiw	r26, 0x02	; 2
    2a8c:	ed 91       	ld	r30, X+
    2a8e:	fc 91       	ld	r31, X
    2a90:	13 97       	sbiw	r26, 0x03	; 3
    2a92:	93 85       	ldd	r25, Z+11	; 0x0b
    2a94:	99 23       	and	r25, r25
    2a96:	41 f1       	breq	.+80     	; 0x2ae8 <follow_path+0xde>
    2a98:	2a c0       	rjmp	.+84     	; 0x2aee <follow_path+0xe4>
    2a9a:	d8 01       	movw	r26, r16
    2a9c:	12 96       	adiw	r26, 0x02	; 2
    2a9e:	ed 91       	ld	r30, X+
    2aa0:	fc 91       	ld	r31, X
    2aa2:	13 97       	sbiw	r26, 0x03	; 3
    2aa4:	93 85       	ldd	r25, Z+11	; 0x0b
    2aa6:	91 11       	cpse	r25, r1
    2aa8:	22 c0       	rjmp	.+68     	; 0x2aee <follow_path+0xe4>
    2aaa:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    2aae:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    2ab2:	06 80       	ldd	r0, Z+6	; 0x06
    2ab4:	f7 81       	ldd	r31, Z+7	; 0x07
    2ab6:	e0 2d       	mov	r30, r0
    2ab8:	83 85       	ldd	r24, Z+11	; 0x0b
    2aba:	84 ff       	sbrs	r24, 4
    2abc:	17 c0       	rjmp	.+46     	; 0x2aec <follow_path+0xe2>
    2abe:	84 89       	ldd	r24, Z+20	; 0x14
    2ac0:	95 89       	ldd	r25, Z+21	; 0x15
    2ac2:	a0 e0       	ldi	r26, 0x00	; 0
    2ac4:	b0 e0       	ldi	r27, 0x00	; 0
    2ac6:	bc 01       	movw	r22, r24
    2ac8:	55 27       	eor	r21, r21
    2aca:	44 27       	eor	r20, r20
    2acc:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ace:	93 8d       	ldd	r25, Z+27	; 0x1b
    2ad0:	a0 e0       	ldi	r26, 0x00	; 0
    2ad2:	b0 e0       	ldi	r27, 0x00	; 0
    2ad4:	84 2b       	or	r24, r20
    2ad6:	95 2b       	or	r25, r21
    2ad8:	a6 2b       	or	r26, r22
    2ada:	b7 2b       	or	r27, r23
    2adc:	f8 01       	movw	r30, r16
    2ade:	84 83       	std	Z+4, r24	; 0x04
    2ae0:	95 83       	std	Z+5, r25	; 0x05
    2ae2:	a6 83       	std	Z+6, r26	; 0x06
    2ae4:	b7 83       	std	Z+7, r27	; 0x07
    2ae6:	c1 cf       	rjmp	.-126    	; 0x2a6a <follow_path+0x60>
    2ae8:	84 e0       	ldi	r24, 0x04	; 4
    2aea:	01 c0       	rjmp	.+2      	; 0x2aee <follow_path+0xe4>
    2aec:	84 e0       	ldi	r24, 0x04	; 4
    2aee:	0f 90       	pop	r0
    2af0:	0f 90       	pop	r0
    2af2:	df 91       	pop	r29
    2af4:	cf 91       	pop	r28
    2af6:	1f 91       	pop	r17
    2af8:	0f 91       	pop	r16
    2afa:	08 95       	ret

00002afc <pf_mount>:
    2afc:	4f 92       	push	r4
    2afe:	5f 92       	push	r5
    2b00:	6f 92       	push	r6
    2b02:	7f 92       	push	r7
    2b04:	8f 92       	push	r8
    2b06:	9f 92       	push	r9
    2b08:	af 92       	push	r10
    2b0a:	bf 92       	push	r11
    2b0c:	df 92       	push	r13
    2b0e:	ef 92       	push	r14
    2b10:	ff 92       	push	r15
    2b12:	0f 93       	push	r16
    2b14:	1f 93       	push	r17
    2b16:	cf 93       	push	r28
    2b18:	df 93       	push	r29
    2b1a:	cd b7       	in	r28, 0x3d	; 61
    2b1c:	de b7       	in	r29, 0x3e	; 62
    2b1e:	a8 97       	sbiw	r28, 0x28	; 40
    2b20:	0f b6       	in	r0, 0x3f	; 63
    2b22:	f8 94       	cli
    2b24:	de bf       	out	0x3e, r29	; 62
    2b26:	0f be       	out	0x3f, r0	; 63
    2b28:	cd bf       	out	0x3d, r28	; 61
    2b2a:	10 92 9b 06 	sts	0x069B, r1	; 0x80069b <FatFs+0x1>
    2b2e:	10 92 9a 06 	sts	0x069A, r1	; 0x80069a <FatFs>
    2b32:	00 97       	sbiw	r24, 0x00	; 0
    2b34:	09 f4       	brne	.+2      	; 0x2b38 <pf_mount+0x3c>
    2b36:	fb c0       	rjmp	.+502    	; 0x2d2e <pf_mount+0x232>
    2b38:	7c 01       	movw	r14, r24
    2b3a:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <disk_initialize>
    2b3e:	80 fd       	sbrc	r24, 0
    2b40:	f8 c0       	rjmp	.+496    	; 0x2d32 <pf_mount+0x236>
    2b42:	40 e0       	ldi	r20, 0x00	; 0
    2b44:	50 e0       	ldi	r21, 0x00	; 0
    2b46:	ba 01       	movw	r22, r20
    2b48:	ce 01       	movw	r24, r28
    2b4a:	01 96       	adiw	r24, 0x01	; 1
    2b4c:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <check_fs>
    2b50:	d8 2e       	mov	r13, r24
    2b52:	41 e0       	ldi	r20, 0x01	; 1
    2b54:	84 13       	cpse	r24, r20
    2b56:	1c c0       	rjmp	.+56     	; 0x2b90 <pf_mount+0x94>
    2b58:	00 e1       	ldi	r16, 0x10	; 16
    2b5a:	10 e0       	ldi	r17, 0x00	; 0
    2b5c:	2e eb       	ldi	r18, 0xBE	; 190
    2b5e:	31 e0       	ldi	r19, 0x01	; 1
    2b60:	40 e0       	ldi	r20, 0x00	; 0
    2b62:	50 e0       	ldi	r21, 0x00	; 0
    2b64:	ba 01       	movw	r22, r20
    2b66:	ce 01       	movw	r24, r28
    2b68:	01 96       	adiw	r24, 0x01	; 1
    2b6a:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    2b6e:	81 11       	cpse	r24, r1
    2b70:	13 c0       	rjmp	.+38     	; 0x2b98 <pf_mount+0x9c>
    2b72:	8d 81       	ldd	r24, Y+5	; 0x05
    2b74:	88 23       	and	r24, r24
    2b76:	c1 f0       	breq	.+48     	; 0x2ba8 <pf_mount+0xac>
    2b78:	89 84       	ldd	r8, Y+9	; 0x09
    2b7a:	9a 84       	ldd	r9, Y+10	; 0x0a
    2b7c:	ab 84       	ldd	r10, Y+11	; 0x0b
    2b7e:	bc 84       	ldd	r11, Y+12	; 0x0c
    2b80:	b5 01       	movw	r22, r10
    2b82:	a4 01       	movw	r20, r8
    2b84:	ce 01       	movw	r24, r28
    2b86:	01 96       	adiw	r24, 0x01	; 1
    2b88:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <check_fs>
    2b8c:	d8 2e       	mov	r13, r24
    2b8e:	0f c0       	rjmp	.+30     	; 0x2bae <pf_mount+0xb2>
    2b90:	81 2c       	mov	r8, r1
    2b92:	91 2c       	mov	r9, r1
    2b94:	54 01       	movw	r10, r8
    2b96:	0b c0       	rjmp	.+22     	; 0x2bae <pf_mount+0xb2>
    2b98:	81 2c       	mov	r8, r1
    2b9a:	91 2c       	mov	r9, r1
    2b9c:	54 01       	movw	r10, r8
    2b9e:	0f 2e       	mov	r0, r31
    2ba0:	f3 e0       	ldi	r31, 0x03	; 3
    2ba2:	df 2e       	mov	r13, r31
    2ba4:	f0 2d       	mov	r31, r0
    2ba6:	03 c0       	rjmp	.+6      	; 0x2bae <pf_mount+0xb2>
    2ba8:	81 2c       	mov	r8, r1
    2baa:	91 2c       	mov	r9, r1
    2bac:	54 01       	movw	r10, r8
    2bae:	53 e0       	ldi	r21, 0x03	; 3
    2bb0:	d5 16       	cp	r13, r21
    2bb2:	09 f4       	brne	.+2      	; 0x2bb6 <pf_mount+0xba>
    2bb4:	c0 c0       	rjmp	.+384    	; 0x2d36 <pf_mount+0x23a>
    2bb6:	d1 10       	cpse	r13, r1
    2bb8:	c0 c0       	rjmp	.+384    	; 0x2d3a <pf_mount+0x23e>
    2bba:	04 e2       	ldi	r16, 0x24	; 36
    2bbc:	10 e0       	ldi	r17, 0x00	; 0
    2bbe:	2d e0       	ldi	r18, 0x0D	; 13
    2bc0:	30 e0       	ldi	r19, 0x00	; 0
    2bc2:	b5 01       	movw	r22, r10
    2bc4:	a4 01       	movw	r20, r8
    2bc6:	ce 01       	movw	r24, r28
    2bc8:	01 96       	adiw	r24, 0x01	; 1
    2bca:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    2bce:	81 11       	cpse	r24, r1
    2bd0:	b6 c0       	rjmp	.+364    	; 0x2d3e <pf_mount+0x242>
    2bd2:	2a 85       	ldd	r18, Y+10	; 0x0a
    2bd4:	3b 85       	ldd	r19, Y+11	; 0x0b
    2bd6:	40 e0       	ldi	r20, 0x00	; 0
    2bd8:	50 e0       	ldi	r21, 0x00	; 0
    2bda:	21 15       	cp	r18, r1
    2bdc:	31 05       	cpc	r19, r1
    2bde:	41 05       	cpc	r20, r1
    2be0:	51 05       	cpc	r21, r1
    2be2:	21 f4       	brne	.+8      	; 0x2bec <pf_mount+0xf0>
    2be4:	28 8d       	ldd	r18, Y+24	; 0x18
    2be6:	39 8d       	ldd	r19, Y+25	; 0x19
    2be8:	4a 8d       	ldd	r20, Y+26	; 0x1a
    2bea:	5b 8d       	ldd	r21, Y+27	; 0x1b
    2bec:	ac 81       	ldd	r26, Y+4	; 0x04
    2bee:	b0 e0       	ldi	r27, 0x00	; 0
    2bf0:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
    2bf4:	6d a3       	std	Y+37, r22	; 0x25
    2bf6:	7e a3       	std	Y+38, r23	; 0x26
    2bf8:	8f a3       	std	Y+39, r24	; 0x27
    2bfa:	98 a7       	std	Y+40, r25	; 0x28
    2bfc:	8a 81       	ldd	r24, Y+2	; 0x02
    2bfe:	9b 81       	ldd	r25, Y+3	; 0x03
    2c00:	88 0e       	add	r8, r24
    2c02:	99 1e       	adc	r9, r25
    2c04:	a1 1c       	adc	r10, r1
    2c06:	b1 1c       	adc	r11, r1
    2c08:	d7 01       	movw	r26, r14
    2c0a:	1c 96       	adiw	r26, 0x0c	; 12
    2c0c:	8d 92       	st	X+, r8
    2c0e:	9d 92       	st	X+, r9
    2c10:	ad 92       	st	X+, r10
    2c12:	bc 92       	st	X, r11
    2c14:	1f 97       	sbiw	r26, 0x0f	; 15
    2c16:	e9 81       	ldd	r30, Y+1	; 0x01
    2c18:	11 96       	adiw	r26, 0x01	; 1
    2c1a:	ec 93       	st	X, r30
    2c1c:	11 97       	sbiw	r26, 0x01	; 1
    2c1e:	8d 81       	ldd	r24, Y+5	; 0x05
    2c20:	9e 81       	ldd	r25, Y+6	; 0x06
    2c22:	15 96       	adiw	r26, 0x05	; 5
    2c24:	9c 93       	st	X, r25
    2c26:	8e 93       	st	-X, r24
    2c28:	14 97       	sbiw	r26, 0x04	; 4
    2c2a:	0f 81       	ldd	r16, Y+7	; 0x07
    2c2c:	18 85       	ldd	r17, Y+8	; 0x08
    2c2e:	20 e0       	ldi	r18, 0x00	; 0
    2c30:	30 e0       	ldi	r19, 0x00	; 0
    2c32:	01 15       	cp	r16, r1
    2c34:	11 05       	cpc	r17, r1
    2c36:	21 05       	cpc	r18, r1
    2c38:	31 05       	cpc	r19, r1
    2c3a:	21 f4       	brne	.+8      	; 0x2c44 <pf_mount+0x148>
    2c3c:	0c 89       	ldd	r16, Y+20	; 0x14
    2c3e:	1d 89       	ldd	r17, Y+21	; 0x15
    2c40:	2e 89       	ldd	r18, Y+22	; 0x16
    2c42:	3f 89       	ldd	r19, Y+23	; 0x17
    2c44:	4a 81       	ldd	r20, Y+2	; 0x02
    2c46:	5b 81       	ldd	r21, Y+3	; 0x03
    2c48:	04 1b       	sub	r16, r20
    2c4a:	15 0b       	sbc	r17, r21
    2c4c:	21 09       	sbc	r18, r1
    2c4e:	31 09       	sbc	r19, r1
    2c50:	4d a1       	ldd	r20, Y+37	; 0x25
    2c52:	5e a1       	ldd	r21, Y+38	; 0x26
    2c54:	6f a1       	ldd	r22, Y+39	; 0x27
    2c56:	78 a5       	ldd	r23, Y+40	; 0x28
    2c58:	04 1b       	sub	r16, r20
    2c5a:	15 0b       	sbc	r17, r21
    2c5c:	26 0b       	sbc	r18, r22
    2c5e:	37 0b       	sbc	r19, r23
    2c60:	92 95       	swap	r25
    2c62:	82 95       	swap	r24
    2c64:	8f 70       	andi	r24, 0x0F	; 15
    2c66:	89 27       	eor	r24, r25
    2c68:	9f 70       	andi	r25, 0x0F	; 15
    2c6a:	89 27       	eor	r24, r25
    2c6c:	2c 01       	movw	r4, r24
    2c6e:	61 2c       	mov	r6, r1
    2c70:	71 2c       	mov	r7, r1
    2c72:	c9 01       	movw	r24, r18
    2c74:	b8 01       	movw	r22, r16
    2c76:	64 19       	sub	r22, r4
    2c78:	75 09       	sbc	r23, r5
    2c7a:	86 09       	sbc	r24, r6
    2c7c:	97 09       	sbc	r25, r7
    2c7e:	2e 2f       	mov	r18, r30
    2c80:	30 e0       	ldi	r19, 0x00	; 0
    2c82:	40 e0       	ldi	r20, 0x00	; 0
    2c84:	50 e0       	ldi	r21, 0x00	; 0
    2c86:	0e 94 b2 2a 	call	0x5564	; 0x5564 <__udivmodsi4>
    2c8a:	ba 01       	movw	r22, r20
    2c8c:	a9 01       	movw	r20, r18
    2c8e:	4e 5f       	subi	r20, 0xFE	; 254
    2c90:	5f 4f       	sbci	r21, 0xFF	; 255
    2c92:	6f 4f       	sbci	r22, 0xFF	; 255
    2c94:	7f 4f       	sbci	r23, 0xFF	; 255
    2c96:	d7 01       	movw	r26, r14
    2c98:	18 96       	adiw	r26, 0x08	; 8
    2c9a:	4d 93       	st	X+, r20
    2c9c:	5d 93       	st	X+, r21
    2c9e:	6d 93       	st	X+, r22
    2ca0:	7c 93       	st	X, r23
    2ca2:	1b 97       	sbiw	r26, 0x0b	; 11
    2ca4:	47 3f       	cpi	r20, 0xF7	; 247
    2ca6:	bf e0       	ldi	r27, 0x0F	; 15
    2ca8:	5b 07       	cpc	r21, r27
    2caa:	61 05       	cpc	r22, r1
    2cac:	71 05       	cpc	r23, r1
    2cae:	10 f4       	brcc	.+4      	; 0x2cb4 <pf_mount+0x1b8>
    2cb0:	81 e0       	ldi	r24, 0x01	; 1
    2cb2:	01 c0       	rjmp	.+2      	; 0x2cb6 <pf_mount+0x1ba>
    2cb4:	82 e0       	ldi	r24, 0x02	; 2
    2cb6:	47 3f       	cpi	r20, 0xF7	; 247
    2cb8:	5f 4f       	sbci	r21, 0xFF	; 255
    2cba:	61 05       	cpc	r22, r1
    2cbc:	71 05       	cpc	r23, r1
    2cbe:	08 f0       	brcs	.+2      	; 0x2cc2 <pf_mount+0x1c6>
    2cc0:	83 e0       	ldi	r24, 0x03	; 3
    2cc2:	d7 01       	movw	r26, r14
    2cc4:	8c 93       	st	X, r24
    2cc6:	83 30       	cpi	r24, 0x03	; 3
    2cc8:	51 f4       	brne	.+20     	; 0x2cde <pf_mount+0x1e2>
    2cca:	88 a1       	ldd	r24, Y+32	; 0x20
    2ccc:	99 a1       	ldd	r25, Y+33	; 0x21
    2cce:	aa a1       	ldd	r26, Y+34	; 0x22
    2cd0:	bb a1       	ldd	r27, Y+35	; 0x23
    2cd2:	f7 01       	movw	r30, r14
    2cd4:	80 8b       	std	Z+16, r24	; 0x10
    2cd6:	91 8b       	std	Z+17, r25	; 0x11
    2cd8:	a2 8b       	std	Z+18, r26	; 0x12
    2cda:	b3 8b       	std	Z+19, r27	; 0x13
    2cdc:	0d c0       	rjmp	.+26     	; 0x2cf8 <pf_mount+0x1fc>
    2cde:	8d a1       	ldd	r24, Y+37	; 0x25
    2ce0:	9e a1       	ldd	r25, Y+38	; 0x26
    2ce2:	af a1       	ldd	r26, Y+39	; 0x27
    2ce4:	b8 a5       	ldd	r27, Y+40	; 0x28
    2ce6:	88 0d       	add	r24, r8
    2ce8:	99 1d       	adc	r25, r9
    2cea:	aa 1d       	adc	r26, r10
    2cec:	bb 1d       	adc	r27, r11
    2cee:	f7 01       	movw	r30, r14
    2cf0:	80 8b       	std	Z+16, r24	; 0x10
    2cf2:	91 8b       	std	Z+17, r25	; 0x11
    2cf4:	a2 8b       	std	Z+18, r26	; 0x12
    2cf6:	b3 8b       	std	Z+19, r27	; 0x13
    2cf8:	4d a1       	ldd	r20, Y+37	; 0x25
    2cfa:	5e a1       	ldd	r21, Y+38	; 0x26
    2cfc:	6f a1       	ldd	r22, Y+39	; 0x27
    2cfe:	78 a5       	ldd	r23, Y+40	; 0x28
    2d00:	84 0e       	add	r8, r20
    2d02:	95 1e       	adc	r9, r21
    2d04:	a6 1e       	adc	r10, r22
    2d06:	b7 1e       	adc	r11, r23
    2d08:	84 0c       	add	r8, r4
    2d0a:	95 1c       	adc	r9, r5
    2d0c:	a6 1c       	adc	r10, r6
    2d0e:	b7 1c       	adc	r11, r7
    2d10:	d7 01       	movw	r26, r14
    2d12:	54 96       	adiw	r26, 0x14	; 20
    2d14:	8d 92       	st	X+, r8
    2d16:	9d 92       	st	X+, r9
    2d18:	ad 92       	st	X+, r10
    2d1a:	bc 92       	st	X, r11
    2d1c:	57 97       	sbiw	r26, 0x17	; 23
    2d1e:	12 96       	adiw	r26, 0x02	; 2
    2d20:	1c 92       	st	X, r1
    2d22:	f0 92 9b 06 	sts	0x069B, r15	; 0x80069b <FatFs+0x1>
    2d26:	e0 92 9a 06 	sts	0x069A, r14	; 0x80069a <FatFs>
    2d2a:	80 e0       	ldi	r24, 0x00	; 0
    2d2c:	09 c0       	rjmp	.+18     	; 0x2d40 <pf_mount+0x244>
    2d2e:	80 e0       	ldi	r24, 0x00	; 0
    2d30:	07 c0       	rjmp	.+14     	; 0x2d40 <pf_mount+0x244>
    2d32:	82 e0       	ldi	r24, 0x02	; 2
    2d34:	05 c0       	rjmp	.+10     	; 0x2d40 <pf_mount+0x244>
    2d36:	81 e0       	ldi	r24, 0x01	; 1
    2d38:	03 c0       	rjmp	.+6      	; 0x2d40 <pf_mount+0x244>
    2d3a:	87 e0       	ldi	r24, 0x07	; 7
    2d3c:	01 c0       	rjmp	.+2      	; 0x2d40 <pf_mount+0x244>
    2d3e:	81 e0       	ldi	r24, 0x01	; 1
    2d40:	a8 96       	adiw	r28, 0x28	; 40
    2d42:	0f b6       	in	r0, 0x3f	; 63
    2d44:	f8 94       	cli
    2d46:	de bf       	out	0x3e, r29	; 62
    2d48:	0f be       	out	0x3f, r0	; 63
    2d4a:	cd bf       	out	0x3d, r28	; 61
    2d4c:	df 91       	pop	r29
    2d4e:	cf 91       	pop	r28
    2d50:	1f 91       	pop	r17
    2d52:	0f 91       	pop	r16
    2d54:	ff 90       	pop	r15
    2d56:	ef 90       	pop	r14
    2d58:	df 90       	pop	r13
    2d5a:	bf 90       	pop	r11
    2d5c:	af 90       	pop	r10
    2d5e:	9f 90       	pop	r9
    2d60:	8f 90       	pop	r8
    2d62:	7f 90       	pop	r7
    2d64:	6f 90       	pop	r6
    2d66:	5f 90       	pop	r5
    2d68:	4f 90       	pop	r4
    2d6a:	08 95       	ret

00002d6c <pf_open>:
    2d6c:	0f 93       	push	r16
    2d6e:	1f 93       	push	r17
    2d70:	cf 93       	push	r28
    2d72:	df 93       	push	r29
    2d74:	cd b7       	in	r28, 0x3d	; 61
    2d76:	de b7       	in	r29, 0x3e	; 62
    2d78:	ec 97       	sbiw	r28, 0x3c	; 60
    2d7a:	0f b6       	in	r0, 0x3f	; 63
    2d7c:	f8 94       	cli
    2d7e:	de bf       	out	0x3e, r29	; 62
    2d80:	0f be       	out	0x3f, r0	; 63
    2d82:	cd bf       	out	0x3d, r28	; 61
    2d84:	00 91 9a 06 	lds	r16, 0x069A	; 0x80069a <FatFs>
    2d88:	10 91 9b 06 	lds	r17, 0x069B	; 0x80069b <FatFs+0x1>
    2d8c:	01 15       	cp	r16, r1
    2d8e:	11 05       	cpc	r17, r1
    2d90:	c9 f1       	breq	.+114    	; 0x2e04 <pf_open+0x98>
    2d92:	bc 01       	movw	r22, r24
    2d94:	f8 01       	movw	r30, r16
    2d96:	12 82       	std	Z+2, r1	; 0x02
    2d98:	ce 01       	movw	r24, r28
    2d9a:	4d 96       	adiw	r24, 0x1d	; 29
    2d9c:	97 83       	std	Z+7, r25	; 0x07
    2d9e:	86 83       	std	Z+6, r24	; 0x06
    2da0:	0c 97       	sbiw	r24, 0x0c	; 12
    2da2:	9c 83       	std	Y+4, r25	; 0x04
    2da4:	8b 83       	std	Y+3, r24	; 0x03
    2da6:	40 97       	sbiw	r24, 0x10	; 16
    2da8:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <follow_path>
    2dac:	81 11       	cpse	r24, r1
    2dae:	2f c0       	rjmp	.+94     	; 0x2e0e <pf_open+0xa2>
    2db0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2db2:	88 23       	and	r24, r24
    2db4:	49 f1       	breq	.+82     	; 0x2e08 <pf_open+0x9c>
    2db6:	88 a5       	ldd	r24, Y+40	; 0x28
    2db8:	84 fd       	sbrc	r24, 4
    2dba:	28 c0       	rjmp	.+80     	; 0x2e0c <pf_open+0xa0>
    2dbc:	89 a9       	ldd	r24, Y+49	; 0x31
    2dbe:	9a a9       	ldd	r25, Y+50	; 0x32
    2dc0:	a0 e0       	ldi	r26, 0x00	; 0
    2dc2:	b0 e0       	ldi	r27, 0x00	; 0
    2dc4:	bc 01       	movw	r22, r24
    2dc6:	55 27       	eor	r21, r21
    2dc8:	44 27       	eor	r20, r20
    2dca:	8f a9       	ldd	r24, Y+55	; 0x37
    2dcc:	98 ad       	ldd	r25, Y+56	; 0x38
    2dce:	a0 e0       	ldi	r26, 0x00	; 0
    2dd0:	b0 e0       	ldi	r27, 0x00	; 0
    2dd2:	84 2b       	or	r24, r20
    2dd4:	95 2b       	or	r25, r21
    2dd6:	a6 2b       	or	r26, r22
    2dd8:	b7 2b       	or	r27, r23
    2dda:	f8 01       	movw	r30, r16
    2ddc:	80 a3       	std	Z+32, r24	; 0x20
    2dde:	91 a3       	std	Z+33, r25	; 0x21
    2de0:	a2 a3       	std	Z+34, r26	; 0x22
    2de2:	b3 a3       	std	Z+35, r27	; 0x23
    2de4:	89 ad       	ldd	r24, Y+57	; 0x39
    2de6:	9a ad       	ldd	r25, Y+58	; 0x3a
    2de8:	ab ad       	ldd	r26, Y+59	; 0x3b
    2dea:	bc ad       	ldd	r27, Y+60	; 0x3c
    2dec:	84 8f       	std	Z+28, r24	; 0x1c
    2dee:	95 8f       	std	Z+29, r25	; 0x1d
    2df0:	a6 8f       	std	Z+30, r26	; 0x1e
    2df2:	b7 8f       	std	Z+31, r27	; 0x1f
    2df4:	10 8e       	std	Z+24, r1	; 0x18
    2df6:	11 8e       	std	Z+25, r1	; 0x19
    2df8:	12 8e       	std	Z+26, r1	; 0x1a
    2dfa:	13 8e       	std	Z+27, r1	; 0x1b
    2dfc:	81 e0       	ldi	r24, 0x01	; 1
    2dfe:	82 83       	std	Z+2, r24	; 0x02
    2e00:	80 e0       	ldi	r24, 0x00	; 0
    2e02:	05 c0       	rjmp	.+10     	; 0x2e0e <pf_open+0xa2>
    2e04:	86 e0       	ldi	r24, 0x06	; 6
    2e06:	03 c0       	rjmp	.+6      	; 0x2e0e <pf_open+0xa2>
    2e08:	83 e0       	ldi	r24, 0x03	; 3
    2e0a:	01 c0       	rjmp	.+2      	; 0x2e0e <pf_open+0xa2>
    2e0c:	83 e0       	ldi	r24, 0x03	; 3
    2e0e:	ec 96       	adiw	r28, 0x3c	; 60
    2e10:	0f b6       	in	r0, 0x3f	; 63
    2e12:	f8 94       	cli
    2e14:	de bf       	out	0x3e, r29	; 62
    2e16:	0f be       	out	0x3f, r0	; 63
    2e18:	cd bf       	out	0x3d, r28	; 61
    2e1a:	df 91       	pop	r29
    2e1c:	cf 91       	pop	r28
    2e1e:	1f 91       	pop	r17
    2e20:	0f 91       	pop	r16
    2e22:	08 95       	ret

00002e24 <pf_read>:
    2e24:	2f 92       	push	r2
    2e26:	3f 92       	push	r3
    2e28:	4f 92       	push	r4
    2e2a:	5f 92       	push	r5
    2e2c:	6f 92       	push	r6
    2e2e:	7f 92       	push	r7
    2e30:	8f 92       	push	r8
    2e32:	9f 92       	push	r9
    2e34:	af 92       	push	r10
    2e36:	bf 92       	push	r11
    2e38:	cf 92       	push	r12
    2e3a:	df 92       	push	r13
    2e3c:	ef 92       	push	r14
    2e3e:	ff 92       	push	r15
    2e40:	0f 93       	push	r16
    2e42:	1f 93       	push	r17
    2e44:	cf 93       	push	r28
    2e46:	df 93       	push	r29
    2e48:	3c 01       	movw	r6, r24
    2e4a:	6b 01       	movw	r12, r22
    2e4c:	4a 01       	movw	r8, r20
    2e4e:	e0 90 9a 06 	lds	r14, 0x069A	; 0x80069a <FatFs>
    2e52:	f0 90 9b 06 	lds	r15, 0x069B	; 0x80069b <FatFs+0x1>
    2e56:	fa 01       	movw	r30, r20
    2e58:	11 82       	std	Z+1, r1	; 0x01
    2e5a:	10 82       	st	Z, r1
    2e5c:	e1 14       	cp	r14, r1
    2e5e:	f1 04       	cpc	r15, r1
    2e60:	09 f4       	brne	.+2      	; 0x2e64 <pf_read+0x40>
    2e62:	bb c0       	rjmp	.+374    	; 0x2fda <pf_read+0x1b6>
    2e64:	f7 01       	movw	r30, r14
    2e66:	82 81       	ldd	r24, Z+2	; 0x02
    2e68:	80 ff       	sbrs	r24, 0
    2e6a:	b9 c0       	rjmp	.+370    	; 0x2fde <pf_read+0x1ba>
    2e6c:	84 8d       	ldd	r24, Z+28	; 0x1c
    2e6e:	95 8d       	ldd	r25, Z+29	; 0x1d
    2e70:	a6 8d       	ldd	r26, Z+30	; 0x1e
    2e72:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2e74:	40 8d       	ldd	r20, Z+24	; 0x18
    2e76:	51 8d       	ldd	r21, Z+25	; 0x19
    2e78:	62 8d       	ldd	r22, Z+26	; 0x1a
    2e7a:	73 8d       	ldd	r23, Z+27	; 0x1b
    2e7c:	84 1b       	sub	r24, r20
    2e7e:	95 0b       	sbc	r25, r21
    2e80:	a6 0b       	sbc	r26, r22
    2e82:	b7 0b       	sbc	r27, r23
    2e84:	a6 01       	movw	r20, r12
    2e86:	60 e0       	ldi	r22, 0x00	; 0
    2e88:	70 e0       	ldi	r23, 0x00	; 0
    2e8a:	84 17       	cp	r24, r20
    2e8c:	95 07       	cpc	r25, r21
    2e8e:	a6 07       	cpc	r26, r22
    2e90:	b7 07       	cpc	r27, r23
    2e92:	08 f4       	brcc	.+2      	; 0x2e96 <pf_read+0x72>
    2e94:	6c 01       	movw	r12, r24
    2e96:	53 01       	movw	r10, r6
    2e98:	96 c0       	rjmp	.+300    	; 0x2fc6 <pf_read+0x1a2>
    2e9a:	f7 01       	movw	r30, r14
    2e9c:	20 8c       	ldd	r2, Z+24	; 0x18
    2e9e:	31 8c       	ldd	r3, Z+25	; 0x19
    2ea0:	42 8c       	ldd	r4, Z+26	; 0x1a
    2ea2:	53 8c       	ldd	r5, Z+27	; 0x1b
    2ea4:	d2 01       	movw	r26, r4
    2ea6:	c1 01       	movw	r24, r2
    2ea8:	91 70       	andi	r25, 0x01	; 1
    2eaa:	aa 27       	eor	r26, r26
    2eac:	bb 27       	eor	r27, r27
    2eae:	89 2b       	or	r24, r25
    2eb0:	8a 2b       	or	r24, r26
    2eb2:	8b 2b       	or	r24, r27
    2eb4:	09 f0       	breq	.+2      	; 0x2eb8 <pf_read+0x94>
    2eb6:	4e c0       	rjmp	.+156    	; 0x2f54 <pf_read+0x130>
    2eb8:	21 81       	ldd	r18, Z+1	; 0x01
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	40 e0       	ldi	r20, 0x00	; 0
    2ebe:	50 e0       	ldi	r21, 0x00	; 0
    2ec0:	c2 01       	movw	r24, r4
    2ec2:	b1 01       	movw	r22, r2
    2ec4:	05 2e       	mov	r0, r21
    2ec6:	59 e0       	ldi	r21, 0x09	; 9
    2ec8:	96 95       	lsr	r25
    2eca:	87 95       	ror	r24
    2ecc:	77 95       	ror	r23
    2ece:	67 95       	ror	r22
    2ed0:	5a 95       	dec	r21
    2ed2:	d1 f7       	brne	.-12     	; 0x2ec8 <pf_read+0xa4>
    2ed4:	50 2d       	mov	r21, r0
    2ed6:	0e 94 b2 2a 	call	0x5564	; 0x5564 <__udivmodsi4>
    2eda:	67 2b       	or	r22, r23
    2edc:	68 2b       	or	r22, r24
    2ede:	69 2b       	or	r22, r25
    2ee0:	e9 f4       	brne	.+58     	; 0x2f1c <pf_read+0xf8>
    2ee2:	23 28       	or	r2, r3
    2ee4:	24 28       	or	r2, r4
    2ee6:	25 28       	or	r2, r5
    2ee8:	31 f4       	brne	.+12     	; 0x2ef6 <pf_read+0xd2>
    2eea:	f7 01       	movw	r30, r14
    2eec:	60 a1       	ldd	r22, Z+32	; 0x20
    2eee:	71 a1       	ldd	r23, Z+33	; 0x21
    2ef0:	82 a1       	ldd	r24, Z+34	; 0x22
    2ef2:	93 a1       	ldd	r25, Z+35	; 0x23
    2ef4:	07 c0       	rjmp	.+14     	; 0x2f04 <pf_read+0xe0>
    2ef6:	f7 01       	movw	r30, r14
    2ef8:	64 a1       	ldd	r22, Z+36	; 0x24
    2efa:	75 a1       	ldd	r23, Z+37	; 0x25
    2efc:	86 a1       	ldd	r24, Z+38	; 0x26
    2efe:	97 a1       	ldd	r25, Z+39	; 0x27
    2f00:	0e 94 1a 13 	call	0x2634	; 0x2634 <get_fat>
    2f04:	62 30       	cpi	r22, 0x02	; 2
    2f06:	71 05       	cpc	r23, r1
    2f08:	81 05       	cpc	r24, r1
    2f0a:	91 05       	cpc	r25, r1
    2f0c:	08 f4       	brcc	.+2      	; 0x2f10 <pf_read+0xec>
    2f0e:	61 c0       	rjmp	.+194    	; 0x2fd2 <pf_read+0x1ae>
    2f10:	f7 01       	movw	r30, r14
    2f12:	64 a3       	std	Z+36, r22	; 0x24
    2f14:	75 a3       	std	Z+37, r23	; 0x25
    2f16:	86 a3       	std	Z+38, r24	; 0x26
    2f18:	97 a3       	std	Z+39, r25	; 0x27
    2f1a:	13 82       	std	Z+3, r1	; 0x03
    2f1c:	f7 01       	movw	r30, r14
    2f1e:	64 a1       	ldd	r22, Z+36	; 0x24
    2f20:	75 a1       	ldd	r23, Z+37	; 0x25
    2f22:	86 a1       	ldd	r24, Z+38	; 0x26
    2f24:	97 a1       	ldd	r25, Z+39	; 0x27
    2f26:	0e 94 11 12 	call	0x2422	; 0x2422 <clust2sect>
    2f2a:	61 15       	cp	r22, r1
    2f2c:	71 05       	cpc	r23, r1
    2f2e:	81 05       	cpc	r24, r1
    2f30:	91 05       	cpc	r25, r1
    2f32:	09 f4       	brne	.+2      	; 0x2f36 <pf_read+0x112>
    2f34:	4e c0       	rjmp	.+156    	; 0x2fd2 <pf_read+0x1ae>
    2f36:	f7 01       	movw	r30, r14
    2f38:	23 81       	ldd	r18, Z+3	; 0x03
    2f3a:	31 e0       	ldi	r19, 0x01	; 1
    2f3c:	32 0f       	add	r19, r18
    2f3e:	33 83       	std	Z+3, r19	; 0x03
    2f40:	dc 01       	movw	r26, r24
    2f42:	cb 01       	movw	r24, r22
    2f44:	82 0f       	add	r24, r18
    2f46:	91 1d       	adc	r25, r1
    2f48:	a1 1d       	adc	r26, r1
    2f4a:	b1 1d       	adc	r27, r1
    2f4c:	80 a7       	std	Z+40, r24	; 0x28
    2f4e:	91 a7       	std	Z+41, r25	; 0x29
    2f50:	a2 a7       	std	Z+42, r26	; 0x2a
    2f52:	b3 a7       	std	Z+43, r27	; 0x2b
    2f54:	f7 01       	movw	r30, r14
    2f56:	80 8d       	ldd	r24, Z+24	; 0x18
    2f58:	91 8d       	ldd	r25, Z+25	; 0x19
    2f5a:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2f5c:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2f5e:	9c 01       	movw	r18, r24
    2f60:	31 70       	andi	r19, 0x01	; 1
    2f62:	c0 e0       	ldi	r28, 0x00	; 0
    2f64:	d2 e0       	ldi	r29, 0x02	; 2
    2f66:	c2 1b       	sub	r28, r18
    2f68:	d3 0b       	sbc	r29, r19
    2f6a:	cc 16       	cp	r12, r28
    2f6c:	dd 06       	cpc	r13, r29
    2f6e:	08 f4       	brcc	.+2      	; 0x2f72 <pf_read+0x14e>
    2f70:	e6 01       	movw	r28, r12
    2f72:	f7 01       	movw	r30, r14
    2f74:	40 a5       	ldd	r20, Z+40	; 0x28
    2f76:	51 a5       	ldd	r21, Z+41	; 0x29
    2f78:	62 a5       	ldd	r22, Z+42	; 0x2a
    2f7a:	73 a5       	ldd	r23, Z+43	; 0x2b
    2f7c:	61 14       	cp	r6, r1
    2f7e:	71 04       	cpc	r7, r1
    2f80:	19 f4       	brne	.+6      	; 0x2f88 <pf_read+0x164>
    2f82:	80 e0       	ldi	r24, 0x00	; 0
    2f84:	90 e0       	ldi	r25, 0x00	; 0
    2f86:	02 c0       	rjmp	.+4      	; 0x2f8c <pf_read+0x168>
    2f88:	8a 2d       	mov	r24, r10
    2f8a:	9b 2d       	mov	r25, r11
    2f8c:	8e 01       	movw	r16, r28
    2f8e:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <disk_readp>
    2f92:	81 11       	cpse	r24, r1
    2f94:	1e c0       	rjmp	.+60     	; 0x2fd2 <pf_read+0x1ae>
    2f96:	f7 01       	movw	r30, r14
    2f98:	80 8d       	ldd	r24, Z+24	; 0x18
    2f9a:	91 8d       	ldd	r25, Z+25	; 0x19
    2f9c:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2f9e:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2fa0:	8c 0f       	add	r24, r28
    2fa2:	9d 1f       	adc	r25, r29
    2fa4:	a1 1d       	adc	r26, r1
    2fa6:	b1 1d       	adc	r27, r1
    2fa8:	80 8f       	std	Z+24, r24	; 0x18
    2faa:	91 8f       	std	Z+25, r25	; 0x19
    2fac:	a2 8f       	std	Z+26, r26	; 0x1a
    2fae:	b3 8f       	std	Z+27, r27	; 0x1b
    2fb0:	ac 0e       	add	r10, r28
    2fb2:	bd 1e       	adc	r11, r29
    2fb4:	cc 1a       	sub	r12, r28
    2fb6:	dd 0a       	sbc	r13, r29
    2fb8:	f4 01       	movw	r30, r8
    2fba:	80 81       	ld	r24, Z
    2fbc:	91 81       	ldd	r25, Z+1	; 0x01
    2fbe:	c8 0f       	add	r28, r24
    2fc0:	d9 1f       	adc	r29, r25
    2fc2:	d1 83       	std	Z+1, r29	; 0x01
    2fc4:	c0 83       	st	Z, r28
    2fc6:	c1 14       	cp	r12, r1
    2fc8:	d1 04       	cpc	r13, r1
    2fca:	09 f0       	breq	.+2      	; 0x2fce <pf_read+0x1aa>
    2fcc:	66 cf       	rjmp	.-308    	; 0x2e9a <pf_read+0x76>
    2fce:	80 e0       	ldi	r24, 0x00	; 0
    2fd0:	07 c0       	rjmp	.+14     	; 0x2fe0 <pf_read+0x1bc>
    2fd2:	f7 01       	movw	r30, r14
    2fd4:	12 82       	std	Z+2, r1	; 0x02
    2fd6:	81 e0       	ldi	r24, 0x01	; 1
    2fd8:	03 c0       	rjmp	.+6      	; 0x2fe0 <pf_read+0x1bc>
    2fda:	86 e0       	ldi	r24, 0x06	; 6
    2fdc:	01 c0       	rjmp	.+2      	; 0x2fe0 <pf_read+0x1bc>
    2fde:	85 e0       	ldi	r24, 0x05	; 5
    2fe0:	df 91       	pop	r29
    2fe2:	cf 91       	pop	r28
    2fe4:	1f 91       	pop	r17
    2fe6:	0f 91       	pop	r16
    2fe8:	ff 90       	pop	r15
    2fea:	ef 90       	pop	r14
    2fec:	df 90       	pop	r13
    2fee:	cf 90       	pop	r12
    2ff0:	bf 90       	pop	r11
    2ff2:	af 90       	pop	r10
    2ff4:	9f 90       	pop	r9
    2ff6:	8f 90       	pop	r8
    2ff8:	7f 90       	pop	r7
    2ffa:	6f 90       	pop	r6
    2ffc:	5f 90       	pop	r5
    2ffe:	4f 90       	pop	r4
    3000:	3f 90       	pop	r3
    3002:	2f 90       	pop	r2
    3004:	08 95       	ret

00003006 <pf_lseek>:
#if _USE_LSEEK

FRESULT pf_lseek (
	DWORD ofs		/* File pointer from top of file */
)
{
    3006:	4f 92       	push	r4
    3008:	5f 92       	push	r5
    300a:	6f 92       	push	r6
    300c:	7f 92       	push	r7
    300e:	8f 92       	push	r8
    3010:	9f 92       	push	r9
    3012:	af 92       	push	r10
    3014:	bf 92       	push	r11
    3016:	cf 92       	push	r12
    3018:	df 92       	push	r13
    301a:	ef 92       	push	r14
    301c:	ff 92       	push	r15
    301e:	cf 93       	push	r28
    3020:	df 93       	push	r29
    3022:	00 d0       	rcall	.+0      	; 0x3024 <pf_lseek+0x1e>
    3024:	00 d0       	rcall	.+0      	; 0x3026 <pf_lseek+0x20>
    3026:	00 d0       	rcall	.+0      	; 0x3028 <pf_lseek+0x22>
    3028:	cd b7       	in	r28, 0x3d	; 61
    302a:	de b7       	in	r29, 0x3e	; 62
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;
    302c:	20 91 9a 06 	lds	r18, 0x069A	; 0x80069a <FatFs>
    3030:	30 91 9b 06 	lds	r19, 0x069B	; 0x80069b <FatFs+0x1>
    3034:	3e 83       	std	Y+6, r19	; 0x06
    3036:	2d 83       	std	Y+5, r18	; 0x05


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    3038:	21 15       	cp	r18, r1
    303a:	31 05       	cpc	r19, r1
    303c:	09 f4       	brne	.+2      	; 0x3040 <pf_lseek+0x3a>
    303e:	f4 c0       	rjmp	.+488    	; 0x3228 <pf_lseek+0x222>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
    3040:	d9 01       	movw	r26, r18
    3042:	12 96       	adiw	r26, 0x02	; 2
    3044:	2c 91       	ld	r18, X
    3046:	12 97       	sbiw	r26, 0x02	; 2
    3048:	20 ff       	sbrs	r18, 0
    304a:	f0 c0       	rjmp	.+480    	; 0x322c <pf_lseek+0x226>
			return FR_NOT_OPENED;

	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
    304c:	5c 96       	adiw	r26, 0x1c	; 28
    304e:	cd 90       	ld	r12, X+
    3050:	dd 90       	ld	r13, X+
    3052:	ed 90       	ld	r14, X+
    3054:	fc 90       	ld	r15, X
    3056:	5f 97       	sbiw	r26, 0x1f	; 31
    3058:	c6 16       	cp	r12, r22
    305a:	d7 06       	cpc	r13, r23
    305c:	e8 06       	cpc	r14, r24
    305e:	f9 06       	cpc	r15, r25
    3060:	10 f0       	brcs	.+4      	; 0x3066 <pf_lseek+0x60>
    3062:	6b 01       	movw	r12, r22
    3064:	7c 01       	movw	r14, r24
	ifptr = fs->fptr;
    3066:	ed 81       	ldd	r30, Y+5	; 0x05
    3068:	fe 81       	ldd	r31, Y+6	; 0x06
    306a:	40 8c       	ldd	r4, Z+24	; 0x18
    306c:	51 8c       	ldd	r5, Z+25	; 0x19
    306e:	62 8c       	ldd	r6, Z+26	; 0x1a
    3070:	73 8c       	ldd	r7, Z+27	; 0x1b
	fs->fptr = 0;
    3072:	10 8e       	std	Z+24, r1	; 0x18
    3074:	11 8e       	std	Z+25, r1	; 0x19
    3076:	12 8e       	std	Z+26, r1	; 0x1a
    3078:	13 8e       	std	Z+27, r1	; 0x1b
	if (ofs > 0) {
    307a:	c1 14       	cp	r12, r1
    307c:	d1 04       	cpc	r13, r1
    307e:	e1 04       	cpc	r14, r1
    3080:	f1 04       	cpc	r15, r1
    3082:	09 f4       	brne	.+2      	; 0x3086 <pf_lseek+0x80>
    3084:	d5 c0       	rjmp	.+426    	; 0x3230 <pf_lseek+0x22a>
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
    3086:	81 80       	ldd	r8, Z+1	; 0x01
    3088:	91 2c       	mov	r9, r1
    308a:	a1 2c       	mov	r10, r1
    308c:	b1 2c       	mov	r11, r1
    308e:	07 2e       	mov	r0, r23
    3090:	79 e0       	ldi	r23, 0x09	; 9
    3092:	88 0c       	add	r8, r8
    3094:	99 1c       	adc	r9, r9
    3096:	aa 1c       	adc	r10, r10
    3098:	bb 1c       	adc	r11, r11
    309a:	7a 95       	dec	r23
    309c:	d1 f7       	brne	.-12     	; 0x3092 <pf_lseek+0x8c>
    309e:	70 2d       	mov	r23, r0
		if (ifptr > 0 &&
    30a0:	41 14       	cp	r4, r1
    30a2:	51 04       	cpc	r5, r1
    30a4:	61 04       	cpc	r6, r1
    30a6:	71 04       	cpc	r7, r1
    30a8:	09 f4       	brne	.+2      	; 0x30ac <pf_lseek+0xa6>
    30aa:	40 c0       	rjmp	.+128    	; 0x312c <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    30ac:	c7 01       	movw	r24, r14
    30ae:	b6 01       	movw	r22, r12
    30b0:	61 50       	subi	r22, 0x01	; 1
    30b2:	71 09       	sbc	r23, r1
    30b4:	81 09       	sbc	r24, r1
    30b6:	91 09       	sbc	r25, r1
    30b8:	a5 01       	movw	r20, r10
    30ba:	94 01       	movw	r18, r8
    30bc:	0e 94 b2 2a 	call	0x5564	; 0x5564 <__udivmodsi4>
    30c0:	29 83       	std	Y+1, r18	; 0x01
    30c2:	3a 83       	std	Y+2, r19	; 0x02
    30c4:	4b 83       	std	Y+3, r20	; 0x03
    30c6:	5c 83       	std	Y+4, r21	; 0x04
    30c8:	b1 e0       	ldi	r27, 0x01	; 1
    30ca:	4b 1a       	sub	r4, r27
    30cc:	51 08       	sbc	r5, r1
    30ce:	61 08       	sbc	r6, r1
    30d0:	71 08       	sbc	r7, r1
    30d2:	c3 01       	movw	r24, r6
    30d4:	b2 01       	movw	r22, r4
    30d6:	a5 01       	movw	r20, r10
    30d8:	94 01       	movw	r18, r8
    30da:	0e 94 b2 2a 	call	0x5564	; 0x5564 <__udivmodsi4>
	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
	ifptr = fs->fptr;
	fs->fptr = 0;
	if (ofs > 0) {
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
		if (ifptr > 0 &&
    30de:	89 81       	ldd	r24, Y+1	; 0x01
    30e0:	9a 81       	ldd	r25, Y+2	; 0x02
    30e2:	ab 81       	ldd	r26, Y+3	; 0x03
    30e4:	bc 81       	ldd	r27, Y+4	; 0x04
    30e6:	82 17       	cp	r24, r18
    30e8:	93 07       	cpc	r25, r19
    30ea:	a4 07       	cpc	r26, r20
    30ec:	b5 07       	cpc	r27, r21
    30ee:	f0 f0       	brcs	.+60     	; 0x312c <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
			fs->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    30f0:	88 27       	eor	r24, r24
    30f2:	99 27       	eor	r25, r25
    30f4:	dc 01       	movw	r26, r24
    30f6:	88 19       	sub	r24, r8
    30f8:	99 09       	sbc	r25, r9
    30fa:	aa 09       	sbc	r26, r10
    30fc:	bb 09       	sbc	r27, r11
    30fe:	48 22       	and	r4, r24
    3100:	59 22       	and	r5, r25
    3102:	6a 22       	and	r6, r26
    3104:	7b 22       	and	r7, r27
    3106:	ad 81       	ldd	r26, Y+5	; 0x05
    3108:	be 81       	ldd	r27, Y+6	; 0x06
    310a:	58 96       	adiw	r26, 0x18	; 24
    310c:	4d 92       	st	X+, r4
    310e:	5d 92       	st	X+, r5
    3110:	6d 92       	st	X+, r6
    3112:	7c 92       	st	X, r7
    3114:	5b 97       	sbiw	r26, 0x1b	; 27
			ofs -= fs->fptr;
    3116:	c4 18       	sub	r12, r4
    3118:	d5 08       	sbc	r13, r5
    311a:	e6 08       	sbc	r14, r6
    311c:	f7 08       	sbc	r15, r7
			clst = fs->curr_clust;
    311e:	94 96       	adiw	r26, 0x24	; 36
    3120:	6d 91       	ld	r22, X+
    3122:	7d 91       	ld	r23, X+
    3124:	8d 91       	ld	r24, X+
    3126:	9c 91       	ld	r25, X
    3128:	97 97       	sbiw	r26, 0x27	; 39
    312a:	33 c0       	rjmp	.+102    	; 0x3192 <pf_lseek+0x18c>
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
    312c:	ed 81       	ldd	r30, Y+5	; 0x05
    312e:	fe 81       	ldd	r31, Y+6	; 0x06
    3130:	60 a1       	ldd	r22, Z+32	; 0x20
    3132:	71 a1       	ldd	r23, Z+33	; 0x21
    3134:	82 a1       	ldd	r24, Z+34	; 0x22
    3136:	93 a1       	ldd	r25, Z+35	; 0x23
			fs->curr_clust = clst;
    3138:	64 a3       	std	Z+36, r22	; 0x24
    313a:	75 a3       	std	Z+37, r23	; 0x25
    313c:	86 a3       	std	Z+38, r24	; 0x26
    313e:	97 a3       	std	Z+39, r25	; 0x27
    3140:	28 c0       	rjmp	.+80     	; 0x3192 <pf_lseek+0x18c>
		}
		while (ofs > bcs) {				/* Cluster following loop */
			clst = get_fat(clst);		/* Follow cluster chain */
    3142:	0e 94 1a 13 	call	0x2634	; 0x2634 <get_fat>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
    3146:	62 30       	cpi	r22, 0x02	; 2
    3148:	71 05       	cpc	r23, r1
    314a:	81 05       	cpc	r24, r1
    314c:	91 05       	cpc	r25, r1
    314e:	08 f4       	brcc	.+2      	; 0x3152 <pf_lseek+0x14c>
    3150:	65 c0       	rjmp	.+202    	; 0x321c <pf_lseek+0x216>
    3152:	ed 81       	ldd	r30, Y+5	; 0x05
    3154:	fe 81       	ldd	r31, Y+6	; 0x06
    3156:	40 84       	ldd	r4, Z+8	; 0x08
    3158:	51 84       	ldd	r5, Z+9	; 0x09
    315a:	62 84       	ldd	r6, Z+10	; 0x0a
    315c:	73 84       	ldd	r7, Z+11	; 0x0b
    315e:	64 15       	cp	r22, r4
    3160:	75 05       	cpc	r23, r5
    3162:	86 05       	cpc	r24, r6
    3164:	97 05       	cpc	r25, r7
    3166:	08 f0       	brcs	.+2      	; 0x316a <pf_lseek+0x164>
    3168:	59 c0       	rjmp	.+178    	; 0x321c <pf_lseek+0x216>
			fs->curr_clust = clst;
    316a:	64 a3       	std	Z+36, r22	; 0x24
    316c:	75 a3       	std	Z+37, r23	; 0x25
    316e:	86 a3       	std	Z+38, r24	; 0x26
    3170:	97 a3       	std	Z+39, r25	; 0x27
			fs->fptr += bcs;
    3172:	40 8c       	ldd	r4, Z+24	; 0x18
    3174:	51 8c       	ldd	r5, Z+25	; 0x19
    3176:	62 8c       	ldd	r6, Z+26	; 0x1a
    3178:	73 8c       	ldd	r7, Z+27	; 0x1b
    317a:	48 0c       	add	r4, r8
    317c:	59 1c       	adc	r5, r9
    317e:	6a 1c       	adc	r6, r10
    3180:	7b 1c       	adc	r7, r11
    3182:	40 8e       	std	Z+24, r4	; 0x18
    3184:	51 8e       	std	Z+25, r5	; 0x19
    3186:	62 8e       	std	Z+26, r6	; 0x1a
    3188:	73 8e       	std	Z+27, r7	; 0x1b
			ofs -= bcs;
    318a:	c8 18       	sub	r12, r8
    318c:	d9 08       	sbc	r13, r9
    318e:	ea 08       	sbc	r14, r10
    3190:	fb 08       	sbc	r15, r11
			clst = fs->curr_clust;
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
			fs->curr_clust = clst;
		}
		while (ofs > bcs) {				/* Cluster following loop */
    3192:	8c 14       	cp	r8, r12
    3194:	9d 04       	cpc	r9, r13
    3196:	ae 04       	cpc	r10, r14
    3198:	bf 04       	cpc	r11, r15
    319a:	98 f2       	brcs	.-90     	; 0x3142 <pf_lseek+0x13c>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
			fs->curr_clust = clst;
			fs->fptr += bcs;
			ofs -= bcs;
		}
		fs->fptr += ofs;
    319c:	ad 81       	ldd	r26, Y+5	; 0x05
    319e:	be 81       	ldd	r27, Y+6	; 0x06
    31a0:	58 96       	adiw	r26, 0x18	; 24
    31a2:	8d 90       	ld	r8, X+
    31a4:	9d 90       	ld	r9, X+
    31a6:	ad 90       	ld	r10, X+
    31a8:	bc 90       	ld	r11, X
    31aa:	5b 97       	sbiw	r26, 0x1b	; 27
    31ac:	8c 0c       	add	r8, r12
    31ae:	9d 1c       	adc	r9, r13
    31b0:	ae 1c       	adc	r10, r14
    31b2:	bf 1c       	adc	r11, r15
    31b4:	fd 01       	movw	r30, r26
    31b6:	80 8e       	std	Z+24, r8	; 0x18
    31b8:	91 8e       	std	Z+25, r9	; 0x19
    31ba:	a2 8e       	std	Z+26, r10	; 0x1a
    31bc:	b3 8e       	std	Z+27, r11	; 0x1b
		sect = clust2sect(clst);		/* Current sector */
    31be:	0e 94 11 12 	call	0x2422	; 0x2422 <clust2sect>
		if (!sect) goto fe_abort;
    31c2:	61 15       	cp	r22, r1
    31c4:	71 05       	cpc	r23, r1
    31c6:	81 05       	cpc	r24, r1
    31c8:	91 05       	cpc	r25, r1
    31ca:	41 f1       	breq	.+80     	; 0x321c <pf_lseek+0x216>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
    31cc:	46 01       	movw	r8, r12
    31ce:	57 01       	movw	r10, r14
    31d0:	07 2e       	mov	r0, r23
    31d2:	79 e0       	ldi	r23, 0x09	; 9
    31d4:	b6 94       	lsr	r11
    31d6:	a7 94       	ror	r10
    31d8:	97 94       	ror	r9
    31da:	87 94       	ror	r8
    31dc:	7a 95       	dec	r23
    31de:	d1 f7       	brne	.-12     	; 0x31d4 <pf_lseek+0x1ce>
    31e0:	70 2d       	mov	r23, r0
    31e2:	ad 81       	ldd	r26, Y+5	; 0x05
    31e4:	be 81       	ldd	r27, Y+6	; 0x06
    31e6:	13 96       	adiw	r26, 0x03	; 3
    31e8:	8c 92       	st	X, r8
		if (ofs % 512)
    31ea:	b1 e0       	ldi	r27, 0x01	; 1
    31ec:	db 22       	and	r13, r27
    31ee:	ee 24       	eor	r14, r14
    31f0:	ff 24       	eor	r15, r15
    31f2:	cd 28       	or	r12, r13
    31f4:	ce 28       	or	r12, r14
    31f6:	cf 28       	or	r12, r15
    31f8:	e9 f0       	breq	.+58     	; 0x3234 <pf_lseek+0x22e>
			fs->dsect = sect + fs->csect++;
    31fa:	21 e0       	ldi	r18, 0x01	; 1
    31fc:	28 0d       	add	r18, r8
    31fe:	ed 81       	ldd	r30, Y+5	; 0x05
    3200:	fe 81       	ldd	r31, Y+6	; 0x06
    3202:	23 83       	std	Z+3, r18	; 0x03
    3204:	dc 01       	movw	r26, r24
    3206:	cb 01       	movw	r24, r22
    3208:	88 0d       	add	r24, r8
    320a:	91 1d       	adc	r25, r1
    320c:	a1 1d       	adc	r26, r1
    320e:	b1 1d       	adc	r27, r1
    3210:	80 a7       	std	Z+40, r24	; 0x28
    3212:	91 a7       	std	Z+41, r25	; 0x29
    3214:	a2 a7       	std	Z+42, r26	; 0x2a
    3216:	b3 a7       	std	Z+43, r27	; 0x2b
	}

	return FR_OK;
    3218:	80 e0       	ldi	r24, 0x00	; 0
    321a:	0d c0       	rjmp	.+26     	; 0x3236 <pf_lseek+0x230>

fe_abort:
	fs->flag = 0;
    321c:	ad 81       	ldd	r26, Y+5	; 0x05
    321e:	be 81       	ldd	r27, Y+6	; 0x06
    3220:	12 96       	adiw	r26, 0x02	; 2
    3222:	1c 92       	st	X, r1
	return FR_DISK_ERR;
    3224:	81 e0       	ldi	r24, 0x01	; 1
    3226:	07 c0       	rjmp	.+14     	; 0x3236 <pf_lseek+0x230>
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    3228:	86 e0       	ldi	r24, 0x06	; 6
    322a:	05 c0       	rjmp	.+10     	; 0x3236 <pf_lseek+0x230>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
			return FR_NOT_OPENED;
    322c:	85 e0       	ldi	r24, 0x05	; 5
    322e:	03 c0       	rjmp	.+6      	; 0x3236 <pf_lseek+0x230>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
		if (ofs % 512)
			fs->dsect = sect + fs->csect++;
	}

	return FR_OK;
    3230:	80 e0       	ldi	r24, 0x00	; 0
    3232:	01 c0       	rjmp	.+2      	; 0x3236 <pf_lseek+0x230>
    3234:	80 e0       	ldi	r24, 0x00	; 0

fe_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    3236:	26 96       	adiw	r28, 0x06	; 6
    3238:	0f b6       	in	r0, 0x3f	; 63
    323a:	f8 94       	cli
    323c:	de bf       	out	0x3e, r29	; 62
    323e:	0f be       	out	0x3f, r0	; 63
    3240:	cd bf       	out	0x3d, r28	; 61
    3242:	df 91       	pop	r29
    3244:	cf 91       	pop	r28
    3246:	ff 90       	pop	r15
    3248:	ef 90       	pop	r14
    324a:	df 90       	pop	r13
    324c:	cf 90       	pop	r12
    324e:	bf 90       	pop	r11
    3250:	af 90       	pop	r10
    3252:	9f 90       	pop	r9
    3254:	8f 90       	pop	r8
    3256:	7f 90       	pop	r7
    3258:	6f 90       	pop	r6
    325a:	5f 90       	pop	r5
    325c:	4f 90       	pop	r4
    325e:	08 95       	ret

00003260 <RTC_ConvertFromDec>:
	unsigned char ch = ((c/10)<<4)|(c%10);
	return ch;
}
unsigned char RTC_ConvertFromDec(unsigned char c)//перевод в десятичный формат
{
	unsigned char ch = ((c>>4)*10+(0b00001111&c));
    3260:	98 2f       	mov	r25, r24
    3262:	92 95       	swap	r25
    3264:	9f 70       	andi	r25, 0x0F	; 15
    3266:	99 0f       	add	r25, r25
    3268:	29 2f       	mov	r18, r25
    326a:	22 0f       	add	r18, r18
    326c:	22 0f       	add	r18, r18
    326e:	92 0f       	add	r25, r18
    3270:	8f 70       	andi	r24, 0x0F	; 15
	return ch;
}
    3272:	89 0f       	add	r24, r25
    3274:	08 95       	ret

00003276 <RTC_init>:
// инициализация начальных установок
void RTC_init(void){
	I2C_StartCondition();               // запуск i2c
    3276:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(0b11010000);   // передача адреса устройства, режим записи
    327a:	80 ed       	ldi	r24, 0xD0	; 208
    327c:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0x0E);            // передача адреса памяти
    3280:	8e e0       	ldi	r24, 0x0E	; 14
    3282:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0b00100000);      // запустить преобразование температуры и выход на 1 Гц
    3286:	80 e2       	ldi	r24, 0x20	; 32
    3288:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0b00001000);      // разрешить выход 32 кГц
    328c:	88 e0       	ldi	r24, 0x08	; 8
    328e:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    3292:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>
    3296:	08 95       	ret

00003298 <read_symbol_from_SD>:
}
//—————————————-
*/

uint8_t read_symbol_from_SD (uint16_t symbol)
{
    3298:	0f 93       	push	r16
    329a:	1f 93       	push	r17
    329c:	cf 93       	push	r28
    329e:	df 93       	push	r29
    32a0:	cd b7       	in	r28, 0x3d	; 61
    32a2:	de b7       	in	r29, 0x3e	; 62
    32a4:	2d 97       	sbiw	r28, 0x0d	; 13
    32a6:	0f b6       	in	r0, 0x3f	; 63
    32a8:	f8 94       	cli
    32aa:	de bf       	out	0x3e, r29	; 62
    32ac:	0f be       	out	0x3f, r0	; 63
    32ae:	cd bf       	out	0x3d, r28	; 61
	WORD s1;
	uint8_t result;
	char buffer[10] = {};
    32b0:	8e 01       	movw	r16, r28
    32b2:	0c 5f       	subi	r16, 0xFC	; 252
    32b4:	1f 4f       	sbci	r17, 0xFF	; 255
    32b6:	2a e0       	ldi	r18, 0x0A	; 10
    32b8:	f8 01       	movw	r30, r16
    32ba:	11 92       	st	Z+, r1
    32bc:	2a 95       	dec	r18
    32be:	e9 f7       	brne	.-6      	; 0x32ba <read_symbol_from_SD+0x22>

	pf_lseek(6*symbol); //Установим курсор чтения на 0 
    32c0:	bc 01       	movw	r22, r24
    32c2:	66 0f       	add	r22, r22
    32c4:	77 1f       	adc	r23, r23
    32c6:	68 0f       	add	r22, r24
    32c8:	79 1f       	adc	r23, r25
    32ca:	66 0f       	add	r22, r22
    32cc:	77 1f       	adc	r23, r23
    32ce:	80 e0       	ldi	r24, 0x00	; 0
    32d0:	90 e0       	ldi	r25, 0x00	; 0
    32d2:	0e 94 03 18 	call	0x3006	; 0x3006 <pf_lseek>
	pf_read(buffer,4,&s1);
    32d6:	ae 01       	movw	r20, r28
    32d8:	4f 5f       	subi	r20, 0xFF	; 255
    32da:	5f 4f       	sbci	r21, 0xFF	; 255
    32dc:	64 e0       	ldi	r22, 0x04	; 4
    32de:	70 e0       	ldi	r23, 0x00	; 0
    32e0:	c8 01       	movw	r24, r16
    32e2:	0e 94 12 17 	call	0x2e24	; 0x2e24 <pf_read>
	sscanf(buffer, "%x", &result);
    32e6:	ce 01       	movw	r24, r28
    32e8:	03 96       	adiw	r24, 0x03	; 3
    32ea:	9f 93       	push	r25
    32ec:	8f 93       	push	r24
    32ee:	8f e3       	ldi	r24, 0x3F	; 63
    32f0:	91 e0       	ldi	r25, 0x01	; 1
    32f2:	9f 93       	push	r25
    32f4:	8f 93       	push	r24
    32f6:	1f 93       	push	r17
    32f8:	0f 93       	push	r16
    32fa:	0e 94 b9 2c 	call	0x5972	; 0x5972 <sscanf>

	return result;
    32fe:	0f 90       	pop	r0
    3300:	0f 90       	pop	r0
    3302:	0f 90       	pop	r0
    3304:	0f 90       	pop	r0
    3306:	0f 90       	pop	r0
    3308:	0f 90       	pop	r0
    330a:	8b 81       	ldd	r24, Y+3	; 0x03
    330c:	2d 96       	adiw	r28, 0x0d	; 13
    330e:	0f b6       	in	r0, 0x3f	; 63
    3310:	f8 94       	cli
    3312:	de bf       	out	0x3e, r29	; 62
    3314:	0f be       	out	0x3f, r0	; 63
    3316:	cd bf       	out	0x3d, r28	; 61
    3318:	df 91       	pop	r29
    331a:	cf 91       	pop	r28
    331c:	1f 91       	pop	r17
    331e:	0f 91       	pop	r16
    3320:	08 95       	ret

00003322 <I2C_Init>:
{
    I2C_StartCondition(); // Отправим условие START
	I2C_SendByte(addr); // Отправим в шину адрес устройства + бит чтения-записи
	I2C_SendByte(c);// Отправим байт данных
	I2C_StopCondition();// Отправим условие STOP
}
    3322:	80 e2       	ldi	r24, 0x20	; 32
    3324:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    3328:	08 95       	ret

0000332a <I2C_StartCondition>:
    332a:	84 ea       	ldi	r24, 0xA4	; 164
    332c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    3330:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    3334:	88 23       	and	r24, r24
    3336:	e4 f7       	brge	.-8      	; 0x3330 <I2C_StartCondition+0x6>
    3338:	08 95       	ret

0000333a <I2C_StopCondition>:
    333a:	84 e9       	ldi	r24, 0x94	; 148
    333c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    3340:	08 95       	ret

00003342 <I2C_SendByte>:
    3342:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    3346:	84 e8       	ldi	r24, 0x84	; 132
    3348:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    334c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    3350:	88 23       	and	r24, r24
    3352:	e4 f7       	brge	.-8      	; 0x334c <I2C_SendByte+0xa>
    3354:	08 95       	ret

00003356 <I2C_ReadByte>:
unsigned char I2C_ReadByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
    3356:	84 ec       	ldi	r24, 0xC4	; 196
    3358:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    335c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    3360:	88 23       	and	r24, r24
    3362:	e4 f7       	brge	.-8      	; 0x335c <I2C_ReadByte+0x6>
	return TWDR;//читаем регистр данных
    3364:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
    3368:	08 95       	ret

0000336a <I2C_ReadLastByte>:
unsigned char I2C_ReadLastByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
    336a:	84 e8       	ldi	r24, 0x84	; 132
    336c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    3370:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    3374:	88 23       	and	r24, r24
    3376:	e4 f7       	brge	.-8      	; 0x3370 <I2C_ReadLastByte+0x6>
	return TWDR;//читаем регистр данных
    3378:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    337c:	08 95       	ret

0000337e <USART_Init>:
 */ 
#include "usart.h"

void USART_Init( unsigned int speed)//Инициализация модуля USART
{	
  UBRR0H = (unsigned char)(speed>>8);
    337e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  UBRR0L = (unsigned char)speed;
    3382:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  UCSR0B=(1<<RXEN0)|( 1<<TXEN0); //Включаем прием и передачу по USART
    3386:	e1 ec       	ldi	r30, 0xC1	; 193
    3388:	f0 e0       	ldi	r31, 0x00	; 0
    338a:	88 e1       	ldi	r24, 0x18	; 24
    338c:	80 83       	st	Z, r24
  UCSR0B |= (1<<RXCIE0); //Разрешаем прерывание при приеме
    338e:	80 81       	ld	r24, Z
    3390:	80 68       	ori	r24, 0x80	; 128
    3392:	80 83       	st	Z, r24
  UCSR0A |= (1<<U2X0); // Для 8 мгц, удвоение скорости
    3394:	e0 ec       	ldi	r30, 0xC0	; 192
    3396:	f0 e0       	ldi	r31, 0x00	; 0
    3398:	80 81       	ld	r24, Z
    339a:	82 60       	ori	r24, 0x02	; 2
    339c:	80 83       	st	Z, r24
  UCSR0C |= (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);// Обращаемся именно к регистру UCSRC (URSEL=1),
    339e:	e2 ec       	ldi	r30, 0xC2	; 194
    33a0:	f0 e0       	ldi	r31, 0x00	; 0
    33a2:	80 81       	ld	r24, Z
    33a4:	8e 60       	ori	r24, 0x0E	; 14
    33a6:	80 83       	st	Z, r24
    33a8:	08 95       	ret

000033aa <USART_Transmit>:
  //ассинхронный режим (UMSEL=0), без контроля четности (UPM1=0 и UPM0=0),
  //2 стоп-бит (USBS=1), 8-бит посылка (UCSZ1=1 и UCSZ0=1)
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
    33aa:	dc 01       	movw	r26, r24
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    33ac:	80 e0       	ldi	r24, 0x00	; 0
    33ae:	0b c0       	rjmp	.+22     	; 0x33c6 <USART_Transmit+0x1c>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
    33b0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    33b4:	95 ff       	sbrs	r25, 5
    33b6:	fc cf       	rjmp	.-8      	; 0x33b0 <USART_Transmit+0x6>
	  UDR0 = data[i]; //Начало передачи данных
    33b8:	fd 01       	movw	r30, r26
    33ba:	e2 0f       	add	r30, r18
    33bc:	f3 1f       	adc	r31, r19
    33be:	90 81       	ld	r25, Z
    33c0:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    33c4:	8f 5f       	subi	r24, 0xFF	; 255
    33c6:	28 2f       	mov	r18, r24
    33c8:	30 e0       	ldi	r19, 0x00	; 0
    33ca:	fd 01       	movw	r30, r26
    33cc:	01 90       	ld	r0, Z+
    33ce:	00 20       	and	r0, r0
    33d0:	e9 f7       	brne	.-6      	; 0x33cc <USART_Transmit+0x22>
    33d2:	31 97       	sbiw	r30, 0x01	; 1
    33d4:	ea 1b       	sub	r30, r26
    33d6:	fb 0b       	sbc	r31, r27
    33d8:	2e 17       	cp	r18, r30
    33da:	3f 07       	cpc	r19, r31
    33dc:	48 f3       	brcs	.-46     	; 0x33b0 <USART_Transmit+0x6>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
	  UDR0 = data[i]; //Начало передачи данных
  }

}
    33de:	08 95       	ret

000033e0 <Print_Hello_World>:
	LCD_12864_Draw_pixel(113, 48);
	LCD_12864_Draw_pixel(113, 49);
	LCD_12864_Draw_pixel(114, 50);
	LCD_12864_Draw_pixel(112, 49);
	LCD_12864_Draw_pixel(111, 49);
	LCD_12864_Draw_pixel(110, 50);
    33e0:	cf 93       	push	r28
    33e2:	df 93       	push	r29
    33e4:	ec 01       	movw	r28, r24
    33e6:	81 e0       	ldi	r24, 0x01	; 1
    33e8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
    33ec:	0e 94 30 0a 	call	0x1460	; 0x1460 <LCD_12864_Print_jpeg>
    33f0:	22 e4       	ldi	r18, 0x42	; 66
    33f2:	31 e0       	ldi	r19, 0x01	; 1
    33f4:	40 e0       	ldi	r20, 0x00	; 0
    33f6:	60 e0       	ldi	r22, 0x00	; 0
    33f8:	88 e2       	ldi	r24, 0x28	; 40
    33fa:	90 e0       	ldi	r25, 0x00	; 0
    33fc:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
    3400:	2b e4       	ldi	r18, 0x4B	; 75
    3402:	31 e0       	ldi	r19, 0x01	; 1
    3404:	40 e0       	ldi	r20, 0x00	; 0
    3406:	67 e0       	ldi	r22, 0x07	; 7
    3408:	8e e1       	ldi	r24, 0x1E	; 30
    340a:	90 e0       	ldi	r25, 0x00	; 0
    340c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
    3410:	ce 01       	movw	r24, r28
    3412:	0e 94 18 05 	call	0xa30	; 0xa30 <LCD_12864_Draw_bitmap>
    3416:	80 e0       	ldi	r24, 0x00	; 0
    3418:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
    341c:	2f ef       	ldi	r18, 0xFF	; 255
    341e:	8d e3       	ldi	r24, 0x3D	; 61
    3420:	99 e4       	ldi	r25, 0x49	; 73
    3422:	21 50       	subi	r18, 0x01	; 1
    3424:	80 40       	sbci	r24, 0x00	; 0
    3426:	90 40       	sbci	r25, 0x00	; 0
    3428:	e1 f7       	brne	.-8      	; 0x3422 <Print_Hello_World+0x42>
    342a:	00 c0       	rjmp	.+0      	; 0x342c <Print_Hello_World+0x4c>
    342c:	00 00       	nop
    342e:	df 91       	pop	r29
    3430:	cf 91       	pop	r28
    3432:	08 95       	ret

00003434 <Print_Download>:
    3434:	0f 93       	push	r16
    3436:	1f 93       	push	r17
    3438:	cf 93       	push	r28
    343a:	8c 01       	movw	r16, r24
    343c:	81 e0       	ldi	r24, 0x01	; 1
    343e:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
    3442:	0e 94 88 0a 	call	0x1510	; 0x1510 <LCD_12864_Clean_Frame_buffer>
    3446:	2f e0       	ldi	r18, 0x0F	; 15
    3448:	30 e0       	ldi	r19, 0x00	; 0
    344a:	40 e7       	ldi	r20, 0x70	; 112
    344c:	50 e0       	ldi	r21, 0x00	; 0
    344e:	63 e2       	ldi	r22, 0x23	; 35
    3450:	70 e0       	ldi	r23, 0x00	; 0
    3452:	86 e0       	ldi	r24, 0x06	; 6
    3454:	90 e0       	ldi	r25, 0x00	; 0
    3456:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <LCD_12864_Draw_rectangle>
    345a:	28 e5       	ldi	r18, 0x58	; 88
    345c:	31 e0       	ldi	r19, 0x01	; 1
    345e:	40 e0       	ldi	r20, 0x00	; 0
    3460:	61 e0       	ldi	r22, 0x01	; 1
    3462:	83 e0       	ldi	r24, 0x03	; 3
    3464:	90 e0       	ldi	r25, 0x00	; 0
    3466:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
    346a:	2e e6       	ldi	r18, 0x6E	; 110
    346c:	31 e0       	ldi	r19, 0x01	; 1
    346e:	40 e0       	ldi	r20, 0x00	; 0
    3470:	63 e0       	ldi	r22, 0x03	; 3
    3472:	80 e1       	ldi	r24, 0x10	; 16
    3474:	90 e0       	ldi	r25, 0x00	; 0
    3476:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
    347a:	c8 01       	movw	r24, r16
    347c:	0e 94 18 05 	call	0xa30	; 0xa30 <LCD_12864_Draw_bitmap>
    3480:	c8 e0       	ldi	r28, 0x08	; 8
    3482:	17 c0       	rjmp	.+46     	; 0x34b2 <Print_Download+0x7e>
    3484:	2b e0       	ldi	r18, 0x0B	; 11
    3486:	30 e0       	ldi	r19, 0x00	; 0
    3488:	49 e0       	ldi	r20, 0x09	; 9
    348a:	50 e0       	ldi	r21, 0x00	; 0
    348c:	65 e2       	ldi	r22, 0x25	; 37
    348e:	70 e0       	ldi	r23, 0x00	; 0
    3490:	8c 2f       	mov	r24, r28
    3492:	90 e0       	ldi	r25, 0x00	; 0
    3494:	0e 94 36 0b 	call	0x166c	; 0x166c <LCD_12864_Draw_rectangle_filled>
    3498:	c8 01       	movw	r24, r16
    349a:	0e 94 18 05 	call	0xa30	; 0xa30 <LCD_12864_Draw_bitmap>
    349e:	2f ef       	ldi	r18, 0xFF	; 255
    34a0:	84 e3       	ldi	r24, 0x34	; 52
    34a2:	9c e0       	ldi	r25, 0x0C	; 12
    34a4:	21 50       	subi	r18, 0x01	; 1
    34a6:	80 40       	sbci	r24, 0x00	; 0
    34a8:	90 40       	sbci	r25, 0x00	; 0
    34aa:	e1 f7       	brne	.-8      	; 0x34a4 <Print_Download+0x70>
    34ac:	00 c0       	rjmp	.+0      	; 0x34ae <Print_Download+0x7a>
    34ae:	00 00       	nop
    34b0:	c5 5f       	subi	r28, 0xF5	; 245
    34b2:	c5 37       	cpi	r28, 0x75	; 117
    34b4:	38 f3       	brcs	.-50     	; 0x3484 <Print_Download+0x50>
    34b6:	80 e0       	ldi	r24, 0x00	; 0
    34b8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
    34bc:	cf 91       	pop	r28
    34be:	1f 91       	pop	r17
    34c0:	0f 91       	pop	r16
    34c2:	08 95       	ret

000034c4 <DrawCloudsWithRain>:

}
void DrawCloudsWithRain(void)
{
	//облако№1
	LCD_12864_Draw_line(90, 57, 106, 57);
    34c4:	29 e3       	ldi	r18, 0x39	; 57
    34c6:	4a e6       	ldi	r20, 0x6A	; 106
    34c8:	69 e3       	ldi	r22, 0x39	; 57
    34ca:	8a e5       	ldi	r24, 0x5A	; 90
    34cc:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_pixel(89, 56);
    34d0:	68 e3       	ldi	r22, 0x38	; 56
    34d2:	89 e5       	ldi	r24, 0x59	; 89
    34d4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(88, 55);
    34d8:	67 e3       	ldi	r22, 0x37	; 55
    34da:	88 e5       	ldi	r24, 0x58	; 88
    34dc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(87, 54);
    34e0:	66 e3       	ldi	r22, 0x36	; 54
    34e2:	87 e5       	ldi	r24, 0x57	; 87
    34e4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(87, 53);
    34e8:	65 e3       	ldi	r22, 0x35	; 53
    34ea:	87 e5       	ldi	r24, 0x57	; 87
    34ec:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(87, 52);
    34f0:	64 e3       	ldi	r22, 0x34	; 52
    34f2:	87 e5       	ldi	r24, 0x57	; 87
    34f4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(88, 51);
    34f8:	63 e3       	ldi	r22, 0x33	; 51
    34fa:	88 e5       	ldi	r24, 0x58	; 88
    34fc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(89, 50);
    3500:	62 e3       	ldi	r22, 0x32	; 50
    3502:	89 e5       	ldi	r24, 0x59	; 89
    3504:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(90, 50);
    3508:	62 e3       	ldi	r22, 0x32	; 50
    350a:	8a e5       	ldi	r24, 0x5A	; 90
    350c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(91, 50);
    3510:	62 e3       	ldi	r22, 0x32	; 50
    3512:	8b e5       	ldi	r24, 0x5B	; 91
    3514:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 50);
    3518:	62 e3       	ldi	r22, 0x32	; 50
    351a:	8c e5       	ldi	r24, 0x5C	; 92
    351c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(94, 51);
    3520:	63 e3       	ldi	r22, 0x33	; 51
    3522:	8e e5       	ldi	r24, 0x5E	; 94
    3524:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(93, 50);
    3528:	62 e3       	ldi	r22, 0x32	; 50
    352a:	8d e5       	ldi	r24, 0x5D	; 93
    352c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 49);
    3530:	61 e3       	ldi	r22, 0x31	; 49
    3532:	8c e5       	ldi	r24, 0x5C	; 92
    3534:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 48);
    3538:	60 e3       	ldi	r22, 0x30	; 48
    353a:	8c e5       	ldi	r24, 0x5C	; 92
    353c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 47);
    3540:	6f e2       	ldi	r22, 0x2F	; 47
    3542:	8c e5       	ldi	r24, 0x5C	; 92
    3544:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 46);
    3548:	6e e2       	ldi	r22, 0x2E	; 46
    354a:	8c e5       	ldi	r24, 0x5C	; 92
    354c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(93, 45);
    3550:	6d e2       	ldi	r22, 0x2D	; 45
    3552:	8d e5       	ldi	r24, 0x5D	; 93
    3554:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(94, 44);
    3558:	6c e2       	ldi	r22, 0x2C	; 44
    355a:	8e e5       	ldi	r24, 0x5E	; 94
    355c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(95, 44);
    3560:	6c e2       	ldi	r22, 0x2C	; 44
    3562:	8f e5       	ldi	r24, 0x5F	; 95
    3564:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(96, 44);
    3568:	6c e2       	ldi	r22, 0x2C	; 44
    356a:	80 e6       	ldi	r24, 0x60	; 96
    356c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(97, 44);
    3570:	6c e2       	ldi	r22, 0x2C	; 44
    3572:	81 e6       	ldi	r24, 0x61	; 97
    3574:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(98, 44);
    3578:	6c e2       	ldi	r22, 0x2C	; 44
    357a:	82 e6       	ldi	r24, 0x62	; 98
    357c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(99, 44);
    3580:	6c e2       	ldi	r22, 0x2C	; 44
    3582:	83 e6       	ldi	r24, 0x63	; 99
    3584:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(100, 44);
    3588:	6c e2       	ldi	r22, 0x2C	; 44
    358a:	84 e6       	ldi	r24, 0x64	; 100
    358c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(101, 45);
    3590:	6d e2       	ldi	r22, 0x2D	; 45
    3592:	85 e6       	ldi	r24, 0x65	; 101
    3594:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 46);
    3598:	6e e2       	ldi	r22, 0x2E	; 46
    359a:	86 e6       	ldi	r24, 0x66	; 102
    359c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 47);
    35a0:	6f e2       	ldi	r22, 0x2F	; 47
    35a2:	86 e6       	ldi	r24, 0x66	; 102
    35a4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 48);
    35a8:	60 e3       	ldi	r22, 0x30	; 48
    35aa:	86 e6       	ldi	r24, 0x66	; 102
    35ac:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(101, 49);
    35b0:	61 e3       	ldi	r22, 0x31	; 49
    35b2:	85 e6       	ldi	r24, 0x65	; 101
    35b4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 48);
    35b8:	60 e3       	ldi	r22, 0x30	; 48
    35ba:	86 e6       	ldi	r24, 0x66	; 102
    35bc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(103, 48);
    35c0:	60 e3       	ldi	r22, 0x30	; 48
    35c2:	87 e6       	ldi	r24, 0x67	; 103
    35c4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(104, 48);
    35c8:	60 e3       	ldi	r22, 0x30	; 48
    35ca:	88 e6       	ldi	r24, 0x68	; 104
    35cc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(105, 48);
    35d0:	60 e3       	ldi	r22, 0x30	; 48
    35d2:	89 e6       	ldi	r24, 0x69	; 105
    35d4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	
	LCD_12864_Draw_pixel(107, 56);
    35d8:	68 e3       	ldi	r22, 0x38	; 56
    35da:	8b e6       	ldi	r24, 0x6B	; 107
    35dc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(108, 55);
    35e0:	67 e3       	ldi	r22, 0x37	; 55
    35e2:	8c e6       	ldi	r24, 0x6C	; 108
    35e4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 54);
    35e8:	66 e3       	ldi	r22, 0x36	; 54
    35ea:	8d e6       	ldi	r24, 0x6D	; 109
    35ec:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 53);
    35f0:	65 e3       	ldi	r22, 0x35	; 53
    35f2:	8d e6       	ldi	r24, 0x6D	; 109
    35f4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 52);
    35f8:	64 e3       	ldi	r22, 0x34	; 52
    35fa:	8d e6       	ldi	r24, 0x6D	; 109
    35fc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 51);
    3600:	63 e3       	ldi	r22, 0x33	; 51
    3602:	8d e6       	ldi	r24, 0x6D	; 109
    3604:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(108, 50);
    3608:	62 e3       	ldi	r22, 0x32	; 50
    360a:	8c e6       	ldi	r24, 0x6C	; 108
    360c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(107, 49);
    3610:	61 e3       	ldi	r22, 0x31	; 49
    3612:	8b e6       	ldi	r24, 0x6B	; 107
    3614:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(106, 48);
    3618:	60 e3       	ldi	r22, 0x30	; 48
    361a:	8a e6       	ldi	r24, 0x6A	; 106
    361c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	//облако№2
	LCD_12864_Draw_line(110, 55, 121, 55);
    3620:	27 e3       	ldi	r18, 0x37	; 55
    3622:	49 e7       	ldi	r20, 0x79	; 121
    3624:	67 e3       	ldi	r22, 0x37	; 55
    3626:	8e e6       	ldi	r24, 0x6E	; 110
    3628:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_pixel(122, 54);
    362c:	66 e3       	ldi	r22, 0x36	; 54
    362e:	8a e7       	ldi	r24, 0x7A	; 122
    3630:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(122, 53);
    3634:	65 e3       	ldi	r22, 0x35	; 53
    3636:	8a e7       	ldi	r24, 0x7A	; 122
    3638:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(122, 52);
    363c:	64 e3       	ldi	r22, 0x34	; 52
    363e:	8a e7       	ldi	r24, 0x7A	; 122
    3640:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(122, 51);
    3644:	63 e3       	ldi	r22, 0x33	; 51
    3646:	8a e7       	ldi	r24, 0x7A	; 122
    3648:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(121, 50);
    364c:	62 e3       	ldi	r22, 0x32	; 50
    364e:	89 e7       	ldi	r24, 0x79	; 121
    3650:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(120, 49);
    3654:	61 e3       	ldi	r22, 0x31	; 49
    3656:	88 e7       	ldi	r24, 0x78	; 120
    3658:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(119, 49);
    365c:	61 e3       	ldi	r22, 0x31	; 49
    365e:	87 e7       	ldi	r24, 0x77	; 119
    3660:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(118, 49);
    3664:	61 e3       	ldi	r22, 0x31	; 49
    3666:	86 e7       	ldi	r24, 0x76	; 118
    3668:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(117, 50);
    366c:	62 e3       	ldi	r22, 0x32	; 50
    366e:	85 e7       	ldi	r24, 0x75	; 117
    3670:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(118, 48);
    3674:	60 e3       	ldi	r22, 0x30	; 48
    3676:	86 e7       	ldi	r24, 0x76	; 118
    3678:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(118, 47);
    367c:	6f e2       	ldi	r22, 0x2F	; 47
    367e:	86 e7       	ldi	r24, 0x76	; 118
    3680:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(117, 46);
    3684:	6e e2       	ldi	r22, 0x2E	; 46
    3686:	85 e7       	ldi	r24, 0x75	; 117
    3688:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(116, 46);
    368c:	6e e2       	ldi	r22, 0x2E	; 46
    368e:	84 e7       	ldi	r24, 0x74	; 116
    3690:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	
	LCD_12864_Draw_pixel(115, 46);
    3694:	6e e2       	ldi	r22, 0x2E	; 46
    3696:	83 e7       	ldi	r24, 0x73	; 115
    3698:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(114, 46);
    369c:	6e e2       	ldi	r22, 0x2E	; 46
    369e:	82 e7       	ldi	r24, 0x72	; 114
    36a0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(113, 47);
    36a4:	6f e2       	ldi	r22, 0x2F	; 47
    36a6:	81 e7       	ldi	r24, 0x71	; 113
    36a8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(113, 48);
    36ac:	60 e3       	ldi	r22, 0x30	; 48
    36ae:	81 e7       	ldi	r24, 0x71	; 113
    36b0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(113, 49);
    36b4:	61 e3       	ldi	r22, 0x31	; 49
    36b6:	81 e7       	ldi	r24, 0x71	; 113
    36b8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(114, 50);
    36bc:	62 e3       	ldi	r22, 0x32	; 50
    36be:	82 e7       	ldi	r24, 0x72	; 114
    36c0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(112, 49);
    36c4:	61 e3       	ldi	r22, 0x31	; 49
    36c6:	80 e7       	ldi	r24, 0x70	; 112
    36c8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(111, 49);
    36cc:	61 e3       	ldi	r22, 0x31	; 49
    36ce:	8f e6       	ldi	r24, 0x6F	; 111
    36d0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(110, 50);
    36d4:	62 e3       	ldi	r22, 0x32	; 50
    36d6:	8e e6       	ldi	r24, 0x6E	; 110
    36d8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>

	LCD_12864_Draw_line(91, 59, 89, 61);
    36dc:	2d e3       	ldi	r18, 0x3D	; 61
    36de:	49 e5       	ldi	r20, 0x59	; 89
    36e0:	6b e3       	ldi	r22, 0x3B	; 59
    36e2:	8b e5       	ldi	r24, 0x5B	; 91
    36e4:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(94, 59, 92, 61);
    36e8:	2d e3       	ldi	r18, 0x3D	; 61
    36ea:	4c e5       	ldi	r20, 0x5C	; 92
    36ec:	6b e3       	ldi	r22, 0x3B	; 59
    36ee:	8e e5       	ldi	r24, 0x5E	; 94
    36f0:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(97, 59, 95, 61);
    36f4:	2d e3       	ldi	r18, 0x3D	; 61
    36f6:	4f e5       	ldi	r20, 0x5F	; 95
    36f8:	6b e3       	ldi	r22, 0x3B	; 59
    36fa:	81 e6       	ldi	r24, 0x61	; 97
    36fc:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(100, 59, 98, 61);
    3700:	2d e3       	ldi	r18, 0x3D	; 61
    3702:	42 e6       	ldi	r20, 0x62	; 98
    3704:	6b e3       	ldi	r22, 0x3B	; 59
    3706:	84 e6       	ldi	r24, 0x64	; 100
    3708:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(103, 59, 101, 61);
    370c:	2d e3       	ldi	r18, 0x3D	; 61
    370e:	45 e6       	ldi	r20, 0x65	; 101
    3710:	6b e3       	ldi	r22, 0x3B	; 59
    3712:	87 e6       	ldi	r24, 0x67	; 103
    3714:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(106, 59, 104, 61);
    3718:	2d e3       	ldi	r18, 0x3D	; 61
    371a:	48 e6       	ldi	r20, 0x68	; 104
    371c:	6b e3       	ldi	r22, 0x3B	; 59
    371e:	8a e6       	ldi	r24, 0x6A	; 106
    3720:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	
	LCD_12864_Draw_line(111, 57, 110, 58);
    3724:	2a e3       	ldi	r18, 0x3A	; 58
    3726:	4e e6       	ldi	r20, 0x6E	; 110
    3728:	69 e3       	ldi	r22, 0x39	; 57
    372a:	8f e6       	ldi	r24, 0x6F	; 111
    372c:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(114, 57, 113, 58);
    3730:	2a e3       	ldi	r18, 0x3A	; 58
    3732:	41 e7       	ldi	r20, 0x71	; 113
    3734:	69 e3       	ldi	r22, 0x39	; 57
    3736:	82 e7       	ldi	r24, 0x72	; 114
    3738:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(117, 57, 116, 58);
    373c:	2a e3       	ldi	r18, 0x3A	; 58
    373e:	44 e7       	ldi	r20, 0x74	; 116
    3740:	69 e3       	ldi	r22, 0x39	; 57
    3742:	85 e7       	ldi	r24, 0x75	; 117
    3744:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(120, 57, 119, 58);
    3748:	2a e3       	ldi	r18, 0x3A	; 58
    374a:	47 e7       	ldi	r20, 0x77	; 119
    374c:	69 e3       	ldi	r22, 0x39	; 57
    374e:	88 e7       	ldi	r24, 0x78	; 120
    3750:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
    3754:	08 95       	ret

00003756 <DrawWeatherVane>:
}
void DrawWeatherVane(void)
{
	LCD_12864_Draw_circle(11, 52, 9);
    3756:	49 e0       	ldi	r20, 0x09	; 9
    3758:	64 e3       	ldi	r22, 0x34	; 52
    375a:	8b e0       	ldi	r24, 0x0B	; 11
    375c:	0e 94 75 0b 	call	0x16ea	; 0x16ea <LCD_12864_Draw_circle>
	//---------N-----------------
	LCD_12864_Clean_pixel(11, 44);
    3760:	6c e2       	ldi	r22, 0x2C	; 44
    3762:	8b e0       	ldi	r24, 0x0B	; 11
    3764:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(10, 44);
    3768:	6c e2       	ldi	r22, 0x2C	; 44
    376a:	8a e0       	ldi	r24, 0x0A	; 10
    376c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(9, 44);
    3770:	6c e2       	ldi	r22, 0x2C	; 44
    3772:	89 e0       	ldi	r24, 0x09	; 9
    3774:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(8, 44);
    3778:	6c e2       	ldi	r22, 0x2C	; 44
    377a:	88 e0       	ldi	r24, 0x08	; 8
    377c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(12, 44);
    3780:	6c e2       	ldi	r22, 0x2C	; 44
    3782:	8c e0       	ldi	r24, 0x0C	; 12
    3784:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(13, 44);
    3788:	6c e2       	ldi	r22, 0x2C	; 44
    378a:	8d e0       	ldi	r24, 0x0D	; 13
    378c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(14, 44);
    3790:	6c e2       	ldi	r22, 0x2C	; 44
    3792:	8e e0       	ldi	r24, 0x0E	; 14
    3794:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(9, 43);
    3798:	6b e2       	ldi	r22, 0x2B	; 43
    379a:	89 e0       	ldi	r24, 0x09	; 9
    379c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 44);
    37a0:	6c e2       	ldi	r22, 0x2C	; 44
    37a2:	89 e0       	ldi	r24, 0x09	; 9
    37a4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 45);
    37a8:	6d e2       	ldi	r22, 0x2D	; 45
    37aa:	89 e0       	ldi	r24, 0x09	; 9
    37ac:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 42);
    37b0:	6a e2       	ldi	r22, 0x2A	; 42
    37b2:	89 e0       	ldi	r24, 0x09	; 9
    37b4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 41);
    37b8:	69 e2       	ldi	r22, 0x29	; 41
    37ba:	89 e0       	ldi	r24, 0x09	; 9
    37bc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 42);
    37c0:	6a e2       	ldi	r22, 0x2A	; 42
    37c2:	8a e0       	ldi	r24, 0x0A	; 10
    37c4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 43);
    37c8:	6b e2       	ldi	r22, 0x2B	; 43
    37ca:	8b e0       	ldi	r24, 0x0B	; 11
    37cc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 44);
    37d0:	6c e2       	ldi	r22, 0x2C	; 44
    37d2:	8c e0       	ldi	r24, 0x0C	; 12
    37d4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 43);
    37d8:	6b e2       	ldi	r22, 0x2B	; 43
    37da:	8d e0       	ldi	r24, 0x0D	; 13
    37dc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 44);
    37e0:	6c e2       	ldi	r22, 0x2C	; 44
    37e2:	8d e0       	ldi	r24, 0x0D	; 13
    37e4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 45);
    37e8:	6d e2       	ldi	r22, 0x2D	; 45
    37ea:	8d e0       	ldi	r24, 0x0D	; 13
    37ec:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 42);
    37f0:	6a e2       	ldi	r22, 0x2A	; 42
    37f2:	8d e0       	ldi	r24, 0x0D	; 13
    37f4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 41);
    37f8:	69 e2       	ldi	r22, 0x29	; 41
    37fa:	8d e0       	ldi	r24, 0x0D	; 13
    37fc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	//---------S-----------------
	LCD_12864_Clean_pixel(11, 61);
    3800:	6d e3       	ldi	r22, 0x3D	; 61
    3802:	8b e0       	ldi	r24, 0x0B	; 11
    3804:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(10, 61);
    3808:	6d e3       	ldi	r22, 0x3D	; 61
    380a:	8a e0       	ldi	r24, 0x0A	; 10
    380c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(9, 61);
    3810:	6d e3       	ldi	r22, 0x3D	; 61
    3812:	89 e0       	ldi	r24, 0x09	; 9
    3814:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(8, 61);
    3818:	6d e3       	ldi	r22, 0x3D	; 61
    381a:	88 e0       	ldi	r24, 0x08	; 8
    381c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(12, 61);
    3820:	6d e3       	ldi	r22, 0x3D	; 61
    3822:	8c e0       	ldi	r24, 0x0C	; 12
    3824:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(13, 61);
    3828:	6d e3       	ldi	r22, 0x3D	; 61
    382a:	8d e0       	ldi	r24, 0x0D	; 13
    382c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(14, 61);
    3830:	6d e3       	ldi	r22, 0x3D	; 61
    3832:	8e e0       	ldi	r24, 0x0E	; 14
    3834:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(9, 60);
    3838:	6c e3       	ldi	r22, 0x3C	; 60
    383a:	89 e0       	ldi	r24, 0x09	; 9
    383c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 63);
    3840:	6f e3       	ldi	r22, 0x3F	; 63
    3842:	89 e0       	ldi	r24, 0x09	; 9
    3844:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 61);
    3848:	6d e3       	ldi	r22, 0x3D	; 61
    384a:	8a e0       	ldi	r24, 0x0A	; 10
    384c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 59);
    3850:	6b e3       	ldi	r22, 0x3B	; 59
    3852:	8a e0       	ldi	r24, 0x0A	; 10
    3854:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 63);
    3858:	6f e3       	ldi	r22, 0x3F	; 63
    385a:	8a e0       	ldi	r24, 0x0A	; 10
    385c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 61);
    3860:	6d e3       	ldi	r22, 0x3D	; 61
    3862:	8b e0       	ldi	r24, 0x0B	; 11
    3864:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 59);
    3868:	6b e3       	ldi	r22, 0x3B	; 59
    386a:	8b e0       	ldi	r24, 0x0B	; 11
    386c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 63);
    3870:	6f e3       	ldi	r22, 0x3F	; 63
    3872:	8b e0       	ldi	r24, 0x0B	; 11
    3874:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 61);
    3878:	6d e3       	ldi	r22, 0x3D	; 61
    387a:	8c e0       	ldi	r24, 0x0C	; 12
    387c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 59);
    3880:	6b e3       	ldi	r22, 0x3B	; 59
    3882:	8c e0       	ldi	r24, 0x0C	; 12
    3884:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 63);
    3888:	6f e3       	ldi	r22, 0x3F	; 63
    388a:	8c e0       	ldi	r24, 0x0C	; 12
    388c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 62);
    3890:	6e e3       	ldi	r22, 0x3E	; 62
    3892:	8d e0       	ldi	r24, 0x0D	; 13
    3894:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 59);
    3898:	6b e3       	ldi	r22, 0x3B	; 59
    389a:	8d e0       	ldi	r24, 0x0D	; 13
    389c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	//---------E-----------------
	LCD_12864_Clean_pixel(20, 52);
    38a0:	64 e3       	ldi	r22, 0x34	; 52
    38a2:	84 e1       	ldi	r24, 0x14	; 20
    38a4:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(20, 53);
    38a8:	65 e3       	ldi	r22, 0x35	; 53
    38aa:	84 e1       	ldi	r24, 0x14	; 20
    38ac:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(20, 54);
    38b0:	66 e3       	ldi	r22, 0x36	; 54
    38b2:	84 e1       	ldi	r24, 0x14	; 20
    38b4:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(19, 55);
    38b8:	67 e3       	ldi	r22, 0x37	; 55
    38ba:	83 e1       	ldi	r24, 0x13	; 19
    38bc:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(19, 48);
    38c0:	60 e3       	ldi	r22, 0x30	; 48
    38c2:	83 e1       	ldi	r24, 0x13	; 19
    38c4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Clean_pixel(20, 51);
    38c8:	63 e3       	ldi	r22, 0x33	; 51
    38ca:	84 e1       	ldi	r24, 0x14	; 20
    38cc:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(20, 50);
    38d0:	62 e3       	ldi	r22, 0x32	; 50
    38d2:	84 e1       	ldi	r24, 0x14	; 20
    38d4:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(20, 52);
    38d8:	64 e3       	ldi	r22, 0x34	; 52
    38da:	84 e1       	ldi	r24, 0x14	; 20
    38dc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(20, 50);
    38e0:	62 e3       	ldi	r22, 0x32	; 50
    38e2:	84 e1       	ldi	r24, 0x14	; 20
    38e4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(20, 54);
    38e8:	66 e3       	ldi	r22, 0x36	; 54
    38ea:	84 e1       	ldi	r24, 0x14	; 20
    38ec:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(21, 52);
    38f0:	64 e3       	ldi	r22, 0x34	; 52
    38f2:	85 e1       	ldi	r24, 0x15	; 21
    38f4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(21, 50);
    38f8:	62 e3       	ldi	r22, 0x32	; 50
    38fa:	85 e1       	ldi	r24, 0x15	; 21
    38fc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(21, 54);
    3900:	66 e3       	ldi	r22, 0x36	; 54
    3902:	85 e1       	ldi	r24, 0x15	; 21
    3904:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(22, 52);
    3908:	64 e3       	ldi	r22, 0x34	; 52
    390a:	86 e1       	ldi	r24, 0x16	; 22
    390c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(22, 50);
    3910:	62 e3       	ldi	r22, 0x32	; 50
    3912:	86 e1       	ldi	r24, 0x16	; 22
    3914:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(22, 54);
    3918:	66 e3       	ldi	r22, 0x36	; 54
    391a:	86 e1       	ldi	r24, 0x16	; 22
    391c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(19, 52);
    3920:	64 e3       	ldi	r22, 0x34	; 52
    3922:	83 e1       	ldi	r24, 0x13	; 19
    3924:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(19, 50);
    3928:	62 e3       	ldi	r22, 0x32	; 50
    392a:	83 e1       	ldi	r24, 0x13	; 19
    392c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(19, 54);
    3930:	66 e3       	ldi	r22, 0x36	; 54
    3932:	83 e1       	ldi	r24, 0x13	; 19
    3934:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 52);
    3938:	64 e3       	ldi	r22, 0x34	; 52
    393a:	82 e1       	ldi	r24, 0x12	; 18
    393c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 53);
    3940:	65 e3       	ldi	r22, 0x35	; 53
    3942:	82 e1       	ldi	r24, 0x12	; 18
    3944:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 54);
    3948:	66 e3       	ldi	r22, 0x36	; 54
    394a:	82 e1       	ldi	r24, 0x12	; 18
    394c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 51);
    3950:	63 e3       	ldi	r22, 0x33	; 51
    3952:	82 e1       	ldi	r24, 0x12	; 18
    3954:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 50);
    3958:	62 e3       	ldi	r22, 0x32	; 50
    395a:	82 e1       	ldi	r24, 0x12	; 18
    395c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	//---------W-----------------
	LCD_12864_Clean_pixel(2, 52);
    3960:	64 e3       	ldi	r22, 0x34	; 52
    3962:	82 e0       	ldi	r24, 0x02	; 2
    3964:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(2, 53);
    3968:	65 e3       	ldi	r22, 0x35	; 53
    396a:	82 e0       	ldi	r24, 0x02	; 2
    396c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(2, 54);
    3970:	66 e3       	ldi	r22, 0x36	; 54
    3972:	82 e0       	ldi	r24, 0x02	; 2
    3974:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(3, 55);
    3978:	67 e3       	ldi	r22, 0x37	; 55
    397a:	83 e0       	ldi	r24, 0x03	; 3
    397c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(3, 48);
    3980:	60 e3       	ldi	r22, 0x30	; 48
    3982:	83 e0       	ldi	r24, 0x03	; 3
    3984:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Clean_pixel(2, 51);
    3988:	63 e3       	ldi	r22, 0x33	; 51
    398a:	82 e0       	ldi	r24, 0x02	; 2
    398c:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(2, 50);
    3990:	62 e3       	ldi	r22, 0x32	; 50
    3992:	82 e0       	ldi	r24, 0x02	; 2
    3994:	0e 94 17 04 	call	0x82e	; 0x82e <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(2, 52);
    3998:	64 e3       	ldi	r22, 0x34	; 52
    399a:	82 e0       	ldi	r24, 0x02	; 2
    399c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(2, 53);
    39a0:	65 e3       	ldi	r22, 0x35	; 53
    39a2:	82 e0       	ldi	r24, 0x02	; 2
    39a4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(3, 54);
    39a8:	66 e3       	ldi	r22, 0x36	; 54
    39aa:	83 e0       	ldi	r24, 0x03	; 3
    39ac:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 52);
    39b0:	64 e3       	ldi	r22, 0x34	; 52
    39b2:	84 e0       	ldi	r24, 0x04	; 4
    39b4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 53);
    39b8:	65 e3       	ldi	r22, 0x35	; 53
    39ba:	84 e0       	ldi	r24, 0x04	; 4
    39bc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 51);
    39c0:	63 e3       	ldi	r22, 0x33	; 51
    39c2:	84 e0       	ldi	r24, 0x04	; 4
    39c4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 50);
    39c8:	62 e3       	ldi	r22, 0x32	; 50
    39ca:	84 e0       	ldi	r24, 0x04	; 4
    39cc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(1, 54);
    39d0:	66 e3       	ldi	r22, 0x36	; 54
    39d2:	81 e0       	ldi	r24, 0x01	; 1
    39d4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 52);
    39d8:	64 e3       	ldi	r22, 0x34	; 52
    39da:	80 e0       	ldi	r24, 0x00	; 0
    39dc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 53);
    39e0:	65 e3       	ldi	r22, 0x35	; 53
    39e2:	80 e0       	ldi	r24, 0x00	; 0
    39e4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 51);
    39e8:	63 e3       	ldi	r22, 0x33	; 51
    39ea:	80 e0       	ldi	r24, 0x00	; 0
    39ec:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 50);
    39f0:	62 e3       	ldi	r22, 0x32	; 50
    39f2:	80 e0       	ldi	r24, 0x00	; 0
    39f4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	//---------Стрелка-----------------
	//--точка в центре---
	LCD_12864_Draw_pixel(11, 52);
    39f8:	64 e3       	ldi	r22, 0x34	; 52
    39fa:	8b e0       	ldi	r24, 0x0B	; 11
    39fc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	if (!strcmp(wind_direction, "N"))
    3a00:	6f e7       	ldi	r22, 0x7F	; 127
    3a02:	71 e0       	ldi	r23, 0x01	; 1
    3a04:	8b e4       	ldi	r24, 0x4B	; 75
    3a06:	92 e0       	ldi	r25, 0x02	; 2
    3a08:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3a0c:	89 2b       	or	r24, r25
    3a0e:	09 f0       	breq	.+2      	; 0x3a12 <DrawWeatherVane+0x2bc>
    3a10:	41 c0       	rjmp	.+130    	; 0x3a94 <DrawWeatherVane+0x33e>
	{
		LCD_12864_Draw_pixel(10, 53);
    3a12:	65 e3       	ldi	r22, 0x35	; 53
    3a14:	8a e0       	ldi	r24, 0x0A	; 10
    3a16:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 54);
    3a1a:	66 e3       	ldi	r22, 0x36	; 54
    3a1c:	8a e0       	ldi	r24, 0x0A	; 10
    3a1e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3a22:	65 e3       	ldi	r22, 0x35	; 53
    3a24:	8c e0       	ldi	r24, 0x0C	; 12
    3a26:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 54);
    3a2a:	66 e3       	ldi	r22, 0x36	; 54
    3a2c:	8c e0       	ldi	r24, 0x0C	; 12
    3a2e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 51);
    3a32:	63 e3       	ldi	r22, 0x33	; 51
    3a34:	8b e0       	ldi	r24, 0x0B	; 11
    3a36:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 50);
    3a3a:	62 e3       	ldi	r22, 0x32	; 50
    3a3c:	8b e0       	ldi	r24, 0x0B	; 11
    3a3e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 49);
    3a42:	61 e3       	ldi	r22, 0x31	; 49
    3a44:	8b e0       	ldi	r24, 0x0B	; 11
    3a46:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 48);
    3a4a:	60 e3       	ldi	r22, 0x30	; 48
    3a4c:	8b e0       	ldi	r24, 0x0B	; 11
    3a4e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 47);
    3a52:	6f e2       	ldi	r22, 0x2F	; 47
    3a54:	8b e0       	ldi	r24, 0x0B	; 11
    3a56:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 46);
    3a5a:	6e e2       	ldi	r22, 0x2E	; 46
    3a5c:	8b e0       	ldi	r24, 0x0B	; 11
    3a5e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 47);
    3a62:	6f e2       	ldi	r22, 0x2F	; 47
    3a64:	8a e0       	ldi	r24, 0x0A	; 10
    3a66:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 47);
    3a6a:	6f e2       	ldi	r22, 0x2F	; 47
    3a6c:	8c e0       	ldi	r24, 0x0C	; 12
    3a6e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 48);
    3a72:	60 e3       	ldi	r22, 0x30	; 48
    3a74:	8a e0       	ldi	r24, 0x0A	; 10
    3a76:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 48);
    3a7a:	60 e3       	ldi	r22, 0x30	; 48
    3a7c:	89 e0       	ldi	r24, 0x09	; 9
    3a7e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 48);
    3a82:	60 e3       	ldi	r22, 0x30	; 48
    3a84:	8c e0       	ldi	r24, 0x0C	; 12
    3a86:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 48);
    3a8a:	60 e3       	ldi	r22, 0x30	; 48
    3a8c:	8d e0       	ldi	r24, 0x0D	; 13
    3a8e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3a92:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "S"))
    3a94:	61 e8       	ldi	r22, 0x81	; 129
    3a96:	71 e0       	ldi	r23, 0x01	; 1
    3a98:	8b e4       	ldi	r24, 0x4B	; 75
    3a9a:	92 e0       	ldi	r25, 0x02	; 2
    3a9c:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3aa0:	89 2b       	or	r24, r25
    3aa2:	09 f0       	breq	.+2      	; 0x3aa6 <DrawWeatherVane+0x350>
    3aa4:	41 c0       	rjmp	.+130    	; 0x3b28 <DrawWeatherVane+0x3d2>
	{
		LCD_12864_Draw_pixel(10, 50);
    3aa6:	62 e3       	ldi	r22, 0x32	; 50
    3aa8:	8a e0       	ldi	r24, 0x0A	; 10
    3aaa:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 51);
    3aae:	63 e3       	ldi	r22, 0x33	; 51
    3ab0:	8a e0       	ldi	r24, 0x0A	; 10
    3ab2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 50);
    3ab6:	62 e3       	ldi	r22, 0x32	; 50
    3ab8:	8c e0       	ldi	r24, 0x0C	; 12
    3aba:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 51);
    3abe:	63 e3       	ldi	r22, 0x33	; 51
    3ac0:	8c e0       	ldi	r24, 0x0C	; 12
    3ac2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 53);
    3ac6:	65 e3       	ldi	r22, 0x35	; 53
    3ac8:	8b e0       	ldi	r24, 0x0B	; 11
    3aca:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 54);
    3ace:	66 e3       	ldi	r22, 0x36	; 54
    3ad0:	8b e0       	ldi	r24, 0x0B	; 11
    3ad2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 55);
    3ad6:	67 e3       	ldi	r22, 0x37	; 55
    3ad8:	8b e0       	ldi	r24, 0x0B	; 11
    3ada:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 56);
    3ade:	68 e3       	ldi	r22, 0x38	; 56
    3ae0:	8b e0       	ldi	r24, 0x0B	; 11
    3ae2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 57);
    3ae6:	69 e3       	ldi	r22, 0x39	; 57
    3ae8:	8b e0       	ldi	r24, 0x0B	; 11
    3aea:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 58);
    3aee:	6a e3       	ldi	r22, 0x3A	; 58
    3af0:	8b e0       	ldi	r24, 0x0B	; 11
    3af2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 57);
    3af6:	69 e3       	ldi	r22, 0x39	; 57
    3af8:	8a e0       	ldi	r24, 0x0A	; 10
    3afa:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 57);
    3afe:	69 e3       	ldi	r22, 0x39	; 57
    3b00:	8c e0       	ldi	r24, 0x0C	; 12
    3b02:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 56);
    3b06:	68 e3       	ldi	r22, 0x38	; 56
    3b08:	8a e0       	ldi	r24, 0x0A	; 10
    3b0a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 56);
    3b0e:	68 e3       	ldi	r22, 0x38	; 56
    3b10:	89 e0       	ldi	r24, 0x09	; 9
    3b12:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 56);
    3b16:	68 e3       	ldi	r22, 0x38	; 56
    3b18:	8c e0       	ldi	r24, 0x0C	; 12
    3b1a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 56);
    3b1e:	68 e3       	ldi	r22, 0x38	; 56
    3b20:	8d e0       	ldi	r24, 0x0D	; 13
    3b22:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3b26:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "E"))
    3b28:	65 e8       	ldi	r22, 0x85	; 133
    3b2a:	71 e0       	ldi	r23, 0x01	; 1
    3b2c:	8b e4       	ldi	r24, 0x4B	; 75
    3b2e:	92 e0       	ldi	r25, 0x02	; 2
    3b30:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3b34:	89 2b       	or	r24, r25
    3b36:	09 f0       	breq	.+2      	; 0x3b3a <DrawWeatherVane+0x3e4>
    3b38:	41 c0       	rjmp	.+130    	; 0x3bbc <DrawWeatherVane+0x466>
	{
		LCD_12864_Draw_pixel(9, 51);
    3b3a:	63 e3       	ldi	r22, 0x33	; 51
    3b3c:	89 e0       	ldi	r24, 0x09	; 9
    3b3e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 51);
    3b42:	63 e3       	ldi	r22, 0x33	; 51
    3b44:	8a e0       	ldi	r24, 0x0A	; 10
    3b46:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 53);
    3b4a:	65 e3       	ldi	r22, 0x35	; 53
    3b4c:	89 e0       	ldi	r24, 0x09	; 9
    3b4e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 53);
    3b52:	65 e3       	ldi	r22, 0x35	; 53
    3b54:	8a e0       	ldi	r24, 0x0A	; 10
    3b56:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 52);
    3b5a:	64 e3       	ldi	r22, 0x34	; 52
    3b5c:	8c e0       	ldi	r24, 0x0C	; 12
    3b5e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 52);
    3b62:	64 e3       	ldi	r22, 0x34	; 52
    3b64:	8d e0       	ldi	r24, 0x0D	; 13
    3b66:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 52);
    3b6a:	64 e3       	ldi	r22, 0x34	; 52
    3b6c:	8e e0       	ldi	r24, 0x0E	; 14
    3b6e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 52);
    3b72:	64 e3       	ldi	r22, 0x34	; 52
    3b74:	8f e0       	ldi	r24, 0x0F	; 15
    3b76:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 52);
    3b7a:	64 e3       	ldi	r22, 0x34	; 52
    3b7c:	80 e1       	ldi	r24, 0x10	; 16
    3b7e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(17, 52);
    3b82:	64 e3       	ldi	r22, 0x34	; 52
    3b84:	81 e1       	ldi	r24, 0x11	; 17
    3b86:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 51);
    3b8a:	63 e3       	ldi	r22, 0x33	; 51
    3b8c:	80 e1       	ldi	r24, 0x10	; 16
    3b8e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 53);
    3b92:	65 e3       	ldi	r22, 0x35	; 53
    3b94:	80 e1       	ldi	r24, 0x10	; 16
    3b96:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 53);
    3b9a:	65 e3       	ldi	r22, 0x35	; 53
    3b9c:	8f e0       	ldi	r24, 0x0F	; 15
    3b9e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 54);
    3ba2:	66 e3       	ldi	r22, 0x36	; 54
    3ba4:	8f e0       	ldi	r24, 0x0F	; 15
    3ba6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 51);
    3baa:	63 e3       	ldi	r22, 0x33	; 51
    3bac:	8f e0       	ldi	r24, 0x0F	; 15
    3bae:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 50);
    3bb2:	62 e3       	ldi	r22, 0x32	; 50
    3bb4:	8f e0       	ldi	r24, 0x0F	; 15
    3bb6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3bba:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "W"))
    3bbc:	69 e8       	ldi	r22, 0x89	; 137
    3bbe:	71 e0       	ldi	r23, 0x01	; 1
    3bc0:	8b e4       	ldi	r24, 0x4B	; 75
    3bc2:	92 e0       	ldi	r25, 0x02	; 2
    3bc4:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3bc8:	89 2b       	or	r24, r25
    3bca:	09 f0       	breq	.+2      	; 0x3bce <DrawWeatherVane+0x478>
    3bcc:	41 c0       	rjmp	.+130    	; 0x3c50 <DrawWeatherVane+0x4fa>
	{
		LCD_12864_Draw_pixel(13, 51);
    3bce:	63 e3       	ldi	r22, 0x33	; 51
    3bd0:	8d e0       	ldi	r24, 0x0D	; 13
    3bd2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 51);
    3bd6:	63 e3       	ldi	r22, 0x33	; 51
    3bd8:	8c e0       	ldi	r24, 0x0C	; 12
    3bda:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 53);
    3bde:	65 e3       	ldi	r22, 0x35	; 53
    3be0:	8d e0       	ldi	r24, 0x0D	; 13
    3be2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3be6:	65 e3       	ldi	r22, 0x35	; 53
    3be8:	8c e0       	ldi	r24, 0x0C	; 12
    3bea:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 52);
    3bee:	64 e3       	ldi	r22, 0x34	; 52
    3bf0:	8a e0       	ldi	r24, 0x0A	; 10
    3bf2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 52);
    3bf6:	64 e3       	ldi	r22, 0x34	; 52
    3bf8:	89 e0       	ldi	r24, 0x09	; 9
    3bfa:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 52);
    3bfe:	64 e3       	ldi	r22, 0x34	; 52
    3c00:	88 e0       	ldi	r24, 0x08	; 8
    3c02:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 52);
    3c06:	64 e3       	ldi	r22, 0x34	; 52
    3c08:	87 e0       	ldi	r24, 0x07	; 7
    3c0a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 52);
    3c0e:	64 e3       	ldi	r22, 0x34	; 52
    3c10:	86 e0       	ldi	r24, 0x06	; 6
    3c12:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(5, 52);
    3c16:	64 e3       	ldi	r22, 0x34	; 52
    3c18:	85 e0       	ldi	r24, 0x05	; 5
    3c1a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 51);
    3c1e:	63 e3       	ldi	r22, 0x33	; 51
    3c20:	86 e0       	ldi	r24, 0x06	; 6
    3c22:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 53);
    3c26:	65 e3       	ldi	r22, 0x35	; 53
    3c28:	86 e0       	ldi	r24, 0x06	; 6
    3c2a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 53);
    3c2e:	65 e3       	ldi	r22, 0x35	; 53
    3c30:	87 e0       	ldi	r24, 0x07	; 7
    3c32:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 54);
    3c36:	66 e3       	ldi	r22, 0x36	; 54
    3c38:	87 e0       	ldi	r24, 0x07	; 7
    3c3a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 51);
    3c3e:	63 e3       	ldi	r22, 0x33	; 51
    3c40:	87 e0       	ldi	r24, 0x07	; 7
    3c42:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 50);
    3c46:	62 e3       	ldi	r22, 0x32	; 50
    3c48:	87 e0       	ldi	r24, 0x07	; 7
    3c4a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3c4e:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "N-E"))
    3c50:	63 e8       	ldi	r22, 0x83	; 131
    3c52:	71 e0       	ldi	r23, 0x01	; 1
    3c54:	8b e4       	ldi	r24, 0x4B	; 75
    3c56:	92 e0       	ldi	r25, 0x02	; 2
    3c58:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3c5c:	89 2b       	or	r24, r25
    3c5e:	b9 f5       	brne	.+110    	; 0x3cce <DrawWeatherVane+0x578>
	{
		LCD_12864_Draw_pixel(10, 51);
    3c60:	63 e3       	ldi	r22, 0x33	; 51
    3c62:	8a e0       	ldi	r24, 0x0A	; 10
    3c64:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 52);
    3c68:	64 e3       	ldi	r22, 0x34	; 52
    3c6a:	89 e0       	ldi	r24, 0x09	; 9
    3c6c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3c70:	65 e3       	ldi	r22, 0x35	; 53
    3c72:	8c e0       	ldi	r24, 0x0C	; 12
    3c74:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 54);
    3c78:	66 e3       	ldi	r22, 0x36	; 54
    3c7a:	8b e0       	ldi	r24, 0x0B	; 11
    3c7c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 16, 47);
    3c80:	2f e2       	ldi	r18, 0x2F	; 47
    3c82:	40 e1       	ldi	r20, 0x10	; 16
    3c84:	64 e3       	ldi	r22, 0x34	; 52
    3c86:	8b e0       	ldi	r24, 0x0B	; 11
    3c88:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(15, 47);
    3c8c:	6f e2       	ldi	r22, 0x2F	; 47
    3c8e:	8f e0       	ldi	r24, 0x0F	; 15
    3c90:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 47);
    3c94:	6f e2       	ldi	r22, 0x2F	; 47
    3c96:	8e e0       	ldi	r24, 0x0E	; 14
    3c98:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 47);
    3c9c:	6f e2       	ldi	r22, 0x2F	; 47
    3c9e:	8d e0       	ldi	r24, 0x0D	; 13
    3ca0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 48);
    3ca4:	60 e3       	ldi	r22, 0x30	; 48
    3ca6:	8e e0       	ldi	r24, 0x0E	; 14
    3ca8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 48);
    3cac:	60 e3       	ldi	r22, 0x30	; 48
    3cae:	80 e1       	ldi	r24, 0x10	; 16
    3cb0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 49);
    3cb4:	61 e3       	ldi	r22, 0x31	; 49
    3cb6:	80 e1       	ldi	r24, 0x10	; 16
    3cb8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 49);
    3cbc:	61 e3       	ldi	r22, 0x31	; 49
    3cbe:	8f e0       	ldi	r24, 0x0F	; 15
    3cc0:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 50);
    3cc4:	62 e3       	ldi	r22, 0x32	; 50
    3cc6:	80 e1       	ldi	r24, 0x10	; 16
    3cc8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3ccc:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "N-W"))
    3cce:	67 e8       	ldi	r22, 0x87	; 135
    3cd0:	71 e0       	ldi	r23, 0x01	; 1
    3cd2:	8b e4       	ldi	r24, 0x4B	; 75
    3cd4:	92 e0       	ldi	r25, 0x02	; 2
    3cd6:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3cda:	89 2b       	or	r24, r25
    3cdc:	b9 f5       	brne	.+110    	; 0x3d4c <DrawWeatherVane+0x5f6>
	{
		LCD_12864_Draw_pixel(12, 51);
    3cde:	63 e3       	ldi	r22, 0x33	; 51
    3ce0:	8c e0       	ldi	r24, 0x0C	; 12
    3ce2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 52);
    3ce6:	64 e3       	ldi	r22, 0x34	; 52
    3ce8:	8d e0       	ldi	r24, 0x0D	; 13
    3cea:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 53);
    3cee:	65 e3       	ldi	r22, 0x35	; 53
    3cf0:	8a e0       	ldi	r24, 0x0A	; 10
    3cf2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 54);
    3cf6:	66 e3       	ldi	r22, 0x36	; 54
    3cf8:	8b e0       	ldi	r24, 0x0B	; 11
    3cfa:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 6, 47);
    3cfe:	2f e2       	ldi	r18, 0x2F	; 47
    3d00:	46 e0       	ldi	r20, 0x06	; 6
    3d02:	64 e3       	ldi	r22, 0x34	; 52
    3d04:	8b e0       	ldi	r24, 0x0B	; 11
    3d06:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(7, 47);
    3d0a:	6f e2       	ldi	r22, 0x2F	; 47
    3d0c:	87 e0       	ldi	r24, 0x07	; 7
    3d0e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 47);
    3d12:	6f e2       	ldi	r22, 0x2F	; 47
    3d14:	88 e0       	ldi	r24, 0x08	; 8
    3d16:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 47);
    3d1a:	6f e2       	ldi	r22, 0x2F	; 47
    3d1c:	89 e0       	ldi	r24, 0x09	; 9
    3d1e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 48);
    3d22:	60 e3       	ldi	r22, 0x30	; 48
    3d24:	88 e0       	ldi	r24, 0x08	; 8
    3d26:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 48);
    3d2a:	60 e3       	ldi	r22, 0x30	; 48
    3d2c:	86 e0       	ldi	r24, 0x06	; 6
    3d2e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 49);
    3d32:	61 e3       	ldi	r22, 0x31	; 49
    3d34:	86 e0       	ldi	r24, 0x06	; 6
    3d36:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 50);
    3d3a:	62 e3       	ldi	r22, 0x32	; 50
    3d3c:	86 e0       	ldi	r24, 0x06	; 6
    3d3e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 49);
    3d42:	61 e3       	ldi	r22, 0x31	; 49
    3d44:	87 e0       	ldi	r24, 0x07	; 7
    3d46:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3d4a:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "S-E"))
    3d4c:	6b e8       	ldi	r22, 0x8B	; 139
    3d4e:	71 e0       	ldi	r23, 0x01	; 1
    3d50:	8b e4       	ldi	r24, 0x4B	; 75
    3d52:	92 e0       	ldi	r25, 0x02	; 2
    3d54:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3d58:	89 2b       	or	r24, r25
    3d5a:	b9 f5       	brne	.+110    	; 0x3dca <DrawWeatherVane+0x674>
	{
		LCD_12864_Draw_pixel(11, 50);
    3d5c:	62 e3       	ldi	r22, 0x32	; 50
    3d5e:	8b e0       	ldi	r24, 0x0B	; 11
    3d60:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 51);
    3d64:	63 e3       	ldi	r22, 0x33	; 51
    3d66:	8c e0       	ldi	r24, 0x0C	; 12
    3d68:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 53);
    3d6c:	65 e3       	ldi	r22, 0x35	; 53
    3d6e:	8a e0       	ldi	r24, 0x0A	; 10
    3d70:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 52);
    3d74:	64 e3       	ldi	r22, 0x34	; 52
    3d76:	89 e0       	ldi	r24, 0x09	; 9
    3d78:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 16, 57);
    3d7c:	29 e3       	ldi	r18, 0x39	; 57
    3d7e:	40 e1       	ldi	r20, 0x10	; 16
    3d80:	64 e3       	ldi	r22, 0x34	; 52
    3d82:	8b e0       	ldi	r24, 0x0B	; 11
    3d84:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(16, 56);
    3d88:	68 e3       	ldi	r22, 0x38	; 56
    3d8a:	80 e1       	ldi	r24, 0x10	; 16
    3d8c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 57);
    3d90:	69 e3       	ldi	r22, 0x39	; 57
    3d92:	8f e0       	ldi	r24, 0x0F	; 15
    3d94:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 55);
    3d98:	67 e3       	ldi	r22, 0x37	; 55
    3d9a:	8f e0       	ldi	r24, 0x0F	; 15
    3d9c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 55);
    3da0:	67 e3       	ldi	r22, 0x37	; 55
    3da2:	80 e1       	ldi	r24, 0x10	; 16
    3da4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 54);
    3da8:	66 e3       	ldi	r22, 0x36	; 54
    3daa:	80 e1       	ldi	r24, 0x10	; 16
    3dac:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 56);
    3db0:	68 e3       	ldi	r22, 0x38	; 56
    3db2:	8e e0       	ldi	r24, 0x0E	; 14
    3db4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 57);
    3db8:	69 e3       	ldi	r22, 0x39	; 57
    3dba:	8e e0       	ldi	r24, 0x0E	; 14
    3dbc:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 57);
    3dc0:	69 e3       	ldi	r22, 0x39	; 57
    3dc2:	8d e0       	ldi	r24, 0x0D	; 13
    3dc4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3dc8:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "S-W"))
    3dca:	6f e8       	ldi	r22, 0x8F	; 143
    3dcc:	71 e0       	ldi	r23, 0x01	; 1
    3dce:	8b e4       	ldi	r24, 0x4B	; 75
    3dd0:	92 e0       	ldi	r25, 0x02	; 2
    3dd2:	0e 94 47 2c 	call	0x588e	; 0x588e <strcmp>
    3dd6:	89 2b       	or	r24, r25
    3dd8:	b1 f5       	brne	.+108    	; 0x3e46 <DrawWeatherVane+0x6f0>
	{
		LCD_12864_Draw_pixel(11, 50);
    3dda:	62 e3       	ldi	r22, 0x32	; 50
    3ddc:	8b e0       	ldi	r24, 0x0B	; 11
    3dde:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 51);
    3de2:	63 e3       	ldi	r22, 0x33	; 51
    3de4:	8a e0       	ldi	r24, 0x0A	; 10
    3de6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 52);
    3dea:	64 e3       	ldi	r22, 0x34	; 52
    3dec:	8d e0       	ldi	r24, 0x0D	; 13
    3dee:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3df2:	65 e3       	ldi	r22, 0x35	; 53
    3df4:	8c e0       	ldi	r24, 0x0C	; 12
    3df6:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 6, 57);
    3dfa:	29 e3       	ldi	r18, 0x39	; 57
    3dfc:	46 e0       	ldi	r20, 0x06	; 6
    3dfe:	64 e3       	ldi	r22, 0x34	; 52
    3e00:	8b e0       	ldi	r24, 0x0B	; 11
    3e02:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(6, 56);
    3e06:	68 e3       	ldi	r22, 0x38	; 56
    3e08:	86 e0       	ldi	r24, 0x06	; 6
    3e0a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 55);
    3e0e:	67 e3       	ldi	r22, 0x37	; 55
    3e10:	86 e0       	ldi	r24, 0x06	; 6
    3e12:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 55);
    3e16:	67 e3       	ldi	r22, 0x37	; 55
    3e18:	87 e0       	ldi	r24, 0x07	; 7
    3e1a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 54);
    3e1e:	66 e3       	ldi	r22, 0x36	; 54
    3e20:	86 e0       	ldi	r24, 0x06	; 6
    3e22:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 57);
    3e26:	69 e3       	ldi	r22, 0x39	; 57
    3e28:	87 e0       	ldi	r24, 0x07	; 7
    3e2a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 57);
    3e2e:	69 e3       	ldi	r22, 0x39	; 57
    3e30:	88 e0       	ldi	r24, 0x08	; 8
    3e32:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 56);
    3e36:	68 e3       	ldi	r22, 0x38	; 56
    3e38:	88 e0       	ldi	r24, 0x08	; 8
    3e3a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 57);
    3e3e:	69 e3       	ldi	r22, 0x39	; 57
    3e40:	89 e0       	ldi	r24, 0x09	; 9
    3e42:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
    3e46:	08 95       	ret

00003e48 <Clock>:
	else {}
}
void Clock (void)
{		
	//Читаем время (для DS3231) - по сути функция RTC_read_time
	I2C_StartCondition();               // запуск i2c
    3e48:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(0b11010000);			// передача адреса устройства, режим записи
    3e4c:	80 ed       	ldi	r24, 0xD0	; 208
    3e4e:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_SendByte(0x00);				    // передача адреса памяти
    3e52:	80 e0       	ldi	r24, 0x00	; 0
    3e54:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    3e58:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>
	
	I2C_StartCondition();               // запуск i2c
    3e5c:	0e 94 95 19 	call	0x332a	; 0x332a <I2C_StartCondition>
	I2C_SendByte(0b11010001);			// передача адреса устройства, режим чтения
    3e60:	81 ed       	ldi	r24, 0xD1	; 209
    3e62:	0e 94 a1 19 	call	0x3342	; 0x3342 <I2C_SendByte>
	sec = RTC_ConvertFromDec(I2C_ReadByte());     // чтение секунд, ACK
    3e66:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
    3e6a:	0e 94 30 19 	call	0x3260	; 0x3260 <RTC_ConvertFromDec>
    3e6e:	80 93 ea 06 	sts	0x06EA, r24	; 0x8006ea <sec>
	min = RTC_ConvertFromDec(I2C_ReadByte());     // чтение минут, ACK
    3e72:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
    3e76:	0e 94 30 19 	call	0x3260	; 0x3260 <RTC_ConvertFromDec>
    3e7a:	80 93 e4 06 	sts	0x06E4, r24	; 0x8006e4 <min>
	hour = RTC_ConvertFromDec(I2C_ReadByte());    // чтение часов, ACK
    3e7e:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
    3e82:	0e 94 30 19 	call	0x3260	; 0x3260 <RTC_ConvertFromDec>
    3e86:	80 93 dd 06 	sts	0x06DD, r24	; 0x8006dd <hour>
	day = RTC_ConvertFromDec(I2C_ReadByte());     // чтение день недели, ACK
    3e8a:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
    3e8e:	0e 94 30 19 	call	0x3260	; 0x3260 <RTC_ConvertFromDec>
    3e92:	80 93 eb 06 	sts	0x06EB, r24	; 0x8006eb <day>
	date = RTC_ConvertFromDec(I2C_ReadByte());    // чтение число, ACK
    3e96:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
    3e9a:	0e 94 30 19 	call	0x3260	; 0x3260 <RTC_ConvertFromDec>
    3e9e:	80 93 ed 06 	sts	0x06ED, r24	; 0x8006ed <date>
	month = RTC_ConvertFromDec(I2C_ReadByte());   // чтение месяц, ACK
    3ea2:	0e 94 ab 19 	call	0x3356	; 0x3356 <I2C_ReadByte>
    3ea6:	0e 94 30 19 	call	0x3260	; 0x3260 <RTC_ConvertFromDec>
    3eaa:	80 93 dc 06 	sts	0x06DC, r24	; 0x8006dc <month>
	year = RTC_ConvertFromDec(I2C_ReadLastByte());// чтение год, NACK
    3eae:	0e 94 b5 19 	call	0x336a	; 0x336a <I2C_ReadLastByte>
    3eb2:	0e 94 30 19 	call	0x3260	; 0x3260 <RTC_ConvertFromDec>
    3eb6:	80 93 e9 06 	sts	0x06E9, r24	; 0x8006e9 <year>
	I2C_StopCondition();                // остановка i2c
    3eba:	0e 94 9d 19 	call	0x333a	; 0x333a <I2C_StopCondition>
	
	if ((sec >= 0) && (sec <= 9)) {
    3ebe:	80 91 ea 06 	lds	r24, 0x06EA	; 0x8006ea <sec>
    3ec2:	8a 30       	cpi	r24, 0x0A	; 10
    3ec4:	98 f4       	brcc	.+38     	; 0x3eec <Clock+0xa4>
		sprintf(seconds,"0%d",sec);
    3ec6:	1f 92       	push	r1
    3ec8:	8f 93       	push	r24
    3eca:	83 e9       	ldi	r24, 0x93	; 147
    3ecc:	91 e0       	ldi	r25, 0x01	; 1
    3ece:	9f 93       	push	r25
    3ed0:	8f 93       	push	r24
    3ed2:	8b ec       	ldi	r24, 0xCB	; 203
    3ed4:	96 e0       	ldi	r25, 0x06	; 6
    3ed6:	9f 93       	push	r25
    3ed8:	8f 93       	push	r24
    3eda:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3ede:	0f 90       	pop	r0
    3ee0:	0f 90       	pop	r0
    3ee2:	0f 90       	pop	r0
    3ee4:	0f 90       	pop	r0
    3ee6:	0f 90       	pop	r0
    3ee8:	0f 90       	pop	r0
    3eea:	12 c0       	rjmp	.+36     	; 0x3f10 <Clock+0xc8>
	}
	else {
		sprintf(seconds,"%d",sec);
    3eec:	1f 92       	push	r1
    3eee:	8f 93       	push	r24
    3ef0:	84 e9       	ldi	r24, 0x94	; 148
    3ef2:	91 e0       	ldi	r25, 0x01	; 1
    3ef4:	9f 93       	push	r25
    3ef6:	8f 93       	push	r24
    3ef8:	8b ec       	ldi	r24, 0xCB	; 203
    3efa:	96 e0       	ldi	r25, 0x06	; 6
    3efc:	9f 93       	push	r25
    3efe:	8f 93       	push	r24
    3f00:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3f04:	0f 90       	pop	r0
    3f06:	0f 90       	pop	r0
    3f08:	0f 90       	pop	r0
    3f0a:	0f 90       	pop	r0
    3f0c:	0f 90       	pop	r0
    3f0e:	0f 90       	pop	r0
	}
	if ((min >= 0) && (min <= 9)) {
    3f10:	80 91 e4 06 	lds	r24, 0x06E4	; 0x8006e4 <min>
    3f14:	8a 30       	cpi	r24, 0x0A	; 10
    3f16:	98 f4       	brcc	.+38     	; 0x3f3e <Clock+0xf6>
		sprintf(minutes,"0%d",min);
    3f18:	1f 92       	push	r1
    3f1a:	8f 93       	push	r24
    3f1c:	83 e9       	ldi	r24, 0x93	; 147
    3f1e:	91 e0       	ldi	r25, 0x01	; 1
    3f20:	9f 93       	push	r25
    3f22:	8f 93       	push	r24
    3f24:	80 ed       	ldi	r24, 0xD0	; 208
    3f26:	96 e0       	ldi	r25, 0x06	; 6
    3f28:	9f 93       	push	r25
    3f2a:	8f 93       	push	r24
    3f2c:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3f30:	0f 90       	pop	r0
    3f32:	0f 90       	pop	r0
    3f34:	0f 90       	pop	r0
    3f36:	0f 90       	pop	r0
    3f38:	0f 90       	pop	r0
    3f3a:	0f 90       	pop	r0
    3f3c:	12 c0       	rjmp	.+36     	; 0x3f62 <Clock+0x11a>
	}
	else {
		sprintf(minutes,"%d",min);
    3f3e:	1f 92       	push	r1
    3f40:	8f 93       	push	r24
    3f42:	84 e9       	ldi	r24, 0x94	; 148
    3f44:	91 e0       	ldi	r25, 0x01	; 1
    3f46:	9f 93       	push	r25
    3f48:	8f 93       	push	r24
    3f4a:	80 ed       	ldi	r24, 0xD0	; 208
    3f4c:	96 e0       	ldi	r25, 0x06	; 6
    3f4e:	9f 93       	push	r25
    3f50:	8f 93       	push	r24
    3f52:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3f56:	0f 90       	pop	r0
    3f58:	0f 90       	pop	r0
    3f5a:	0f 90       	pop	r0
    3f5c:	0f 90       	pop	r0
    3f5e:	0f 90       	pop	r0
    3f60:	0f 90       	pop	r0
	}
	if ((hour >= 0) && (hour <= 9)) {
    3f62:	80 91 dd 06 	lds	r24, 0x06DD	; 0x8006dd <hour>
    3f66:	8a 30       	cpi	r24, 0x0A	; 10
    3f68:	98 f4       	brcc	.+38     	; 0x3f90 <Clock+0x148>
		sprintf(hours,"0%d",hour);
    3f6a:	1f 92       	push	r1
    3f6c:	8f 93       	push	r24
    3f6e:	83 e9       	ldi	r24, 0x93	; 147
    3f70:	91 e0       	ldi	r25, 0x01	; 1
    3f72:	9f 93       	push	r25
    3f74:	8f 93       	push	r24
    3f76:	84 ed       	ldi	r24, 0xD4	; 212
    3f78:	96 e0       	ldi	r25, 0x06	; 6
    3f7a:	9f 93       	push	r25
    3f7c:	8f 93       	push	r24
    3f7e:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3f82:	0f 90       	pop	r0
    3f84:	0f 90       	pop	r0
    3f86:	0f 90       	pop	r0
    3f88:	0f 90       	pop	r0
    3f8a:	0f 90       	pop	r0
    3f8c:	0f 90       	pop	r0
    3f8e:	12 c0       	rjmp	.+36     	; 0x3fb4 <Clock+0x16c>
	}
	else {
		sprintf(hours,"%d",hour);
    3f90:	1f 92       	push	r1
    3f92:	8f 93       	push	r24
    3f94:	84 e9       	ldi	r24, 0x94	; 148
    3f96:	91 e0       	ldi	r25, 0x01	; 1
    3f98:	9f 93       	push	r25
    3f9a:	8f 93       	push	r24
    3f9c:	84 ed       	ldi	r24, 0xD4	; 212
    3f9e:	96 e0       	ldi	r25, 0x06	; 6
    3fa0:	9f 93       	push	r25
    3fa2:	8f 93       	push	r24
    3fa4:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3fa8:	0f 90       	pop	r0
    3faa:	0f 90       	pop	r0
    3fac:	0f 90       	pop	r0
    3fae:	0f 90       	pop	r0
    3fb0:	0f 90       	pop	r0
    3fb2:	0f 90       	pop	r0
	}
	if ((date >= 0) && (date <= 9)) {
    3fb4:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <date>
    3fb8:	8a 30       	cpi	r24, 0x0A	; 10
    3fba:	98 f4       	brcc	.+38     	; 0x3fe2 <Clock+0x19a>
		sprintf(mounthday,"0%d",date);
    3fbc:	1f 92       	push	r1
    3fbe:	8f 93       	push	r24
    3fc0:	83 e9       	ldi	r24, 0x93	; 147
    3fc2:	91 e0       	ldi	r25, 0x01	; 1
    3fc4:	9f 93       	push	r25
    3fc6:	8f 93       	push	r24
    3fc8:	85 ee       	ldi	r24, 0xE5	; 229
    3fca:	96 e0       	ldi	r25, 0x06	; 6
    3fcc:	9f 93       	push	r25
    3fce:	8f 93       	push	r24
    3fd0:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3fd4:	0f 90       	pop	r0
    3fd6:	0f 90       	pop	r0
    3fd8:	0f 90       	pop	r0
    3fda:	0f 90       	pop	r0
    3fdc:	0f 90       	pop	r0
    3fde:	0f 90       	pop	r0
    3fe0:	12 c0       	rjmp	.+36     	; 0x4006 <Clock+0x1be>
	}
	else {
		sprintf(mounthday,"%d",date);
    3fe2:	1f 92       	push	r1
    3fe4:	8f 93       	push	r24
    3fe6:	84 e9       	ldi	r24, 0x94	; 148
    3fe8:	91 e0       	ldi	r25, 0x01	; 1
    3fea:	9f 93       	push	r25
    3fec:	8f 93       	push	r24
    3fee:	85 ee       	ldi	r24, 0xE5	; 229
    3ff0:	96 e0       	ldi	r25, 0x06	; 6
    3ff2:	9f 93       	push	r25
    3ff4:	8f 93       	push	r24
    3ff6:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    3ffa:	0f 90       	pop	r0
    3ffc:	0f 90       	pop	r0
    3ffe:	0f 90       	pop	r0
    4000:	0f 90       	pop	r0
    4002:	0f 90       	pop	r0
    4004:	0f 90       	pop	r0
	}
	switch (day)
    4006:	e0 91 eb 06 	lds	r30, 0x06EB	; 0x8006eb <day>
    400a:	8e 2f       	mov	r24, r30
    400c:	90 e0       	ldi	r25, 0x00	; 0
    400e:	fc 01       	movw	r30, r24
    4010:	31 97       	sbiw	r30, 0x01	; 1
    4012:	e7 30       	cpi	r30, 0x07	; 7
    4014:	f1 05       	cpc	r31, r1
    4016:	d8 f5       	brcc	.+118    	; 0x408e <Clock+0x246>
    4018:	ec 5c       	subi	r30, 0xCC	; 204
    401a:	ff 4f       	sbci	r31, 0xFF	; 255
    401c:	0c 94 f3 2a 	jmp	0x55e6	; 0x55e6 <__tablejump2__>
	{
		case 1:
			sprintf(weakday,"Пн");
    4020:	e8 ed       	ldi	r30, 0xD8	; 216
    4022:	f6 e0       	ldi	r31, 0x06	; 6
    4024:	8f ec       	ldi	r24, 0xCF	; 207
    4026:	9d ee       	ldi	r25, 0xED	; 237
    4028:	91 83       	std	Z+1, r25	; 0x01
    402a:	80 83       	st	Z, r24
    402c:	12 82       	std	Z+2, r1	; 0x02
			break;
    402e:	2f c0       	rjmp	.+94     	; 0x408e <Clock+0x246>
		case 2:
			sprintf(weakday,"Вт");
    4030:	e8 ed       	ldi	r30, 0xD8	; 216
    4032:	f6 e0       	ldi	r31, 0x06	; 6
    4034:	82 ec       	ldi	r24, 0xC2	; 194
    4036:	92 ef       	ldi	r25, 0xF2	; 242
    4038:	91 83       	std	Z+1, r25	; 0x01
    403a:	80 83       	st	Z, r24
    403c:	12 82       	std	Z+2, r1	; 0x02
			break;
    403e:	27 c0       	rjmp	.+78     	; 0x408e <Clock+0x246>
		case 3:
			sprintf(weakday,"Ср");
    4040:	e8 ed       	ldi	r30, 0xD8	; 216
    4042:	f6 e0       	ldi	r31, 0x06	; 6
    4044:	81 ed       	ldi	r24, 0xD1	; 209
    4046:	90 ef       	ldi	r25, 0xF0	; 240
    4048:	91 83       	std	Z+1, r25	; 0x01
    404a:	80 83       	st	Z, r24
    404c:	12 82       	std	Z+2, r1	; 0x02
			break;
    404e:	1f c0       	rjmp	.+62     	; 0x408e <Clock+0x246>
		case 4:
			sprintf(weakday,"Чт");
    4050:	e8 ed       	ldi	r30, 0xD8	; 216
    4052:	f6 e0       	ldi	r31, 0x06	; 6
    4054:	87 ed       	ldi	r24, 0xD7	; 215
    4056:	92 ef       	ldi	r25, 0xF2	; 242
    4058:	91 83       	std	Z+1, r25	; 0x01
    405a:	80 83       	st	Z, r24
    405c:	12 82       	std	Z+2, r1	; 0x02
			break;
    405e:	17 c0       	rjmp	.+46     	; 0x408e <Clock+0x246>
		case 5:
			sprintf(weakday,"Пт");
    4060:	e8 ed       	ldi	r30, 0xD8	; 216
    4062:	f6 e0       	ldi	r31, 0x06	; 6
    4064:	8f ec       	ldi	r24, 0xCF	; 207
    4066:	92 ef       	ldi	r25, 0xF2	; 242
    4068:	91 83       	std	Z+1, r25	; 0x01
    406a:	80 83       	st	Z, r24
    406c:	12 82       	std	Z+2, r1	; 0x02
			break;
    406e:	0f c0       	rjmp	.+30     	; 0x408e <Clock+0x246>
		case 6:
			sprintf(weakday,"Сб");
    4070:	e8 ed       	ldi	r30, 0xD8	; 216
    4072:	f6 e0       	ldi	r31, 0x06	; 6
    4074:	81 ed       	ldi	r24, 0xD1	; 209
    4076:	91 ee       	ldi	r25, 0xE1	; 225
    4078:	91 83       	std	Z+1, r25	; 0x01
    407a:	80 83       	st	Z, r24
    407c:	12 82       	std	Z+2, r1	; 0x02
			break;
    407e:	07 c0       	rjmp	.+14     	; 0x408e <Clock+0x246>
		case 7:
			sprintf(weakday,"Вс");
    4080:	e8 ed       	ldi	r30, 0xD8	; 216
    4082:	f6 e0       	ldi	r31, 0x06	; 6
    4084:	82 ec       	ldi	r24, 0xC2	; 194
    4086:	91 ef       	ldi	r25, 0xF1	; 241
    4088:	91 83       	std	Z+1, r25	; 0x01
    408a:	80 83       	st	Z, r24
    408c:	12 82       	std	Z+2, r1	; 0x02
			break;
		default:
			break;
	}
	switch (month)
    408e:	e0 91 dc 06 	lds	r30, 0x06DC	; 0x8006dc <month>
    4092:	8e 2f       	mov	r24, r30
    4094:	90 e0       	ldi	r25, 0x00	; 0
    4096:	fc 01       	movw	r30, r24
    4098:	31 97       	sbiw	r30, 0x01	; 1
    409a:	ec 30       	cpi	r30, 0x0C	; 12
    409c:	f1 05       	cpc	r31, r1
    409e:	08 f0       	brcs	.+2      	; 0x40a2 <Clock+0x25a>
    40a0:	87 c0       	rjmp	.+270    	; 0x41b0 <Clock+0x368>
    40a2:	e5 5c       	subi	r30, 0xC5	; 197
    40a4:	ff 4f       	sbci	r31, 0xFF	; 255
    40a6:	0c 94 f3 2a 	jmp	0x55e6	; 0x55e6 <__tablejump2__>
	{
		case 1:
		sprintf(Mounth,"Янв");
    40aa:	ee ed       	ldi	r30, 0xDE	; 222
    40ac:	f6 e0       	ldi	r31, 0x06	; 6
    40ae:	8f ed       	ldi	r24, 0xDF	; 223
    40b0:	9d ee       	ldi	r25, 0xED	; 237
    40b2:	91 83       	std	Z+1, r25	; 0x01
    40b4:	80 83       	st	Z, r24
    40b6:	82 ee       	ldi	r24, 0xE2	; 226
    40b8:	90 e0       	ldi	r25, 0x00	; 0
    40ba:	93 83       	std	Z+3, r25	; 0x03
    40bc:	82 83       	std	Z+2, r24	; 0x02
		break;
    40be:	08 95       	ret
		case 2:
		sprintf(Mounth,"Фев");
    40c0:	ee ed       	ldi	r30, 0xDE	; 222
    40c2:	f6 e0       	ldi	r31, 0x06	; 6
    40c4:	84 ed       	ldi	r24, 0xD4	; 212
    40c6:	95 ee       	ldi	r25, 0xE5	; 229
    40c8:	91 83       	std	Z+1, r25	; 0x01
    40ca:	80 83       	st	Z, r24
    40cc:	82 ee       	ldi	r24, 0xE2	; 226
    40ce:	90 e0       	ldi	r25, 0x00	; 0
    40d0:	93 83       	std	Z+3, r25	; 0x03
    40d2:	82 83       	std	Z+2, r24	; 0x02
		break;
    40d4:	08 95       	ret
		case 3:
		sprintf(Mounth,"Мар");
    40d6:	ee ed       	ldi	r30, 0xDE	; 222
    40d8:	f6 e0       	ldi	r31, 0x06	; 6
    40da:	8c ec       	ldi	r24, 0xCC	; 204
    40dc:	90 ee       	ldi	r25, 0xE0	; 224
    40de:	91 83       	std	Z+1, r25	; 0x01
    40e0:	80 83       	st	Z, r24
    40e2:	80 ef       	ldi	r24, 0xF0	; 240
    40e4:	90 e0       	ldi	r25, 0x00	; 0
    40e6:	93 83       	std	Z+3, r25	; 0x03
    40e8:	82 83       	std	Z+2, r24	; 0x02
		break;
    40ea:	08 95       	ret
		case 4:
		sprintf(Mounth,"Апр");
    40ec:	ee ed       	ldi	r30, 0xDE	; 222
    40ee:	f6 e0       	ldi	r31, 0x06	; 6
    40f0:	80 ec       	ldi	r24, 0xC0	; 192
    40f2:	9f ee       	ldi	r25, 0xEF	; 239
    40f4:	91 83       	std	Z+1, r25	; 0x01
    40f6:	80 83       	st	Z, r24
    40f8:	80 ef       	ldi	r24, 0xF0	; 240
    40fa:	90 e0       	ldi	r25, 0x00	; 0
    40fc:	93 83       	std	Z+3, r25	; 0x03
    40fe:	82 83       	std	Z+2, r24	; 0x02
		break;
    4100:	08 95       	ret
		case 5:
		sprintf(Mounth,"Май");
    4102:	ee ed       	ldi	r30, 0xDE	; 222
    4104:	f6 e0       	ldi	r31, 0x06	; 6
    4106:	8c ec       	ldi	r24, 0xCC	; 204
    4108:	90 ee       	ldi	r25, 0xE0	; 224
    410a:	91 83       	std	Z+1, r25	; 0x01
    410c:	80 83       	st	Z, r24
    410e:	89 ee       	ldi	r24, 0xE9	; 233
    4110:	90 e0       	ldi	r25, 0x00	; 0
    4112:	93 83       	std	Z+3, r25	; 0x03
    4114:	82 83       	std	Z+2, r24	; 0x02
		break;
    4116:	08 95       	ret
		case 6:
		sprintf(Mounth,"Июн");
    4118:	ee ed       	ldi	r30, 0xDE	; 222
    411a:	f6 e0       	ldi	r31, 0x06	; 6
    411c:	88 ec       	ldi	r24, 0xC8	; 200
    411e:	9e ef       	ldi	r25, 0xFE	; 254
    4120:	91 83       	std	Z+1, r25	; 0x01
    4122:	80 83       	st	Z, r24
    4124:	8d ee       	ldi	r24, 0xED	; 237
    4126:	90 e0       	ldi	r25, 0x00	; 0
    4128:	93 83       	std	Z+3, r25	; 0x03
    412a:	82 83       	std	Z+2, r24	; 0x02
		break;
    412c:	08 95       	ret
		case 7:
		sprintf(Mounth,"Июл");
    412e:	ee ed       	ldi	r30, 0xDE	; 222
    4130:	f6 e0       	ldi	r31, 0x06	; 6
    4132:	88 ec       	ldi	r24, 0xC8	; 200
    4134:	9e ef       	ldi	r25, 0xFE	; 254
    4136:	91 83       	std	Z+1, r25	; 0x01
    4138:	80 83       	st	Z, r24
    413a:	8b ee       	ldi	r24, 0xEB	; 235
    413c:	90 e0       	ldi	r25, 0x00	; 0
    413e:	93 83       	std	Z+3, r25	; 0x03
    4140:	82 83       	std	Z+2, r24	; 0x02
		break;
    4142:	08 95       	ret
		case 8:
		sprintf(Mounth,"Авг");
    4144:	ee ed       	ldi	r30, 0xDE	; 222
    4146:	f6 e0       	ldi	r31, 0x06	; 6
    4148:	80 ec       	ldi	r24, 0xC0	; 192
    414a:	92 ee       	ldi	r25, 0xE2	; 226
    414c:	91 83       	std	Z+1, r25	; 0x01
    414e:	80 83       	st	Z, r24
    4150:	83 ee       	ldi	r24, 0xE3	; 227
    4152:	90 e0       	ldi	r25, 0x00	; 0
    4154:	93 83       	std	Z+3, r25	; 0x03
    4156:	82 83       	std	Z+2, r24	; 0x02
		break;
    4158:	08 95       	ret
		case 9:
		sprintf(Mounth,"Сен");
    415a:	ee ed       	ldi	r30, 0xDE	; 222
    415c:	f6 e0       	ldi	r31, 0x06	; 6
    415e:	81 ed       	ldi	r24, 0xD1	; 209
    4160:	95 ee       	ldi	r25, 0xE5	; 229
    4162:	91 83       	std	Z+1, r25	; 0x01
    4164:	80 83       	st	Z, r24
    4166:	8d ee       	ldi	r24, 0xED	; 237
    4168:	90 e0       	ldi	r25, 0x00	; 0
    416a:	93 83       	std	Z+3, r25	; 0x03
    416c:	82 83       	std	Z+2, r24	; 0x02
		break;
    416e:	08 95       	ret
		case 10:
		sprintf(Mounth,"Окт");
    4170:	ee ed       	ldi	r30, 0xDE	; 222
    4172:	f6 e0       	ldi	r31, 0x06	; 6
    4174:	8e ec       	ldi	r24, 0xCE	; 206
    4176:	9a ee       	ldi	r25, 0xEA	; 234
    4178:	91 83       	std	Z+1, r25	; 0x01
    417a:	80 83       	st	Z, r24
    417c:	82 ef       	ldi	r24, 0xF2	; 242
    417e:	90 e0       	ldi	r25, 0x00	; 0
    4180:	93 83       	std	Z+3, r25	; 0x03
    4182:	82 83       	std	Z+2, r24	; 0x02
		break;
    4184:	08 95       	ret
		case 11:
		sprintf(Mounth,"Ноя");
    4186:	ee ed       	ldi	r30, 0xDE	; 222
    4188:	f6 e0       	ldi	r31, 0x06	; 6
    418a:	8d ec       	ldi	r24, 0xCD	; 205
    418c:	9e ee       	ldi	r25, 0xEE	; 238
    418e:	91 83       	std	Z+1, r25	; 0x01
    4190:	80 83       	st	Z, r24
    4192:	8f ef       	ldi	r24, 0xFF	; 255
    4194:	90 e0       	ldi	r25, 0x00	; 0
    4196:	93 83       	std	Z+3, r25	; 0x03
    4198:	82 83       	std	Z+2, r24	; 0x02
		break;
    419a:	08 95       	ret
		case 12:
		sprintf(Mounth,"Дек");
    419c:	ee ed       	ldi	r30, 0xDE	; 222
    419e:	f6 e0       	ldi	r31, 0x06	; 6
    41a0:	84 ec       	ldi	r24, 0xC4	; 196
    41a2:	95 ee       	ldi	r25, 0xE5	; 229
    41a4:	91 83       	std	Z+1, r25	; 0x01
    41a6:	80 83       	st	Z, r24
    41a8:	8a ee       	ldi	r24, 0xEA	; 234
    41aa:	90 e0       	ldi	r25, 0x00	; 0
    41ac:	93 83       	std	Z+3, r25	; 0x03
    41ae:	82 83       	std	Z+2, r24	; 0x02
    41b0:	08 95       	ret

000041b2 <RAIN_AMOUNT>:
	}
	
}
//Вычисление кол-ва осадков
float RAIN_AMOUNT(char *adc_value)
{
    41b2:	cf 93       	push	r28
    41b4:	df 93       	push	r29
    41b6:	00 d0       	rcall	.+0      	; 0x41b8 <RAIN_AMOUNT+0x6>
    41b8:	cd b7       	in	r28, 0x3d	; 61
    41ba:	de b7       	in	r29, 0x3e	; 62
	float RAIN;
	int R;
	if (strlen(adc_value) != 0)
    41bc:	fc 01       	movw	r30, r24
    41be:	20 81       	ld	r18, Z
    41c0:	22 23       	and	r18, r18
    41c2:	a1 f0       	breq	.+40     	; 0x41ec <RAIN_AMOUNT+0x3a>
	{
		sscanf(adc_value, "%d", &R);
    41c4:	9e 01       	movw	r18, r28
    41c6:	2f 5f       	subi	r18, 0xFF	; 255
    41c8:	3f 4f       	sbci	r19, 0xFF	; 255
    41ca:	3f 93       	push	r19
    41cc:	2f 93       	push	r18
    41ce:	24 e9       	ldi	r18, 0x94	; 148
    41d0:	31 e0       	ldi	r19, 0x01	; 1
    41d2:	3f 93       	push	r19
    41d4:	2f 93       	push	r18
    41d6:	9f 93       	push	r25
    41d8:	8f 93       	push	r24
    41da:	0e 94 b9 2c 	call	0x5972	; 0x5972 <sscanf>
    41de:	0f 90       	pop	r0
    41e0:	0f 90       	pop	r0
    41e2:	0f 90       	pop	r0
    41e4:	0f 90       	pop	r0
    41e6:	0f 90       	pop	r0
    41e8:	0f 90       	pop	r0
    41ea:	02 c0       	rjmp	.+4      	; 0x41f0 <RAIN_AMOUNT+0x3e>
	}
	else
	{
		R = 0;
    41ec:	1a 82       	std	Y+2, r1	; 0x02
    41ee:	19 82       	std	Y+1, r1	; 0x01
	}
	RAIN = 3*R*2.45/5120;
    41f0:	69 81       	ldd	r22, Y+1	; 0x01
    41f2:	7a 81       	ldd	r23, Y+2	; 0x02
    41f4:	cb 01       	movw	r24, r22
    41f6:	88 0f       	add	r24, r24
    41f8:	99 1f       	adc	r25, r25
    41fa:	68 0f       	add	r22, r24
    41fc:	79 1f       	adc	r23, r25
    41fe:	07 2e       	mov	r0, r23
    4200:	00 0c       	add	r0, r0
    4202:	88 0b       	sbc	r24, r24
    4204:	99 0b       	sbc	r25, r25
    4206:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    420a:	2d ec       	ldi	r18, 0xCD	; 205
    420c:	3c ec       	ldi	r19, 0xCC	; 204
    420e:	4c e1       	ldi	r20, 0x1C	; 28
    4210:	50 e4       	ldi	r21, 0x40	; 64
    4212:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
    4216:	20 e0       	ldi	r18, 0x00	; 0
    4218:	30 e0       	ldi	r19, 0x00	; 0
    421a:	40 ea       	ldi	r20, 0xA0	; 160
    421c:	55 e4       	ldi	r21, 0x45	; 69
    421e:	0e 94 59 25 	call	0x4ab2	; 0x4ab2 <__divsf3>
	
	return RAIN;
}
    4222:	0f 90       	pop	r0
    4224:	0f 90       	pop	r0
    4226:	df 91       	pop	r29
    4228:	cf 91       	pop	r28
    422a:	08 95       	ret

0000422c <V_BAT>:
//Вычисление уровня заряда АКБ
float V_BAT (char *adc_value)
{
    422c:	cf 93       	push	r28
    422e:	df 93       	push	r29
    4230:	00 d0       	rcall	.+0      	; 0x4232 <V_BAT+0x6>
    4232:	cd b7       	in	r28, 0x3d	; 61
    4234:	de b7       	in	r29, 0x3e	; 62
	float VBAT;
	int V;
	if (strlen(adc_value) != 0)
    4236:	fc 01       	movw	r30, r24
    4238:	20 81       	ld	r18, Z
    423a:	22 23       	and	r18, r18
    423c:	a1 f0       	breq	.+40     	; 0x4266 <V_BAT+0x3a>
	{
		sscanf(adc_value, "%d", &V);
    423e:	9e 01       	movw	r18, r28
    4240:	2f 5f       	subi	r18, 0xFF	; 255
    4242:	3f 4f       	sbci	r19, 0xFF	; 255
    4244:	3f 93       	push	r19
    4246:	2f 93       	push	r18
    4248:	24 e9       	ldi	r18, 0x94	; 148
    424a:	31 e0       	ldi	r19, 0x01	; 1
    424c:	3f 93       	push	r19
    424e:	2f 93       	push	r18
    4250:	9f 93       	push	r25
    4252:	8f 93       	push	r24
    4254:	0e 94 b9 2c 	call	0x5972	; 0x5972 <sscanf>
    4258:	0f 90       	pop	r0
    425a:	0f 90       	pop	r0
    425c:	0f 90       	pop	r0
    425e:	0f 90       	pop	r0
    4260:	0f 90       	pop	r0
    4262:	0f 90       	pop	r0
    4264:	02 c0       	rjmp	.+4      	; 0x426a <V_BAT+0x3e>
	}
	else
	{
		V = 0;
    4266:	1a 82       	std	Y+2, r1	; 0x02
    4268:	19 82       	std	Y+1, r1	; 0x01
	}
	VBAT = V*2.45*3/1024;
    426a:	69 81       	ldd	r22, Y+1	; 0x01
    426c:	7a 81       	ldd	r23, Y+2	; 0x02
    426e:	07 2e       	mov	r0, r23
    4270:	00 0c       	add	r0, r0
    4272:	88 0b       	sbc	r24, r24
    4274:	99 0b       	sbc	r25, r25
    4276:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    427a:	2d ec       	ldi	r18, 0xCD	; 205
    427c:	3c ec       	ldi	r19, 0xCC	; 204
    427e:	4c e1       	ldi	r20, 0x1C	; 28
    4280:	50 e4       	ldi	r21, 0x40	; 64
    4282:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
    4286:	20 e0       	ldi	r18, 0x00	; 0
    4288:	30 e0       	ldi	r19, 0x00	; 0
    428a:	40 e4       	ldi	r20, 0x40	; 64
    428c:	50 e4       	ldi	r21, 0x40	; 64
    428e:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
    4292:	20 e0       	ldi	r18, 0x00	; 0
    4294:	30 e0       	ldi	r19, 0x00	; 0
    4296:	40 e8       	ldi	r20, 0x80	; 128
    4298:	5a e3       	ldi	r21, 0x3A	; 58
    429a:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
	
	return VBAT;
}
    429e:	0f 90       	pop	r0
    42a0:	0f 90       	pop	r0
    42a2:	df 91       	pop	r29
    42a4:	cf 91       	pop	r28
    42a6:	08 95       	ret

000042a8 <DrawBattery>:
	}
	else {}
}
void DrawBattery(void)
{
	LCD_12864_Draw_line(34, 28, 40, 28);
    42a8:	2c e1       	ldi	r18, 0x1C	; 28
    42aa:	48 e2       	ldi	r20, 0x28	; 40
    42ac:	6c e1       	ldi	r22, 0x1C	; 28
    42ae:	82 e2       	ldi	r24, 0x22	; 34
    42b0:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(34, 19, 34, 27);
    42b4:	2b e1       	ldi	r18, 0x1B	; 27
    42b6:	42 e2       	ldi	r20, 0x22	; 34
    42b8:	63 e1       	ldi	r22, 0x13	; 19
    42ba:	82 e2       	ldi	r24, 0x22	; 34
    42bc:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(40, 19, 40, 27);
    42c0:	2b e1       	ldi	r18, 0x1B	; 27
    42c2:	48 e2       	ldi	r20, 0x28	; 40
    42c4:	63 e1       	ldi	r22, 0x13	; 19
    42c6:	88 e2       	ldi	r24, 0x28	; 40
    42c8:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(34, 19, 36, 19);
    42cc:	23 e1       	ldi	r18, 0x13	; 19
    42ce:	44 e2       	ldi	r20, 0x24	; 36
    42d0:	63 e1       	ldi	r22, 0x13	; 19
    42d2:	82 e2       	ldi	r24, 0x22	; 34
    42d4:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(38, 19, 40, 19);
    42d8:	23 e1       	ldi	r18, 0x13	; 19
    42da:	48 e2       	ldi	r20, 0x28	; 40
    42dc:	63 e1       	ldi	r22, 0x13	; 19
    42de:	86 e2       	ldi	r24, 0x26	; 38
    42e0:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(36, 18, 36, 19);
    42e4:	23 e1       	ldi	r18, 0x13	; 19
    42e6:	44 e2       	ldi	r20, 0x24	; 36
    42e8:	62 e1       	ldi	r22, 0x12	; 18
    42ea:	84 e2       	ldi	r24, 0x24	; 36
    42ec:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(38, 18, 38, 19);
    42f0:	23 e1       	ldi	r18, 0x13	; 19
    42f2:	46 e2       	ldi	r20, 0x26	; 38
    42f4:	62 e1       	ldi	r22, 0x12	; 18
    42f6:	86 e2       	ldi	r24, 0x26	; 38
    42f8:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(36, 18, 38, 18);
    42fc:	22 e1       	ldi	r18, 0x12	; 18
    42fe:	46 e2       	ldi	r20, 0x26	; 38
    4300:	62 e1       	ldi	r22, 0x12	; 18
    4302:	84 e2       	ldi	r24, 0x24	; 36
    4304:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	if (V_BAT(adc_value1) >= 4.0f) {
    4308:	81 e4       	ldi	r24, 0x41	; 65
    430a:	92 e0       	ldi	r25, 0x02	; 2
    430c:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    4310:	20 e0       	ldi	r18, 0x00	; 0
    4312:	30 e0       	ldi	r19, 0x00	; 0
    4314:	40 e8       	ldi	r20, 0x80	; 128
    4316:	50 e4       	ldi	r21, 0x40	; 64
    4318:	0e 94 b3 26 	call	0x4d66	; 0x4d66 <__gesf2>
    431c:	88 23       	and	r24, r24
    431e:	2c f1       	brlt	.+74     	; 0x436a <DrawBattery+0xc2>
		LCD_12864_Draw_line(36, 26, 38, 26);
    4320:	2a e1       	ldi	r18, 0x1A	; 26
    4322:	46 e2       	ldi	r20, 0x26	; 38
    4324:	6a e1       	ldi	r22, 0x1A	; 26
    4326:	84 e2       	ldi	r24, 0x24	; 36
    4328:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    432c:	29 e1       	ldi	r18, 0x19	; 25
    432e:	46 e2       	ldi	r20, 0x26	; 38
    4330:	69 e1       	ldi	r22, 0x19	; 25
    4332:	84 e2       	ldi	r24, 0x24	; 36
    4334:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    4338:	28 e1       	ldi	r18, 0x18	; 24
    433a:	46 e2       	ldi	r20, 0x26	; 38
    433c:	68 e1       	ldi	r22, 0x18	; 24
    433e:	84 e2       	ldi	r24, 0x24	; 36
    4340:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    4344:	27 e1       	ldi	r18, 0x17	; 23
    4346:	46 e2       	ldi	r20, 0x26	; 38
    4348:	67 e1       	ldi	r22, 0x17	; 23
    434a:	84 e2       	ldi	r24, 0x24	; 36
    434c:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 22, 38, 22);
    4350:	26 e1       	ldi	r18, 0x16	; 22
    4352:	46 e2       	ldi	r20, 0x26	; 38
    4354:	66 e1       	ldi	r22, 0x16	; 22
    4356:	84 e2       	ldi	r24, 0x24	; 36
    4358:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 21, 38, 21);
    435c:	25 e1       	ldi	r18, 0x15	; 21
    435e:	46 e2       	ldi	r20, 0x26	; 38
    4360:	65 e1       	ldi	r22, 0x15	; 21
    4362:	84 e2       	ldi	r24, 0x24	; 36
    4364:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
    4368:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.9f) && (V_BAT(adc_value1) < 4.0f)) {
    436a:	81 e4       	ldi	r24, 0x41	; 65
    436c:	92 e0       	ldi	r25, 0x02	; 2
    436e:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    4372:	2a e9       	ldi	r18, 0x9A	; 154
    4374:	39 e9       	ldi	r19, 0x99	; 153
    4376:	49 e7       	ldi	r20, 0x79	; 121
    4378:	50 e4       	ldi	r21, 0x40	; 64
    437a:	0e 94 b3 26 	call	0x4d66	; 0x4d66 <__gesf2>
    437e:	88 23       	and	r24, r24
    4380:	5c f1       	brlt	.+86     	; 0x43d8 <DrawBattery+0x130>
    4382:	81 e4       	ldi	r24, 0x41	; 65
    4384:	92 e0       	ldi	r25, 0x02	; 2
    4386:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    438a:	20 e0       	ldi	r18, 0x00	; 0
    438c:	30 e0       	ldi	r19, 0x00	; 0
    438e:	40 e8       	ldi	r20, 0x80	; 128
    4390:	50 e4       	ldi	r21, 0x40	; 64
    4392:	0e 94 54 25 	call	0x4aa8	; 0x4aa8 <__cmpsf2>
    4396:	88 23       	and	r24, r24
    4398:	fc f4       	brge	.+62     	; 0x43d8 <DrawBattery+0x130>
		LCD_12864_Draw_line(36, 26, 38, 26);
    439a:	2a e1       	ldi	r18, 0x1A	; 26
    439c:	46 e2       	ldi	r20, 0x26	; 38
    439e:	6a e1       	ldi	r22, 0x1A	; 26
    43a0:	84 e2       	ldi	r24, 0x24	; 36
    43a2:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    43a6:	29 e1       	ldi	r18, 0x19	; 25
    43a8:	46 e2       	ldi	r20, 0x26	; 38
    43aa:	69 e1       	ldi	r22, 0x19	; 25
    43ac:	84 e2       	ldi	r24, 0x24	; 36
    43ae:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    43b2:	28 e1       	ldi	r18, 0x18	; 24
    43b4:	46 e2       	ldi	r20, 0x26	; 38
    43b6:	68 e1       	ldi	r22, 0x18	; 24
    43b8:	84 e2       	ldi	r24, 0x24	; 36
    43ba:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    43be:	27 e1       	ldi	r18, 0x17	; 23
    43c0:	46 e2       	ldi	r20, 0x26	; 38
    43c2:	67 e1       	ldi	r22, 0x17	; 23
    43c4:	84 e2       	ldi	r24, 0x24	; 36
    43c6:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 22, 38, 22);
    43ca:	26 e1       	ldi	r18, 0x16	; 22
    43cc:	46 e2       	ldi	r20, 0x26	; 38
    43ce:	66 e1       	ldi	r22, 0x16	; 22
    43d0:	84 e2       	ldi	r24, 0x24	; 36
    43d2:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
    43d6:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.8f) && (V_BAT(adc_value1) < 3.9f)) {
    43d8:	81 e4       	ldi	r24, 0x41	; 65
    43da:	92 e0       	ldi	r25, 0x02	; 2
    43dc:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    43e0:	23 e3       	ldi	r18, 0x33	; 51
    43e2:	33 e3       	ldi	r19, 0x33	; 51
    43e4:	43 e7       	ldi	r20, 0x73	; 115
    43e6:	50 e4       	ldi	r21, 0x40	; 64
    43e8:	0e 94 b3 26 	call	0x4d66	; 0x4d66 <__gesf2>
    43ec:	88 23       	and	r24, r24
    43ee:	2c f1       	brlt	.+74     	; 0x443a <DrawBattery+0x192>
    43f0:	81 e4       	ldi	r24, 0x41	; 65
    43f2:	92 e0       	ldi	r25, 0x02	; 2
    43f4:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    43f8:	2a e9       	ldi	r18, 0x9A	; 154
    43fa:	39 e9       	ldi	r19, 0x99	; 153
    43fc:	49 e7       	ldi	r20, 0x79	; 121
    43fe:	50 e4       	ldi	r21, 0x40	; 64
    4400:	0e 94 54 25 	call	0x4aa8	; 0x4aa8 <__cmpsf2>
    4404:	88 23       	and	r24, r24
    4406:	cc f4       	brge	.+50     	; 0x443a <DrawBattery+0x192>
		LCD_12864_Draw_line(36, 26, 38, 26);
    4408:	2a e1       	ldi	r18, 0x1A	; 26
    440a:	46 e2       	ldi	r20, 0x26	; 38
    440c:	6a e1       	ldi	r22, 0x1A	; 26
    440e:	84 e2       	ldi	r24, 0x24	; 36
    4410:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    4414:	29 e1       	ldi	r18, 0x19	; 25
    4416:	46 e2       	ldi	r20, 0x26	; 38
    4418:	69 e1       	ldi	r22, 0x19	; 25
    441a:	84 e2       	ldi	r24, 0x24	; 36
    441c:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    4420:	28 e1       	ldi	r18, 0x18	; 24
    4422:	46 e2       	ldi	r20, 0x26	; 38
    4424:	68 e1       	ldi	r22, 0x18	; 24
    4426:	84 e2       	ldi	r24, 0x24	; 36
    4428:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    442c:	27 e1       	ldi	r18, 0x17	; 23
    442e:	46 e2       	ldi	r20, 0x26	; 38
    4430:	67 e1       	ldi	r22, 0x17	; 23
    4432:	84 e2       	ldi	r24, 0x24	; 36
    4434:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
    4438:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.7f) && (V_BAT(adc_value1) < 3.8f)) {
    443a:	81 e4       	ldi	r24, 0x41	; 65
    443c:	92 e0       	ldi	r25, 0x02	; 2
    443e:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    4442:	2d ec       	ldi	r18, 0xCD	; 205
    4444:	3c ec       	ldi	r19, 0xCC	; 204
    4446:	4c e6       	ldi	r20, 0x6C	; 108
    4448:	50 e4       	ldi	r21, 0x40	; 64
    444a:	0e 94 b3 26 	call	0x4d66	; 0x4d66 <__gesf2>
    444e:	88 23       	and	r24, r24
    4450:	fc f0       	brlt	.+62     	; 0x4490 <DrawBattery+0x1e8>
    4452:	81 e4       	ldi	r24, 0x41	; 65
    4454:	92 e0       	ldi	r25, 0x02	; 2
    4456:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    445a:	23 e3       	ldi	r18, 0x33	; 51
    445c:	33 e3       	ldi	r19, 0x33	; 51
    445e:	43 e7       	ldi	r20, 0x73	; 115
    4460:	50 e4       	ldi	r21, 0x40	; 64
    4462:	0e 94 54 25 	call	0x4aa8	; 0x4aa8 <__cmpsf2>
    4466:	88 23       	and	r24, r24
    4468:	9c f4       	brge	.+38     	; 0x4490 <DrawBattery+0x1e8>
		LCD_12864_Draw_line(36, 26, 38, 26);
    446a:	2a e1       	ldi	r18, 0x1A	; 26
    446c:	46 e2       	ldi	r20, 0x26	; 38
    446e:	6a e1       	ldi	r22, 0x1A	; 26
    4470:	84 e2       	ldi	r24, 0x24	; 36
    4472:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    4476:	29 e1       	ldi	r18, 0x19	; 25
    4478:	46 e2       	ldi	r20, 0x26	; 38
    447a:	69 e1       	ldi	r22, 0x19	; 25
    447c:	84 e2       	ldi	r24, 0x24	; 36
    447e:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    4482:	28 e1       	ldi	r18, 0x18	; 24
    4484:	46 e2       	ldi	r20, 0x26	; 38
    4486:	68 e1       	ldi	r22, 0x18	; 24
    4488:	84 e2       	ldi	r24, 0x24	; 36
    448a:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
    448e:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.6f) && (V_BAT(adc_value1) < 3.7f)) {
    4490:	81 e4       	ldi	r24, 0x41	; 65
    4492:	92 e0       	ldi	r25, 0x02	; 2
    4494:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    4498:	26 e6       	ldi	r18, 0x66	; 102
    449a:	36 e6       	ldi	r19, 0x66	; 102
    449c:	46 e6       	ldi	r20, 0x66	; 102
    449e:	50 e4       	ldi	r21, 0x40	; 64
    44a0:	0e 94 b3 26 	call	0x4d66	; 0x4d66 <__gesf2>
    44a4:	88 23       	and	r24, r24
    44a6:	cc f0       	brlt	.+50     	; 0x44da <DrawBattery+0x232>
    44a8:	81 e4       	ldi	r24, 0x41	; 65
    44aa:	92 e0       	ldi	r25, 0x02	; 2
    44ac:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    44b0:	2d ec       	ldi	r18, 0xCD	; 205
    44b2:	3c ec       	ldi	r19, 0xCC	; 204
    44b4:	4c e6       	ldi	r20, 0x6C	; 108
    44b6:	50 e4       	ldi	r21, 0x40	; 64
    44b8:	0e 94 54 25 	call	0x4aa8	; 0x4aa8 <__cmpsf2>
    44bc:	88 23       	and	r24, r24
    44be:	6c f4       	brge	.+26     	; 0x44da <DrawBattery+0x232>
		LCD_12864_Draw_line(36, 26, 38, 26);
    44c0:	2a e1       	ldi	r18, 0x1A	; 26
    44c2:	46 e2       	ldi	r20, 0x26	; 38
    44c4:	6a e1       	ldi	r22, 0x1A	; 26
    44c6:	84 e2       	ldi	r24, 0x24	; 36
    44c8:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    44cc:	29 e1       	ldi	r18, 0x19	; 25
    44ce:	46 e2       	ldi	r20, 0x26	; 38
    44d0:	69 e1       	ldi	r22, 0x19	; 25
    44d2:	84 e2       	ldi	r24, 0x24	; 36
    44d4:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
    44d8:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.5f) && (V_BAT(adc_value1) < 3.6f)) {
    44da:	81 e4       	ldi	r24, 0x41	; 65
    44dc:	92 e0       	ldi	r25, 0x02	; 2
    44de:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    44e2:	20 e0       	ldi	r18, 0x00	; 0
    44e4:	30 e0       	ldi	r19, 0x00	; 0
    44e6:	40 e6       	ldi	r20, 0x60	; 96
    44e8:	50 e4       	ldi	r21, 0x40	; 64
    44ea:	0e 94 b3 26 	call	0x4d66	; 0x4d66 <__gesf2>
    44ee:	88 23       	and	r24, r24
    44f0:	94 f0       	brlt	.+36     	; 0x4516 <DrawBattery+0x26e>
    44f2:	81 e4       	ldi	r24, 0x41	; 65
    44f4:	92 e0       	ldi	r25, 0x02	; 2
    44f6:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    44fa:	26 e6       	ldi	r18, 0x66	; 102
    44fc:	36 e6       	ldi	r19, 0x66	; 102
    44fe:	46 e6       	ldi	r20, 0x66	; 102
    4500:	50 e4       	ldi	r21, 0x40	; 64
    4502:	0e 94 54 25 	call	0x4aa8	; 0x4aa8 <__cmpsf2>
    4506:	88 23       	and	r24, r24
    4508:	34 f4       	brge	.+12     	; 0x4516 <DrawBattery+0x26e>
		LCD_12864_Draw_line(36, 26, 38, 26);
    450a:	2a e1       	ldi	r18, 0x1A	; 26
    450c:	46 e2       	ldi	r20, 0x26	; 38
    450e:	6a e1       	ldi	r22, 0x1A	; 26
    4510:	84 e2       	ldi	r24, 0x24	; 36
    4512:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
    4516:	08 95       	ret

00004518 <wind_speed>:
	
	return VBAT;
}
//Вычисление скорости ветра
float wind_speed (char *counter)
{
    4518:	cf 93       	push	r28
    451a:	df 93       	push	r29
    451c:	00 d0       	rcall	.+0      	; 0x451e <wind_speed+0x6>
    451e:	cd b7       	in	r28, 0x3d	; 61
    4520:	de b7       	in	r29, 0x3e	; 62
	float RADIUS = 0.09;
	float speed = 0;
	int n;
	if (strlen(counter) != 0)
    4522:	fc 01       	movw	r30, r24
    4524:	20 81       	ld	r18, Z
    4526:	22 23       	and	r18, r18
    4528:	a1 f0       	breq	.+40     	; 0x4552 <wind_speed+0x3a>
	{
		sscanf(counter, "%d", &n);
    452a:	9e 01       	movw	r18, r28
    452c:	2f 5f       	subi	r18, 0xFF	; 255
    452e:	3f 4f       	sbci	r19, 0xFF	; 255
    4530:	3f 93       	push	r19
    4532:	2f 93       	push	r18
    4534:	24 e9       	ldi	r18, 0x94	; 148
    4536:	31 e0       	ldi	r19, 0x01	; 1
    4538:	3f 93       	push	r19
    453a:	2f 93       	push	r18
    453c:	9f 93       	push	r25
    453e:	8f 93       	push	r24
    4540:	0e 94 b9 2c 	call	0x5972	; 0x5972 <sscanf>
    4544:	0f 90       	pop	r0
    4546:	0f 90       	pop	r0
    4548:	0f 90       	pop	r0
    454a:	0f 90       	pop	r0
    454c:	0f 90       	pop	r0
    454e:	0f 90       	pop	r0
    4550:	02 c0       	rjmp	.+4      	; 0x4556 <wind_speed+0x3e>
	}
	else
	{
		n = 0;
    4552:	1a 82       	std	Y+2, r1	; 0x02
    4554:	19 82       	std	Y+1, r1	; 0x01
	}
	speed = 2*3.14*RADIUS*n/4; //период 2 сек+2 магнита
    4556:	69 81       	ldd	r22, Y+1	; 0x01
    4558:	7a 81       	ldd	r23, Y+2	; 0x02
    455a:	07 2e       	mov	r0, r23
    455c:	00 0c       	add	r0, r0
    455e:	88 0b       	sbc	r24, r24
    4560:	99 0b       	sbc	r25, r25
    4562:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    4566:	23 ef       	ldi	r18, 0xF3	; 243
    4568:	30 eb       	ldi	r19, 0xB0	; 176
    456a:	40 e1       	ldi	r20, 0x10	; 16
    456c:	5f e3       	ldi	r21, 0x3F	; 63
    456e:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
    4572:	20 e0       	ldi	r18, 0x00	; 0
    4574:	30 e0       	ldi	r19, 0x00	; 0
    4576:	40 e8       	ldi	r20, 0x80	; 128
    4578:	5e e3       	ldi	r21, 0x3E	; 62
    457a:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
	
	return speed;
    457e:	0f 90       	pop	r0
    4580:	0f 90       	pop	r0
    4582:	df 91       	pop	r29
    4584:	cf 91       	pop	r28
    4586:	08 95       	ret

00004588 <Print_Home_Page>:
	}	
	LCD_12864_GrapnicMode(0);
}
//Главное окно
void Print_Home_Page(uint8_t *Frame_buffer)
{
    4588:	0f 93       	push	r16
    458a:	1f 93       	push	r17
    458c:	cf 93       	push	r28
    458e:	df 93       	push	r29
    4590:	ec 01       	movw	r28, r24
	LCD_12864_GrapnicMode(1);
    4592:	81 e0       	ldi	r24, 0x01	; 1
    4594:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
	LCD_12864_Clean_Frame_buffer();
    4598:	0e 94 88 0a 	call	0x1510	; 0x1510 <LCD_12864_Clean_Frame_buffer>
	//-----------Вывод времени/даты-------------------------------//
	Clock();
    459c:	0e 94 24 1f 	call	0x3e48	; 0x3e48 <Clock>
	sprintf(TIME,"%s:%s",hours, minutes);
    45a0:	80 ed       	ldi	r24, 0xD0	; 208
    45a2:	96 e0       	ldi	r25, 0x06	; 6
    45a4:	9f 93       	push	r25
    45a6:	8f 93       	push	r24
    45a8:	84 ed       	ldi	r24, 0xD4	; 212
    45aa:	96 e0       	ldi	r25, 0x06	; 6
    45ac:	9f 93       	push	r25
    45ae:	8f 93       	push	r24
    45b0:	87 e9       	ldi	r24, 0x97	; 151
    45b2:	91 e0       	ldi	r25, 0x01	; 1
    45b4:	9f 93       	push	r25
    45b6:	8f 93       	push	r24
    45b8:	8e eb       	ldi	r24, 0xBE	; 190
    45ba:	96 e0       	ldi	r25, 0x06	; 6
    45bc:	9f 93       	push	r25
    45be:	8f 93       	push	r24
    45c0:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
	LCD_12864_Print_11_16(2, 0, 0, TIME);
    45c4:	2e eb       	ldi	r18, 0xBE	; 190
    45c6:	36 e0       	ldi	r19, 0x06	; 6
    45c8:	40 e0       	ldi	r20, 0x00	; 0
    45ca:	60 e0       	ldi	r22, 0x00	; 0
    45cc:	82 e0       	ldi	r24, 0x02	; 2
    45ce:	90 e0       	ldi	r25, 0x00	; 0
    45d0:	0e 94 0c 09 	call	0x1218	; 0x1218 <LCD_12864_Print_11_16>
	//LCD_12864_Decode_UTF8(73, 0, 0, "День");
	//LCD_12864_Decode_UTF8(99, 0, 0, "Месяц");
	//LCD_12864_Decode_UTF8(73, 1, 0, mounthday);
	//LCD_12864_Decode_UTF8(85, 1, 0, weakday);
	//LCD_12864_Decode_UTF8(99, 1, 0, Mounth);
	LCD_12864_Decode_UTF8(61, 1, 0, weakday);
    45d4:	28 ed       	ldi	r18, 0xD8	; 216
    45d6:	36 e0       	ldi	r19, 0x06	; 6
    45d8:	40 e0       	ldi	r20, 0x00	; 0
    45da:	61 e0       	ldi	r22, 0x01	; 1
    45dc:	8d e3       	ldi	r24, 0x3D	; 61
    45de:	90 e0       	ldi	r25, 0x00	; 0
    45e0:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(73, 1, 0, ",");
    45e4:	2d e9       	ldi	r18, 0x9D	; 157
    45e6:	31 e0       	ldi	r19, 0x01	; 1
    45e8:	40 e0       	ldi	r20, 0x00	; 0
    45ea:	61 e0       	ldi	r22, 0x01	; 1
    45ec:	89 e4       	ldi	r24, 0x49	; 73
    45ee:	90 e0       	ldi	r25, 0x00	; 0
    45f0:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(76, 1, 0, mounthday);
    45f4:	25 ee       	ldi	r18, 0xE5	; 229
    45f6:	36 e0       	ldi	r19, 0x06	; 6
    45f8:	40 e0       	ldi	r20, 0x00	; 0
    45fa:	61 e0       	ldi	r22, 0x01	; 1
    45fc:	8c e4       	ldi	r24, 0x4C	; 76
    45fe:	90 e0       	ldi	r25, 0x00	; 0
    4600:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(88, 1, 0, "/");
    4604:	2f e9       	ldi	r18, 0x9F	; 159
    4606:	31 e0       	ldi	r19, 0x01	; 1
    4608:	40 e0       	ldi	r20, 0x00	; 0
    460a:	61 e0       	ldi	r22, 0x01	; 1
    460c:	88 e5       	ldi	r24, 0x58	; 88
    460e:	90 e0       	ldi	r25, 0x00	; 0
    4610:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(93, 1, 0, Mounth);
    4614:	2e ed       	ldi	r18, 0xDE	; 222
    4616:	36 e0       	ldi	r19, 0x06	; 6
    4618:	40 e0       	ldi	r20, 0x00	; 0
    461a:	61 e0       	ldi	r22, 0x01	; 1
    461c:	8d e5       	ldi	r24, 0x5D	; 93
    461e:	90 e0       	ldi	r25, 0x00	; 0
    4620:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(111, 1, 0, "/");
    4624:	2f e9       	ldi	r18, 0x9F	; 159
    4626:	31 e0       	ldi	r19, 0x01	; 1
    4628:	40 e0       	ldi	r20, 0x00	; 0
    462a:	61 e0       	ldi	r22, 0x01	; 1
    462c:	8f e6       	ldi	r24, 0x6F	; 111
    462e:	90 e0       	ldi	r25, 0x00	; 0
    4630:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(116, 1, 0, "22");
    4634:	21 ea       	ldi	r18, 0xA1	; 161
    4636:	31 e0       	ldi	r19, 0x01	; 1
    4638:	40 e0       	ldi	r20, 0x00	; 0
    463a:	61 e0       	ldi	r22, 0x01	; 1
    463c:	84 e7       	ldi	r24, 0x74	; 116
    463e:	90 e0       	ldi	r25, 0x00	; 0
    4640:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	
	//-----------Вывод уличных показателей-----------------------//
	LCD_12864_Decode_UTF8(30, 4, 0, "°C");
    4644:	24 ea       	ldi	r18, 0xA4	; 164
    4646:	31 e0       	ldi	r19, 0x01	; 1
    4648:	40 e0       	ldi	r20, 0x00	; 0
    464a:	64 e0       	ldi	r22, 0x04	; 4
    464c:	8e e1       	ldi	r24, 0x1E	; 30
    464e:	90 e0       	ldi	r25, 0x00	; 0
    4650:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(58, 4, 0, "%");
    4654:	27 ea       	ldi	r18, 0xA7	; 167
    4656:	31 e0       	ldi	r19, 0x01	; 1
    4658:	40 e0       	ldi	r20, 0x00	; 0
    465a:	64 e0       	ldi	r22, 0x04	; 4
    465c:	8a e3       	ldi	r24, 0x3A	; 58
    465e:	90 e0       	ldi	r25, 0x00	; 0
    4660:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(1, 3, 0, temp_street);
    4664:	27 e8       	ldi	r18, 0x87	; 135
    4666:	32 e0       	ldi	r19, 0x02	; 2
    4668:	40 e0       	ldi	r20, 0x00	; 0
    466a:	63 e0       	ldi	r22, 0x03	; 3
    466c:	81 e0       	ldi	r24, 0x01	; 1
    466e:	90 e0       	ldi	r25, 0x00	; 0
    4670:	0e 94 2a 08 	call	0x1054	; 0x1054 <LCD_12864_Print_7_11>
	LCD_12864_Print_7_11(43, 3, 0, hum_street);
    4674:	2d e7       	ldi	r18, 0x7D	; 125
    4676:	32 e0       	ldi	r19, 0x02	; 2
    4678:	40 e0       	ldi	r20, 0x00	; 0
    467a:	63 e0       	ldi	r22, 0x03	; 3
    467c:	8b e2       	ldi	r24, 0x2B	; 43
    467e:	90 e0       	ldi	r25, 0x00	; 0
    4680:	0e 94 2a 08 	call	0x1054	; 0x1054 <LCD_12864_Print_7_11>
	sprintf(Vbat,"%.2f",V_BAT(adc_value1));
    4684:	81 e4       	ldi	r24, 0x41	; 65
    4686:	92 e0       	ldi	r25, 0x02	; 2
    4688:	0e 94 16 21 	call	0x422c	; 0x422c <V_BAT>
    468c:	9f 93       	push	r25
    468e:	8f 93       	push	r24
    4690:	7f 93       	push	r23
    4692:	6f 93       	push	r22
    4694:	09 ea       	ldi	r16, 0xA9	; 169
    4696:	11 e0       	ldi	r17, 0x01	; 1
    4698:	1f 93       	push	r17
    469a:	0f 93       	push	r16
    469c:	8d e2       	ldi	r24, 0x2D	; 45
    469e:	92 e0       	ldi	r25, 0x02	; 2
    46a0:	9f 93       	push	r25
    46a2:	8f 93       	push	r24
    46a4:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
	LCD_12864_Print_4_6(44, 2, 0, Vbat);
    46a8:	2d e2       	ldi	r18, 0x2D	; 45
    46aa:	32 e0       	ldi	r19, 0x02	; 2
    46ac:	40 e0       	ldi	r20, 0x00	; 0
    46ae:	62 e0       	ldi	r22, 0x02	; 2
    46b0:	8c e2       	ldi	r24, 0x2C	; 44
    46b2:	90 e0       	ldi	r25, 0x00	; 0
    46b4:	0e 94 9b 08 	call	0x1136	; 0x1136 <LCD_12864_Print_4_6>
	sprintf(WIND_speed,"%.2f", wind_speed (HALL_counter));
    46b8:	8f e5       	ldi	r24, 0x5F	; 95
    46ba:	92 e0       	ldi	r25, 0x02	; 2
    46bc:	0e 94 8c 22 	call	0x4518	; 0x4518 <wind_speed>
    46c0:	9f 93       	push	r25
    46c2:	8f 93       	push	r24
    46c4:	7f 93       	push	r23
    46c6:	6f 93       	push	r22
    46c8:	1f 93       	push	r17
    46ca:	0f 93       	push	r16
    46cc:	85 e5       	ldi	r24, 0x55	; 85
    46ce:	92 e0       	ldi	r25, 0x02	; 2
    46d0:	9f 93       	push	r25
    46d2:	8f 93       	push	r24
    46d4:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
	LCD_12864_Print_4_6(26, 5, 0, WIND_speed);
    46d8:	25 e5       	ldi	r18, 0x55	; 85
    46da:	32 e0       	ldi	r19, 0x02	; 2
    46dc:	40 e0       	ldi	r20, 0x00	; 0
    46de:	65 e0       	ldi	r22, 0x05	; 5
    46e0:	8a e1       	ldi	r24, 0x1A	; 26
    46e2:	90 e0       	ldi	r25, 0x00	; 0
    46e4:	0e 94 9b 08 	call	0x1136	; 0x1136 <LCD_12864_Print_4_6>
	LCD_12864_Decode_UTF8(45, 5, 0, "м/с");
    46e8:	2e ea       	ldi	r18, 0xAE	; 174
    46ea:	31 e0       	ldi	r19, 0x01	; 1
    46ec:	40 e0       	ldi	r20, 0x00	; 0
    46ee:	65 e0       	ldi	r22, 0x05	; 5
    46f0:	8d e2       	ldi	r24, 0x2D	; 45
    46f2:	90 e0       	ldi	r25, 0x00	; 0
    46f4:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(30, 6, 0, "осадки");
    46f8:	22 eb       	ldi	r18, 0xB2	; 178
    46fa:	31 e0       	ldi	r19, 0x01	; 1
    46fc:	40 e0       	ldi	r20, 0x00	; 0
    46fe:	66 e0       	ldi	r22, 0x06	; 6
    4700:	8e e1       	ldi	r24, 0x1E	; 30
    4702:	90 e0       	ldi	r25, 0x00	; 0
    4704:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_line(27, 52, 24, 52);
    4708:	24 e3       	ldi	r18, 0x34	; 52
    470a:	48 e1       	ldi	r20, 0x18	; 24
    470c:	64 e3       	ldi	r22, 0x34	; 52
    470e:	8b e1       	ldi	r24, 0x1B	; 27
    4710:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(24, 52, 24, 59);
    4714:	2b e3       	ldi	r18, 0x3B	; 59
    4716:	48 e1       	ldi	r20, 0x18	; 24
    4718:	64 e3       	ldi	r22, 0x34	; 52
    471a:	88 e1       	ldi	r24, 0x18	; 24
    471c:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(24, 59, 28, 59);
    4720:	2b e3       	ldi	r18, 0x3B	; 59
    4722:	4c e1       	ldi	r20, 0x1C	; 28
    4724:	6b e3       	ldi	r22, 0x3B	; 59
    4726:	88 e1       	ldi	r24, 0x18	; 24
    4728:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_pixel(27, 58);
    472c:	6a e3       	ldi	r22, 0x3A	; 58
    472e:	8b e1       	ldi	r24, 0x1B	; 27
    4730:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(27, 60);
    4734:	6c e3       	ldi	r22, 0x3C	; 60
    4736:	8b e1       	ldi	r24, 0x1B	; 27
    4738:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(26, 57);
    473c:	69 e3       	ldi	r22, 0x39	; 57
    473e:	8a e1       	ldi	r24, 0x1A	; 26
    4740:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(26, 61);
    4744:	6d e3       	ldi	r22, 0x3D	; 61
    4746:	8a e1       	ldi	r24, 0x1A	; 26
    4748:	0e 94 f6 03 	call	0x7ec	; 0x7ec <LCD_12864_Draw_pixel>
	if (RAIN_AMOUNT(adc_value2) >= 0.9f)  LCD_12864_Decode_UTF8(30, 7, 0, "отсутств.");
    474c:	87 e3       	ldi	r24, 0x37	; 55
    474e:	92 e0       	ldi	r25, 0x02	; 2
    4750:	0e 94 d9 20 	call	0x41b2	; 0x41b2 <RAIN_AMOUNT>
    4754:	2d b7       	in	r18, 0x3d	; 61
    4756:	3e b7       	in	r19, 0x3e	; 62
    4758:	28 5e       	subi	r18, 0xE8	; 232
    475a:	3f 4f       	sbci	r19, 0xFF	; 255
    475c:	0f b6       	in	r0, 0x3f	; 63
    475e:	f8 94       	cli
    4760:	3e bf       	out	0x3e, r19	; 62
    4762:	0f be       	out	0x3f, r0	; 63
    4764:	2d bf       	out	0x3d, r18	; 61
    4766:	26 e6       	ldi	r18, 0x66	; 102
    4768:	36 e6       	ldi	r19, 0x66	; 102
    476a:	46 e6       	ldi	r20, 0x66	; 102
    476c:	5f e3       	ldi	r21, 0x3F	; 63
    476e:	0e 94 b3 26 	call	0x4d66	; 0x4d66 <__gesf2>
    4772:	88 23       	and	r24, r24
    4774:	44 f0       	brlt	.+16     	; 0x4786 <Print_Home_Page+0x1fe>
    4776:	29 eb       	ldi	r18, 0xB9	; 185
    4778:	31 e0       	ldi	r19, 0x01	; 1
    477a:	40 e0       	ldi	r20, 0x00	; 0
    477c:	67 e0       	ldi	r22, 0x07	; 7
    477e:	8e e1       	ldi	r24, 0x1E	; 30
    4780:	90 e0       	ldi	r25, 0x00	; 0
    4782:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	

	//-----------Вывод показателей в доме-----------------------//
	if (dht22_GetData(data))
    4786:	88 ed       	ldi	r24, 0xD8	; 216
    4788:	91 e0       	ldi	r25, 0x01	; 1
    478a:	0e 94 95 03 	call	0x72a	; 0x72a <dht22_GetData>
    478e:	88 23       	and	r24, r24
    4790:	09 f4       	brne	.+2      	; 0x4794 <Print_Home_Page+0x20c>
    4792:	72 c0       	rjmp	.+228    	; 0x4878 <Print_Home_Page+0x2f0>
	{
		 //data[1]-младший бит температуры
		 //data[2]-старший бит температуры
		 //data[3]-младший бит влажности
		 //data[4]-старший бит влажности
		 temp = (float)(((data[2]<<8)|data[1]) / 10.0);
    4794:	e8 ed       	ldi	r30, 0xD8	; 216
    4796:	f1 e0       	ldi	r31, 0x01	; 1
    4798:	02 81       	ldd	r16, Z+2	; 0x02
    479a:	10 e0       	ldi	r17, 0x00	; 0
    479c:	10 2f       	mov	r17, r16
    479e:	00 27       	eor	r16, r16
    47a0:	81 81       	ldd	r24, Z+1	; 0x01
    47a2:	08 2b       	or	r16, r24
    47a4:	b8 01       	movw	r22, r16
    47a6:	01 2e       	mov	r0, r17
    47a8:	00 0c       	add	r0, r0
    47aa:	88 0b       	sbc	r24, r24
    47ac:	99 0b       	sbc	r25, r25
    47ae:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    47b2:	20 e0       	ldi	r18, 0x00	; 0
    47b4:	30 e0       	ldi	r19, 0x00	; 0
    47b6:	40 e2       	ldi	r20, 0x20	; 32
    47b8:	51 e4       	ldi	r21, 0x41	; 65
    47ba:	0e 94 59 25 	call	0x4ab2	; 0x4ab2 <__divsf3>
    47be:	60 93 e3 01 	sts	0x01E3, r22	; 0x8001e3 <temp>
    47c2:	70 93 e4 01 	sts	0x01E4, r23	; 0x8001e4 <temp+0x1>
    47c6:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <temp+0x2>
    47ca:	90 93 e6 01 	sts	0x01E6, r25	; 0x8001e6 <temp+0x3>
		 if (((data[2]<<8)|data[1]) & 0x8000) temp *= -1.0;
    47ce:	11 23       	and	r17, r17
    47d0:	5c f4       	brge	.+22     	; 0x47e8 <Print_Home_Page+0x260>
    47d2:	dc 01       	movw	r26, r24
    47d4:	cb 01       	movw	r24, r22
    47d6:	b0 58       	subi	r27, 0x80	; 128
    47d8:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <temp>
    47dc:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <temp+0x1>
    47e0:	a0 93 e5 01 	sts	0x01E5, r26	; 0x8001e5 <temp+0x2>
    47e4:	b0 93 e6 01 	sts	0x01E6, r27	; 0x8001e6 <temp+0x3>
		 sprintf(temp_home,"%.1f",temp);
    47e8:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <temp+0x3>
    47ec:	8f 93       	push	r24
    47ee:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <temp+0x2>
    47f2:	8f 93       	push	r24
    47f4:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <temp+0x1>
    47f8:	8f 93       	push	r24
    47fa:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <temp>
    47fe:	8f 93       	push	r24
    4800:	8a e3       	ldi	r24, 0x3A	; 58
    4802:	91 e0       	ldi	r25, 0x01	; 1
    4804:	9f 93       	push	r25
    4806:	8f 93       	push	r24
    4808:	83 e7       	ldi	r24, 0x73	; 115
    480a:	92 e0       	ldi	r25, 0x02	; 2
    480c:	9f 93       	push	r25
    480e:	8f 93       	push	r24
    4810:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
		 hum = (float)(((data[4]<<8)|data[3]) / 10.0);
    4814:	e8 ed       	ldi	r30, 0xD8	; 216
    4816:	f1 e0       	ldi	r31, 0x01	; 1
    4818:	64 81       	ldd	r22, Z+4	; 0x04
    481a:	70 e0       	ldi	r23, 0x00	; 0
    481c:	76 2f       	mov	r23, r22
    481e:	66 27       	eor	r22, r22
    4820:	83 81       	ldd	r24, Z+3	; 0x03
    4822:	68 2b       	or	r22, r24
    4824:	07 2e       	mov	r0, r23
    4826:	00 0c       	add	r0, r0
    4828:	88 0b       	sbc	r24, r24
    482a:	99 0b       	sbc	r25, r25
    482c:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    4830:	20 e0       	ldi	r18, 0x00	; 0
    4832:	30 e0       	ldi	r19, 0x00	; 0
    4834:	40 e2       	ldi	r20, 0x20	; 32
    4836:	51 e4       	ldi	r21, 0x41	; 65
    4838:	0e 94 59 25 	call	0x4ab2	; 0x4ab2 <__divsf3>
    483c:	60 93 df 01 	sts	0x01DF, r22	; 0x8001df <hum>
    4840:	70 93 e0 01 	sts	0x01E0, r23	; 0x8001e0 <hum+0x1>
    4844:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <hum+0x2>
    4848:	90 93 e2 01 	sts	0x01E2, r25	; 0x8001e2 <hum+0x3>
		 sprintf(hum_home,"%d",(int)hum);
    484c:	0e 94 cb 25 	call	0x4b96	; 0x4b96 <__fixsfsi>
    4850:	7f 93       	push	r23
    4852:	6f 93       	push	r22
    4854:	84 e9       	ldi	r24, 0x94	; 148
    4856:	91 e0       	ldi	r25, 0x01	; 1
    4858:	9f 93       	push	r25
    485a:	8f 93       	push	r24
    485c:	89 e6       	ldi	r24, 0x69	; 105
    485e:	92 e0       	ldi	r25, 0x02	; 2
    4860:	9f 93       	push	r25
    4862:	8f 93       	push	r24
    4864:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
    4868:	8d b7       	in	r24, 0x3d	; 61
    486a:	9e b7       	in	r25, 0x3e	; 62
    486c:	0e 96       	adiw	r24, 0x0e	; 14
    486e:	0f b6       	in	r0, 0x3f	; 63
    4870:	f8 94       	cli
    4872:	9e bf       	out	0x3e, r25	; 62
    4874:	0f be       	out	0x3f, r0	; 63
    4876:	8d bf       	out	0x3d, r24	; 61
	}
	pressure_home = BMP180_calculation()*0.0075;
    4878:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <BMP180_calculation>
    487c:	0e 94 03 26 	call	0x4c06	; 0x4c06 <__floatsisf>
    4880:	2f e8       	ldi	r18, 0x8F	; 143
    4882:	32 ec       	ldi	r19, 0xC2	; 194
    4884:	45 ef       	ldi	r20, 0xF5	; 245
    4886:	5b e3       	ldi	r21, 0x3B	; 59
    4888:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__mulsf3>
    488c:	0e 94 cb 25 	call	0x4b96	; 0x4b96 <__fixsfsi>
    4890:	60 93 dd 01 	sts	0x01DD, r22	; 0x8001dd <pressure_home>
    4894:	70 93 de 01 	sts	0x01DE, r23	; 0x8001de <pressure_home+0x1>
	sprintf(Press_home,"%d",pressure_home);
    4898:	7f 93       	push	r23
    489a:	6f 93       	push	r22
    489c:	84 e9       	ldi	r24, 0x94	; 148
    489e:	91 e0       	ldi	r25, 0x01	; 1
    48a0:	9f 93       	push	r25
    48a2:	8f 93       	push	r24
    48a4:	87 ee       	ldi	r24, 0xE7	; 231
    48a6:	91 e0       	ldi	r25, 0x01	; 1
    48a8:	9f 93       	push	r25
    48aa:	8f 93       	push	r24
    48ac:	0e 94 97 2c 	call	0x592e	; 0x592e <sprintf>
	LCD_12864_Decode_UTF8(95, 4, 0, "°C");
    48b0:	24 ea       	ldi	r18, 0xA4	; 164
    48b2:	31 e0       	ldi	r19, 0x01	; 1
    48b4:	40 e0       	ldi	r20, 0x00	; 0
    48b6:	64 e0       	ldi	r22, 0x04	; 4
    48b8:	8f e5       	ldi	r24, 0x5F	; 95
    48ba:	90 e0       	ldi	r25, 0x00	; 0
    48bc:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(66, 3, 0, temp_home);
    48c0:	23 e7       	ldi	r18, 0x73	; 115
    48c2:	32 e0       	ldi	r19, 0x02	; 2
    48c4:	40 e0       	ldi	r20, 0x00	; 0
    48c6:	63 e0       	ldi	r22, 0x03	; 3
    48c8:	82 e4       	ldi	r24, 0x42	; 66
    48ca:	90 e0       	ldi	r25, 0x00	; 0
    48cc:	0e 94 2a 08 	call	0x1054	; 0x1054 <LCD_12864_Print_7_11>
	LCD_12864_Decode_UTF8(123, 4, 0, "%");
    48d0:	27 ea       	ldi	r18, 0xA7	; 167
    48d2:	31 e0       	ldi	r19, 0x01	; 1
    48d4:	40 e0       	ldi	r20, 0x00	; 0
    48d6:	64 e0       	ldi	r22, 0x04	; 4
    48d8:	8b e7       	ldi	r24, 0x7B	; 123
    48da:	90 e0       	ldi	r25, 0x00	; 0
    48dc:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(108, 3, 0, hum_home);
    48e0:	29 e6       	ldi	r18, 0x69	; 105
    48e2:	32 e0       	ldi	r19, 0x02	; 2
    48e4:	40 e0       	ldi	r20, 0x00	; 0
    48e6:	63 e0       	ldi	r22, 0x03	; 3
    48e8:	8c e6       	ldi	r24, 0x6C	; 108
    48ea:	90 e0       	ldi	r25, 0x00	; 0
    48ec:	0e 94 2a 08 	call	0x1054	; 0x1054 <LCD_12864_Print_7_11>
	LCD_12864_Print_4_6(86, 2, 0, Press_home);
    48f0:	27 ee       	ldi	r18, 0xE7	; 231
    48f2:	31 e0       	ldi	r19, 0x01	; 1
    48f4:	40 e0       	ldi	r20, 0x00	; 0
    48f6:	62 e0       	ldi	r22, 0x02	; 2
    48f8:	86 e5       	ldi	r24, 0x56	; 86
    48fa:	90 e0       	ldi	r25, 0x00	; 0
    48fc:	0e 94 9b 08 	call	0x1136	; 0x1136 <LCD_12864_Print_4_6>
	LCD_12864_Decode_UTF8(101, 2, 0, "мм");
    4900:	23 ec       	ldi	r18, 0xC3	; 195
    4902:	31 e0       	ldi	r19, 0x01	; 1
    4904:	40 e0       	ldi	r20, 0x00	; 0
    4906:	62 e0       	ldi	r22, 0x02	; 2
    4908:	85 e6       	ldi	r24, 0x65	; 101
    490a:	90 e0       	ldi	r25, 0x00	; 0
    490c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(114, 2, 0, "Hg");
    4910:	26 ec       	ldi	r18, 0xC6	; 198
    4912:	31 e0       	ldi	r19, 0x01	; 1
    4914:	40 e0       	ldi	r20, 0x00	; 0
    4916:	62 e0       	ldi	r22, 0x02	; 2
    4918:	82 e7       	ldi	r24, 0x72	; 114
    491a:	90 e0       	ldi	r25, 0x00	; 0
    491c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	
	//-----------Вывод разделительных линий-----------------------//
	LCD_12864_Decode_UTF8(2, 2, 0, "улица");
    4920:	29 ec       	ldi	r18, 0xC9	; 201
    4922:	31 e0       	ldi	r19, 0x01	; 1
    4924:	40 e0       	ldi	r20, 0x00	; 0
    4926:	62 e0       	ldi	r22, 0x02	; 2
    4928:	82 e0       	ldi	r24, 0x02	; 2
    492a:	90 e0       	ldi	r25, 0x00	; 0
    492c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(65, 2, 0, "дом");
    4930:	2f ec       	ldi	r18, 0xCF	; 207
    4932:	31 e0       	ldi	r19, 0x01	; 1
    4934:	40 e0       	ldi	r20, 0x00	; 0
    4936:	62 e0       	ldi	r22, 0x02	; 2
    4938:	81 e4       	ldi	r24, 0x41	; 65
    493a:	90 e0       	ldi	r25, 0x00	; 0
    493c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_line(0, 16, 128, 16);
    4940:	20 e1       	ldi	r18, 0x10	; 16
    4942:	40 e8       	ldi	r20, 0x80	; 128
    4944:	60 e1       	ldi	r22, 0x10	; 16
    4946:	80 e0       	ldi	r24, 0x00	; 0
    4948:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	//LCD_12864_Draw_line(71, 0, 71, 15);
	//LCD_12864_Draw_line(97, 0, 97, 15);
	LCD_12864_Draw_line(0, 24, 32, 24);
    494c:	28 e1       	ldi	r18, 0x18	; 24
    494e:	40 e2       	ldi	r20, 0x20	; 32
    4950:	68 e1       	ldi	r22, 0x18	; 24
    4952:	80 e0       	ldi	r24, 0x00	; 0
    4954:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(32, 17, 32, 24);
    4958:	28 e1       	ldi	r18, 0x18	; 24
    495a:	40 e2       	ldi	r20, 0x20	; 32
    495c:	61 e1       	ldi	r22, 0x11	; 17
    495e:	80 e2       	ldi	r24, 0x20	; 32
    4960:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(0, 17, 0, 24);
    4964:	28 e1       	ldi	r18, 0x18	; 24
    4966:	40 e0       	ldi	r20, 0x00	; 0
    4968:	61 e1       	ldi	r22, 0x11	; 17
    496a:	80 e0       	ldi	r24, 0x00	; 0
    496c:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(64, 24, 83, 24);
    4970:	28 e1       	ldi	r18, 0x18	; 24
    4972:	43 e5       	ldi	r20, 0x53	; 83
    4974:	68 e1       	ldi	r22, 0x18	; 24
    4976:	80 e4       	ldi	r24, 0x40	; 64
    4978:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(83, 17, 83, 24);
    497c:	28 e1       	ldi	r18, 0x18	; 24
    497e:	43 e5       	ldi	r20, 0x53	; 83
    4980:	61 e1       	ldi	r22, 0x11	; 17
    4982:	83 e5       	ldi	r24, 0x53	; 83
    4984:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(63, 17, 63, 41);
    4988:	29 e2       	ldi	r18, 0x29	; 41
    498a:	4f e3       	ldi	r20, 0x3F	; 63
    498c:	61 e1       	ldi	r22, 0x11	; 17
    498e:	8f e3       	ldi	r24, 0x3F	; 63
    4990:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(63, 41, 128, 41);
    4994:	29 e2       	ldi	r18, 0x29	; 41
    4996:	40 e8       	ldi	r20, 0x80	; 128
    4998:	69 e2       	ldi	r22, 0x29	; 41
    499a:	8f e3       	ldi	r24, 0x3F	; 63
    499c:	0e 94 93 0a 	call	0x1526	; 0x1526 <LCD_12864_Draw_line>
	//-----------Вывод индикатора АКБ-----------------------//
	DrawBattery();
    49a0:	0e 94 54 21 	call	0x42a8	; 0x42a8 <DrawBattery>
	//-----------Вывод индикатора флюгера-----------------------//
	DrawWeatherVane();
    49a4:	0e 94 ab 1b 	call	0x3756	; 0x3756 <DrawWeatherVane>
	//-----------Вывод прогноза погоды-----------------------//
	DrawCloudsWithRain();
    49a8:	0e 94 62 1a 	call	0x34c4	; 0x34c4 <DrawCloudsWithRain>
	
	LCD_12864_Draw_bitmap(Frame_buffer);
    49ac:	ce 01       	movw	r24, r28
    49ae:	0e 94 18 05 	call	0xa30	; 0xa30 <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
    49b2:	80 e0       	ldi	r24, 0x00	; 0
    49b4:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <LCD_12864_GrapnicMode>
}
    49b8:	0f 90       	pop	r0
    49ba:	0f 90       	pop	r0
    49bc:	0f 90       	pop	r0
    49be:	0f 90       	pop	r0
    49c0:	0f 90       	pop	r0
    49c2:	0f 90       	pop	r0
    49c4:	df 91       	pop	r29
    49c6:	cf 91       	pop	r28
    49c8:	1f 91       	pop	r17
    49ca:	0f 91       	pop	r16
    49cc:	08 95       	ret

000049ce <__subsf3>:
    49ce:	50 58       	subi	r21, 0x80	; 128

000049d0 <__addsf3>:
    49d0:	bb 27       	eor	r27, r27
    49d2:	aa 27       	eor	r26, r26
    49d4:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__addsf3x>
    49d8:	0c 94 79 26 	jmp	0x4cf2	; 0x4cf2 <__fp_round>
    49dc:	0e 94 6b 26 	call	0x4cd6	; 0x4cd6 <__fp_pscA>
    49e0:	38 f0       	brcs	.+14     	; 0x49f0 <__addsf3+0x20>
    49e2:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <__fp_pscB>
    49e6:	20 f0       	brcs	.+8      	; 0x49f0 <__addsf3+0x20>
    49e8:	39 f4       	brne	.+14     	; 0x49f8 <__addsf3+0x28>
    49ea:	9f 3f       	cpi	r25, 0xFF	; 255
    49ec:	19 f4       	brne	.+6      	; 0x49f4 <__addsf3+0x24>
    49ee:	26 f4       	brtc	.+8      	; 0x49f8 <__addsf3+0x28>
    49f0:	0c 94 68 26 	jmp	0x4cd0	; 0x4cd0 <__fp_nan>
    49f4:	0e f4       	brtc	.+2      	; 0x49f8 <__addsf3+0x28>
    49f6:	e0 95       	com	r30
    49f8:	e7 fb       	bst	r30, 7
    49fa:	0c 94 62 26 	jmp	0x4cc4	; 0x4cc4 <__fp_inf>

000049fe <__addsf3x>:
    49fe:	e9 2f       	mov	r30, r25
    4a00:	0e 94 8a 26 	call	0x4d14	; 0x4d14 <__fp_split3>
    4a04:	58 f3       	brcs	.-42     	; 0x49dc <__addsf3+0xc>
    4a06:	ba 17       	cp	r27, r26
    4a08:	62 07       	cpc	r22, r18
    4a0a:	73 07       	cpc	r23, r19
    4a0c:	84 07       	cpc	r24, r20
    4a0e:	95 07       	cpc	r25, r21
    4a10:	20 f0       	brcs	.+8      	; 0x4a1a <__addsf3x+0x1c>
    4a12:	79 f4       	brne	.+30     	; 0x4a32 <__addsf3x+0x34>
    4a14:	a6 f5       	brtc	.+104    	; 0x4a7e <__addsf3x+0x80>
    4a16:	0c 94 ac 26 	jmp	0x4d58	; 0x4d58 <__fp_zero>
    4a1a:	0e f4       	brtc	.+2      	; 0x4a1e <__addsf3x+0x20>
    4a1c:	e0 95       	com	r30
    4a1e:	0b 2e       	mov	r0, r27
    4a20:	ba 2f       	mov	r27, r26
    4a22:	a0 2d       	mov	r26, r0
    4a24:	0b 01       	movw	r0, r22
    4a26:	b9 01       	movw	r22, r18
    4a28:	90 01       	movw	r18, r0
    4a2a:	0c 01       	movw	r0, r24
    4a2c:	ca 01       	movw	r24, r20
    4a2e:	a0 01       	movw	r20, r0
    4a30:	11 24       	eor	r1, r1
    4a32:	ff 27       	eor	r31, r31
    4a34:	59 1b       	sub	r21, r25
    4a36:	99 f0       	breq	.+38     	; 0x4a5e <__addsf3x+0x60>
    4a38:	59 3f       	cpi	r21, 0xF9	; 249
    4a3a:	50 f4       	brcc	.+20     	; 0x4a50 <__addsf3x+0x52>
    4a3c:	50 3e       	cpi	r21, 0xE0	; 224
    4a3e:	68 f1       	brcs	.+90     	; 0x4a9a <__addsf3x+0x9c>
    4a40:	1a 16       	cp	r1, r26
    4a42:	f0 40       	sbci	r31, 0x00	; 0
    4a44:	a2 2f       	mov	r26, r18
    4a46:	23 2f       	mov	r18, r19
    4a48:	34 2f       	mov	r19, r20
    4a4a:	44 27       	eor	r20, r20
    4a4c:	58 5f       	subi	r21, 0xF8	; 248
    4a4e:	f3 cf       	rjmp	.-26     	; 0x4a36 <__addsf3x+0x38>
    4a50:	46 95       	lsr	r20
    4a52:	37 95       	ror	r19
    4a54:	27 95       	ror	r18
    4a56:	a7 95       	ror	r26
    4a58:	f0 40       	sbci	r31, 0x00	; 0
    4a5a:	53 95       	inc	r21
    4a5c:	c9 f7       	brne	.-14     	; 0x4a50 <__addsf3x+0x52>
    4a5e:	7e f4       	brtc	.+30     	; 0x4a7e <__addsf3x+0x80>
    4a60:	1f 16       	cp	r1, r31
    4a62:	ba 0b       	sbc	r27, r26
    4a64:	62 0b       	sbc	r22, r18
    4a66:	73 0b       	sbc	r23, r19
    4a68:	84 0b       	sbc	r24, r20
    4a6a:	ba f0       	brmi	.+46     	; 0x4a9a <__addsf3x+0x9c>
    4a6c:	91 50       	subi	r25, 0x01	; 1
    4a6e:	a1 f0       	breq	.+40     	; 0x4a98 <__addsf3x+0x9a>
    4a70:	ff 0f       	add	r31, r31
    4a72:	bb 1f       	adc	r27, r27
    4a74:	66 1f       	adc	r22, r22
    4a76:	77 1f       	adc	r23, r23
    4a78:	88 1f       	adc	r24, r24
    4a7a:	c2 f7       	brpl	.-16     	; 0x4a6c <__addsf3x+0x6e>
    4a7c:	0e c0       	rjmp	.+28     	; 0x4a9a <__addsf3x+0x9c>
    4a7e:	ba 0f       	add	r27, r26
    4a80:	62 1f       	adc	r22, r18
    4a82:	73 1f       	adc	r23, r19
    4a84:	84 1f       	adc	r24, r20
    4a86:	48 f4       	brcc	.+18     	; 0x4a9a <__addsf3x+0x9c>
    4a88:	87 95       	ror	r24
    4a8a:	77 95       	ror	r23
    4a8c:	67 95       	ror	r22
    4a8e:	b7 95       	ror	r27
    4a90:	f7 95       	ror	r31
    4a92:	9e 3f       	cpi	r25, 0xFE	; 254
    4a94:	08 f0       	brcs	.+2      	; 0x4a98 <__addsf3x+0x9a>
    4a96:	b0 cf       	rjmp	.-160    	; 0x49f8 <__addsf3+0x28>
    4a98:	93 95       	inc	r25
    4a9a:	88 0f       	add	r24, r24
    4a9c:	08 f0       	brcs	.+2      	; 0x4aa0 <__addsf3x+0xa2>
    4a9e:	99 27       	eor	r25, r25
    4aa0:	ee 0f       	add	r30, r30
    4aa2:	97 95       	ror	r25
    4aa4:	87 95       	ror	r24
    4aa6:	08 95       	ret

00004aa8 <__cmpsf2>:
    4aa8:	0e 94 3e 26 	call	0x4c7c	; 0x4c7c <__fp_cmp>
    4aac:	08 f4       	brcc	.+2      	; 0x4ab0 <__cmpsf2+0x8>
    4aae:	81 e0       	ldi	r24, 0x01	; 1
    4ab0:	08 95       	ret

00004ab2 <__divsf3>:
    4ab2:	0e 94 6d 25 	call	0x4ada	; 0x4ada <__divsf3x>
    4ab6:	0c 94 79 26 	jmp	0x4cf2	; 0x4cf2 <__fp_round>
    4aba:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <__fp_pscB>
    4abe:	58 f0       	brcs	.+22     	; 0x4ad6 <__divsf3+0x24>
    4ac0:	0e 94 6b 26 	call	0x4cd6	; 0x4cd6 <__fp_pscA>
    4ac4:	40 f0       	brcs	.+16     	; 0x4ad6 <__divsf3+0x24>
    4ac6:	29 f4       	brne	.+10     	; 0x4ad2 <__divsf3+0x20>
    4ac8:	5f 3f       	cpi	r21, 0xFF	; 255
    4aca:	29 f0       	breq	.+10     	; 0x4ad6 <__divsf3+0x24>
    4acc:	0c 94 62 26 	jmp	0x4cc4	; 0x4cc4 <__fp_inf>
    4ad0:	51 11       	cpse	r21, r1
    4ad2:	0c 94 ad 26 	jmp	0x4d5a	; 0x4d5a <__fp_szero>
    4ad6:	0c 94 68 26 	jmp	0x4cd0	; 0x4cd0 <__fp_nan>

00004ada <__divsf3x>:
    4ada:	0e 94 8a 26 	call	0x4d14	; 0x4d14 <__fp_split3>
    4ade:	68 f3       	brcs	.-38     	; 0x4aba <__divsf3+0x8>

00004ae0 <__divsf3_pse>:
    4ae0:	99 23       	and	r25, r25
    4ae2:	b1 f3       	breq	.-20     	; 0x4ad0 <__divsf3+0x1e>
    4ae4:	55 23       	and	r21, r21
    4ae6:	91 f3       	breq	.-28     	; 0x4acc <__divsf3+0x1a>
    4ae8:	95 1b       	sub	r25, r21
    4aea:	55 0b       	sbc	r21, r21
    4aec:	bb 27       	eor	r27, r27
    4aee:	aa 27       	eor	r26, r26
    4af0:	62 17       	cp	r22, r18
    4af2:	73 07       	cpc	r23, r19
    4af4:	84 07       	cpc	r24, r20
    4af6:	38 f0       	brcs	.+14     	; 0x4b06 <__divsf3_pse+0x26>
    4af8:	9f 5f       	subi	r25, 0xFF	; 255
    4afa:	5f 4f       	sbci	r21, 0xFF	; 255
    4afc:	22 0f       	add	r18, r18
    4afe:	33 1f       	adc	r19, r19
    4b00:	44 1f       	adc	r20, r20
    4b02:	aa 1f       	adc	r26, r26
    4b04:	a9 f3       	breq	.-22     	; 0x4af0 <__divsf3_pse+0x10>
    4b06:	35 d0       	rcall	.+106    	; 0x4b72 <__divsf3_pse+0x92>
    4b08:	0e 2e       	mov	r0, r30
    4b0a:	3a f0       	brmi	.+14     	; 0x4b1a <__divsf3_pse+0x3a>
    4b0c:	e0 e8       	ldi	r30, 0x80	; 128
    4b0e:	32 d0       	rcall	.+100    	; 0x4b74 <__divsf3_pse+0x94>
    4b10:	91 50       	subi	r25, 0x01	; 1
    4b12:	50 40       	sbci	r21, 0x00	; 0
    4b14:	e6 95       	lsr	r30
    4b16:	00 1c       	adc	r0, r0
    4b18:	ca f7       	brpl	.-14     	; 0x4b0c <__divsf3_pse+0x2c>
    4b1a:	2b d0       	rcall	.+86     	; 0x4b72 <__divsf3_pse+0x92>
    4b1c:	fe 2f       	mov	r31, r30
    4b1e:	29 d0       	rcall	.+82     	; 0x4b72 <__divsf3_pse+0x92>
    4b20:	66 0f       	add	r22, r22
    4b22:	77 1f       	adc	r23, r23
    4b24:	88 1f       	adc	r24, r24
    4b26:	bb 1f       	adc	r27, r27
    4b28:	26 17       	cp	r18, r22
    4b2a:	37 07       	cpc	r19, r23
    4b2c:	48 07       	cpc	r20, r24
    4b2e:	ab 07       	cpc	r26, r27
    4b30:	b0 e8       	ldi	r27, 0x80	; 128
    4b32:	09 f0       	breq	.+2      	; 0x4b36 <__divsf3_pse+0x56>
    4b34:	bb 0b       	sbc	r27, r27
    4b36:	80 2d       	mov	r24, r0
    4b38:	bf 01       	movw	r22, r30
    4b3a:	ff 27       	eor	r31, r31
    4b3c:	93 58       	subi	r25, 0x83	; 131
    4b3e:	5f 4f       	sbci	r21, 0xFF	; 255
    4b40:	3a f0       	brmi	.+14     	; 0x4b50 <__divsf3_pse+0x70>
    4b42:	9e 3f       	cpi	r25, 0xFE	; 254
    4b44:	51 05       	cpc	r21, r1
    4b46:	78 f0       	brcs	.+30     	; 0x4b66 <__divsf3_pse+0x86>
    4b48:	0c 94 62 26 	jmp	0x4cc4	; 0x4cc4 <__fp_inf>
    4b4c:	0c 94 ad 26 	jmp	0x4d5a	; 0x4d5a <__fp_szero>
    4b50:	5f 3f       	cpi	r21, 0xFF	; 255
    4b52:	e4 f3       	brlt	.-8      	; 0x4b4c <__divsf3_pse+0x6c>
    4b54:	98 3e       	cpi	r25, 0xE8	; 232
    4b56:	d4 f3       	brlt	.-12     	; 0x4b4c <__divsf3_pse+0x6c>
    4b58:	86 95       	lsr	r24
    4b5a:	77 95       	ror	r23
    4b5c:	67 95       	ror	r22
    4b5e:	b7 95       	ror	r27
    4b60:	f7 95       	ror	r31
    4b62:	9f 5f       	subi	r25, 0xFF	; 255
    4b64:	c9 f7       	brne	.-14     	; 0x4b58 <__divsf3_pse+0x78>
    4b66:	88 0f       	add	r24, r24
    4b68:	91 1d       	adc	r25, r1
    4b6a:	96 95       	lsr	r25
    4b6c:	87 95       	ror	r24
    4b6e:	97 f9       	bld	r25, 7
    4b70:	08 95       	ret
    4b72:	e1 e0       	ldi	r30, 0x01	; 1
    4b74:	66 0f       	add	r22, r22
    4b76:	77 1f       	adc	r23, r23
    4b78:	88 1f       	adc	r24, r24
    4b7a:	bb 1f       	adc	r27, r27
    4b7c:	62 17       	cp	r22, r18
    4b7e:	73 07       	cpc	r23, r19
    4b80:	84 07       	cpc	r24, r20
    4b82:	ba 07       	cpc	r27, r26
    4b84:	20 f0       	brcs	.+8      	; 0x4b8e <__divsf3_pse+0xae>
    4b86:	62 1b       	sub	r22, r18
    4b88:	73 0b       	sbc	r23, r19
    4b8a:	84 0b       	sbc	r24, r20
    4b8c:	ba 0b       	sbc	r27, r26
    4b8e:	ee 1f       	adc	r30, r30
    4b90:	88 f7       	brcc	.-30     	; 0x4b74 <__divsf3_pse+0x94>
    4b92:	e0 95       	com	r30
    4b94:	08 95       	ret

00004b96 <__fixsfsi>:
    4b96:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <__fixunssfsi>
    4b9a:	68 94       	set
    4b9c:	b1 11       	cpse	r27, r1
    4b9e:	0c 94 ad 26 	jmp	0x4d5a	; 0x4d5a <__fp_szero>
    4ba2:	08 95       	ret

00004ba4 <__fixunssfsi>:
    4ba4:	0e 94 92 26 	call	0x4d24	; 0x4d24 <__fp_splitA>
    4ba8:	88 f0       	brcs	.+34     	; 0x4bcc <__fixunssfsi+0x28>
    4baa:	9f 57       	subi	r25, 0x7F	; 127
    4bac:	98 f0       	brcs	.+38     	; 0x4bd4 <__fixunssfsi+0x30>
    4bae:	b9 2f       	mov	r27, r25
    4bb0:	99 27       	eor	r25, r25
    4bb2:	b7 51       	subi	r27, 0x17	; 23
    4bb4:	b0 f0       	brcs	.+44     	; 0x4be2 <__fixunssfsi+0x3e>
    4bb6:	e1 f0       	breq	.+56     	; 0x4bf0 <__fixunssfsi+0x4c>
    4bb8:	66 0f       	add	r22, r22
    4bba:	77 1f       	adc	r23, r23
    4bbc:	88 1f       	adc	r24, r24
    4bbe:	99 1f       	adc	r25, r25
    4bc0:	1a f0       	brmi	.+6      	; 0x4bc8 <__fixunssfsi+0x24>
    4bc2:	ba 95       	dec	r27
    4bc4:	c9 f7       	brne	.-14     	; 0x4bb8 <__fixunssfsi+0x14>
    4bc6:	14 c0       	rjmp	.+40     	; 0x4bf0 <__fixunssfsi+0x4c>
    4bc8:	b1 30       	cpi	r27, 0x01	; 1
    4bca:	91 f0       	breq	.+36     	; 0x4bf0 <__fixunssfsi+0x4c>
    4bcc:	0e 94 ac 26 	call	0x4d58	; 0x4d58 <__fp_zero>
    4bd0:	b1 e0       	ldi	r27, 0x01	; 1
    4bd2:	08 95       	ret
    4bd4:	0c 94 ac 26 	jmp	0x4d58	; 0x4d58 <__fp_zero>
    4bd8:	67 2f       	mov	r22, r23
    4bda:	78 2f       	mov	r23, r24
    4bdc:	88 27       	eor	r24, r24
    4bde:	b8 5f       	subi	r27, 0xF8	; 248
    4be0:	39 f0       	breq	.+14     	; 0x4bf0 <__fixunssfsi+0x4c>
    4be2:	b9 3f       	cpi	r27, 0xF9	; 249
    4be4:	cc f3       	brlt	.-14     	; 0x4bd8 <__fixunssfsi+0x34>
    4be6:	86 95       	lsr	r24
    4be8:	77 95       	ror	r23
    4bea:	67 95       	ror	r22
    4bec:	b3 95       	inc	r27
    4bee:	d9 f7       	brne	.-10     	; 0x4be6 <__fixunssfsi+0x42>
    4bf0:	3e f4       	brtc	.+14     	; 0x4c00 <__fixunssfsi+0x5c>
    4bf2:	90 95       	com	r25
    4bf4:	80 95       	com	r24
    4bf6:	70 95       	com	r23
    4bf8:	61 95       	neg	r22
    4bfa:	7f 4f       	sbci	r23, 0xFF	; 255
    4bfc:	8f 4f       	sbci	r24, 0xFF	; 255
    4bfe:	9f 4f       	sbci	r25, 0xFF	; 255
    4c00:	08 95       	ret

00004c02 <__floatunsisf>:
    4c02:	e8 94       	clt
    4c04:	09 c0       	rjmp	.+18     	; 0x4c18 <__floatsisf+0x12>

00004c06 <__floatsisf>:
    4c06:	97 fb       	bst	r25, 7
    4c08:	3e f4       	brtc	.+14     	; 0x4c18 <__floatsisf+0x12>
    4c0a:	90 95       	com	r25
    4c0c:	80 95       	com	r24
    4c0e:	70 95       	com	r23
    4c10:	61 95       	neg	r22
    4c12:	7f 4f       	sbci	r23, 0xFF	; 255
    4c14:	8f 4f       	sbci	r24, 0xFF	; 255
    4c16:	9f 4f       	sbci	r25, 0xFF	; 255
    4c18:	99 23       	and	r25, r25
    4c1a:	a9 f0       	breq	.+42     	; 0x4c46 <__floatsisf+0x40>
    4c1c:	f9 2f       	mov	r31, r25
    4c1e:	96 e9       	ldi	r25, 0x96	; 150
    4c20:	bb 27       	eor	r27, r27
    4c22:	93 95       	inc	r25
    4c24:	f6 95       	lsr	r31
    4c26:	87 95       	ror	r24
    4c28:	77 95       	ror	r23
    4c2a:	67 95       	ror	r22
    4c2c:	b7 95       	ror	r27
    4c2e:	f1 11       	cpse	r31, r1
    4c30:	f8 cf       	rjmp	.-16     	; 0x4c22 <__floatsisf+0x1c>
    4c32:	fa f4       	brpl	.+62     	; 0x4c72 <__floatsisf+0x6c>
    4c34:	bb 0f       	add	r27, r27
    4c36:	11 f4       	brne	.+4      	; 0x4c3c <__floatsisf+0x36>
    4c38:	60 ff       	sbrs	r22, 0
    4c3a:	1b c0       	rjmp	.+54     	; 0x4c72 <__floatsisf+0x6c>
    4c3c:	6f 5f       	subi	r22, 0xFF	; 255
    4c3e:	7f 4f       	sbci	r23, 0xFF	; 255
    4c40:	8f 4f       	sbci	r24, 0xFF	; 255
    4c42:	9f 4f       	sbci	r25, 0xFF	; 255
    4c44:	16 c0       	rjmp	.+44     	; 0x4c72 <__floatsisf+0x6c>
    4c46:	88 23       	and	r24, r24
    4c48:	11 f0       	breq	.+4      	; 0x4c4e <__floatsisf+0x48>
    4c4a:	96 e9       	ldi	r25, 0x96	; 150
    4c4c:	11 c0       	rjmp	.+34     	; 0x4c70 <__floatsisf+0x6a>
    4c4e:	77 23       	and	r23, r23
    4c50:	21 f0       	breq	.+8      	; 0x4c5a <__floatsisf+0x54>
    4c52:	9e e8       	ldi	r25, 0x8E	; 142
    4c54:	87 2f       	mov	r24, r23
    4c56:	76 2f       	mov	r23, r22
    4c58:	05 c0       	rjmp	.+10     	; 0x4c64 <__floatsisf+0x5e>
    4c5a:	66 23       	and	r22, r22
    4c5c:	71 f0       	breq	.+28     	; 0x4c7a <__floatsisf+0x74>
    4c5e:	96 e8       	ldi	r25, 0x86	; 134
    4c60:	86 2f       	mov	r24, r22
    4c62:	70 e0       	ldi	r23, 0x00	; 0
    4c64:	60 e0       	ldi	r22, 0x00	; 0
    4c66:	2a f0       	brmi	.+10     	; 0x4c72 <__floatsisf+0x6c>
    4c68:	9a 95       	dec	r25
    4c6a:	66 0f       	add	r22, r22
    4c6c:	77 1f       	adc	r23, r23
    4c6e:	88 1f       	adc	r24, r24
    4c70:	da f7       	brpl	.-10     	; 0x4c68 <__floatsisf+0x62>
    4c72:	88 0f       	add	r24, r24
    4c74:	96 95       	lsr	r25
    4c76:	87 95       	ror	r24
    4c78:	97 f9       	bld	r25, 7
    4c7a:	08 95       	ret

00004c7c <__fp_cmp>:
    4c7c:	99 0f       	add	r25, r25
    4c7e:	00 08       	sbc	r0, r0
    4c80:	55 0f       	add	r21, r21
    4c82:	aa 0b       	sbc	r26, r26
    4c84:	e0 e8       	ldi	r30, 0x80	; 128
    4c86:	fe ef       	ldi	r31, 0xFE	; 254
    4c88:	16 16       	cp	r1, r22
    4c8a:	17 06       	cpc	r1, r23
    4c8c:	e8 07       	cpc	r30, r24
    4c8e:	f9 07       	cpc	r31, r25
    4c90:	c0 f0       	brcs	.+48     	; 0x4cc2 <__fp_cmp+0x46>
    4c92:	12 16       	cp	r1, r18
    4c94:	13 06       	cpc	r1, r19
    4c96:	e4 07       	cpc	r30, r20
    4c98:	f5 07       	cpc	r31, r21
    4c9a:	98 f0       	brcs	.+38     	; 0x4cc2 <__fp_cmp+0x46>
    4c9c:	62 1b       	sub	r22, r18
    4c9e:	73 0b       	sbc	r23, r19
    4ca0:	84 0b       	sbc	r24, r20
    4ca2:	95 0b       	sbc	r25, r21
    4ca4:	39 f4       	brne	.+14     	; 0x4cb4 <__fp_cmp+0x38>
    4ca6:	0a 26       	eor	r0, r26
    4ca8:	61 f0       	breq	.+24     	; 0x4cc2 <__fp_cmp+0x46>
    4caa:	23 2b       	or	r18, r19
    4cac:	24 2b       	or	r18, r20
    4cae:	25 2b       	or	r18, r21
    4cb0:	21 f4       	brne	.+8      	; 0x4cba <__fp_cmp+0x3e>
    4cb2:	08 95       	ret
    4cb4:	0a 26       	eor	r0, r26
    4cb6:	09 f4       	brne	.+2      	; 0x4cba <__fp_cmp+0x3e>
    4cb8:	a1 40       	sbci	r26, 0x01	; 1
    4cba:	a6 95       	lsr	r26
    4cbc:	8f ef       	ldi	r24, 0xFF	; 255
    4cbe:	81 1d       	adc	r24, r1
    4cc0:	81 1d       	adc	r24, r1
    4cc2:	08 95       	ret

00004cc4 <__fp_inf>:
    4cc4:	97 f9       	bld	r25, 7
    4cc6:	9f 67       	ori	r25, 0x7F	; 127
    4cc8:	80 e8       	ldi	r24, 0x80	; 128
    4cca:	70 e0       	ldi	r23, 0x00	; 0
    4ccc:	60 e0       	ldi	r22, 0x00	; 0
    4cce:	08 95       	ret

00004cd0 <__fp_nan>:
    4cd0:	9f ef       	ldi	r25, 0xFF	; 255
    4cd2:	80 ec       	ldi	r24, 0xC0	; 192
    4cd4:	08 95       	ret

00004cd6 <__fp_pscA>:
    4cd6:	00 24       	eor	r0, r0
    4cd8:	0a 94       	dec	r0
    4cda:	16 16       	cp	r1, r22
    4cdc:	17 06       	cpc	r1, r23
    4cde:	18 06       	cpc	r1, r24
    4ce0:	09 06       	cpc	r0, r25
    4ce2:	08 95       	ret

00004ce4 <__fp_pscB>:
    4ce4:	00 24       	eor	r0, r0
    4ce6:	0a 94       	dec	r0
    4ce8:	12 16       	cp	r1, r18
    4cea:	13 06       	cpc	r1, r19
    4cec:	14 06       	cpc	r1, r20
    4cee:	05 06       	cpc	r0, r21
    4cf0:	08 95       	ret

00004cf2 <__fp_round>:
    4cf2:	09 2e       	mov	r0, r25
    4cf4:	03 94       	inc	r0
    4cf6:	00 0c       	add	r0, r0
    4cf8:	11 f4       	brne	.+4      	; 0x4cfe <__fp_round+0xc>
    4cfa:	88 23       	and	r24, r24
    4cfc:	52 f0       	brmi	.+20     	; 0x4d12 <__fp_round+0x20>
    4cfe:	bb 0f       	add	r27, r27
    4d00:	40 f4       	brcc	.+16     	; 0x4d12 <__fp_round+0x20>
    4d02:	bf 2b       	or	r27, r31
    4d04:	11 f4       	brne	.+4      	; 0x4d0a <__fp_round+0x18>
    4d06:	60 ff       	sbrs	r22, 0
    4d08:	04 c0       	rjmp	.+8      	; 0x4d12 <__fp_round+0x20>
    4d0a:	6f 5f       	subi	r22, 0xFF	; 255
    4d0c:	7f 4f       	sbci	r23, 0xFF	; 255
    4d0e:	8f 4f       	sbci	r24, 0xFF	; 255
    4d10:	9f 4f       	sbci	r25, 0xFF	; 255
    4d12:	08 95       	ret

00004d14 <__fp_split3>:
    4d14:	57 fd       	sbrc	r21, 7
    4d16:	90 58       	subi	r25, 0x80	; 128
    4d18:	44 0f       	add	r20, r20
    4d1a:	55 1f       	adc	r21, r21
    4d1c:	59 f0       	breq	.+22     	; 0x4d34 <__fp_splitA+0x10>
    4d1e:	5f 3f       	cpi	r21, 0xFF	; 255
    4d20:	71 f0       	breq	.+28     	; 0x4d3e <__fp_splitA+0x1a>
    4d22:	47 95       	ror	r20

00004d24 <__fp_splitA>:
    4d24:	88 0f       	add	r24, r24
    4d26:	97 fb       	bst	r25, 7
    4d28:	99 1f       	adc	r25, r25
    4d2a:	61 f0       	breq	.+24     	; 0x4d44 <__fp_splitA+0x20>
    4d2c:	9f 3f       	cpi	r25, 0xFF	; 255
    4d2e:	79 f0       	breq	.+30     	; 0x4d4e <__fp_splitA+0x2a>
    4d30:	87 95       	ror	r24
    4d32:	08 95       	ret
    4d34:	12 16       	cp	r1, r18
    4d36:	13 06       	cpc	r1, r19
    4d38:	14 06       	cpc	r1, r20
    4d3a:	55 1f       	adc	r21, r21
    4d3c:	f2 cf       	rjmp	.-28     	; 0x4d22 <__fp_split3+0xe>
    4d3e:	46 95       	lsr	r20
    4d40:	f1 df       	rcall	.-30     	; 0x4d24 <__fp_splitA>
    4d42:	08 c0       	rjmp	.+16     	; 0x4d54 <__fp_splitA+0x30>
    4d44:	16 16       	cp	r1, r22
    4d46:	17 06       	cpc	r1, r23
    4d48:	18 06       	cpc	r1, r24
    4d4a:	99 1f       	adc	r25, r25
    4d4c:	f1 cf       	rjmp	.-30     	; 0x4d30 <__fp_splitA+0xc>
    4d4e:	86 95       	lsr	r24
    4d50:	71 05       	cpc	r23, r1
    4d52:	61 05       	cpc	r22, r1
    4d54:	08 94       	sec
    4d56:	08 95       	ret

00004d58 <__fp_zero>:
    4d58:	e8 94       	clt

00004d5a <__fp_szero>:
    4d5a:	bb 27       	eor	r27, r27
    4d5c:	66 27       	eor	r22, r22
    4d5e:	77 27       	eor	r23, r23
    4d60:	cb 01       	movw	r24, r22
    4d62:	97 f9       	bld	r25, 7
    4d64:	08 95       	ret

00004d66 <__gesf2>:
    4d66:	0e 94 3e 26 	call	0x4c7c	; 0x4c7c <__fp_cmp>
    4d6a:	08 f4       	brcc	.+2      	; 0x4d6e <__gesf2+0x8>
    4d6c:	8f ef       	ldi	r24, 0xFF	; 255
    4d6e:	08 95       	ret

00004d70 <__mulsf3>:
    4d70:	0e 94 cb 26 	call	0x4d96	; 0x4d96 <__mulsf3x>
    4d74:	0c 94 79 26 	jmp	0x4cf2	; 0x4cf2 <__fp_round>
    4d78:	0e 94 6b 26 	call	0x4cd6	; 0x4cd6 <__fp_pscA>
    4d7c:	38 f0       	brcs	.+14     	; 0x4d8c <__mulsf3+0x1c>
    4d7e:	0e 94 72 26 	call	0x4ce4	; 0x4ce4 <__fp_pscB>
    4d82:	20 f0       	brcs	.+8      	; 0x4d8c <__mulsf3+0x1c>
    4d84:	95 23       	and	r25, r21
    4d86:	11 f0       	breq	.+4      	; 0x4d8c <__mulsf3+0x1c>
    4d88:	0c 94 62 26 	jmp	0x4cc4	; 0x4cc4 <__fp_inf>
    4d8c:	0c 94 68 26 	jmp	0x4cd0	; 0x4cd0 <__fp_nan>
    4d90:	11 24       	eor	r1, r1
    4d92:	0c 94 ad 26 	jmp	0x4d5a	; 0x4d5a <__fp_szero>

00004d96 <__mulsf3x>:
    4d96:	0e 94 8a 26 	call	0x4d14	; 0x4d14 <__fp_split3>
    4d9a:	70 f3       	brcs	.-36     	; 0x4d78 <__mulsf3+0x8>

00004d9c <__mulsf3_pse>:
    4d9c:	95 9f       	mul	r25, r21
    4d9e:	c1 f3       	breq	.-16     	; 0x4d90 <__mulsf3+0x20>
    4da0:	95 0f       	add	r25, r21
    4da2:	50 e0       	ldi	r21, 0x00	; 0
    4da4:	55 1f       	adc	r21, r21
    4da6:	62 9f       	mul	r22, r18
    4da8:	f0 01       	movw	r30, r0
    4daa:	72 9f       	mul	r23, r18
    4dac:	bb 27       	eor	r27, r27
    4dae:	f0 0d       	add	r31, r0
    4db0:	b1 1d       	adc	r27, r1
    4db2:	63 9f       	mul	r22, r19
    4db4:	aa 27       	eor	r26, r26
    4db6:	f0 0d       	add	r31, r0
    4db8:	b1 1d       	adc	r27, r1
    4dba:	aa 1f       	adc	r26, r26
    4dbc:	64 9f       	mul	r22, r20
    4dbe:	66 27       	eor	r22, r22
    4dc0:	b0 0d       	add	r27, r0
    4dc2:	a1 1d       	adc	r26, r1
    4dc4:	66 1f       	adc	r22, r22
    4dc6:	82 9f       	mul	r24, r18
    4dc8:	22 27       	eor	r18, r18
    4dca:	b0 0d       	add	r27, r0
    4dcc:	a1 1d       	adc	r26, r1
    4dce:	62 1f       	adc	r22, r18
    4dd0:	73 9f       	mul	r23, r19
    4dd2:	b0 0d       	add	r27, r0
    4dd4:	a1 1d       	adc	r26, r1
    4dd6:	62 1f       	adc	r22, r18
    4dd8:	83 9f       	mul	r24, r19
    4dda:	a0 0d       	add	r26, r0
    4ddc:	61 1d       	adc	r22, r1
    4dde:	22 1f       	adc	r18, r18
    4de0:	74 9f       	mul	r23, r20
    4de2:	33 27       	eor	r19, r19
    4de4:	a0 0d       	add	r26, r0
    4de6:	61 1d       	adc	r22, r1
    4de8:	23 1f       	adc	r18, r19
    4dea:	84 9f       	mul	r24, r20
    4dec:	60 0d       	add	r22, r0
    4dee:	21 1d       	adc	r18, r1
    4df0:	82 2f       	mov	r24, r18
    4df2:	76 2f       	mov	r23, r22
    4df4:	6a 2f       	mov	r22, r26
    4df6:	11 24       	eor	r1, r1
    4df8:	9f 57       	subi	r25, 0x7F	; 127
    4dfa:	50 40       	sbci	r21, 0x00	; 0
    4dfc:	9a f0       	brmi	.+38     	; 0x4e24 <__mulsf3_pse+0x88>
    4dfe:	f1 f0       	breq	.+60     	; 0x4e3c <__mulsf3_pse+0xa0>
    4e00:	88 23       	and	r24, r24
    4e02:	4a f0       	brmi	.+18     	; 0x4e16 <__mulsf3_pse+0x7a>
    4e04:	ee 0f       	add	r30, r30
    4e06:	ff 1f       	adc	r31, r31
    4e08:	bb 1f       	adc	r27, r27
    4e0a:	66 1f       	adc	r22, r22
    4e0c:	77 1f       	adc	r23, r23
    4e0e:	88 1f       	adc	r24, r24
    4e10:	91 50       	subi	r25, 0x01	; 1
    4e12:	50 40       	sbci	r21, 0x00	; 0
    4e14:	a9 f7       	brne	.-22     	; 0x4e00 <__mulsf3_pse+0x64>
    4e16:	9e 3f       	cpi	r25, 0xFE	; 254
    4e18:	51 05       	cpc	r21, r1
    4e1a:	80 f0       	brcs	.+32     	; 0x4e3c <__mulsf3_pse+0xa0>
    4e1c:	0c 94 62 26 	jmp	0x4cc4	; 0x4cc4 <__fp_inf>
    4e20:	0c 94 ad 26 	jmp	0x4d5a	; 0x4d5a <__fp_szero>
    4e24:	5f 3f       	cpi	r21, 0xFF	; 255
    4e26:	e4 f3       	brlt	.-8      	; 0x4e20 <__mulsf3_pse+0x84>
    4e28:	98 3e       	cpi	r25, 0xE8	; 232
    4e2a:	d4 f3       	brlt	.-12     	; 0x4e20 <__mulsf3_pse+0x84>
    4e2c:	86 95       	lsr	r24
    4e2e:	77 95       	ror	r23
    4e30:	67 95       	ror	r22
    4e32:	b7 95       	ror	r27
    4e34:	f7 95       	ror	r31
    4e36:	e7 95       	ror	r30
    4e38:	9f 5f       	subi	r25, 0xFF	; 255
    4e3a:	c1 f7       	brne	.-16     	; 0x4e2c <__mulsf3_pse+0x90>
    4e3c:	fe 2b       	or	r31, r30
    4e3e:	88 0f       	add	r24, r24
    4e40:	91 1d       	adc	r25, r1
    4e42:	96 95       	lsr	r25
    4e44:	87 95       	ror	r24
    4e46:	97 f9       	bld	r25, 7
    4e48:	08 95       	ret

00004e4a <vfprintf>:
    4e4a:	a0 e1       	ldi	r26, 0x10	; 16
    4e4c:	b0 e0       	ldi	r27, 0x00	; 0
    4e4e:	eb e2       	ldi	r30, 0x2B	; 43
    4e50:	f7 e2       	ldi	r31, 0x27	; 39
    4e52:	0c 94 0c 2b 	jmp	0x5618	; 0x5618 <__prologue_saves__>
    4e56:	7c 01       	movw	r14, r24
    4e58:	1b 01       	movw	r2, r22
    4e5a:	6a 01       	movw	r12, r20
    4e5c:	fc 01       	movw	r30, r24
    4e5e:	17 82       	std	Z+7, r1	; 0x07
    4e60:	16 82       	std	Z+6, r1	; 0x06
    4e62:	83 81       	ldd	r24, Z+3	; 0x03
    4e64:	81 ff       	sbrs	r24, 1
    4e66:	44 c3       	rjmp	.+1672   	; 0x54f0 <vfprintf+0x6a6>
    4e68:	9e 01       	movw	r18, r28
    4e6a:	2f 5f       	subi	r18, 0xFF	; 255
    4e6c:	3f 4f       	sbci	r19, 0xFF	; 255
    4e6e:	39 01       	movw	r6, r18
    4e70:	f7 01       	movw	r30, r14
    4e72:	93 81       	ldd	r25, Z+3	; 0x03
    4e74:	f1 01       	movw	r30, r2
    4e76:	93 fd       	sbrc	r25, 3
    4e78:	85 91       	lpm	r24, Z+
    4e7a:	93 ff       	sbrs	r25, 3
    4e7c:	81 91       	ld	r24, Z+
    4e7e:	1f 01       	movw	r2, r30
    4e80:	88 23       	and	r24, r24
    4e82:	09 f4       	brne	.+2      	; 0x4e86 <vfprintf+0x3c>
    4e84:	31 c3       	rjmp	.+1634   	; 0x54e8 <vfprintf+0x69e>
    4e86:	85 32       	cpi	r24, 0x25	; 37
    4e88:	39 f4       	brne	.+14     	; 0x4e98 <vfprintf+0x4e>
    4e8a:	93 fd       	sbrc	r25, 3
    4e8c:	85 91       	lpm	r24, Z+
    4e8e:	93 ff       	sbrs	r25, 3
    4e90:	81 91       	ld	r24, Z+
    4e92:	1f 01       	movw	r2, r30
    4e94:	85 32       	cpi	r24, 0x25	; 37
    4e96:	39 f4       	brne	.+14     	; 0x4ea6 <vfprintf+0x5c>
    4e98:	b7 01       	movw	r22, r14
    4e9a:	90 e0       	ldi	r25, 0x00	; 0
    4e9c:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    4ea0:	56 01       	movw	r10, r12
    4ea2:	65 01       	movw	r12, r10
    4ea4:	e5 cf       	rjmp	.-54     	; 0x4e70 <vfprintf+0x26>
    4ea6:	10 e0       	ldi	r17, 0x00	; 0
    4ea8:	51 2c       	mov	r5, r1
    4eaa:	91 2c       	mov	r9, r1
    4eac:	ff e1       	ldi	r31, 0x1F	; 31
    4eae:	f9 15       	cp	r31, r9
    4eb0:	d8 f0       	brcs	.+54     	; 0x4ee8 <vfprintf+0x9e>
    4eb2:	8b 32       	cpi	r24, 0x2B	; 43
    4eb4:	79 f0       	breq	.+30     	; 0x4ed4 <vfprintf+0x8a>
    4eb6:	38 f4       	brcc	.+14     	; 0x4ec6 <vfprintf+0x7c>
    4eb8:	80 32       	cpi	r24, 0x20	; 32
    4eba:	79 f0       	breq	.+30     	; 0x4eda <vfprintf+0x90>
    4ebc:	83 32       	cpi	r24, 0x23	; 35
    4ebe:	a1 f4       	brne	.+40     	; 0x4ee8 <vfprintf+0x9e>
    4ec0:	f9 2d       	mov	r31, r9
    4ec2:	f0 61       	ori	r31, 0x10	; 16
    4ec4:	2e c0       	rjmp	.+92     	; 0x4f22 <vfprintf+0xd8>
    4ec6:	8d 32       	cpi	r24, 0x2D	; 45
    4ec8:	61 f0       	breq	.+24     	; 0x4ee2 <vfprintf+0x98>
    4eca:	80 33       	cpi	r24, 0x30	; 48
    4ecc:	69 f4       	brne	.+26     	; 0x4ee8 <vfprintf+0x9e>
    4ece:	29 2d       	mov	r18, r9
    4ed0:	21 60       	ori	r18, 0x01	; 1
    4ed2:	2d c0       	rjmp	.+90     	; 0x4f2e <vfprintf+0xe4>
    4ed4:	39 2d       	mov	r19, r9
    4ed6:	32 60       	ori	r19, 0x02	; 2
    4ed8:	93 2e       	mov	r9, r19
    4eda:	89 2d       	mov	r24, r9
    4edc:	84 60       	ori	r24, 0x04	; 4
    4ede:	98 2e       	mov	r9, r24
    4ee0:	2a c0       	rjmp	.+84     	; 0x4f36 <vfprintf+0xec>
    4ee2:	e9 2d       	mov	r30, r9
    4ee4:	e8 60       	ori	r30, 0x08	; 8
    4ee6:	15 c0       	rjmp	.+42     	; 0x4f12 <vfprintf+0xc8>
    4ee8:	97 fc       	sbrc	r9, 7
    4eea:	2d c0       	rjmp	.+90     	; 0x4f46 <vfprintf+0xfc>
    4eec:	20 ed       	ldi	r18, 0xD0	; 208
    4eee:	28 0f       	add	r18, r24
    4ef0:	2a 30       	cpi	r18, 0x0A	; 10
    4ef2:	88 f4       	brcc	.+34     	; 0x4f16 <vfprintf+0xcc>
    4ef4:	96 fe       	sbrs	r9, 6
    4ef6:	06 c0       	rjmp	.+12     	; 0x4f04 <vfprintf+0xba>
    4ef8:	3a e0       	ldi	r19, 0x0A	; 10
    4efa:	13 9f       	mul	r17, r19
    4efc:	20 0d       	add	r18, r0
    4efe:	11 24       	eor	r1, r1
    4f00:	12 2f       	mov	r17, r18
    4f02:	19 c0       	rjmp	.+50     	; 0x4f36 <vfprintf+0xec>
    4f04:	8a e0       	ldi	r24, 0x0A	; 10
    4f06:	58 9e       	mul	r5, r24
    4f08:	20 0d       	add	r18, r0
    4f0a:	11 24       	eor	r1, r1
    4f0c:	52 2e       	mov	r5, r18
    4f0e:	e9 2d       	mov	r30, r9
    4f10:	e0 62       	ori	r30, 0x20	; 32
    4f12:	9e 2e       	mov	r9, r30
    4f14:	10 c0       	rjmp	.+32     	; 0x4f36 <vfprintf+0xec>
    4f16:	8e 32       	cpi	r24, 0x2E	; 46
    4f18:	31 f4       	brne	.+12     	; 0x4f26 <vfprintf+0xdc>
    4f1a:	96 fc       	sbrc	r9, 6
    4f1c:	e5 c2       	rjmp	.+1482   	; 0x54e8 <vfprintf+0x69e>
    4f1e:	f9 2d       	mov	r31, r9
    4f20:	f0 64       	ori	r31, 0x40	; 64
    4f22:	9f 2e       	mov	r9, r31
    4f24:	08 c0       	rjmp	.+16     	; 0x4f36 <vfprintf+0xec>
    4f26:	8c 36       	cpi	r24, 0x6C	; 108
    4f28:	21 f4       	brne	.+8      	; 0x4f32 <vfprintf+0xe8>
    4f2a:	29 2d       	mov	r18, r9
    4f2c:	20 68       	ori	r18, 0x80	; 128
    4f2e:	92 2e       	mov	r9, r18
    4f30:	02 c0       	rjmp	.+4      	; 0x4f36 <vfprintf+0xec>
    4f32:	88 36       	cpi	r24, 0x68	; 104
    4f34:	41 f4       	brne	.+16     	; 0x4f46 <vfprintf+0xfc>
    4f36:	f1 01       	movw	r30, r2
    4f38:	93 fd       	sbrc	r25, 3
    4f3a:	85 91       	lpm	r24, Z+
    4f3c:	93 ff       	sbrs	r25, 3
    4f3e:	81 91       	ld	r24, Z+
    4f40:	1f 01       	movw	r2, r30
    4f42:	81 11       	cpse	r24, r1
    4f44:	b3 cf       	rjmp	.-154    	; 0x4eac <vfprintf+0x62>
    4f46:	9b eb       	ldi	r25, 0xBB	; 187
    4f48:	98 0f       	add	r25, r24
    4f4a:	93 30       	cpi	r25, 0x03	; 3
    4f4c:	20 f4       	brcc	.+8      	; 0x4f56 <vfprintf+0x10c>
    4f4e:	99 2d       	mov	r25, r9
    4f50:	90 61       	ori	r25, 0x10	; 16
    4f52:	80 5e       	subi	r24, 0xE0	; 224
    4f54:	07 c0       	rjmp	.+14     	; 0x4f64 <vfprintf+0x11a>
    4f56:	9b e9       	ldi	r25, 0x9B	; 155
    4f58:	98 0f       	add	r25, r24
    4f5a:	93 30       	cpi	r25, 0x03	; 3
    4f5c:	08 f0       	brcs	.+2      	; 0x4f60 <vfprintf+0x116>
    4f5e:	66 c1       	rjmp	.+716    	; 0x522c <vfprintf+0x3e2>
    4f60:	99 2d       	mov	r25, r9
    4f62:	9f 7e       	andi	r25, 0xEF	; 239
    4f64:	96 ff       	sbrs	r25, 6
    4f66:	16 e0       	ldi	r17, 0x06	; 6
    4f68:	9f 73       	andi	r25, 0x3F	; 63
    4f6a:	99 2e       	mov	r9, r25
    4f6c:	85 36       	cpi	r24, 0x65	; 101
    4f6e:	19 f4       	brne	.+6      	; 0x4f76 <vfprintf+0x12c>
    4f70:	90 64       	ori	r25, 0x40	; 64
    4f72:	99 2e       	mov	r9, r25
    4f74:	08 c0       	rjmp	.+16     	; 0x4f86 <vfprintf+0x13c>
    4f76:	86 36       	cpi	r24, 0x66	; 102
    4f78:	21 f4       	brne	.+8      	; 0x4f82 <vfprintf+0x138>
    4f7a:	39 2f       	mov	r19, r25
    4f7c:	30 68       	ori	r19, 0x80	; 128
    4f7e:	93 2e       	mov	r9, r19
    4f80:	02 c0       	rjmp	.+4      	; 0x4f86 <vfprintf+0x13c>
    4f82:	11 11       	cpse	r17, r1
    4f84:	11 50       	subi	r17, 0x01	; 1
    4f86:	97 fe       	sbrs	r9, 7
    4f88:	07 c0       	rjmp	.+14     	; 0x4f98 <vfprintf+0x14e>
    4f8a:	1c 33       	cpi	r17, 0x3C	; 60
    4f8c:	50 f4       	brcc	.+20     	; 0x4fa2 <vfprintf+0x158>
    4f8e:	44 24       	eor	r4, r4
    4f90:	43 94       	inc	r4
    4f92:	41 0e       	add	r4, r17
    4f94:	27 e0       	ldi	r18, 0x07	; 7
    4f96:	0b c0       	rjmp	.+22     	; 0x4fae <vfprintf+0x164>
    4f98:	18 30       	cpi	r17, 0x08	; 8
    4f9a:	38 f0       	brcs	.+14     	; 0x4faa <vfprintf+0x160>
    4f9c:	27 e0       	ldi	r18, 0x07	; 7
    4f9e:	17 e0       	ldi	r17, 0x07	; 7
    4fa0:	05 c0       	rjmp	.+10     	; 0x4fac <vfprintf+0x162>
    4fa2:	27 e0       	ldi	r18, 0x07	; 7
    4fa4:	9c e3       	ldi	r25, 0x3C	; 60
    4fa6:	49 2e       	mov	r4, r25
    4fa8:	02 c0       	rjmp	.+4      	; 0x4fae <vfprintf+0x164>
    4faa:	21 2f       	mov	r18, r17
    4fac:	41 2c       	mov	r4, r1
    4fae:	56 01       	movw	r10, r12
    4fb0:	84 e0       	ldi	r24, 0x04	; 4
    4fb2:	a8 0e       	add	r10, r24
    4fb4:	b1 1c       	adc	r11, r1
    4fb6:	f6 01       	movw	r30, r12
    4fb8:	60 81       	ld	r22, Z
    4fba:	71 81       	ldd	r23, Z+1	; 0x01
    4fbc:	82 81       	ldd	r24, Z+2	; 0x02
    4fbe:	93 81       	ldd	r25, Z+3	; 0x03
    4fc0:	04 2d       	mov	r16, r4
    4fc2:	a3 01       	movw	r20, r6
    4fc4:	0e 94 52 2b 	call	0x56a4	; 0x56a4 <__ftoa_engine>
    4fc8:	6c 01       	movw	r12, r24
    4fca:	f9 81       	ldd	r31, Y+1	; 0x01
    4fcc:	fc 87       	std	Y+12, r31	; 0x0c
    4fce:	f0 ff       	sbrs	r31, 0
    4fd0:	02 c0       	rjmp	.+4      	; 0x4fd6 <vfprintf+0x18c>
    4fd2:	f3 ff       	sbrs	r31, 3
    4fd4:	06 c0       	rjmp	.+12     	; 0x4fe2 <vfprintf+0x198>
    4fd6:	91 fc       	sbrc	r9, 1
    4fd8:	06 c0       	rjmp	.+12     	; 0x4fe6 <vfprintf+0x19c>
    4fda:	92 fe       	sbrs	r9, 2
    4fdc:	06 c0       	rjmp	.+12     	; 0x4fea <vfprintf+0x1a0>
    4fde:	00 e2       	ldi	r16, 0x20	; 32
    4fe0:	05 c0       	rjmp	.+10     	; 0x4fec <vfprintf+0x1a2>
    4fe2:	0d e2       	ldi	r16, 0x2D	; 45
    4fe4:	03 c0       	rjmp	.+6      	; 0x4fec <vfprintf+0x1a2>
    4fe6:	0b e2       	ldi	r16, 0x2B	; 43
    4fe8:	01 c0       	rjmp	.+2      	; 0x4fec <vfprintf+0x1a2>
    4fea:	00 e0       	ldi	r16, 0x00	; 0
    4fec:	8c 85       	ldd	r24, Y+12	; 0x0c
    4fee:	8c 70       	andi	r24, 0x0C	; 12
    4ff0:	19 f0       	breq	.+6      	; 0x4ff8 <vfprintf+0x1ae>
    4ff2:	01 11       	cpse	r16, r1
    4ff4:	5a c2       	rjmp	.+1204   	; 0x54aa <vfprintf+0x660>
    4ff6:	9b c2       	rjmp	.+1334   	; 0x552e <vfprintf+0x6e4>
    4ff8:	97 fe       	sbrs	r9, 7
    4ffa:	10 c0       	rjmp	.+32     	; 0x501c <vfprintf+0x1d2>
    4ffc:	4c 0c       	add	r4, r12
    4ffe:	fc 85       	ldd	r31, Y+12	; 0x0c
    5000:	f4 ff       	sbrs	r31, 4
    5002:	04 c0       	rjmp	.+8      	; 0x500c <vfprintf+0x1c2>
    5004:	8a 81       	ldd	r24, Y+2	; 0x02
    5006:	81 33       	cpi	r24, 0x31	; 49
    5008:	09 f4       	brne	.+2      	; 0x500c <vfprintf+0x1c2>
    500a:	4a 94       	dec	r4
    500c:	14 14       	cp	r1, r4
    500e:	74 f5       	brge	.+92     	; 0x506c <vfprintf+0x222>
    5010:	28 e0       	ldi	r18, 0x08	; 8
    5012:	24 15       	cp	r18, r4
    5014:	78 f5       	brcc	.+94     	; 0x5074 <vfprintf+0x22a>
    5016:	88 e0       	ldi	r24, 0x08	; 8
    5018:	48 2e       	mov	r4, r24
    501a:	2c c0       	rjmp	.+88     	; 0x5074 <vfprintf+0x22a>
    501c:	96 fc       	sbrc	r9, 6
    501e:	2a c0       	rjmp	.+84     	; 0x5074 <vfprintf+0x22a>
    5020:	81 2f       	mov	r24, r17
    5022:	90 e0       	ldi	r25, 0x00	; 0
    5024:	8c 15       	cp	r24, r12
    5026:	9d 05       	cpc	r25, r13
    5028:	9c f0       	brlt	.+38     	; 0x5050 <vfprintf+0x206>
    502a:	3c ef       	ldi	r19, 0xFC	; 252
    502c:	c3 16       	cp	r12, r19
    502e:	3f ef       	ldi	r19, 0xFF	; 255
    5030:	d3 06       	cpc	r13, r19
    5032:	74 f0       	brlt	.+28     	; 0x5050 <vfprintf+0x206>
    5034:	89 2d       	mov	r24, r9
    5036:	80 68       	ori	r24, 0x80	; 128
    5038:	98 2e       	mov	r9, r24
    503a:	0a c0       	rjmp	.+20     	; 0x5050 <vfprintf+0x206>
    503c:	e2 e0       	ldi	r30, 0x02	; 2
    503e:	f0 e0       	ldi	r31, 0x00	; 0
    5040:	ec 0f       	add	r30, r28
    5042:	fd 1f       	adc	r31, r29
    5044:	e1 0f       	add	r30, r17
    5046:	f1 1d       	adc	r31, r1
    5048:	80 81       	ld	r24, Z
    504a:	80 33       	cpi	r24, 0x30	; 48
    504c:	19 f4       	brne	.+6      	; 0x5054 <vfprintf+0x20a>
    504e:	11 50       	subi	r17, 0x01	; 1
    5050:	11 11       	cpse	r17, r1
    5052:	f4 cf       	rjmp	.-24     	; 0x503c <vfprintf+0x1f2>
    5054:	97 fe       	sbrs	r9, 7
    5056:	0e c0       	rjmp	.+28     	; 0x5074 <vfprintf+0x22a>
    5058:	44 24       	eor	r4, r4
    505a:	43 94       	inc	r4
    505c:	41 0e       	add	r4, r17
    505e:	81 2f       	mov	r24, r17
    5060:	90 e0       	ldi	r25, 0x00	; 0
    5062:	c8 16       	cp	r12, r24
    5064:	d9 06       	cpc	r13, r25
    5066:	2c f4       	brge	.+10     	; 0x5072 <vfprintf+0x228>
    5068:	1c 19       	sub	r17, r12
    506a:	04 c0       	rjmp	.+8      	; 0x5074 <vfprintf+0x22a>
    506c:	44 24       	eor	r4, r4
    506e:	43 94       	inc	r4
    5070:	01 c0       	rjmp	.+2      	; 0x5074 <vfprintf+0x22a>
    5072:	10 e0       	ldi	r17, 0x00	; 0
    5074:	97 fe       	sbrs	r9, 7
    5076:	06 c0       	rjmp	.+12     	; 0x5084 <vfprintf+0x23a>
    5078:	1c 14       	cp	r1, r12
    507a:	1d 04       	cpc	r1, r13
    507c:	34 f4       	brge	.+12     	; 0x508a <vfprintf+0x240>
    507e:	c6 01       	movw	r24, r12
    5080:	01 96       	adiw	r24, 0x01	; 1
    5082:	05 c0       	rjmp	.+10     	; 0x508e <vfprintf+0x244>
    5084:	85 e0       	ldi	r24, 0x05	; 5
    5086:	90 e0       	ldi	r25, 0x00	; 0
    5088:	02 c0       	rjmp	.+4      	; 0x508e <vfprintf+0x244>
    508a:	81 e0       	ldi	r24, 0x01	; 1
    508c:	90 e0       	ldi	r25, 0x00	; 0
    508e:	01 11       	cpse	r16, r1
    5090:	01 96       	adiw	r24, 0x01	; 1
    5092:	11 23       	and	r17, r17
    5094:	31 f0       	breq	.+12     	; 0x50a2 <vfprintf+0x258>
    5096:	21 2f       	mov	r18, r17
    5098:	30 e0       	ldi	r19, 0x00	; 0
    509a:	2f 5f       	subi	r18, 0xFF	; 255
    509c:	3f 4f       	sbci	r19, 0xFF	; 255
    509e:	82 0f       	add	r24, r18
    50a0:	93 1f       	adc	r25, r19
    50a2:	25 2d       	mov	r18, r5
    50a4:	30 e0       	ldi	r19, 0x00	; 0
    50a6:	82 17       	cp	r24, r18
    50a8:	93 07       	cpc	r25, r19
    50aa:	14 f4       	brge	.+4      	; 0x50b0 <vfprintf+0x266>
    50ac:	58 1a       	sub	r5, r24
    50ae:	01 c0       	rjmp	.+2      	; 0x50b2 <vfprintf+0x268>
    50b0:	51 2c       	mov	r5, r1
    50b2:	89 2d       	mov	r24, r9
    50b4:	89 70       	andi	r24, 0x09	; 9
    50b6:	49 f4       	brne	.+18     	; 0x50ca <vfprintf+0x280>
    50b8:	55 20       	and	r5, r5
    50ba:	39 f0       	breq	.+14     	; 0x50ca <vfprintf+0x280>
    50bc:	b7 01       	movw	r22, r14
    50be:	80 e2       	ldi	r24, 0x20	; 32
    50c0:	90 e0       	ldi	r25, 0x00	; 0
    50c2:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    50c6:	5a 94       	dec	r5
    50c8:	f7 cf       	rjmp	.-18     	; 0x50b8 <vfprintf+0x26e>
    50ca:	00 23       	and	r16, r16
    50cc:	29 f0       	breq	.+10     	; 0x50d8 <vfprintf+0x28e>
    50ce:	b7 01       	movw	r22, r14
    50d0:	80 2f       	mov	r24, r16
    50d2:	90 e0       	ldi	r25, 0x00	; 0
    50d4:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    50d8:	93 fc       	sbrc	r9, 3
    50da:	09 c0       	rjmp	.+18     	; 0x50ee <vfprintf+0x2a4>
    50dc:	55 20       	and	r5, r5
    50de:	39 f0       	breq	.+14     	; 0x50ee <vfprintf+0x2a4>
    50e0:	b7 01       	movw	r22, r14
    50e2:	80 e3       	ldi	r24, 0x30	; 48
    50e4:	90 e0       	ldi	r25, 0x00	; 0
    50e6:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    50ea:	5a 94       	dec	r5
    50ec:	f7 cf       	rjmp	.-18     	; 0x50dc <vfprintf+0x292>
    50ee:	97 fe       	sbrs	r9, 7
    50f0:	4c c0       	rjmp	.+152    	; 0x518a <vfprintf+0x340>
    50f2:	46 01       	movw	r8, r12
    50f4:	d7 fe       	sbrs	r13, 7
    50f6:	02 c0       	rjmp	.+4      	; 0x50fc <vfprintf+0x2b2>
    50f8:	81 2c       	mov	r8, r1
    50fa:	91 2c       	mov	r9, r1
    50fc:	c6 01       	movw	r24, r12
    50fe:	88 19       	sub	r24, r8
    5100:	99 09       	sbc	r25, r9
    5102:	f3 01       	movw	r30, r6
    5104:	e8 0f       	add	r30, r24
    5106:	f9 1f       	adc	r31, r25
    5108:	fe 87       	std	Y+14, r31	; 0x0e
    510a:	ed 87       	std	Y+13, r30	; 0x0d
    510c:	96 01       	movw	r18, r12
    510e:	24 19       	sub	r18, r4
    5110:	31 09       	sbc	r19, r1
    5112:	38 8b       	std	Y+16, r19	; 0x10
    5114:	2f 87       	std	Y+15, r18	; 0x0f
    5116:	01 2f       	mov	r16, r17
    5118:	10 e0       	ldi	r17, 0x00	; 0
    511a:	11 95       	neg	r17
    511c:	01 95       	neg	r16
    511e:	11 09       	sbc	r17, r1
    5120:	3f ef       	ldi	r19, 0xFF	; 255
    5122:	83 16       	cp	r8, r19
    5124:	93 06       	cpc	r9, r19
    5126:	29 f4       	brne	.+10     	; 0x5132 <vfprintf+0x2e8>
    5128:	b7 01       	movw	r22, r14
    512a:	8e e2       	ldi	r24, 0x2E	; 46
    512c:	90 e0       	ldi	r25, 0x00	; 0
    512e:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5132:	c8 14       	cp	r12, r8
    5134:	d9 04       	cpc	r13, r9
    5136:	4c f0       	brlt	.+18     	; 0x514a <vfprintf+0x300>
    5138:	8f 85       	ldd	r24, Y+15	; 0x0f
    513a:	98 89       	ldd	r25, Y+16	; 0x10
    513c:	88 15       	cp	r24, r8
    513e:	99 05       	cpc	r25, r9
    5140:	24 f4       	brge	.+8      	; 0x514a <vfprintf+0x300>
    5142:	ed 85       	ldd	r30, Y+13	; 0x0d
    5144:	fe 85       	ldd	r31, Y+14	; 0x0e
    5146:	81 81       	ldd	r24, Z+1	; 0x01
    5148:	01 c0       	rjmp	.+2      	; 0x514c <vfprintf+0x302>
    514a:	80 e3       	ldi	r24, 0x30	; 48
    514c:	f1 e0       	ldi	r31, 0x01	; 1
    514e:	8f 1a       	sub	r8, r31
    5150:	91 08       	sbc	r9, r1
    5152:	2d 85       	ldd	r18, Y+13	; 0x0d
    5154:	3e 85       	ldd	r19, Y+14	; 0x0e
    5156:	2f 5f       	subi	r18, 0xFF	; 255
    5158:	3f 4f       	sbci	r19, 0xFF	; 255
    515a:	3e 87       	std	Y+14, r19	; 0x0e
    515c:	2d 87       	std	Y+13, r18	; 0x0d
    515e:	80 16       	cp	r8, r16
    5160:	91 06       	cpc	r9, r17
    5162:	2c f0       	brlt	.+10     	; 0x516e <vfprintf+0x324>
    5164:	b7 01       	movw	r22, r14
    5166:	90 e0       	ldi	r25, 0x00	; 0
    5168:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    516c:	d9 cf       	rjmp	.-78     	; 0x5120 <vfprintf+0x2d6>
    516e:	c8 14       	cp	r12, r8
    5170:	d9 04       	cpc	r13, r9
    5172:	41 f4       	brne	.+16     	; 0x5184 <vfprintf+0x33a>
    5174:	9a 81       	ldd	r25, Y+2	; 0x02
    5176:	96 33       	cpi	r25, 0x36	; 54
    5178:	20 f4       	brcc	.+8      	; 0x5182 <vfprintf+0x338>
    517a:	95 33       	cpi	r25, 0x35	; 53
    517c:	19 f4       	brne	.+6      	; 0x5184 <vfprintf+0x33a>
    517e:	3c 85       	ldd	r19, Y+12	; 0x0c
    5180:	34 ff       	sbrs	r19, 4
    5182:	81 e3       	ldi	r24, 0x31	; 49
    5184:	b7 01       	movw	r22, r14
    5186:	90 e0       	ldi	r25, 0x00	; 0
    5188:	4e c0       	rjmp	.+156    	; 0x5226 <vfprintf+0x3dc>
    518a:	8a 81       	ldd	r24, Y+2	; 0x02
    518c:	81 33       	cpi	r24, 0x31	; 49
    518e:	19 f0       	breq	.+6      	; 0x5196 <vfprintf+0x34c>
    5190:	9c 85       	ldd	r25, Y+12	; 0x0c
    5192:	9f 7e       	andi	r25, 0xEF	; 239
    5194:	9c 87       	std	Y+12, r25	; 0x0c
    5196:	b7 01       	movw	r22, r14
    5198:	90 e0       	ldi	r25, 0x00	; 0
    519a:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    519e:	11 11       	cpse	r17, r1
    51a0:	05 c0       	rjmp	.+10     	; 0x51ac <vfprintf+0x362>
    51a2:	94 fc       	sbrc	r9, 4
    51a4:	18 c0       	rjmp	.+48     	; 0x51d6 <vfprintf+0x38c>
    51a6:	85 e6       	ldi	r24, 0x65	; 101
    51a8:	90 e0       	ldi	r25, 0x00	; 0
    51aa:	17 c0       	rjmp	.+46     	; 0x51da <vfprintf+0x390>
    51ac:	b7 01       	movw	r22, r14
    51ae:	8e e2       	ldi	r24, 0x2E	; 46
    51b0:	90 e0       	ldi	r25, 0x00	; 0
    51b2:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    51b6:	1e 5f       	subi	r17, 0xFE	; 254
    51b8:	82 e0       	ldi	r24, 0x02	; 2
    51ba:	01 e0       	ldi	r16, 0x01	; 1
    51bc:	08 0f       	add	r16, r24
    51be:	f3 01       	movw	r30, r6
    51c0:	e8 0f       	add	r30, r24
    51c2:	f1 1d       	adc	r31, r1
    51c4:	80 81       	ld	r24, Z
    51c6:	b7 01       	movw	r22, r14
    51c8:	90 e0       	ldi	r25, 0x00	; 0
    51ca:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    51ce:	80 2f       	mov	r24, r16
    51d0:	01 13       	cpse	r16, r17
    51d2:	f3 cf       	rjmp	.-26     	; 0x51ba <vfprintf+0x370>
    51d4:	e6 cf       	rjmp	.-52     	; 0x51a2 <vfprintf+0x358>
    51d6:	85 e4       	ldi	r24, 0x45	; 69
    51d8:	90 e0       	ldi	r25, 0x00	; 0
    51da:	b7 01       	movw	r22, r14
    51dc:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    51e0:	d7 fc       	sbrc	r13, 7
    51e2:	06 c0       	rjmp	.+12     	; 0x51f0 <vfprintf+0x3a6>
    51e4:	c1 14       	cp	r12, r1
    51e6:	d1 04       	cpc	r13, r1
    51e8:	41 f4       	brne	.+16     	; 0x51fa <vfprintf+0x3b0>
    51ea:	ec 85       	ldd	r30, Y+12	; 0x0c
    51ec:	e4 ff       	sbrs	r30, 4
    51ee:	05 c0       	rjmp	.+10     	; 0x51fa <vfprintf+0x3b0>
    51f0:	d1 94       	neg	r13
    51f2:	c1 94       	neg	r12
    51f4:	d1 08       	sbc	r13, r1
    51f6:	8d e2       	ldi	r24, 0x2D	; 45
    51f8:	01 c0       	rjmp	.+2      	; 0x51fc <vfprintf+0x3b2>
    51fa:	8b e2       	ldi	r24, 0x2B	; 43
    51fc:	b7 01       	movw	r22, r14
    51fe:	90 e0       	ldi	r25, 0x00	; 0
    5200:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5204:	80 e3       	ldi	r24, 0x30	; 48
    5206:	2a e0       	ldi	r18, 0x0A	; 10
    5208:	c2 16       	cp	r12, r18
    520a:	d1 04       	cpc	r13, r1
    520c:	2c f0       	brlt	.+10     	; 0x5218 <vfprintf+0x3ce>
    520e:	8f 5f       	subi	r24, 0xFF	; 255
    5210:	fa e0       	ldi	r31, 0x0A	; 10
    5212:	cf 1a       	sub	r12, r31
    5214:	d1 08       	sbc	r13, r1
    5216:	f7 cf       	rjmp	.-18     	; 0x5206 <vfprintf+0x3bc>
    5218:	b7 01       	movw	r22, r14
    521a:	90 e0       	ldi	r25, 0x00	; 0
    521c:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5220:	b7 01       	movw	r22, r14
    5222:	c6 01       	movw	r24, r12
    5224:	c0 96       	adiw	r24, 0x30	; 48
    5226:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    522a:	54 c1       	rjmp	.+680    	; 0x54d4 <vfprintf+0x68a>
    522c:	83 36       	cpi	r24, 0x63	; 99
    522e:	31 f0       	breq	.+12     	; 0x523c <vfprintf+0x3f2>
    5230:	83 37       	cpi	r24, 0x73	; 115
    5232:	79 f0       	breq	.+30     	; 0x5252 <vfprintf+0x408>
    5234:	83 35       	cpi	r24, 0x53	; 83
    5236:	09 f0       	breq	.+2      	; 0x523a <vfprintf+0x3f0>
    5238:	56 c0       	rjmp	.+172    	; 0x52e6 <vfprintf+0x49c>
    523a:	20 c0       	rjmp	.+64     	; 0x527c <vfprintf+0x432>
    523c:	56 01       	movw	r10, r12
    523e:	32 e0       	ldi	r19, 0x02	; 2
    5240:	a3 0e       	add	r10, r19
    5242:	b1 1c       	adc	r11, r1
    5244:	f6 01       	movw	r30, r12
    5246:	80 81       	ld	r24, Z
    5248:	89 83       	std	Y+1, r24	; 0x01
    524a:	01 e0       	ldi	r16, 0x01	; 1
    524c:	10 e0       	ldi	r17, 0x00	; 0
    524e:	63 01       	movw	r12, r6
    5250:	12 c0       	rjmp	.+36     	; 0x5276 <vfprintf+0x42c>
    5252:	56 01       	movw	r10, r12
    5254:	f2 e0       	ldi	r31, 0x02	; 2
    5256:	af 0e       	add	r10, r31
    5258:	b1 1c       	adc	r11, r1
    525a:	f6 01       	movw	r30, r12
    525c:	c0 80       	ld	r12, Z
    525e:	d1 80       	ldd	r13, Z+1	; 0x01
    5260:	96 fe       	sbrs	r9, 6
    5262:	03 c0       	rjmp	.+6      	; 0x526a <vfprintf+0x420>
    5264:	61 2f       	mov	r22, r17
    5266:	70 e0       	ldi	r23, 0x00	; 0
    5268:	02 c0       	rjmp	.+4      	; 0x526e <vfprintf+0x424>
    526a:	6f ef       	ldi	r22, 0xFF	; 255
    526c:	7f ef       	ldi	r23, 0xFF	; 255
    526e:	c6 01       	movw	r24, r12
    5270:	0e 94 50 2c 	call	0x58a0	; 0x58a0 <strnlen>
    5274:	8c 01       	movw	r16, r24
    5276:	f9 2d       	mov	r31, r9
    5278:	ff 77       	andi	r31, 0x7F	; 127
    527a:	14 c0       	rjmp	.+40     	; 0x52a4 <vfprintf+0x45a>
    527c:	56 01       	movw	r10, r12
    527e:	22 e0       	ldi	r18, 0x02	; 2
    5280:	a2 0e       	add	r10, r18
    5282:	b1 1c       	adc	r11, r1
    5284:	f6 01       	movw	r30, r12
    5286:	c0 80       	ld	r12, Z
    5288:	d1 80       	ldd	r13, Z+1	; 0x01
    528a:	96 fe       	sbrs	r9, 6
    528c:	03 c0       	rjmp	.+6      	; 0x5294 <vfprintf+0x44a>
    528e:	61 2f       	mov	r22, r17
    5290:	70 e0       	ldi	r23, 0x00	; 0
    5292:	02 c0       	rjmp	.+4      	; 0x5298 <vfprintf+0x44e>
    5294:	6f ef       	ldi	r22, 0xFF	; 255
    5296:	7f ef       	ldi	r23, 0xFF	; 255
    5298:	c6 01       	movw	r24, r12
    529a:	0e 94 2a 2c 	call	0x5854	; 0x5854 <strnlen_P>
    529e:	8c 01       	movw	r16, r24
    52a0:	f9 2d       	mov	r31, r9
    52a2:	f0 68       	ori	r31, 0x80	; 128
    52a4:	9f 2e       	mov	r9, r31
    52a6:	f3 fd       	sbrc	r31, 3
    52a8:	1a c0       	rjmp	.+52     	; 0x52de <vfprintf+0x494>
    52aa:	85 2d       	mov	r24, r5
    52ac:	90 e0       	ldi	r25, 0x00	; 0
    52ae:	08 17       	cp	r16, r24
    52b0:	19 07       	cpc	r17, r25
    52b2:	a8 f4       	brcc	.+42     	; 0x52de <vfprintf+0x494>
    52b4:	b7 01       	movw	r22, r14
    52b6:	80 e2       	ldi	r24, 0x20	; 32
    52b8:	90 e0       	ldi	r25, 0x00	; 0
    52ba:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    52be:	5a 94       	dec	r5
    52c0:	f4 cf       	rjmp	.-24     	; 0x52aa <vfprintf+0x460>
    52c2:	f6 01       	movw	r30, r12
    52c4:	97 fc       	sbrc	r9, 7
    52c6:	85 91       	lpm	r24, Z+
    52c8:	97 fe       	sbrs	r9, 7
    52ca:	81 91       	ld	r24, Z+
    52cc:	6f 01       	movw	r12, r30
    52ce:	b7 01       	movw	r22, r14
    52d0:	90 e0       	ldi	r25, 0x00	; 0
    52d2:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    52d6:	51 10       	cpse	r5, r1
    52d8:	5a 94       	dec	r5
    52da:	01 50       	subi	r16, 0x01	; 1
    52dc:	11 09       	sbc	r17, r1
    52de:	01 15       	cp	r16, r1
    52e0:	11 05       	cpc	r17, r1
    52e2:	79 f7       	brne	.-34     	; 0x52c2 <vfprintf+0x478>
    52e4:	f7 c0       	rjmp	.+494    	; 0x54d4 <vfprintf+0x68a>
    52e6:	84 36       	cpi	r24, 0x64	; 100
    52e8:	11 f0       	breq	.+4      	; 0x52ee <vfprintf+0x4a4>
    52ea:	89 36       	cpi	r24, 0x69	; 105
    52ec:	61 f5       	brne	.+88     	; 0x5346 <vfprintf+0x4fc>
    52ee:	56 01       	movw	r10, r12
    52f0:	97 fe       	sbrs	r9, 7
    52f2:	09 c0       	rjmp	.+18     	; 0x5306 <vfprintf+0x4bc>
    52f4:	24 e0       	ldi	r18, 0x04	; 4
    52f6:	a2 0e       	add	r10, r18
    52f8:	b1 1c       	adc	r11, r1
    52fa:	f6 01       	movw	r30, r12
    52fc:	60 81       	ld	r22, Z
    52fe:	71 81       	ldd	r23, Z+1	; 0x01
    5300:	82 81       	ldd	r24, Z+2	; 0x02
    5302:	93 81       	ldd	r25, Z+3	; 0x03
    5304:	0a c0       	rjmp	.+20     	; 0x531a <vfprintf+0x4d0>
    5306:	f2 e0       	ldi	r31, 0x02	; 2
    5308:	af 0e       	add	r10, r31
    530a:	b1 1c       	adc	r11, r1
    530c:	f6 01       	movw	r30, r12
    530e:	60 81       	ld	r22, Z
    5310:	71 81       	ldd	r23, Z+1	; 0x01
    5312:	07 2e       	mov	r0, r23
    5314:	00 0c       	add	r0, r0
    5316:	88 0b       	sbc	r24, r24
    5318:	99 0b       	sbc	r25, r25
    531a:	f9 2d       	mov	r31, r9
    531c:	ff 76       	andi	r31, 0x6F	; 111
    531e:	9f 2e       	mov	r9, r31
    5320:	97 ff       	sbrs	r25, 7
    5322:	09 c0       	rjmp	.+18     	; 0x5336 <vfprintf+0x4ec>
    5324:	90 95       	com	r25
    5326:	80 95       	com	r24
    5328:	70 95       	com	r23
    532a:	61 95       	neg	r22
    532c:	7f 4f       	sbci	r23, 0xFF	; 255
    532e:	8f 4f       	sbci	r24, 0xFF	; 255
    5330:	9f 4f       	sbci	r25, 0xFF	; 255
    5332:	f0 68       	ori	r31, 0x80	; 128
    5334:	9f 2e       	mov	r9, r31
    5336:	2a e0       	ldi	r18, 0x0A	; 10
    5338:	30 e0       	ldi	r19, 0x00	; 0
    533a:	a3 01       	movw	r20, r6
    533c:	0e 94 d2 2c 	call	0x59a4	; 0x59a4 <__ultoa_invert>
    5340:	c8 2e       	mov	r12, r24
    5342:	c6 18       	sub	r12, r6
    5344:	3f c0       	rjmp	.+126    	; 0x53c4 <vfprintf+0x57a>
    5346:	09 2d       	mov	r16, r9
    5348:	85 37       	cpi	r24, 0x75	; 117
    534a:	21 f4       	brne	.+8      	; 0x5354 <vfprintf+0x50a>
    534c:	0f 7e       	andi	r16, 0xEF	; 239
    534e:	2a e0       	ldi	r18, 0x0A	; 10
    5350:	30 e0       	ldi	r19, 0x00	; 0
    5352:	1d c0       	rjmp	.+58     	; 0x538e <vfprintf+0x544>
    5354:	09 7f       	andi	r16, 0xF9	; 249
    5356:	8f 36       	cpi	r24, 0x6F	; 111
    5358:	91 f0       	breq	.+36     	; 0x537e <vfprintf+0x534>
    535a:	18 f4       	brcc	.+6      	; 0x5362 <vfprintf+0x518>
    535c:	88 35       	cpi	r24, 0x58	; 88
    535e:	59 f0       	breq	.+22     	; 0x5376 <vfprintf+0x52c>
    5360:	c3 c0       	rjmp	.+390    	; 0x54e8 <vfprintf+0x69e>
    5362:	80 37       	cpi	r24, 0x70	; 112
    5364:	19 f0       	breq	.+6      	; 0x536c <vfprintf+0x522>
    5366:	88 37       	cpi	r24, 0x78	; 120
    5368:	11 f0       	breq	.+4      	; 0x536e <vfprintf+0x524>
    536a:	be c0       	rjmp	.+380    	; 0x54e8 <vfprintf+0x69e>
    536c:	00 61       	ori	r16, 0x10	; 16
    536e:	04 ff       	sbrs	r16, 4
    5370:	09 c0       	rjmp	.+18     	; 0x5384 <vfprintf+0x53a>
    5372:	04 60       	ori	r16, 0x04	; 4
    5374:	07 c0       	rjmp	.+14     	; 0x5384 <vfprintf+0x53a>
    5376:	94 fe       	sbrs	r9, 4
    5378:	08 c0       	rjmp	.+16     	; 0x538a <vfprintf+0x540>
    537a:	06 60       	ori	r16, 0x06	; 6
    537c:	06 c0       	rjmp	.+12     	; 0x538a <vfprintf+0x540>
    537e:	28 e0       	ldi	r18, 0x08	; 8
    5380:	30 e0       	ldi	r19, 0x00	; 0
    5382:	05 c0       	rjmp	.+10     	; 0x538e <vfprintf+0x544>
    5384:	20 e1       	ldi	r18, 0x10	; 16
    5386:	30 e0       	ldi	r19, 0x00	; 0
    5388:	02 c0       	rjmp	.+4      	; 0x538e <vfprintf+0x544>
    538a:	20 e1       	ldi	r18, 0x10	; 16
    538c:	32 e0       	ldi	r19, 0x02	; 2
    538e:	56 01       	movw	r10, r12
    5390:	07 ff       	sbrs	r16, 7
    5392:	09 c0       	rjmp	.+18     	; 0x53a6 <vfprintf+0x55c>
    5394:	84 e0       	ldi	r24, 0x04	; 4
    5396:	a8 0e       	add	r10, r24
    5398:	b1 1c       	adc	r11, r1
    539a:	f6 01       	movw	r30, r12
    539c:	60 81       	ld	r22, Z
    539e:	71 81       	ldd	r23, Z+1	; 0x01
    53a0:	82 81       	ldd	r24, Z+2	; 0x02
    53a2:	93 81       	ldd	r25, Z+3	; 0x03
    53a4:	08 c0       	rjmp	.+16     	; 0x53b6 <vfprintf+0x56c>
    53a6:	f2 e0       	ldi	r31, 0x02	; 2
    53a8:	af 0e       	add	r10, r31
    53aa:	b1 1c       	adc	r11, r1
    53ac:	f6 01       	movw	r30, r12
    53ae:	60 81       	ld	r22, Z
    53b0:	71 81       	ldd	r23, Z+1	; 0x01
    53b2:	80 e0       	ldi	r24, 0x00	; 0
    53b4:	90 e0       	ldi	r25, 0x00	; 0
    53b6:	a3 01       	movw	r20, r6
    53b8:	0e 94 d2 2c 	call	0x59a4	; 0x59a4 <__ultoa_invert>
    53bc:	c8 2e       	mov	r12, r24
    53be:	c6 18       	sub	r12, r6
    53c0:	0f 77       	andi	r16, 0x7F	; 127
    53c2:	90 2e       	mov	r9, r16
    53c4:	96 fe       	sbrs	r9, 6
    53c6:	0b c0       	rjmp	.+22     	; 0x53de <vfprintf+0x594>
    53c8:	09 2d       	mov	r16, r9
    53ca:	0e 7f       	andi	r16, 0xFE	; 254
    53cc:	c1 16       	cp	r12, r17
    53ce:	50 f4       	brcc	.+20     	; 0x53e4 <vfprintf+0x59a>
    53d0:	94 fe       	sbrs	r9, 4
    53d2:	0a c0       	rjmp	.+20     	; 0x53e8 <vfprintf+0x59e>
    53d4:	92 fc       	sbrc	r9, 2
    53d6:	08 c0       	rjmp	.+16     	; 0x53e8 <vfprintf+0x59e>
    53d8:	09 2d       	mov	r16, r9
    53da:	0e 7e       	andi	r16, 0xEE	; 238
    53dc:	05 c0       	rjmp	.+10     	; 0x53e8 <vfprintf+0x59e>
    53de:	dc 2c       	mov	r13, r12
    53e0:	09 2d       	mov	r16, r9
    53e2:	03 c0       	rjmp	.+6      	; 0x53ea <vfprintf+0x5a0>
    53e4:	dc 2c       	mov	r13, r12
    53e6:	01 c0       	rjmp	.+2      	; 0x53ea <vfprintf+0x5a0>
    53e8:	d1 2e       	mov	r13, r17
    53ea:	04 ff       	sbrs	r16, 4
    53ec:	0d c0       	rjmp	.+26     	; 0x5408 <vfprintf+0x5be>
    53ee:	fe 01       	movw	r30, r28
    53f0:	ec 0d       	add	r30, r12
    53f2:	f1 1d       	adc	r31, r1
    53f4:	80 81       	ld	r24, Z
    53f6:	80 33       	cpi	r24, 0x30	; 48
    53f8:	11 f4       	brne	.+4      	; 0x53fe <vfprintf+0x5b4>
    53fa:	09 7e       	andi	r16, 0xE9	; 233
    53fc:	09 c0       	rjmp	.+18     	; 0x5410 <vfprintf+0x5c6>
    53fe:	02 ff       	sbrs	r16, 2
    5400:	06 c0       	rjmp	.+12     	; 0x540e <vfprintf+0x5c4>
    5402:	d3 94       	inc	r13
    5404:	d3 94       	inc	r13
    5406:	04 c0       	rjmp	.+8      	; 0x5410 <vfprintf+0x5c6>
    5408:	80 2f       	mov	r24, r16
    540a:	86 78       	andi	r24, 0x86	; 134
    540c:	09 f0       	breq	.+2      	; 0x5410 <vfprintf+0x5c6>
    540e:	d3 94       	inc	r13
    5410:	03 fd       	sbrc	r16, 3
    5412:	11 c0       	rjmp	.+34     	; 0x5436 <vfprintf+0x5ec>
    5414:	00 ff       	sbrs	r16, 0
    5416:	06 c0       	rjmp	.+12     	; 0x5424 <vfprintf+0x5da>
    5418:	1c 2d       	mov	r17, r12
    541a:	d5 14       	cp	r13, r5
    541c:	80 f4       	brcc	.+32     	; 0x543e <vfprintf+0x5f4>
    541e:	15 0d       	add	r17, r5
    5420:	1d 19       	sub	r17, r13
    5422:	0d c0       	rjmp	.+26     	; 0x543e <vfprintf+0x5f4>
    5424:	d5 14       	cp	r13, r5
    5426:	58 f4       	brcc	.+22     	; 0x543e <vfprintf+0x5f4>
    5428:	b7 01       	movw	r22, r14
    542a:	80 e2       	ldi	r24, 0x20	; 32
    542c:	90 e0       	ldi	r25, 0x00	; 0
    542e:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5432:	d3 94       	inc	r13
    5434:	f7 cf       	rjmp	.-18     	; 0x5424 <vfprintf+0x5da>
    5436:	d5 14       	cp	r13, r5
    5438:	10 f4       	brcc	.+4      	; 0x543e <vfprintf+0x5f4>
    543a:	5d 18       	sub	r5, r13
    543c:	01 c0       	rjmp	.+2      	; 0x5440 <vfprintf+0x5f6>
    543e:	51 2c       	mov	r5, r1
    5440:	04 ff       	sbrs	r16, 4
    5442:	10 c0       	rjmp	.+32     	; 0x5464 <vfprintf+0x61a>
    5444:	b7 01       	movw	r22, r14
    5446:	80 e3       	ldi	r24, 0x30	; 48
    5448:	90 e0       	ldi	r25, 0x00	; 0
    544a:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    544e:	02 ff       	sbrs	r16, 2
    5450:	17 c0       	rjmp	.+46     	; 0x5480 <vfprintf+0x636>
    5452:	01 fd       	sbrc	r16, 1
    5454:	03 c0       	rjmp	.+6      	; 0x545c <vfprintf+0x612>
    5456:	88 e7       	ldi	r24, 0x78	; 120
    5458:	90 e0       	ldi	r25, 0x00	; 0
    545a:	02 c0       	rjmp	.+4      	; 0x5460 <vfprintf+0x616>
    545c:	88 e5       	ldi	r24, 0x58	; 88
    545e:	90 e0       	ldi	r25, 0x00	; 0
    5460:	b7 01       	movw	r22, r14
    5462:	0c c0       	rjmp	.+24     	; 0x547c <vfprintf+0x632>
    5464:	80 2f       	mov	r24, r16
    5466:	86 78       	andi	r24, 0x86	; 134
    5468:	59 f0       	breq	.+22     	; 0x5480 <vfprintf+0x636>
    546a:	01 ff       	sbrs	r16, 1
    546c:	02 c0       	rjmp	.+4      	; 0x5472 <vfprintf+0x628>
    546e:	8b e2       	ldi	r24, 0x2B	; 43
    5470:	01 c0       	rjmp	.+2      	; 0x5474 <vfprintf+0x62a>
    5472:	80 e2       	ldi	r24, 0x20	; 32
    5474:	07 fd       	sbrc	r16, 7
    5476:	8d e2       	ldi	r24, 0x2D	; 45
    5478:	b7 01       	movw	r22, r14
    547a:	90 e0       	ldi	r25, 0x00	; 0
    547c:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5480:	c1 16       	cp	r12, r17
    5482:	38 f4       	brcc	.+14     	; 0x5492 <vfprintf+0x648>
    5484:	b7 01       	movw	r22, r14
    5486:	80 e3       	ldi	r24, 0x30	; 48
    5488:	90 e0       	ldi	r25, 0x00	; 0
    548a:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    548e:	11 50       	subi	r17, 0x01	; 1
    5490:	f7 cf       	rjmp	.-18     	; 0x5480 <vfprintf+0x636>
    5492:	ca 94       	dec	r12
    5494:	f3 01       	movw	r30, r6
    5496:	ec 0d       	add	r30, r12
    5498:	f1 1d       	adc	r31, r1
    549a:	80 81       	ld	r24, Z
    549c:	b7 01       	movw	r22, r14
    549e:	90 e0       	ldi	r25, 0x00	; 0
    54a0:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    54a4:	c1 10       	cpse	r12, r1
    54a6:	f5 cf       	rjmp	.-22     	; 0x5492 <vfprintf+0x648>
    54a8:	15 c0       	rjmp	.+42     	; 0x54d4 <vfprintf+0x68a>
    54aa:	f4 e0       	ldi	r31, 0x04	; 4
    54ac:	f5 15       	cp	r31, r5
    54ae:	60 f5       	brcc	.+88     	; 0x5508 <vfprintf+0x6be>
    54b0:	84 e0       	ldi	r24, 0x04	; 4
    54b2:	58 1a       	sub	r5, r24
    54b4:	93 fe       	sbrs	r9, 3
    54b6:	1f c0       	rjmp	.+62     	; 0x54f6 <vfprintf+0x6ac>
    54b8:	01 11       	cpse	r16, r1
    54ba:	27 c0       	rjmp	.+78     	; 0x550a <vfprintf+0x6c0>
    54bc:	2c 85       	ldd	r18, Y+12	; 0x0c
    54be:	23 ff       	sbrs	r18, 3
    54c0:	2a c0       	rjmp	.+84     	; 0x5516 <vfprintf+0x6cc>
    54c2:	0e e8       	ldi	r16, 0x8E	; 142
    54c4:	10 e0       	ldi	r17, 0x00	; 0
    54c6:	39 2d       	mov	r19, r9
    54c8:	30 71       	andi	r19, 0x10	; 16
    54ca:	93 2e       	mov	r9, r19
    54cc:	f8 01       	movw	r30, r16
    54ce:	84 91       	lpm	r24, Z
    54d0:	81 11       	cpse	r24, r1
    54d2:	24 c0       	rjmp	.+72     	; 0x551c <vfprintf+0x6d2>
    54d4:	55 20       	and	r5, r5
    54d6:	09 f4       	brne	.+2      	; 0x54da <vfprintf+0x690>
    54d8:	e4 cc       	rjmp	.-1592   	; 0x4ea2 <vfprintf+0x58>
    54da:	b7 01       	movw	r22, r14
    54dc:	80 e2       	ldi	r24, 0x20	; 32
    54de:	90 e0       	ldi	r25, 0x00	; 0
    54e0:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    54e4:	5a 94       	dec	r5
    54e6:	f6 cf       	rjmp	.-20     	; 0x54d4 <vfprintf+0x68a>
    54e8:	f7 01       	movw	r30, r14
    54ea:	86 81       	ldd	r24, Z+6	; 0x06
    54ec:	97 81       	ldd	r25, Z+7	; 0x07
    54ee:	26 c0       	rjmp	.+76     	; 0x553c <vfprintf+0x6f2>
    54f0:	8f ef       	ldi	r24, 0xFF	; 255
    54f2:	9f ef       	ldi	r25, 0xFF	; 255
    54f4:	23 c0       	rjmp	.+70     	; 0x553c <vfprintf+0x6f2>
    54f6:	b7 01       	movw	r22, r14
    54f8:	80 e2       	ldi	r24, 0x20	; 32
    54fa:	90 e0       	ldi	r25, 0x00	; 0
    54fc:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5500:	5a 94       	dec	r5
    5502:	51 10       	cpse	r5, r1
    5504:	f8 cf       	rjmp	.-16     	; 0x54f6 <vfprintf+0x6ac>
    5506:	d8 cf       	rjmp	.-80     	; 0x54b8 <vfprintf+0x66e>
    5508:	51 2c       	mov	r5, r1
    550a:	b7 01       	movw	r22, r14
    550c:	80 2f       	mov	r24, r16
    550e:	90 e0       	ldi	r25, 0x00	; 0
    5510:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5514:	d3 cf       	rjmp	.-90     	; 0x54bc <vfprintf+0x672>
    5516:	02 e9       	ldi	r16, 0x92	; 146
    5518:	10 e0       	ldi	r17, 0x00	; 0
    551a:	d5 cf       	rjmp	.-86     	; 0x54c6 <vfprintf+0x67c>
    551c:	91 10       	cpse	r9, r1
    551e:	80 52       	subi	r24, 0x20	; 32
    5520:	b7 01       	movw	r22, r14
    5522:	90 e0       	ldi	r25, 0x00	; 0
    5524:	0e 94 5b 2c 	call	0x58b6	; 0x58b6 <fputc>
    5528:	0f 5f       	subi	r16, 0xFF	; 255
    552a:	1f 4f       	sbci	r17, 0xFF	; 255
    552c:	cf cf       	rjmp	.-98     	; 0x54cc <vfprintf+0x682>
    552e:	23 e0       	ldi	r18, 0x03	; 3
    5530:	25 15       	cp	r18, r5
    5532:	10 f4       	brcc	.+4      	; 0x5538 <vfprintf+0x6ee>
    5534:	83 e0       	ldi	r24, 0x03	; 3
    5536:	bd cf       	rjmp	.-134    	; 0x54b2 <vfprintf+0x668>
    5538:	51 2c       	mov	r5, r1
    553a:	c0 cf       	rjmp	.-128    	; 0x54bc <vfprintf+0x672>
    553c:	60 96       	adiw	r28, 0x10	; 16
    553e:	e2 e1       	ldi	r30, 0x12	; 18
    5540:	0c 94 28 2b 	jmp	0x5650	; 0x5650 <__epilogue_restores__>

00005544 <__mulsi3>:
    5544:	db 01       	movw	r26, r22
    5546:	8f 93       	push	r24
    5548:	9f 93       	push	r25
    554a:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
    554e:	bf 91       	pop	r27
    5550:	af 91       	pop	r26
    5552:	a2 9f       	mul	r26, r18
    5554:	80 0d       	add	r24, r0
    5556:	91 1d       	adc	r25, r1
    5558:	a3 9f       	mul	r26, r19
    555a:	90 0d       	add	r25, r0
    555c:	b2 9f       	mul	r27, r18
    555e:	90 0d       	add	r25, r0
    5560:	11 24       	eor	r1, r1
    5562:	08 95       	ret

00005564 <__udivmodsi4>:
    5564:	a1 e2       	ldi	r26, 0x21	; 33
    5566:	1a 2e       	mov	r1, r26
    5568:	aa 1b       	sub	r26, r26
    556a:	bb 1b       	sub	r27, r27
    556c:	fd 01       	movw	r30, r26
    556e:	0d c0       	rjmp	.+26     	; 0x558a <__udivmodsi4_ep>

00005570 <__udivmodsi4_loop>:
    5570:	aa 1f       	adc	r26, r26
    5572:	bb 1f       	adc	r27, r27
    5574:	ee 1f       	adc	r30, r30
    5576:	ff 1f       	adc	r31, r31
    5578:	a2 17       	cp	r26, r18
    557a:	b3 07       	cpc	r27, r19
    557c:	e4 07       	cpc	r30, r20
    557e:	f5 07       	cpc	r31, r21
    5580:	20 f0       	brcs	.+8      	; 0x558a <__udivmodsi4_ep>
    5582:	a2 1b       	sub	r26, r18
    5584:	b3 0b       	sbc	r27, r19
    5586:	e4 0b       	sbc	r30, r20
    5588:	f5 0b       	sbc	r31, r21

0000558a <__udivmodsi4_ep>:
    558a:	66 1f       	adc	r22, r22
    558c:	77 1f       	adc	r23, r23
    558e:	88 1f       	adc	r24, r24
    5590:	99 1f       	adc	r25, r25
    5592:	1a 94       	dec	r1
    5594:	69 f7       	brne	.-38     	; 0x5570 <__udivmodsi4_loop>
    5596:	60 95       	com	r22
    5598:	70 95       	com	r23
    559a:	80 95       	com	r24
    559c:	90 95       	com	r25
    559e:	9b 01       	movw	r18, r22
    55a0:	ac 01       	movw	r20, r24
    55a2:	bd 01       	movw	r22, r26
    55a4:	cf 01       	movw	r24, r30
    55a6:	08 95       	ret

000055a8 <__divmodsi4>:
    55a8:	05 2e       	mov	r0, r21
    55aa:	97 fb       	bst	r25, 7
    55ac:	1e f4       	brtc	.+6      	; 0x55b4 <__divmodsi4+0xc>
    55ae:	00 94       	com	r0
    55b0:	0e 94 eb 2a 	call	0x55d6	; 0x55d6 <__negsi2>
    55b4:	57 fd       	sbrc	r21, 7
    55b6:	07 d0       	rcall	.+14     	; 0x55c6 <__divmodsi4_neg2>
    55b8:	0e 94 b2 2a 	call	0x5564	; 0x5564 <__udivmodsi4>
    55bc:	07 fc       	sbrc	r0, 7
    55be:	03 d0       	rcall	.+6      	; 0x55c6 <__divmodsi4_neg2>
    55c0:	4e f4       	brtc	.+18     	; 0x55d4 <__divmodsi4_exit>
    55c2:	0c 94 eb 2a 	jmp	0x55d6	; 0x55d6 <__negsi2>

000055c6 <__divmodsi4_neg2>:
    55c6:	50 95       	com	r21
    55c8:	40 95       	com	r20
    55ca:	30 95       	com	r19
    55cc:	21 95       	neg	r18
    55ce:	3f 4f       	sbci	r19, 0xFF	; 255
    55d0:	4f 4f       	sbci	r20, 0xFF	; 255
    55d2:	5f 4f       	sbci	r21, 0xFF	; 255

000055d4 <__divmodsi4_exit>:
    55d4:	08 95       	ret

000055d6 <__negsi2>:
    55d6:	90 95       	com	r25
    55d8:	80 95       	com	r24
    55da:	70 95       	com	r23
    55dc:	61 95       	neg	r22
    55de:	7f 4f       	sbci	r23, 0xFF	; 255
    55e0:	8f 4f       	sbci	r24, 0xFF	; 255
    55e2:	9f 4f       	sbci	r25, 0xFF	; 255
    55e4:	08 95       	ret

000055e6 <__tablejump2__>:
    55e6:	ee 0f       	add	r30, r30
    55e8:	ff 1f       	adc	r31, r31
    55ea:	05 90       	lpm	r0, Z+
    55ec:	f4 91       	lpm	r31, Z
    55ee:	e0 2d       	mov	r30, r0
    55f0:	09 94       	ijmp

000055f2 <__muluhisi3>:
    55f2:	0e 94 43 2b 	call	0x5686	; 0x5686 <__umulhisi3>
    55f6:	a5 9f       	mul	r26, r21
    55f8:	90 0d       	add	r25, r0
    55fa:	b4 9f       	mul	r27, r20
    55fc:	90 0d       	add	r25, r0
    55fe:	a4 9f       	mul	r26, r20
    5600:	80 0d       	add	r24, r0
    5602:	91 1d       	adc	r25, r1
    5604:	11 24       	eor	r1, r1
    5606:	08 95       	ret

00005608 <__mulshisi3>:
    5608:	b7 ff       	sbrs	r27, 7
    560a:	0c 94 f9 2a 	jmp	0x55f2	; 0x55f2 <__muluhisi3>

0000560e <__mulohisi3>:
    560e:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <__muluhisi3>
    5612:	82 1b       	sub	r24, r18
    5614:	93 0b       	sbc	r25, r19
    5616:	08 95       	ret

00005618 <__prologue_saves__>:
    5618:	2f 92       	push	r2
    561a:	3f 92       	push	r3
    561c:	4f 92       	push	r4
    561e:	5f 92       	push	r5
    5620:	6f 92       	push	r6
    5622:	7f 92       	push	r7
    5624:	8f 92       	push	r8
    5626:	9f 92       	push	r9
    5628:	af 92       	push	r10
    562a:	bf 92       	push	r11
    562c:	cf 92       	push	r12
    562e:	df 92       	push	r13
    5630:	ef 92       	push	r14
    5632:	ff 92       	push	r15
    5634:	0f 93       	push	r16
    5636:	1f 93       	push	r17
    5638:	cf 93       	push	r28
    563a:	df 93       	push	r29
    563c:	cd b7       	in	r28, 0x3d	; 61
    563e:	de b7       	in	r29, 0x3e	; 62
    5640:	ca 1b       	sub	r28, r26
    5642:	db 0b       	sbc	r29, r27
    5644:	0f b6       	in	r0, 0x3f	; 63
    5646:	f8 94       	cli
    5648:	de bf       	out	0x3e, r29	; 62
    564a:	0f be       	out	0x3f, r0	; 63
    564c:	cd bf       	out	0x3d, r28	; 61
    564e:	09 94       	ijmp

00005650 <__epilogue_restores__>:
    5650:	2a 88       	ldd	r2, Y+18	; 0x12
    5652:	39 88       	ldd	r3, Y+17	; 0x11
    5654:	48 88       	ldd	r4, Y+16	; 0x10
    5656:	5f 84       	ldd	r5, Y+15	; 0x0f
    5658:	6e 84       	ldd	r6, Y+14	; 0x0e
    565a:	7d 84       	ldd	r7, Y+13	; 0x0d
    565c:	8c 84       	ldd	r8, Y+12	; 0x0c
    565e:	9b 84       	ldd	r9, Y+11	; 0x0b
    5660:	aa 84       	ldd	r10, Y+10	; 0x0a
    5662:	b9 84       	ldd	r11, Y+9	; 0x09
    5664:	c8 84       	ldd	r12, Y+8	; 0x08
    5666:	df 80       	ldd	r13, Y+7	; 0x07
    5668:	ee 80       	ldd	r14, Y+6	; 0x06
    566a:	fd 80       	ldd	r15, Y+5	; 0x05
    566c:	0c 81       	ldd	r16, Y+4	; 0x04
    566e:	1b 81       	ldd	r17, Y+3	; 0x03
    5670:	aa 81       	ldd	r26, Y+2	; 0x02
    5672:	b9 81       	ldd	r27, Y+1	; 0x01
    5674:	ce 0f       	add	r28, r30
    5676:	d1 1d       	adc	r29, r1
    5678:	0f b6       	in	r0, 0x3f	; 63
    567a:	f8 94       	cli
    567c:	de bf       	out	0x3e, r29	; 62
    567e:	0f be       	out	0x3f, r0	; 63
    5680:	cd bf       	out	0x3d, r28	; 61
    5682:	ed 01       	movw	r28, r26
    5684:	08 95       	ret

00005686 <__umulhisi3>:
    5686:	a2 9f       	mul	r26, r18
    5688:	b0 01       	movw	r22, r0
    568a:	b3 9f       	mul	r27, r19
    568c:	c0 01       	movw	r24, r0
    568e:	a3 9f       	mul	r26, r19
    5690:	70 0d       	add	r23, r0
    5692:	81 1d       	adc	r24, r1
    5694:	11 24       	eor	r1, r1
    5696:	91 1d       	adc	r25, r1
    5698:	b2 9f       	mul	r27, r18
    569a:	70 0d       	add	r23, r0
    569c:	81 1d       	adc	r24, r1
    569e:	11 24       	eor	r1, r1
    56a0:	91 1d       	adc	r25, r1
    56a2:	08 95       	ret

000056a4 <__ftoa_engine>:
    56a4:	28 30       	cpi	r18, 0x08	; 8
    56a6:	08 f0       	brcs	.+2      	; 0x56aa <__ftoa_engine+0x6>
    56a8:	27 e0       	ldi	r18, 0x07	; 7
    56aa:	33 27       	eor	r19, r19
    56ac:	da 01       	movw	r26, r20
    56ae:	99 0f       	add	r25, r25
    56b0:	31 1d       	adc	r19, r1
    56b2:	87 fd       	sbrc	r24, 7
    56b4:	91 60       	ori	r25, 0x01	; 1
    56b6:	00 96       	adiw	r24, 0x00	; 0
    56b8:	61 05       	cpc	r22, r1
    56ba:	71 05       	cpc	r23, r1
    56bc:	39 f4       	brne	.+14     	; 0x56cc <__ftoa_engine+0x28>
    56be:	32 60       	ori	r19, 0x02	; 2
    56c0:	2e 5f       	subi	r18, 0xFE	; 254
    56c2:	3d 93       	st	X+, r19
    56c4:	30 e3       	ldi	r19, 0x30	; 48
    56c6:	2a 95       	dec	r18
    56c8:	e1 f7       	brne	.-8      	; 0x56c2 <__ftoa_engine+0x1e>
    56ca:	08 95       	ret
    56cc:	9f 3f       	cpi	r25, 0xFF	; 255
    56ce:	30 f0       	brcs	.+12     	; 0x56dc <__ftoa_engine+0x38>
    56d0:	80 38       	cpi	r24, 0x80	; 128
    56d2:	71 05       	cpc	r23, r1
    56d4:	61 05       	cpc	r22, r1
    56d6:	09 f0       	breq	.+2      	; 0x56da <__ftoa_engine+0x36>
    56d8:	3c 5f       	subi	r19, 0xFC	; 252
    56da:	3c 5f       	subi	r19, 0xFC	; 252
    56dc:	3d 93       	st	X+, r19
    56de:	91 30       	cpi	r25, 0x01	; 1
    56e0:	08 f0       	brcs	.+2      	; 0x56e4 <__ftoa_engine+0x40>
    56e2:	80 68       	ori	r24, 0x80	; 128
    56e4:	91 1d       	adc	r25, r1
    56e6:	df 93       	push	r29
    56e8:	cf 93       	push	r28
    56ea:	1f 93       	push	r17
    56ec:	0f 93       	push	r16
    56ee:	ff 92       	push	r15
    56f0:	ef 92       	push	r14
    56f2:	19 2f       	mov	r17, r25
    56f4:	98 7f       	andi	r25, 0xF8	; 248
    56f6:	96 95       	lsr	r25
    56f8:	e9 2f       	mov	r30, r25
    56fa:	96 95       	lsr	r25
    56fc:	96 95       	lsr	r25
    56fe:	e9 0f       	add	r30, r25
    5700:	ff 27       	eor	r31, r31
    5702:	e0 51       	subi	r30, 0x10	; 16
    5704:	ff 4f       	sbci	r31, 0xFF	; 255
    5706:	99 27       	eor	r25, r25
    5708:	33 27       	eor	r19, r19
    570a:	ee 24       	eor	r14, r14
    570c:	ff 24       	eor	r15, r15
    570e:	a7 01       	movw	r20, r14
    5710:	e7 01       	movw	r28, r14
    5712:	05 90       	lpm	r0, Z+
    5714:	08 94       	sec
    5716:	07 94       	ror	r0
    5718:	28 f4       	brcc	.+10     	; 0x5724 <__ftoa_engine+0x80>
    571a:	36 0f       	add	r19, r22
    571c:	e7 1e       	adc	r14, r23
    571e:	f8 1e       	adc	r15, r24
    5720:	49 1f       	adc	r20, r25
    5722:	51 1d       	adc	r21, r1
    5724:	66 0f       	add	r22, r22
    5726:	77 1f       	adc	r23, r23
    5728:	88 1f       	adc	r24, r24
    572a:	99 1f       	adc	r25, r25
    572c:	06 94       	lsr	r0
    572e:	a1 f7       	brne	.-24     	; 0x5718 <__ftoa_engine+0x74>
    5730:	05 90       	lpm	r0, Z+
    5732:	07 94       	ror	r0
    5734:	28 f4       	brcc	.+10     	; 0x5740 <__ftoa_engine+0x9c>
    5736:	e7 0e       	add	r14, r23
    5738:	f8 1e       	adc	r15, r24
    573a:	49 1f       	adc	r20, r25
    573c:	56 1f       	adc	r21, r22
    573e:	c1 1d       	adc	r28, r1
    5740:	77 0f       	add	r23, r23
    5742:	88 1f       	adc	r24, r24
    5744:	99 1f       	adc	r25, r25
    5746:	66 1f       	adc	r22, r22
    5748:	06 94       	lsr	r0
    574a:	a1 f7       	brne	.-24     	; 0x5734 <__ftoa_engine+0x90>
    574c:	05 90       	lpm	r0, Z+
    574e:	07 94       	ror	r0
    5750:	28 f4       	brcc	.+10     	; 0x575c <__ftoa_engine+0xb8>
    5752:	f8 0e       	add	r15, r24
    5754:	49 1f       	adc	r20, r25
    5756:	56 1f       	adc	r21, r22
    5758:	c7 1f       	adc	r28, r23
    575a:	d1 1d       	adc	r29, r1
    575c:	88 0f       	add	r24, r24
    575e:	99 1f       	adc	r25, r25
    5760:	66 1f       	adc	r22, r22
    5762:	77 1f       	adc	r23, r23
    5764:	06 94       	lsr	r0
    5766:	a1 f7       	brne	.-24     	; 0x5750 <__ftoa_engine+0xac>
    5768:	05 90       	lpm	r0, Z+
    576a:	07 94       	ror	r0
    576c:	20 f4       	brcc	.+8      	; 0x5776 <__ftoa_engine+0xd2>
    576e:	49 0f       	add	r20, r25
    5770:	56 1f       	adc	r21, r22
    5772:	c7 1f       	adc	r28, r23
    5774:	d8 1f       	adc	r29, r24
    5776:	99 0f       	add	r25, r25
    5778:	66 1f       	adc	r22, r22
    577a:	77 1f       	adc	r23, r23
    577c:	88 1f       	adc	r24, r24
    577e:	06 94       	lsr	r0
    5780:	a9 f7       	brne	.-22     	; 0x576c <__ftoa_engine+0xc8>
    5782:	84 91       	lpm	r24, Z
    5784:	10 95       	com	r17
    5786:	17 70       	andi	r17, 0x07	; 7
    5788:	41 f0       	breq	.+16     	; 0x579a <__ftoa_engine+0xf6>
    578a:	d6 95       	lsr	r29
    578c:	c7 95       	ror	r28
    578e:	57 95       	ror	r21
    5790:	47 95       	ror	r20
    5792:	f7 94       	ror	r15
    5794:	e7 94       	ror	r14
    5796:	1a 95       	dec	r17
    5798:	c1 f7       	brne	.-16     	; 0x578a <__ftoa_engine+0xe6>
    579a:	e6 e9       	ldi	r30, 0x96	; 150
    579c:	f0 e0       	ldi	r31, 0x00	; 0
    579e:	68 94       	set
    57a0:	15 90       	lpm	r1, Z+
    57a2:	15 91       	lpm	r17, Z+
    57a4:	35 91       	lpm	r19, Z+
    57a6:	65 91       	lpm	r22, Z+
    57a8:	95 91       	lpm	r25, Z+
    57aa:	05 90       	lpm	r0, Z+
    57ac:	7f e2       	ldi	r23, 0x2F	; 47
    57ae:	73 95       	inc	r23
    57b0:	e1 18       	sub	r14, r1
    57b2:	f1 0a       	sbc	r15, r17
    57b4:	43 0b       	sbc	r20, r19
    57b6:	56 0b       	sbc	r21, r22
    57b8:	c9 0b       	sbc	r28, r25
    57ba:	d0 09       	sbc	r29, r0
    57bc:	c0 f7       	brcc	.-16     	; 0x57ae <__ftoa_engine+0x10a>
    57be:	e1 0c       	add	r14, r1
    57c0:	f1 1e       	adc	r15, r17
    57c2:	43 1f       	adc	r20, r19
    57c4:	56 1f       	adc	r21, r22
    57c6:	c9 1f       	adc	r28, r25
    57c8:	d0 1d       	adc	r29, r0
    57ca:	7e f4       	brtc	.+30     	; 0x57ea <__ftoa_engine+0x146>
    57cc:	70 33       	cpi	r23, 0x30	; 48
    57ce:	11 f4       	brne	.+4      	; 0x57d4 <__ftoa_engine+0x130>
    57d0:	8a 95       	dec	r24
    57d2:	e6 cf       	rjmp	.-52     	; 0x57a0 <__ftoa_engine+0xfc>
    57d4:	e8 94       	clt
    57d6:	01 50       	subi	r16, 0x01	; 1
    57d8:	30 f0       	brcs	.+12     	; 0x57e6 <__ftoa_engine+0x142>
    57da:	08 0f       	add	r16, r24
    57dc:	0a f4       	brpl	.+2      	; 0x57e0 <__ftoa_engine+0x13c>
    57de:	00 27       	eor	r16, r16
    57e0:	02 17       	cp	r16, r18
    57e2:	08 f4       	brcc	.+2      	; 0x57e6 <__ftoa_engine+0x142>
    57e4:	20 2f       	mov	r18, r16
    57e6:	23 95       	inc	r18
    57e8:	02 2f       	mov	r16, r18
    57ea:	7a 33       	cpi	r23, 0x3A	; 58
    57ec:	28 f0       	brcs	.+10     	; 0x57f8 <__ftoa_engine+0x154>
    57ee:	79 e3       	ldi	r23, 0x39	; 57
    57f0:	7d 93       	st	X+, r23
    57f2:	2a 95       	dec	r18
    57f4:	e9 f7       	brne	.-6      	; 0x57f0 <__ftoa_engine+0x14c>
    57f6:	10 c0       	rjmp	.+32     	; 0x5818 <__ftoa_engine+0x174>
    57f8:	7d 93       	st	X+, r23
    57fa:	2a 95       	dec	r18
    57fc:	89 f6       	brne	.-94     	; 0x57a0 <__ftoa_engine+0xfc>
    57fe:	06 94       	lsr	r0
    5800:	97 95       	ror	r25
    5802:	67 95       	ror	r22
    5804:	37 95       	ror	r19
    5806:	17 95       	ror	r17
    5808:	17 94       	ror	r1
    580a:	e1 18       	sub	r14, r1
    580c:	f1 0a       	sbc	r15, r17
    580e:	43 0b       	sbc	r20, r19
    5810:	56 0b       	sbc	r21, r22
    5812:	c9 0b       	sbc	r28, r25
    5814:	d0 09       	sbc	r29, r0
    5816:	98 f0       	brcs	.+38     	; 0x583e <__ftoa_engine+0x19a>
    5818:	23 95       	inc	r18
    581a:	7e 91       	ld	r23, -X
    581c:	73 95       	inc	r23
    581e:	7a 33       	cpi	r23, 0x3A	; 58
    5820:	08 f0       	brcs	.+2      	; 0x5824 <__ftoa_engine+0x180>
    5822:	70 e3       	ldi	r23, 0x30	; 48
    5824:	7c 93       	st	X, r23
    5826:	20 13       	cpse	r18, r16
    5828:	b8 f7       	brcc	.-18     	; 0x5818 <__ftoa_engine+0x174>
    582a:	7e 91       	ld	r23, -X
    582c:	70 61       	ori	r23, 0x10	; 16
    582e:	7d 93       	st	X+, r23
    5830:	30 f0       	brcs	.+12     	; 0x583e <__ftoa_engine+0x19a>
    5832:	83 95       	inc	r24
    5834:	71 e3       	ldi	r23, 0x31	; 49
    5836:	7d 93       	st	X+, r23
    5838:	70 e3       	ldi	r23, 0x30	; 48
    583a:	2a 95       	dec	r18
    583c:	e1 f7       	brne	.-8      	; 0x5836 <__ftoa_engine+0x192>
    583e:	11 24       	eor	r1, r1
    5840:	ef 90       	pop	r14
    5842:	ff 90       	pop	r15
    5844:	0f 91       	pop	r16
    5846:	1f 91       	pop	r17
    5848:	cf 91       	pop	r28
    584a:	df 91       	pop	r29
    584c:	99 27       	eor	r25, r25
    584e:	87 fd       	sbrc	r24, 7
    5850:	90 95       	com	r25
    5852:	08 95       	ret

00005854 <strnlen_P>:
    5854:	fc 01       	movw	r30, r24
    5856:	05 90       	lpm	r0, Z+
    5858:	61 50       	subi	r22, 0x01	; 1
    585a:	70 40       	sbci	r23, 0x00	; 0
    585c:	01 10       	cpse	r0, r1
    585e:	d8 f7       	brcc	.-10     	; 0x5856 <strnlen_P+0x2>
    5860:	80 95       	com	r24
    5862:	90 95       	com	r25
    5864:	8e 0f       	add	r24, r30
    5866:	9f 1f       	adc	r25, r31
    5868:	08 95       	ret

0000586a <memset>:
    586a:	dc 01       	movw	r26, r24
    586c:	01 c0       	rjmp	.+2      	; 0x5870 <memset+0x6>
    586e:	6d 93       	st	X+, r22
    5870:	41 50       	subi	r20, 0x01	; 1
    5872:	50 40       	sbci	r21, 0x00	; 0
    5874:	e0 f7       	brcc	.-8      	; 0x586e <memset+0x4>
    5876:	08 95       	ret

00005878 <strcat>:
    5878:	fb 01       	movw	r30, r22
    587a:	dc 01       	movw	r26, r24
    587c:	0d 90       	ld	r0, X+
    587e:	00 20       	and	r0, r0
    5880:	e9 f7       	brne	.-6      	; 0x587c <strcat+0x4>
    5882:	11 97       	sbiw	r26, 0x01	; 1
    5884:	01 90       	ld	r0, Z+
    5886:	0d 92       	st	X+, r0
    5888:	00 20       	and	r0, r0
    588a:	e1 f7       	brne	.-8      	; 0x5884 <strcat+0xc>
    588c:	08 95       	ret

0000588e <strcmp>:
    588e:	fb 01       	movw	r30, r22
    5890:	dc 01       	movw	r26, r24
    5892:	8d 91       	ld	r24, X+
    5894:	01 90       	ld	r0, Z+
    5896:	80 19       	sub	r24, r0
    5898:	01 10       	cpse	r0, r1
    589a:	d9 f3       	breq	.-10     	; 0x5892 <strcmp+0x4>
    589c:	99 0b       	sbc	r25, r25
    589e:	08 95       	ret

000058a0 <strnlen>:
    58a0:	fc 01       	movw	r30, r24
    58a2:	61 50       	subi	r22, 0x01	; 1
    58a4:	70 40       	sbci	r23, 0x00	; 0
    58a6:	01 90       	ld	r0, Z+
    58a8:	01 10       	cpse	r0, r1
    58aa:	d8 f7       	brcc	.-10     	; 0x58a2 <strnlen+0x2>
    58ac:	80 95       	com	r24
    58ae:	90 95       	com	r25
    58b0:	8e 0f       	add	r24, r30
    58b2:	9f 1f       	adc	r25, r31
    58b4:	08 95       	ret

000058b6 <fputc>:
    58b6:	0f 93       	push	r16
    58b8:	1f 93       	push	r17
    58ba:	cf 93       	push	r28
    58bc:	df 93       	push	r29
    58be:	fb 01       	movw	r30, r22
    58c0:	23 81       	ldd	r18, Z+3	; 0x03
    58c2:	21 fd       	sbrc	r18, 1
    58c4:	03 c0       	rjmp	.+6      	; 0x58cc <fputc+0x16>
    58c6:	8f ef       	ldi	r24, 0xFF	; 255
    58c8:	9f ef       	ldi	r25, 0xFF	; 255
    58ca:	2c c0       	rjmp	.+88     	; 0x5924 <fputc+0x6e>
    58cc:	22 ff       	sbrs	r18, 2
    58ce:	16 c0       	rjmp	.+44     	; 0x58fc <fputc+0x46>
    58d0:	46 81       	ldd	r20, Z+6	; 0x06
    58d2:	57 81       	ldd	r21, Z+7	; 0x07
    58d4:	24 81       	ldd	r18, Z+4	; 0x04
    58d6:	35 81       	ldd	r19, Z+5	; 0x05
    58d8:	42 17       	cp	r20, r18
    58da:	53 07       	cpc	r21, r19
    58dc:	44 f4       	brge	.+16     	; 0x58ee <fputc+0x38>
    58de:	a0 81       	ld	r26, Z
    58e0:	b1 81       	ldd	r27, Z+1	; 0x01
    58e2:	9d 01       	movw	r18, r26
    58e4:	2f 5f       	subi	r18, 0xFF	; 255
    58e6:	3f 4f       	sbci	r19, 0xFF	; 255
    58e8:	31 83       	std	Z+1, r19	; 0x01
    58ea:	20 83       	st	Z, r18
    58ec:	8c 93       	st	X, r24
    58ee:	26 81       	ldd	r18, Z+6	; 0x06
    58f0:	37 81       	ldd	r19, Z+7	; 0x07
    58f2:	2f 5f       	subi	r18, 0xFF	; 255
    58f4:	3f 4f       	sbci	r19, 0xFF	; 255
    58f6:	37 83       	std	Z+7, r19	; 0x07
    58f8:	26 83       	std	Z+6, r18	; 0x06
    58fa:	14 c0       	rjmp	.+40     	; 0x5924 <fputc+0x6e>
    58fc:	8b 01       	movw	r16, r22
    58fe:	ec 01       	movw	r28, r24
    5900:	fb 01       	movw	r30, r22
    5902:	00 84       	ldd	r0, Z+8	; 0x08
    5904:	f1 85       	ldd	r31, Z+9	; 0x09
    5906:	e0 2d       	mov	r30, r0
    5908:	09 95       	icall
    590a:	89 2b       	or	r24, r25
    590c:	e1 f6       	brne	.-72     	; 0x58c6 <fputc+0x10>
    590e:	d8 01       	movw	r26, r16
    5910:	16 96       	adiw	r26, 0x06	; 6
    5912:	8d 91       	ld	r24, X+
    5914:	9c 91       	ld	r25, X
    5916:	17 97       	sbiw	r26, 0x07	; 7
    5918:	01 96       	adiw	r24, 0x01	; 1
    591a:	17 96       	adiw	r26, 0x07	; 7
    591c:	9c 93       	st	X, r25
    591e:	8e 93       	st	-X, r24
    5920:	16 97       	sbiw	r26, 0x06	; 6
    5922:	ce 01       	movw	r24, r28
    5924:	df 91       	pop	r29
    5926:	cf 91       	pop	r28
    5928:	1f 91       	pop	r17
    592a:	0f 91       	pop	r16
    592c:	08 95       	ret

0000592e <sprintf>:
    592e:	ae e0       	ldi	r26, 0x0E	; 14
    5930:	b0 e0       	ldi	r27, 0x00	; 0
    5932:	ed e9       	ldi	r30, 0x9D	; 157
    5934:	fc e2       	ldi	r31, 0x2C	; 44
    5936:	0c 94 1a 2b 	jmp	0x5634	; 0x5634 <__prologue_saves__+0x1c>
    593a:	0d 89       	ldd	r16, Y+21	; 0x15
    593c:	1e 89       	ldd	r17, Y+22	; 0x16
    593e:	86 e0       	ldi	r24, 0x06	; 6
    5940:	8c 83       	std	Y+4, r24	; 0x04
    5942:	1a 83       	std	Y+2, r17	; 0x02
    5944:	09 83       	std	Y+1, r16	; 0x01
    5946:	8f ef       	ldi	r24, 0xFF	; 255
    5948:	9f e7       	ldi	r25, 0x7F	; 127
    594a:	9e 83       	std	Y+6, r25	; 0x06
    594c:	8d 83       	std	Y+5, r24	; 0x05
    594e:	ae 01       	movw	r20, r28
    5950:	47 5e       	subi	r20, 0xE7	; 231
    5952:	5f 4f       	sbci	r21, 0xFF	; 255
    5954:	6f 89       	ldd	r22, Y+23	; 0x17
    5956:	78 8d       	ldd	r23, Y+24	; 0x18
    5958:	ce 01       	movw	r24, r28
    595a:	01 96       	adiw	r24, 0x01	; 1
    595c:	0e 94 25 27 	call	0x4e4a	; 0x4e4a <vfprintf>
    5960:	ef 81       	ldd	r30, Y+7	; 0x07
    5962:	f8 85       	ldd	r31, Y+8	; 0x08
    5964:	e0 0f       	add	r30, r16
    5966:	f1 1f       	adc	r31, r17
    5968:	10 82       	st	Z, r1
    596a:	2e 96       	adiw	r28, 0x0e	; 14
    596c:	e4 e0       	ldi	r30, 0x04	; 4
    596e:	0c 94 36 2b 	jmp	0x566c	; 0x566c <__epilogue_restores__+0x1c>

00005972 <sscanf>:
    5972:	ae e0       	ldi	r26, 0x0E	; 14
    5974:	b0 e0       	ldi	r27, 0x00	; 0
    5976:	ef eb       	ldi	r30, 0xBF	; 191
    5978:	fc e2       	ldi	r31, 0x2C	; 44
    597a:	0c 94 1c 2b 	jmp	0x5638	; 0x5638 <__prologue_saves__+0x20>
    597e:	85 e0       	ldi	r24, 0x05	; 5
    5980:	8c 83       	std	Y+4, r24	; 0x04
    5982:	8b 89       	ldd	r24, Y+19	; 0x13
    5984:	9c 89       	ldd	r25, Y+20	; 0x14
    5986:	9a 83       	std	Y+2, r25	; 0x02
    5988:	89 83       	std	Y+1, r24	; 0x01
    598a:	ae 01       	movw	r20, r28
    598c:	49 5e       	subi	r20, 0xE9	; 233
    598e:	5f 4f       	sbci	r21, 0xFF	; 255
    5990:	6d 89       	ldd	r22, Y+21	; 0x15
    5992:	7e 89       	ldd	r23, Y+22	; 0x16
    5994:	ce 01       	movw	r24, r28
    5996:	01 96       	adiw	r24, 0x01	; 1
    5998:	0e 94 cc 2e 	call	0x5d98	; 0x5d98 <vfscanf>
    599c:	2e 96       	adiw	r28, 0x0e	; 14
    599e:	e2 e0       	ldi	r30, 0x02	; 2
    59a0:	0c 94 38 2b 	jmp	0x5670	; 0x5670 <__epilogue_restores__+0x20>

000059a4 <__ultoa_invert>:
    59a4:	fa 01       	movw	r30, r20
    59a6:	aa 27       	eor	r26, r26
    59a8:	28 30       	cpi	r18, 0x08	; 8
    59aa:	51 f1       	breq	.+84     	; 0x5a00 <__ultoa_invert+0x5c>
    59ac:	20 31       	cpi	r18, 0x10	; 16
    59ae:	81 f1       	breq	.+96     	; 0x5a10 <__ultoa_invert+0x6c>
    59b0:	e8 94       	clt
    59b2:	6f 93       	push	r22
    59b4:	6e 7f       	andi	r22, 0xFE	; 254
    59b6:	6e 5f       	subi	r22, 0xFE	; 254
    59b8:	7f 4f       	sbci	r23, 0xFF	; 255
    59ba:	8f 4f       	sbci	r24, 0xFF	; 255
    59bc:	9f 4f       	sbci	r25, 0xFF	; 255
    59be:	af 4f       	sbci	r26, 0xFF	; 255
    59c0:	b1 e0       	ldi	r27, 0x01	; 1
    59c2:	3e d0       	rcall	.+124    	; 0x5a40 <__ultoa_invert+0x9c>
    59c4:	b4 e0       	ldi	r27, 0x04	; 4
    59c6:	3c d0       	rcall	.+120    	; 0x5a40 <__ultoa_invert+0x9c>
    59c8:	67 0f       	add	r22, r23
    59ca:	78 1f       	adc	r23, r24
    59cc:	89 1f       	adc	r24, r25
    59ce:	9a 1f       	adc	r25, r26
    59d0:	a1 1d       	adc	r26, r1
    59d2:	68 0f       	add	r22, r24
    59d4:	79 1f       	adc	r23, r25
    59d6:	8a 1f       	adc	r24, r26
    59d8:	91 1d       	adc	r25, r1
    59da:	a1 1d       	adc	r26, r1
    59dc:	6a 0f       	add	r22, r26
    59de:	71 1d       	adc	r23, r1
    59e0:	81 1d       	adc	r24, r1
    59e2:	91 1d       	adc	r25, r1
    59e4:	a1 1d       	adc	r26, r1
    59e6:	20 d0       	rcall	.+64     	; 0x5a28 <__ultoa_invert+0x84>
    59e8:	09 f4       	brne	.+2      	; 0x59ec <__ultoa_invert+0x48>
    59ea:	68 94       	set
    59ec:	3f 91       	pop	r19
    59ee:	2a e0       	ldi	r18, 0x0A	; 10
    59f0:	26 9f       	mul	r18, r22
    59f2:	11 24       	eor	r1, r1
    59f4:	30 19       	sub	r19, r0
    59f6:	30 5d       	subi	r19, 0xD0	; 208
    59f8:	31 93       	st	Z+, r19
    59fa:	de f6       	brtc	.-74     	; 0x59b2 <__ultoa_invert+0xe>
    59fc:	cf 01       	movw	r24, r30
    59fe:	08 95       	ret
    5a00:	46 2f       	mov	r20, r22
    5a02:	47 70       	andi	r20, 0x07	; 7
    5a04:	40 5d       	subi	r20, 0xD0	; 208
    5a06:	41 93       	st	Z+, r20
    5a08:	b3 e0       	ldi	r27, 0x03	; 3
    5a0a:	0f d0       	rcall	.+30     	; 0x5a2a <__ultoa_invert+0x86>
    5a0c:	c9 f7       	brne	.-14     	; 0x5a00 <__ultoa_invert+0x5c>
    5a0e:	f6 cf       	rjmp	.-20     	; 0x59fc <__ultoa_invert+0x58>
    5a10:	46 2f       	mov	r20, r22
    5a12:	4f 70       	andi	r20, 0x0F	; 15
    5a14:	40 5d       	subi	r20, 0xD0	; 208
    5a16:	4a 33       	cpi	r20, 0x3A	; 58
    5a18:	18 f0       	brcs	.+6      	; 0x5a20 <__ultoa_invert+0x7c>
    5a1a:	49 5d       	subi	r20, 0xD9	; 217
    5a1c:	31 fd       	sbrc	r19, 1
    5a1e:	40 52       	subi	r20, 0x20	; 32
    5a20:	41 93       	st	Z+, r20
    5a22:	02 d0       	rcall	.+4      	; 0x5a28 <__ultoa_invert+0x84>
    5a24:	a9 f7       	brne	.-22     	; 0x5a10 <__ultoa_invert+0x6c>
    5a26:	ea cf       	rjmp	.-44     	; 0x59fc <__ultoa_invert+0x58>
    5a28:	b4 e0       	ldi	r27, 0x04	; 4
    5a2a:	a6 95       	lsr	r26
    5a2c:	97 95       	ror	r25
    5a2e:	87 95       	ror	r24
    5a30:	77 95       	ror	r23
    5a32:	67 95       	ror	r22
    5a34:	ba 95       	dec	r27
    5a36:	c9 f7       	brne	.-14     	; 0x5a2a <__ultoa_invert+0x86>
    5a38:	00 97       	sbiw	r24, 0x00	; 0
    5a3a:	61 05       	cpc	r22, r1
    5a3c:	71 05       	cpc	r23, r1
    5a3e:	08 95       	ret
    5a40:	9b 01       	movw	r18, r22
    5a42:	ac 01       	movw	r20, r24
    5a44:	0a 2e       	mov	r0, r26
    5a46:	06 94       	lsr	r0
    5a48:	57 95       	ror	r21
    5a4a:	47 95       	ror	r20
    5a4c:	37 95       	ror	r19
    5a4e:	27 95       	ror	r18
    5a50:	ba 95       	dec	r27
    5a52:	c9 f7       	brne	.-14     	; 0x5a46 <__ultoa_invert+0xa2>
    5a54:	62 0f       	add	r22, r18
    5a56:	73 1f       	adc	r23, r19
    5a58:	84 1f       	adc	r24, r20
    5a5a:	95 1f       	adc	r25, r21
    5a5c:	a0 1d       	adc	r26, r0
    5a5e:	08 95       	ret

00005a60 <putval>:
    5a60:	20 fd       	sbrc	r18, 0
    5a62:	09 c0       	rjmp	.+18     	; 0x5a76 <putval+0x16>
    5a64:	fc 01       	movw	r30, r24
    5a66:	23 fd       	sbrc	r18, 3
    5a68:	05 c0       	rjmp	.+10     	; 0x5a74 <putval+0x14>
    5a6a:	22 ff       	sbrs	r18, 2
    5a6c:	02 c0       	rjmp	.+4      	; 0x5a72 <putval+0x12>
    5a6e:	73 83       	std	Z+3, r23	; 0x03
    5a70:	62 83       	std	Z+2, r22	; 0x02
    5a72:	51 83       	std	Z+1, r21	; 0x01
    5a74:	40 83       	st	Z, r20
    5a76:	08 95       	ret

00005a78 <mulacc>:
    5a78:	44 fd       	sbrc	r20, 4
    5a7a:	17 c0       	rjmp	.+46     	; 0x5aaa <mulacc+0x32>
    5a7c:	46 fd       	sbrc	r20, 6
    5a7e:	17 c0       	rjmp	.+46     	; 0x5aae <mulacc+0x36>
    5a80:	ab 01       	movw	r20, r22
    5a82:	bc 01       	movw	r22, r24
    5a84:	da 01       	movw	r26, r20
    5a86:	fb 01       	movw	r30, r22
    5a88:	aa 0f       	add	r26, r26
    5a8a:	bb 1f       	adc	r27, r27
    5a8c:	ee 1f       	adc	r30, r30
    5a8e:	ff 1f       	adc	r31, r31
    5a90:	10 94       	com	r1
    5a92:	d1 f7       	brne	.-12     	; 0x5a88 <mulacc+0x10>
    5a94:	4a 0f       	add	r20, r26
    5a96:	5b 1f       	adc	r21, r27
    5a98:	6e 1f       	adc	r22, r30
    5a9a:	7f 1f       	adc	r23, r31
    5a9c:	cb 01       	movw	r24, r22
    5a9e:	ba 01       	movw	r22, r20
    5aa0:	66 0f       	add	r22, r22
    5aa2:	77 1f       	adc	r23, r23
    5aa4:	88 1f       	adc	r24, r24
    5aa6:	99 1f       	adc	r25, r25
    5aa8:	09 c0       	rjmp	.+18     	; 0x5abc <mulacc+0x44>
    5aaa:	33 e0       	ldi	r19, 0x03	; 3
    5aac:	01 c0       	rjmp	.+2      	; 0x5ab0 <mulacc+0x38>
    5aae:	34 e0       	ldi	r19, 0x04	; 4
    5ab0:	66 0f       	add	r22, r22
    5ab2:	77 1f       	adc	r23, r23
    5ab4:	88 1f       	adc	r24, r24
    5ab6:	99 1f       	adc	r25, r25
    5ab8:	31 50       	subi	r19, 0x01	; 1
    5aba:	d1 f7       	brne	.-12     	; 0x5ab0 <mulacc+0x38>
    5abc:	62 0f       	add	r22, r18
    5abe:	71 1d       	adc	r23, r1
    5ac0:	81 1d       	adc	r24, r1
    5ac2:	91 1d       	adc	r25, r1
    5ac4:	08 95       	ret

00005ac6 <skip_spaces>:
    5ac6:	0f 93       	push	r16
    5ac8:	1f 93       	push	r17
    5aca:	cf 93       	push	r28
    5acc:	df 93       	push	r29
    5ace:	8c 01       	movw	r16, r24
    5ad0:	c8 01       	movw	r24, r16
    5ad2:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5ad6:	ec 01       	movw	r28, r24
    5ad8:	97 fd       	sbrc	r25, 7
    5ada:	08 c0       	rjmp	.+16     	; 0x5aec <skip_spaces+0x26>
    5adc:	0e 94 dd 2f 	call	0x5fba	; 0x5fba <isspace>
    5ae0:	89 2b       	or	r24, r25
    5ae2:	b1 f7       	brne	.-20     	; 0x5ad0 <skip_spaces+0xa>
    5ae4:	b8 01       	movw	r22, r16
    5ae6:	ce 01       	movw	r24, r28
    5ae8:	0e 94 2f 30 	call	0x605e	; 0x605e <ungetc>
    5aec:	ce 01       	movw	r24, r28
    5aee:	df 91       	pop	r29
    5af0:	cf 91       	pop	r28
    5af2:	1f 91       	pop	r17
    5af4:	0f 91       	pop	r16
    5af6:	08 95       	ret

00005af8 <conv_int>:
    5af8:	8f 92       	push	r8
    5afa:	9f 92       	push	r9
    5afc:	af 92       	push	r10
    5afe:	bf 92       	push	r11
    5b00:	ef 92       	push	r14
    5b02:	ff 92       	push	r15
    5b04:	0f 93       	push	r16
    5b06:	1f 93       	push	r17
    5b08:	cf 93       	push	r28
    5b0a:	df 93       	push	r29
    5b0c:	8c 01       	movw	r16, r24
    5b0e:	d6 2f       	mov	r29, r22
    5b10:	7a 01       	movw	r14, r20
    5b12:	b2 2e       	mov	r11, r18
    5b14:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5b18:	9c 01       	movw	r18, r24
    5b1a:	33 27       	eor	r19, r19
    5b1c:	2b 32       	cpi	r18, 0x2B	; 43
    5b1e:	31 05       	cpc	r19, r1
    5b20:	31 f0       	breq	.+12     	; 0x5b2e <conv_int+0x36>
    5b22:	2d 32       	cpi	r18, 0x2D	; 45
    5b24:	31 05       	cpc	r19, r1
    5b26:	61 f4       	brne	.+24     	; 0x5b40 <conv_int+0x48>
    5b28:	8b 2d       	mov	r24, r11
    5b2a:	80 68       	ori	r24, 0x80	; 128
    5b2c:	b8 2e       	mov	r11, r24
    5b2e:	d1 50       	subi	r29, 0x01	; 1
    5b30:	11 f4       	brne	.+4      	; 0x5b36 <conv_int+0x3e>
    5b32:	80 e0       	ldi	r24, 0x00	; 0
    5b34:	68 c0       	rjmp	.+208    	; 0x5c06 <conv_int+0x10e>
    5b36:	c8 01       	movw	r24, r16
    5b38:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5b3c:	97 fd       	sbrc	r25, 7
    5b3e:	f9 cf       	rjmp	.-14     	; 0x5b32 <conv_int+0x3a>
    5b40:	cb 2d       	mov	r28, r11
    5b42:	cd 7f       	andi	r28, 0xFD	; 253
    5b44:	2b 2d       	mov	r18, r11
    5b46:	20 73       	andi	r18, 0x30	; 48
    5b48:	09 f5       	brne	.+66     	; 0x5b8c <conv_int+0x94>
    5b4a:	80 33       	cpi	r24, 0x30	; 48
    5b4c:	f9 f4       	brne	.+62     	; 0x5b8c <conv_int+0x94>
    5b4e:	aa 24       	eor	r10, r10
    5b50:	aa 94       	dec	r10
    5b52:	ad 0e       	add	r10, r29
    5b54:	09 f4       	brne	.+2      	; 0x5b58 <conv_int+0x60>
    5b56:	43 c0       	rjmp	.+134    	; 0x5bde <conv_int+0xe6>
    5b58:	c8 01       	movw	r24, r16
    5b5a:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5b5e:	97 fd       	sbrc	r25, 7
    5b60:	3e c0       	rjmp	.+124    	; 0x5bde <conv_int+0xe6>
    5b62:	9c 01       	movw	r18, r24
    5b64:	2f 7d       	andi	r18, 0xDF	; 223
    5b66:	33 27       	eor	r19, r19
    5b68:	28 35       	cpi	r18, 0x58	; 88
    5b6a:	31 05       	cpc	r19, r1
    5b6c:	49 f4       	brne	.+18     	; 0x5b80 <conv_int+0x88>
    5b6e:	c2 64       	ori	r28, 0x42	; 66
    5b70:	d2 50       	subi	r29, 0x02	; 2
    5b72:	a9 f1       	breq	.+106    	; 0x5bde <conv_int+0xe6>
    5b74:	c8 01       	movw	r24, r16
    5b76:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5b7a:	97 ff       	sbrs	r25, 7
    5b7c:	07 c0       	rjmp	.+14     	; 0x5b8c <conv_int+0x94>
    5b7e:	2f c0       	rjmp	.+94     	; 0x5bde <conv_int+0xe6>
    5b80:	b6 fe       	sbrs	r11, 6
    5b82:	02 c0       	rjmp	.+4      	; 0x5b88 <conv_int+0x90>
    5b84:	c2 60       	ori	r28, 0x02	; 2
    5b86:	01 c0       	rjmp	.+2      	; 0x5b8a <conv_int+0x92>
    5b88:	c2 61       	ori	r28, 0x12	; 18
    5b8a:	da 2d       	mov	r29, r10
    5b8c:	81 2c       	mov	r8, r1
    5b8e:	91 2c       	mov	r9, r1
    5b90:	54 01       	movw	r10, r8
    5b92:	20 ed       	ldi	r18, 0xD0	; 208
    5b94:	28 0f       	add	r18, r24
    5b96:	28 30       	cpi	r18, 0x08	; 8
    5b98:	80 f0       	brcs	.+32     	; 0x5bba <conv_int+0xc2>
    5b9a:	c4 ff       	sbrs	r28, 4
    5b9c:	04 c0       	rjmp	.+8      	; 0x5ba6 <conv_int+0xae>
    5b9e:	b8 01       	movw	r22, r16
    5ba0:	0e 94 2f 30 	call	0x605e	; 0x605e <ungetc>
    5ba4:	19 c0       	rjmp	.+50     	; 0x5bd8 <conv_int+0xe0>
    5ba6:	2a 30       	cpi	r18, 0x0A	; 10
    5ba8:	40 f0       	brcs	.+16     	; 0x5bba <conv_int+0xc2>
    5baa:	c6 ff       	sbrs	r28, 6
    5bac:	f8 cf       	rjmp	.-16     	; 0x5b9e <conv_int+0xa6>
    5bae:	2f 7d       	andi	r18, 0xDF	; 223
    5bb0:	3f ee       	ldi	r19, 0xEF	; 239
    5bb2:	32 0f       	add	r19, r18
    5bb4:	36 30       	cpi	r19, 0x06	; 6
    5bb6:	98 f7       	brcc	.-26     	; 0x5b9e <conv_int+0xa6>
    5bb8:	27 50       	subi	r18, 0x07	; 7
    5bba:	4c 2f       	mov	r20, r28
    5bbc:	c5 01       	movw	r24, r10
    5bbe:	b4 01       	movw	r22, r8
    5bc0:	0e 94 3c 2d 	call	0x5a78	; 0x5a78 <mulacc>
    5bc4:	4b 01       	movw	r8, r22
    5bc6:	5c 01       	movw	r10, r24
    5bc8:	c2 60       	ori	r28, 0x02	; 2
    5bca:	d1 50       	subi	r29, 0x01	; 1
    5bcc:	59 f0       	breq	.+22     	; 0x5be4 <conv_int+0xec>
    5bce:	c8 01       	movw	r24, r16
    5bd0:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5bd4:	97 ff       	sbrs	r25, 7
    5bd6:	dd cf       	rjmp	.-70     	; 0x5b92 <conv_int+0x9a>
    5bd8:	c1 fd       	sbrc	r28, 1
    5bda:	04 c0       	rjmp	.+8      	; 0x5be4 <conv_int+0xec>
    5bdc:	aa cf       	rjmp	.-172    	; 0x5b32 <conv_int+0x3a>
    5bde:	81 2c       	mov	r8, r1
    5be0:	91 2c       	mov	r9, r1
    5be2:	54 01       	movw	r10, r8
    5be4:	c7 ff       	sbrs	r28, 7
    5be6:	08 c0       	rjmp	.+16     	; 0x5bf8 <conv_int+0x100>
    5be8:	b0 94       	com	r11
    5bea:	a0 94       	com	r10
    5bec:	90 94       	com	r9
    5bee:	80 94       	com	r8
    5bf0:	81 1c       	adc	r8, r1
    5bf2:	91 1c       	adc	r9, r1
    5bf4:	a1 1c       	adc	r10, r1
    5bf6:	b1 1c       	adc	r11, r1
    5bf8:	2c 2f       	mov	r18, r28
    5bfa:	b5 01       	movw	r22, r10
    5bfc:	a4 01       	movw	r20, r8
    5bfe:	c7 01       	movw	r24, r14
    5c00:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <putval>
    5c04:	81 e0       	ldi	r24, 0x01	; 1
    5c06:	df 91       	pop	r29
    5c08:	cf 91       	pop	r28
    5c0a:	1f 91       	pop	r17
    5c0c:	0f 91       	pop	r16
    5c0e:	ff 90       	pop	r15
    5c10:	ef 90       	pop	r14
    5c12:	bf 90       	pop	r11
    5c14:	af 90       	pop	r10
    5c16:	9f 90       	pop	r9
    5c18:	8f 90       	pop	r8
    5c1a:	08 95       	ret

00005c1c <conv_brk>:
    5c1c:	a0 e2       	ldi	r26, 0x20	; 32
    5c1e:	b0 e0       	ldi	r27, 0x00	; 0
    5c20:	e4 e1       	ldi	r30, 0x14	; 20
    5c22:	fe e2       	ldi	r31, 0x2E	; 46
    5c24:	0c 94 0f 2b 	jmp	0x561e	; 0x561e <__prologue_saves__+0x6>
    5c28:	5c 01       	movw	r10, r24
    5c2a:	96 2e       	mov	r9, r22
    5c2c:	7a 01       	movw	r14, r20
    5c2e:	f9 01       	movw	r30, r18
    5c30:	8e 01       	movw	r16, r28
    5c32:	0f 5f       	subi	r16, 0xFF	; 255
    5c34:	1f 4f       	sbci	r17, 0xFF	; 255
    5c36:	68 01       	movw	r12, r16
    5c38:	80 e2       	ldi	r24, 0x20	; 32
    5c3a:	d8 01       	movw	r26, r16
    5c3c:	1d 92       	st	X+, r1
    5c3e:	8a 95       	dec	r24
    5c40:	e9 f7       	brne	.-6      	; 0x5c3c <conv_brk+0x20>
    5c42:	d5 01       	movw	r26, r10
    5c44:	13 96       	adiw	r26, 0x03	; 3
    5c46:	8c 90       	ld	r8, X
    5c48:	80 e0       	ldi	r24, 0x00	; 0
    5c4a:	90 e0       	ldi	r25, 0x00	; 0
    5c4c:	61 2c       	mov	r6, r1
    5c4e:	71 2c       	mov	r7, r1
    5c50:	30 e0       	ldi	r19, 0x00	; 0
    5c52:	61 e0       	ldi	r22, 0x01	; 1
    5c54:	70 e0       	ldi	r23, 0x00	; 0
    5c56:	83 fc       	sbrc	r8, 3
    5c58:	25 91       	lpm	r18, Z+
    5c5a:	83 fe       	sbrs	r8, 3
    5c5c:	21 91       	ld	r18, Z+
    5c5e:	8f 01       	movw	r16, r30
    5c60:	52 2e       	mov	r5, r18
    5c62:	21 11       	cpse	r18, r1
    5c64:	03 c0       	rjmp	.+6      	; 0x5c6c <conv_brk+0x50>
    5c66:	80 e0       	ldi	r24, 0x00	; 0
    5c68:	90 e0       	ldi	r25, 0x00	; 0
    5c6a:	92 c0       	rjmp	.+292    	; 0x5d90 <conv_brk+0x174>
    5c6c:	2e 35       	cpi	r18, 0x5E	; 94
    5c6e:	11 f4       	brne	.+4      	; 0x5c74 <conv_brk+0x58>
    5c70:	00 97       	sbiw	r24, 0x00	; 0
    5c72:	51 f1       	breq	.+84     	; 0x5cc8 <conv_brk+0xac>
    5c74:	43 2f       	mov	r20, r19
    5c76:	50 e0       	ldi	r21, 0x00	; 0
    5c78:	48 17       	cp	r20, r24
    5c7a:	59 07       	cpc	r21, r25
    5c7c:	3c f4       	brge	.+14     	; 0x5c8c <conv_brk+0x70>
    5c7e:	2d 35       	cpi	r18, 0x5D	; 93
    5c80:	59 f1       	breq	.+86     	; 0x5cd8 <conv_brk+0xbc>
    5c82:	2d 32       	cpi	r18, 0x2D	; 45
    5c84:	19 f4       	brne	.+6      	; 0x5c8c <conv_brk+0x70>
    5c86:	77 20       	and	r7, r7
    5c88:	09 f1       	breq	.+66     	; 0x5ccc <conv_brk+0xb0>
    5c8a:	03 c0       	rjmp	.+6      	; 0x5c92 <conv_brk+0x76>
    5c8c:	77 20       	and	r7, r7
    5c8e:	09 f4       	brne	.+2      	; 0x5c92 <conv_brk+0x76>
    5c90:	6a c0       	rjmp	.+212    	; 0x5d66 <conv_brk+0x14a>
    5c92:	45 2d       	mov	r20, r5
    5c94:	46 95       	lsr	r20
    5c96:	46 95       	lsr	r20
    5c98:	46 95       	lsr	r20
    5c9a:	d6 01       	movw	r26, r12
    5c9c:	a4 0f       	add	r26, r20
    5c9e:	b1 1d       	adc	r27, r1
    5ca0:	45 2d       	mov	r20, r5
    5ca2:	47 70       	andi	r20, 0x07	; 7
    5ca4:	8b 01       	movw	r16, r22
    5ca6:	02 c0       	rjmp	.+4      	; 0x5cac <conv_brk+0x90>
    5ca8:	00 0f       	add	r16, r16
    5caa:	11 1f       	adc	r17, r17
    5cac:	4a 95       	dec	r20
    5cae:	e2 f7       	brpl	.-8      	; 0x5ca8 <conv_brk+0x8c>
    5cb0:	a8 01       	movw	r20, r16
    5cb2:	5c 91       	ld	r21, X
    5cb4:	45 2b       	or	r20, r21
    5cb6:	4c 93       	st	X, r20
    5cb8:	65 14       	cp	r6, r5
    5cba:	59 f0       	breq	.+22     	; 0x5cd2 <conv_brk+0xb6>
    5cbc:	56 14       	cp	r5, r6
    5cbe:	10 f4       	brcc	.+4      	; 0x5cc4 <conv_brk+0xa8>
    5cc0:	53 94       	inc	r5
    5cc2:	e7 cf       	rjmp	.-50     	; 0x5c92 <conv_brk+0x76>
    5cc4:	5a 94       	dec	r5
    5cc6:	e5 cf       	rjmp	.-54     	; 0x5c92 <conv_brk+0x76>
    5cc8:	31 e0       	ldi	r19, 0x01	; 1
    5cca:	04 c0       	rjmp	.+8      	; 0x5cd4 <conv_brk+0xb8>
    5ccc:	77 24       	eor	r7, r7
    5cce:	73 94       	inc	r7
    5cd0:	01 c0       	rjmp	.+2      	; 0x5cd4 <conv_brk+0xb8>
    5cd2:	71 2c       	mov	r7, r1
    5cd4:	01 96       	adiw	r24, 0x01	; 1
    5cd6:	bf cf       	rjmp	.-130    	; 0x5c56 <conv_brk+0x3a>
    5cd8:	77 20       	and	r7, r7
    5cda:	19 f0       	breq	.+6      	; 0x5ce2 <conv_brk+0xc6>
    5cdc:	8e 81       	ldd	r24, Y+6	; 0x06
    5cde:	80 62       	ori	r24, 0x20	; 32
    5ce0:	8e 83       	std	Y+6, r24	; 0x06
    5ce2:	31 11       	cpse	r19, r1
    5ce4:	03 c0       	rjmp	.+6      	; 0x5cec <conv_brk+0xd0>
    5ce6:	88 24       	eor	r8, r8
    5ce8:	83 94       	inc	r8
    5cea:	17 c0       	rjmp	.+46     	; 0x5d1a <conv_brk+0xfe>
    5cec:	f6 01       	movw	r30, r12
    5cee:	9e 01       	movw	r18, r28
    5cf0:	2f 5d       	subi	r18, 0xDF	; 223
    5cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    5cf4:	80 81       	ld	r24, Z
    5cf6:	80 95       	com	r24
    5cf8:	81 93       	st	Z+, r24
    5cfa:	2e 17       	cp	r18, r30
    5cfc:	3f 07       	cpc	r19, r31
    5cfe:	d1 f7       	brne	.-12     	; 0x5cf4 <conv_brk+0xd8>
    5d00:	f2 cf       	rjmp	.-28     	; 0x5ce6 <conv_brk+0xca>
    5d02:	e1 14       	cp	r14, r1
    5d04:	f1 04       	cpc	r15, r1
    5d06:	29 f0       	breq	.+10     	; 0x5d12 <conv_brk+0xf6>
    5d08:	d7 01       	movw	r26, r14
    5d0a:	8c 93       	st	X, r24
    5d0c:	f7 01       	movw	r30, r14
    5d0e:	31 96       	adiw	r30, 0x01	; 1
    5d10:	7f 01       	movw	r14, r30
    5d12:	9a 94       	dec	r9
    5d14:	81 2c       	mov	r8, r1
    5d16:	99 20       	and	r9, r9
    5d18:	f9 f0       	breq	.+62     	; 0x5d58 <conv_brk+0x13c>
    5d1a:	c5 01       	movw	r24, r10
    5d1c:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5d20:	97 fd       	sbrc	r25, 7
    5d22:	18 c0       	rjmp	.+48     	; 0x5d54 <conv_brk+0x138>
    5d24:	fc 01       	movw	r30, r24
    5d26:	ff 27       	eor	r31, r31
    5d28:	23 e0       	ldi	r18, 0x03	; 3
    5d2a:	f5 95       	asr	r31
    5d2c:	e7 95       	ror	r30
    5d2e:	2a 95       	dec	r18
    5d30:	e1 f7       	brne	.-8      	; 0x5d2a <conv_brk+0x10e>
    5d32:	ec 0d       	add	r30, r12
    5d34:	fd 1d       	adc	r31, r13
    5d36:	20 81       	ld	r18, Z
    5d38:	30 e0       	ldi	r19, 0x00	; 0
    5d3a:	ac 01       	movw	r20, r24
    5d3c:	47 70       	andi	r20, 0x07	; 7
    5d3e:	55 27       	eor	r21, r21
    5d40:	02 c0       	rjmp	.+4      	; 0x5d46 <conv_brk+0x12a>
    5d42:	35 95       	asr	r19
    5d44:	27 95       	ror	r18
    5d46:	4a 95       	dec	r20
    5d48:	e2 f7       	brpl	.-8      	; 0x5d42 <conv_brk+0x126>
    5d4a:	20 fd       	sbrc	r18, 0
    5d4c:	da cf       	rjmp	.-76     	; 0x5d02 <conv_brk+0xe6>
    5d4e:	b5 01       	movw	r22, r10
    5d50:	0e 94 2f 30 	call	0x605e	; 0x605e <ungetc>
    5d54:	81 10       	cpse	r8, r1
    5d56:	87 cf       	rjmp	.-242    	; 0x5c66 <conv_brk+0x4a>
    5d58:	e1 14       	cp	r14, r1
    5d5a:	f1 04       	cpc	r15, r1
    5d5c:	11 f0       	breq	.+4      	; 0x5d62 <conv_brk+0x146>
    5d5e:	d7 01       	movw	r26, r14
    5d60:	1c 92       	st	X, r1
    5d62:	c8 01       	movw	r24, r16
    5d64:	15 c0       	rjmp	.+42     	; 0x5d90 <conv_brk+0x174>
    5d66:	42 2f       	mov	r20, r18
    5d68:	46 95       	lsr	r20
    5d6a:	46 95       	lsr	r20
    5d6c:	46 95       	lsr	r20
    5d6e:	d6 01       	movw	r26, r12
    5d70:	a4 0f       	add	r26, r20
    5d72:	b1 1d       	adc	r27, r1
    5d74:	42 2f       	mov	r20, r18
    5d76:	47 70       	andi	r20, 0x07	; 7
    5d78:	8b 01       	movw	r16, r22
    5d7a:	02 c0       	rjmp	.+4      	; 0x5d80 <conv_brk+0x164>
    5d7c:	00 0f       	add	r16, r16
    5d7e:	11 1f       	adc	r17, r17
    5d80:	4a 95       	dec	r20
    5d82:	e2 f7       	brpl	.-8      	; 0x5d7c <conv_brk+0x160>
    5d84:	a8 01       	movw	r20, r16
    5d86:	5c 91       	ld	r21, X
    5d88:	45 2b       	or	r20, r21
    5d8a:	4c 93       	st	X, r20
    5d8c:	62 2e       	mov	r6, r18
    5d8e:	a2 cf       	rjmp	.-188    	; 0x5cd4 <conv_brk+0xb8>
    5d90:	a0 96       	adiw	r28, 0x20	; 32
    5d92:	ef e0       	ldi	r30, 0x0F	; 15
    5d94:	0c 94 2b 2b 	jmp	0x5656	; 0x5656 <__epilogue_restores__+0x6>

00005d98 <vfscanf>:
    5d98:	a0 e0       	ldi	r26, 0x00	; 0
    5d9a:	b0 e0       	ldi	r27, 0x00	; 0
    5d9c:	e2 ed       	ldi	r30, 0xD2	; 210
    5d9e:	fe e2       	ldi	r31, 0x2E	; 46
    5da0:	0c 94 0f 2b 	jmp	0x561e	; 0x561e <__prologue_saves__+0x6>
    5da4:	6c 01       	movw	r12, r24
    5da6:	eb 01       	movw	r28, r22
    5da8:	5a 01       	movw	r10, r20
    5daa:	fc 01       	movw	r30, r24
    5dac:	17 82       	std	Z+7, r1	; 0x07
    5dae:	16 82       	std	Z+6, r1	; 0x06
    5db0:	51 2c       	mov	r5, r1
    5db2:	f6 01       	movw	r30, r12
    5db4:	e3 80       	ldd	r14, Z+3	; 0x03
    5db6:	fe 01       	movw	r30, r28
    5db8:	e3 fc       	sbrc	r14, 3
    5dba:	85 91       	lpm	r24, Z+
    5dbc:	e3 fe       	sbrs	r14, 3
    5dbe:	81 91       	ld	r24, Z+
    5dc0:	18 2f       	mov	r17, r24
    5dc2:	ef 01       	movw	r28, r30
    5dc4:	88 23       	and	r24, r24
    5dc6:	09 f4       	brne	.+2      	; 0x5dca <vfscanf+0x32>
    5dc8:	ee c0       	rjmp	.+476    	; 0x5fa6 <vfscanf+0x20e>
    5dca:	90 e0       	ldi	r25, 0x00	; 0
    5dcc:	0e 94 dd 2f 	call	0x5fba	; 0x5fba <isspace>
    5dd0:	89 2b       	or	r24, r25
    5dd2:	21 f0       	breq	.+8      	; 0x5ddc <vfscanf+0x44>
    5dd4:	c6 01       	movw	r24, r12
    5dd6:	0e 94 63 2d 	call	0x5ac6	; 0x5ac6 <skip_spaces>
    5dda:	eb cf       	rjmp	.-42     	; 0x5db2 <vfscanf+0x1a>
    5ddc:	15 32       	cpi	r17, 0x25	; 37
    5dde:	41 f4       	brne	.+16     	; 0x5df0 <vfscanf+0x58>
    5de0:	fe 01       	movw	r30, r28
    5de2:	e3 fc       	sbrc	r14, 3
    5de4:	15 91       	lpm	r17, Z+
    5de6:	e3 fe       	sbrs	r14, 3
    5de8:	11 91       	ld	r17, Z+
    5dea:	ef 01       	movw	r28, r30
    5dec:	15 32       	cpi	r17, 0x25	; 37
    5dee:	81 f4       	brne	.+32     	; 0x5e10 <vfscanf+0x78>
    5df0:	c6 01       	movw	r24, r12
    5df2:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5df6:	97 fd       	sbrc	r25, 7
    5df8:	d4 c0       	rjmp	.+424    	; 0x5fa2 <vfscanf+0x20a>
    5dfa:	41 2f       	mov	r20, r17
    5dfc:	50 e0       	ldi	r21, 0x00	; 0
    5dfe:	9c 01       	movw	r18, r24
    5e00:	33 27       	eor	r19, r19
    5e02:	24 17       	cp	r18, r20
    5e04:	35 07       	cpc	r19, r21
    5e06:	a9 f2       	breq	.-86     	; 0x5db2 <vfscanf+0x1a>
    5e08:	b6 01       	movw	r22, r12
    5e0a:	0e 94 2f 30 	call	0x605e	; 0x605e <ungetc>
    5e0e:	cb c0       	rjmp	.+406    	; 0x5fa6 <vfscanf+0x20e>
    5e10:	1a 32       	cpi	r17, 0x2A	; 42
    5e12:	39 f4       	brne	.+14     	; 0x5e22 <vfscanf+0x8a>
    5e14:	e3 fc       	sbrc	r14, 3
    5e16:	15 91       	lpm	r17, Z+
    5e18:	e3 fe       	sbrs	r14, 3
    5e1a:	11 91       	ld	r17, Z+
    5e1c:	ef 01       	movw	r28, r30
    5e1e:	01 e0       	ldi	r16, 0x01	; 1
    5e20:	01 c0       	rjmp	.+2      	; 0x5e24 <vfscanf+0x8c>
    5e22:	00 e0       	ldi	r16, 0x00	; 0
    5e24:	f1 2c       	mov	r15, r1
    5e26:	20 ed       	ldi	r18, 0xD0	; 208
    5e28:	21 0f       	add	r18, r17
    5e2a:	2a 30       	cpi	r18, 0x0A	; 10
    5e2c:	80 f4       	brcc	.+32     	; 0x5e4e <vfscanf+0xb6>
    5e2e:	02 60       	ori	r16, 0x02	; 2
    5e30:	6f 2d       	mov	r22, r15
    5e32:	70 e0       	ldi	r23, 0x00	; 0
    5e34:	80 e0       	ldi	r24, 0x00	; 0
    5e36:	90 e0       	ldi	r25, 0x00	; 0
    5e38:	40 e2       	ldi	r20, 0x20	; 32
    5e3a:	0e 94 3c 2d 	call	0x5a78	; 0x5a78 <mulacc>
    5e3e:	f6 2e       	mov	r15, r22
    5e40:	fe 01       	movw	r30, r28
    5e42:	e3 fc       	sbrc	r14, 3
    5e44:	15 91       	lpm	r17, Z+
    5e46:	e3 fe       	sbrs	r14, 3
    5e48:	11 91       	ld	r17, Z+
    5e4a:	ef 01       	movw	r28, r30
    5e4c:	ec cf       	rjmp	.-40     	; 0x5e26 <vfscanf+0x8e>
    5e4e:	01 ff       	sbrs	r16, 1
    5e50:	03 c0       	rjmp	.+6      	; 0x5e58 <vfscanf+0xc0>
    5e52:	f1 10       	cpse	r15, r1
    5e54:	03 c0       	rjmp	.+6      	; 0x5e5c <vfscanf+0xc4>
    5e56:	a7 c0       	rjmp	.+334    	; 0x5fa6 <vfscanf+0x20e>
    5e58:	ff 24       	eor	r15, r15
    5e5a:	fa 94       	dec	r15
    5e5c:	18 36       	cpi	r17, 0x68	; 104
    5e5e:	19 f0       	breq	.+6      	; 0x5e66 <vfscanf+0xce>
    5e60:	1c 36       	cpi	r17, 0x6C	; 108
    5e62:	51 f0       	breq	.+20     	; 0x5e78 <vfscanf+0xe0>
    5e64:	10 c0       	rjmp	.+32     	; 0x5e86 <vfscanf+0xee>
    5e66:	fe 01       	movw	r30, r28
    5e68:	e3 fc       	sbrc	r14, 3
    5e6a:	15 91       	lpm	r17, Z+
    5e6c:	e3 fe       	sbrs	r14, 3
    5e6e:	11 91       	ld	r17, Z+
    5e70:	ef 01       	movw	r28, r30
    5e72:	18 36       	cpi	r17, 0x68	; 104
    5e74:	41 f4       	brne	.+16     	; 0x5e86 <vfscanf+0xee>
    5e76:	08 60       	ori	r16, 0x08	; 8
    5e78:	04 60       	ori	r16, 0x04	; 4
    5e7a:	fe 01       	movw	r30, r28
    5e7c:	e3 fc       	sbrc	r14, 3
    5e7e:	15 91       	lpm	r17, Z+
    5e80:	e3 fe       	sbrs	r14, 3
    5e82:	11 91       	ld	r17, Z+
    5e84:	ef 01       	movw	r28, r30
    5e86:	11 23       	and	r17, r17
    5e88:	09 f4       	brne	.+2      	; 0x5e8c <vfscanf+0xf4>
    5e8a:	8d c0       	rjmp	.+282    	; 0x5fa6 <vfscanf+0x20e>
    5e8c:	61 2f       	mov	r22, r17
    5e8e:	70 e0       	ldi	r23, 0x00	; 0
    5e90:	80 e9       	ldi	r24, 0x90	; 144
    5e92:	91 e0       	ldi	r25, 0x01	; 1
    5e94:	0e 94 e6 2f 	call	0x5fcc	; 0x5fcc <strchr_P>
    5e98:	89 2b       	or	r24, r25
    5e9a:	09 f4       	brne	.+2      	; 0x5e9e <vfscanf+0x106>
    5e9c:	84 c0       	rjmp	.+264    	; 0x5fa6 <vfscanf+0x20e>
    5e9e:	00 fd       	sbrc	r16, 0
    5ea0:	07 c0       	rjmp	.+14     	; 0x5eb0 <vfscanf+0x118>
    5ea2:	f5 01       	movw	r30, r10
    5ea4:	80 80       	ld	r8, Z
    5ea6:	91 80       	ldd	r9, Z+1	; 0x01
    5ea8:	c5 01       	movw	r24, r10
    5eaa:	02 96       	adiw	r24, 0x02	; 2
    5eac:	5c 01       	movw	r10, r24
    5eae:	02 c0       	rjmp	.+4      	; 0x5eb4 <vfscanf+0x11c>
    5eb0:	81 2c       	mov	r8, r1
    5eb2:	91 2c       	mov	r9, r1
    5eb4:	1e 36       	cpi	r17, 0x6E	; 110
    5eb6:	51 f4       	brne	.+20     	; 0x5ecc <vfscanf+0x134>
    5eb8:	f6 01       	movw	r30, r12
    5eba:	46 81       	ldd	r20, Z+6	; 0x06
    5ebc:	57 81       	ldd	r21, Z+7	; 0x07
    5ebe:	60 e0       	ldi	r22, 0x00	; 0
    5ec0:	70 e0       	ldi	r23, 0x00	; 0
    5ec2:	20 2f       	mov	r18, r16
    5ec4:	c4 01       	movw	r24, r8
    5ec6:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <putval>
    5eca:	73 cf       	rjmp	.-282    	; 0x5db2 <vfscanf+0x1a>
    5ecc:	13 36       	cpi	r17, 0x63	; 99
    5ece:	a9 f4       	brne	.+42     	; 0x5efa <vfscanf+0x162>
    5ed0:	01 fd       	sbrc	r16, 1
    5ed2:	02 c0       	rjmp	.+4      	; 0x5ed8 <vfscanf+0x140>
    5ed4:	ff 24       	eor	r15, r15
    5ed6:	f3 94       	inc	r15
    5ed8:	c6 01       	movw	r24, r12
    5eda:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5ede:	97 fd       	sbrc	r25, 7
    5ee0:	60 c0       	rjmp	.+192    	; 0x5fa2 <vfscanf+0x20a>
    5ee2:	81 14       	cp	r8, r1
    5ee4:	91 04       	cpc	r9, r1
    5ee6:	29 f0       	breq	.+10     	; 0x5ef2 <vfscanf+0x15a>
    5ee8:	f4 01       	movw	r30, r8
    5eea:	80 83       	st	Z, r24
    5eec:	c4 01       	movw	r24, r8
    5eee:	01 96       	adiw	r24, 0x01	; 1
    5ef0:	4c 01       	movw	r8, r24
    5ef2:	fa 94       	dec	r15
    5ef4:	f1 10       	cpse	r15, r1
    5ef6:	f0 cf       	rjmp	.-32     	; 0x5ed8 <vfscanf+0x140>
    5ef8:	50 c0       	rjmp	.+160    	; 0x5f9a <vfscanf+0x202>
    5efa:	1b 35       	cpi	r17, 0x5B	; 91
    5efc:	59 f4       	brne	.+22     	; 0x5f14 <vfscanf+0x17c>
    5efe:	9e 01       	movw	r18, r28
    5f00:	a4 01       	movw	r20, r8
    5f02:	6f 2d       	mov	r22, r15
    5f04:	c6 01       	movw	r24, r12
    5f06:	0e 94 0e 2e 	call	0x5c1c	; 0x5c1c <conv_brk>
    5f0a:	ec 01       	movw	r28, r24
    5f0c:	89 2b       	or	r24, r25
    5f0e:	09 f0       	breq	.+2      	; 0x5f12 <vfscanf+0x17a>
    5f10:	44 c0       	rjmp	.+136    	; 0x5f9a <vfscanf+0x202>
    5f12:	3e c0       	rjmp	.+124    	; 0x5f90 <vfscanf+0x1f8>
    5f14:	c6 01       	movw	r24, r12
    5f16:	0e 94 63 2d 	call	0x5ac6	; 0x5ac6 <skip_spaces>
    5f1a:	97 fd       	sbrc	r25, 7
    5f1c:	42 c0       	rjmp	.+132    	; 0x5fa2 <vfscanf+0x20a>
    5f1e:	1f 36       	cpi	r17, 0x6F	; 111
    5f20:	61 f1       	breq	.+88     	; 0x5f7a <vfscanf+0x1e2>
    5f22:	28 f4       	brcc	.+10     	; 0x5f2e <vfscanf+0x196>
    5f24:	14 36       	cpi	r17, 0x64	; 100
    5f26:	39 f1       	breq	.+78     	; 0x5f76 <vfscanf+0x1de>
    5f28:	19 36       	cpi	r17, 0x69	; 105
    5f2a:	51 f1       	breq	.+84     	; 0x5f80 <vfscanf+0x1e8>
    5f2c:	28 c0       	rjmp	.+80     	; 0x5f7e <vfscanf+0x1e6>
    5f2e:	13 37       	cpi	r17, 0x73	; 115
    5f30:	71 f0       	breq	.+28     	; 0x5f4e <vfscanf+0x1b6>
    5f32:	15 37       	cpi	r17, 0x75	; 117
    5f34:	01 f1       	breq	.+64     	; 0x5f76 <vfscanf+0x1de>
    5f36:	23 c0       	rjmp	.+70     	; 0x5f7e <vfscanf+0x1e6>
    5f38:	81 14       	cp	r8, r1
    5f3a:	91 04       	cpc	r9, r1
    5f3c:	29 f0       	breq	.+10     	; 0x5f48 <vfscanf+0x1b0>
    5f3e:	f4 01       	movw	r30, r8
    5f40:	60 82       	st	Z, r6
    5f42:	c4 01       	movw	r24, r8
    5f44:	01 96       	adiw	r24, 0x01	; 1
    5f46:	4c 01       	movw	r8, r24
    5f48:	fa 94       	dec	r15
    5f4a:	ff 20       	and	r15, r15
    5f4c:	71 f0       	breq	.+28     	; 0x5f6a <vfscanf+0x1d2>
    5f4e:	c6 01       	movw	r24, r12
    5f50:	0e 94 f1 2f 	call	0x5fe2	; 0x5fe2 <fgetc>
    5f54:	3c 01       	movw	r6, r24
    5f56:	97 fd       	sbrc	r25, 7
    5f58:	08 c0       	rjmp	.+16     	; 0x5f6a <vfscanf+0x1d2>
    5f5a:	0e 94 dd 2f 	call	0x5fba	; 0x5fba <isspace>
    5f5e:	89 2b       	or	r24, r25
    5f60:	59 f3       	breq	.-42     	; 0x5f38 <vfscanf+0x1a0>
    5f62:	b6 01       	movw	r22, r12
    5f64:	c3 01       	movw	r24, r6
    5f66:	0e 94 2f 30 	call	0x605e	; 0x605e <ungetc>
    5f6a:	81 14       	cp	r8, r1
    5f6c:	91 04       	cpc	r9, r1
    5f6e:	a9 f0       	breq	.+42     	; 0x5f9a <vfscanf+0x202>
    5f70:	f4 01       	movw	r30, r8
    5f72:	10 82       	st	Z, r1
    5f74:	12 c0       	rjmp	.+36     	; 0x5f9a <vfscanf+0x202>
    5f76:	00 62       	ori	r16, 0x20	; 32
    5f78:	03 c0       	rjmp	.+6      	; 0x5f80 <vfscanf+0x1e8>
    5f7a:	00 61       	ori	r16, 0x10	; 16
    5f7c:	01 c0       	rjmp	.+2      	; 0x5f80 <vfscanf+0x1e8>
    5f7e:	00 64       	ori	r16, 0x40	; 64
    5f80:	20 2f       	mov	r18, r16
    5f82:	a4 01       	movw	r20, r8
    5f84:	6f 2d       	mov	r22, r15
    5f86:	c6 01       	movw	r24, r12
    5f88:	0e 94 7c 2d 	call	0x5af8	; 0x5af8 <conv_int>
    5f8c:	81 11       	cpse	r24, r1
    5f8e:	05 c0       	rjmp	.+10     	; 0x5f9a <vfscanf+0x202>
    5f90:	f6 01       	movw	r30, r12
    5f92:	83 81       	ldd	r24, Z+3	; 0x03
    5f94:	80 73       	andi	r24, 0x30	; 48
    5f96:	29 f4       	brne	.+10     	; 0x5fa2 <vfscanf+0x20a>
    5f98:	06 c0       	rjmp	.+12     	; 0x5fa6 <vfscanf+0x20e>
    5f9a:	00 fd       	sbrc	r16, 0
    5f9c:	0a cf       	rjmp	.-492    	; 0x5db2 <vfscanf+0x1a>
    5f9e:	53 94       	inc	r5
    5fa0:	08 cf       	rjmp	.-496    	; 0x5db2 <vfscanf+0x1a>
    5fa2:	55 20       	and	r5, r5
    5fa4:	19 f0       	breq	.+6      	; 0x5fac <vfscanf+0x214>
    5fa6:	85 2d       	mov	r24, r5
    5fa8:	90 e0       	ldi	r25, 0x00	; 0
    5faa:	02 c0       	rjmp	.+4      	; 0x5fb0 <vfscanf+0x218>
    5fac:	8f ef       	ldi	r24, 0xFF	; 255
    5fae:	9f ef       	ldi	r25, 0xFF	; 255
    5fb0:	cd b7       	in	r28, 0x3d	; 61
    5fb2:	de b7       	in	r29, 0x3e	; 62
    5fb4:	ef e0       	ldi	r30, 0x0F	; 15
    5fb6:	0c 94 2b 2b 	jmp	0x5656	; 0x5656 <__epilogue_restores__+0x6>

00005fba <isspace>:
    5fba:	91 11       	cpse	r25, r1
    5fbc:	0c 94 48 30 	jmp	0x6090	; 0x6090 <__ctype_isfalse>
    5fc0:	80 32       	cpi	r24, 0x20	; 32
    5fc2:	19 f0       	breq	.+6      	; 0x5fca <isspace+0x10>
    5fc4:	89 50       	subi	r24, 0x09	; 9
    5fc6:	85 50       	subi	r24, 0x05	; 5
    5fc8:	c8 f7       	brcc	.-14     	; 0x5fbc <isspace+0x2>
    5fca:	08 95       	ret

00005fcc <strchr_P>:
    5fcc:	fc 01       	movw	r30, r24
    5fce:	05 90       	lpm	r0, Z+
    5fd0:	06 16       	cp	r0, r22
    5fd2:	21 f0       	breq	.+8      	; 0x5fdc <strchr_P+0x10>
    5fd4:	00 20       	and	r0, r0
    5fd6:	d9 f7       	brne	.-10     	; 0x5fce <strchr_P+0x2>
    5fd8:	c0 01       	movw	r24, r0
    5fda:	08 95       	ret
    5fdc:	31 97       	sbiw	r30, 0x01	; 1
    5fde:	cf 01       	movw	r24, r30
    5fe0:	08 95       	ret

00005fe2 <fgetc>:
    5fe2:	cf 93       	push	r28
    5fe4:	df 93       	push	r29
    5fe6:	ec 01       	movw	r28, r24
    5fe8:	2b 81       	ldd	r18, Y+3	; 0x03
    5fea:	20 ff       	sbrs	r18, 0
    5fec:	33 c0       	rjmp	.+102    	; 0x6054 <fgetc+0x72>
    5fee:	26 ff       	sbrs	r18, 6
    5ff0:	0a c0       	rjmp	.+20     	; 0x6006 <fgetc+0x24>
    5ff2:	2f 7b       	andi	r18, 0xBF	; 191
    5ff4:	2b 83       	std	Y+3, r18	; 0x03
    5ff6:	8e 81       	ldd	r24, Y+6	; 0x06
    5ff8:	9f 81       	ldd	r25, Y+7	; 0x07
    5ffa:	01 96       	adiw	r24, 0x01	; 1
    5ffc:	9f 83       	std	Y+7, r25	; 0x07
    5ffe:	8e 83       	std	Y+6, r24	; 0x06
    6000:	8a 81       	ldd	r24, Y+2	; 0x02
    6002:	90 e0       	ldi	r25, 0x00	; 0
    6004:	29 c0       	rjmp	.+82     	; 0x6058 <fgetc+0x76>
    6006:	22 ff       	sbrs	r18, 2
    6008:	0f c0       	rjmp	.+30     	; 0x6028 <fgetc+0x46>
    600a:	e8 81       	ld	r30, Y
    600c:	f9 81       	ldd	r31, Y+1	; 0x01
    600e:	80 81       	ld	r24, Z
    6010:	08 2e       	mov	r0, r24
    6012:	00 0c       	add	r0, r0
    6014:	99 0b       	sbc	r25, r25
    6016:	00 97       	sbiw	r24, 0x00	; 0
    6018:	19 f4       	brne	.+6      	; 0x6020 <fgetc+0x3e>
    601a:	20 62       	ori	r18, 0x20	; 32
    601c:	2b 83       	std	Y+3, r18	; 0x03
    601e:	1a c0       	rjmp	.+52     	; 0x6054 <fgetc+0x72>
    6020:	31 96       	adiw	r30, 0x01	; 1
    6022:	f9 83       	std	Y+1, r31	; 0x01
    6024:	e8 83       	st	Y, r30
    6026:	0e c0       	rjmp	.+28     	; 0x6044 <fgetc+0x62>
    6028:	ea 85       	ldd	r30, Y+10	; 0x0a
    602a:	fb 85       	ldd	r31, Y+11	; 0x0b
    602c:	09 95       	icall
    602e:	97 ff       	sbrs	r25, 7
    6030:	09 c0       	rjmp	.+18     	; 0x6044 <fgetc+0x62>
    6032:	2b 81       	ldd	r18, Y+3	; 0x03
    6034:	01 96       	adiw	r24, 0x01	; 1
    6036:	11 f0       	breq	.+4      	; 0x603c <fgetc+0x5a>
    6038:	80 e2       	ldi	r24, 0x20	; 32
    603a:	01 c0       	rjmp	.+2      	; 0x603e <fgetc+0x5c>
    603c:	80 e1       	ldi	r24, 0x10	; 16
    603e:	82 2b       	or	r24, r18
    6040:	8b 83       	std	Y+3, r24	; 0x03
    6042:	08 c0       	rjmp	.+16     	; 0x6054 <fgetc+0x72>
    6044:	2e 81       	ldd	r18, Y+6	; 0x06
    6046:	3f 81       	ldd	r19, Y+7	; 0x07
    6048:	2f 5f       	subi	r18, 0xFF	; 255
    604a:	3f 4f       	sbci	r19, 0xFF	; 255
    604c:	3f 83       	std	Y+7, r19	; 0x07
    604e:	2e 83       	std	Y+6, r18	; 0x06
    6050:	99 27       	eor	r25, r25
    6052:	02 c0       	rjmp	.+4      	; 0x6058 <fgetc+0x76>
    6054:	8f ef       	ldi	r24, 0xFF	; 255
    6056:	9f ef       	ldi	r25, 0xFF	; 255
    6058:	df 91       	pop	r29
    605a:	cf 91       	pop	r28
    605c:	08 95       	ret

0000605e <ungetc>:
    605e:	fb 01       	movw	r30, r22
    6060:	23 81       	ldd	r18, Z+3	; 0x03
    6062:	20 ff       	sbrs	r18, 0
    6064:	12 c0       	rjmp	.+36     	; 0x608a <ungetc+0x2c>
    6066:	26 fd       	sbrc	r18, 6
    6068:	10 c0       	rjmp	.+32     	; 0x608a <ungetc+0x2c>
    606a:	8f 3f       	cpi	r24, 0xFF	; 255
    606c:	3f ef       	ldi	r19, 0xFF	; 255
    606e:	93 07       	cpc	r25, r19
    6070:	61 f0       	breq	.+24     	; 0x608a <ungetc+0x2c>
    6072:	82 83       	std	Z+2, r24	; 0x02
    6074:	2f 7d       	andi	r18, 0xDF	; 223
    6076:	20 64       	ori	r18, 0x40	; 64
    6078:	23 83       	std	Z+3, r18	; 0x03
    607a:	26 81       	ldd	r18, Z+6	; 0x06
    607c:	37 81       	ldd	r19, Z+7	; 0x07
    607e:	21 50       	subi	r18, 0x01	; 1
    6080:	31 09       	sbc	r19, r1
    6082:	37 83       	std	Z+7, r19	; 0x07
    6084:	26 83       	std	Z+6, r18	; 0x06
    6086:	99 27       	eor	r25, r25
    6088:	08 95       	ret
    608a:	8f ef       	ldi	r24, 0xFF	; 255
    608c:	9f ef       	ldi	r25, 0xFF	; 255
    608e:	08 95       	ret

00006090 <__ctype_isfalse>:
    6090:	99 27       	eor	r25, r25
    6092:	88 27       	eor	r24, r24

00006094 <__ctype_istrue>:
    6094:	08 95       	ret

00006096 <_exit>:
    6096:	f8 94       	cli

00006098 <__stop_program>:
    6098:	ff cf       	rjmp	.-2      	; 0x6098 <__stop_program>
