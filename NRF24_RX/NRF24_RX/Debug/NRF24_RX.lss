
NRF24_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000025a2  00002636  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000051a  0080012e  0080012e  00002664  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002664  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00002700  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c73  00000000  00000000  000028e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eb4  00000000  00000000  0000555b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001598  00000000  00000000  0000640f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005f8  00000000  00000000  000079a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000960  00000000  00000000  00007fa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d8e  00000000  00000000  00008900  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  0000a68e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 e1 07 	jmp	0xfc2	; 0xfc2 <__vector_1>
       8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      28:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      2c:	0c 94 39 04 	jmp	0x872	; 0x872 <__vector_11>
      30:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      34:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      4c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      50:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      54:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      58:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      5c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      60:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      64:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2474>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf ef       	ldi	r28, 0xFF	; 255
     17c:	d8 e0       	ldi	r29, 0x08	; 8
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	11 e0       	ldi	r17, 0x01	; 1
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	e2 ea       	ldi	r30, 0xA2	; 162
     18a:	f5 e2       	ldi	r31, 0x25	; 37
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	ae 32       	cpi	r26, 0x2E	; 46
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	26 e0       	ldi	r18, 0x06	; 6
     19a:	ae e2       	ldi	r26, 0x2E	; 46
     19c:	b1 e0       	ldi	r27, 0x01	; 1
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	a8 34       	cpi	r26, 0x48	; 72
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <main>
     1ac:	0c 94 cf 12 	jmp	0x259e	; 0x259e <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <strob>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1b4:	85 e0       	ldi	r24, 0x05	; 5
     1b6:	8a 95       	dec	r24
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <strob+0x2>
     1ba:	00 00       	nop
}
/*----------Тактовый импульс--------------------*/
void strob(void)
{
	_delay_us(1);
	PORTD |= (1<<E);
     1bc:	8b b1       	in	r24, 0x0b	; 11
     1be:	80 62       	ori	r24, 0x20	; 32
     1c0:	8b b9       	out	0x0b, r24	; 11
     1c2:	85 e0       	ldi	r24, 0x05	; 5
     1c4:	8a 95       	dec	r24
     1c6:	f1 f7       	brne	.-4      	; 0x1c4 <strob+0x10>
     1c8:	00 00       	nop
	_delay_us(1);
	PORTD &= ~(1<<E);
     1ca:	8b b1       	in	r24, 0x0b	; 11
     1cc:	8f 7d       	andi	r24, 0xDF	; 223
     1ce:	8b b9       	out	0x0b, r24	; 11
     1d0:	85 e0       	ldi	r24, 0x05	; 5
     1d2:	8a 95       	dec	r24
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <strob+0x1e>
     1d6:	00 00       	nop
     1d8:	08 95       	ret

000001da <LCD_12864_send_data>:
	for(n=0;str1[n]!='\0';n++)
	LCD_12864_send_data(str1[n]);
}
/*----------Отправка данных--------------------*/
void LCD_12864_send_data(uint8_t data)
{
     1da:	1f 93       	push	r17
     1dc:	cf 93       	push	r28
     1de:	df 93       	push	r29
     1e0:	18 2f       	mov	r17, r24
	PORTD |= (1<<RS);
     1e2:	8b b1       	in	r24, 0x0b	; 11
     1e4:	80 68       	ori	r24, 0x80	; 128
     1e6:	8b b9       	out	0x0b, r24	; 11
    //передача 5 единиц
	PORTD |= (1<<RW);
     1e8:	8b b1       	in	r24, 0x0b	; 11
     1ea:	80 64       	ori	r24, 0x40	; 64
     1ec:	8b b9       	out	0x0b, r24	; 11
	strob();
     1ee:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     1f2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     1f6:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     1fa:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     1fe:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	PORTD &= ~(1<<RW);//r/w=0
     202:	8b b1       	in	r24, 0x0b	; 11
     204:	8f 7b       	andi	r24, 0xBF	; 191
     206:	8b b9       	out	0x0b, r24	; 11
	strob();
     208:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	PORTD |= (1<<RW);//rs=1
     20c:	8b b1       	in	r24, 0x0b	; 11
     20e:	80 64       	ori	r24, 0x40	; 64
     210:	8b b9       	out	0x0b, r24	; 11
	strob();
     212:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	PORTD &= ~(1<<RW);
     216:	8b b1       	in	r24, 0x0b	; 11
     218:	8f 7b       	andi	r24, 0xBF	; 191
     21a:	8b b9       	out	0x0b, r24	; 11
	strob();
     21c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	for (int k = 0; k < 12; k++)
     220:	c0 e0       	ldi	r28, 0x00	; 0
     222:	d0 e0       	ldi	r29, 0x00	; 0
     224:	1c c0       	rjmp	.+56     	; 0x25e <LCD_12864_send_data+0x84>
	{
		if ((k == 4)||(k == 5)||(k == 6)||(k == 7))
     226:	ce 01       	movw	r24, r28
     228:	04 97       	sbiw	r24, 0x04	; 4
     22a:	04 97       	sbiw	r24, 0x04	; 4
     22c:	30 f4       	brcc	.+12     	; 0x23a <LCD_12864_send_data+0x60>
		{
			PORTD &= ~(1<<RW);
     22e:	8b b1       	in	r24, 0x0b	; 11
     230:	8f 7b       	andi	r24, 0xBF	; 191
     232:	8b b9       	out	0x0b, r24	; 11
			strob();
     234:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
     238:	11 c0       	rjmp	.+34     	; 0x25c <LCD_12864_send_data+0x82>
		}
		else
		{
			switch(data & 0x80)
     23a:	81 2f       	mov	r24, r17
     23c:	80 78       	andi	r24, 0x80	; 128
     23e:	41 f0       	breq	.+16     	; 0x250 <LCD_12864_send_data+0x76>
     240:	80 38       	cpi	r24, 0x80	; 128
     242:	59 f4       	brne	.+22     	; 0x25a <LCD_12864_send_data+0x80>
			{
				case 0x80: PORTD |= (1<<RW);
     244:	8b b1       	in	r24, 0x0b	; 11
     246:	80 64       	ori	r24, 0x40	; 64
     248:	8b b9       	out	0x0b, r24	; 11
						strob();
     24a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
						break;
     24e:	05 c0       	rjmp	.+10     	; 0x25a <LCD_12864_send_data+0x80>
				case 0: PORTD &= ~(1<<RW);
     250:	8b b1       	in	r24, 0x0b	; 11
     252:	8f 7b       	andi	r24, 0xBF	; 191
     254:	8b b9       	out	0x0b, r24	; 11
						strob();	
     256:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
						break;
			}
			data = data << 1;
     25a:	11 0f       	add	r17, r17
	strob();
	PORTD |= (1<<RW);//rs=1
	strob();
	PORTD &= ~(1<<RW);
	strob();
	for (int k = 0; k < 12; k++)
     25c:	21 96       	adiw	r28, 0x01	; 1
     25e:	cc 30       	cpi	r28, 0x0C	; 12
     260:	d1 05       	cpc	r29, r1
     262:	0c f3       	brlt	.-62     	; 0x226 <LCD_12864_send_data+0x4c>
			}
			data = data << 1;
		}
	}
	//передача 4 нулей
	PORTD &= ~(1<<RW);
     264:	8b b1       	in	r24, 0x0b	; 11
     266:	8f 7b       	andi	r24, 0xBF	; 191
     268:	8b b9       	out	0x0b, r24	; 11
	strob();
     26a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     26e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     272:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     276:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	
	PORTD &= ~(1<<RS);
     27a:	8b b1       	in	r24, 0x0b	; 11
     27c:	8f 77       	andi	r24, 0x7F	; 127
     27e:	8b b9       	out	0x0b, r24	; 11
}
     280:	df 91       	pop	r29
     282:	cf 91       	pop	r28
     284:	1f 91       	pop	r17
     286:	08 95       	ret

00000288 <str_LCD_12864>:
	command = command | x;
	LCD_12864_send_command(command);
}
/*----------Вывод символьного текста строкой--------------------*/
void str_LCD_12864 (char *str1)
{
     288:	0f 93       	push	r16
     28a:	1f 93       	push	r17
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	8c 01       	movw	r16, r24
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     292:	c0 e0       	ldi	r28, 0x00	; 0
     294:	d0 e0       	ldi	r29, 0x00	; 0
     296:	03 c0       	rjmp	.+6      	; 0x29e <str_LCD_12864+0x16>
	LCD_12864_send_data(str1[n]);
     298:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_12864_send_data>
}
/*----------Вывод символьного текста строкой--------------------*/
void str_LCD_12864 (char *str1)
{
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     29c:	21 96       	adiw	r28, 0x01	; 1
     29e:	f8 01       	movw	r30, r16
     2a0:	ec 0f       	add	r30, r28
     2a2:	fd 1f       	adc	r31, r29
     2a4:	80 81       	ld	r24, Z
     2a6:	81 11       	cpse	r24, r1
     2a8:	f7 cf       	rjmp	.-18     	; 0x298 <str_LCD_12864+0x10>
	LCD_12864_send_data(str1[n]);
}
     2aa:	df 91       	pop	r29
     2ac:	cf 91       	pop	r28
     2ae:	1f 91       	pop	r17
     2b0:	0f 91       	pop	r16
     2b2:	08 95       	ret

000002b4 <LCD_12864_send_command>:
	
	PORTD &= ~(1<<RS);
}
/*----------Отправка команды--------------------*/
void LCD_12864_send_command(uint8_t command)
{
     2b4:	1f 93       	push	r17
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
     2ba:	18 2f       	mov	r17, r24
	PORTD |= (1<<RS);
     2bc:	8b b1       	in	r24, 0x0b	; 11
     2be:	80 68       	ori	r24, 0x80	; 128
     2c0:	8b b9       	out	0x0b, r24	; 11
    //передача 5 единиц
	PORTD |= (1<<RW);
     2c2:	8b b1       	in	r24, 0x0b	; 11
     2c4:	80 64       	ori	r24, 0x40	; 64
     2c6:	8b b9       	out	0x0b, r24	; 11
	strob();
     2c8:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     2cc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     2d0:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     2d4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     2d8:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	PORTD &= ~(1<<RW);//r/w=0
     2dc:	8b b1       	in	r24, 0x0b	; 11
     2de:	8f 7b       	andi	r24, 0xBF	; 191
     2e0:	8b b9       	out	0x0b, r24	; 11
	strob();
     2e2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	PORTD &= ~(1<<RW);//rs=0
     2e6:	8b b1       	in	r24, 0x0b	; 11
     2e8:	8f 7b       	andi	r24, 0xBF	; 191
     2ea:	8b b9       	out	0x0b, r24	; 11
	strob();
     2ec:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	PORTD &= ~(1<<RW);
     2f0:	8b b1       	in	r24, 0x0b	; 11
     2f2:	8f 7b       	andi	r24, 0xBF	; 191
     2f4:	8b b9       	out	0x0b, r24	; 11
	strob();
     2f6:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	for (int k = 0; k < 12; k++)
     2fa:	c0 e0       	ldi	r28, 0x00	; 0
     2fc:	d0 e0       	ldi	r29, 0x00	; 0
     2fe:	1c c0       	rjmp	.+56     	; 0x338 <LCD_12864_send_command+0x84>
	{
		if ((k == 4)||(k == 5)||(k == 6)||(k == 7))
     300:	ce 01       	movw	r24, r28
     302:	04 97       	sbiw	r24, 0x04	; 4
     304:	04 97       	sbiw	r24, 0x04	; 4
     306:	30 f4       	brcc	.+12     	; 0x314 <LCD_12864_send_command+0x60>
		{
			PORTD &= ~(1<<RW);
     308:	8b b1       	in	r24, 0x0b	; 11
     30a:	8f 7b       	andi	r24, 0xBF	; 191
     30c:	8b b9       	out	0x0b, r24	; 11
			strob();
     30e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
     312:	11 c0       	rjmp	.+34     	; 0x336 <LCD_12864_send_command+0x82>
		}
		else
		{
			switch(command & 0x80)
     314:	81 2f       	mov	r24, r17
     316:	80 78       	andi	r24, 0x80	; 128
     318:	41 f0       	breq	.+16     	; 0x32a <LCD_12864_send_command+0x76>
     31a:	80 38       	cpi	r24, 0x80	; 128
     31c:	59 f4       	brne	.+22     	; 0x334 <LCD_12864_send_command+0x80>
			{
				case 0x80: PORTD |= (1<<RW);
     31e:	8b b1       	in	r24, 0x0b	; 11
     320:	80 64       	ori	r24, 0x40	; 64
     322:	8b b9       	out	0x0b, r24	; 11
				strob();
     324:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
				break;
     328:	05 c0       	rjmp	.+10     	; 0x334 <LCD_12864_send_command+0x80>
				case 0: PORTD &= ~(1<<RW);
     32a:	8b b1       	in	r24, 0x0b	; 11
     32c:	8f 7b       	andi	r24, 0xBF	; 191
     32e:	8b b9       	out	0x0b, r24	; 11
				strob();
     330:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
				break;
			}
			command = command << 1;
     334:	11 0f       	add	r17, r17
	strob();
	PORTD &= ~(1<<RW);//rs=0
	strob();
	PORTD &= ~(1<<RW);
	strob();
	for (int k = 0; k < 12; k++)
     336:	21 96       	adiw	r28, 0x01	; 1
     338:	cc 30       	cpi	r28, 0x0C	; 12
     33a:	d1 05       	cpc	r29, r1
     33c:	0c f3       	brlt	.-62     	; 0x300 <LCD_12864_send_command+0x4c>
			}
			command = command << 1;
		}
	}
	//передача 4 нулей
	PORTD &= ~(1<<RW);
     33e:	8b b1       	in	r24, 0x0b	; 11
     340:	8f 7b       	andi	r24, 0xBF	; 191
     342:	8b b9       	out	0x0b, r24	; 11
	strob();
     344:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     348:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     34c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	strob();
     350:	0e 94 da 00 	call	0x1b4	; 0x1b4 <strob>
	
	PORTD &= ~(1<<RS);
     354:	8b b1       	in	r24, 0x0b	; 11
     356:	8f 77       	andi	r24, 0x7F	; 127
     358:	8b b9       	out	0x0b, r24	; 11
}
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	1f 91       	pop	r17
     360:	08 95       	ret

00000362 <LCD_12864_GrapnicMode>:
	_delay_ms(10);
}
/*----------Включение графического режима--------------------*/
void LCD_12864_GrapnicMode(uint8_t enable)   // 1-enable, 0-disable
{
	if (enable) 
     362:	88 23       	and	r24, r24
     364:	99 f0       	breq	.+38     	; 0x38c <LCD_12864_GrapnicMode+0x2a>
	{
		LCD_12864_send_command(0x34); //Переходим в extended instruction
     366:	84 e3       	ldi	r24, 0x34	; 52
     368:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     36c:	8f e9       	ldi	r24, 0x9F	; 159
     36e:	9f e0       	ldi	r25, 0x0F	; 15
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <LCD_12864_GrapnicMode+0xe>
     374:	00 c0       	rjmp	.+0      	; 0x376 <LCD_12864_GrapnicMode+0x14>
     376:	00 00       	nop
		_delay_ms(1);	
	    LCD_12864_send_command(0x36); //вкл графич. режим
     378:	86 e3       	ldi	r24, 0x36	; 54
     37a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
     37e:	8f e9       	ldi	r24, 0x9F	; 159
     380:	9f e0       	ldi	r25, 0x0F	; 15
     382:	01 97       	sbiw	r24, 0x01	; 1
     384:	f1 f7       	brne	.-4      	; 0x382 <LCD_12864_GrapnicMode+0x20>
     386:	00 c0       	rjmp	.+0      	; 0x388 <LCD_12864_GrapnicMode+0x26>
     388:	00 00       	nop
     38a:	08 95       	ret
		_delay_ms(1);	
	}
	else
	{
		LCD_12864_send_command(0x30); //Переходим в basic instruction
     38c:	80 e3       	ldi	r24, 0x30	; 48
     38e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
     392:	8f e9       	ldi	r24, 0x9F	; 159
     394:	9f e0       	ldi	r25, 0x0F	; 15
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	f1 f7       	brne	.-4      	; 0x396 <LCD_12864_GrapnicMode+0x34>
     39a:	00 c0       	rjmp	.+0      	; 0x39c <LCD_12864_GrapnicMode+0x3a>
     39c:	00 00       	nop
     39e:	08 95       	ret

000003a0 <LCD_12864_Draw_bitmap>:
		_delay_ms(1);
	}
}
/*----------Вывод изображения на экран дисплея--------------------*/
void LCD_12864_Draw_bitmap(const unsigned char *bitmap) {
     3a0:	8f 92       	push	r8
     3a2:	9f 92       	push	r9
     3a4:	af 92       	push	r10
     3a6:	bf 92       	push	r11
     3a8:	df 92       	push	r13
     3aa:	ef 92       	push	r14
     3ac:	ff 92       	push	r15
     3ae:	0f 93       	push	r16
     3b0:	1f 93       	push	r17
     3b2:	cf 93       	push	r28
     3b4:	df 93       	push	r29
     3b6:	7c 01       	movw	r14, r24
	/// \param *bitmap - изображение 128*64. т.е. Буфер из 1024 элементов.
	uint8_t x, y;
	uint16_t i = 0;
	uint8_t Temp, Db;

	for (y = 0; y < 64; y++) {
     3b8:	d1 2c       	mov	r13, r1
     3ba:	31 c1       	rjmp	.+610    	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
		for (x = 0; x < 8; x++) {
			if (y < 32) {
     3bc:	8f e1       	ldi	r24, 0x1F	; 31
     3be:	8d 15       	cp	r24, r13
     3c0:	48 f0       	brcs	.+18     	; 0x3d4 <LCD_12864_Draw_bitmap+0x34>
				LCD_12864_send_command(0x80 | y);				//y(0-31)
     3c2:	8d 2d       	mov	r24, r13
     3c4:	80 68       	ori	r24, 0x80	; 128
     3c6:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
				LCD_12864_send_command(0x80 | x);				//x(0-8)
     3ca:	80 2f       	mov	r24, r16
     3cc:	80 68       	ori	r24, 0x80	; 128
     3ce:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
     3d2:	09 c0       	rjmp	.+18     	; 0x3e6 <LCD_12864_Draw_bitmap+0x46>
				} else {
				LCD_12864_send_command(0x80 | (y - 32));		//y(0-31)
     3d4:	80 ee       	ldi	r24, 0xE0	; 224
     3d6:	8d 0d       	add	r24, r13
     3d8:	80 68       	ori	r24, 0x80	; 128
     3da:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
				LCD_12864_send_command(0x88 | x);				//x(0-8)
     3de:	80 2f       	mov	r24, r16
     3e0:	88 68       	ori	r24, 0x88	; 136
     3e2:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
			}

			i = ((y / 8) * 128) + (x * 16);
     3e6:	cd 2d       	mov	r28, r13
     3e8:	c6 95       	lsr	r28
     3ea:	c6 95       	lsr	r28
     3ec:	c6 95       	lsr	r28
     3ee:	d0 e0       	ldi	r29, 0x00	; 0
     3f0:	cc 0f       	add	r28, r28
     3f2:	dd 1f       	adc	r29, r29
     3f4:	cc 0f       	add	r28, r28
     3f6:	dd 1f       	adc	r29, r29
     3f8:	cc 0f       	add	r28, r28
     3fa:	dd 1f       	adc	r29, r29
     3fc:	c0 0f       	add	r28, r16
     3fe:	d1 1d       	adc	r29, r1
     400:	c2 95       	swap	r28
     402:	d2 95       	swap	r29
     404:	d0 7f       	andi	r29, 0xF0	; 240
     406:	dc 27       	eor	r29, r28
     408:	c0 7f       	andi	r28, 0xF0	; 240
     40a:	dc 27       	eor	r29, r28
			Db = y % 8;

			Temp = (((bitmap[i] >> Db) & 0x01) << 7) | (((bitmap[i + 1] >> Db) & 0x01) << 6) | (((bitmap[i + 2] >> Db) & 0x01) << 5)
     40c:	ce 0d       	add	r28, r14
     40e:	df 1d       	adc	r29, r15
     410:	88 80       	ld	r8, Y
     412:	91 2c       	mov	r9, r1
     414:	1d 2d       	mov	r17, r13
     416:	17 70       	andi	r17, 0x07	; 7
     418:	01 2e       	mov	r0, r17
     41a:	02 c0       	rjmp	.+4      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     41c:	95 94       	asr	r9
     41e:	87 94       	ror	r8
     420:	0a 94       	dec	r0
     422:	e2 f7       	brpl	.-8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     424:	96 94       	lsr	r9
     426:	98 2c       	mov	r9, r8
     428:	88 24       	eor	r8, r8
     42a:	97 94       	ror	r9
     42c:	87 94       	ror	r8
     42e:	a9 80       	ldd	r10, Y+1	; 0x01
     430:	b1 2c       	mov	r11, r1
     432:	01 2e       	mov	r0, r17
     434:	02 c0       	rjmp	.+4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     436:	b5 94       	asr	r11
     438:	a7 94       	ror	r10
     43a:	0a 94       	dec	r0
     43c:	e2 f7       	brpl	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	a8 22       	and	r10, r24
     442:	bb 24       	eor	r11, r11
     444:	00 24       	eor	r0, r0
     446:	b6 94       	lsr	r11
     448:	a7 94       	ror	r10
     44a:	07 94       	ror	r0
     44c:	b6 94       	lsr	r11
     44e:	a7 94       	ror	r10
     450:	07 94       	ror	r0
     452:	ba 2c       	mov	r11, r10
     454:	a0 2c       	mov	r10, r0
     456:	aa 81       	ldd	r26, Y+2	; 0x02
     458:	b0 e0       	ldi	r27, 0x00	; 0
     45a:	01 2e       	mov	r0, r17
     45c:	02 c0       	rjmp	.+4      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     45e:	b5 95       	asr	r27
     460:	a7 95       	ror	r26
     462:	0a 94       	dec	r0
     464:	e2 f7       	brpl	.-8      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     466:	a1 70       	andi	r26, 0x01	; 1
     468:	bb 27       	eor	r27, r27
     46a:	aa 0f       	add	r26, r26
     46c:	bb 1f       	adc	r27, r27
     46e:	a2 95       	swap	r26
     470:	b2 95       	swap	r27
     472:	b0 7f       	andi	r27, 0xF0	; 240
     474:	ba 27       	eor	r27, r26
     476:	a0 7f       	andi	r26, 0xF0	; 240
     478:	ba 27       	eor	r27, r26
			| (((bitmap[i + 3] >> Db) & 0x01) << 4) | (((bitmap[i + 4] >> Db) & 0x01) << 3) | (((bitmap[i + 5] >> Db) & 0x01) << 2)
     47a:	eb 81       	ldd	r30, Y+3	; 0x03
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	01 2e       	mov	r0, r17
     480:	02 c0       	rjmp	.+4      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
     482:	f5 95       	asr	r31
     484:	e7 95       	ror	r30
     486:	0a 94       	dec	r0
     488:	e2 f7       	brpl	.-8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     48a:	e1 70       	andi	r30, 0x01	; 1
     48c:	ff 27       	eor	r31, r31
     48e:	e2 95       	swap	r30
     490:	f2 95       	swap	r31
     492:	f0 7f       	andi	r31, 0xF0	; 240
     494:	fe 27       	eor	r31, r30
     496:	e0 7f       	andi	r30, 0xF0	; 240
     498:	fe 27       	eor	r31, r30
     49a:	6c 81       	ldd	r22, Y+4	; 0x04
     49c:	70 e0       	ldi	r23, 0x00	; 0
     49e:	01 2e       	mov	r0, r17
     4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
     4a2:	75 95       	asr	r23
     4a4:	67 95       	ror	r22
     4a6:	0a 94       	dec	r0
     4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     4aa:	61 70       	andi	r22, 0x01	; 1
     4ac:	77 27       	eor	r23, r23
     4ae:	66 0f       	add	r22, r22
     4b0:	77 1f       	adc	r23, r23
     4b2:	66 0f       	add	r22, r22
     4b4:	77 1f       	adc	r23, r23
     4b6:	66 0f       	add	r22, r22
     4b8:	77 1f       	adc	r23, r23
     4ba:	4d 81       	ldd	r20, Y+5	; 0x05
     4bc:	50 e0       	ldi	r21, 0x00	; 0
     4be:	01 2e       	mov	r0, r17
     4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
     4c2:	55 95       	asr	r21
     4c4:	47 95       	ror	r20
     4c6:	0a 94       	dec	r0
     4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
     4ca:	41 70       	andi	r20, 0x01	; 1
     4cc:	55 27       	eor	r21, r21
     4ce:	44 0f       	add	r20, r20
     4d0:	55 1f       	adc	r21, r21
     4d2:	44 0f       	add	r20, r20
     4d4:	55 1f       	adc	r21, r21
			| (((bitmap[i + 6] >> Db) & 0x01) << 1) | (((bitmap[i + 7] >> Db) & 0x01) << 0);
     4d6:	2e 81       	ldd	r18, Y+6	; 0x06
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	01 2e       	mov	r0, r17
     4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
     4de:	35 95       	asr	r19
     4e0:	27 95       	ror	r18
     4e2:	0a 94       	dec	r0
     4e4:	e2 f7       	brpl	.-8      	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
     4e6:	21 70       	andi	r18, 0x01	; 1
     4e8:	33 27       	eor	r19, r19
     4ea:	22 0f       	add	r18, r18
     4ec:	33 1f       	adc	r19, r19
     4ee:	8f 81       	ldd	r24, Y+7	; 0x07
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	01 2e       	mov	r0, r17
     4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
     4f6:	95 95       	asr	r25
     4f8:	87 95       	ror	r24
     4fa:	0a 94       	dec	r0
     4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
			}

			i = ((y / 8) * 128) + (x * 16);
			Db = y % 8;

			Temp = (((bitmap[i] >> Db) & 0x01) << 7) | (((bitmap[i + 1] >> Db) & 0x01) << 6) | (((bitmap[i + 2] >> Db) & 0x01) << 5)
     4fe:	a8 28       	or	r10, r8
     500:	aa 29       	or	r26, r10
     502:	ea 2b       	or	r30, r26
     504:	6e 2b       	or	r22, r30
     506:	46 2b       	or	r20, r22
     508:	24 2b       	or	r18, r20
     50a:	81 70       	andi	r24, 0x01	; 1
			| (((bitmap[i + 3] >> Db) & 0x01) << 4) | (((bitmap[i + 4] >> Db) & 0x01) << 3) | (((bitmap[i + 5] >> Db) & 0x01) << 2)
			| (((bitmap[i + 6] >> Db) & 0x01) << 1) | (((bitmap[i + 7] >> Db) & 0x01) << 0);
			LCD_12864_send_data(Temp);
     50c:	82 2b       	or	r24, r18
     50e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_12864_send_data>

			Temp = (((bitmap[i + 8] >> Db) & 0x01) << 7) | (((bitmap[i + 9] >> Db) & 0x01) << 6) | (((bitmap[i + 10] >> Db) & 0x01) << 5)
     512:	88 84       	ldd	r8, Y+8	; 0x08
     514:	91 2c       	mov	r9, r1
     516:	01 2e       	mov	r0, r17
     518:	02 c0       	rjmp	.+4      	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
     51a:	95 94       	asr	r9
     51c:	87 94       	ror	r8
     51e:	0a 94       	dec	r0
     520:	e2 f7       	brpl	.-8      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
     522:	96 94       	lsr	r9
     524:	98 2c       	mov	r9, r8
     526:	88 24       	eor	r8, r8
     528:	97 94       	ror	r9
     52a:	87 94       	ror	r8
     52c:	a9 84       	ldd	r10, Y+9	; 0x09
     52e:	b1 2c       	mov	r11, r1
     530:	01 2e       	mov	r0, r17
     532:	02 c0       	rjmp	.+4      	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
     534:	b5 94       	asr	r11
     536:	a7 94       	ror	r10
     538:	0a 94       	dec	r0
     53a:	e2 f7       	brpl	.-8      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	a8 22       	and	r10, r24
     540:	bb 24       	eor	r11, r11
     542:	00 24       	eor	r0, r0
     544:	b6 94       	lsr	r11
     546:	a7 94       	ror	r10
     548:	07 94       	ror	r0
     54a:	b6 94       	lsr	r11
     54c:	a7 94       	ror	r10
     54e:	07 94       	ror	r0
     550:	ba 2c       	mov	r11, r10
     552:	a0 2c       	mov	r10, r0
     554:	aa 85       	ldd	r26, Y+10	; 0x0a
     556:	b0 e0       	ldi	r27, 0x00	; 0
     558:	01 2e       	mov	r0, r17
     55a:	02 c0       	rjmp	.+4      	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
     55c:	b5 95       	asr	r27
     55e:	a7 95       	ror	r26
     560:	0a 94       	dec	r0
     562:	e2 f7       	brpl	.-8      	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
     564:	a1 70       	andi	r26, 0x01	; 1
     566:	bb 27       	eor	r27, r27
     568:	aa 0f       	add	r26, r26
     56a:	bb 1f       	adc	r27, r27
     56c:	a2 95       	swap	r26
     56e:	b2 95       	swap	r27
     570:	b0 7f       	andi	r27, 0xF0	; 240
     572:	ba 27       	eor	r27, r26
     574:	a0 7f       	andi	r26, 0xF0	; 240
     576:	ba 27       	eor	r27, r26
			| (((bitmap[i + 11] >> Db) & 0x01) << 4) | (((bitmap[i + 12] >> Db) & 0x01) << 3) | (((bitmap[i + 13] >> Db) & 0x01) << 2)
     578:	eb 85       	ldd	r30, Y+11	; 0x0b
     57a:	f0 e0       	ldi	r31, 0x00	; 0
     57c:	01 2e       	mov	r0, r17
     57e:	02 c0       	rjmp	.+4      	; 0x584 <__EEPROM_REGION_LENGTH__+0x184>
     580:	f5 95       	asr	r31
     582:	e7 95       	ror	r30
     584:	0a 94       	dec	r0
     586:	e2 f7       	brpl	.-8      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
     588:	e1 70       	andi	r30, 0x01	; 1
     58a:	ff 27       	eor	r31, r31
     58c:	e2 95       	swap	r30
     58e:	f2 95       	swap	r31
     590:	f0 7f       	andi	r31, 0xF0	; 240
     592:	fe 27       	eor	r31, r30
     594:	e0 7f       	andi	r30, 0xF0	; 240
     596:	fe 27       	eor	r31, r30
     598:	6c 85       	ldd	r22, Y+12	; 0x0c
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	01 2e       	mov	r0, r17
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
     5a0:	75 95       	asr	r23
     5a2:	67 95       	ror	r22
     5a4:	0a 94       	dec	r0
     5a6:	e2 f7       	brpl	.-8      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
     5a8:	61 70       	andi	r22, 0x01	; 1
     5aa:	77 27       	eor	r23, r23
     5ac:	66 0f       	add	r22, r22
     5ae:	77 1f       	adc	r23, r23
     5b0:	66 0f       	add	r22, r22
     5b2:	77 1f       	adc	r23, r23
     5b4:	66 0f       	add	r22, r22
     5b6:	77 1f       	adc	r23, r23
     5b8:	4d 85       	ldd	r20, Y+13	; 0x0d
     5ba:	50 e0       	ldi	r21, 0x00	; 0
     5bc:	01 2e       	mov	r0, r17
     5be:	02 c0       	rjmp	.+4      	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
     5c0:	55 95       	asr	r21
     5c2:	47 95       	ror	r20
     5c4:	0a 94       	dec	r0
     5c6:	e2 f7       	brpl	.-8      	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
     5c8:	41 70       	andi	r20, 0x01	; 1
     5ca:	55 27       	eor	r21, r21
     5cc:	44 0f       	add	r20, r20
     5ce:	55 1f       	adc	r21, r21
     5d0:	44 0f       	add	r20, r20
     5d2:	55 1f       	adc	r21, r21
			| (((bitmap[i + 14] >> Db) & 0x01) << 1) | (((bitmap[i + 15] >> Db) & 0x01) << 0);
     5d4:	2e 85       	ldd	r18, Y+14	; 0x0e
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	01 2e       	mov	r0, r17
     5da:	02 c0       	rjmp	.+4      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     5dc:	35 95       	asr	r19
     5de:	27 95       	ror	r18
     5e0:	0a 94       	dec	r0
     5e2:	e2 f7       	brpl	.-8      	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
     5e4:	21 70       	andi	r18, 0x01	; 1
     5e6:	33 27       	eor	r19, r19
     5e8:	22 0f       	add	r18, r18
     5ea:	33 1f       	adc	r19, r19
     5ec:	cf 85       	ldd	r28, Y+15	; 0x0f
     5ee:	d0 e0       	ldi	r29, 0x00	; 0
     5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
     5f2:	d5 95       	asr	r29
     5f4:	c7 95       	ror	r28
     5f6:	1a 95       	dec	r17
     5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
			Temp = (((bitmap[i] >> Db) & 0x01) << 7) | (((bitmap[i + 1] >> Db) & 0x01) << 6) | (((bitmap[i + 2] >> Db) & 0x01) << 5)
			| (((bitmap[i + 3] >> Db) & 0x01) << 4) | (((bitmap[i + 4] >> Db) & 0x01) << 3) | (((bitmap[i + 5] >> Db) & 0x01) << 2)
			| (((bitmap[i + 6] >> Db) & 0x01) << 1) | (((bitmap[i + 7] >> Db) & 0x01) << 0);
			LCD_12864_send_data(Temp);

			Temp = (((bitmap[i + 8] >> Db) & 0x01) << 7) | (((bitmap[i + 9] >> Db) & 0x01) << 6) | (((bitmap[i + 10] >> Db) & 0x01) << 5)
     5fa:	88 2d       	mov	r24, r8
     5fc:	8a 29       	or	r24, r10
     5fe:	8a 2b       	or	r24, r26
     600:	8e 2b       	or	r24, r30
     602:	86 2b       	or	r24, r22
     604:	84 2b       	or	r24, r20
     606:	82 2b       	or	r24, r18
     608:	c1 70       	andi	r28, 0x01	; 1
			| (((bitmap[i + 11] >> Db) & 0x01) << 4) | (((bitmap[i + 12] >> Db) & 0x01) << 3) | (((bitmap[i + 13] >> Db) & 0x01) << 2)
			| (((bitmap[i + 14] >> Db) & 0x01) << 1) | (((bitmap[i + 15] >> Db) & 0x01) << 0);

			LCD_12864_send_data(Temp);
     60a:	8c 2b       	or	r24, r28
     60c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_12864_send_data>
	uint8_t x, y;
	uint16_t i = 0;
	uint8_t Temp, Db;

	for (y = 0; y < 64; y++) {
		for (x = 0; x < 8; x++) {
     610:	0f 5f       	subi	r16, 0xFF	; 255
     612:	01 c0       	rjmp	.+2      	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
     614:	00 e0       	ldi	r16, 0x00	; 0
     616:	08 30       	cpi	r16, 0x08	; 8
     618:	08 f4       	brcc	.+2      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
     61a:	d0 ce       	rjmp	.-608    	; 0x3bc <LCD_12864_Draw_bitmap+0x1c>
	/// \param *bitmap - изображение 128*64. т.е. Буфер из 1024 элементов.
	uint8_t x, y;
	uint16_t i = 0;
	uint8_t Temp, Db;

	for (y = 0; y < 64; y++) {
     61c:	d3 94       	inc	r13
     61e:	8f e3       	ldi	r24, 0x3F	; 63
     620:	8d 15       	cp	r24, r13
     622:	c0 f7       	brcc	.-16     	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
			| (((bitmap[i + 14] >> Db) & 0x01) << 1) | (((bitmap[i + 15] >> Db) & 0x01) << 0);

			LCD_12864_send_data(Temp);
		}
	}
}
     624:	df 91       	pop	r29
     626:	cf 91       	pop	r28
     628:	1f 91       	pop	r17
     62a:	0f 91       	pop	r16
     62c:	ff 90       	pop	r15
     62e:	ef 90       	pop	r14
     630:	df 90       	pop	r13
     632:	bf 90       	pop	r11
     634:	af 90       	pop	r10
     636:	9f 90       	pop	r9
     638:	8f 90       	pop	r8
     63a:	08 95       	ret

0000063c <clear_LCD_12864>:
	}
}
/*----------Очистка--------------------*/
void clear_LCD_12864(void)
{
	LCD_12864_send_command(0x1);//clear
     63c:	81 e0       	ldi	r24, 0x01	; 1
     63e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
     642:	8f e3       	ldi	r24, 0x3F	; 63
     644:	9c e9       	ldi	r25, 0x9C	; 156
     646:	01 97       	sbiw	r24, 0x01	; 1
     648:	f1 f7       	brne	.-4      	; 0x646 <clear_LCD_12864+0xa>
     64a:	00 c0       	rjmp	.+0      	; 0x64c <clear_LCD_12864+0x10>
     64c:	00 00       	nop
     64e:	08 95       	ret

00000650 <LCD_12864_ini>:
     650:	2f ef       	ldi	r18, 0xFF	; 255
     652:	83 ef       	ldi	r24, 0xF3	; 243
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	21 50       	subi	r18, 0x01	; 1
     658:	80 40       	sbci	r24, 0x00	; 0
     65a:	90 40       	sbci	r25, 0x00	; 0
     65c:	e1 f7       	brne	.-8      	; 0x656 <LCD_12864_ini+0x6>
     65e:	00 c0       	rjmp	.+0      	; 0x660 <LCD_12864_ini+0x10>
     660:	00 00       	nop
};
/*----------Инициализация--------------------*/
void LCD_12864_ini(void)
{
	_delay_ms(40);
	LCD_12864_send_command(0xC);//display on
     662:	8c e0       	ldi	r24, 0x0C	; 12
     664:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     668:	8f e8       	ldi	r24, 0x8F	; 143
     66a:	91 e0       	ldi	r25, 0x01	; 1
     66c:	01 97       	sbiw	r24, 0x01	; 1
     66e:	f1 f7       	brne	.-4      	; 0x66c <LCD_12864_ini+0x1c>
     670:	00 c0       	rjmp	.+0      	; 0x672 <LCD_12864_ini+0x22>
     672:	00 00       	nop
	_delay_us(100);
	clear_LCD_12864();
     674:	0e 94 1e 03 	call	0x63c	; 0x63c <clear_LCD_12864>
	LCD_12864_send_command(6);//курсор сдвигается вправо
     678:	86 e0       	ldi	r24, 0x06	; 6
     67a:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     67e:	8f e3       	ldi	r24, 0x3F	; 63
     680:	9c e9       	ldi	r25, 0x9C	; 156
     682:	01 97       	sbiw	r24, 0x01	; 1
     684:	f1 f7       	brne	.-4      	; 0x682 <LCD_12864_ini+0x32>
     686:	00 c0       	rjmp	.+0      	; 0x688 <LCD_12864_ini+0x38>
     688:	00 00       	nop
     68a:	08 95       	ret

0000068c <setpos_LCD_12864>:
}
/*----------Позиционирование символьного текста--------------------*/
void setpos_LCD_12864(unsigned char x, unsigned y)
{
	uint8_t command;
	switch (y)
     68c:	61 30       	cpi	r22, 0x01	; 1
     68e:	71 05       	cpc	r23, r1
     690:	41 f0       	breq	.+16     	; 0x6a2 <setpos_LCD_12864+0x16>
     692:	68 f0       	brcs	.+26     	; 0x6ae <setpos_LCD_12864+0x22>
     694:	62 30       	cpi	r22, 0x02	; 2
     696:	71 05       	cpc	r23, r1
     698:	31 f0       	breq	.+12     	; 0x6a6 <setpos_LCD_12864+0x1a>
     69a:	63 30       	cpi	r22, 0x03	; 3
     69c:	71 05       	cpc	r23, r1
     69e:	29 f0       	breq	.+10     	; 0x6aa <setpos_LCD_12864+0x1e>
     6a0:	07 c0       	rjmp	.+14     	; 0x6b0 <setpos_LCD_12864+0x24>
	{
		case 0: command = 0x80; break;
		case 1: command = 0x90; break;
     6a2:	90 e9       	ldi	r25, 0x90	; 144
     6a4:	05 c0       	rjmp	.+10     	; 0x6b0 <setpos_LCD_12864+0x24>
		case 2: command = 0x88; break;
     6a6:	98 e8       	ldi	r25, 0x88	; 136
     6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <setpos_LCD_12864+0x24>
		case 3: command = 0x98; break;
     6aa:	98 e9       	ldi	r25, 0x98	; 152
     6ac:	01 c0       	rjmp	.+2      	; 0x6b0 <setpos_LCD_12864+0x24>
void setpos_LCD_12864(unsigned char x, unsigned y)
{
	uint8_t command;
	switch (y)
	{
		case 0: command = 0x80; break;
     6ae:	90 e8       	ldi	r25, 0x80	; 128
		case 1: command = 0x90; break;
		case 2: command = 0x88; break;
		case 3: command = 0x98; break;
	}
	command = command | x;
	LCD_12864_send_command(command);
     6b0:	89 2b       	or	r24, r25
     6b2:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LCD_12864_send_command>
     6b6:	08 95       	ret

000006b8 <wind_speed>:
uint8_t flag_irq = 1;

float RADIUS = 0.09;

float wind_speed (char *counter)
{
     6b8:	cf 92       	push	r12
     6ba:	df 92       	push	r13
     6bc:	ef 92       	push	r14
     6be:	ff 92       	push	r15
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	00 d0       	rcall	.+0      	; 0x6c6 <wind_speed+0xe>
     6c6:	cd b7       	in	r28, 0x3d	; 61
     6c8:	de b7       	in	r29, 0x3e	; 62
	float speed = 0;
	int n;
	if (strlen(counter) != 0)
     6ca:	fc 01       	movw	r30, r24
     6cc:	20 81       	ld	r18, Z
     6ce:	22 23       	and	r18, r18
     6d0:	a1 f0       	breq	.+40     	; 0x6fa <wind_speed+0x42>
	{
		sscanf(counter, "%d", &n);
     6d2:	9e 01       	movw	r18, r28
     6d4:	2f 5f       	subi	r18, 0xFF	; 255
     6d6:	3f 4f       	sbci	r19, 0xFF	; 255
     6d8:	3f 93       	push	r19
     6da:	2f 93       	push	r18
     6dc:	27 e0       	ldi	r18, 0x07	; 7
     6de:	31 e0       	ldi	r19, 0x01	; 1
     6e0:	3f 93       	push	r19
     6e2:	2f 93       	push	r18
     6e4:	9f 93       	push	r25
     6e6:	8f 93       	push	r24
     6e8:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <sscanf>
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	0f 90       	pop	r0
     6f4:	0f 90       	pop	r0
     6f6:	0f 90       	pop	r0
     6f8:	02 c0       	rjmp	.+4      	; 0x6fe <wind_speed+0x46>
	}
	else
	{
        n = 0;
     6fa:	1a 82       	std	Y+2, r1	; 0x02
     6fc:	19 82       	std	Y+1, r1	; 0x01
	}
	speed = 2*3.14*RADIUS*n/4; //период 2 сек+2 магнита
     6fe:	23 ec       	ldi	r18, 0xC3	; 195
     700:	35 ef       	ldi	r19, 0xF5	; 245
     702:	48 ec       	ldi	r20, 0xC8	; 200
     704:	50 e4       	ldi	r21, 0x40	; 64
     706:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <RADIUS>
     70a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <RADIUS+0x1>
     70e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <RADIUS+0x2>
     712:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <RADIUS+0x3>
     716:	0e 94 be 09 	call	0x137c	; 0x137c <__mulsf3>
     71a:	6b 01       	movw	r12, r22
     71c:	7c 01       	movw	r14, r24
     71e:	69 81       	ldd	r22, Y+1	; 0x01
     720:	7a 81       	ldd	r23, Y+2	; 0x02
     722:	07 2e       	mov	r0, r23
     724:	00 0c       	add	r0, r0
     726:	88 0b       	sbc	r24, r24
     728:	99 0b       	sbc	r25, r25
     72a:	0e 94 32 09 	call	0x1264	; 0x1264 <__floatsisf>
     72e:	a7 01       	movw	r20, r14
     730:	96 01       	movw	r18, r12
     732:	0e 94 be 09 	call	0x137c	; 0x137c <__mulsf3>
     736:	20 e0       	ldi	r18, 0x00	; 0
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	40 e8       	ldi	r20, 0x80	; 128
     73c:	5e e3       	ldi	r21, 0x3E	; 62
     73e:	0e 94 be 09 	call	0x137c	; 0x137c <__mulsf3>
	
	return speed;
}
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	ff 90       	pop	r15
     74c:	ef 90       	pop	r14
     74e:	df 90       	pop	r13
     750:	cf 90       	pop	r12
     752:	08 95       	ret

00000754 <V_BAT>:
float V_BAT (char *adc_value)
{
     754:	cf 93       	push	r28
     756:	df 93       	push	r29
     758:	00 d0       	rcall	.+0      	; 0x75a <V_BAT+0x6>
     75a:	cd b7       	in	r28, 0x3d	; 61
     75c:	de b7       	in	r29, 0x3e	; 62
	float VBAT;
	int V;
	if (strlen(adc_value) != 0)
     75e:	fc 01       	movw	r30, r24
     760:	20 81       	ld	r18, Z
     762:	22 23       	and	r18, r18
     764:	a1 f0       	breq	.+40     	; 0x78e <V_BAT+0x3a>
	{
		sscanf(adc_value, "%d", &V);
     766:	9e 01       	movw	r18, r28
     768:	2f 5f       	subi	r18, 0xFF	; 255
     76a:	3f 4f       	sbci	r19, 0xFF	; 255
     76c:	3f 93       	push	r19
     76e:	2f 93       	push	r18
     770:	27 e0       	ldi	r18, 0x07	; 7
     772:	31 e0       	ldi	r19, 0x01	; 1
     774:	3f 93       	push	r19
     776:	2f 93       	push	r18
     778:	9f 93       	push	r25
     77a:	8f 93       	push	r24
     77c:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <sscanf>
     780:	0f 90       	pop	r0
     782:	0f 90       	pop	r0
     784:	0f 90       	pop	r0
     786:	0f 90       	pop	r0
     788:	0f 90       	pop	r0
     78a:	0f 90       	pop	r0
     78c:	02 c0       	rjmp	.+4      	; 0x792 <V_BAT+0x3e>
	}
	else
	{
		V = 0;
     78e:	1a 82       	std	Y+2, r1	; 0x02
     790:	19 82       	std	Y+1, r1	; 0x01
	}
	VBAT = V*2.45*3/1024;
     792:	69 81       	ldd	r22, Y+1	; 0x01
     794:	7a 81       	ldd	r23, Y+2	; 0x02
     796:	07 2e       	mov	r0, r23
     798:	00 0c       	add	r0, r0
     79a:	88 0b       	sbc	r24, r24
     79c:	99 0b       	sbc	r25, r25
     79e:	0e 94 32 09 	call	0x1264	; 0x1264 <__floatsisf>
     7a2:	2d ec       	ldi	r18, 0xCD	; 205
     7a4:	3c ec       	ldi	r19, 0xCC	; 204
     7a6:	4c e1       	ldi	r20, 0x1C	; 28
     7a8:	50 e4       	ldi	r21, 0x40	; 64
     7aa:	0e 94 be 09 	call	0x137c	; 0x137c <__mulsf3>
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	40 e4       	ldi	r20, 0x40	; 64
     7b4:	50 e4       	ldi	r21, 0x40	; 64
     7b6:	0e 94 be 09 	call	0x137c	; 0x137c <__mulsf3>
     7ba:	20 e0       	ldi	r18, 0x00	; 0
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	40 e8       	ldi	r20, 0x80	; 128
     7c0:	5a e3       	ldi	r21, 0x3A	; 58
     7c2:	0e 94 be 09 	call	0x137c	; 0x137c <__mulsf3>
	
	return VBAT;
}
     7c6:	0f 90       	pop	r0
     7c8:	0f 90       	pop	r0
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	08 95       	ret

000007d0 <RAIN_AMOUNT>:
float RAIN_AMOUNT(char *adc_value)
{
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	00 d0       	rcall	.+0      	; 0x7d6 <RAIN_AMOUNT+0x6>
     7d6:	cd b7       	in	r28, 0x3d	; 61
     7d8:	de b7       	in	r29, 0x3e	; 62
	float RAIN;
	int R;
	if (strlen(adc_value) != 0)
     7da:	fc 01       	movw	r30, r24
     7dc:	20 81       	ld	r18, Z
     7de:	22 23       	and	r18, r18
     7e0:	a1 f0       	breq	.+40     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
	{
		sscanf(adc_value, "%d", &R);
     7e2:	9e 01       	movw	r18, r28
     7e4:	2f 5f       	subi	r18, 0xFF	; 255
     7e6:	3f 4f       	sbci	r19, 0xFF	; 255
     7e8:	3f 93       	push	r19
     7ea:	2f 93       	push	r18
     7ec:	27 e0       	ldi	r18, 0x07	; 7
     7ee:	31 e0       	ldi	r19, 0x01	; 1
     7f0:	3f 93       	push	r19
     7f2:	2f 93       	push	r18
     7f4:	9f 93       	push	r25
     7f6:	8f 93       	push	r24
     7f8:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <sscanf>
     7fc:	0f 90       	pop	r0
     7fe:	0f 90       	pop	r0
     800:	0f 90       	pop	r0
     802:	0f 90       	pop	r0
     804:	0f 90       	pop	r0
     806:	0f 90       	pop	r0
     808:	02 c0       	rjmp	.+4      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
	}
	else
	{
		R = 0;
     80a:	1a 82       	std	Y+2, r1	; 0x02
     80c:	19 82       	std	Y+1, r1	; 0x01
	}
    RAIN = 3*R*2.45/5120;
     80e:	69 81       	ldd	r22, Y+1	; 0x01
     810:	7a 81       	ldd	r23, Y+2	; 0x02
     812:	cb 01       	movw	r24, r22
     814:	88 0f       	add	r24, r24
     816:	99 1f       	adc	r25, r25
     818:	68 0f       	add	r22, r24
     81a:	79 1f       	adc	r23, r25
     81c:	07 2e       	mov	r0, r23
     81e:	00 0c       	add	r0, r0
     820:	88 0b       	sbc	r24, r24
     822:	99 0b       	sbc	r25, r25
     824:	0e 94 32 09 	call	0x1264	; 0x1264 <__floatsisf>
     828:	2d ec       	ldi	r18, 0xCD	; 205
     82a:	3c ec       	ldi	r19, 0xCC	; 204
     82c:	4c e1       	ldi	r20, 0x1C	; 28
     82e:	50 e4       	ldi	r21, 0x40	; 64
     830:	0e 94 be 09 	call	0x137c	; 0x137c <__mulsf3>
     834:	20 e0       	ldi	r18, 0x00	; 0
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	40 ea       	ldi	r20, 0xA0	; 160
     83a:	55 e4       	ldi	r21, 0x45	; 69
     83c:	0e 94 be 08 	call	0x117c	; 0x117c <__divsf3>
	
	return RAIN;	
}
     840:	0f 90       	pop	r0
     842:	0f 90       	pop	r0
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	08 95       	ret

0000084a <timer_ini>:
void timer_ini(void)//период 4сек
{
	TCCR1B |= (1<<WGM12); // устанавливаем режим СТС (сброс по совпадению)
     84a:	e1 e8       	ldi	r30, 0x81	; 129
     84c:	f0 e0       	ldi	r31, 0x00	; 0
     84e:	80 81       	ld	r24, Z
     850:	88 60       	ori	r24, 0x08	; 8
     852:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); //устанавливаем бит разрешения прерывания 1ого счетчика по совпадению с OCR1A(H и L)
     854:	af e6       	ldi	r26, 0x6F	; 111
     856:	b0 e0       	ldi	r27, 0x00	; 0
     858:	8c 91       	ld	r24, X
     85a:	82 60       	ori	r24, 0x02	; 2
     85c:	8c 93       	st	X, r24
	OCR1AH = 0b11110100; //записываем в регистр число для сравнения
     85e:	84 ef       	ldi	r24, 0xF4	; 244
     860:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0b00100100;
     864:	84 e2       	ldi	r24, 0x24	; 36
     866:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1B |= (1<<CS12)|(1<<CS10);//установим делитель 256.
     86a:	80 81       	ld	r24, Z
     86c:	85 60       	ori	r24, 0x05	; 5
     86e:	80 83       	st	Z, r24
     870:	08 95       	ret

00000872 <__vector_11>:
}
//——————————————–
ISR (TIMER1_COMPA_vect)
{
     872:	1f 92       	push	r1
     874:	0f 92       	push	r0
     876:	0f b6       	in	r0, 0x3f	; 63
     878:	0f 92       	push	r0
     87a:	11 24       	eor	r1, r1
     87c:	2f 93       	push	r18
     87e:	3f 93       	push	r19
     880:	4f 93       	push	r20
     882:	5f 93       	push	r21
     884:	6f 93       	push	r22
     886:	7f 93       	push	r23
     888:	8f 93       	push	r24
     88a:	9f 93       	push	r25
     88c:	af 93       	push	r26
     88e:	bf 93       	push	r27
     890:	ef 93       	push	r30
     892:	ff 93       	push	r31
	if((strlen(temp_street)!=0)&&(strlen(hum_street)!=0)&&(strlen(WIND_speed)!=0)&&(strlen(Rain)!=0)&&(strlen(Vbat)!=0)&&(strlen(wind_direction)!=0))
     894:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <temp_street>
     898:	88 23       	and	r24, r24
     89a:	09 f4       	brne	.+2      	; 0x89e <__vector_11+0x2c>
     89c:	4c c0       	rjmp	.+152    	; 0x936 <__stack+0x37>
     89e:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <hum_street>
     8a2:	88 23       	and	r24, r24
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <__vector_11+0x36>
     8a6:	47 c0       	rjmp	.+142    	; 0x936 <__stack+0x37>
     8a8:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <WIND_speed>
     8ac:	88 23       	and	r24, r24
     8ae:	09 f4       	brne	.+2      	; 0x8b2 <__vector_11+0x40>
     8b0:	42 c0       	rjmp	.+132    	; 0x936 <__stack+0x37>
     8b2:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <Rain>
     8b6:	88 23       	and	r24, r24
     8b8:	f1 f1       	breq	.+124    	; 0x936 <__stack+0x37>
     8ba:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <Vbat>
     8be:	88 23       	and	r24, r24
     8c0:	d1 f1       	breq	.+116    	; 0x936 <__stack+0x37>
     8c2:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <wind_direction>
     8c6:	88 23       	and	r24, r24
     8c8:	b1 f1       	breq	.+108    	; 0x936 <__stack+0x37>
	{
		//отправка строки по UART в формате: ул.темп./скор.ветра/осадки/ул.влажность/заряд АКБ/направл.ветра
	    sprintf(DATA_TO_UART,"%s ",temp_street);
     8ca:	88 eb       	ldi	r24, 0xB8	; 184
     8cc:	91 e0       	ldi	r25, 0x01	; 1
     8ce:	9f 93       	push	r25
     8d0:	8f 93       	push	r24
     8d2:	8a e0       	ldi	r24, 0x0A	; 10
     8d4:	91 e0       	ldi	r25, 0x01	; 1
     8d6:	9f 93       	push	r25
     8d8:	8f 93       	push	r24
     8da:	86 e3       	ldi	r24, 0x36	; 54
     8dc:	91 e0       	ldi	r25, 0x01	; 1
     8de:	9f 93       	push	r25
     8e0:	8f 93       	push	r24
     8e2:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <sprintf>
		strcat(DATA_TO_UART,WIND_speed);
     8e6:	6a e9       	ldi	r22, 0x9A	; 154
     8e8:	71 e0       	ldi	r23, 0x01	; 1
     8ea:	86 e3       	ldi	r24, 0x36	; 54
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <strcat>
		strcat(DATA_TO_UART,Rain);
     8f2:	68 e6       	ldi	r22, 0x68	; 104
     8f4:	71 e0       	ldi	r23, 0x01	; 1
     8f6:	86 e3       	ldi	r24, 0x36	; 54
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <strcat>
		strcat(DATA_TO_UART,hum_street);
     8fe:	6e ea       	ldi	r22, 0xAE	; 174
     900:	71 e0       	ldi	r23, 0x01	; 1
     902:	86 e3       	ldi	r24, 0x36	; 54
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <strcat>
		strcat(DATA_TO_UART,Vbat);
     90a:	62 e7       	ldi	r22, 0x72	; 114
     90c:	71 e0       	ldi	r23, 0x01	; 1
     90e:	86 e3       	ldi	r24, 0x36	; 54
     910:	91 e0       	ldi	r25, 0x01	; 1
     912:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <strcat>
		strcat(DATA_TO_UART,wind_direction);
     916:	60 e9       	ldi	r22, 0x90	; 144
     918:	71 e0       	ldi	r23, 0x01	; 1
     91a:	86 e3       	ldi	r24, 0x36	; 54
     91c:	91 e0       	ldi	r25, 0x01	; 1
     91e:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <strcat>
		USART_Transmit(DATA_TO_UART);
     922:	86 e3       	ldi	r24, 0x36	; 54
     924:	91 e0       	ldi	r25, 0x01	; 1
     926:	0e 94 a3 08 	call	0x1146	; 0x1146 <USART_Transmit>
     92a:	0f 90       	pop	r0
     92c:	0f 90       	pop	r0
     92e:	0f 90       	pop	r0
     930:	0f 90       	pop	r0
     932:	0f 90       	pop	r0
     934:	0f 90       	pop	r0
	}

}
     936:	ff 91       	pop	r31
     938:	ef 91       	pop	r30
     93a:	bf 91       	pop	r27
     93c:	af 91       	pop	r26
     93e:	9f 91       	pop	r25
     940:	8f 91       	pop	r24
     942:	7f 91       	pop	r23
     944:	6f 91       	pop	r22
     946:	5f 91       	pop	r21
     948:	4f 91       	pop	r20
     94a:	3f 91       	pop	r19
     94c:	2f 91       	pop	r18
     94e:	0f 90       	pop	r0
     950:	0f be       	out	0x3f, r0	; 63
     952:	0f 90       	pop	r0
     954:	1f 90       	pop	r1
     956:	18 95       	reti

00000958 <SPI_init>:

void SPI_init(void) //инициализация SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //ножки SPI на выход
     958:	84 b1       	in	r24, 0x04	; 4
     95a:	8e 62       	ori	r24, 0x2E	; 46
     95c:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //низкий уровень
     95e:	85 b1       	in	r24, 0x05	; 5
     960:	83 7d       	andi	r24, 0xD3	; 211
     962:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<IRQ);
     964:	8a b1       	in	r24, 0x0a	; 10
     966:	8b 7f       	andi	r24, 0xFB	; 251
     968:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<IRQ);
     96a:	8b b1       	in	r24, 0x0b	; 11
     96c:	84 60       	ori	r24, 0x04	; 4
     96e:	8b b9       	out	0x0b, r24	; 11
	HIGH_CSN;
     970:	85 b1       	in	r24, 0x05	; 5
     972:	84 60       	ori	r24, 0x04	; 4
     974:	85 b9       	out	0x05, r24	; 5
	SPCR = ((1<<SPE)|(1<<MSTR));//включим шину, объявим ведущим
     976:	80 e5       	ldi	r24, 0x50	; 80
     978:	8c bd       	out	0x2c, r24	; 44
     97a:	08 95       	ret

0000097c <port_init>:
}
//-------------------------------------------------------------
void port_init(void)
{
	//инициализация портов для светодиода
	DDRD |= (1 << LED);//led
     97c:	8a b1       	in	r24, 0x0a	; 10
     97e:	80 61       	ori	r24, 0x10	; 16
     980:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~ (1 << LED);
     982:	8b b1       	in	r24, 0x0b	; 11
     984:	8f 7e       	andi	r24, 0xEF	; 239
     986:	8b b9       	out	0x0b, r24	; 11
	
	//инициализация портов для LCD12864
	DDRD |= (1<<RS);//ножка RS на выход для LCD12864
     988:	8a b1       	in	r24, 0x0a	; 10
     98a:	80 68       	ori	r24, 0x80	; 128
     98c:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RS);
     98e:	8b b1       	in	r24, 0x0b	; 11
     990:	8f 77       	andi	r24, 0x7F	; 127
     992:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<E);
     994:	8a b1       	in	r24, 0x0a	; 10
     996:	80 62       	ori	r24, 0x20	; 32
     998:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<E);
     99a:	8b b1       	in	r24, 0x0b	; 11
     99c:	8f 7d       	andi	r24, 0xDF	; 223
     99e:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<RW);
     9a0:	8a b1       	in	r24, 0x0a	; 10
     9a2:	80 64       	ori	r24, 0x40	; 64
     9a4:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RW);
     9a6:	8b b1       	in	r24, 0x0b	; 11
     9a8:	8f 7b       	andi	r24, 0xBF	; 191
     9aa:	8b b9       	out	0x0b, r24	; 11
	//DDRB |= (1<<PSB);//ножка PSB на выход для LCD12864
	//PORTB &= ~(1<<PSB);
	
	 //инициализация портов для SD карты
	 PORTB|=(1<<SS_SD);
     9ac:	85 b1       	in	r24, 0x05	; 5
     9ae:	81 60       	ori	r24, 0x01	; 1
     9b0:	85 b9       	out	0x05, r24	; 5
	 DDRB|=(1<<SS_SD);
     9b2:	84 b1       	in	r24, 0x04	; 4
     9b4:	81 60       	ori	r24, 0x01	; 1
     9b6:	84 b9       	out	0x04, r24	; 4
	 PORTC|=(1<<MISO_SD)|(1<<MOSI_SD);
     9b8:	88 b1       	in	r24, 0x08	; 8
     9ba:	86 60       	ori	r24, 0x06	; 6
     9bc:	88 b9       	out	0x08, r24	; 8
	 DDRC|=(1<<MOSI_SD)|(1<<SCK_SD);
     9be:	87 b1       	in	r24, 0x07	; 7
     9c0:	8c 60       	ori	r24, 0x0C	; 12
     9c2:	87 b9       	out	0x07, r24	; 7
     9c4:	08 95       	ret

000009c6 <spi_send_recv>:
} 
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // Передаёт и принимает 1 байт по SPI, возвращает полученное значение
{
	SPDR = data;
     9c6:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
     9c8:	0d b4       	in	r0, 0x2d	; 45
     9ca:	07 fe       	sbrs	r0, 7
     9cc:	fd cf       	rjmp	.-6      	; 0x9c8 <spi_send_recv+0x2>
	return SPDR;
     9ce:	8e b5       	in	r24, 0x2e	; 46
}
     9d0:	08 95       	ret

000009d2 <main>:
void main(void)
{
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	cd b7       	in	r28, 0x3d	; 61
     9d8:	de b7       	in	r29, 0x3e	; 62
     9da:	2a 97       	sbiw	r28, 0x0a	; 10
     9dc:	0f b6       	in	r0, 0x3f	; 63
     9de:	f8 94       	cli
     9e0:	de bf       	out	0x3e, r29	; 62
     9e2:	0f be       	out	0x3f, r0	; 63
     9e4:	cd bf       	out	0x3d, r28	; 61
	FATFS fs; //FatFs объект
	FRESULT res; //Результат выполнения
	WORD s1;
	char str[10];
	
	port_init();
     9e6:	0e 94 be 04 	call	0x97c	; 0x97c <port_init>
	PORTD |= (1<<LED);
     9ea:	8b b1       	in	r24, 0x0b	; 11
     9ec:	80 61       	ori	r24, 0x10	; 16
     9ee:	8b b9       	out	0x0b, r24	; 11
    SPI_init();
     9f0:	0e 94 ac 04 	call	0x958	; 0x958 <SPI_init>
	timer_ini();
     9f4:	0e 94 25 04 	call	0x84a	; 0x84a <timer_ini>
	I2C_Init();
     9f8:	0e 94 89 08 	call	0x1112	; 0x1112 <I2C_Init>
	//LCD_ini();
	
	LCD_12864_ini();
     9fc:	0e 94 28 03 	call	0x650	; 0x650 <LCD_12864_ini>
	LCD_12864_GrapnicMode(1);
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	0e 94 b1 01 	call	0x362	; 0x362 <LCD_12864_GrapnicMode>
	//LCD_12864_Draw_rectangle(0, 0, 127, 63);
    sprintf(tx_buffer, "Основное меню");
     a06:	8e e0       	ldi	r24, 0x0E	; 14
     a08:	ee e0       	ldi	r30, 0x0E	; 14
     a0a:	f1 e0       	ldi	r31, 0x01	; 1
     a0c:	a2 ec       	ldi	r26, 0xC2	; 194
     a0e:	b1 e0       	ldi	r27, 0x01	; 1
     a10:	01 90       	ld	r0, Z+
     a12:	0d 92       	st	X+, r0
     a14:	8a 95       	dec	r24
     a16:	e1 f7       	brne	.-8      	; 0xa10 <main+0x3e>

    //LCD_12864_Decode_UTF8(0, 1, 0, tx_buffer);

	LCD_12864_Draw_bitmap(Frame_buffer);
     a18:	82 e4       	ldi	r24, 0x42	; 66
     a1a:	92 e0       	ldi	r25, 0x02	; 2
     a1c:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	0e 94 b1 01 	call	0x362	; 0x362 <LCD_12864_GrapnicMode>
	res=pf_write(0,0,&s1);//Финализируем файл 123.txt
	res=pf_mount(0x00);//Демонтируем файловую систему карты
	sprintf(str,"%d",res);*/
	
	
	USART_Init(16);    //Инициализация модуля USART скорость 115200
     a26:	80 e1       	ldi	r24, 0x10	; 16
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0e 94 8d 08 	call	0x111a	; 0x111a <USART_Init>
     a2e:	2f ef       	ldi	r18, 0xFF	; 255
     a30:	83 ed       	ldi	r24, 0xD3	; 211
     a32:	90 e3       	ldi	r25, 0x30	; 48
     a34:	21 50       	subi	r18, 0x01	; 1
     a36:	80 40       	sbci	r24, 0x00	; 0
     a38:	90 40       	sbci	r25, 0x00	; 0
     a3a:	e1 f7       	brne	.-8      	; 0xa34 <main+0x62>
     a3c:	00 c0       	rjmp	.+0      	; 0xa3e <main+0x6c>
     a3e:	00 00       	nop
	_delay_ms(1000);
    NRF24_ini();
     a40:	0e 94 3d 08 	call	0x107a	; 0x107a <NRF24_ini>
     a44:	2f ef       	ldi	r18, 0xFF	; 255
     a46:	83 ed       	ldi	r24, 0xD3	; 211
     a48:	90 e3       	ldi	r25, 0x30	; 48
     a4a:	21 50       	subi	r18, 0x01	; 1
     a4c:	80 40       	sbci	r24, 0x00	; 0
     a4e:	90 40       	sbci	r25, 0x00	; 0
     a50:	e1 f7       	brne	.-8      	; 0xa4a <main+0x78>
     a52:	00 c0       	rjmp	.+0      	; 0xa54 <main+0x82>
     a54:	00 00       	nop
	//str_lcd ("hello");
	_delay_ms(1000);
	//clearlcd();
	//setpos(0,0);
	// настраиваем параметры прерывания
	EICRA = (1<<ISC01) | (0<<ISC00);
     a56:	82 e0       	ldi	r24, 0x02	; 2
     a58:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT0);
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8d bb       	out	0x1d, r24	; 29
	// и разрешаем его глобально
	sei();
     a60:	78 94       	sei
     a62:	2f ef       	ldi	r18, 0xFF	; 255
     a64:	83 ed       	ldi	r24, 0xD3	; 211
     a66:	90 e3       	ldi	r25, 0x30	; 48
     a68:	21 50       	subi	r18, 0x01	; 1
     a6a:	80 40       	sbci	r24, 0x00	; 0
     a6c:	90 40       	sbci	r25, 0x00	; 0
     a6e:	e1 f7       	brne	.-8      	; 0xa68 <main+0x96>
     a70:	00 c0       	rjmp	.+0      	; 0xa72 <main+0xa0>
     a72:	00 00       	nop
	_delay_ms(1000);
	PORTD &= ~(1<<LED);
     a74:	8b b1       	in	r24, 0x0b	; 11
     a76:	8f 7e       	andi	r24, 0xEF	; 239
     a78:	8b b9       	out	0x0b, r24	; 11
    while (1) 
    {
		//clearlcd();
		//setpos(0,0);
		setpos_LCD_12864(0,0);
     a7a:	60 e0       	ldi	r22, 0x00	; 0
     a7c:	70 e0       	ldi	r23, 0x00	; 0
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	0e 94 46 03 	call	0x68c	; 0x68c <setpos_LCD_12864>
		NRF24L01_Receive();
     a84:	0e 94 bf 05 	call	0xb7e	; 0xb7e <NRF24L01_Receive>
		//str_lcd(temp_street);
		str_LCD_12864 (temp_street);
     a88:	88 eb       	ldi	r24, 0xB8	; 184
     a8a:	91 e0       	ldi	r25, 0x01	; 1
     a8c:	0e 94 44 01 	call	0x288	; 0x288 <str_LCD_12864>
		//setpos(6,0);
		setpos_LCD_12864(3,0);
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	83 e0       	ldi	r24, 0x03	; 3
     a96:	0e 94 46 03 	call	0x68c	; 0x68c <setpos_LCD_12864>
	    sprintf(WIND_speed,"%.2f ", wind_speed (HALL_counter));
     a9a:	84 ea       	ldi	r24, 0xA4	; 164
     a9c:	91 e0       	ldi	r25, 0x01	; 1
     a9e:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <wind_speed>
     aa2:	9f 93       	push	r25
     aa4:	8f 93       	push	r24
     aa6:	7f 93       	push	r23
     aa8:	6f 93       	push	r22
     aaa:	0c e1       	ldi	r16, 0x1C	; 28
     aac:	11 e0       	ldi	r17, 0x01	; 1
     aae:	1f 93       	push	r17
     ab0:	0f 93       	push	r16
     ab2:	8a e9       	ldi	r24, 0x9A	; 154
     ab4:	91 e0       	ldi	r25, 0x01	; 1
     ab6:	9f 93       	push	r25
     ab8:	8f 93       	push	r24
     aba:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <sprintf>
		//str_lcd(WIND_speed);
		str_LCD_12864 (WIND_speed);
     abe:	8a e9       	ldi	r24, 0x9A	; 154
     ac0:	91 e0       	ldi	r25, 0x01	; 1
     ac2:	0e 94 44 01 	call	0x288	; 0x288 <str_LCD_12864>
		//setpos(12,0);
		setpos_LCD_12864(6,0);
     ac6:	60 e0       	ldi	r22, 0x00	; 0
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	86 e0       	ldi	r24, 0x06	; 6
     acc:	0e 94 46 03 	call	0x68c	; 0x68c <setpos_LCD_12864>
	    sprintf(Rain,"%.2f ",RAIN_AMOUNT(adc_value2));
     ad0:	8c e7       	ldi	r24, 0x7C	; 124
     ad2:	91 e0       	ldi	r25, 0x01	; 1
     ad4:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <RAIN_AMOUNT>
     ad8:	9f 93       	push	r25
     ada:	8f 93       	push	r24
     adc:	7f 93       	push	r23
     ade:	6f 93       	push	r22
     ae0:	1f 93       	push	r17
     ae2:	0f 93       	push	r16
     ae4:	88 e6       	ldi	r24, 0x68	; 104
     ae6:	91 e0       	ldi	r25, 0x01	; 1
     ae8:	9f 93       	push	r25
     aea:	8f 93       	push	r24
     aec:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <sprintf>
		//str_lcd(Rain);
		str_LCD_12864 (Rain);
     af0:	88 e6       	ldi	r24, 0x68	; 104
     af2:	91 e0       	ldi	r25, 0x01	; 1
     af4:	0e 94 44 01 	call	0x288	; 0x288 <str_LCD_12864>
		//setpos(0,1);
		setpos_LCD_12864(0,1);
     af8:	61 e0       	ldi	r22, 0x01	; 1
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	0e 94 46 03 	call	0x68c	; 0x68c <setpos_LCD_12864>
		//str_lcd(hum_street);
		str_LCD_12864 (hum_street);
     b02:	8e ea       	ldi	r24, 0xAE	; 174
     b04:	91 e0       	ldi	r25, 0x01	; 1
     b06:	0e 94 44 01 	call	0x288	; 0x288 <str_LCD_12864>
		//setpos(6,1);
		setpos_LCD_12864(3,1);
     b0a:	61 e0       	ldi	r22, 0x01	; 1
     b0c:	70 e0       	ldi	r23, 0x00	; 0
     b0e:	83 e0       	ldi	r24, 0x03	; 3
     b10:	0e 94 46 03 	call	0x68c	; 0x68c <setpos_LCD_12864>
		//str_lcd(wind_direction);
		str_LCD_12864 (wind_direction);
     b14:	80 e9       	ldi	r24, 0x90	; 144
     b16:	91 e0       	ldi	r25, 0x01	; 1
     b18:	0e 94 44 01 	call	0x288	; 0x288 <str_LCD_12864>
		//setpos(10,1);
		setpos_LCD_12864(6,1);
     b1c:	61 e0       	ldi	r22, 0x01	; 1
     b1e:	70 e0       	ldi	r23, 0x00	; 0
     b20:	86 e0       	ldi	r24, 0x06	; 6
     b22:	0e 94 46 03 	call	0x68c	; 0x68c <setpos_LCD_12864>
	    sprintf(Vbat,"%.2f ",V_BAT(adc_value1));
     b26:	86 e8       	ldi	r24, 0x86	; 134
     b28:	91 e0       	ldi	r25, 0x01	; 1
     b2a:	0e 94 aa 03 	call	0x754	; 0x754 <V_BAT>
     b2e:	9f 93       	push	r25
     b30:	8f 93       	push	r24
     b32:	7f 93       	push	r23
     b34:	6f 93       	push	r22
     b36:	1f 93       	push	r17
     b38:	0f 93       	push	r16
     b3a:	82 e7       	ldi	r24, 0x72	; 114
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	9f 93       	push	r25
     b40:	8f 93       	push	r24
     b42:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <sprintf>
		//str_lcd(Vbat);
		str_LCD_12864 (Vbat);
     b46:	82 e7       	ldi	r24, 0x72	; 114
     b48:	91 e0       	ldi	r25, 0x01	; 1
     b4a:	0e 94 44 01 	call	0x288	; 0x288 <str_LCD_12864>
		
		setpos_LCD_12864(0,2);
     b4e:	62 e0       	ldi	r22, 0x02	; 2
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	0e 94 46 03 	call	0x68c	; 0x68c <setpos_LCD_12864>
		str_LCD_12864 (str);
     b58:	ce 01       	movw	r24, r28
     b5a:	01 96       	adiw	r24, 0x01	; 1
     b5c:	0e 94 44 01 	call	0x288	; 0x288 <str_LCD_12864>
     b60:	2f ef       	ldi	r18, 0xFF	; 255
     b62:	81 ee       	ldi	r24, 0xE1	; 225
     b64:	94 e0       	ldi	r25, 0x04	; 4
     b66:	21 50       	subi	r18, 0x01	; 1
     b68:	80 40       	sbci	r24, 0x00	; 0
     b6a:	90 40       	sbci	r25, 0x00	; 0
     b6c:	e1 f7       	brne	.-8      	; 0xb66 <main+0x194>
     b6e:	00 c0       	rjmp	.+0      	; 0xb70 <main+0x19e>
     b70:	00 00       	nop
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	f8 94       	cli
     b76:	de bf       	out	0x3e, r29	; 62
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	cd bf       	out	0x3d, r28	; 61
     b7c:	7e cf       	rjmp	.-260    	; 0xa7a <main+0xa8>

00000b7e <NRF24L01_Receive>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
     b7e:	cf 93       	push	r28
     b80:	df 93       	push	r29
     b82:	80 91 42 06 	lds	r24, 0x0642	; 0x800642 <rx_flag>
     b86:	81 30       	cpi	r24, 0x01	; 1
     b88:	09 f0       	breq	.+2      	; 0xb8c <NRF24L01_Receive+0xe>
     b8a:	6b c1       	rjmp	.+726    	; 0xe62 <NRF24L01_Receive+0x2e4>
     b8c:	80 91 43 06 	lds	r24, 0x0643	; 0x800643 <RX_BUF>
     b90:	81 30       	cpi	r24, 0x01	; 1
     b92:	09 f0       	breq	.+2      	; 0xb96 <NRF24L01_Receive+0x18>
     b94:	59 c0       	rjmp	.+178    	; 0xc48 <NRF24L01_Receive+0xca>
     b96:	e8 eb       	ldi	r30, 0xB8	; 184
     b98:	f1 e0       	ldi	r31, 0x01	; 1
     b9a:	01 90       	ld	r0, Z+
     b9c:	00 20       	and	r0, r0
     b9e:	e9 f7       	brne	.-6      	; 0xb9a <NRF24L01_Receive+0x1c>
     ba0:	31 97       	sbiw	r30, 0x01	; 1
     ba2:	af 01       	movw	r20, r30
     ba4:	48 5b       	subi	r20, 0xB8	; 184
     ba6:	51 40       	sbci	r21, 0x01	; 1
     ba8:	44 0f       	add	r20, r20
     baa:	55 1f       	adc	r21, r21
     bac:	60 e0       	ldi	r22, 0x00	; 0
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	88 eb       	ldi	r24, 0xB8	; 184
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <memset>
     bb8:	e3 e4       	ldi	r30, 0x43	; 67
     bba:	f6 e0       	ldi	r31, 0x06	; 6
     bbc:	81 81       	ldd	r24, Z+1	; 0x01
     bbe:	c2 81       	ldd	r28, Z+2	; 0x02
     bc0:	d0 e0       	ldi	r29, 0x00	; 0
     bc2:	dc 2f       	mov	r29, r28
     bc4:	cc 27       	eor	r28, r28
     bc6:	c8 2b       	or	r28, r24
     bc8:	be 01       	movw	r22, r28
     bca:	0d 2e       	mov	r0, r29
     bcc:	00 0c       	add	r0, r0
     bce:	88 0b       	sbc	r24, r24
     bd0:	99 0b       	sbc	r25, r25
     bd2:	0e 94 32 09 	call	0x1264	; 0x1264 <__floatsisf>
     bd6:	20 e0       	ldi	r18, 0x00	; 0
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	40 e2       	ldi	r20, 0x20	; 32
     bdc:	51 e4       	ldi	r21, 0x41	; 65
     bde:	0e 94 be 08 	call	0x117c	; 0x117c <__divsf3>
     be2:	60 93 32 01 	sts	0x0132, r22	; 0x800132 <temp>
     be6:	70 93 33 01 	sts	0x0133, r23	; 0x800133 <temp+0x1>
     bea:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <temp+0x2>
     bee:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <temp+0x3>
     bf2:	dd 23       	and	r29, r29
     bf4:	5c f4       	brge	.+22     	; 0xc0c <NRF24L01_Receive+0x8e>
     bf6:	dc 01       	movw	r26, r24
     bf8:	cb 01       	movw	r24, r22
     bfa:	b0 58       	subi	r27, 0x80	; 128
     bfc:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <temp>
     c00:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <temp+0x1>
     c04:	a0 93 34 01 	sts	0x0134, r26	; 0x800134 <temp+0x2>
     c08:	b0 93 35 01 	sts	0x0135, r27	; 0x800135 <temp+0x3>
     c0c:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <temp+0x3>
     c10:	8f 93       	push	r24
     c12:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <temp+0x2>
     c16:	8f 93       	push	r24
     c18:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <temp+0x1>
     c1c:	8f 93       	push	r24
     c1e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <temp>
     c22:	8f 93       	push	r24
     c24:	82 e2       	ldi	r24, 0x22	; 34
     c26:	91 e0       	ldi	r25, 0x01	; 1
     c28:	9f 93       	push	r25
     c2a:	8f 93       	push	r24
     c2c:	88 eb       	ldi	r24, 0xB8	; 184
     c2e:	91 e0       	ldi	r25, 0x01	; 1
     c30:	9f 93       	push	r25
     c32:	8f 93       	push	r24
     c34:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <sprintf>
     c38:	8d b7       	in	r24, 0x3d	; 61
     c3a:	9e b7       	in	r25, 0x3e	; 62
     c3c:	08 96       	adiw	r24, 0x08	; 8
     c3e:	0f b6       	in	r0, 0x3f	; 63
     c40:	f8 94       	cli
     c42:	9e bf       	out	0x3e, r25	; 62
     c44:	0f be       	out	0x3f, r0	; 63
     c46:	8d bf       	out	0x3d, r24	; 61
     c48:	80 91 43 06 	lds	r24, 0x0643	; 0x800643 <RX_BUF>
     c4c:	85 30       	cpi	r24, 0x05	; 5
     c4e:	09 f0       	breq	.+2      	; 0xc52 <NRF24L01_Receive+0xd4>
     c50:	47 c0       	rjmp	.+142    	; 0xce0 <NRF24L01_Receive+0x162>
     c52:	ce ea       	ldi	r28, 0xAE	; 174
     c54:	d1 e0       	ldi	r29, 0x01	; 1
     c56:	fe 01       	movw	r30, r28
     c58:	01 90       	ld	r0, Z+
     c5a:	00 20       	and	r0, r0
     c5c:	e9 f7       	brne	.-6      	; 0xc58 <NRF24L01_Receive+0xda>
     c5e:	31 97       	sbiw	r30, 0x01	; 1
     c60:	af 01       	movw	r20, r30
     c62:	4e 5a       	subi	r20, 0xAE	; 174
     c64:	51 40       	sbci	r21, 0x01	; 1
     c66:	44 0f       	add	r20, r20
     c68:	55 1f       	adc	r21, r21
     c6a:	60 e0       	ldi	r22, 0x00	; 0
     c6c:	70 e0       	ldi	r23, 0x00	; 0
     c6e:	ce 01       	movw	r24, r28
     c70:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <memset>
     c74:	e3 e4       	ldi	r30, 0x43	; 67
     c76:	f6 e0       	ldi	r31, 0x06	; 6
     c78:	81 81       	ldd	r24, Z+1	; 0x01
     c7a:	62 81       	ldd	r22, Z+2	; 0x02
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	76 2f       	mov	r23, r22
     c80:	66 27       	eor	r22, r22
     c82:	68 2b       	or	r22, r24
     c84:	07 2e       	mov	r0, r23
     c86:	00 0c       	add	r0, r0
     c88:	88 0b       	sbc	r24, r24
     c8a:	99 0b       	sbc	r25, r25
     c8c:	0e 94 32 09 	call	0x1264	; 0x1264 <__floatsisf>
     c90:	20 e0       	ldi	r18, 0x00	; 0
     c92:	30 e0       	ldi	r19, 0x00	; 0
     c94:	40 e2       	ldi	r20, 0x20	; 32
     c96:	51 e4       	ldi	r21, 0x41	; 65
     c98:	0e 94 be 08 	call	0x117c	; 0x117c <__divsf3>
     c9c:	26 2f       	mov	r18, r22
     c9e:	37 2f       	mov	r19, r23
     ca0:	46 2f       	mov	r20, r22
     ca2:	57 2f       	mov	r21, r23
     ca4:	68 2f       	mov	r22, r24
     ca6:	79 2f       	mov	r23, r25
     ca8:	40 93 2e 01 	sts	0x012E, r20	; 0x80012e <__data_end>
     cac:	50 93 2f 01 	sts	0x012F, r21	; 0x80012f <__data_end+0x1>
     cb0:	60 93 30 01 	sts	0x0130, r22	; 0x800130 <__data_end+0x2>
     cb4:	70 93 31 01 	sts	0x0131, r23	; 0x800131 <__data_end+0x3>
     cb8:	9f 93       	push	r25
     cba:	8f 93       	push	r24
     cbc:	3f 93       	push	r19
     cbe:	2f 93       	push	r18
     cc0:	87 e2       	ldi	r24, 0x27	; 39
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	9f 93       	push	r25
     cc6:	8f 93       	push	r24
     cc8:	df 93       	push	r29
     cca:	cf 93       	push	r28
     ccc:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <sprintf>
     cd0:	8d b7       	in	r24, 0x3d	; 61
     cd2:	9e b7       	in	r25, 0x3e	; 62
     cd4:	08 96       	adiw	r24, 0x08	; 8
     cd6:	0f b6       	in	r0, 0x3f	; 63
     cd8:	f8 94       	cli
     cda:	9e bf       	out	0x3e, r25	; 62
     cdc:	0f be       	out	0x3f, r0	; 63
     cde:	8d bf       	out	0x3d, r24	; 61
     ce0:	c0 91 43 06 	lds	r28, 0x0643	; 0x800643 <RX_BUF>
     ce4:	c2 30       	cpi	r28, 0x02	; 2
     ce6:	61 f5       	brne	.+88     	; 0xd40 <NRF24L01_Receive+0x1c2>
     ce8:	e4 ea       	ldi	r30, 0xA4	; 164
     cea:	f1 e0       	ldi	r31, 0x01	; 1
     cec:	01 90       	ld	r0, Z+
     cee:	00 20       	and	r0, r0
     cf0:	e9 f7       	brne	.-6      	; 0xcec <NRF24L01_Receive+0x16e>
     cf2:	31 97       	sbiw	r30, 0x01	; 1
     cf4:	af 01       	movw	r20, r30
     cf6:	44 5a       	subi	r20, 0xA4	; 164
     cf8:	51 40       	sbci	r21, 0x01	; 1
     cfa:	44 0f       	add	r20, r20
     cfc:	55 1f       	adc	r21, r21
     cfe:	60 e0       	ldi	r22, 0x00	; 0
     d00:	70 e0       	ldi	r23, 0x00	; 0
     d02:	84 ea       	ldi	r24, 0xA4	; 164
     d04:	91 e0       	ldi	r25, 0x01	; 1
     d06:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <memset>
     d0a:	20 e0       	ldi	r18, 0x00	; 0
     d0c:	0b c0       	rjmp	.+22     	; 0xd24 <NRF24L01_Receive+0x1a6>
     d0e:	82 2f       	mov	r24, r18
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	fc 01       	movw	r30, r24
     d14:	ec 5b       	subi	r30, 0xBC	; 188
     d16:	f9 4f       	sbci	r31, 0xF9	; 249
     d18:	30 81       	ld	r19, Z
     d1a:	fc 01       	movw	r30, r24
     d1c:	ec 55       	subi	r30, 0x5C	; 92
     d1e:	fe 4f       	sbci	r31, 0xFE	; 254
     d20:	30 83       	st	Z, r19
     d22:	2f 5f       	subi	r18, 0xFF	; 255
     d24:	82 2f       	mov	r24, r18
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	e3 e4       	ldi	r30, 0x43	; 67
     d2a:	f6 e0       	ldi	r31, 0x06	; 6
     d2c:	01 90       	ld	r0, Z+
     d2e:	00 20       	and	r0, r0
     d30:	e9 f7       	brne	.-6      	; 0xd2c <NRF24L01_Receive+0x1ae>
     d32:	31 97       	sbiw	r30, 0x01	; 1
     d34:	e3 54       	subi	r30, 0x43	; 67
     d36:	f6 40       	sbci	r31, 0x06	; 6
     d38:	31 97       	sbiw	r30, 0x01	; 1
     d3a:	8e 17       	cp	r24, r30
     d3c:	9f 07       	cpc	r25, r31
     d3e:	38 f3       	brcs	.-50     	; 0xd0e <NRF24L01_Receive+0x190>
     d40:	c3 30       	cpi	r28, 0x03	; 3
     d42:	89 f5       	brne	.+98     	; 0xda6 <NRF24L01_Receive+0x228>
     d44:	e0 e9       	ldi	r30, 0x90	; 144
     d46:	f1 e0       	ldi	r31, 0x01	; 1
     d48:	01 90       	ld	r0, Z+
     d4a:	00 20       	and	r0, r0
     d4c:	e9 f7       	brne	.-6      	; 0xd48 <NRF24L01_Receive+0x1ca>
     d4e:	31 97       	sbiw	r30, 0x01	; 1
     d50:	af 01       	movw	r20, r30
     d52:	40 59       	subi	r20, 0x90	; 144
     d54:	51 40       	sbci	r21, 0x01	; 1
     d56:	44 0f       	add	r20, r20
     d58:	55 1f       	adc	r21, r21
     d5a:	60 e0       	ldi	r22, 0x00	; 0
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	80 e9       	ldi	r24, 0x90	; 144
     d60:	91 e0       	ldi	r25, 0x01	; 1
     d62:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <memset>
     d66:	20 e0       	ldi	r18, 0x00	; 0
     d68:	0b c0       	rjmp	.+22     	; 0xd80 <NRF24L01_Receive+0x202>
     d6a:	82 2f       	mov	r24, r18
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	fc 01       	movw	r30, r24
     d70:	ec 5b       	subi	r30, 0xBC	; 188
     d72:	f9 4f       	sbci	r31, 0xF9	; 249
     d74:	30 81       	ld	r19, Z
     d76:	fc 01       	movw	r30, r24
     d78:	e0 57       	subi	r30, 0x70	; 112
     d7a:	fe 4f       	sbci	r31, 0xFE	; 254
     d7c:	30 83       	st	Z, r19
     d7e:	2f 5f       	subi	r18, 0xFF	; 255
     d80:	82 2f       	mov	r24, r18
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	e3 e4       	ldi	r30, 0x43	; 67
     d86:	f6 e0       	ldi	r31, 0x06	; 6
     d88:	01 90       	ld	r0, Z+
     d8a:	00 20       	and	r0, r0
     d8c:	e9 f7       	brne	.-6      	; 0xd88 <NRF24L01_Receive+0x20a>
     d8e:	31 97       	sbiw	r30, 0x01	; 1
     d90:	e3 54       	subi	r30, 0x43	; 67
     d92:	f6 40       	sbci	r31, 0x06	; 6
     d94:	31 97       	sbiw	r30, 0x01	; 1
     d96:	8e 17       	cp	r24, r30
     d98:	9f 07       	cpc	r25, r31
     d9a:	38 f3       	brcs	.-50     	; 0xd6a <NRF24L01_Receive+0x1ec>
     d9c:	fc 01       	movw	r30, r24
     d9e:	ef 56       	subi	r30, 0x6F	; 111
     da0:	fe 4f       	sbci	r31, 0xFE	; 254
     da2:	80 e2       	ldi	r24, 0x20	; 32
     da4:	80 83       	st	Z, r24
     da6:	c4 30       	cpi	r28, 0x04	; 4
     da8:	61 f5       	brne	.+88     	; 0xe02 <NRF24L01_Receive+0x284>
     daa:	e6 e8       	ldi	r30, 0x86	; 134
     dac:	f1 e0       	ldi	r31, 0x01	; 1
     dae:	01 90       	ld	r0, Z+
     db0:	00 20       	and	r0, r0
     db2:	e9 f7       	brne	.-6      	; 0xdae <NRF24L01_Receive+0x230>
     db4:	31 97       	sbiw	r30, 0x01	; 1
     db6:	af 01       	movw	r20, r30
     db8:	46 58       	subi	r20, 0x86	; 134
     dba:	51 40       	sbci	r21, 0x01	; 1
     dbc:	44 0f       	add	r20, r20
     dbe:	55 1f       	adc	r21, r21
     dc0:	60 e0       	ldi	r22, 0x00	; 0
     dc2:	70 e0       	ldi	r23, 0x00	; 0
     dc4:	86 e8       	ldi	r24, 0x86	; 134
     dc6:	91 e0       	ldi	r25, 0x01	; 1
     dc8:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <memset>
     dcc:	20 e0       	ldi	r18, 0x00	; 0
     dce:	0b c0       	rjmp	.+22     	; 0xde6 <NRF24L01_Receive+0x268>
     dd0:	82 2f       	mov	r24, r18
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	fc 01       	movw	r30, r24
     dd6:	ec 5b       	subi	r30, 0xBC	; 188
     dd8:	f9 4f       	sbci	r31, 0xF9	; 249
     dda:	30 81       	ld	r19, Z
     ddc:	fc 01       	movw	r30, r24
     dde:	ea 57       	subi	r30, 0x7A	; 122
     de0:	fe 4f       	sbci	r31, 0xFE	; 254
     de2:	30 83       	st	Z, r19
     de4:	2f 5f       	subi	r18, 0xFF	; 255
     de6:	82 2f       	mov	r24, r18
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	e3 e4       	ldi	r30, 0x43	; 67
     dec:	f6 e0       	ldi	r31, 0x06	; 6
     dee:	01 90       	ld	r0, Z+
     df0:	00 20       	and	r0, r0
     df2:	e9 f7       	brne	.-6      	; 0xdee <NRF24L01_Receive+0x270>
     df4:	31 97       	sbiw	r30, 0x01	; 1
     df6:	e3 54       	subi	r30, 0x43	; 67
     df8:	f6 40       	sbci	r31, 0x06	; 6
     dfa:	31 97       	sbiw	r30, 0x01	; 1
     dfc:	8e 17       	cp	r24, r30
     dfe:	9f 07       	cpc	r25, r31
     e00:	38 f3       	brcs	.-50     	; 0xdd0 <NRF24L01_Receive+0x252>
     e02:	c6 30       	cpi	r28, 0x06	; 6
     e04:	61 f5       	brne	.+88     	; 0xe5e <NRF24L01_Receive+0x2e0>
     e06:	ec e7       	ldi	r30, 0x7C	; 124
     e08:	f1 e0       	ldi	r31, 0x01	; 1
     e0a:	01 90       	ld	r0, Z+
     e0c:	00 20       	and	r0, r0
     e0e:	e9 f7       	brne	.-6      	; 0xe0a <NRF24L01_Receive+0x28c>
     e10:	31 97       	sbiw	r30, 0x01	; 1
     e12:	af 01       	movw	r20, r30
     e14:	4c 57       	subi	r20, 0x7C	; 124
     e16:	51 40       	sbci	r21, 0x01	; 1
     e18:	44 0f       	add	r20, r20
     e1a:	55 1f       	adc	r21, r21
     e1c:	60 e0       	ldi	r22, 0x00	; 0
     e1e:	70 e0       	ldi	r23, 0x00	; 0
     e20:	8c e7       	ldi	r24, 0x7C	; 124
     e22:	91 e0       	ldi	r25, 0x01	; 1
     e24:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <memset>
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	0b c0       	rjmp	.+22     	; 0xe42 <NRF24L01_Receive+0x2c4>
     e2c:	82 2f       	mov	r24, r18
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	fc 01       	movw	r30, r24
     e32:	ec 5b       	subi	r30, 0xBC	; 188
     e34:	f9 4f       	sbci	r31, 0xF9	; 249
     e36:	30 81       	ld	r19, Z
     e38:	fc 01       	movw	r30, r24
     e3a:	e4 58       	subi	r30, 0x84	; 132
     e3c:	fe 4f       	sbci	r31, 0xFE	; 254
     e3e:	30 83       	st	Z, r19
     e40:	2f 5f       	subi	r18, 0xFF	; 255
     e42:	82 2f       	mov	r24, r18
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	e3 e4       	ldi	r30, 0x43	; 67
     e48:	f6 e0       	ldi	r31, 0x06	; 6
     e4a:	01 90       	ld	r0, Z+
     e4c:	00 20       	and	r0, r0
     e4e:	e9 f7       	brne	.-6      	; 0xe4a <NRF24L01_Receive+0x2cc>
     e50:	31 97       	sbiw	r30, 0x01	; 1
     e52:	e3 54       	subi	r30, 0x43	; 67
     e54:	f6 40       	sbci	r31, 0x06	; 6
     e56:	31 97       	sbiw	r30, 0x01	; 1
     e58:	8e 17       	cp	r24, r30
     e5a:	9f 07       	cpc	r25, r31
     e5c:	38 f3       	brcs	.-50     	; 0xe2c <NRF24L01_Receive+0x2ae>
     e5e:	10 92 42 06 	sts	0x0642, r1	; 0x800642 <rx_flag>
     e62:	df 91       	pop	r29
     e64:	cf 91       	pop	r28
     e66:	08 95       	ret

00000e68 <NRF24_FlushRX>:
     e68:	85 b1       	in	r24, 0x05	; 5
     e6a:	8b 7f       	andi	r24, 0xFB	; 251
     e6c:	85 b9       	out	0x05, r24	; 5
     e6e:	82 ee       	ldi	r24, 0xE2	; 226
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     e76:	85 e0       	ldi	r24, 0x05	; 5
     e78:	8a 95       	dec	r24
     e7a:	f1 f7       	brne	.-4      	; 0xe78 <NRF24_FlushRX+0x10>
     e7c:	00 00       	nop
     e7e:	85 b1       	in	r24, 0x05	; 5
     e80:	84 60       	ori	r24, 0x04	; 4
     e82:	85 b9       	out	0x05, r24	; 5
     e84:	08 95       	ret

00000e86 <NRF24_FlushTX>:
     e86:	85 b1       	in	r24, 0x05	; 5
     e88:	8b 7f       	andi	r24, 0xFB	; 251
     e8a:	85 b9       	out	0x05, r24	; 5
     e8c:	81 ee       	ldi	r24, 0xE1	; 225
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     e94:	85 e0       	ldi	r24, 0x05	; 5
     e96:	8a 95       	dec	r24
     e98:	f1 f7       	brne	.-4      	; 0xe96 <NRF24_FlushTX+0x10>
     e9a:	00 00       	nop
     e9c:	85 b1       	in	r24, 0x05	; 5
     e9e:	84 60       	ori	r24, 0x04	; 4
     ea0:	85 b9       	out	0x05, r24	; 5
     ea2:	08 95       	ret

00000ea4 <NRF24_ToggleFeatures>:
     ea4:	85 b1       	in	r24, 0x05	; 5
     ea6:	8b 7f       	andi	r24, 0xFB	; 251
     ea8:	85 b9       	out	0x05, r24	; 5
     eaa:	80 e5       	ldi	r24, 0x50	; 80
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     eb2:	85 e0       	ldi	r24, 0x05	; 5
     eb4:	8a 95       	dec	r24
     eb6:	f1 f7       	brne	.-4      	; 0xeb4 <NRF24_ToggleFeatures+0x10>
     eb8:	00 00       	nop
     eba:	83 e7       	ldi	r24, 0x73	; 115
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     ec2:	85 b1       	in	r24, 0x05	; 5
     ec4:	84 60       	ori	r24, 0x04	; 4
     ec6:	85 b9       	out	0x05, r24	; 5
     ec8:	08 95       	ret

00000eca <NRF24_Read_Buf>:
     eca:	ef 92       	push	r14
     ecc:	ff 92       	push	r15
     ece:	0f 93       	push	r16
     ed0:	1f 93       	push	r17
     ed2:	cf 93       	push	r28
     ed4:	df 93       	push	r29
     ed6:	8b 01       	movw	r16, r22
     ed8:	c4 2f       	mov	r28, r20
     eda:	95 b1       	in	r25, 0x05	; 5
     edc:	9b 7f       	andi	r25, 0xFB	; 251
     ede:	95 b9       	out	0x05, r25	; 5
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     ee6:	0c c0       	rjmp	.+24     	; 0xf00 <NRF24_Read_Buf+0x36>
     ee8:	78 01       	movw	r14, r16
     eea:	8f ef       	ldi	r24, 0xFF	; 255
     eec:	e8 1a       	sub	r14, r24
     eee:	f8 0a       	sbc	r15, r24
     ef0:	8f ef       	ldi	r24, 0xFF	; 255
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     ef8:	f8 01       	movw	r30, r16
     efa:	80 83       	st	Z, r24
     efc:	cd 2f       	mov	r28, r29
     efe:	87 01       	movw	r16, r14
     f00:	df ef       	ldi	r29, 0xFF	; 255
     f02:	dc 0f       	add	r29, r28
     f04:	c1 11       	cpse	r28, r1
     f06:	f0 cf       	rjmp	.-32     	; 0xee8 <NRF24_Read_Buf+0x1e>
     f08:	85 b1       	in	r24, 0x05	; 5
     f0a:	84 60       	ori	r24, 0x04	; 4
     f0c:	85 b9       	out	0x05, r24	; 5
     f0e:	df 91       	pop	r29
     f10:	cf 91       	pop	r28
     f12:	1f 91       	pop	r17
     f14:	0f 91       	pop	r16
     f16:	ff 90       	pop	r15
     f18:	ef 90       	pop	r14
     f1a:	08 95       	ret

00000f1c <NRF24_Write_Buf>:
     f1c:	ef 92       	push	r14
     f1e:	ff 92       	push	r15
     f20:	0f 93       	push	r16
     f22:	1f 93       	push	r17
     f24:	cf 93       	push	r28
     f26:	df 93       	push	r29
     f28:	8b 01       	movw	r16, r22
     f2a:	c4 2f       	mov	r28, r20
     f2c:	80 62       	ori	r24, 0x20	; 32
     f2e:	95 b1       	in	r25, 0x05	; 5
     f30:	9b 7f       	andi	r25, 0xFB	; 251
     f32:	95 b9       	out	0x05, r25	; 5
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     f3a:	85 e0       	ldi	r24, 0x05	; 5
     f3c:	8a 95       	dec	r24
     f3e:	f1 f7       	brne	.-4      	; 0xf3c <NRF24_Write_Buf+0x20>
     f40:	00 00       	nop
     f42:	0b c0       	rjmp	.+22     	; 0xf5a <NRF24_Write_Buf+0x3e>
     f44:	78 01       	movw	r14, r16
     f46:	ef ef       	ldi	r30, 0xFF	; 255
     f48:	ee 1a       	sub	r14, r30
     f4a:	fe 0a       	sbc	r15, r30
     f4c:	f8 01       	movw	r30, r16
     f4e:	80 81       	ld	r24, Z
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
     f56:	cd 2f       	mov	r28, r29
     f58:	87 01       	movw	r16, r14
     f5a:	df ef       	ldi	r29, 0xFF	; 255
     f5c:	dc 0f       	add	r29, r28
     f5e:	c1 11       	cpse	r28, r1
     f60:	f1 cf       	rjmp	.-30     	; 0xf44 <NRF24_Write_Buf+0x28>
     f62:	85 b1       	in	r24, 0x05	; 5
     f64:	84 60       	ori	r24, 0x04	; 4
     f66:	85 b9       	out	0x05, r24	; 5
     f68:	df 91       	pop	r29
     f6a:	cf 91       	pop	r28
     f6c:	1f 91       	pop	r17
     f6e:	0f 91       	pop	r16
     f70:	ff 90       	pop	r15
     f72:	ef 90       	pop	r14
     f74:	08 95       	ret

00000f76 <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
     f76:	cf 93       	push	r28
     f78:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
     f7a:	80 62       	ori	r24, 0x20	; 32
	LOW_CSN;
     f7c:	95 b1       	in	r25, 0x05	; 5
     f7e:	9b 7f       	andi	r25, 0xFB	; 251
     f80:	95 b9       	out	0x05, r25	; 5
	spi_send_recv(reg);
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
	spi_send_recv(data_out);
     f88:	8c 2f       	mov	r24, r28
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
	HIGH_CSN;
     f90:	85 b1       	in	r24, 0x05	; 5
     f92:	84 60       	ori	r24, 0x04	; 4
     f94:	85 b9       	out	0x05, r24	; 5
}
     f96:	cf 91       	pop	r28
     f98:	08 95       	ret

00000f9a <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
     f9a:	cf 93       	push	r28
     f9c:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
     f9e:	85 b1       	in	r24, 0x05	; 5
     fa0:	8b 7f       	andi	r24, 0xFB	; 251
     fa2:	85 b9       	out	0x05, r24	; 5
	data_in = spi_send_recv(reg);
     fa4:	8c 2f       	mov	r24, r28
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
	if(reg != STATUS)
     fac:	c7 30       	cpi	r28, 0x07	; 7
     fae:	21 f0       	breq	.+8      	; 0xfb8 <nRF_read_register+0x1e>
	{
		data_in = spi_send_recv(NOP);
     fb0:	8f ef       	ldi	r24, 0xFF	; 255
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <spi_send_recv>
	}
	HIGH_CSN;
     fb8:	95 b1       	in	r25, 0x05	; 5
     fba:	94 60       	ori	r25, 0x04	; 4
     fbc:	95 b9       	out	0x05, r25	; 5
	return data_in;
}
     fbe:	cf 91       	pop	r28
     fc0:	08 95       	ret

00000fc2 <__vector_1>:
		//memset(RX_BUF, 0, sizeof(int) * strlen(RX_BUF));//очистка массива
		rx_flag = 0;
	}
}
ISR(INT0_vect)
{
     fc2:	1f 92       	push	r1
     fc4:	0f 92       	push	r0
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	0f 92       	push	r0
     fca:	11 24       	eor	r1, r1
     fcc:	2f 93       	push	r18
     fce:	3f 93       	push	r19
     fd0:	4f 93       	push	r20
     fd2:	5f 93       	push	r21
     fd4:	6f 93       	push	r22
     fd6:	7f 93       	push	r23
     fd8:	8f 93       	push	r24
     fda:	9f 93       	push	r25
     fdc:	af 93       	push	r26
     fde:	bf 93       	push	r27
     fe0:	ef 93       	push	r30
     fe2:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fe4:	8f ea       	ldi	r24, 0xAF	; 175
     fe6:	94 e0       	ldi	r25, 0x04	; 4
     fe8:	01 97       	sbiw	r24, 0x01	; 1
     fea:	f1 f7       	brne	.-4      	; 0xfe8 <__vector_1+0x26>
     fec:	00 c0       	rjmp	.+0      	; 0xfee <__vector_1+0x2c>
     fee:	00 00       	nop
	uint8_t status=0x01;
	uint8_t pipe;
	_delay_us(300);
	PORTD |= (1<<LED);
     ff0:	8b b1       	in	r24, 0x0b	; 11
     ff2:	80 61       	ori	r24, 0x10	; 16
     ff4:	8b b9       	out	0x0b, r24	; 11
     ff6:	8f ea       	ldi	r24, 0xAF	; 175
     ff8:	94 e0       	ldi	r25, 0x04	; 4
     ffa:	01 97       	sbiw	r24, 0x01	; 1
     ffc:	f1 f7       	brne	.-4      	; 0xffa <__vector_1+0x38>
     ffe:	00 c0       	rjmp	.+0      	; 0x1000 <__vector_1+0x3e>
    1000:	00 00       	nop
	_delay_us(300);
	PORTD &= ~(1<<LED);
    1002:	8b b1       	in	r24, 0x0b	; 11
    1004:	8f 7e       	andi	r24, 0xEF	; 239
    1006:	8b b9       	out	0x0b, r24	; 11
	status = nRF_read_register(STATUS);
    1008:	87 e0       	ldi	r24, 0x07	; 7
    100a:	0e 94 cd 07 	call	0xf9a	; 0xf9a <nRF_read_register>
	if(status & 0x40)
    100e:	86 ff       	sbrs	r24, 6
    1010:	0a c0       	rjmp	.+20     	; 0x1026 <__vector_1+0x64>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    1012:	45 e0       	ldi	r20, 0x05	; 5
    1014:	63 e4       	ldi	r22, 0x43	; 67
    1016:	76 e0       	ldi	r23, 0x06	; 6
    1018:	81 e6       	ldi	r24, 0x61	; 97
    101a:	0e 94 65 07 	call	0xeca	; 0xeca <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    101e:	60 e4       	ldi	r22, 0x40	; 64
    1020:	87 e0       	ldi	r24, 0x07	; 7
    1022:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	}
	 rx_flag = 1;
    1026:	81 e0       	ldi	r24, 0x01	; 1
    1028:	80 93 42 06 	sts	0x0642, r24	; 0x800642 <rx_flag>
}
    102c:	ff 91       	pop	r31
    102e:	ef 91       	pop	r30
    1030:	bf 91       	pop	r27
    1032:	af 91       	pop	r26
    1034:	9f 91       	pop	r25
    1036:	8f 91       	pop	r24
    1038:	7f 91       	pop	r23
    103a:	6f 91       	pop	r22
    103c:	5f 91       	pop	r21
    103e:	4f 91       	pop	r20
    1040:	3f 91       	pop	r19
    1042:	2f 91       	pop	r18
    1044:	0f 90       	pop	r0
    1046:	0f be       	out	0x3f, r0	; 63
    1048:	0f 90       	pop	r0
    104a:	1f 90       	pop	r1
    104c:	18 95       	reti

0000104e <NRF24L01_RX_Mode>:
}
//-------------------------------------------------------------
void NRF24L01_RX_Mode(void) // включение режима приема
{
	uint8_t regval = 0x00;
	regval = nRF_read_register(CONFIG);
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	0e 94 cd 07 	call	0xf9a	; 0xf9a <nRF_read_register>
	//разбудим модуль и переведём его в режим приёмника, включив биты PWR_UP и PRIM_RX
	regval |= (1<<PWR_UP)|(1<<PRIM_RX);
    1054:	68 2f       	mov	r22, r24
    1056:	63 60       	ori	r22, 0x03	; 3
	nRF_write_register(CONFIG,regval);
    1058:	80 e0       	ldi	r24, 0x00	; 0
    105a:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	HIGH_CE;
    105e:	85 b1       	in	r24, 0x05	; 5
    1060:	82 60       	ori	r24, 0x02	; 2
    1062:	85 b9       	out	0x05, r24	; 5
    1064:	87 e5       	ldi	r24, 0x57	; 87
    1066:	92 e0       	ldi	r25, 0x02	; 2
    1068:	01 97       	sbiw	r24, 0x01	; 1
    106a:	f1 f7       	brne	.-4      	; 0x1068 <NRF24L01_RX_Mode+0x1a>
    106c:	00 c0       	rjmp	.+0      	; 0x106e <NRF24L01_RX_Mode+0x20>
    106e:	00 00       	nop
	_delay_us(150); //Задержка минимум 130 мкс
	// Flush buffers
	NRF24_FlushRX();
    1070:	0e 94 34 07 	call	0xe68	; 0xe68 <NRF24_FlushRX>
	NRF24_FlushTX();
    1074:	0e 94 43 07 	call	0xe86	; 0xe86 <NRF24_FlushTX>
    1078:	08 95       	ret

0000107a <NRF24_ini>:
extern uint8_t flag_irq;
volatile uint8_t rx_flag = 0;
//-------------------------------------------------------------
void NRF24_ini(void)
{
	LOW_CE;
    107a:	85 b1       	in	r24, 0x05	; 5
    107c:	8d 7f       	andi	r24, 0xFD	; 253
    107e:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1080:	8f e1       	ldi	r24, 0x1F	; 31
    1082:	9e e4       	ldi	r25, 0x4E	; 78
    1084:	01 97       	sbiw	r24, 0x01	; 1
    1086:	f1 f7       	brne	.-4      	; 0x1084 <NRF24_ini+0xa>
    1088:	00 c0       	rjmp	.+0      	; 0x108a <NRF24_ini+0x10>
    108a:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(CONFIG, 0x0a); // Set PWR_UP bit, enable CRC(1 byte) &Prim_RX:0 (Transmitter)
    108c:	6a e0       	ldi	r22, 0x0A	; 10
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
    1094:	8f e1       	ldi	r24, 0x1F	; 31
    1096:	9e e4       	ldi	r25, 0x4E	; 78
    1098:	01 97       	sbiw	r24, 0x01	; 1
    109a:	f1 f7       	brne	.-4      	; 0x1098 <NRF24_ini+0x1e>
    109c:	00 c0       	rjmp	.+0      	; 0x109e <NRF24_ini+0x24>
    109e:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(EN_AA, 0x02); // Enable Pipe1
    10a0:	62 e0       	ldi	r22, 0x02	; 2
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	nRF_write_register(EN_RXADDR, 0x02); // Enable Pipe1
    10a8:	62 e0       	ldi	r22, 0x02	; 2
    10aa:	82 e0       	ldi	r24, 0x02	; 2
    10ac:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	nRF_write_register(SETUP_AW, 0x01); // Setup address width=3 bytes
    10b0:	61 e0       	ldi	r22, 0x01	; 1
    10b2:	83 e0       	ldi	r24, 0x03	; 3
    10b4:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	nRF_write_register(SETUP_RETR, 0x5F); // // 1500us, 15 retrans
    10b8:	6f e5       	ldi	r22, 0x5F	; 95
    10ba:	84 e0       	ldi	r24, 0x04	; 4
    10bc:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	NRF24_ToggleFeatures();
    10c0:	0e 94 52 07 	call	0xea4	; 0xea4 <NRF24_ToggleFeatures>
	nRF_write_register(FEATURE, 0);
    10c4:	60 e0       	ldi	r22, 0x00	; 0
    10c6:	8d e1       	ldi	r24, 0x1D	; 29
    10c8:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	nRF_write_register(DYNPD, 0);
    10cc:	60 e0       	ldi	r22, 0x00	; 0
    10ce:	8c e1       	ldi	r24, 0x1C	; 28
    10d0:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	nRF_write_register(STATUS, 0x70);//Reset flags for IRQ
    10d4:	60 e7       	ldi	r22, 0x70	; 112
    10d6:	87 e0       	ldi	r24, 0x07	; 7
    10d8:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	nRF_write_register(RF_CH, 76); // частота 2476 MHz
    10dc:	6c e4       	ldi	r22, 0x4C	; 76
    10de:	85 e0       	ldi	r24, 0x05	; 5
    10e0:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	nRF_write_register(RF_SETUP, 0x06); //TX_PWR:0dBm, Datarate:1Mbps
    10e4:	66 e0       	ldi	r22, 0x06	; 6
    10e6:	86 e0       	ldi	r24, 0x06	; 6
    10e8:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	NRF24_Write_Buf(TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);
    10ec:	43 e0       	ldi	r20, 0x03	; 3
    10ee:	64 e0       	ldi	r22, 0x04	; 4
    10f0:	71 e0       	ldi	r23, 0x01	; 1
    10f2:	80 e1       	ldi	r24, 0x10	; 16
    10f4:	0e 94 8e 07 	call	0xf1c	; 0xf1c <NRF24_Write_Buf>
	NRF24_Write_Buf(RX_ADDR_P1, TX_ADDRESS, TX_ADR_WIDTH);
    10f8:	43 e0       	ldi	r20, 0x03	; 3
    10fa:	64 e0       	ldi	r22, 0x04	; 4
    10fc:	71 e0       	ldi	r23, 0x01	; 1
    10fe:	8b e0       	ldi	r24, 0x0B	; 11
    1100:	0e 94 8e 07 	call	0xf1c	; 0xf1c <NRF24_Write_Buf>
	nRF_write_register(RX_PW_P1, TX_PLOAD_WIDTH); //Number of bytes in RX payload in data pipe 1
    1104:	65 e0       	ldi	r22, 0x05	; 5
    1106:	82 e1       	ldi	r24, 0x12	; 18
    1108:	0e 94 bb 07 	call	0xf76	; 0xf76 <nRF_write_register>
	//пока уходим в режим приёмника
	NRF24L01_RX_Mode();
    110c:	0e 94 27 08 	call	0x104e	; 0x104e <NRF24L01_RX_Mode>
    1110:	08 95       	ret

00001112 <I2C_Init>:
 */ 
#include "TWI.h"

void I2C_Init(void)
{
	TWBR=0x48; //скорость передачи (при 8 мГц получается 100 кГц)
    1112:	88 e4       	ldi	r24, 0x48	; 72
    1114:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    1118:	08 95       	ret

0000111a <USART_Init>:
 */ 
#include "usart.h"

void USART_Init( unsigned int speed)//Инициализация модуля USART
{	
  UBRR0H = (unsigned char)(speed>>8);
    111a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  UBRR0L = (unsigned char)speed;
    111e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  UCSR0B=(1<<RXEN0)|( 1<<TXEN0); //Включаем прием и передачу по USART
    1122:	e1 ec       	ldi	r30, 0xC1	; 193
    1124:	f0 e0       	ldi	r31, 0x00	; 0
    1126:	88 e1       	ldi	r24, 0x18	; 24
    1128:	80 83       	st	Z, r24
  UCSR0B |= (1<<RXCIE0); //Разрешаем прерывание при приеме
    112a:	80 81       	ld	r24, Z
    112c:	80 68       	ori	r24, 0x80	; 128
    112e:	80 83       	st	Z, r24
  UCSR0A |= (1<<U2X0); // Для 8 мгц, удвоение скорости
    1130:	e0 ec       	ldi	r30, 0xC0	; 192
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	80 81       	ld	r24, Z
    1136:	82 60       	ori	r24, 0x02	; 2
    1138:	80 83       	st	Z, r24
  UCSR0C |= (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);// Обращаемся именно к регистру UCSRC (URSEL=1),
    113a:	e2 ec       	ldi	r30, 0xC2	; 194
    113c:	f0 e0       	ldi	r31, 0x00	; 0
    113e:	80 81       	ld	r24, Z
    1140:	8e 60       	ori	r24, 0x0E	; 14
    1142:	80 83       	st	Z, r24
    1144:	08 95       	ret

00001146 <USART_Transmit>:
  //ассинхронный режим (UMSEL=0), без контроля четности (UPM1=0 и UPM0=0),
  //2 стоп-бит (USBS=1), 8-бит посылка (UCSZ1=1 и UCSZ0=1)
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
    1146:	dc 01       	movw	r26, r24
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    1148:	80 e0       	ldi	r24, 0x00	; 0
    114a:	0b c0       	rjmp	.+22     	; 0x1162 <USART_Transmit+0x1c>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
    114c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    1150:	95 ff       	sbrs	r25, 5
    1152:	fc cf       	rjmp	.-8      	; 0x114c <USART_Transmit+0x6>
	  UDR0 = data[i]; //Начало передачи данных
    1154:	fd 01       	movw	r30, r26
    1156:	e2 0f       	add	r30, r18
    1158:	f3 1f       	adc	r31, r19
    115a:	90 81       	ld	r25, Z
    115c:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    1160:	8f 5f       	subi	r24, 0xFF	; 255
    1162:	28 2f       	mov	r18, r24
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	fd 01       	movw	r30, r26
    1168:	01 90       	ld	r0, Z+
    116a:	00 20       	and	r0, r0
    116c:	e9 f7       	brne	.-6      	; 0x1168 <USART_Transmit+0x22>
    116e:	31 97       	sbiw	r30, 0x01	; 1
    1170:	ea 1b       	sub	r30, r26
    1172:	fb 0b       	sbc	r31, r27
    1174:	2e 17       	cp	r18, r30
    1176:	3f 07       	cpc	r19, r31
    1178:	48 f3       	brcs	.-46     	; 0x114c <USART_Transmit+0x6>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
	  UDR0 = data[i]; //Начало передачи данных
  }

}
    117a:	08 95       	ret

0000117c <__divsf3>:
    117c:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <__divsf3x>
    1180:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_round>
    1184:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__fp_pscB>
    1188:	58 f0       	brcs	.+22     	; 0x11a0 <__divsf3+0x24>
    118a:	0e 94 76 09 	call	0x12ec	; 0x12ec <__fp_pscA>
    118e:	40 f0       	brcs	.+16     	; 0x11a0 <__divsf3+0x24>
    1190:	29 f4       	brne	.+10     	; 0x119c <__divsf3+0x20>
    1192:	5f 3f       	cpi	r21, 0xFF	; 255
    1194:	29 f0       	breq	.+10     	; 0x11a0 <__divsf3+0x24>
    1196:	0c 94 6d 09 	jmp	0x12da	; 0x12da <__fp_inf>
    119a:	51 11       	cpse	r21, r1
    119c:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_szero>
    11a0:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__fp_nan>

000011a4 <__divsf3x>:
    11a4:	0e 94 95 09 	call	0x132a	; 0x132a <__fp_split3>
    11a8:	68 f3       	brcs	.-38     	; 0x1184 <__divsf3+0x8>

000011aa <__divsf3_pse>:
    11aa:	99 23       	and	r25, r25
    11ac:	b1 f3       	breq	.-20     	; 0x119a <__divsf3+0x1e>
    11ae:	55 23       	and	r21, r21
    11b0:	91 f3       	breq	.-28     	; 0x1196 <__divsf3+0x1a>
    11b2:	95 1b       	sub	r25, r21
    11b4:	55 0b       	sbc	r21, r21
    11b6:	bb 27       	eor	r27, r27
    11b8:	aa 27       	eor	r26, r26
    11ba:	62 17       	cp	r22, r18
    11bc:	73 07       	cpc	r23, r19
    11be:	84 07       	cpc	r24, r20
    11c0:	38 f0       	brcs	.+14     	; 0x11d0 <__divsf3_pse+0x26>
    11c2:	9f 5f       	subi	r25, 0xFF	; 255
    11c4:	5f 4f       	sbci	r21, 0xFF	; 255
    11c6:	22 0f       	add	r18, r18
    11c8:	33 1f       	adc	r19, r19
    11ca:	44 1f       	adc	r20, r20
    11cc:	aa 1f       	adc	r26, r26
    11ce:	a9 f3       	breq	.-22     	; 0x11ba <__divsf3_pse+0x10>
    11d0:	35 d0       	rcall	.+106    	; 0x123c <__divsf3_pse+0x92>
    11d2:	0e 2e       	mov	r0, r30
    11d4:	3a f0       	brmi	.+14     	; 0x11e4 <__divsf3_pse+0x3a>
    11d6:	e0 e8       	ldi	r30, 0x80	; 128
    11d8:	32 d0       	rcall	.+100    	; 0x123e <__divsf3_pse+0x94>
    11da:	91 50       	subi	r25, 0x01	; 1
    11dc:	50 40       	sbci	r21, 0x00	; 0
    11de:	e6 95       	lsr	r30
    11e0:	00 1c       	adc	r0, r0
    11e2:	ca f7       	brpl	.-14     	; 0x11d6 <__divsf3_pse+0x2c>
    11e4:	2b d0       	rcall	.+86     	; 0x123c <__divsf3_pse+0x92>
    11e6:	fe 2f       	mov	r31, r30
    11e8:	29 d0       	rcall	.+82     	; 0x123c <__divsf3_pse+0x92>
    11ea:	66 0f       	add	r22, r22
    11ec:	77 1f       	adc	r23, r23
    11ee:	88 1f       	adc	r24, r24
    11f0:	bb 1f       	adc	r27, r27
    11f2:	26 17       	cp	r18, r22
    11f4:	37 07       	cpc	r19, r23
    11f6:	48 07       	cpc	r20, r24
    11f8:	ab 07       	cpc	r26, r27
    11fa:	b0 e8       	ldi	r27, 0x80	; 128
    11fc:	09 f0       	breq	.+2      	; 0x1200 <__divsf3_pse+0x56>
    11fe:	bb 0b       	sbc	r27, r27
    1200:	80 2d       	mov	r24, r0
    1202:	bf 01       	movw	r22, r30
    1204:	ff 27       	eor	r31, r31
    1206:	93 58       	subi	r25, 0x83	; 131
    1208:	5f 4f       	sbci	r21, 0xFF	; 255
    120a:	3a f0       	brmi	.+14     	; 0x121a <__divsf3_pse+0x70>
    120c:	9e 3f       	cpi	r25, 0xFE	; 254
    120e:	51 05       	cpc	r21, r1
    1210:	78 f0       	brcs	.+30     	; 0x1230 <__divsf3_pse+0x86>
    1212:	0c 94 6d 09 	jmp	0x12da	; 0x12da <__fp_inf>
    1216:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_szero>
    121a:	5f 3f       	cpi	r21, 0xFF	; 255
    121c:	e4 f3       	brlt	.-8      	; 0x1216 <__divsf3_pse+0x6c>
    121e:	98 3e       	cpi	r25, 0xE8	; 232
    1220:	d4 f3       	brlt	.-12     	; 0x1216 <__divsf3_pse+0x6c>
    1222:	86 95       	lsr	r24
    1224:	77 95       	ror	r23
    1226:	67 95       	ror	r22
    1228:	b7 95       	ror	r27
    122a:	f7 95       	ror	r31
    122c:	9f 5f       	subi	r25, 0xFF	; 255
    122e:	c9 f7       	brne	.-14     	; 0x1222 <__divsf3_pse+0x78>
    1230:	88 0f       	add	r24, r24
    1232:	91 1d       	adc	r25, r1
    1234:	96 95       	lsr	r25
    1236:	87 95       	ror	r24
    1238:	97 f9       	bld	r25, 7
    123a:	08 95       	ret
    123c:	e1 e0       	ldi	r30, 0x01	; 1
    123e:	66 0f       	add	r22, r22
    1240:	77 1f       	adc	r23, r23
    1242:	88 1f       	adc	r24, r24
    1244:	bb 1f       	adc	r27, r27
    1246:	62 17       	cp	r22, r18
    1248:	73 07       	cpc	r23, r19
    124a:	84 07       	cpc	r24, r20
    124c:	ba 07       	cpc	r27, r26
    124e:	20 f0       	brcs	.+8      	; 0x1258 <__divsf3_pse+0xae>
    1250:	62 1b       	sub	r22, r18
    1252:	73 0b       	sbc	r23, r19
    1254:	84 0b       	sbc	r24, r20
    1256:	ba 0b       	sbc	r27, r26
    1258:	ee 1f       	adc	r30, r30
    125a:	88 f7       	brcc	.-30     	; 0x123e <__divsf3_pse+0x94>
    125c:	e0 95       	com	r30
    125e:	08 95       	ret

00001260 <__floatunsisf>:
    1260:	e8 94       	clt
    1262:	09 c0       	rjmp	.+18     	; 0x1276 <__floatsisf+0x12>

00001264 <__floatsisf>:
    1264:	97 fb       	bst	r25, 7
    1266:	3e f4       	brtc	.+14     	; 0x1276 <__floatsisf+0x12>
    1268:	90 95       	com	r25
    126a:	80 95       	com	r24
    126c:	70 95       	com	r23
    126e:	61 95       	neg	r22
    1270:	7f 4f       	sbci	r23, 0xFF	; 255
    1272:	8f 4f       	sbci	r24, 0xFF	; 255
    1274:	9f 4f       	sbci	r25, 0xFF	; 255
    1276:	99 23       	and	r25, r25
    1278:	a9 f0       	breq	.+42     	; 0x12a4 <__floatsisf+0x40>
    127a:	f9 2f       	mov	r31, r25
    127c:	96 e9       	ldi	r25, 0x96	; 150
    127e:	bb 27       	eor	r27, r27
    1280:	93 95       	inc	r25
    1282:	f6 95       	lsr	r31
    1284:	87 95       	ror	r24
    1286:	77 95       	ror	r23
    1288:	67 95       	ror	r22
    128a:	b7 95       	ror	r27
    128c:	f1 11       	cpse	r31, r1
    128e:	f8 cf       	rjmp	.-16     	; 0x1280 <__floatsisf+0x1c>
    1290:	fa f4       	brpl	.+62     	; 0x12d0 <__floatsisf+0x6c>
    1292:	bb 0f       	add	r27, r27
    1294:	11 f4       	brne	.+4      	; 0x129a <__floatsisf+0x36>
    1296:	60 ff       	sbrs	r22, 0
    1298:	1b c0       	rjmp	.+54     	; 0x12d0 <__floatsisf+0x6c>
    129a:	6f 5f       	subi	r22, 0xFF	; 255
    129c:	7f 4f       	sbci	r23, 0xFF	; 255
    129e:	8f 4f       	sbci	r24, 0xFF	; 255
    12a0:	9f 4f       	sbci	r25, 0xFF	; 255
    12a2:	16 c0       	rjmp	.+44     	; 0x12d0 <__floatsisf+0x6c>
    12a4:	88 23       	and	r24, r24
    12a6:	11 f0       	breq	.+4      	; 0x12ac <__floatsisf+0x48>
    12a8:	96 e9       	ldi	r25, 0x96	; 150
    12aa:	11 c0       	rjmp	.+34     	; 0x12ce <__floatsisf+0x6a>
    12ac:	77 23       	and	r23, r23
    12ae:	21 f0       	breq	.+8      	; 0x12b8 <__floatsisf+0x54>
    12b0:	9e e8       	ldi	r25, 0x8E	; 142
    12b2:	87 2f       	mov	r24, r23
    12b4:	76 2f       	mov	r23, r22
    12b6:	05 c0       	rjmp	.+10     	; 0x12c2 <__floatsisf+0x5e>
    12b8:	66 23       	and	r22, r22
    12ba:	71 f0       	breq	.+28     	; 0x12d8 <__floatsisf+0x74>
    12bc:	96 e8       	ldi	r25, 0x86	; 134
    12be:	86 2f       	mov	r24, r22
    12c0:	70 e0       	ldi	r23, 0x00	; 0
    12c2:	60 e0       	ldi	r22, 0x00	; 0
    12c4:	2a f0       	brmi	.+10     	; 0x12d0 <__floatsisf+0x6c>
    12c6:	9a 95       	dec	r25
    12c8:	66 0f       	add	r22, r22
    12ca:	77 1f       	adc	r23, r23
    12cc:	88 1f       	adc	r24, r24
    12ce:	da f7       	brpl	.-10     	; 0x12c6 <__floatsisf+0x62>
    12d0:	88 0f       	add	r24, r24
    12d2:	96 95       	lsr	r25
    12d4:	87 95       	ror	r24
    12d6:	97 f9       	bld	r25, 7
    12d8:	08 95       	ret

000012da <__fp_inf>:
    12da:	97 f9       	bld	r25, 7
    12dc:	9f 67       	ori	r25, 0x7F	; 127
    12de:	80 e8       	ldi	r24, 0x80	; 128
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	08 95       	ret

000012e6 <__fp_nan>:
    12e6:	9f ef       	ldi	r25, 0xFF	; 255
    12e8:	80 ec       	ldi	r24, 0xC0	; 192
    12ea:	08 95       	ret

000012ec <__fp_pscA>:
    12ec:	00 24       	eor	r0, r0
    12ee:	0a 94       	dec	r0
    12f0:	16 16       	cp	r1, r22
    12f2:	17 06       	cpc	r1, r23
    12f4:	18 06       	cpc	r1, r24
    12f6:	09 06       	cpc	r0, r25
    12f8:	08 95       	ret

000012fa <__fp_pscB>:
    12fa:	00 24       	eor	r0, r0
    12fc:	0a 94       	dec	r0
    12fe:	12 16       	cp	r1, r18
    1300:	13 06       	cpc	r1, r19
    1302:	14 06       	cpc	r1, r20
    1304:	05 06       	cpc	r0, r21
    1306:	08 95       	ret

00001308 <__fp_round>:
    1308:	09 2e       	mov	r0, r25
    130a:	03 94       	inc	r0
    130c:	00 0c       	add	r0, r0
    130e:	11 f4       	brne	.+4      	; 0x1314 <__fp_round+0xc>
    1310:	88 23       	and	r24, r24
    1312:	52 f0       	brmi	.+20     	; 0x1328 <__fp_round+0x20>
    1314:	bb 0f       	add	r27, r27
    1316:	40 f4       	brcc	.+16     	; 0x1328 <__fp_round+0x20>
    1318:	bf 2b       	or	r27, r31
    131a:	11 f4       	brne	.+4      	; 0x1320 <__fp_round+0x18>
    131c:	60 ff       	sbrs	r22, 0
    131e:	04 c0       	rjmp	.+8      	; 0x1328 <__fp_round+0x20>
    1320:	6f 5f       	subi	r22, 0xFF	; 255
    1322:	7f 4f       	sbci	r23, 0xFF	; 255
    1324:	8f 4f       	sbci	r24, 0xFF	; 255
    1326:	9f 4f       	sbci	r25, 0xFF	; 255
    1328:	08 95       	ret

0000132a <__fp_split3>:
    132a:	57 fd       	sbrc	r21, 7
    132c:	90 58       	subi	r25, 0x80	; 128
    132e:	44 0f       	add	r20, r20
    1330:	55 1f       	adc	r21, r21
    1332:	59 f0       	breq	.+22     	; 0x134a <__fp_splitA+0x10>
    1334:	5f 3f       	cpi	r21, 0xFF	; 255
    1336:	71 f0       	breq	.+28     	; 0x1354 <__fp_splitA+0x1a>
    1338:	47 95       	ror	r20

0000133a <__fp_splitA>:
    133a:	88 0f       	add	r24, r24
    133c:	97 fb       	bst	r25, 7
    133e:	99 1f       	adc	r25, r25
    1340:	61 f0       	breq	.+24     	; 0x135a <__fp_splitA+0x20>
    1342:	9f 3f       	cpi	r25, 0xFF	; 255
    1344:	79 f0       	breq	.+30     	; 0x1364 <__fp_splitA+0x2a>
    1346:	87 95       	ror	r24
    1348:	08 95       	ret
    134a:	12 16       	cp	r1, r18
    134c:	13 06       	cpc	r1, r19
    134e:	14 06       	cpc	r1, r20
    1350:	55 1f       	adc	r21, r21
    1352:	f2 cf       	rjmp	.-28     	; 0x1338 <__fp_split3+0xe>
    1354:	46 95       	lsr	r20
    1356:	f1 df       	rcall	.-30     	; 0x133a <__fp_splitA>
    1358:	08 c0       	rjmp	.+16     	; 0x136a <__fp_splitA+0x30>
    135a:	16 16       	cp	r1, r22
    135c:	17 06       	cpc	r1, r23
    135e:	18 06       	cpc	r1, r24
    1360:	99 1f       	adc	r25, r25
    1362:	f1 cf       	rjmp	.-30     	; 0x1346 <__fp_splitA+0xc>
    1364:	86 95       	lsr	r24
    1366:	71 05       	cpc	r23, r1
    1368:	61 05       	cpc	r22, r1
    136a:	08 94       	sec
    136c:	08 95       	ret

0000136e <__fp_zero>:
    136e:	e8 94       	clt

00001370 <__fp_szero>:
    1370:	bb 27       	eor	r27, r27
    1372:	66 27       	eor	r22, r22
    1374:	77 27       	eor	r23, r23
    1376:	cb 01       	movw	r24, r22
    1378:	97 f9       	bld	r25, 7
    137a:	08 95       	ret

0000137c <__mulsf3>:
    137c:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__mulsf3x>
    1380:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_round>
    1384:	0e 94 76 09 	call	0x12ec	; 0x12ec <__fp_pscA>
    1388:	38 f0       	brcs	.+14     	; 0x1398 <__mulsf3+0x1c>
    138a:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__fp_pscB>
    138e:	20 f0       	brcs	.+8      	; 0x1398 <__mulsf3+0x1c>
    1390:	95 23       	and	r25, r21
    1392:	11 f0       	breq	.+4      	; 0x1398 <__mulsf3+0x1c>
    1394:	0c 94 6d 09 	jmp	0x12da	; 0x12da <__fp_inf>
    1398:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__fp_nan>
    139c:	11 24       	eor	r1, r1
    139e:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_szero>

000013a2 <__mulsf3x>:
    13a2:	0e 94 95 09 	call	0x132a	; 0x132a <__fp_split3>
    13a6:	70 f3       	brcs	.-36     	; 0x1384 <__mulsf3+0x8>

000013a8 <__mulsf3_pse>:
    13a8:	95 9f       	mul	r25, r21
    13aa:	c1 f3       	breq	.-16     	; 0x139c <__mulsf3+0x20>
    13ac:	95 0f       	add	r25, r21
    13ae:	50 e0       	ldi	r21, 0x00	; 0
    13b0:	55 1f       	adc	r21, r21
    13b2:	62 9f       	mul	r22, r18
    13b4:	f0 01       	movw	r30, r0
    13b6:	72 9f       	mul	r23, r18
    13b8:	bb 27       	eor	r27, r27
    13ba:	f0 0d       	add	r31, r0
    13bc:	b1 1d       	adc	r27, r1
    13be:	63 9f       	mul	r22, r19
    13c0:	aa 27       	eor	r26, r26
    13c2:	f0 0d       	add	r31, r0
    13c4:	b1 1d       	adc	r27, r1
    13c6:	aa 1f       	adc	r26, r26
    13c8:	64 9f       	mul	r22, r20
    13ca:	66 27       	eor	r22, r22
    13cc:	b0 0d       	add	r27, r0
    13ce:	a1 1d       	adc	r26, r1
    13d0:	66 1f       	adc	r22, r22
    13d2:	82 9f       	mul	r24, r18
    13d4:	22 27       	eor	r18, r18
    13d6:	b0 0d       	add	r27, r0
    13d8:	a1 1d       	adc	r26, r1
    13da:	62 1f       	adc	r22, r18
    13dc:	73 9f       	mul	r23, r19
    13de:	b0 0d       	add	r27, r0
    13e0:	a1 1d       	adc	r26, r1
    13e2:	62 1f       	adc	r22, r18
    13e4:	83 9f       	mul	r24, r19
    13e6:	a0 0d       	add	r26, r0
    13e8:	61 1d       	adc	r22, r1
    13ea:	22 1f       	adc	r18, r18
    13ec:	74 9f       	mul	r23, r20
    13ee:	33 27       	eor	r19, r19
    13f0:	a0 0d       	add	r26, r0
    13f2:	61 1d       	adc	r22, r1
    13f4:	23 1f       	adc	r18, r19
    13f6:	84 9f       	mul	r24, r20
    13f8:	60 0d       	add	r22, r0
    13fa:	21 1d       	adc	r18, r1
    13fc:	82 2f       	mov	r24, r18
    13fe:	76 2f       	mov	r23, r22
    1400:	6a 2f       	mov	r22, r26
    1402:	11 24       	eor	r1, r1
    1404:	9f 57       	subi	r25, 0x7F	; 127
    1406:	50 40       	sbci	r21, 0x00	; 0
    1408:	9a f0       	brmi	.+38     	; 0x1430 <__mulsf3_pse+0x88>
    140a:	f1 f0       	breq	.+60     	; 0x1448 <__mulsf3_pse+0xa0>
    140c:	88 23       	and	r24, r24
    140e:	4a f0       	brmi	.+18     	; 0x1422 <__mulsf3_pse+0x7a>
    1410:	ee 0f       	add	r30, r30
    1412:	ff 1f       	adc	r31, r31
    1414:	bb 1f       	adc	r27, r27
    1416:	66 1f       	adc	r22, r22
    1418:	77 1f       	adc	r23, r23
    141a:	88 1f       	adc	r24, r24
    141c:	91 50       	subi	r25, 0x01	; 1
    141e:	50 40       	sbci	r21, 0x00	; 0
    1420:	a9 f7       	brne	.-22     	; 0x140c <__mulsf3_pse+0x64>
    1422:	9e 3f       	cpi	r25, 0xFE	; 254
    1424:	51 05       	cpc	r21, r1
    1426:	80 f0       	brcs	.+32     	; 0x1448 <__mulsf3_pse+0xa0>
    1428:	0c 94 6d 09 	jmp	0x12da	; 0x12da <__fp_inf>
    142c:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_szero>
    1430:	5f 3f       	cpi	r21, 0xFF	; 255
    1432:	e4 f3       	brlt	.-8      	; 0x142c <__mulsf3_pse+0x84>
    1434:	98 3e       	cpi	r25, 0xE8	; 232
    1436:	d4 f3       	brlt	.-12     	; 0x142c <__mulsf3_pse+0x84>
    1438:	86 95       	lsr	r24
    143a:	77 95       	ror	r23
    143c:	67 95       	ror	r22
    143e:	b7 95       	ror	r27
    1440:	f7 95       	ror	r31
    1442:	e7 95       	ror	r30
    1444:	9f 5f       	subi	r25, 0xFF	; 255
    1446:	c1 f7       	brne	.-16     	; 0x1438 <__mulsf3_pse+0x90>
    1448:	fe 2b       	or	r31, r30
    144a:	88 0f       	add	r24, r24
    144c:	91 1d       	adc	r25, r1
    144e:	96 95       	lsr	r25
    1450:	87 95       	ror	r24
    1452:	97 f9       	bld	r25, 7
    1454:	08 95       	ret

00001456 <vfprintf>:
    1456:	a0 e1       	ldi	r26, 0x10	; 16
    1458:	b0 e0       	ldi	r27, 0x00	; 0
    145a:	e1 e3       	ldi	r30, 0x31	; 49
    145c:	fa e0       	ldi	r31, 0x0A	; 10
    145e:	0c 94 a8 0d 	jmp	0x1b50	; 0x1b50 <__prologue_saves__>
    1462:	7c 01       	movw	r14, r24
    1464:	1b 01       	movw	r2, r22
    1466:	6a 01       	movw	r12, r20
    1468:	fc 01       	movw	r30, r24
    146a:	17 82       	std	Z+7, r1	; 0x07
    146c:	16 82       	std	Z+6, r1	; 0x06
    146e:	83 81       	ldd	r24, Z+3	; 0x03
    1470:	81 ff       	sbrs	r24, 1
    1472:	44 c3       	rjmp	.+1672   	; 0x1afc <vfprintf+0x6a6>
    1474:	9e 01       	movw	r18, r28
    1476:	2f 5f       	subi	r18, 0xFF	; 255
    1478:	3f 4f       	sbci	r19, 0xFF	; 255
    147a:	39 01       	movw	r6, r18
    147c:	f7 01       	movw	r30, r14
    147e:	93 81       	ldd	r25, Z+3	; 0x03
    1480:	f1 01       	movw	r30, r2
    1482:	93 fd       	sbrc	r25, 3
    1484:	85 91       	lpm	r24, Z+
    1486:	93 ff       	sbrs	r25, 3
    1488:	81 91       	ld	r24, Z+
    148a:	1f 01       	movw	r2, r30
    148c:	88 23       	and	r24, r24
    148e:	09 f4       	brne	.+2      	; 0x1492 <vfprintf+0x3c>
    1490:	31 c3       	rjmp	.+1634   	; 0x1af4 <vfprintf+0x69e>
    1492:	85 32       	cpi	r24, 0x25	; 37
    1494:	39 f4       	brne	.+14     	; 0x14a4 <vfprintf+0x4e>
    1496:	93 fd       	sbrc	r25, 3
    1498:	85 91       	lpm	r24, Z+
    149a:	93 ff       	sbrs	r25, 3
    149c:	81 91       	ld	r24, Z+
    149e:	1f 01       	movw	r2, r30
    14a0:	85 32       	cpi	r24, 0x25	; 37
    14a2:	39 f4       	brne	.+14     	; 0x14b2 <vfprintf+0x5c>
    14a4:	b7 01       	movw	r22, r14
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    14ac:	56 01       	movw	r10, r12
    14ae:	65 01       	movw	r12, r10
    14b0:	e5 cf       	rjmp	.-54     	; 0x147c <vfprintf+0x26>
    14b2:	10 e0       	ldi	r17, 0x00	; 0
    14b4:	51 2c       	mov	r5, r1
    14b6:	91 2c       	mov	r9, r1
    14b8:	ff e1       	ldi	r31, 0x1F	; 31
    14ba:	f9 15       	cp	r31, r9
    14bc:	d8 f0       	brcs	.+54     	; 0x14f4 <vfprintf+0x9e>
    14be:	8b 32       	cpi	r24, 0x2B	; 43
    14c0:	79 f0       	breq	.+30     	; 0x14e0 <vfprintf+0x8a>
    14c2:	38 f4       	brcc	.+14     	; 0x14d2 <vfprintf+0x7c>
    14c4:	80 32       	cpi	r24, 0x20	; 32
    14c6:	79 f0       	breq	.+30     	; 0x14e6 <vfprintf+0x90>
    14c8:	83 32       	cpi	r24, 0x23	; 35
    14ca:	a1 f4       	brne	.+40     	; 0x14f4 <vfprintf+0x9e>
    14cc:	f9 2d       	mov	r31, r9
    14ce:	f0 61       	ori	r31, 0x10	; 16
    14d0:	2e c0       	rjmp	.+92     	; 0x152e <vfprintf+0xd8>
    14d2:	8d 32       	cpi	r24, 0x2D	; 45
    14d4:	61 f0       	breq	.+24     	; 0x14ee <vfprintf+0x98>
    14d6:	80 33       	cpi	r24, 0x30	; 48
    14d8:	69 f4       	brne	.+26     	; 0x14f4 <vfprintf+0x9e>
    14da:	29 2d       	mov	r18, r9
    14dc:	21 60       	ori	r18, 0x01	; 1
    14de:	2d c0       	rjmp	.+90     	; 0x153a <vfprintf+0xe4>
    14e0:	39 2d       	mov	r19, r9
    14e2:	32 60       	ori	r19, 0x02	; 2
    14e4:	93 2e       	mov	r9, r19
    14e6:	89 2d       	mov	r24, r9
    14e8:	84 60       	ori	r24, 0x04	; 4
    14ea:	98 2e       	mov	r9, r24
    14ec:	2a c0       	rjmp	.+84     	; 0x1542 <vfprintf+0xec>
    14ee:	e9 2d       	mov	r30, r9
    14f0:	e8 60       	ori	r30, 0x08	; 8
    14f2:	15 c0       	rjmp	.+42     	; 0x151e <vfprintf+0xc8>
    14f4:	97 fc       	sbrc	r9, 7
    14f6:	2d c0       	rjmp	.+90     	; 0x1552 <vfprintf+0xfc>
    14f8:	20 ed       	ldi	r18, 0xD0	; 208
    14fa:	28 0f       	add	r18, r24
    14fc:	2a 30       	cpi	r18, 0x0A	; 10
    14fe:	88 f4       	brcc	.+34     	; 0x1522 <vfprintf+0xcc>
    1500:	96 fe       	sbrs	r9, 6
    1502:	06 c0       	rjmp	.+12     	; 0x1510 <vfprintf+0xba>
    1504:	3a e0       	ldi	r19, 0x0A	; 10
    1506:	13 9f       	mul	r17, r19
    1508:	20 0d       	add	r18, r0
    150a:	11 24       	eor	r1, r1
    150c:	12 2f       	mov	r17, r18
    150e:	19 c0       	rjmp	.+50     	; 0x1542 <vfprintf+0xec>
    1510:	8a e0       	ldi	r24, 0x0A	; 10
    1512:	58 9e       	mul	r5, r24
    1514:	20 0d       	add	r18, r0
    1516:	11 24       	eor	r1, r1
    1518:	52 2e       	mov	r5, r18
    151a:	e9 2d       	mov	r30, r9
    151c:	e0 62       	ori	r30, 0x20	; 32
    151e:	9e 2e       	mov	r9, r30
    1520:	10 c0       	rjmp	.+32     	; 0x1542 <vfprintf+0xec>
    1522:	8e 32       	cpi	r24, 0x2E	; 46
    1524:	31 f4       	brne	.+12     	; 0x1532 <vfprintf+0xdc>
    1526:	96 fc       	sbrc	r9, 6
    1528:	e5 c2       	rjmp	.+1482   	; 0x1af4 <vfprintf+0x69e>
    152a:	f9 2d       	mov	r31, r9
    152c:	f0 64       	ori	r31, 0x40	; 64
    152e:	9f 2e       	mov	r9, r31
    1530:	08 c0       	rjmp	.+16     	; 0x1542 <vfprintf+0xec>
    1532:	8c 36       	cpi	r24, 0x6C	; 108
    1534:	21 f4       	brne	.+8      	; 0x153e <vfprintf+0xe8>
    1536:	29 2d       	mov	r18, r9
    1538:	20 68       	ori	r18, 0x80	; 128
    153a:	92 2e       	mov	r9, r18
    153c:	02 c0       	rjmp	.+4      	; 0x1542 <vfprintf+0xec>
    153e:	88 36       	cpi	r24, 0x68	; 104
    1540:	41 f4       	brne	.+16     	; 0x1552 <vfprintf+0xfc>
    1542:	f1 01       	movw	r30, r2
    1544:	93 fd       	sbrc	r25, 3
    1546:	85 91       	lpm	r24, Z+
    1548:	93 ff       	sbrs	r25, 3
    154a:	81 91       	ld	r24, Z+
    154c:	1f 01       	movw	r2, r30
    154e:	81 11       	cpse	r24, r1
    1550:	b3 cf       	rjmp	.-154    	; 0x14b8 <vfprintf+0x62>
    1552:	9b eb       	ldi	r25, 0xBB	; 187
    1554:	98 0f       	add	r25, r24
    1556:	93 30       	cpi	r25, 0x03	; 3
    1558:	20 f4       	brcc	.+8      	; 0x1562 <vfprintf+0x10c>
    155a:	99 2d       	mov	r25, r9
    155c:	90 61       	ori	r25, 0x10	; 16
    155e:	80 5e       	subi	r24, 0xE0	; 224
    1560:	07 c0       	rjmp	.+14     	; 0x1570 <vfprintf+0x11a>
    1562:	9b e9       	ldi	r25, 0x9B	; 155
    1564:	98 0f       	add	r25, r24
    1566:	93 30       	cpi	r25, 0x03	; 3
    1568:	08 f0       	brcs	.+2      	; 0x156c <vfprintf+0x116>
    156a:	66 c1       	rjmp	.+716    	; 0x1838 <vfprintf+0x3e2>
    156c:	99 2d       	mov	r25, r9
    156e:	9f 7e       	andi	r25, 0xEF	; 239
    1570:	96 ff       	sbrs	r25, 6
    1572:	16 e0       	ldi	r17, 0x06	; 6
    1574:	9f 73       	andi	r25, 0x3F	; 63
    1576:	99 2e       	mov	r9, r25
    1578:	85 36       	cpi	r24, 0x65	; 101
    157a:	19 f4       	brne	.+6      	; 0x1582 <vfprintf+0x12c>
    157c:	90 64       	ori	r25, 0x40	; 64
    157e:	99 2e       	mov	r9, r25
    1580:	08 c0       	rjmp	.+16     	; 0x1592 <vfprintf+0x13c>
    1582:	86 36       	cpi	r24, 0x66	; 102
    1584:	21 f4       	brne	.+8      	; 0x158e <vfprintf+0x138>
    1586:	39 2f       	mov	r19, r25
    1588:	30 68       	ori	r19, 0x80	; 128
    158a:	93 2e       	mov	r9, r19
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <vfprintf+0x13c>
    158e:	11 11       	cpse	r17, r1
    1590:	11 50       	subi	r17, 0x01	; 1
    1592:	97 fe       	sbrs	r9, 7
    1594:	07 c0       	rjmp	.+14     	; 0x15a4 <vfprintf+0x14e>
    1596:	1c 33       	cpi	r17, 0x3C	; 60
    1598:	50 f4       	brcc	.+20     	; 0x15ae <vfprintf+0x158>
    159a:	44 24       	eor	r4, r4
    159c:	43 94       	inc	r4
    159e:	41 0e       	add	r4, r17
    15a0:	27 e0       	ldi	r18, 0x07	; 7
    15a2:	0b c0       	rjmp	.+22     	; 0x15ba <vfprintf+0x164>
    15a4:	18 30       	cpi	r17, 0x08	; 8
    15a6:	38 f0       	brcs	.+14     	; 0x15b6 <vfprintf+0x160>
    15a8:	27 e0       	ldi	r18, 0x07	; 7
    15aa:	17 e0       	ldi	r17, 0x07	; 7
    15ac:	05 c0       	rjmp	.+10     	; 0x15b8 <vfprintf+0x162>
    15ae:	27 e0       	ldi	r18, 0x07	; 7
    15b0:	9c e3       	ldi	r25, 0x3C	; 60
    15b2:	49 2e       	mov	r4, r25
    15b4:	02 c0       	rjmp	.+4      	; 0x15ba <vfprintf+0x164>
    15b6:	21 2f       	mov	r18, r17
    15b8:	41 2c       	mov	r4, r1
    15ba:	56 01       	movw	r10, r12
    15bc:	84 e0       	ldi	r24, 0x04	; 4
    15be:	a8 0e       	add	r10, r24
    15c0:	b1 1c       	adc	r11, r1
    15c2:	f6 01       	movw	r30, r12
    15c4:	60 81       	ld	r22, Z
    15c6:	71 81       	ldd	r23, Z+1	; 0x01
    15c8:	82 81       	ldd	r24, Z+2	; 0x02
    15ca:	93 81       	ldd	r25, Z+3	; 0x03
    15cc:	04 2d       	mov	r16, r4
    15ce:	a3 01       	movw	r20, r6
    15d0:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <__ftoa_engine>
    15d4:	6c 01       	movw	r12, r24
    15d6:	f9 81       	ldd	r31, Y+1	; 0x01
    15d8:	fc 87       	std	Y+12, r31	; 0x0c
    15da:	f0 ff       	sbrs	r31, 0
    15dc:	02 c0       	rjmp	.+4      	; 0x15e2 <vfprintf+0x18c>
    15de:	f3 ff       	sbrs	r31, 3
    15e0:	06 c0       	rjmp	.+12     	; 0x15ee <vfprintf+0x198>
    15e2:	91 fc       	sbrc	r9, 1
    15e4:	06 c0       	rjmp	.+12     	; 0x15f2 <vfprintf+0x19c>
    15e6:	92 fe       	sbrs	r9, 2
    15e8:	06 c0       	rjmp	.+12     	; 0x15f6 <vfprintf+0x1a0>
    15ea:	00 e2       	ldi	r16, 0x20	; 32
    15ec:	05 c0       	rjmp	.+10     	; 0x15f8 <vfprintf+0x1a2>
    15ee:	0d e2       	ldi	r16, 0x2D	; 45
    15f0:	03 c0       	rjmp	.+6      	; 0x15f8 <vfprintf+0x1a2>
    15f2:	0b e2       	ldi	r16, 0x2B	; 43
    15f4:	01 c0       	rjmp	.+2      	; 0x15f8 <vfprintf+0x1a2>
    15f6:	00 e0       	ldi	r16, 0x00	; 0
    15f8:	8c 85       	ldd	r24, Y+12	; 0x0c
    15fa:	8c 70       	andi	r24, 0x0C	; 12
    15fc:	19 f0       	breq	.+6      	; 0x1604 <vfprintf+0x1ae>
    15fe:	01 11       	cpse	r16, r1
    1600:	5a c2       	rjmp	.+1204   	; 0x1ab6 <vfprintf+0x660>
    1602:	9b c2       	rjmp	.+1334   	; 0x1b3a <vfprintf+0x6e4>
    1604:	97 fe       	sbrs	r9, 7
    1606:	10 c0       	rjmp	.+32     	; 0x1628 <vfprintf+0x1d2>
    1608:	4c 0c       	add	r4, r12
    160a:	fc 85       	ldd	r31, Y+12	; 0x0c
    160c:	f4 ff       	sbrs	r31, 4
    160e:	04 c0       	rjmp	.+8      	; 0x1618 <vfprintf+0x1c2>
    1610:	8a 81       	ldd	r24, Y+2	; 0x02
    1612:	81 33       	cpi	r24, 0x31	; 49
    1614:	09 f4       	brne	.+2      	; 0x1618 <vfprintf+0x1c2>
    1616:	4a 94       	dec	r4
    1618:	14 14       	cp	r1, r4
    161a:	74 f5       	brge	.+92     	; 0x1678 <vfprintf+0x222>
    161c:	28 e0       	ldi	r18, 0x08	; 8
    161e:	24 15       	cp	r18, r4
    1620:	78 f5       	brcc	.+94     	; 0x1680 <vfprintf+0x22a>
    1622:	88 e0       	ldi	r24, 0x08	; 8
    1624:	48 2e       	mov	r4, r24
    1626:	2c c0       	rjmp	.+88     	; 0x1680 <vfprintf+0x22a>
    1628:	96 fc       	sbrc	r9, 6
    162a:	2a c0       	rjmp	.+84     	; 0x1680 <vfprintf+0x22a>
    162c:	81 2f       	mov	r24, r17
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	8c 15       	cp	r24, r12
    1632:	9d 05       	cpc	r25, r13
    1634:	9c f0       	brlt	.+38     	; 0x165c <vfprintf+0x206>
    1636:	3c ef       	ldi	r19, 0xFC	; 252
    1638:	c3 16       	cp	r12, r19
    163a:	3f ef       	ldi	r19, 0xFF	; 255
    163c:	d3 06       	cpc	r13, r19
    163e:	74 f0       	brlt	.+28     	; 0x165c <vfprintf+0x206>
    1640:	89 2d       	mov	r24, r9
    1642:	80 68       	ori	r24, 0x80	; 128
    1644:	98 2e       	mov	r9, r24
    1646:	0a c0       	rjmp	.+20     	; 0x165c <vfprintf+0x206>
    1648:	e2 e0       	ldi	r30, 0x02	; 2
    164a:	f0 e0       	ldi	r31, 0x00	; 0
    164c:	ec 0f       	add	r30, r28
    164e:	fd 1f       	adc	r31, r29
    1650:	e1 0f       	add	r30, r17
    1652:	f1 1d       	adc	r31, r1
    1654:	80 81       	ld	r24, Z
    1656:	80 33       	cpi	r24, 0x30	; 48
    1658:	19 f4       	brne	.+6      	; 0x1660 <vfprintf+0x20a>
    165a:	11 50       	subi	r17, 0x01	; 1
    165c:	11 11       	cpse	r17, r1
    165e:	f4 cf       	rjmp	.-24     	; 0x1648 <vfprintf+0x1f2>
    1660:	97 fe       	sbrs	r9, 7
    1662:	0e c0       	rjmp	.+28     	; 0x1680 <vfprintf+0x22a>
    1664:	44 24       	eor	r4, r4
    1666:	43 94       	inc	r4
    1668:	41 0e       	add	r4, r17
    166a:	81 2f       	mov	r24, r17
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	c8 16       	cp	r12, r24
    1670:	d9 06       	cpc	r13, r25
    1672:	2c f4       	brge	.+10     	; 0x167e <vfprintf+0x228>
    1674:	1c 19       	sub	r17, r12
    1676:	04 c0       	rjmp	.+8      	; 0x1680 <vfprintf+0x22a>
    1678:	44 24       	eor	r4, r4
    167a:	43 94       	inc	r4
    167c:	01 c0       	rjmp	.+2      	; 0x1680 <vfprintf+0x22a>
    167e:	10 e0       	ldi	r17, 0x00	; 0
    1680:	97 fe       	sbrs	r9, 7
    1682:	06 c0       	rjmp	.+12     	; 0x1690 <vfprintf+0x23a>
    1684:	1c 14       	cp	r1, r12
    1686:	1d 04       	cpc	r1, r13
    1688:	34 f4       	brge	.+12     	; 0x1696 <vfprintf+0x240>
    168a:	c6 01       	movw	r24, r12
    168c:	01 96       	adiw	r24, 0x01	; 1
    168e:	05 c0       	rjmp	.+10     	; 0x169a <vfprintf+0x244>
    1690:	85 e0       	ldi	r24, 0x05	; 5
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	02 c0       	rjmp	.+4      	; 0x169a <vfprintf+0x244>
    1696:	81 e0       	ldi	r24, 0x01	; 1
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	01 11       	cpse	r16, r1
    169c:	01 96       	adiw	r24, 0x01	; 1
    169e:	11 23       	and	r17, r17
    16a0:	31 f0       	breq	.+12     	; 0x16ae <vfprintf+0x258>
    16a2:	21 2f       	mov	r18, r17
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	2f 5f       	subi	r18, 0xFF	; 255
    16a8:	3f 4f       	sbci	r19, 0xFF	; 255
    16aa:	82 0f       	add	r24, r18
    16ac:	93 1f       	adc	r25, r19
    16ae:	25 2d       	mov	r18, r5
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    16b2:	82 17       	cp	r24, r18
    16b4:	93 07       	cpc	r25, r19
    16b6:	14 f4       	brge	.+4      	; 0x16bc <vfprintf+0x266>
    16b8:	58 1a       	sub	r5, r24
    16ba:	01 c0       	rjmp	.+2      	; 0x16be <vfprintf+0x268>
    16bc:	51 2c       	mov	r5, r1
    16be:	89 2d       	mov	r24, r9
    16c0:	89 70       	andi	r24, 0x09	; 9
    16c2:	49 f4       	brne	.+18     	; 0x16d6 <vfprintf+0x280>
    16c4:	55 20       	and	r5, r5
    16c6:	39 f0       	breq	.+14     	; 0x16d6 <vfprintf+0x280>
    16c8:	b7 01       	movw	r22, r14
    16ca:	80 e2       	ldi	r24, 0x20	; 32
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    16d2:	5a 94       	dec	r5
    16d4:	f7 cf       	rjmp	.-18     	; 0x16c4 <vfprintf+0x26e>
    16d6:	00 23       	and	r16, r16
    16d8:	29 f0       	breq	.+10     	; 0x16e4 <vfprintf+0x28e>
    16da:	b7 01       	movw	r22, r14
    16dc:	80 2f       	mov	r24, r16
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    16e4:	93 fc       	sbrc	r9, 3
    16e6:	09 c0       	rjmp	.+18     	; 0x16fa <vfprintf+0x2a4>
    16e8:	55 20       	and	r5, r5
    16ea:	39 f0       	breq	.+14     	; 0x16fa <vfprintf+0x2a4>
    16ec:	b7 01       	movw	r22, r14
    16ee:	80 e3       	ldi	r24, 0x30	; 48
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    16f6:	5a 94       	dec	r5
    16f8:	f7 cf       	rjmp	.-18     	; 0x16e8 <vfprintf+0x292>
    16fa:	97 fe       	sbrs	r9, 7
    16fc:	4c c0       	rjmp	.+152    	; 0x1796 <vfprintf+0x340>
    16fe:	46 01       	movw	r8, r12
    1700:	d7 fe       	sbrs	r13, 7
    1702:	02 c0       	rjmp	.+4      	; 0x1708 <vfprintf+0x2b2>
    1704:	81 2c       	mov	r8, r1
    1706:	91 2c       	mov	r9, r1
    1708:	c6 01       	movw	r24, r12
    170a:	88 19       	sub	r24, r8
    170c:	99 09       	sbc	r25, r9
    170e:	f3 01       	movw	r30, r6
    1710:	e8 0f       	add	r30, r24
    1712:	f9 1f       	adc	r31, r25
    1714:	fe 87       	std	Y+14, r31	; 0x0e
    1716:	ed 87       	std	Y+13, r30	; 0x0d
    1718:	96 01       	movw	r18, r12
    171a:	24 19       	sub	r18, r4
    171c:	31 09       	sbc	r19, r1
    171e:	38 8b       	std	Y+16, r19	; 0x10
    1720:	2f 87       	std	Y+15, r18	; 0x0f
    1722:	01 2f       	mov	r16, r17
    1724:	10 e0       	ldi	r17, 0x00	; 0
    1726:	11 95       	neg	r17
    1728:	01 95       	neg	r16
    172a:	11 09       	sbc	r17, r1
    172c:	3f ef       	ldi	r19, 0xFF	; 255
    172e:	83 16       	cp	r8, r19
    1730:	93 06       	cpc	r9, r19
    1732:	29 f4       	brne	.+10     	; 0x173e <vfprintf+0x2e8>
    1734:	b7 01       	movw	r22, r14
    1736:	8e e2       	ldi	r24, 0x2E	; 46
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    173e:	c8 14       	cp	r12, r8
    1740:	d9 04       	cpc	r13, r9
    1742:	4c f0       	brlt	.+18     	; 0x1756 <vfprintf+0x300>
    1744:	8f 85       	ldd	r24, Y+15	; 0x0f
    1746:	98 89       	ldd	r25, Y+16	; 0x10
    1748:	88 15       	cp	r24, r8
    174a:	99 05       	cpc	r25, r9
    174c:	24 f4       	brge	.+8      	; 0x1756 <vfprintf+0x300>
    174e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1750:	fe 85       	ldd	r31, Y+14	; 0x0e
    1752:	81 81       	ldd	r24, Z+1	; 0x01
    1754:	01 c0       	rjmp	.+2      	; 0x1758 <vfprintf+0x302>
    1756:	80 e3       	ldi	r24, 0x30	; 48
    1758:	f1 e0       	ldi	r31, 0x01	; 1
    175a:	8f 1a       	sub	r8, r31
    175c:	91 08       	sbc	r9, r1
    175e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1760:	3e 85       	ldd	r19, Y+14	; 0x0e
    1762:	2f 5f       	subi	r18, 0xFF	; 255
    1764:	3f 4f       	sbci	r19, 0xFF	; 255
    1766:	3e 87       	std	Y+14, r19	; 0x0e
    1768:	2d 87       	std	Y+13, r18	; 0x0d
    176a:	80 16       	cp	r8, r16
    176c:	91 06       	cpc	r9, r17
    176e:	2c f0       	brlt	.+10     	; 0x177a <vfprintf+0x324>
    1770:	b7 01       	movw	r22, r14
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1778:	d9 cf       	rjmp	.-78     	; 0x172c <vfprintf+0x2d6>
    177a:	c8 14       	cp	r12, r8
    177c:	d9 04       	cpc	r13, r9
    177e:	41 f4       	brne	.+16     	; 0x1790 <vfprintf+0x33a>
    1780:	9a 81       	ldd	r25, Y+2	; 0x02
    1782:	96 33       	cpi	r25, 0x36	; 54
    1784:	20 f4       	brcc	.+8      	; 0x178e <vfprintf+0x338>
    1786:	95 33       	cpi	r25, 0x35	; 53
    1788:	19 f4       	brne	.+6      	; 0x1790 <vfprintf+0x33a>
    178a:	3c 85       	ldd	r19, Y+12	; 0x0c
    178c:	34 ff       	sbrs	r19, 4
    178e:	81 e3       	ldi	r24, 0x31	; 49
    1790:	b7 01       	movw	r22, r14
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	4e c0       	rjmp	.+156    	; 0x1832 <vfprintf+0x3dc>
    1796:	8a 81       	ldd	r24, Y+2	; 0x02
    1798:	81 33       	cpi	r24, 0x31	; 49
    179a:	19 f0       	breq	.+6      	; 0x17a2 <vfprintf+0x34c>
    179c:	9c 85       	ldd	r25, Y+12	; 0x0c
    179e:	9f 7e       	andi	r25, 0xEF	; 239
    17a0:	9c 87       	std	Y+12, r25	; 0x0c
    17a2:	b7 01       	movw	r22, r14
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    17aa:	11 11       	cpse	r17, r1
    17ac:	05 c0       	rjmp	.+10     	; 0x17b8 <vfprintf+0x362>
    17ae:	94 fc       	sbrc	r9, 4
    17b0:	18 c0       	rjmp	.+48     	; 0x17e2 <vfprintf+0x38c>
    17b2:	85 e6       	ldi	r24, 0x65	; 101
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	17 c0       	rjmp	.+46     	; 0x17e6 <vfprintf+0x390>
    17b8:	b7 01       	movw	r22, r14
    17ba:	8e e2       	ldi	r24, 0x2E	; 46
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    17c2:	1e 5f       	subi	r17, 0xFE	; 254
    17c4:	82 e0       	ldi	r24, 0x02	; 2
    17c6:	01 e0       	ldi	r16, 0x01	; 1
    17c8:	08 0f       	add	r16, r24
    17ca:	f3 01       	movw	r30, r6
    17cc:	e8 0f       	add	r30, r24
    17ce:	f1 1d       	adc	r31, r1
    17d0:	80 81       	ld	r24, Z
    17d2:	b7 01       	movw	r22, r14
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    17da:	80 2f       	mov	r24, r16
    17dc:	01 13       	cpse	r16, r17
    17de:	f3 cf       	rjmp	.-26     	; 0x17c6 <vfprintf+0x370>
    17e0:	e6 cf       	rjmp	.-52     	; 0x17ae <vfprintf+0x358>
    17e2:	85 e4       	ldi	r24, 0x45	; 69
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	b7 01       	movw	r22, r14
    17e8:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    17ec:	d7 fc       	sbrc	r13, 7
    17ee:	06 c0       	rjmp	.+12     	; 0x17fc <vfprintf+0x3a6>
    17f0:	c1 14       	cp	r12, r1
    17f2:	d1 04       	cpc	r13, r1
    17f4:	41 f4       	brne	.+16     	; 0x1806 <vfprintf+0x3b0>
    17f6:	ec 85       	ldd	r30, Y+12	; 0x0c
    17f8:	e4 ff       	sbrs	r30, 4
    17fa:	05 c0       	rjmp	.+10     	; 0x1806 <vfprintf+0x3b0>
    17fc:	d1 94       	neg	r13
    17fe:	c1 94       	neg	r12
    1800:	d1 08       	sbc	r13, r1
    1802:	8d e2       	ldi	r24, 0x2D	; 45
    1804:	01 c0       	rjmp	.+2      	; 0x1808 <vfprintf+0x3b2>
    1806:	8b e2       	ldi	r24, 0x2B	; 43
    1808:	b7 01       	movw	r22, r14
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1810:	80 e3       	ldi	r24, 0x30	; 48
    1812:	2a e0       	ldi	r18, 0x0A	; 10
    1814:	c2 16       	cp	r12, r18
    1816:	d1 04       	cpc	r13, r1
    1818:	2c f0       	brlt	.+10     	; 0x1824 <vfprintf+0x3ce>
    181a:	8f 5f       	subi	r24, 0xFF	; 255
    181c:	fa e0       	ldi	r31, 0x0A	; 10
    181e:	cf 1a       	sub	r12, r31
    1820:	d1 08       	sbc	r13, r1
    1822:	f7 cf       	rjmp	.-18     	; 0x1812 <vfprintf+0x3bc>
    1824:	b7 01       	movw	r22, r14
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    182c:	b7 01       	movw	r22, r14
    182e:	c6 01       	movw	r24, r12
    1830:	c0 96       	adiw	r24, 0x30	; 48
    1832:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1836:	54 c1       	rjmp	.+680    	; 0x1ae0 <vfprintf+0x68a>
    1838:	83 36       	cpi	r24, 0x63	; 99
    183a:	31 f0       	breq	.+12     	; 0x1848 <vfprintf+0x3f2>
    183c:	83 37       	cpi	r24, 0x73	; 115
    183e:	79 f0       	breq	.+30     	; 0x185e <vfprintf+0x408>
    1840:	83 35       	cpi	r24, 0x53	; 83
    1842:	09 f0       	breq	.+2      	; 0x1846 <vfprintf+0x3f0>
    1844:	56 c0       	rjmp	.+172    	; 0x18f2 <vfprintf+0x49c>
    1846:	20 c0       	rjmp	.+64     	; 0x1888 <vfprintf+0x432>
    1848:	56 01       	movw	r10, r12
    184a:	32 e0       	ldi	r19, 0x02	; 2
    184c:	a3 0e       	add	r10, r19
    184e:	b1 1c       	adc	r11, r1
    1850:	f6 01       	movw	r30, r12
    1852:	80 81       	ld	r24, Z
    1854:	89 83       	std	Y+1, r24	; 0x01
    1856:	01 e0       	ldi	r16, 0x01	; 1
    1858:	10 e0       	ldi	r17, 0x00	; 0
    185a:	63 01       	movw	r12, r6
    185c:	12 c0       	rjmp	.+36     	; 0x1882 <vfprintf+0x42c>
    185e:	56 01       	movw	r10, r12
    1860:	f2 e0       	ldi	r31, 0x02	; 2
    1862:	af 0e       	add	r10, r31
    1864:	b1 1c       	adc	r11, r1
    1866:	f6 01       	movw	r30, r12
    1868:	c0 80       	ld	r12, Z
    186a:	d1 80       	ldd	r13, Z+1	; 0x01
    186c:	96 fe       	sbrs	r9, 6
    186e:	03 c0       	rjmp	.+6      	; 0x1876 <vfprintf+0x420>
    1870:	61 2f       	mov	r22, r17
    1872:	70 e0       	ldi	r23, 0x00	; 0
    1874:	02 c0       	rjmp	.+4      	; 0x187a <vfprintf+0x424>
    1876:	6f ef       	ldi	r22, 0xFF	; 255
    1878:	7f ef       	ldi	r23, 0xFF	; 255
    187a:	c6 01       	movw	r24, r12
    187c:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <strnlen>
    1880:	8c 01       	movw	r16, r24
    1882:	f9 2d       	mov	r31, r9
    1884:	ff 77       	andi	r31, 0x7F	; 127
    1886:	14 c0       	rjmp	.+40     	; 0x18b0 <vfprintf+0x45a>
    1888:	56 01       	movw	r10, r12
    188a:	22 e0       	ldi	r18, 0x02	; 2
    188c:	a2 0e       	add	r10, r18
    188e:	b1 1c       	adc	r11, r1
    1890:	f6 01       	movw	r30, r12
    1892:	c0 80       	ld	r12, Z
    1894:	d1 80       	ldd	r13, Z+1	; 0x01
    1896:	96 fe       	sbrs	r9, 6
    1898:	03 c0       	rjmp	.+6      	; 0x18a0 <vfprintf+0x44a>
    189a:	61 2f       	mov	r22, r17
    189c:	70 e0       	ldi	r23, 0x00	; 0
    189e:	02 c0       	rjmp	.+4      	; 0x18a4 <vfprintf+0x44e>
    18a0:	6f ef       	ldi	r22, 0xFF	; 255
    18a2:	7f ef       	ldi	r23, 0xFF	; 255
    18a4:	c6 01       	movw	r24, r12
    18a6:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <strnlen_P>
    18aa:	8c 01       	movw	r16, r24
    18ac:	f9 2d       	mov	r31, r9
    18ae:	f0 68       	ori	r31, 0x80	; 128
    18b0:	9f 2e       	mov	r9, r31
    18b2:	f3 fd       	sbrc	r31, 3
    18b4:	1a c0       	rjmp	.+52     	; 0x18ea <vfprintf+0x494>
    18b6:	85 2d       	mov	r24, r5
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	08 17       	cp	r16, r24
    18bc:	19 07       	cpc	r17, r25
    18be:	a8 f4       	brcc	.+42     	; 0x18ea <vfprintf+0x494>
    18c0:	b7 01       	movw	r22, r14
    18c2:	80 e2       	ldi	r24, 0x20	; 32
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    18ca:	5a 94       	dec	r5
    18cc:	f4 cf       	rjmp	.-24     	; 0x18b6 <vfprintf+0x460>
    18ce:	f6 01       	movw	r30, r12
    18d0:	97 fc       	sbrc	r9, 7
    18d2:	85 91       	lpm	r24, Z+
    18d4:	97 fe       	sbrs	r9, 7
    18d6:	81 91       	ld	r24, Z+
    18d8:	6f 01       	movw	r12, r30
    18da:	b7 01       	movw	r22, r14
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    18e2:	51 10       	cpse	r5, r1
    18e4:	5a 94       	dec	r5
    18e6:	01 50       	subi	r16, 0x01	; 1
    18e8:	11 09       	sbc	r17, r1
    18ea:	01 15       	cp	r16, r1
    18ec:	11 05       	cpc	r17, r1
    18ee:	79 f7       	brne	.-34     	; 0x18ce <vfprintf+0x478>
    18f0:	f7 c0       	rjmp	.+494    	; 0x1ae0 <vfprintf+0x68a>
    18f2:	84 36       	cpi	r24, 0x64	; 100
    18f4:	11 f0       	breq	.+4      	; 0x18fa <vfprintf+0x4a4>
    18f6:	89 36       	cpi	r24, 0x69	; 105
    18f8:	61 f5       	brne	.+88     	; 0x1952 <vfprintf+0x4fc>
    18fa:	56 01       	movw	r10, r12
    18fc:	97 fe       	sbrs	r9, 7
    18fe:	09 c0       	rjmp	.+18     	; 0x1912 <vfprintf+0x4bc>
    1900:	24 e0       	ldi	r18, 0x04	; 4
    1902:	a2 0e       	add	r10, r18
    1904:	b1 1c       	adc	r11, r1
    1906:	f6 01       	movw	r30, r12
    1908:	60 81       	ld	r22, Z
    190a:	71 81       	ldd	r23, Z+1	; 0x01
    190c:	82 81       	ldd	r24, Z+2	; 0x02
    190e:	93 81       	ldd	r25, Z+3	; 0x03
    1910:	0a c0       	rjmp	.+20     	; 0x1926 <vfprintf+0x4d0>
    1912:	f2 e0       	ldi	r31, 0x02	; 2
    1914:	af 0e       	add	r10, r31
    1916:	b1 1c       	adc	r11, r1
    1918:	f6 01       	movw	r30, r12
    191a:	60 81       	ld	r22, Z
    191c:	71 81       	ldd	r23, Z+1	; 0x01
    191e:	07 2e       	mov	r0, r23
    1920:	00 0c       	add	r0, r0
    1922:	88 0b       	sbc	r24, r24
    1924:	99 0b       	sbc	r25, r25
    1926:	f9 2d       	mov	r31, r9
    1928:	ff 76       	andi	r31, 0x6F	; 111
    192a:	9f 2e       	mov	r9, r31
    192c:	97 ff       	sbrs	r25, 7
    192e:	09 c0       	rjmp	.+18     	; 0x1942 <vfprintf+0x4ec>
    1930:	90 95       	com	r25
    1932:	80 95       	com	r24
    1934:	70 95       	com	r23
    1936:	61 95       	neg	r22
    1938:	7f 4f       	sbci	r23, 0xFF	; 255
    193a:	8f 4f       	sbci	r24, 0xFF	; 255
    193c:	9f 4f       	sbci	r25, 0xFF	; 255
    193e:	f0 68       	ori	r31, 0x80	; 128
    1940:	9f 2e       	mov	r9, r31
    1942:	2a e0       	ldi	r18, 0x0A	; 10
    1944:	30 e0       	ldi	r19, 0x00	; 0
    1946:	a3 01       	movw	r20, r6
    1948:	0e 94 56 0f 	call	0x1eac	; 0x1eac <__ultoa_invert>
    194c:	c8 2e       	mov	r12, r24
    194e:	c6 18       	sub	r12, r6
    1950:	3f c0       	rjmp	.+126    	; 0x19d0 <vfprintf+0x57a>
    1952:	09 2d       	mov	r16, r9
    1954:	85 37       	cpi	r24, 0x75	; 117
    1956:	21 f4       	brne	.+8      	; 0x1960 <vfprintf+0x50a>
    1958:	0f 7e       	andi	r16, 0xEF	; 239
    195a:	2a e0       	ldi	r18, 0x0A	; 10
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	1d c0       	rjmp	.+58     	; 0x199a <vfprintf+0x544>
    1960:	09 7f       	andi	r16, 0xF9	; 249
    1962:	8f 36       	cpi	r24, 0x6F	; 111
    1964:	91 f0       	breq	.+36     	; 0x198a <vfprintf+0x534>
    1966:	18 f4       	brcc	.+6      	; 0x196e <vfprintf+0x518>
    1968:	88 35       	cpi	r24, 0x58	; 88
    196a:	59 f0       	breq	.+22     	; 0x1982 <vfprintf+0x52c>
    196c:	c3 c0       	rjmp	.+390    	; 0x1af4 <vfprintf+0x69e>
    196e:	80 37       	cpi	r24, 0x70	; 112
    1970:	19 f0       	breq	.+6      	; 0x1978 <vfprintf+0x522>
    1972:	88 37       	cpi	r24, 0x78	; 120
    1974:	11 f0       	breq	.+4      	; 0x197a <vfprintf+0x524>
    1976:	be c0       	rjmp	.+380    	; 0x1af4 <vfprintf+0x69e>
    1978:	00 61       	ori	r16, 0x10	; 16
    197a:	04 ff       	sbrs	r16, 4
    197c:	09 c0       	rjmp	.+18     	; 0x1990 <vfprintf+0x53a>
    197e:	04 60       	ori	r16, 0x04	; 4
    1980:	07 c0       	rjmp	.+14     	; 0x1990 <vfprintf+0x53a>
    1982:	94 fe       	sbrs	r9, 4
    1984:	08 c0       	rjmp	.+16     	; 0x1996 <vfprintf+0x540>
    1986:	06 60       	ori	r16, 0x06	; 6
    1988:	06 c0       	rjmp	.+12     	; 0x1996 <vfprintf+0x540>
    198a:	28 e0       	ldi	r18, 0x08	; 8
    198c:	30 e0       	ldi	r19, 0x00	; 0
    198e:	05 c0       	rjmp	.+10     	; 0x199a <vfprintf+0x544>
    1990:	20 e1       	ldi	r18, 0x10	; 16
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	02 c0       	rjmp	.+4      	; 0x199a <vfprintf+0x544>
    1996:	20 e1       	ldi	r18, 0x10	; 16
    1998:	32 e0       	ldi	r19, 0x02	; 2
    199a:	56 01       	movw	r10, r12
    199c:	07 ff       	sbrs	r16, 7
    199e:	09 c0       	rjmp	.+18     	; 0x19b2 <vfprintf+0x55c>
    19a0:	84 e0       	ldi	r24, 0x04	; 4
    19a2:	a8 0e       	add	r10, r24
    19a4:	b1 1c       	adc	r11, r1
    19a6:	f6 01       	movw	r30, r12
    19a8:	60 81       	ld	r22, Z
    19aa:	71 81       	ldd	r23, Z+1	; 0x01
    19ac:	82 81       	ldd	r24, Z+2	; 0x02
    19ae:	93 81       	ldd	r25, Z+3	; 0x03
    19b0:	08 c0       	rjmp	.+16     	; 0x19c2 <vfprintf+0x56c>
    19b2:	f2 e0       	ldi	r31, 0x02	; 2
    19b4:	af 0e       	add	r10, r31
    19b6:	b1 1c       	adc	r11, r1
    19b8:	f6 01       	movw	r30, r12
    19ba:	60 81       	ld	r22, Z
    19bc:	71 81       	ldd	r23, Z+1	; 0x01
    19be:	80 e0       	ldi	r24, 0x00	; 0
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	a3 01       	movw	r20, r6
    19c4:	0e 94 56 0f 	call	0x1eac	; 0x1eac <__ultoa_invert>
    19c8:	c8 2e       	mov	r12, r24
    19ca:	c6 18       	sub	r12, r6
    19cc:	0f 77       	andi	r16, 0x7F	; 127
    19ce:	90 2e       	mov	r9, r16
    19d0:	96 fe       	sbrs	r9, 6
    19d2:	0b c0       	rjmp	.+22     	; 0x19ea <vfprintf+0x594>
    19d4:	09 2d       	mov	r16, r9
    19d6:	0e 7f       	andi	r16, 0xFE	; 254
    19d8:	c1 16       	cp	r12, r17
    19da:	50 f4       	brcc	.+20     	; 0x19f0 <vfprintf+0x59a>
    19dc:	94 fe       	sbrs	r9, 4
    19de:	0a c0       	rjmp	.+20     	; 0x19f4 <vfprintf+0x59e>
    19e0:	92 fc       	sbrc	r9, 2
    19e2:	08 c0       	rjmp	.+16     	; 0x19f4 <vfprintf+0x59e>
    19e4:	09 2d       	mov	r16, r9
    19e6:	0e 7e       	andi	r16, 0xEE	; 238
    19e8:	05 c0       	rjmp	.+10     	; 0x19f4 <vfprintf+0x59e>
    19ea:	dc 2c       	mov	r13, r12
    19ec:	09 2d       	mov	r16, r9
    19ee:	03 c0       	rjmp	.+6      	; 0x19f6 <vfprintf+0x5a0>
    19f0:	dc 2c       	mov	r13, r12
    19f2:	01 c0       	rjmp	.+2      	; 0x19f6 <vfprintf+0x5a0>
    19f4:	d1 2e       	mov	r13, r17
    19f6:	04 ff       	sbrs	r16, 4
    19f8:	0d c0       	rjmp	.+26     	; 0x1a14 <vfprintf+0x5be>
    19fa:	fe 01       	movw	r30, r28
    19fc:	ec 0d       	add	r30, r12
    19fe:	f1 1d       	adc	r31, r1
    1a00:	80 81       	ld	r24, Z
    1a02:	80 33       	cpi	r24, 0x30	; 48
    1a04:	11 f4       	brne	.+4      	; 0x1a0a <vfprintf+0x5b4>
    1a06:	09 7e       	andi	r16, 0xE9	; 233
    1a08:	09 c0       	rjmp	.+18     	; 0x1a1c <vfprintf+0x5c6>
    1a0a:	02 ff       	sbrs	r16, 2
    1a0c:	06 c0       	rjmp	.+12     	; 0x1a1a <vfprintf+0x5c4>
    1a0e:	d3 94       	inc	r13
    1a10:	d3 94       	inc	r13
    1a12:	04 c0       	rjmp	.+8      	; 0x1a1c <vfprintf+0x5c6>
    1a14:	80 2f       	mov	r24, r16
    1a16:	86 78       	andi	r24, 0x86	; 134
    1a18:	09 f0       	breq	.+2      	; 0x1a1c <vfprintf+0x5c6>
    1a1a:	d3 94       	inc	r13
    1a1c:	03 fd       	sbrc	r16, 3
    1a1e:	11 c0       	rjmp	.+34     	; 0x1a42 <vfprintf+0x5ec>
    1a20:	00 ff       	sbrs	r16, 0
    1a22:	06 c0       	rjmp	.+12     	; 0x1a30 <vfprintf+0x5da>
    1a24:	1c 2d       	mov	r17, r12
    1a26:	d5 14       	cp	r13, r5
    1a28:	80 f4       	brcc	.+32     	; 0x1a4a <vfprintf+0x5f4>
    1a2a:	15 0d       	add	r17, r5
    1a2c:	1d 19       	sub	r17, r13
    1a2e:	0d c0       	rjmp	.+26     	; 0x1a4a <vfprintf+0x5f4>
    1a30:	d5 14       	cp	r13, r5
    1a32:	58 f4       	brcc	.+22     	; 0x1a4a <vfprintf+0x5f4>
    1a34:	b7 01       	movw	r22, r14
    1a36:	80 e2       	ldi	r24, 0x20	; 32
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1a3e:	d3 94       	inc	r13
    1a40:	f7 cf       	rjmp	.-18     	; 0x1a30 <vfprintf+0x5da>
    1a42:	d5 14       	cp	r13, r5
    1a44:	10 f4       	brcc	.+4      	; 0x1a4a <vfprintf+0x5f4>
    1a46:	5d 18       	sub	r5, r13
    1a48:	01 c0       	rjmp	.+2      	; 0x1a4c <vfprintf+0x5f6>
    1a4a:	51 2c       	mov	r5, r1
    1a4c:	04 ff       	sbrs	r16, 4
    1a4e:	10 c0       	rjmp	.+32     	; 0x1a70 <vfprintf+0x61a>
    1a50:	b7 01       	movw	r22, r14
    1a52:	80 e3       	ldi	r24, 0x30	; 48
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1a5a:	02 ff       	sbrs	r16, 2
    1a5c:	17 c0       	rjmp	.+46     	; 0x1a8c <vfprintf+0x636>
    1a5e:	01 fd       	sbrc	r16, 1
    1a60:	03 c0       	rjmp	.+6      	; 0x1a68 <vfprintf+0x612>
    1a62:	88 e7       	ldi	r24, 0x78	; 120
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	02 c0       	rjmp	.+4      	; 0x1a6c <vfprintf+0x616>
    1a68:	88 e5       	ldi	r24, 0x58	; 88
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	b7 01       	movw	r22, r14
    1a6e:	0c c0       	rjmp	.+24     	; 0x1a88 <vfprintf+0x632>
    1a70:	80 2f       	mov	r24, r16
    1a72:	86 78       	andi	r24, 0x86	; 134
    1a74:	59 f0       	breq	.+22     	; 0x1a8c <vfprintf+0x636>
    1a76:	01 ff       	sbrs	r16, 1
    1a78:	02 c0       	rjmp	.+4      	; 0x1a7e <vfprintf+0x628>
    1a7a:	8b e2       	ldi	r24, 0x2B	; 43
    1a7c:	01 c0       	rjmp	.+2      	; 0x1a80 <vfprintf+0x62a>
    1a7e:	80 e2       	ldi	r24, 0x20	; 32
    1a80:	07 fd       	sbrc	r16, 7
    1a82:	8d e2       	ldi	r24, 0x2D	; 45
    1a84:	b7 01       	movw	r22, r14
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1a8c:	c1 16       	cp	r12, r17
    1a8e:	38 f4       	brcc	.+14     	; 0x1a9e <vfprintf+0x648>
    1a90:	b7 01       	movw	r22, r14
    1a92:	80 e3       	ldi	r24, 0x30	; 48
    1a94:	90 e0       	ldi	r25, 0x00	; 0
    1a96:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1a9a:	11 50       	subi	r17, 0x01	; 1
    1a9c:	f7 cf       	rjmp	.-18     	; 0x1a8c <vfprintf+0x636>
    1a9e:	ca 94       	dec	r12
    1aa0:	f3 01       	movw	r30, r6
    1aa2:	ec 0d       	add	r30, r12
    1aa4:	f1 1d       	adc	r31, r1
    1aa6:	80 81       	ld	r24, Z
    1aa8:	b7 01       	movw	r22, r14
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1ab0:	c1 10       	cpse	r12, r1
    1ab2:	f5 cf       	rjmp	.-22     	; 0x1a9e <vfprintf+0x648>
    1ab4:	15 c0       	rjmp	.+42     	; 0x1ae0 <vfprintf+0x68a>
    1ab6:	f4 e0       	ldi	r31, 0x04	; 4
    1ab8:	f5 15       	cp	r31, r5
    1aba:	60 f5       	brcc	.+88     	; 0x1b14 <vfprintf+0x6be>
    1abc:	84 e0       	ldi	r24, 0x04	; 4
    1abe:	58 1a       	sub	r5, r24
    1ac0:	93 fe       	sbrs	r9, 3
    1ac2:	1f c0       	rjmp	.+62     	; 0x1b02 <vfprintf+0x6ac>
    1ac4:	01 11       	cpse	r16, r1
    1ac6:	27 c0       	rjmp	.+78     	; 0x1b16 <vfprintf+0x6c0>
    1ac8:	2c 85       	ldd	r18, Y+12	; 0x0c
    1aca:	23 ff       	sbrs	r18, 3
    1acc:	2a c0       	rjmp	.+84     	; 0x1b22 <vfprintf+0x6cc>
    1ace:	08 e6       	ldi	r16, 0x68	; 104
    1ad0:	10 e0       	ldi	r17, 0x00	; 0
    1ad2:	39 2d       	mov	r19, r9
    1ad4:	30 71       	andi	r19, 0x10	; 16
    1ad6:	93 2e       	mov	r9, r19
    1ad8:	f8 01       	movw	r30, r16
    1ada:	84 91       	lpm	r24, Z
    1adc:	81 11       	cpse	r24, r1
    1ade:	24 c0       	rjmp	.+72     	; 0x1b28 <vfprintf+0x6d2>
    1ae0:	55 20       	and	r5, r5
    1ae2:	09 f4       	brne	.+2      	; 0x1ae6 <vfprintf+0x690>
    1ae4:	e4 cc       	rjmp	.-1592   	; 0x14ae <vfprintf+0x58>
    1ae6:	b7 01       	movw	r22, r14
    1ae8:	80 e2       	ldi	r24, 0x20	; 32
    1aea:	90 e0       	ldi	r25, 0x00	; 0
    1aec:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1af0:	5a 94       	dec	r5
    1af2:	f6 cf       	rjmp	.-20     	; 0x1ae0 <vfprintf+0x68a>
    1af4:	f7 01       	movw	r30, r14
    1af6:	86 81       	ldd	r24, Z+6	; 0x06
    1af8:	97 81       	ldd	r25, Z+7	; 0x07
    1afa:	26 c0       	rjmp	.+76     	; 0x1b48 <vfprintf+0x6f2>
    1afc:	8f ef       	ldi	r24, 0xFF	; 255
    1afe:	9f ef       	ldi	r25, 0xFF	; 255
    1b00:	23 c0       	rjmp	.+70     	; 0x1b48 <vfprintf+0x6f2>
    1b02:	b7 01       	movw	r22, r14
    1b04:	80 e2       	ldi	r24, 0x20	; 32
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1b0c:	5a 94       	dec	r5
    1b0e:	51 10       	cpse	r5, r1
    1b10:	f8 cf       	rjmp	.-16     	; 0x1b02 <vfprintf+0x6ac>
    1b12:	d8 cf       	rjmp	.-80     	; 0x1ac4 <vfprintf+0x66e>
    1b14:	51 2c       	mov	r5, r1
    1b16:	b7 01       	movw	r22, r14
    1b18:	80 2f       	mov	r24, r16
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1b20:	d3 cf       	rjmp	.-90     	; 0x1ac8 <vfprintf+0x672>
    1b22:	0c e6       	ldi	r16, 0x6C	; 108
    1b24:	10 e0       	ldi	r17, 0x00	; 0
    1b26:	d5 cf       	rjmp	.-86     	; 0x1ad2 <vfprintf+0x67c>
    1b28:	91 10       	cpse	r9, r1
    1b2a:	80 52       	subi	r24, 0x20	; 32
    1b2c:	b7 01       	movw	r22, r14
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <fputc>
    1b34:	0f 5f       	subi	r16, 0xFF	; 255
    1b36:	1f 4f       	sbci	r17, 0xFF	; 255
    1b38:	cf cf       	rjmp	.-98     	; 0x1ad8 <vfprintf+0x682>
    1b3a:	23 e0       	ldi	r18, 0x03	; 3
    1b3c:	25 15       	cp	r18, r5
    1b3e:	10 f4       	brcc	.+4      	; 0x1b44 <vfprintf+0x6ee>
    1b40:	83 e0       	ldi	r24, 0x03	; 3
    1b42:	bd cf       	rjmp	.-134    	; 0x1abe <vfprintf+0x668>
    1b44:	51 2c       	mov	r5, r1
    1b46:	c0 cf       	rjmp	.-128    	; 0x1ac8 <vfprintf+0x672>
    1b48:	60 96       	adiw	r28, 0x10	; 16
    1b4a:	e2 e1       	ldi	r30, 0x12	; 18
    1b4c:	0c 94 c4 0d 	jmp	0x1b88	; 0x1b88 <__epilogue_restores__>

00001b50 <__prologue_saves__>:
    1b50:	2f 92       	push	r2
    1b52:	3f 92       	push	r3
    1b54:	4f 92       	push	r4
    1b56:	5f 92       	push	r5
    1b58:	6f 92       	push	r6
    1b5a:	7f 92       	push	r7
    1b5c:	8f 92       	push	r8
    1b5e:	9f 92       	push	r9
    1b60:	af 92       	push	r10
    1b62:	bf 92       	push	r11
    1b64:	cf 92       	push	r12
    1b66:	df 92       	push	r13
    1b68:	ef 92       	push	r14
    1b6a:	ff 92       	push	r15
    1b6c:	0f 93       	push	r16
    1b6e:	1f 93       	push	r17
    1b70:	cf 93       	push	r28
    1b72:	df 93       	push	r29
    1b74:	cd b7       	in	r28, 0x3d	; 61
    1b76:	de b7       	in	r29, 0x3e	; 62
    1b78:	ca 1b       	sub	r28, r26
    1b7a:	db 0b       	sbc	r29, r27
    1b7c:	0f b6       	in	r0, 0x3f	; 63
    1b7e:	f8 94       	cli
    1b80:	de bf       	out	0x3e, r29	; 62
    1b82:	0f be       	out	0x3f, r0	; 63
    1b84:	cd bf       	out	0x3d, r28	; 61
    1b86:	09 94       	ijmp

00001b88 <__epilogue_restores__>:
    1b88:	2a 88       	ldd	r2, Y+18	; 0x12
    1b8a:	39 88       	ldd	r3, Y+17	; 0x11
    1b8c:	48 88       	ldd	r4, Y+16	; 0x10
    1b8e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b90:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b92:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b94:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b96:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b98:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b9a:	b9 84       	ldd	r11, Y+9	; 0x09
    1b9c:	c8 84       	ldd	r12, Y+8	; 0x08
    1b9e:	df 80       	ldd	r13, Y+7	; 0x07
    1ba0:	ee 80       	ldd	r14, Y+6	; 0x06
    1ba2:	fd 80       	ldd	r15, Y+5	; 0x05
    1ba4:	0c 81       	ldd	r16, Y+4	; 0x04
    1ba6:	1b 81       	ldd	r17, Y+3	; 0x03
    1ba8:	aa 81       	ldd	r26, Y+2	; 0x02
    1baa:	b9 81       	ldd	r27, Y+1	; 0x01
    1bac:	ce 0f       	add	r28, r30
    1bae:	d1 1d       	adc	r29, r1
    1bb0:	0f b6       	in	r0, 0x3f	; 63
    1bb2:	f8 94       	cli
    1bb4:	de bf       	out	0x3e, r29	; 62
    1bb6:	0f be       	out	0x3f, r0	; 63
    1bb8:	cd bf       	out	0x3d, r28	; 61
    1bba:	ed 01       	movw	r28, r26
    1bbc:	08 95       	ret

00001bbe <__ftoa_engine>:
    1bbe:	28 30       	cpi	r18, 0x08	; 8
    1bc0:	08 f0       	brcs	.+2      	; 0x1bc4 <__ftoa_engine+0x6>
    1bc2:	27 e0       	ldi	r18, 0x07	; 7
    1bc4:	33 27       	eor	r19, r19
    1bc6:	da 01       	movw	r26, r20
    1bc8:	99 0f       	add	r25, r25
    1bca:	31 1d       	adc	r19, r1
    1bcc:	87 fd       	sbrc	r24, 7
    1bce:	91 60       	ori	r25, 0x01	; 1
    1bd0:	00 96       	adiw	r24, 0x00	; 0
    1bd2:	61 05       	cpc	r22, r1
    1bd4:	71 05       	cpc	r23, r1
    1bd6:	39 f4       	brne	.+14     	; 0x1be6 <__ftoa_engine+0x28>
    1bd8:	32 60       	ori	r19, 0x02	; 2
    1bda:	2e 5f       	subi	r18, 0xFE	; 254
    1bdc:	3d 93       	st	X+, r19
    1bde:	30 e3       	ldi	r19, 0x30	; 48
    1be0:	2a 95       	dec	r18
    1be2:	e1 f7       	brne	.-8      	; 0x1bdc <__ftoa_engine+0x1e>
    1be4:	08 95       	ret
    1be6:	9f 3f       	cpi	r25, 0xFF	; 255
    1be8:	30 f0       	brcs	.+12     	; 0x1bf6 <__ftoa_engine+0x38>
    1bea:	80 38       	cpi	r24, 0x80	; 128
    1bec:	71 05       	cpc	r23, r1
    1bee:	61 05       	cpc	r22, r1
    1bf0:	09 f0       	breq	.+2      	; 0x1bf4 <__ftoa_engine+0x36>
    1bf2:	3c 5f       	subi	r19, 0xFC	; 252
    1bf4:	3c 5f       	subi	r19, 0xFC	; 252
    1bf6:	3d 93       	st	X+, r19
    1bf8:	91 30       	cpi	r25, 0x01	; 1
    1bfa:	08 f0       	brcs	.+2      	; 0x1bfe <__ftoa_engine+0x40>
    1bfc:	80 68       	ori	r24, 0x80	; 128
    1bfe:	91 1d       	adc	r25, r1
    1c00:	df 93       	push	r29
    1c02:	cf 93       	push	r28
    1c04:	1f 93       	push	r17
    1c06:	0f 93       	push	r16
    1c08:	ff 92       	push	r15
    1c0a:	ef 92       	push	r14
    1c0c:	19 2f       	mov	r17, r25
    1c0e:	98 7f       	andi	r25, 0xF8	; 248
    1c10:	96 95       	lsr	r25
    1c12:	e9 2f       	mov	r30, r25
    1c14:	96 95       	lsr	r25
    1c16:	96 95       	lsr	r25
    1c18:	e9 0f       	add	r30, r25
    1c1a:	ff 27       	eor	r31, r31
    1c1c:	e6 53       	subi	r30, 0x36	; 54
    1c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c20:	99 27       	eor	r25, r25
    1c22:	33 27       	eor	r19, r19
    1c24:	ee 24       	eor	r14, r14
    1c26:	ff 24       	eor	r15, r15
    1c28:	a7 01       	movw	r20, r14
    1c2a:	e7 01       	movw	r28, r14
    1c2c:	05 90       	lpm	r0, Z+
    1c2e:	08 94       	sec
    1c30:	07 94       	ror	r0
    1c32:	28 f4       	brcc	.+10     	; 0x1c3e <__ftoa_engine+0x80>
    1c34:	36 0f       	add	r19, r22
    1c36:	e7 1e       	adc	r14, r23
    1c38:	f8 1e       	adc	r15, r24
    1c3a:	49 1f       	adc	r20, r25
    1c3c:	51 1d       	adc	r21, r1
    1c3e:	66 0f       	add	r22, r22
    1c40:	77 1f       	adc	r23, r23
    1c42:	88 1f       	adc	r24, r24
    1c44:	99 1f       	adc	r25, r25
    1c46:	06 94       	lsr	r0
    1c48:	a1 f7       	brne	.-24     	; 0x1c32 <__ftoa_engine+0x74>
    1c4a:	05 90       	lpm	r0, Z+
    1c4c:	07 94       	ror	r0
    1c4e:	28 f4       	brcc	.+10     	; 0x1c5a <__ftoa_engine+0x9c>
    1c50:	e7 0e       	add	r14, r23
    1c52:	f8 1e       	adc	r15, r24
    1c54:	49 1f       	adc	r20, r25
    1c56:	56 1f       	adc	r21, r22
    1c58:	c1 1d       	adc	r28, r1
    1c5a:	77 0f       	add	r23, r23
    1c5c:	88 1f       	adc	r24, r24
    1c5e:	99 1f       	adc	r25, r25
    1c60:	66 1f       	adc	r22, r22
    1c62:	06 94       	lsr	r0
    1c64:	a1 f7       	brne	.-24     	; 0x1c4e <__ftoa_engine+0x90>
    1c66:	05 90       	lpm	r0, Z+
    1c68:	07 94       	ror	r0
    1c6a:	28 f4       	brcc	.+10     	; 0x1c76 <__ftoa_engine+0xb8>
    1c6c:	f8 0e       	add	r15, r24
    1c6e:	49 1f       	adc	r20, r25
    1c70:	56 1f       	adc	r21, r22
    1c72:	c7 1f       	adc	r28, r23
    1c74:	d1 1d       	adc	r29, r1
    1c76:	88 0f       	add	r24, r24
    1c78:	99 1f       	adc	r25, r25
    1c7a:	66 1f       	adc	r22, r22
    1c7c:	77 1f       	adc	r23, r23
    1c7e:	06 94       	lsr	r0
    1c80:	a1 f7       	brne	.-24     	; 0x1c6a <__ftoa_engine+0xac>
    1c82:	05 90       	lpm	r0, Z+
    1c84:	07 94       	ror	r0
    1c86:	20 f4       	brcc	.+8      	; 0x1c90 <__ftoa_engine+0xd2>
    1c88:	49 0f       	add	r20, r25
    1c8a:	56 1f       	adc	r21, r22
    1c8c:	c7 1f       	adc	r28, r23
    1c8e:	d8 1f       	adc	r29, r24
    1c90:	99 0f       	add	r25, r25
    1c92:	66 1f       	adc	r22, r22
    1c94:	77 1f       	adc	r23, r23
    1c96:	88 1f       	adc	r24, r24
    1c98:	06 94       	lsr	r0
    1c9a:	a9 f7       	brne	.-22     	; 0x1c86 <__ftoa_engine+0xc8>
    1c9c:	84 91       	lpm	r24, Z
    1c9e:	10 95       	com	r17
    1ca0:	17 70       	andi	r17, 0x07	; 7
    1ca2:	41 f0       	breq	.+16     	; 0x1cb4 <__ftoa_engine+0xf6>
    1ca4:	d6 95       	lsr	r29
    1ca6:	c7 95       	ror	r28
    1ca8:	57 95       	ror	r21
    1caa:	47 95       	ror	r20
    1cac:	f7 94       	ror	r15
    1cae:	e7 94       	ror	r14
    1cb0:	1a 95       	dec	r17
    1cb2:	c1 f7       	brne	.-16     	; 0x1ca4 <__ftoa_engine+0xe6>
    1cb4:	e0 e7       	ldi	r30, 0x70	; 112
    1cb6:	f0 e0       	ldi	r31, 0x00	; 0
    1cb8:	68 94       	set
    1cba:	15 90       	lpm	r1, Z+
    1cbc:	15 91       	lpm	r17, Z+
    1cbe:	35 91       	lpm	r19, Z+
    1cc0:	65 91       	lpm	r22, Z+
    1cc2:	95 91       	lpm	r25, Z+
    1cc4:	05 90       	lpm	r0, Z+
    1cc6:	7f e2       	ldi	r23, 0x2F	; 47
    1cc8:	73 95       	inc	r23
    1cca:	e1 18       	sub	r14, r1
    1ccc:	f1 0a       	sbc	r15, r17
    1cce:	43 0b       	sbc	r20, r19
    1cd0:	56 0b       	sbc	r21, r22
    1cd2:	c9 0b       	sbc	r28, r25
    1cd4:	d0 09       	sbc	r29, r0
    1cd6:	c0 f7       	brcc	.-16     	; 0x1cc8 <__ftoa_engine+0x10a>
    1cd8:	e1 0c       	add	r14, r1
    1cda:	f1 1e       	adc	r15, r17
    1cdc:	43 1f       	adc	r20, r19
    1cde:	56 1f       	adc	r21, r22
    1ce0:	c9 1f       	adc	r28, r25
    1ce2:	d0 1d       	adc	r29, r0
    1ce4:	7e f4       	brtc	.+30     	; 0x1d04 <__ftoa_engine+0x146>
    1ce6:	70 33       	cpi	r23, 0x30	; 48
    1ce8:	11 f4       	brne	.+4      	; 0x1cee <__ftoa_engine+0x130>
    1cea:	8a 95       	dec	r24
    1cec:	e6 cf       	rjmp	.-52     	; 0x1cba <__ftoa_engine+0xfc>
    1cee:	e8 94       	clt
    1cf0:	01 50       	subi	r16, 0x01	; 1
    1cf2:	30 f0       	brcs	.+12     	; 0x1d00 <__ftoa_engine+0x142>
    1cf4:	08 0f       	add	r16, r24
    1cf6:	0a f4       	brpl	.+2      	; 0x1cfa <__ftoa_engine+0x13c>
    1cf8:	00 27       	eor	r16, r16
    1cfa:	02 17       	cp	r16, r18
    1cfc:	08 f4       	brcc	.+2      	; 0x1d00 <__ftoa_engine+0x142>
    1cfe:	20 2f       	mov	r18, r16
    1d00:	23 95       	inc	r18
    1d02:	02 2f       	mov	r16, r18
    1d04:	7a 33       	cpi	r23, 0x3A	; 58
    1d06:	28 f0       	brcs	.+10     	; 0x1d12 <__ftoa_engine+0x154>
    1d08:	79 e3       	ldi	r23, 0x39	; 57
    1d0a:	7d 93       	st	X+, r23
    1d0c:	2a 95       	dec	r18
    1d0e:	e9 f7       	brne	.-6      	; 0x1d0a <__ftoa_engine+0x14c>
    1d10:	10 c0       	rjmp	.+32     	; 0x1d32 <__ftoa_engine+0x174>
    1d12:	7d 93       	st	X+, r23
    1d14:	2a 95       	dec	r18
    1d16:	89 f6       	brne	.-94     	; 0x1cba <__ftoa_engine+0xfc>
    1d18:	06 94       	lsr	r0
    1d1a:	97 95       	ror	r25
    1d1c:	67 95       	ror	r22
    1d1e:	37 95       	ror	r19
    1d20:	17 95       	ror	r17
    1d22:	17 94       	ror	r1
    1d24:	e1 18       	sub	r14, r1
    1d26:	f1 0a       	sbc	r15, r17
    1d28:	43 0b       	sbc	r20, r19
    1d2a:	56 0b       	sbc	r21, r22
    1d2c:	c9 0b       	sbc	r28, r25
    1d2e:	d0 09       	sbc	r29, r0
    1d30:	98 f0       	brcs	.+38     	; 0x1d58 <__ftoa_engine+0x19a>
    1d32:	23 95       	inc	r18
    1d34:	7e 91       	ld	r23, -X
    1d36:	73 95       	inc	r23
    1d38:	7a 33       	cpi	r23, 0x3A	; 58
    1d3a:	08 f0       	brcs	.+2      	; 0x1d3e <__ftoa_engine+0x180>
    1d3c:	70 e3       	ldi	r23, 0x30	; 48
    1d3e:	7c 93       	st	X, r23
    1d40:	20 13       	cpse	r18, r16
    1d42:	b8 f7       	brcc	.-18     	; 0x1d32 <__ftoa_engine+0x174>
    1d44:	7e 91       	ld	r23, -X
    1d46:	70 61       	ori	r23, 0x10	; 16
    1d48:	7d 93       	st	X+, r23
    1d4a:	30 f0       	brcs	.+12     	; 0x1d58 <__ftoa_engine+0x19a>
    1d4c:	83 95       	inc	r24
    1d4e:	71 e3       	ldi	r23, 0x31	; 49
    1d50:	7d 93       	st	X+, r23
    1d52:	70 e3       	ldi	r23, 0x30	; 48
    1d54:	2a 95       	dec	r18
    1d56:	e1 f7       	brne	.-8      	; 0x1d50 <__ftoa_engine+0x192>
    1d58:	11 24       	eor	r1, r1
    1d5a:	ef 90       	pop	r14
    1d5c:	ff 90       	pop	r15
    1d5e:	0f 91       	pop	r16
    1d60:	1f 91       	pop	r17
    1d62:	cf 91       	pop	r28
    1d64:	df 91       	pop	r29
    1d66:	99 27       	eor	r25, r25
    1d68:	87 fd       	sbrc	r24, 7
    1d6a:	90 95       	com	r25
    1d6c:	08 95       	ret

00001d6e <strnlen_P>:
    1d6e:	fc 01       	movw	r30, r24
    1d70:	05 90       	lpm	r0, Z+
    1d72:	61 50       	subi	r22, 0x01	; 1
    1d74:	70 40       	sbci	r23, 0x00	; 0
    1d76:	01 10       	cpse	r0, r1
    1d78:	d8 f7       	brcc	.-10     	; 0x1d70 <strnlen_P+0x2>
    1d7a:	80 95       	com	r24
    1d7c:	90 95       	com	r25
    1d7e:	8e 0f       	add	r24, r30
    1d80:	9f 1f       	adc	r25, r31
    1d82:	08 95       	ret

00001d84 <memset>:
    1d84:	dc 01       	movw	r26, r24
    1d86:	01 c0       	rjmp	.+2      	; 0x1d8a <memset+0x6>
    1d88:	6d 93       	st	X+, r22
    1d8a:	41 50       	subi	r20, 0x01	; 1
    1d8c:	50 40       	sbci	r21, 0x00	; 0
    1d8e:	e0 f7       	brcc	.-8      	; 0x1d88 <memset+0x4>
    1d90:	08 95       	ret

00001d92 <strcat>:
    1d92:	fb 01       	movw	r30, r22
    1d94:	dc 01       	movw	r26, r24
    1d96:	0d 90       	ld	r0, X+
    1d98:	00 20       	and	r0, r0
    1d9a:	e9 f7       	brne	.-6      	; 0x1d96 <strcat+0x4>
    1d9c:	11 97       	sbiw	r26, 0x01	; 1
    1d9e:	01 90       	ld	r0, Z+
    1da0:	0d 92       	st	X+, r0
    1da2:	00 20       	and	r0, r0
    1da4:	e1 f7       	brne	.-8      	; 0x1d9e <strcat+0xc>
    1da6:	08 95       	ret

00001da8 <strnlen>:
    1da8:	fc 01       	movw	r30, r24
    1daa:	61 50       	subi	r22, 0x01	; 1
    1dac:	70 40       	sbci	r23, 0x00	; 0
    1dae:	01 90       	ld	r0, Z+
    1db0:	01 10       	cpse	r0, r1
    1db2:	d8 f7       	brcc	.-10     	; 0x1daa <strnlen+0x2>
    1db4:	80 95       	com	r24
    1db6:	90 95       	com	r25
    1db8:	8e 0f       	add	r24, r30
    1dba:	9f 1f       	adc	r25, r31
    1dbc:	08 95       	ret

00001dbe <fputc>:
    1dbe:	0f 93       	push	r16
    1dc0:	1f 93       	push	r17
    1dc2:	cf 93       	push	r28
    1dc4:	df 93       	push	r29
    1dc6:	fb 01       	movw	r30, r22
    1dc8:	23 81       	ldd	r18, Z+3	; 0x03
    1dca:	21 fd       	sbrc	r18, 1
    1dcc:	03 c0       	rjmp	.+6      	; 0x1dd4 <fputc+0x16>
    1dce:	8f ef       	ldi	r24, 0xFF	; 255
    1dd0:	9f ef       	ldi	r25, 0xFF	; 255
    1dd2:	2c c0       	rjmp	.+88     	; 0x1e2c <fputc+0x6e>
    1dd4:	22 ff       	sbrs	r18, 2
    1dd6:	16 c0       	rjmp	.+44     	; 0x1e04 <fputc+0x46>
    1dd8:	46 81       	ldd	r20, Z+6	; 0x06
    1dda:	57 81       	ldd	r21, Z+7	; 0x07
    1ddc:	24 81       	ldd	r18, Z+4	; 0x04
    1dde:	35 81       	ldd	r19, Z+5	; 0x05
    1de0:	42 17       	cp	r20, r18
    1de2:	53 07       	cpc	r21, r19
    1de4:	44 f4       	brge	.+16     	; 0x1df6 <fputc+0x38>
    1de6:	a0 81       	ld	r26, Z
    1de8:	b1 81       	ldd	r27, Z+1	; 0x01
    1dea:	9d 01       	movw	r18, r26
    1dec:	2f 5f       	subi	r18, 0xFF	; 255
    1dee:	3f 4f       	sbci	r19, 0xFF	; 255
    1df0:	31 83       	std	Z+1, r19	; 0x01
    1df2:	20 83       	st	Z, r18
    1df4:	8c 93       	st	X, r24
    1df6:	26 81       	ldd	r18, Z+6	; 0x06
    1df8:	37 81       	ldd	r19, Z+7	; 0x07
    1dfa:	2f 5f       	subi	r18, 0xFF	; 255
    1dfc:	3f 4f       	sbci	r19, 0xFF	; 255
    1dfe:	37 83       	std	Z+7, r19	; 0x07
    1e00:	26 83       	std	Z+6, r18	; 0x06
    1e02:	14 c0       	rjmp	.+40     	; 0x1e2c <fputc+0x6e>
    1e04:	8b 01       	movw	r16, r22
    1e06:	ec 01       	movw	r28, r24
    1e08:	fb 01       	movw	r30, r22
    1e0a:	00 84       	ldd	r0, Z+8	; 0x08
    1e0c:	f1 85       	ldd	r31, Z+9	; 0x09
    1e0e:	e0 2d       	mov	r30, r0
    1e10:	09 95       	icall
    1e12:	89 2b       	or	r24, r25
    1e14:	e1 f6       	brne	.-72     	; 0x1dce <fputc+0x10>
    1e16:	d8 01       	movw	r26, r16
    1e18:	16 96       	adiw	r26, 0x06	; 6
    1e1a:	8d 91       	ld	r24, X+
    1e1c:	9c 91       	ld	r25, X
    1e1e:	17 97       	sbiw	r26, 0x07	; 7
    1e20:	01 96       	adiw	r24, 0x01	; 1
    1e22:	17 96       	adiw	r26, 0x07	; 7
    1e24:	9c 93       	st	X, r25
    1e26:	8e 93       	st	-X, r24
    1e28:	16 97       	sbiw	r26, 0x06	; 6
    1e2a:	ce 01       	movw	r24, r28
    1e2c:	df 91       	pop	r29
    1e2e:	cf 91       	pop	r28
    1e30:	1f 91       	pop	r17
    1e32:	0f 91       	pop	r16
    1e34:	08 95       	ret

00001e36 <sprintf>:
    1e36:	ae e0       	ldi	r26, 0x0E	; 14
    1e38:	b0 e0       	ldi	r27, 0x00	; 0
    1e3a:	e1 e2       	ldi	r30, 0x21	; 33
    1e3c:	ff e0       	ldi	r31, 0x0F	; 15
    1e3e:	0c 94 b6 0d 	jmp	0x1b6c	; 0x1b6c <__prologue_saves__+0x1c>
    1e42:	0d 89       	ldd	r16, Y+21	; 0x15
    1e44:	1e 89       	ldd	r17, Y+22	; 0x16
    1e46:	86 e0       	ldi	r24, 0x06	; 6
    1e48:	8c 83       	std	Y+4, r24	; 0x04
    1e4a:	1a 83       	std	Y+2, r17	; 0x02
    1e4c:	09 83       	std	Y+1, r16	; 0x01
    1e4e:	8f ef       	ldi	r24, 0xFF	; 255
    1e50:	9f e7       	ldi	r25, 0x7F	; 127
    1e52:	9e 83       	std	Y+6, r25	; 0x06
    1e54:	8d 83       	std	Y+5, r24	; 0x05
    1e56:	ae 01       	movw	r20, r28
    1e58:	47 5e       	subi	r20, 0xE7	; 231
    1e5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e5c:	6f 89       	ldd	r22, Y+23	; 0x17
    1e5e:	78 8d       	ldd	r23, Y+24	; 0x18
    1e60:	ce 01       	movw	r24, r28
    1e62:	01 96       	adiw	r24, 0x01	; 1
    1e64:	0e 94 2b 0a 	call	0x1456	; 0x1456 <vfprintf>
    1e68:	ef 81       	ldd	r30, Y+7	; 0x07
    1e6a:	f8 85       	ldd	r31, Y+8	; 0x08
    1e6c:	e0 0f       	add	r30, r16
    1e6e:	f1 1f       	adc	r31, r17
    1e70:	10 82       	st	Z, r1
    1e72:	2e 96       	adiw	r28, 0x0e	; 14
    1e74:	e4 e0       	ldi	r30, 0x04	; 4
    1e76:	0c 94 d2 0d 	jmp	0x1ba4	; 0x1ba4 <__epilogue_restores__+0x1c>

00001e7a <sscanf>:
    1e7a:	ae e0       	ldi	r26, 0x0E	; 14
    1e7c:	b0 e0       	ldi	r27, 0x00	; 0
    1e7e:	e3 e4       	ldi	r30, 0x43	; 67
    1e80:	ff e0       	ldi	r31, 0x0F	; 15
    1e82:	0c 94 b8 0d 	jmp	0x1b70	; 0x1b70 <__prologue_saves__+0x20>
    1e86:	85 e0       	ldi	r24, 0x05	; 5
    1e88:	8c 83       	std	Y+4, r24	; 0x04
    1e8a:	8b 89       	ldd	r24, Y+19	; 0x13
    1e8c:	9c 89       	ldd	r25, Y+20	; 0x14
    1e8e:	9a 83       	std	Y+2, r25	; 0x02
    1e90:	89 83       	std	Y+1, r24	; 0x01
    1e92:	ae 01       	movw	r20, r28
    1e94:	49 5e       	subi	r20, 0xE9	; 233
    1e96:	5f 4f       	sbci	r21, 0xFF	; 255
    1e98:	6d 89       	ldd	r22, Y+21	; 0x15
    1e9a:	7e 89       	ldd	r23, Y+22	; 0x16
    1e9c:	ce 01       	movw	r24, r28
    1e9e:	01 96       	adiw	r24, 0x01	; 1
    1ea0:	0e 94 50 11 	call	0x22a0	; 0x22a0 <vfscanf>
    1ea4:	2e 96       	adiw	r28, 0x0e	; 14
    1ea6:	e2 e0       	ldi	r30, 0x02	; 2
    1ea8:	0c 94 d4 0d 	jmp	0x1ba8	; 0x1ba8 <__epilogue_restores__+0x20>

00001eac <__ultoa_invert>:
    1eac:	fa 01       	movw	r30, r20
    1eae:	aa 27       	eor	r26, r26
    1eb0:	28 30       	cpi	r18, 0x08	; 8
    1eb2:	51 f1       	breq	.+84     	; 0x1f08 <__ultoa_invert+0x5c>
    1eb4:	20 31       	cpi	r18, 0x10	; 16
    1eb6:	81 f1       	breq	.+96     	; 0x1f18 <__ultoa_invert+0x6c>
    1eb8:	e8 94       	clt
    1eba:	6f 93       	push	r22
    1ebc:	6e 7f       	andi	r22, 0xFE	; 254
    1ebe:	6e 5f       	subi	r22, 0xFE	; 254
    1ec0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ec2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ec4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ec6:	af 4f       	sbci	r26, 0xFF	; 255
    1ec8:	b1 e0       	ldi	r27, 0x01	; 1
    1eca:	3e d0       	rcall	.+124    	; 0x1f48 <__ultoa_invert+0x9c>
    1ecc:	b4 e0       	ldi	r27, 0x04	; 4
    1ece:	3c d0       	rcall	.+120    	; 0x1f48 <__ultoa_invert+0x9c>
    1ed0:	67 0f       	add	r22, r23
    1ed2:	78 1f       	adc	r23, r24
    1ed4:	89 1f       	adc	r24, r25
    1ed6:	9a 1f       	adc	r25, r26
    1ed8:	a1 1d       	adc	r26, r1
    1eda:	68 0f       	add	r22, r24
    1edc:	79 1f       	adc	r23, r25
    1ede:	8a 1f       	adc	r24, r26
    1ee0:	91 1d       	adc	r25, r1
    1ee2:	a1 1d       	adc	r26, r1
    1ee4:	6a 0f       	add	r22, r26
    1ee6:	71 1d       	adc	r23, r1
    1ee8:	81 1d       	adc	r24, r1
    1eea:	91 1d       	adc	r25, r1
    1eec:	a1 1d       	adc	r26, r1
    1eee:	20 d0       	rcall	.+64     	; 0x1f30 <__ultoa_invert+0x84>
    1ef0:	09 f4       	brne	.+2      	; 0x1ef4 <__ultoa_invert+0x48>
    1ef2:	68 94       	set
    1ef4:	3f 91       	pop	r19
    1ef6:	2a e0       	ldi	r18, 0x0A	; 10
    1ef8:	26 9f       	mul	r18, r22
    1efa:	11 24       	eor	r1, r1
    1efc:	30 19       	sub	r19, r0
    1efe:	30 5d       	subi	r19, 0xD0	; 208
    1f00:	31 93       	st	Z+, r19
    1f02:	de f6       	brtc	.-74     	; 0x1eba <__ultoa_invert+0xe>
    1f04:	cf 01       	movw	r24, r30
    1f06:	08 95       	ret
    1f08:	46 2f       	mov	r20, r22
    1f0a:	47 70       	andi	r20, 0x07	; 7
    1f0c:	40 5d       	subi	r20, 0xD0	; 208
    1f0e:	41 93       	st	Z+, r20
    1f10:	b3 e0       	ldi	r27, 0x03	; 3
    1f12:	0f d0       	rcall	.+30     	; 0x1f32 <__ultoa_invert+0x86>
    1f14:	c9 f7       	brne	.-14     	; 0x1f08 <__ultoa_invert+0x5c>
    1f16:	f6 cf       	rjmp	.-20     	; 0x1f04 <__ultoa_invert+0x58>
    1f18:	46 2f       	mov	r20, r22
    1f1a:	4f 70       	andi	r20, 0x0F	; 15
    1f1c:	40 5d       	subi	r20, 0xD0	; 208
    1f1e:	4a 33       	cpi	r20, 0x3A	; 58
    1f20:	18 f0       	brcs	.+6      	; 0x1f28 <__ultoa_invert+0x7c>
    1f22:	49 5d       	subi	r20, 0xD9	; 217
    1f24:	31 fd       	sbrc	r19, 1
    1f26:	40 52       	subi	r20, 0x20	; 32
    1f28:	41 93       	st	Z+, r20
    1f2a:	02 d0       	rcall	.+4      	; 0x1f30 <__ultoa_invert+0x84>
    1f2c:	a9 f7       	brne	.-22     	; 0x1f18 <__ultoa_invert+0x6c>
    1f2e:	ea cf       	rjmp	.-44     	; 0x1f04 <__ultoa_invert+0x58>
    1f30:	b4 e0       	ldi	r27, 0x04	; 4
    1f32:	a6 95       	lsr	r26
    1f34:	97 95       	ror	r25
    1f36:	87 95       	ror	r24
    1f38:	77 95       	ror	r23
    1f3a:	67 95       	ror	r22
    1f3c:	ba 95       	dec	r27
    1f3e:	c9 f7       	brne	.-14     	; 0x1f32 <__ultoa_invert+0x86>
    1f40:	00 97       	sbiw	r24, 0x00	; 0
    1f42:	61 05       	cpc	r22, r1
    1f44:	71 05       	cpc	r23, r1
    1f46:	08 95       	ret
    1f48:	9b 01       	movw	r18, r22
    1f4a:	ac 01       	movw	r20, r24
    1f4c:	0a 2e       	mov	r0, r26
    1f4e:	06 94       	lsr	r0
    1f50:	57 95       	ror	r21
    1f52:	47 95       	ror	r20
    1f54:	37 95       	ror	r19
    1f56:	27 95       	ror	r18
    1f58:	ba 95       	dec	r27
    1f5a:	c9 f7       	brne	.-14     	; 0x1f4e <__ultoa_invert+0xa2>
    1f5c:	62 0f       	add	r22, r18
    1f5e:	73 1f       	adc	r23, r19
    1f60:	84 1f       	adc	r24, r20
    1f62:	95 1f       	adc	r25, r21
    1f64:	a0 1d       	adc	r26, r0
    1f66:	08 95       	ret

00001f68 <putval>:
    1f68:	20 fd       	sbrc	r18, 0
    1f6a:	09 c0       	rjmp	.+18     	; 0x1f7e <putval+0x16>
    1f6c:	fc 01       	movw	r30, r24
    1f6e:	23 fd       	sbrc	r18, 3
    1f70:	05 c0       	rjmp	.+10     	; 0x1f7c <putval+0x14>
    1f72:	22 ff       	sbrs	r18, 2
    1f74:	02 c0       	rjmp	.+4      	; 0x1f7a <putval+0x12>
    1f76:	73 83       	std	Z+3, r23	; 0x03
    1f78:	62 83       	std	Z+2, r22	; 0x02
    1f7a:	51 83       	std	Z+1, r21	; 0x01
    1f7c:	40 83       	st	Z, r20
    1f7e:	08 95       	ret

00001f80 <mulacc>:
    1f80:	44 fd       	sbrc	r20, 4
    1f82:	17 c0       	rjmp	.+46     	; 0x1fb2 <mulacc+0x32>
    1f84:	46 fd       	sbrc	r20, 6
    1f86:	17 c0       	rjmp	.+46     	; 0x1fb6 <mulacc+0x36>
    1f88:	ab 01       	movw	r20, r22
    1f8a:	bc 01       	movw	r22, r24
    1f8c:	da 01       	movw	r26, r20
    1f8e:	fb 01       	movw	r30, r22
    1f90:	aa 0f       	add	r26, r26
    1f92:	bb 1f       	adc	r27, r27
    1f94:	ee 1f       	adc	r30, r30
    1f96:	ff 1f       	adc	r31, r31
    1f98:	10 94       	com	r1
    1f9a:	d1 f7       	brne	.-12     	; 0x1f90 <mulacc+0x10>
    1f9c:	4a 0f       	add	r20, r26
    1f9e:	5b 1f       	adc	r21, r27
    1fa0:	6e 1f       	adc	r22, r30
    1fa2:	7f 1f       	adc	r23, r31
    1fa4:	cb 01       	movw	r24, r22
    1fa6:	ba 01       	movw	r22, r20
    1fa8:	66 0f       	add	r22, r22
    1faa:	77 1f       	adc	r23, r23
    1fac:	88 1f       	adc	r24, r24
    1fae:	99 1f       	adc	r25, r25
    1fb0:	09 c0       	rjmp	.+18     	; 0x1fc4 <mulacc+0x44>
    1fb2:	33 e0       	ldi	r19, 0x03	; 3
    1fb4:	01 c0       	rjmp	.+2      	; 0x1fb8 <mulacc+0x38>
    1fb6:	34 e0       	ldi	r19, 0x04	; 4
    1fb8:	66 0f       	add	r22, r22
    1fba:	77 1f       	adc	r23, r23
    1fbc:	88 1f       	adc	r24, r24
    1fbe:	99 1f       	adc	r25, r25
    1fc0:	31 50       	subi	r19, 0x01	; 1
    1fc2:	d1 f7       	brne	.-12     	; 0x1fb8 <mulacc+0x38>
    1fc4:	62 0f       	add	r22, r18
    1fc6:	71 1d       	adc	r23, r1
    1fc8:	81 1d       	adc	r24, r1
    1fca:	91 1d       	adc	r25, r1
    1fcc:	08 95       	ret

00001fce <skip_spaces>:
    1fce:	0f 93       	push	r16
    1fd0:	1f 93       	push	r17
    1fd2:	cf 93       	push	r28
    1fd4:	df 93       	push	r29
    1fd6:	8c 01       	movw	r16, r24
    1fd8:	c8 01       	movw	r24, r16
    1fda:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    1fde:	ec 01       	movw	r28, r24
    1fe0:	97 fd       	sbrc	r25, 7
    1fe2:	08 c0       	rjmp	.+16     	; 0x1ff4 <skip_spaces+0x26>
    1fe4:	0e 94 61 12 	call	0x24c2	; 0x24c2 <isspace>
    1fe8:	89 2b       	or	r24, r25
    1fea:	b1 f7       	brne	.-20     	; 0x1fd8 <skip_spaces+0xa>
    1fec:	b8 01       	movw	r22, r16
    1fee:	ce 01       	movw	r24, r28
    1ff0:	0e 94 b3 12 	call	0x2566	; 0x2566 <ungetc>
    1ff4:	ce 01       	movw	r24, r28
    1ff6:	df 91       	pop	r29
    1ff8:	cf 91       	pop	r28
    1ffa:	1f 91       	pop	r17
    1ffc:	0f 91       	pop	r16
    1ffe:	08 95       	ret

00002000 <conv_int>:
    2000:	8f 92       	push	r8
    2002:	9f 92       	push	r9
    2004:	af 92       	push	r10
    2006:	bf 92       	push	r11
    2008:	ef 92       	push	r14
    200a:	ff 92       	push	r15
    200c:	0f 93       	push	r16
    200e:	1f 93       	push	r17
    2010:	cf 93       	push	r28
    2012:	df 93       	push	r29
    2014:	8c 01       	movw	r16, r24
    2016:	d6 2f       	mov	r29, r22
    2018:	7a 01       	movw	r14, r20
    201a:	b2 2e       	mov	r11, r18
    201c:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    2020:	9c 01       	movw	r18, r24
    2022:	33 27       	eor	r19, r19
    2024:	2b 32       	cpi	r18, 0x2B	; 43
    2026:	31 05       	cpc	r19, r1
    2028:	31 f0       	breq	.+12     	; 0x2036 <conv_int+0x36>
    202a:	2d 32       	cpi	r18, 0x2D	; 45
    202c:	31 05       	cpc	r19, r1
    202e:	61 f4       	brne	.+24     	; 0x2048 <conv_int+0x48>
    2030:	8b 2d       	mov	r24, r11
    2032:	80 68       	ori	r24, 0x80	; 128
    2034:	b8 2e       	mov	r11, r24
    2036:	d1 50       	subi	r29, 0x01	; 1
    2038:	11 f4       	brne	.+4      	; 0x203e <conv_int+0x3e>
    203a:	80 e0       	ldi	r24, 0x00	; 0
    203c:	68 c0       	rjmp	.+208    	; 0x210e <conv_int+0x10e>
    203e:	c8 01       	movw	r24, r16
    2040:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    2044:	97 fd       	sbrc	r25, 7
    2046:	f9 cf       	rjmp	.-14     	; 0x203a <conv_int+0x3a>
    2048:	cb 2d       	mov	r28, r11
    204a:	cd 7f       	andi	r28, 0xFD	; 253
    204c:	2b 2d       	mov	r18, r11
    204e:	20 73       	andi	r18, 0x30	; 48
    2050:	09 f5       	brne	.+66     	; 0x2094 <conv_int+0x94>
    2052:	80 33       	cpi	r24, 0x30	; 48
    2054:	f9 f4       	brne	.+62     	; 0x2094 <conv_int+0x94>
    2056:	aa 24       	eor	r10, r10
    2058:	aa 94       	dec	r10
    205a:	ad 0e       	add	r10, r29
    205c:	09 f4       	brne	.+2      	; 0x2060 <conv_int+0x60>
    205e:	43 c0       	rjmp	.+134    	; 0x20e6 <conv_int+0xe6>
    2060:	c8 01       	movw	r24, r16
    2062:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    2066:	97 fd       	sbrc	r25, 7
    2068:	3e c0       	rjmp	.+124    	; 0x20e6 <conv_int+0xe6>
    206a:	9c 01       	movw	r18, r24
    206c:	2f 7d       	andi	r18, 0xDF	; 223
    206e:	33 27       	eor	r19, r19
    2070:	28 35       	cpi	r18, 0x58	; 88
    2072:	31 05       	cpc	r19, r1
    2074:	49 f4       	brne	.+18     	; 0x2088 <conv_int+0x88>
    2076:	c2 64       	ori	r28, 0x42	; 66
    2078:	d2 50       	subi	r29, 0x02	; 2
    207a:	a9 f1       	breq	.+106    	; 0x20e6 <conv_int+0xe6>
    207c:	c8 01       	movw	r24, r16
    207e:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    2082:	97 ff       	sbrs	r25, 7
    2084:	07 c0       	rjmp	.+14     	; 0x2094 <conv_int+0x94>
    2086:	2f c0       	rjmp	.+94     	; 0x20e6 <conv_int+0xe6>
    2088:	b6 fe       	sbrs	r11, 6
    208a:	02 c0       	rjmp	.+4      	; 0x2090 <conv_int+0x90>
    208c:	c2 60       	ori	r28, 0x02	; 2
    208e:	01 c0       	rjmp	.+2      	; 0x2092 <conv_int+0x92>
    2090:	c2 61       	ori	r28, 0x12	; 18
    2092:	da 2d       	mov	r29, r10
    2094:	81 2c       	mov	r8, r1
    2096:	91 2c       	mov	r9, r1
    2098:	54 01       	movw	r10, r8
    209a:	20 ed       	ldi	r18, 0xD0	; 208
    209c:	28 0f       	add	r18, r24
    209e:	28 30       	cpi	r18, 0x08	; 8
    20a0:	80 f0       	brcs	.+32     	; 0x20c2 <conv_int+0xc2>
    20a2:	c4 ff       	sbrs	r28, 4
    20a4:	04 c0       	rjmp	.+8      	; 0x20ae <conv_int+0xae>
    20a6:	b8 01       	movw	r22, r16
    20a8:	0e 94 b3 12 	call	0x2566	; 0x2566 <ungetc>
    20ac:	19 c0       	rjmp	.+50     	; 0x20e0 <conv_int+0xe0>
    20ae:	2a 30       	cpi	r18, 0x0A	; 10
    20b0:	40 f0       	brcs	.+16     	; 0x20c2 <conv_int+0xc2>
    20b2:	c6 ff       	sbrs	r28, 6
    20b4:	f8 cf       	rjmp	.-16     	; 0x20a6 <conv_int+0xa6>
    20b6:	2f 7d       	andi	r18, 0xDF	; 223
    20b8:	3f ee       	ldi	r19, 0xEF	; 239
    20ba:	32 0f       	add	r19, r18
    20bc:	36 30       	cpi	r19, 0x06	; 6
    20be:	98 f7       	brcc	.-26     	; 0x20a6 <conv_int+0xa6>
    20c0:	27 50       	subi	r18, 0x07	; 7
    20c2:	4c 2f       	mov	r20, r28
    20c4:	c5 01       	movw	r24, r10
    20c6:	b4 01       	movw	r22, r8
    20c8:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <mulacc>
    20cc:	4b 01       	movw	r8, r22
    20ce:	5c 01       	movw	r10, r24
    20d0:	c2 60       	ori	r28, 0x02	; 2
    20d2:	d1 50       	subi	r29, 0x01	; 1
    20d4:	59 f0       	breq	.+22     	; 0x20ec <conv_int+0xec>
    20d6:	c8 01       	movw	r24, r16
    20d8:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    20dc:	97 ff       	sbrs	r25, 7
    20de:	dd cf       	rjmp	.-70     	; 0x209a <conv_int+0x9a>
    20e0:	c1 fd       	sbrc	r28, 1
    20e2:	04 c0       	rjmp	.+8      	; 0x20ec <conv_int+0xec>
    20e4:	aa cf       	rjmp	.-172    	; 0x203a <conv_int+0x3a>
    20e6:	81 2c       	mov	r8, r1
    20e8:	91 2c       	mov	r9, r1
    20ea:	54 01       	movw	r10, r8
    20ec:	c7 ff       	sbrs	r28, 7
    20ee:	08 c0       	rjmp	.+16     	; 0x2100 <conv_int+0x100>
    20f0:	b0 94       	com	r11
    20f2:	a0 94       	com	r10
    20f4:	90 94       	com	r9
    20f6:	80 94       	com	r8
    20f8:	81 1c       	adc	r8, r1
    20fa:	91 1c       	adc	r9, r1
    20fc:	a1 1c       	adc	r10, r1
    20fe:	b1 1c       	adc	r11, r1
    2100:	2c 2f       	mov	r18, r28
    2102:	b5 01       	movw	r22, r10
    2104:	a4 01       	movw	r20, r8
    2106:	c7 01       	movw	r24, r14
    2108:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <putval>
    210c:	81 e0       	ldi	r24, 0x01	; 1
    210e:	df 91       	pop	r29
    2110:	cf 91       	pop	r28
    2112:	1f 91       	pop	r17
    2114:	0f 91       	pop	r16
    2116:	ff 90       	pop	r15
    2118:	ef 90       	pop	r14
    211a:	bf 90       	pop	r11
    211c:	af 90       	pop	r10
    211e:	9f 90       	pop	r9
    2120:	8f 90       	pop	r8
    2122:	08 95       	ret

00002124 <conv_brk>:
    2124:	a0 e2       	ldi	r26, 0x20	; 32
    2126:	b0 e0       	ldi	r27, 0x00	; 0
    2128:	e8 e9       	ldi	r30, 0x98	; 152
    212a:	f0 e1       	ldi	r31, 0x10	; 16
    212c:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__prologue_saves__+0x6>
    2130:	5c 01       	movw	r10, r24
    2132:	96 2e       	mov	r9, r22
    2134:	7a 01       	movw	r14, r20
    2136:	f9 01       	movw	r30, r18
    2138:	8e 01       	movw	r16, r28
    213a:	0f 5f       	subi	r16, 0xFF	; 255
    213c:	1f 4f       	sbci	r17, 0xFF	; 255
    213e:	68 01       	movw	r12, r16
    2140:	80 e2       	ldi	r24, 0x20	; 32
    2142:	d8 01       	movw	r26, r16
    2144:	1d 92       	st	X+, r1
    2146:	8a 95       	dec	r24
    2148:	e9 f7       	brne	.-6      	; 0x2144 <conv_brk+0x20>
    214a:	d5 01       	movw	r26, r10
    214c:	13 96       	adiw	r26, 0x03	; 3
    214e:	8c 90       	ld	r8, X
    2150:	80 e0       	ldi	r24, 0x00	; 0
    2152:	90 e0       	ldi	r25, 0x00	; 0
    2154:	61 2c       	mov	r6, r1
    2156:	71 2c       	mov	r7, r1
    2158:	30 e0       	ldi	r19, 0x00	; 0
    215a:	61 e0       	ldi	r22, 0x01	; 1
    215c:	70 e0       	ldi	r23, 0x00	; 0
    215e:	83 fc       	sbrc	r8, 3
    2160:	25 91       	lpm	r18, Z+
    2162:	83 fe       	sbrs	r8, 3
    2164:	21 91       	ld	r18, Z+
    2166:	8f 01       	movw	r16, r30
    2168:	52 2e       	mov	r5, r18
    216a:	21 11       	cpse	r18, r1
    216c:	03 c0       	rjmp	.+6      	; 0x2174 <conv_brk+0x50>
    216e:	80 e0       	ldi	r24, 0x00	; 0
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	92 c0       	rjmp	.+292    	; 0x2298 <conv_brk+0x174>
    2174:	2e 35       	cpi	r18, 0x5E	; 94
    2176:	11 f4       	brne	.+4      	; 0x217c <conv_brk+0x58>
    2178:	00 97       	sbiw	r24, 0x00	; 0
    217a:	51 f1       	breq	.+84     	; 0x21d0 <conv_brk+0xac>
    217c:	43 2f       	mov	r20, r19
    217e:	50 e0       	ldi	r21, 0x00	; 0
    2180:	48 17       	cp	r20, r24
    2182:	59 07       	cpc	r21, r25
    2184:	3c f4       	brge	.+14     	; 0x2194 <conv_brk+0x70>
    2186:	2d 35       	cpi	r18, 0x5D	; 93
    2188:	59 f1       	breq	.+86     	; 0x21e0 <conv_brk+0xbc>
    218a:	2d 32       	cpi	r18, 0x2D	; 45
    218c:	19 f4       	brne	.+6      	; 0x2194 <conv_brk+0x70>
    218e:	77 20       	and	r7, r7
    2190:	09 f1       	breq	.+66     	; 0x21d4 <conv_brk+0xb0>
    2192:	03 c0       	rjmp	.+6      	; 0x219a <conv_brk+0x76>
    2194:	77 20       	and	r7, r7
    2196:	09 f4       	brne	.+2      	; 0x219a <conv_brk+0x76>
    2198:	6a c0       	rjmp	.+212    	; 0x226e <conv_brk+0x14a>
    219a:	45 2d       	mov	r20, r5
    219c:	46 95       	lsr	r20
    219e:	46 95       	lsr	r20
    21a0:	46 95       	lsr	r20
    21a2:	d6 01       	movw	r26, r12
    21a4:	a4 0f       	add	r26, r20
    21a6:	b1 1d       	adc	r27, r1
    21a8:	45 2d       	mov	r20, r5
    21aa:	47 70       	andi	r20, 0x07	; 7
    21ac:	8b 01       	movw	r16, r22
    21ae:	02 c0       	rjmp	.+4      	; 0x21b4 <conv_brk+0x90>
    21b0:	00 0f       	add	r16, r16
    21b2:	11 1f       	adc	r17, r17
    21b4:	4a 95       	dec	r20
    21b6:	e2 f7       	brpl	.-8      	; 0x21b0 <conv_brk+0x8c>
    21b8:	a8 01       	movw	r20, r16
    21ba:	5c 91       	ld	r21, X
    21bc:	45 2b       	or	r20, r21
    21be:	4c 93       	st	X, r20
    21c0:	65 14       	cp	r6, r5
    21c2:	59 f0       	breq	.+22     	; 0x21da <conv_brk+0xb6>
    21c4:	56 14       	cp	r5, r6
    21c6:	10 f4       	brcc	.+4      	; 0x21cc <conv_brk+0xa8>
    21c8:	53 94       	inc	r5
    21ca:	e7 cf       	rjmp	.-50     	; 0x219a <conv_brk+0x76>
    21cc:	5a 94       	dec	r5
    21ce:	e5 cf       	rjmp	.-54     	; 0x219a <conv_brk+0x76>
    21d0:	31 e0       	ldi	r19, 0x01	; 1
    21d2:	04 c0       	rjmp	.+8      	; 0x21dc <conv_brk+0xb8>
    21d4:	77 24       	eor	r7, r7
    21d6:	73 94       	inc	r7
    21d8:	01 c0       	rjmp	.+2      	; 0x21dc <conv_brk+0xb8>
    21da:	71 2c       	mov	r7, r1
    21dc:	01 96       	adiw	r24, 0x01	; 1
    21de:	bf cf       	rjmp	.-130    	; 0x215e <conv_brk+0x3a>
    21e0:	77 20       	and	r7, r7
    21e2:	19 f0       	breq	.+6      	; 0x21ea <conv_brk+0xc6>
    21e4:	8e 81       	ldd	r24, Y+6	; 0x06
    21e6:	80 62       	ori	r24, 0x20	; 32
    21e8:	8e 83       	std	Y+6, r24	; 0x06
    21ea:	31 11       	cpse	r19, r1
    21ec:	03 c0       	rjmp	.+6      	; 0x21f4 <conv_brk+0xd0>
    21ee:	88 24       	eor	r8, r8
    21f0:	83 94       	inc	r8
    21f2:	17 c0       	rjmp	.+46     	; 0x2222 <conv_brk+0xfe>
    21f4:	f6 01       	movw	r30, r12
    21f6:	9e 01       	movw	r18, r28
    21f8:	2f 5d       	subi	r18, 0xDF	; 223
    21fa:	3f 4f       	sbci	r19, 0xFF	; 255
    21fc:	80 81       	ld	r24, Z
    21fe:	80 95       	com	r24
    2200:	81 93       	st	Z+, r24
    2202:	2e 17       	cp	r18, r30
    2204:	3f 07       	cpc	r19, r31
    2206:	d1 f7       	brne	.-12     	; 0x21fc <conv_brk+0xd8>
    2208:	f2 cf       	rjmp	.-28     	; 0x21ee <conv_brk+0xca>
    220a:	e1 14       	cp	r14, r1
    220c:	f1 04       	cpc	r15, r1
    220e:	29 f0       	breq	.+10     	; 0x221a <conv_brk+0xf6>
    2210:	d7 01       	movw	r26, r14
    2212:	8c 93       	st	X, r24
    2214:	f7 01       	movw	r30, r14
    2216:	31 96       	adiw	r30, 0x01	; 1
    2218:	7f 01       	movw	r14, r30
    221a:	9a 94       	dec	r9
    221c:	81 2c       	mov	r8, r1
    221e:	99 20       	and	r9, r9
    2220:	f9 f0       	breq	.+62     	; 0x2260 <conv_brk+0x13c>
    2222:	c5 01       	movw	r24, r10
    2224:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    2228:	97 fd       	sbrc	r25, 7
    222a:	18 c0       	rjmp	.+48     	; 0x225c <conv_brk+0x138>
    222c:	fc 01       	movw	r30, r24
    222e:	ff 27       	eor	r31, r31
    2230:	23 e0       	ldi	r18, 0x03	; 3
    2232:	f5 95       	asr	r31
    2234:	e7 95       	ror	r30
    2236:	2a 95       	dec	r18
    2238:	e1 f7       	brne	.-8      	; 0x2232 <conv_brk+0x10e>
    223a:	ec 0d       	add	r30, r12
    223c:	fd 1d       	adc	r31, r13
    223e:	20 81       	ld	r18, Z
    2240:	30 e0       	ldi	r19, 0x00	; 0
    2242:	ac 01       	movw	r20, r24
    2244:	47 70       	andi	r20, 0x07	; 7
    2246:	55 27       	eor	r21, r21
    2248:	02 c0       	rjmp	.+4      	; 0x224e <conv_brk+0x12a>
    224a:	35 95       	asr	r19
    224c:	27 95       	ror	r18
    224e:	4a 95       	dec	r20
    2250:	e2 f7       	brpl	.-8      	; 0x224a <conv_brk+0x126>
    2252:	20 fd       	sbrc	r18, 0
    2254:	da cf       	rjmp	.-76     	; 0x220a <conv_brk+0xe6>
    2256:	b5 01       	movw	r22, r10
    2258:	0e 94 b3 12 	call	0x2566	; 0x2566 <ungetc>
    225c:	81 10       	cpse	r8, r1
    225e:	87 cf       	rjmp	.-242    	; 0x216e <conv_brk+0x4a>
    2260:	e1 14       	cp	r14, r1
    2262:	f1 04       	cpc	r15, r1
    2264:	11 f0       	breq	.+4      	; 0x226a <conv_brk+0x146>
    2266:	d7 01       	movw	r26, r14
    2268:	1c 92       	st	X, r1
    226a:	c8 01       	movw	r24, r16
    226c:	15 c0       	rjmp	.+42     	; 0x2298 <conv_brk+0x174>
    226e:	42 2f       	mov	r20, r18
    2270:	46 95       	lsr	r20
    2272:	46 95       	lsr	r20
    2274:	46 95       	lsr	r20
    2276:	d6 01       	movw	r26, r12
    2278:	a4 0f       	add	r26, r20
    227a:	b1 1d       	adc	r27, r1
    227c:	42 2f       	mov	r20, r18
    227e:	47 70       	andi	r20, 0x07	; 7
    2280:	8b 01       	movw	r16, r22
    2282:	02 c0       	rjmp	.+4      	; 0x2288 <conv_brk+0x164>
    2284:	00 0f       	add	r16, r16
    2286:	11 1f       	adc	r17, r17
    2288:	4a 95       	dec	r20
    228a:	e2 f7       	brpl	.-8      	; 0x2284 <conv_brk+0x160>
    228c:	a8 01       	movw	r20, r16
    228e:	5c 91       	ld	r21, X
    2290:	45 2b       	or	r20, r21
    2292:	4c 93       	st	X, r20
    2294:	62 2e       	mov	r6, r18
    2296:	a2 cf       	rjmp	.-188    	; 0x21dc <conv_brk+0xb8>
    2298:	a0 96       	adiw	r28, 0x20	; 32
    229a:	ef e0       	ldi	r30, 0x0F	; 15
    229c:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__epilogue_restores__+0x6>

000022a0 <vfscanf>:
    22a0:	a0 e0       	ldi	r26, 0x00	; 0
    22a2:	b0 e0       	ldi	r27, 0x00	; 0
    22a4:	e6 e5       	ldi	r30, 0x56	; 86
    22a6:	f1 e1       	ldi	r31, 0x11	; 17
    22a8:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__prologue_saves__+0x6>
    22ac:	6c 01       	movw	r12, r24
    22ae:	eb 01       	movw	r28, r22
    22b0:	5a 01       	movw	r10, r20
    22b2:	fc 01       	movw	r30, r24
    22b4:	17 82       	std	Z+7, r1	; 0x07
    22b6:	16 82       	std	Z+6, r1	; 0x06
    22b8:	51 2c       	mov	r5, r1
    22ba:	f6 01       	movw	r30, r12
    22bc:	e3 80       	ldd	r14, Z+3	; 0x03
    22be:	fe 01       	movw	r30, r28
    22c0:	e3 fc       	sbrc	r14, 3
    22c2:	85 91       	lpm	r24, Z+
    22c4:	e3 fe       	sbrs	r14, 3
    22c6:	81 91       	ld	r24, Z+
    22c8:	18 2f       	mov	r17, r24
    22ca:	ef 01       	movw	r28, r30
    22cc:	88 23       	and	r24, r24
    22ce:	09 f4       	brne	.+2      	; 0x22d2 <vfscanf+0x32>
    22d0:	ee c0       	rjmp	.+476    	; 0x24ae <vfscanf+0x20e>
    22d2:	90 e0       	ldi	r25, 0x00	; 0
    22d4:	0e 94 61 12 	call	0x24c2	; 0x24c2 <isspace>
    22d8:	89 2b       	or	r24, r25
    22da:	21 f0       	breq	.+8      	; 0x22e4 <vfscanf+0x44>
    22dc:	c6 01       	movw	r24, r12
    22de:	0e 94 e7 0f 	call	0x1fce	; 0x1fce <skip_spaces>
    22e2:	eb cf       	rjmp	.-42     	; 0x22ba <vfscanf+0x1a>
    22e4:	15 32       	cpi	r17, 0x25	; 37
    22e6:	41 f4       	brne	.+16     	; 0x22f8 <vfscanf+0x58>
    22e8:	fe 01       	movw	r30, r28
    22ea:	e3 fc       	sbrc	r14, 3
    22ec:	15 91       	lpm	r17, Z+
    22ee:	e3 fe       	sbrs	r14, 3
    22f0:	11 91       	ld	r17, Z+
    22f2:	ef 01       	movw	r28, r30
    22f4:	15 32       	cpi	r17, 0x25	; 37
    22f6:	81 f4       	brne	.+32     	; 0x2318 <vfscanf+0x78>
    22f8:	c6 01       	movw	r24, r12
    22fa:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    22fe:	97 fd       	sbrc	r25, 7
    2300:	d4 c0       	rjmp	.+424    	; 0x24aa <vfscanf+0x20a>
    2302:	41 2f       	mov	r20, r17
    2304:	50 e0       	ldi	r21, 0x00	; 0
    2306:	9c 01       	movw	r18, r24
    2308:	33 27       	eor	r19, r19
    230a:	24 17       	cp	r18, r20
    230c:	35 07       	cpc	r19, r21
    230e:	a9 f2       	breq	.-86     	; 0x22ba <vfscanf+0x1a>
    2310:	b6 01       	movw	r22, r12
    2312:	0e 94 b3 12 	call	0x2566	; 0x2566 <ungetc>
    2316:	cb c0       	rjmp	.+406    	; 0x24ae <vfscanf+0x20e>
    2318:	1a 32       	cpi	r17, 0x2A	; 42
    231a:	39 f4       	brne	.+14     	; 0x232a <vfscanf+0x8a>
    231c:	e3 fc       	sbrc	r14, 3
    231e:	15 91       	lpm	r17, Z+
    2320:	e3 fe       	sbrs	r14, 3
    2322:	11 91       	ld	r17, Z+
    2324:	ef 01       	movw	r28, r30
    2326:	01 e0       	ldi	r16, 0x01	; 1
    2328:	01 c0       	rjmp	.+2      	; 0x232c <vfscanf+0x8c>
    232a:	00 e0       	ldi	r16, 0x00	; 0
    232c:	f1 2c       	mov	r15, r1
    232e:	20 ed       	ldi	r18, 0xD0	; 208
    2330:	21 0f       	add	r18, r17
    2332:	2a 30       	cpi	r18, 0x0A	; 10
    2334:	80 f4       	brcc	.+32     	; 0x2356 <vfscanf+0xb6>
    2336:	02 60       	ori	r16, 0x02	; 2
    2338:	6f 2d       	mov	r22, r15
    233a:	70 e0       	ldi	r23, 0x00	; 0
    233c:	80 e0       	ldi	r24, 0x00	; 0
    233e:	90 e0       	ldi	r25, 0x00	; 0
    2340:	40 e2       	ldi	r20, 0x20	; 32
    2342:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <mulacc>
    2346:	f6 2e       	mov	r15, r22
    2348:	fe 01       	movw	r30, r28
    234a:	e3 fc       	sbrc	r14, 3
    234c:	15 91       	lpm	r17, Z+
    234e:	e3 fe       	sbrs	r14, 3
    2350:	11 91       	ld	r17, Z+
    2352:	ef 01       	movw	r28, r30
    2354:	ec cf       	rjmp	.-40     	; 0x232e <vfscanf+0x8e>
    2356:	01 ff       	sbrs	r16, 1
    2358:	03 c0       	rjmp	.+6      	; 0x2360 <vfscanf+0xc0>
    235a:	f1 10       	cpse	r15, r1
    235c:	03 c0       	rjmp	.+6      	; 0x2364 <vfscanf+0xc4>
    235e:	a7 c0       	rjmp	.+334    	; 0x24ae <vfscanf+0x20e>
    2360:	ff 24       	eor	r15, r15
    2362:	fa 94       	dec	r15
    2364:	18 36       	cpi	r17, 0x68	; 104
    2366:	19 f0       	breq	.+6      	; 0x236e <vfscanf+0xce>
    2368:	1c 36       	cpi	r17, 0x6C	; 108
    236a:	51 f0       	breq	.+20     	; 0x2380 <vfscanf+0xe0>
    236c:	10 c0       	rjmp	.+32     	; 0x238e <vfscanf+0xee>
    236e:	fe 01       	movw	r30, r28
    2370:	e3 fc       	sbrc	r14, 3
    2372:	15 91       	lpm	r17, Z+
    2374:	e3 fe       	sbrs	r14, 3
    2376:	11 91       	ld	r17, Z+
    2378:	ef 01       	movw	r28, r30
    237a:	18 36       	cpi	r17, 0x68	; 104
    237c:	41 f4       	brne	.+16     	; 0x238e <vfscanf+0xee>
    237e:	08 60       	ori	r16, 0x08	; 8
    2380:	04 60       	ori	r16, 0x04	; 4
    2382:	fe 01       	movw	r30, r28
    2384:	e3 fc       	sbrc	r14, 3
    2386:	15 91       	lpm	r17, Z+
    2388:	e3 fe       	sbrs	r14, 3
    238a:	11 91       	ld	r17, Z+
    238c:	ef 01       	movw	r28, r30
    238e:	11 23       	and	r17, r17
    2390:	09 f4       	brne	.+2      	; 0x2394 <vfscanf+0xf4>
    2392:	8d c0       	rjmp	.+282    	; 0x24ae <vfscanf+0x20e>
    2394:	61 2f       	mov	r22, r17
    2396:	70 e0       	ldi	r23, 0x00	; 0
    2398:	8a e6       	ldi	r24, 0x6A	; 106
    239a:	91 e0       	ldi	r25, 0x01	; 1
    239c:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <strchr_P>
    23a0:	89 2b       	or	r24, r25
    23a2:	09 f4       	brne	.+2      	; 0x23a6 <vfscanf+0x106>
    23a4:	84 c0       	rjmp	.+264    	; 0x24ae <vfscanf+0x20e>
    23a6:	00 fd       	sbrc	r16, 0
    23a8:	07 c0       	rjmp	.+14     	; 0x23b8 <vfscanf+0x118>
    23aa:	f5 01       	movw	r30, r10
    23ac:	80 80       	ld	r8, Z
    23ae:	91 80       	ldd	r9, Z+1	; 0x01
    23b0:	c5 01       	movw	r24, r10
    23b2:	02 96       	adiw	r24, 0x02	; 2
    23b4:	5c 01       	movw	r10, r24
    23b6:	02 c0       	rjmp	.+4      	; 0x23bc <vfscanf+0x11c>
    23b8:	81 2c       	mov	r8, r1
    23ba:	91 2c       	mov	r9, r1
    23bc:	1e 36       	cpi	r17, 0x6E	; 110
    23be:	51 f4       	brne	.+20     	; 0x23d4 <vfscanf+0x134>
    23c0:	f6 01       	movw	r30, r12
    23c2:	46 81       	ldd	r20, Z+6	; 0x06
    23c4:	57 81       	ldd	r21, Z+7	; 0x07
    23c6:	60 e0       	ldi	r22, 0x00	; 0
    23c8:	70 e0       	ldi	r23, 0x00	; 0
    23ca:	20 2f       	mov	r18, r16
    23cc:	c4 01       	movw	r24, r8
    23ce:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <putval>
    23d2:	73 cf       	rjmp	.-282    	; 0x22ba <vfscanf+0x1a>
    23d4:	13 36       	cpi	r17, 0x63	; 99
    23d6:	a9 f4       	brne	.+42     	; 0x2402 <vfscanf+0x162>
    23d8:	01 fd       	sbrc	r16, 1
    23da:	02 c0       	rjmp	.+4      	; 0x23e0 <vfscanf+0x140>
    23dc:	ff 24       	eor	r15, r15
    23de:	f3 94       	inc	r15
    23e0:	c6 01       	movw	r24, r12
    23e2:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    23e6:	97 fd       	sbrc	r25, 7
    23e8:	60 c0       	rjmp	.+192    	; 0x24aa <vfscanf+0x20a>
    23ea:	81 14       	cp	r8, r1
    23ec:	91 04       	cpc	r9, r1
    23ee:	29 f0       	breq	.+10     	; 0x23fa <vfscanf+0x15a>
    23f0:	f4 01       	movw	r30, r8
    23f2:	80 83       	st	Z, r24
    23f4:	c4 01       	movw	r24, r8
    23f6:	01 96       	adiw	r24, 0x01	; 1
    23f8:	4c 01       	movw	r8, r24
    23fa:	fa 94       	dec	r15
    23fc:	f1 10       	cpse	r15, r1
    23fe:	f0 cf       	rjmp	.-32     	; 0x23e0 <vfscanf+0x140>
    2400:	50 c0       	rjmp	.+160    	; 0x24a2 <vfscanf+0x202>
    2402:	1b 35       	cpi	r17, 0x5B	; 91
    2404:	59 f4       	brne	.+22     	; 0x241c <vfscanf+0x17c>
    2406:	9e 01       	movw	r18, r28
    2408:	a4 01       	movw	r20, r8
    240a:	6f 2d       	mov	r22, r15
    240c:	c6 01       	movw	r24, r12
    240e:	0e 94 92 10 	call	0x2124	; 0x2124 <conv_brk>
    2412:	ec 01       	movw	r28, r24
    2414:	89 2b       	or	r24, r25
    2416:	09 f0       	breq	.+2      	; 0x241a <vfscanf+0x17a>
    2418:	44 c0       	rjmp	.+136    	; 0x24a2 <vfscanf+0x202>
    241a:	3e c0       	rjmp	.+124    	; 0x2498 <vfscanf+0x1f8>
    241c:	c6 01       	movw	r24, r12
    241e:	0e 94 e7 0f 	call	0x1fce	; 0x1fce <skip_spaces>
    2422:	97 fd       	sbrc	r25, 7
    2424:	42 c0       	rjmp	.+132    	; 0x24aa <vfscanf+0x20a>
    2426:	1f 36       	cpi	r17, 0x6F	; 111
    2428:	61 f1       	breq	.+88     	; 0x2482 <vfscanf+0x1e2>
    242a:	28 f4       	brcc	.+10     	; 0x2436 <vfscanf+0x196>
    242c:	14 36       	cpi	r17, 0x64	; 100
    242e:	39 f1       	breq	.+78     	; 0x247e <vfscanf+0x1de>
    2430:	19 36       	cpi	r17, 0x69	; 105
    2432:	51 f1       	breq	.+84     	; 0x2488 <vfscanf+0x1e8>
    2434:	28 c0       	rjmp	.+80     	; 0x2486 <vfscanf+0x1e6>
    2436:	13 37       	cpi	r17, 0x73	; 115
    2438:	71 f0       	breq	.+28     	; 0x2456 <vfscanf+0x1b6>
    243a:	15 37       	cpi	r17, 0x75	; 117
    243c:	01 f1       	breq	.+64     	; 0x247e <vfscanf+0x1de>
    243e:	23 c0       	rjmp	.+70     	; 0x2486 <vfscanf+0x1e6>
    2440:	81 14       	cp	r8, r1
    2442:	91 04       	cpc	r9, r1
    2444:	29 f0       	breq	.+10     	; 0x2450 <vfscanf+0x1b0>
    2446:	f4 01       	movw	r30, r8
    2448:	60 82       	st	Z, r6
    244a:	c4 01       	movw	r24, r8
    244c:	01 96       	adiw	r24, 0x01	; 1
    244e:	4c 01       	movw	r8, r24
    2450:	fa 94       	dec	r15
    2452:	ff 20       	and	r15, r15
    2454:	71 f0       	breq	.+28     	; 0x2472 <vfscanf+0x1d2>
    2456:	c6 01       	movw	r24, r12
    2458:	0e 94 75 12 	call	0x24ea	; 0x24ea <fgetc>
    245c:	3c 01       	movw	r6, r24
    245e:	97 fd       	sbrc	r25, 7
    2460:	08 c0       	rjmp	.+16     	; 0x2472 <vfscanf+0x1d2>
    2462:	0e 94 61 12 	call	0x24c2	; 0x24c2 <isspace>
    2466:	89 2b       	or	r24, r25
    2468:	59 f3       	breq	.-42     	; 0x2440 <vfscanf+0x1a0>
    246a:	b6 01       	movw	r22, r12
    246c:	c3 01       	movw	r24, r6
    246e:	0e 94 b3 12 	call	0x2566	; 0x2566 <ungetc>
    2472:	81 14       	cp	r8, r1
    2474:	91 04       	cpc	r9, r1
    2476:	a9 f0       	breq	.+42     	; 0x24a2 <vfscanf+0x202>
    2478:	f4 01       	movw	r30, r8
    247a:	10 82       	st	Z, r1
    247c:	12 c0       	rjmp	.+36     	; 0x24a2 <vfscanf+0x202>
    247e:	00 62       	ori	r16, 0x20	; 32
    2480:	03 c0       	rjmp	.+6      	; 0x2488 <vfscanf+0x1e8>
    2482:	00 61       	ori	r16, 0x10	; 16
    2484:	01 c0       	rjmp	.+2      	; 0x2488 <vfscanf+0x1e8>
    2486:	00 64       	ori	r16, 0x40	; 64
    2488:	20 2f       	mov	r18, r16
    248a:	a4 01       	movw	r20, r8
    248c:	6f 2d       	mov	r22, r15
    248e:	c6 01       	movw	r24, r12
    2490:	0e 94 00 10 	call	0x2000	; 0x2000 <conv_int>
    2494:	81 11       	cpse	r24, r1
    2496:	05 c0       	rjmp	.+10     	; 0x24a2 <vfscanf+0x202>
    2498:	f6 01       	movw	r30, r12
    249a:	83 81       	ldd	r24, Z+3	; 0x03
    249c:	80 73       	andi	r24, 0x30	; 48
    249e:	29 f4       	brne	.+10     	; 0x24aa <vfscanf+0x20a>
    24a0:	06 c0       	rjmp	.+12     	; 0x24ae <vfscanf+0x20e>
    24a2:	00 fd       	sbrc	r16, 0
    24a4:	0a cf       	rjmp	.-492    	; 0x22ba <vfscanf+0x1a>
    24a6:	53 94       	inc	r5
    24a8:	08 cf       	rjmp	.-496    	; 0x22ba <vfscanf+0x1a>
    24aa:	55 20       	and	r5, r5
    24ac:	19 f0       	breq	.+6      	; 0x24b4 <vfscanf+0x214>
    24ae:	85 2d       	mov	r24, r5
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	02 c0       	rjmp	.+4      	; 0x24b8 <vfscanf+0x218>
    24b4:	8f ef       	ldi	r24, 0xFF	; 255
    24b6:	9f ef       	ldi	r25, 0xFF	; 255
    24b8:	cd b7       	in	r28, 0x3d	; 61
    24ba:	de b7       	in	r29, 0x3e	; 62
    24bc:	ef e0       	ldi	r30, 0x0F	; 15
    24be:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__epilogue_restores__+0x6>

000024c2 <isspace>:
    24c2:	91 11       	cpse	r25, r1
    24c4:	0c 94 cc 12 	jmp	0x2598	; 0x2598 <__ctype_isfalse>
    24c8:	80 32       	cpi	r24, 0x20	; 32
    24ca:	19 f0       	breq	.+6      	; 0x24d2 <isspace+0x10>
    24cc:	89 50       	subi	r24, 0x09	; 9
    24ce:	85 50       	subi	r24, 0x05	; 5
    24d0:	c8 f7       	brcc	.-14     	; 0x24c4 <isspace+0x2>
    24d2:	08 95       	ret

000024d4 <strchr_P>:
    24d4:	fc 01       	movw	r30, r24
    24d6:	05 90       	lpm	r0, Z+
    24d8:	06 16       	cp	r0, r22
    24da:	21 f0       	breq	.+8      	; 0x24e4 <strchr_P+0x10>
    24dc:	00 20       	and	r0, r0
    24de:	d9 f7       	brne	.-10     	; 0x24d6 <strchr_P+0x2>
    24e0:	c0 01       	movw	r24, r0
    24e2:	08 95       	ret
    24e4:	31 97       	sbiw	r30, 0x01	; 1
    24e6:	cf 01       	movw	r24, r30
    24e8:	08 95       	ret

000024ea <fgetc>:
    24ea:	cf 93       	push	r28
    24ec:	df 93       	push	r29
    24ee:	ec 01       	movw	r28, r24
    24f0:	2b 81       	ldd	r18, Y+3	; 0x03
    24f2:	20 ff       	sbrs	r18, 0
    24f4:	33 c0       	rjmp	.+102    	; 0x255c <fgetc+0x72>
    24f6:	26 ff       	sbrs	r18, 6
    24f8:	0a c0       	rjmp	.+20     	; 0x250e <fgetc+0x24>
    24fa:	2f 7b       	andi	r18, 0xBF	; 191
    24fc:	2b 83       	std	Y+3, r18	; 0x03
    24fe:	8e 81       	ldd	r24, Y+6	; 0x06
    2500:	9f 81       	ldd	r25, Y+7	; 0x07
    2502:	01 96       	adiw	r24, 0x01	; 1
    2504:	9f 83       	std	Y+7, r25	; 0x07
    2506:	8e 83       	std	Y+6, r24	; 0x06
    2508:	8a 81       	ldd	r24, Y+2	; 0x02
    250a:	90 e0       	ldi	r25, 0x00	; 0
    250c:	29 c0       	rjmp	.+82     	; 0x2560 <fgetc+0x76>
    250e:	22 ff       	sbrs	r18, 2
    2510:	0f c0       	rjmp	.+30     	; 0x2530 <fgetc+0x46>
    2512:	e8 81       	ld	r30, Y
    2514:	f9 81       	ldd	r31, Y+1	; 0x01
    2516:	80 81       	ld	r24, Z
    2518:	08 2e       	mov	r0, r24
    251a:	00 0c       	add	r0, r0
    251c:	99 0b       	sbc	r25, r25
    251e:	00 97       	sbiw	r24, 0x00	; 0
    2520:	19 f4       	brne	.+6      	; 0x2528 <fgetc+0x3e>
    2522:	20 62       	ori	r18, 0x20	; 32
    2524:	2b 83       	std	Y+3, r18	; 0x03
    2526:	1a c0       	rjmp	.+52     	; 0x255c <fgetc+0x72>
    2528:	31 96       	adiw	r30, 0x01	; 1
    252a:	f9 83       	std	Y+1, r31	; 0x01
    252c:	e8 83       	st	Y, r30
    252e:	0e c0       	rjmp	.+28     	; 0x254c <fgetc+0x62>
    2530:	ea 85       	ldd	r30, Y+10	; 0x0a
    2532:	fb 85       	ldd	r31, Y+11	; 0x0b
    2534:	09 95       	icall
    2536:	97 ff       	sbrs	r25, 7
    2538:	09 c0       	rjmp	.+18     	; 0x254c <fgetc+0x62>
    253a:	2b 81       	ldd	r18, Y+3	; 0x03
    253c:	01 96       	adiw	r24, 0x01	; 1
    253e:	11 f0       	breq	.+4      	; 0x2544 <fgetc+0x5a>
    2540:	80 e2       	ldi	r24, 0x20	; 32
    2542:	01 c0       	rjmp	.+2      	; 0x2546 <fgetc+0x5c>
    2544:	80 e1       	ldi	r24, 0x10	; 16
    2546:	82 2b       	or	r24, r18
    2548:	8b 83       	std	Y+3, r24	; 0x03
    254a:	08 c0       	rjmp	.+16     	; 0x255c <fgetc+0x72>
    254c:	2e 81       	ldd	r18, Y+6	; 0x06
    254e:	3f 81       	ldd	r19, Y+7	; 0x07
    2550:	2f 5f       	subi	r18, 0xFF	; 255
    2552:	3f 4f       	sbci	r19, 0xFF	; 255
    2554:	3f 83       	std	Y+7, r19	; 0x07
    2556:	2e 83       	std	Y+6, r18	; 0x06
    2558:	99 27       	eor	r25, r25
    255a:	02 c0       	rjmp	.+4      	; 0x2560 <fgetc+0x76>
    255c:	8f ef       	ldi	r24, 0xFF	; 255
    255e:	9f ef       	ldi	r25, 0xFF	; 255
    2560:	df 91       	pop	r29
    2562:	cf 91       	pop	r28
    2564:	08 95       	ret

00002566 <ungetc>:
    2566:	fb 01       	movw	r30, r22
    2568:	23 81       	ldd	r18, Z+3	; 0x03
    256a:	20 ff       	sbrs	r18, 0
    256c:	12 c0       	rjmp	.+36     	; 0x2592 <ungetc+0x2c>
    256e:	26 fd       	sbrc	r18, 6
    2570:	10 c0       	rjmp	.+32     	; 0x2592 <ungetc+0x2c>
    2572:	8f 3f       	cpi	r24, 0xFF	; 255
    2574:	3f ef       	ldi	r19, 0xFF	; 255
    2576:	93 07       	cpc	r25, r19
    2578:	61 f0       	breq	.+24     	; 0x2592 <ungetc+0x2c>
    257a:	82 83       	std	Z+2, r24	; 0x02
    257c:	2f 7d       	andi	r18, 0xDF	; 223
    257e:	20 64       	ori	r18, 0x40	; 64
    2580:	23 83       	std	Z+3, r18	; 0x03
    2582:	26 81       	ldd	r18, Z+6	; 0x06
    2584:	37 81       	ldd	r19, Z+7	; 0x07
    2586:	21 50       	subi	r18, 0x01	; 1
    2588:	31 09       	sbc	r19, r1
    258a:	37 83       	std	Z+7, r19	; 0x07
    258c:	26 83       	std	Z+6, r18	; 0x06
    258e:	99 27       	eor	r25, r25
    2590:	08 95       	ret
    2592:	8f ef       	ldi	r24, 0xFF	; 255
    2594:	9f ef       	ldi	r25, 0xFF	; 255
    2596:	08 95       	ret

00002598 <__ctype_isfalse>:
    2598:	99 27       	eor	r25, r25
    259a:	88 27       	eor	r24, r24

0000259c <__ctype_istrue>:
    259c:	08 95       	ret

0000259e <_exit>:
    259e:	f8 94       	cli

000025a0 <__stop_program>:
    25a0:	ff cf       	rjmp	.-2      	; 0x25a0 <__stop_program>
