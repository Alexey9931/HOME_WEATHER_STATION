
NRF24_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000106  00800100  00005258  000052ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005258  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000004d0  00800206  00800206  000053f2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000053f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005450  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000400  00000000  00000000  00005490  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007f64  00000000  00000000  00005890  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001662  00000000  00000000  0000d7f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003a6e  00000000  00000000  0000ee56  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000010cc  00000000  00000000  000128c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e2f  00000000  00000000  00013990  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005d56  00000000  00000000  000147bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000360  00000000  00000000  0001a515  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__ctors_end>
       4:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__vector_1>
       8:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
       c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      10:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      14:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      18:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      1c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      20:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      24:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      28:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      2c:	0c 94 32 08 	jmp	0x1064	; 0x1064 <__vector_11>
      30:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      34:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      38:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      3c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      40:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      44:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      48:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      4c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      50:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      54:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      58:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      5c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      60:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      64:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      68:	da 16       	cp	r13, r26
      6a:	e2 16       	cp	r14, r18
      6c:	ea 16       	cp	r14, r26
      6e:	f2 16       	cp	r15, r18
      70:	fa 16       	cp	r15, r26
      72:	02 17       	cp	r16, r18
      74:	0a 17       	cp	r16, r26
      76:	1f 17       	cp	r17, r31
      78:	29 17       	cp	r18, r25
      7a:	33 17       	cp	r19, r19
      7c:	3d 17       	cp	r19, r29
      7e:	47 17       	cp	r20, r23
      80:	52 17       	cp	r21, r18
      82:	5c 17       	cp	r21, r28
      84:	66 17       	cp	r22, r22
      86:	70 17       	cp	r23, r16
      88:	7a 17       	cp	r23, r26
      8a:	84 17       	cp	r24, r20
      8c:	8e 17       	cp	r24, r30

0000008e <__trampolines_end>:
      8e:	6e 61       	ori	r22, 0x1E	; 30
      90:	6e 00       	.word	0x006e	; ????

00000092 <__c.2332>:
      92:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a2:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b2:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c2:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d2:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e2:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f2:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     102:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     112:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     122:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     132:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     142:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     152:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     162:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     172:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     182:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000190 <__c.2474>:
     190:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

0000019c <__ctors_end>:
     19c:	11 24       	eor	r1, r1
     19e:	1f be       	out	0x3f, r1	; 63
     1a0:	cf ef       	ldi	r28, 0xFF	; 255
     1a2:	d8 e0       	ldi	r29, 0x08	; 8
     1a4:	de bf       	out	0x3e, r29	; 62
     1a6:	cd bf       	out	0x3d, r28	; 61

000001a8 <__do_copy_data>:
     1a8:	12 e0       	ldi	r17, 0x02	; 2
     1aa:	a0 e0       	ldi	r26, 0x00	; 0
     1ac:	b1 e0       	ldi	r27, 0x01	; 1
     1ae:	e8 e5       	ldi	r30, 0x58	; 88
     1b0:	f2 e5       	ldi	r31, 0x52	; 82
     1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <__do_copy_data+0x10>
     1b4:	05 90       	lpm	r0, Z+
     1b6:	0d 92       	st	X+, r0
     1b8:	a6 30       	cpi	r26, 0x06	; 6
     1ba:	b1 07       	cpc	r27, r17
     1bc:	d9 f7       	brne	.-10     	; 0x1b4 <__do_copy_data+0xc>

000001be <__do_clear_bss>:
     1be:	26 e0       	ldi	r18, 0x06	; 6
     1c0:	a6 e0       	ldi	r26, 0x06	; 6
     1c2:	b2 e0       	ldi	r27, 0x02	; 2
     1c4:	01 c0       	rjmp	.+2      	; 0x1c8 <.do_clear_bss_start>

000001c6 <.do_clear_bss_loop>:
     1c6:	1d 92       	st	X+, r1

000001c8 <.do_clear_bss_start>:
     1c8:	a6 3d       	cpi	r26, 0xD6	; 214
     1ca:	b2 07       	cpc	r27, r18
     1cc:	e1 f7       	brne	.-8      	; 0x1c6 <.do_clear_bss_loop>
     1ce:	0e 94 d6 08 	call	0x11ac	; 0x11ac <main>
     1d2:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <_exit>

000001d6 <__bad_interrupt>:
     1d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001da <LCD_1286_Draw_pixel>:

	/*Рисуем линии*/
	for (uint8_t i = 0; i <= height; i++) {
		LCD_12864_Draw_line(x, y + i, x + width, y + i);
	}
}
     1da:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1de:	69 17       	cp	r22, r25
     1e0:	e0 f4       	brcc	.+56     	; 0x21a <LCD_1286_Draw_pixel+0x40>
     1e2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     1e6:	89 17       	cp	r24, r25
     1e8:	c0 f4       	brcc	.+48     	; 0x21a <LCD_1286_Draw_pixel+0x40>
     1ea:	96 2f       	mov	r25, r22
     1ec:	96 95       	lsr	r25
     1ee:	96 95       	lsr	r25
     1f0:	96 95       	lsr	r25
     1f2:	e8 2f       	mov	r30, r24
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	80 e8       	ldi	r24, 0x80	; 128
     1f8:	98 9f       	mul	r25, r24
     1fa:	e0 0d       	add	r30, r0
     1fc:	f1 1d       	adc	r31, r1
     1fe:	11 24       	eor	r1, r1
     200:	67 70       	andi	r22, 0x07	; 7
     202:	81 e0       	ldi	r24, 0x01	; 1
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	02 c0       	rjmp	.+4      	; 0x20c <LCD_1286_Draw_pixel+0x32>
     208:	88 0f       	add	r24, r24
     20a:	99 1f       	adc	r25, r25
     20c:	6a 95       	dec	r22
     20e:	e2 f7       	brpl	.-8      	; 0x208 <LCD_1286_Draw_pixel+0x2e>
     210:	e6 56       	subi	r30, 0x66	; 102
     212:	fd 4f       	sbci	r31, 0xFD	; 253
     214:	90 81       	ld	r25, Z
     216:	89 2b       	or	r24, r25
     218:	80 83       	st	Z, r24
     21a:	08 95       	ret

0000021c <LCD_1286_Clean_pixel>:
     21c:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     220:	69 17       	cp	r22, r25
     222:	e0 f4       	brcc	.+56     	; 0x25c <LCD_1286_Clean_pixel+0x40>
     224:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     228:	89 17       	cp	r24, r25
     22a:	c0 f4       	brcc	.+48     	; 0x25c <LCD_1286_Clean_pixel+0x40>
     22c:	96 2f       	mov	r25, r22
     22e:	96 95       	lsr	r25
     230:	96 95       	lsr	r25
     232:	96 95       	lsr	r25
     234:	e8 2f       	mov	r30, r24
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	80 e8       	ldi	r24, 0x80	; 128
     23a:	98 9f       	mul	r25, r24
     23c:	e0 0d       	add	r30, r0
     23e:	f1 1d       	adc	r31, r1
     240:	11 24       	eor	r1, r1
     242:	67 70       	andi	r22, 0x07	; 7
     244:	8e ef       	ldi	r24, 0xFE	; 254
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	02 c0       	rjmp	.+4      	; 0x24e <LCD_1286_Clean_pixel+0x32>
     24a:	88 0f       	add	r24, r24
     24c:	99 1f       	adc	r25, r25
     24e:	6a 95       	dec	r22
     250:	e2 f7       	brpl	.-8      	; 0x24a <LCD_1286_Clean_pixel+0x2e>
     252:	e6 56       	subi	r30, 0x66	; 102
     254:	fd 4f       	sbci	r31, 0xFD	; 253
     256:	90 81       	ld	r25, Z
     258:	89 23       	and	r24, r25
     25a:	80 83       	st	Z, r24
     25c:	08 95       	ret

0000025e <strob>:
     25e:	85 e0       	ldi	r24, 0x05	; 5
     260:	8a 95       	dec	r24
     262:	f1 f7       	brne	.-4      	; 0x260 <strob+0x2>
     264:	00 00       	nop
     266:	8b b1       	in	r24, 0x0b	; 11
     268:	80 62       	ori	r24, 0x20	; 32
     26a:	8b b9       	out	0x0b, r24	; 11
     26c:	85 e0       	ldi	r24, 0x05	; 5
     26e:	8a 95       	dec	r24
     270:	f1 f7       	brne	.-4      	; 0x26e <strob+0x10>
     272:	00 00       	nop
     274:	8b b1       	in	r24, 0x0b	; 11
     276:	8f 7d       	andi	r24, 0xDF	; 223
     278:	8b b9       	out	0x0b, r24	; 11
     27a:	85 e0       	ldi	r24, 0x05	; 5
     27c:	8a 95       	dec	r24
     27e:	f1 f7       	brne	.-4      	; 0x27c <strob+0x1e>
     280:	00 00       	nop
     282:	08 95       	ret

00000284 <LCD_12864_send_data>:
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	18 2f       	mov	r17, r24
     28c:	8b b1       	in	r24, 0x0b	; 11
     28e:	80 68       	ori	r24, 0x80	; 128
     290:	8b b9       	out	0x0b, r24	; 11
     292:	8b b1       	in	r24, 0x0b	; 11
     294:	80 64       	ori	r24, 0x40	; 64
     296:	8b b9       	out	0x0b, r24	; 11
     298:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     29c:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2a0:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2a4:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2a8:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2ac:	8b b1       	in	r24, 0x0b	; 11
     2ae:	8f 7b       	andi	r24, 0xBF	; 191
     2b0:	8b b9       	out	0x0b, r24	; 11
     2b2:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2b6:	8b b1       	in	r24, 0x0b	; 11
     2b8:	80 64       	ori	r24, 0x40	; 64
     2ba:	8b b9       	out	0x0b, r24	; 11
     2bc:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2c0:	8b b1       	in	r24, 0x0b	; 11
     2c2:	8f 7b       	andi	r24, 0xBF	; 191
     2c4:	8b b9       	out	0x0b, r24	; 11
     2c6:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2ca:	c0 e0       	ldi	r28, 0x00	; 0
     2cc:	d0 e0       	ldi	r29, 0x00	; 0
     2ce:	1c c0       	rjmp	.+56     	; 0x308 <LCD_12864_send_data+0x84>
     2d0:	ce 01       	movw	r24, r28
     2d2:	04 97       	sbiw	r24, 0x04	; 4
     2d4:	04 97       	sbiw	r24, 0x04	; 4
     2d6:	30 f4       	brcc	.+12     	; 0x2e4 <LCD_12864_send_data+0x60>
     2d8:	8b b1       	in	r24, 0x0b	; 11
     2da:	8f 7b       	andi	r24, 0xBF	; 191
     2dc:	8b b9       	out	0x0b, r24	; 11
     2de:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2e2:	11 c0       	rjmp	.+34     	; 0x306 <LCD_12864_send_data+0x82>
     2e4:	81 2f       	mov	r24, r17
     2e6:	80 78       	andi	r24, 0x80	; 128
     2e8:	41 f0       	breq	.+16     	; 0x2fa <LCD_12864_send_data+0x76>
     2ea:	80 38       	cpi	r24, 0x80	; 128
     2ec:	59 f4       	brne	.+22     	; 0x304 <LCD_12864_send_data+0x80>
     2ee:	8b b1       	in	r24, 0x0b	; 11
     2f0:	80 64       	ori	r24, 0x40	; 64
     2f2:	8b b9       	out	0x0b, r24	; 11
     2f4:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     2f8:	05 c0       	rjmp	.+10     	; 0x304 <LCD_12864_send_data+0x80>
     2fa:	8b b1       	in	r24, 0x0b	; 11
     2fc:	8f 7b       	andi	r24, 0xBF	; 191
     2fe:	8b b9       	out	0x0b, r24	; 11
     300:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     304:	11 0f       	add	r17, r17
     306:	21 96       	adiw	r28, 0x01	; 1
     308:	cc 30       	cpi	r28, 0x0C	; 12
     30a:	d1 05       	cpc	r29, r1
     30c:	0c f3       	brlt	.-62     	; 0x2d0 <LCD_12864_send_data+0x4c>
     30e:	8b b1       	in	r24, 0x0b	; 11
     310:	8f 7b       	andi	r24, 0xBF	; 191
     312:	8b b9       	out	0x0b, r24	; 11
     314:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     318:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     31c:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     320:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     324:	8b b1       	in	r24, 0x0b	; 11
     326:	8f 77       	andi	r24, 0x7F	; 127
     328:	8b b9       	out	0x0b, r24	; 11
     32a:	df 91       	pop	r29
     32c:	cf 91       	pop	r28
     32e:	1f 91       	pop	r17
     330:	08 95       	ret

00000332 <LCD_12864_send_command>:
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	18 2f       	mov	r17, r24
     33a:	8b b1       	in	r24, 0x0b	; 11
     33c:	80 68       	ori	r24, 0x80	; 128
     33e:	8b b9       	out	0x0b, r24	; 11
     340:	8b b1       	in	r24, 0x0b	; 11
     342:	80 64       	ori	r24, 0x40	; 64
     344:	8b b9       	out	0x0b, r24	; 11
     346:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     34a:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     34e:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     352:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     356:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     35a:	8b b1       	in	r24, 0x0b	; 11
     35c:	8f 7b       	andi	r24, 0xBF	; 191
     35e:	8b b9       	out	0x0b, r24	; 11
     360:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     364:	8b b1       	in	r24, 0x0b	; 11
     366:	8f 7b       	andi	r24, 0xBF	; 191
     368:	8b b9       	out	0x0b, r24	; 11
     36a:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     36e:	8b b1       	in	r24, 0x0b	; 11
     370:	8f 7b       	andi	r24, 0xBF	; 191
     372:	8b b9       	out	0x0b, r24	; 11
     374:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     378:	c0 e0       	ldi	r28, 0x00	; 0
     37a:	d0 e0       	ldi	r29, 0x00	; 0
     37c:	1c c0       	rjmp	.+56     	; 0x3b6 <LCD_12864_send_command+0x84>
     37e:	ce 01       	movw	r24, r28
     380:	04 97       	sbiw	r24, 0x04	; 4
     382:	04 97       	sbiw	r24, 0x04	; 4
     384:	30 f4       	brcc	.+12     	; 0x392 <LCD_12864_send_command+0x60>
     386:	8b b1       	in	r24, 0x0b	; 11
     388:	8f 7b       	andi	r24, 0xBF	; 191
     38a:	8b b9       	out	0x0b, r24	; 11
     38c:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     390:	11 c0       	rjmp	.+34     	; 0x3b4 <LCD_12864_send_command+0x82>
     392:	81 2f       	mov	r24, r17
     394:	80 78       	andi	r24, 0x80	; 128
     396:	41 f0       	breq	.+16     	; 0x3a8 <LCD_12864_send_command+0x76>
     398:	80 38       	cpi	r24, 0x80	; 128
     39a:	59 f4       	brne	.+22     	; 0x3b2 <LCD_12864_send_command+0x80>
     39c:	8b b1       	in	r24, 0x0b	; 11
     39e:	80 64       	ori	r24, 0x40	; 64
     3a0:	8b b9       	out	0x0b, r24	; 11
     3a2:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     3a6:	05 c0       	rjmp	.+10     	; 0x3b2 <LCD_12864_send_command+0x80>
     3a8:	8b b1       	in	r24, 0x0b	; 11
     3aa:	8f 7b       	andi	r24, 0xBF	; 191
     3ac:	8b b9       	out	0x0b, r24	; 11
     3ae:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     3b2:	11 0f       	add	r17, r17
     3b4:	21 96       	adiw	r28, 0x01	; 1
     3b6:	cc 30       	cpi	r28, 0x0C	; 12
     3b8:	d1 05       	cpc	r29, r1
     3ba:	0c f3       	brlt	.-62     	; 0x37e <LCD_12864_send_command+0x4c>
     3bc:	8b b1       	in	r24, 0x0b	; 11
     3be:	8f 7b       	andi	r24, 0xBF	; 191
     3c0:	8b b9       	out	0x0b, r24	; 11
     3c2:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     3c6:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     3ca:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     3ce:	0e 94 2f 01 	call	0x25e	; 0x25e <strob>
     3d2:	8b b1       	in	r24, 0x0b	; 11
     3d4:	8f 77       	andi	r24, 0x7F	; 127
     3d6:	8b b9       	out	0x0b, r24	; 11
     3d8:	df 91       	pop	r29
     3da:	cf 91       	pop	r28
     3dc:	1f 91       	pop	r17
     3de:	08 95       	ret

000003e0 <LCD_12864_GrapnicMode>:
     3e0:	88 23       	and	r24, r24
     3e2:	99 f0       	breq	.+38     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     3e4:	84 e3       	ldi	r24, 0x34	; 52
     3e6:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     3ea:	8f e9       	ldi	r24, 0x9F	; 159
     3ec:	9f e0       	ldi	r25, 0x0F	; 15
     3ee:	01 97       	sbiw	r24, 0x01	; 1
     3f0:	f1 f7       	brne	.-4      	; 0x3ee <LCD_12864_GrapnicMode+0xe>
     3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <LCD_12864_GrapnicMode+0x14>
     3f4:	00 00       	nop
     3f6:	86 e3       	ldi	r24, 0x36	; 54
     3f8:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     3fc:	8f e9       	ldi	r24, 0x9F	; 159
     3fe:	9f e0       	ldi	r25, 0x0F	; 15
     400:	01 97       	sbiw	r24, 0x01	; 1
     402:	f1 f7       	brne	.-4      	; 0x400 <__EEPROM_REGION_LENGTH__>
     404:	00 c0       	rjmp	.+0      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     406:	00 00       	nop
     408:	08 95       	ret
     40a:	80 e3       	ldi	r24, 0x30	; 48
     40c:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     410:	8f e9       	ldi	r24, 0x9F	; 159
     412:	9f e0       	ldi	r25, 0x0F	; 15
     414:	01 97       	sbiw	r24, 0x01	; 1
     416:	f1 f7       	brne	.-4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     418:	00 c0       	rjmp	.+0      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     41a:	00 00       	nop
     41c:	08 95       	ret

0000041e <LCD_12864_Draw_bitmap>:
     41e:	8f 92       	push	r8
     420:	9f 92       	push	r9
     422:	af 92       	push	r10
     424:	bf 92       	push	r11
     426:	df 92       	push	r13
     428:	ef 92       	push	r14
     42a:	ff 92       	push	r15
     42c:	0f 93       	push	r16
     42e:	1f 93       	push	r17
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	7c 01       	movw	r14, r24
     436:	d1 2c       	mov	r13, r1
     438:	31 c1       	rjmp	.+610    	; 0x69c <LCD_12864_Draw_bitmap+0x27e>
     43a:	8f e1       	ldi	r24, 0x1F	; 31
     43c:	8d 15       	cp	r24, r13
     43e:	48 f0       	brcs	.+18     	; 0x452 <LCD_12864_Draw_bitmap+0x34>
     440:	8d 2d       	mov	r24, r13
     442:	80 68       	ori	r24, 0x80	; 128
     444:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     448:	80 2f       	mov	r24, r16
     44a:	80 68       	ori	r24, 0x80	; 128
     44c:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     450:	09 c0       	rjmp	.+18     	; 0x464 <LCD_12864_Draw_bitmap+0x46>
     452:	80 ee       	ldi	r24, 0xE0	; 224
     454:	8d 0d       	add	r24, r13
     456:	80 68       	ori	r24, 0x80	; 128
     458:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     45c:	80 2f       	mov	r24, r16
     45e:	88 68       	ori	r24, 0x88	; 136
     460:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     464:	cd 2d       	mov	r28, r13
     466:	c6 95       	lsr	r28
     468:	c6 95       	lsr	r28
     46a:	c6 95       	lsr	r28
     46c:	d0 e0       	ldi	r29, 0x00	; 0
     46e:	cc 0f       	add	r28, r28
     470:	dd 1f       	adc	r29, r29
     472:	cc 0f       	add	r28, r28
     474:	dd 1f       	adc	r29, r29
     476:	cc 0f       	add	r28, r28
     478:	dd 1f       	adc	r29, r29
     47a:	c0 0f       	add	r28, r16
     47c:	d1 1d       	adc	r29, r1
     47e:	c2 95       	swap	r28
     480:	d2 95       	swap	r29
     482:	d0 7f       	andi	r29, 0xF0	; 240
     484:	dc 27       	eor	r29, r28
     486:	c0 7f       	andi	r28, 0xF0	; 240
     488:	dc 27       	eor	r29, r28
     48a:	ce 0d       	add	r28, r14
     48c:	df 1d       	adc	r29, r15
     48e:	88 80       	ld	r8, Y
     490:	91 2c       	mov	r9, r1
     492:	1d 2d       	mov	r17, r13
     494:	17 70       	andi	r17, 0x07	; 7
     496:	01 2e       	mov	r0, r17
     498:	02 c0       	rjmp	.+4      	; 0x49e <LCD_12864_Draw_bitmap+0x80>
     49a:	95 94       	asr	r9
     49c:	87 94       	ror	r8
     49e:	0a 94       	dec	r0
     4a0:	e2 f7       	brpl	.-8      	; 0x49a <LCD_12864_Draw_bitmap+0x7c>
     4a2:	96 94       	lsr	r9
     4a4:	98 2c       	mov	r9, r8
     4a6:	88 24       	eor	r8, r8
     4a8:	97 94       	ror	r9
     4aa:	87 94       	ror	r8
     4ac:	a9 80       	ldd	r10, Y+1	; 0x01
     4ae:	b1 2c       	mov	r11, r1
     4b0:	01 2e       	mov	r0, r17
     4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <LCD_12864_Draw_bitmap+0x9a>
     4b4:	b5 94       	asr	r11
     4b6:	a7 94       	ror	r10
     4b8:	0a 94       	dec	r0
     4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <LCD_12864_Draw_bitmap+0x96>
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	a8 22       	and	r10, r24
     4c0:	bb 24       	eor	r11, r11
     4c2:	00 24       	eor	r0, r0
     4c4:	b6 94       	lsr	r11
     4c6:	a7 94       	ror	r10
     4c8:	07 94       	ror	r0
     4ca:	b6 94       	lsr	r11
     4cc:	a7 94       	ror	r10
     4ce:	07 94       	ror	r0
     4d0:	ba 2c       	mov	r11, r10
     4d2:	a0 2c       	mov	r10, r0
     4d4:	aa 81       	ldd	r26, Y+2	; 0x02
     4d6:	b0 e0       	ldi	r27, 0x00	; 0
     4d8:	01 2e       	mov	r0, r17
     4da:	02 c0       	rjmp	.+4      	; 0x4e0 <LCD_12864_Draw_bitmap+0xc2>
     4dc:	b5 95       	asr	r27
     4de:	a7 95       	ror	r26
     4e0:	0a 94       	dec	r0
     4e2:	e2 f7       	brpl	.-8      	; 0x4dc <LCD_12864_Draw_bitmap+0xbe>
     4e4:	a1 70       	andi	r26, 0x01	; 1
     4e6:	bb 27       	eor	r27, r27
     4e8:	aa 0f       	add	r26, r26
     4ea:	bb 1f       	adc	r27, r27
     4ec:	a2 95       	swap	r26
     4ee:	b2 95       	swap	r27
     4f0:	b0 7f       	andi	r27, 0xF0	; 240
     4f2:	ba 27       	eor	r27, r26
     4f4:	a0 7f       	andi	r26, 0xF0	; 240
     4f6:	ba 27       	eor	r27, r26
     4f8:	eb 81       	ldd	r30, Y+3	; 0x03
     4fa:	f0 e0       	ldi	r31, 0x00	; 0
     4fc:	01 2e       	mov	r0, r17
     4fe:	02 c0       	rjmp	.+4      	; 0x504 <LCD_12864_Draw_bitmap+0xe6>
     500:	f5 95       	asr	r31
     502:	e7 95       	ror	r30
     504:	0a 94       	dec	r0
     506:	e2 f7       	brpl	.-8      	; 0x500 <LCD_12864_Draw_bitmap+0xe2>
     508:	e1 70       	andi	r30, 0x01	; 1
     50a:	ff 27       	eor	r31, r31
     50c:	e2 95       	swap	r30
     50e:	f2 95       	swap	r31
     510:	f0 7f       	andi	r31, 0xF0	; 240
     512:	fe 27       	eor	r31, r30
     514:	e0 7f       	andi	r30, 0xF0	; 240
     516:	fe 27       	eor	r31, r30
     518:	6c 81       	ldd	r22, Y+4	; 0x04
     51a:	70 e0       	ldi	r23, 0x00	; 0
     51c:	01 2e       	mov	r0, r17
     51e:	02 c0       	rjmp	.+4      	; 0x524 <LCD_12864_Draw_bitmap+0x106>
     520:	75 95       	asr	r23
     522:	67 95       	ror	r22
     524:	0a 94       	dec	r0
     526:	e2 f7       	brpl	.-8      	; 0x520 <LCD_12864_Draw_bitmap+0x102>
     528:	61 70       	andi	r22, 0x01	; 1
     52a:	77 27       	eor	r23, r23
     52c:	66 0f       	add	r22, r22
     52e:	77 1f       	adc	r23, r23
     530:	66 0f       	add	r22, r22
     532:	77 1f       	adc	r23, r23
     534:	66 0f       	add	r22, r22
     536:	77 1f       	adc	r23, r23
     538:	4d 81       	ldd	r20, Y+5	; 0x05
     53a:	50 e0       	ldi	r21, 0x00	; 0
     53c:	01 2e       	mov	r0, r17
     53e:	02 c0       	rjmp	.+4      	; 0x544 <LCD_12864_Draw_bitmap+0x126>
     540:	55 95       	asr	r21
     542:	47 95       	ror	r20
     544:	0a 94       	dec	r0
     546:	e2 f7       	brpl	.-8      	; 0x540 <LCD_12864_Draw_bitmap+0x122>
     548:	41 70       	andi	r20, 0x01	; 1
     54a:	55 27       	eor	r21, r21
     54c:	44 0f       	add	r20, r20
     54e:	55 1f       	adc	r21, r21
     550:	44 0f       	add	r20, r20
     552:	55 1f       	adc	r21, r21
     554:	2e 81       	ldd	r18, Y+6	; 0x06
     556:	30 e0       	ldi	r19, 0x00	; 0
     558:	01 2e       	mov	r0, r17
     55a:	02 c0       	rjmp	.+4      	; 0x560 <LCD_12864_Draw_bitmap+0x142>
     55c:	35 95       	asr	r19
     55e:	27 95       	ror	r18
     560:	0a 94       	dec	r0
     562:	e2 f7       	brpl	.-8      	; 0x55c <LCD_12864_Draw_bitmap+0x13e>
     564:	21 70       	andi	r18, 0x01	; 1
     566:	33 27       	eor	r19, r19
     568:	22 0f       	add	r18, r18
     56a:	33 1f       	adc	r19, r19
     56c:	8f 81       	ldd	r24, Y+7	; 0x07
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	01 2e       	mov	r0, r17
     572:	02 c0       	rjmp	.+4      	; 0x578 <LCD_12864_Draw_bitmap+0x15a>
     574:	95 95       	asr	r25
     576:	87 95       	ror	r24
     578:	0a 94       	dec	r0
     57a:	e2 f7       	brpl	.-8      	; 0x574 <LCD_12864_Draw_bitmap+0x156>
     57c:	a8 28       	or	r10, r8
     57e:	aa 29       	or	r26, r10
     580:	ea 2b       	or	r30, r26
     582:	6e 2b       	or	r22, r30
     584:	46 2b       	or	r20, r22
     586:	24 2b       	or	r18, r20
     588:	81 70       	andi	r24, 0x01	; 1
     58a:	82 2b       	or	r24, r18
     58c:	0e 94 42 01 	call	0x284	; 0x284 <LCD_12864_send_data>
     590:	88 84       	ldd	r8, Y+8	; 0x08
     592:	91 2c       	mov	r9, r1
     594:	01 2e       	mov	r0, r17
     596:	02 c0       	rjmp	.+4      	; 0x59c <LCD_12864_Draw_bitmap+0x17e>
     598:	95 94       	asr	r9
     59a:	87 94       	ror	r8
     59c:	0a 94       	dec	r0
     59e:	e2 f7       	brpl	.-8      	; 0x598 <LCD_12864_Draw_bitmap+0x17a>
     5a0:	96 94       	lsr	r9
     5a2:	98 2c       	mov	r9, r8
     5a4:	88 24       	eor	r8, r8
     5a6:	97 94       	ror	r9
     5a8:	87 94       	ror	r8
     5aa:	a9 84       	ldd	r10, Y+9	; 0x09
     5ac:	b1 2c       	mov	r11, r1
     5ae:	01 2e       	mov	r0, r17
     5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <LCD_12864_Draw_bitmap+0x198>
     5b2:	b5 94       	asr	r11
     5b4:	a7 94       	ror	r10
     5b6:	0a 94       	dec	r0
     5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <LCD_12864_Draw_bitmap+0x194>
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	a8 22       	and	r10, r24
     5be:	bb 24       	eor	r11, r11
     5c0:	00 24       	eor	r0, r0
     5c2:	b6 94       	lsr	r11
     5c4:	a7 94       	ror	r10
     5c6:	07 94       	ror	r0
     5c8:	b6 94       	lsr	r11
     5ca:	a7 94       	ror	r10
     5cc:	07 94       	ror	r0
     5ce:	ba 2c       	mov	r11, r10
     5d0:	a0 2c       	mov	r10, r0
     5d2:	aa 85       	ldd	r26, Y+10	; 0x0a
     5d4:	b0 e0       	ldi	r27, 0x00	; 0
     5d6:	01 2e       	mov	r0, r17
     5d8:	02 c0       	rjmp	.+4      	; 0x5de <LCD_12864_Draw_bitmap+0x1c0>
     5da:	b5 95       	asr	r27
     5dc:	a7 95       	ror	r26
     5de:	0a 94       	dec	r0
     5e0:	e2 f7       	brpl	.-8      	; 0x5da <LCD_12864_Draw_bitmap+0x1bc>
     5e2:	a1 70       	andi	r26, 0x01	; 1
     5e4:	bb 27       	eor	r27, r27
     5e6:	aa 0f       	add	r26, r26
     5e8:	bb 1f       	adc	r27, r27
     5ea:	a2 95       	swap	r26
     5ec:	b2 95       	swap	r27
     5ee:	b0 7f       	andi	r27, 0xF0	; 240
     5f0:	ba 27       	eor	r27, r26
     5f2:	a0 7f       	andi	r26, 0xF0	; 240
     5f4:	ba 27       	eor	r27, r26
     5f6:	eb 85       	ldd	r30, Y+11	; 0x0b
     5f8:	f0 e0       	ldi	r31, 0x00	; 0
     5fa:	01 2e       	mov	r0, r17
     5fc:	02 c0       	rjmp	.+4      	; 0x602 <LCD_12864_Draw_bitmap+0x1e4>
     5fe:	f5 95       	asr	r31
     600:	e7 95       	ror	r30
     602:	0a 94       	dec	r0
     604:	e2 f7       	brpl	.-8      	; 0x5fe <LCD_12864_Draw_bitmap+0x1e0>
     606:	e1 70       	andi	r30, 0x01	; 1
     608:	ff 27       	eor	r31, r31
     60a:	e2 95       	swap	r30
     60c:	f2 95       	swap	r31
     60e:	f0 7f       	andi	r31, 0xF0	; 240
     610:	fe 27       	eor	r31, r30
     612:	e0 7f       	andi	r30, 0xF0	; 240
     614:	fe 27       	eor	r31, r30
     616:	6c 85       	ldd	r22, Y+12	; 0x0c
     618:	70 e0       	ldi	r23, 0x00	; 0
     61a:	01 2e       	mov	r0, r17
     61c:	02 c0       	rjmp	.+4      	; 0x622 <LCD_12864_Draw_bitmap+0x204>
     61e:	75 95       	asr	r23
     620:	67 95       	ror	r22
     622:	0a 94       	dec	r0
     624:	e2 f7       	brpl	.-8      	; 0x61e <LCD_12864_Draw_bitmap+0x200>
     626:	61 70       	andi	r22, 0x01	; 1
     628:	77 27       	eor	r23, r23
     62a:	66 0f       	add	r22, r22
     62c:	77 1f       	adc	r23, r23
     62e:	66 0f       	add	r22, r22
     630:	77 1f       	adc	r23, r23
     632:	66 0f       	add	r22, r22
     634:	77 1f       	adc	r23, r23
     636:	4d 85       	ldd	r20, Y+13	; 0x0d
     638:	50 e0       	ldi	r21, 0x00	; 0
     63a:	01 2e       	mov	r0, r17
     63c:	02 c0       	rjmp	.+4      	; 0x642 <LCD_12864_Draw_bitmap+0x224>
     63e:	55 95       	asr	r21
     640:	47 95       	ror	r20
     642:	0a 94       	dec	r0
     644:	e2 f7       	brpl	.-8      	; 0x63e <LCD_12864_Draw_bitmap+0x220>
     646:	41 70       	andi	r20, 0x01	; 1
     648:	55 27       	eor	r21, r21
     64a:	44 0f       	add	r20, r20
     64c:	55 1f       	adc	r21, r21
     64e:	44 0f       	add	r20, r20
     650:	55 1f       	adc	r21, r21
     652:	2e 85       	ldd	r18, Y+14	; 0x0e
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	01 2e       	mov	r0, r17
     658:	02 c0       	rjmp	.+4      	; 0x65e <LCD_12864_Draw_bitmap+0x240>
     65a:	35 95       	asr	r19
     65c:	27 95       	ror	r18
     65e:	0a 94       	dec	r0
     660:	e2 f7       	brpl	.-8      	; 0x65a <LCD_12864_Draw_bitmap+0x23c>
     662:	21 70       	andi	r18, 0x01	; 1
     664:	33 27       	eor	r19, r19
     666:	22 0f       	add	r18, r18
     668:	33 1f       	adc	r19, r19
     66a:	cf 85       	ldd	r28, Y+15	; 0x0f
     66c:	d0 e0       	ldi	r29, 0x00	; 0
     66e:	02 c0       	rjmp	.+4      	; 0x674 <LCD_12864_Draw_bitmap+0x256>
     670:	d5 95       	asr	r29
     672:	c7 95       	ror	r28
     674:	1a 95       	dec	r17
     676:	e2 f7       	brpl	.-8      	; 0x670 <LCD_12864_Draw_bitmap+0x252>
     678:	88 2d       	mov	r24, r8
     67a:	8a 29       	or	r24, r10
     67c:	8a 2b       	or	r24, r26
     67e:	8e 2b       	or	r24, r30
     680:	86 2b       	or	r24, r22
     682:	84 2b       	or	r24, r20
     684:	82 2b       	or	r24, r18
     686:	c1 70       	andi	r28, 0x01	; 1
     688:	8c 2b       	or	r24, r28
     68a:	0e 94 42 01 	call	0x284	; 0x284 <LCD_12864_send_data>
     68e:	0f 5f       	subi	r16, 0xFF	; 255
     690:	01 c0       	rjmp	.+2      	; 0x694 <LCD_12864_Draw_bitmap+0x276>
     692:	00 e0       	ldi	r16, 0x00	; 0
     694:	08 30       	cpi	r16, 0x08	; 8
     696:	08 f4       	brcc	.+2      	; 0x69a <LCD_12864_Draw_bitmap+0x27c>
     698:	d0 ce       	rjmp	.-608    	; 0x43a <LCD_12864_Draw_bitmap+0x1c>
     69a:	d3 94       	inc	r13
     69c:	8f e3       	ldi	r24, 0x3F	; 63
     69e:	8d 15       	cp	r24, r13
     6a0:	c0 f7       	brcc	.-16     	; 0x692 <LCD_12864_Draw_bitmap+0x274>
     6a2:	df 91       	pop	r29
     6a4:	cf 91       	pop	r28
     6a6:	1f 91       	pop	r17
     6a8:	0f 91       	pop	r16
     6aa:	ff 90       	pop	r15
     6ac:	ef 90       	pop	r14
     6ae:	df 90       	pop	r13
     6b0:	bf 90       	pop	r11
     6b2:	af 90       	pop	r10
     6b4:	9f 90       	pop	r9
     6b6:	8f 90       	pop	r8
     6b8:	08 95       	ret

000006ba <clear_LCD_12864>:
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     6c0:	8f e3       	ldi	r24, 0x3F	; 63
     6c2:	9c e9       	ldi	r25, 0x9C	; 156
     6c4:	01 97       	sbiw	r24, 0x01	; 1
     6c6:	f1 f7       	brne	.-4      	; 0x6c4 <clear_LCD_12864+0xa>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <clear_LCD_12864+0x10>
     6ca:	00 00       	nop
     6cc:	08 95       	ret

000006ce <LCD_12864_ini>:
     6ce:	2f ef       	ldi	r18, 0xFF	; 255
     6d0:	83 ef       	ldi	r24, 0xF3	; 243
     6d2:	91 e0       	ldi	r25, 0x01	; 1
     6d4:	21 50       	subi	r18, 0x01	; 1
     6d6:	80 40       	sbci	r24, 0x00	; 0
     6d8:	90 40       	sbci	r25, 0x00	; 0
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <LCD_12864_ini+0x6>
     6dc:	00 c0       	rjmp	.+0      	; 0x6de <LCD_12864_ini+0x10>
     6de:	00 00       	nop
     6e0:	8c e0       	ldi	r24, 0x0C	; 12
     6e2:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     6e6:	8f e8       	ldi	r24, 0x8F	; 143
     6e8:	91 e0       	ldi	r25, 0x01	; 1
     6ea:	01 97       	sbiw	r24, 0x01	; 1
     6ec:	f1 f7       	brne	.-4      	; 0x6ea <LCD_12864_ini+0x1c>
     6ee:	00 c0       	rjmp	.+0      	; 0x6f0 <LCD_12864_ini+0x22>
     6f0:	00 00       	nop
     6f2:	0e 94 5d 03 	call	0x6ba	; 0x6ba <clear_LCD_12864>
     6f6:	86 e0       	ldi	r24, 0x06	; 6
     6f8:	0e 94 99 01 	call	0x332	; 0x332 <LCD_12864_send_command>
     6fc:	8f e3       	ldi	r24, 0x3F	; 63
     6fe:	9c e9       	ldi	r25, 0x9C	; 156
     700:	01 97       	sbiw	r24, 0x01	; 1
     702:	f1 f7       	brne	.-4      	; 0x700 <LCD_12864_ini+0x32>
     704:	00 c0       	rjmp	.+0      	; 0x706 <LCD_12864_ini+0x38>
     706:	00 00       	nop
     708:	08 95       	ret

0000070a <LCD_12864_print_symbol>:
     70a:	bf 92       	push	r11
     70c:	cf 92       	push	r12
     70e:	df 92       	push	r13
     710:	ef 92       	push	r14
     712:	ff 92       	push	r15
     714:	0f 93       	push	r16
     716:	1f 93       	push	r17
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	6c 01       	movw	r12, r24
     71e:	7b 01       	movw	r14, r22
     720:	b4 2e       	mov	r11, r20
     722:	c0 e0       	ldi	r28, 0x00	; 0
     724:	d0 e0       	ldi	r29, 0x00	; 0
     726:	2d c0       	rjmp	.+90     	; 0x782 <LCD_12864_print_symbol+0x78>
     728:	bb 20       	and	r11, r11
     72a:	b1 f0       	breq	.+44     	; 0x758 <LCD_12864_print_symbol+0x4e>
     72c:	8e 01       	movw	r16, r28
     72e:	0c 0d       	add	r16, r12
     730:	1d 1d       	adc	r17, r13
     732:	01 50       	subi	r16, 0x01	; 1
     734:	11 09       	sbc	r17, r1
     736:	c7 01       	movw	r24, r14
     738:	88 0f       	add	r24, r24
     73a:	99 1f       	adc	r25, r25
     73c:	8e 0d       	add	r24, r14
     73e:	9f 1d       	adc	r25, r15
     740:	88 0f       	add	r24, r24
     742:	99 1f       	adc	r25, r25
     744:	8c 0f       	add	r24, r28
     746:	9d 1f       	adc	r25, r29
     748:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     74c:	f8 01       	movw	r30, r16
     74e:	e6 56       	subi	r30, 0x66	; 102
     750:	fd 4f       	sbci	r31, 0xFD	; 253
     752:	80 95       	com	r24
     754:	80 83       	st	Z, r24
     756:	14 c0       	rjmp	.+40     	; 0x780 <LCD_12864_print_symbol+0x76>
     758:	86 01       	movw	r16, r12
     75a:	0c 0f       	add	r16, r28
     75c:	1d 1f       	adc	r17, r29
     75e:	01 50       	subi	r16, 0x01	; 1
     760:	11 09       	sbc	r17, r1
     762:	c7 01       	movw	r24, r14
     764:	88 0f       	add	r24, r24
     766:	99 1f       	adc	r25, r25
     768:	8e 0d       	add	r24, r14
     76a:	9f 1d       	adc	r25, r15
     76c:	88 0f       	add	r24, r24
     76e:	99 1f       	adc	r25, r25
     770:	8c 0f       	add	r24, r28
     772:	9d 1f       	adc	r25, r29
     774:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     778:	f8 01       	movw	r30, r16
     77a:	e6 56       	subi	r30, 0x66	; 102
     77c:	fd 4f       	sbci	r31, 0xFD	; 253
     77e:	80 83       	st	Z, r24
     780:	21 96       	adiw	r28, 0x01	; 1
     782:	c7 30       	cpi	r28, 0x07	; 7
     784:	d1 05       	cpc	r29, r1
     786:	84 f2       	brlt	.-96     	; 0x728 <LCD_12864_print_symbol+0x1e>
     788:	df 91       	pop	r29
     78a:	cf 91       	pop	r28
     78c:	1f 91       	pop	r17
     78e:	0f 91       	pop	r16
     790:	ff 90       	pop	r15
     792:	ef 90       	pop	r14
     794:	df 90       	pop	r13
     796:	cf 90       	pop	r12
     798:	bf 90       	pop	r11
     79a:	08 95       	ret

0000079c <LCD_12864_print_symbol_4_6>:
     79c:	bf 92       	push	r11
     79e:	cf 92       	push	r12
     7a0:	df 92       	push	r13
     7a2:	ef 92       	push	r14
     7a4:	ff 92       	push	r15
     7a6:	0f 93       	push	r16
     7a8:	1f 93       	push	r17
     7aa:	cf 93       	push	r28
     7ac:	df 93       	push	r29
     7ae:	6c 01       	movw	r12, r24
     7b0:	7b 01       	movw	r14, r22
     7b2:	b4 2e       	mov	r11, r20
     7b4:	c0 e0       	ldi	r28, 0x00	; 0
     7b6:	d0 e0       	ldi	r29, 0x00	; 0
     7b8:	29 c0       	rjmp	.+82     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
     7ba:	bb 20       	and	r11, r11
     7bc:	a1 f0       	breq	.+40     	; 0x7e6 <LCD_12864_print_symbol_4_6+0x4a>
     7be:	8e 01       	movw	r16, r28
     7c0:	0c 0d       	add	r16, r12
     7c2:	1d 1d       	adc	r17, r13
     7c4:	01 50       	subi	r16, 0x01	; 1
     7c6:	11 09       	sbc	r17, r1
     7c8:	c7 01       	movw	r24, r14
     7ca:	88 0f       	add	r24, r24
     7cc:	99 1f       	adc	r25, r25
     7ce:	88 0f       	add	r24, r24
     7d0:	99 1f       	adc	r25, r25
     7d2:	8c 0f       	add	r24, r28
     7d4:	9d 1f       	adc	r25, r29
     7d6:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     7da:	f8 01       	movw	r30, r16
     7dc:	e6 56       	subi	r30, 0x66	; 102
     7de:	fd 4f       	sbci	r31, 0xFD	; 253
     7e0:	80 95       	com	r24
     7e2:	80 83       	st	Z, r24
     7e4:	12 c0       	rjmp	.+36     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7e6:	86 01       	movw	r16, r12
     7e8:	0c 0f       	add	r16, r28
     7ea:	1d 1f       	adc	r17, r29
     7ec:	01 50       	subi	r16, 0x01	; 1
     7ee:	11 09       	sbc	r17, r1
     7f0:	c7 01       	movw	r24, r14
     7f2:	88 0f       	add	r24, r24
     7f4:	99 1f       	adc	r25, r25
     7f6:	88 0f       	add	r24, r24
     7f8:	99 1f       	adc	r25, r25
     7fa:	8c 0f       	add	r24, r28
     7fc:	9d 1f       	adc	r25, r29
     7fe:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     802:	f8 01       	movw	r30, r16
     804:	e6 56       	subi	r30, 0x66	; 102
     806:	fd 4f       	sbci	r31, 0xFD	; 253
     808:	80 83       	st	Z, r24
     80a:	21 96       	adiw	r28, 0x01	; 1
     80c:	c4 30       	cpi	r28, 0x04	; 4
     80e:	d1 05       	cpc	r29, r1
     810:	a4 f2       	brlt	.-88     	; 0x7ba <LCD_12864_print_symbol_4_6+0x1e>
     812:	df 91       	pop	r29
     814:	cf 91       	pop	r28
     816:	1f 91       	pop	r17
     818:	0f 91       	pop	r16
     81a:	ff 90       	pop	r15
     81c:	ef 90       	pop	r14
     81e:	df 90       	pop	r13
     820:	cf 90       	pop	r12
     822:	bf 90       	pop	r11
     824:	08 95       	ret

00000826 <LCD_12864_print_symbol_11_16>:
     826:	bf 92       	push	r11
     828:	cf 92       	push	r12
     82a:	df 92       	push	r13
     82c:	ef 92       	push	r14
     82e:	ff 92       	push	r15
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	6c 01       	movw	r12, r24
     83a:	7b 01       	movw	r14, r22
     83c:	b4 2e       	mov	r11, r20
     83e:	c0 e0       	ldi	r28, 0x00	; 0
     840:	d0 e0       	ldi	r29, 0x00	; 0
     842:	2b c0       	rjmp	.+86     	; 0x89a <LCD_12864_print_symbol_11_16+0x74>
     844:	bb 20       	and	r11, r11
     846:	a9 f0       	breq	.+42     	; 0x872 <LCD_12864_print_symbol_11_16+0x4c>
     848:	8e 01       	movw	r16, r28
     84a:	0c 0d       	add	r16, r12
     84c:	1d 1d       	adc	r17, r13
     84e:	01 50       	subi	r16, 0x01	; 1
     850:	11 09       	sbc	r17, r1
     852:	26 e1       	ldi	r18, 0x16	; 22
     854:	2e 9d       	mul	r18, r14
     856:	c0 01       	movw	r24, r0
     858:	2f 9d       	mul	r18, r15
     85a:	90 0d       	add	r25, r0
     85c:	11 24       	eor	r1, r1
     85e:	8c 0f       	add	r24, r28
     860:	9d 1f       	adc	r25, r29
     862:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     866:	f8 01       	movw	r30, r16
     868:	e6 56       	subi	r30, 0x66	; 102
     86a:	fd 4f       	sbci	r31, 0xFD	; 253
     86c:	80 95       	com	r24
     86e:	80 83       	st	Z, r24
     870:	13 c0       	rjmp	.+38     	; 0x898 <LCD_12864_print_symbol_11_16+0x72>
     872:	86 01       	movw	r16, r12
     874:	0c 0f       	add	r16, r28
     876:	1d 1f       	adc	r17, r29
     878:	01 50       	subi	r16, 0x01	; 1
     87a:	11 09       	sbc	r17, r1
     87c:	26 e1       	ldi	r18, 0x16	; 22
     87e:	2e 9d       	mul	r18, r14
     880:	c0 01       	movw	r24, r0
     882:	2f 9d       	mul	r18, r15
     884:	90 0d       	add	r25, r0
     886:	11 24       	eor	r1, r1
     888:	8c 0f       	add	r24, r28
     88a:	9d 1f       	adc	r25, r29
     88c:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     890:	f8 01       	movw	r30, r16
     892:	e6 56       	subi	r30, 0x66	; 102
     894:	fd 4f       	sbci	r31, 0xFD	; 253
     896:	80 83       	st	Z, r24
     898:	21 96       	adiw	r28, 0x01	; 1
     89a:	cb 30       	cpi	r28, 0x0B	; 11
     89c:	d1 05       	cpc	r29, r1
     89e:	94 f2       	brlt	.-92     	; 0x844 <LCD_12864_print_symbol_11_16+0x1e>
     8a0:	85 e7       	ldi	r24, 0x75	; 117
     8a2:	c8 0e       	add	r12, r24
     8a4:	d1 1c       	adc	r13, r1
     8a6:	cb e0       	ldi	r28, 0x0B	; 11
     8a8:	d0 e0       	ldi	r29, 0x00	; 0
     8aa:	2b c0       	rjmp	.+86     	; 0x902 <__stack+0x3>
     8ac:	bb 20       	and	r11, r11
     8ae:	a9 f0       	breq	.+42     	; 0x8da <LCD_12864_print_symbol_11_16+0xb4>
     8b0:	86 01       	movw	r16, r12
     8b2:	0c 0f       	add	r16, r28
     8b4:	1d 1f       	adc	r17, r29
     8b6:	01 50       	subi	r16, 0x01	; 1
     8b8:	11 09       	sbc	r17, r1
     8ba:	26 e1       	ldi	r18, 0x16	; 22
     8bc:	2e 9d       	mul	r18, r14
     8be:	c0 01       	movw	r24, r0
     8c0:	2f 9d       	mul	r18, r15
     8c2:	90 0d       	add	r25, r0
     8c4:	11 24       	eor	r1, r1
     8c6:	8c 0f       	add	r24, r28
     8c8:	9d 1f       	adc	r25, r29
     8ca:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     8ce:	f8 01       	movw	r30, r16
     8d0:	e6 56       	subi	r30, 0x66	; 102
     8d2:	fd 4f       	sbci	r31, 0xFD	; 253
     8d4:	80 95       	com	r24
     8d6:	80 83       	st	Z, r24
     8d8:	13 c0       	rjmp	.+38     	; 0x900 <__stack+0x1>
     8da:	86 01       	movw	r16, r12
     8dc:	0c 0f       	add	r16, r28
     8de:	1d 1f       	adc	r17, r29
     8e0:	01 50       	subi	r16, 0x01	; 1
     8e2:	11 09       	sbc	r17, r1
     8e4:	26 e1       	ldi	r18, 0x16	; 22
     8e6:	2e 9d       	mul	r18, r14
     8e8:	c0 01       	movw	r24, r0
     8ea:	2f 9d       	mul	r18, r15
     8ec:	90 0d       	add	r25, r0
     8ee:	11 24       	eor	r1, r1
     8f0:	8c 0f       	add	r24, r28
     8f2:	9d 1f       	adc	r25, r29
     8f4:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     8f8:	f8 01       	movw	r30, r16
     8fa:	e6 56       	subi	r30, 0x66	; 102
     8fc:	fd 4f       	sbci	r31, 0xFD	; 253
     8fe:	80 83       	st	Z, r24
     900:	21 96       	adiw	r28, 0x01	; 1
     902:	c6 31       	cpi	r28, 0x16	; 22
     904:	d1 05       	cpc	r29, r1
     906:	94 f2       	brlt	.-92     	; 0x8ac <LCD_12864_print_symbol_11_16+0x86>
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	ff 90       	pop	r15
     912:	ef 90       	pop	r14
     914:	df 90       	pop	r13
     916:	cf 90       	pop	r12
     918:	bf 90       	pop	r11
     91a:	08 95       	ret

0000091c <LCD_12864_print_symbol_7_11>:
     91c:	bf 92       	push	r11
     91e:	cf 92       	push	r12
     920:	df 92       	push	r13
     922:	ef 92       	push	r14
     924:	ff 92       	push	r15
     926:	0f 93       	push	r16
     928:	1f 93       	push	r17
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
     92e:	6c 01       	movw	r12, r24
     930:	7b 01       	movw	r14, r22
     932:	b4 2e       	mov	r11, r20
     934:	c0 e0       	ldi	r28, 0x00	; 0
     936:	d0 e0       	ldi	r29, 0x00	; 0
     938:	37 c0       	rjmp	.+110    	; 0x9a8 <LCD_12864_print_symbol_7_11+0x8c>
     93a:	bb 20       	and	r11, r11
     93c:	d9 f0       	breq	.+54     	; 0x974 <LCD_12864_print_symbol_7_11+0x58>
     93e:	8e 01       	movw	r16, r28
     940:	0c 0d       	add	r16, r12
     942:	1d 1d       	adc	r17, r13
     944:	01 50       	subi	r16, 0x01	; 1
     946:	11 09       	sbc	r17, r1
     948:	97 01       	movw	r18, r14
     94a:	22 0f       	add	r18, r18
     94c:	33 1f       	adc	r19, r19
     94e:	c9 01       	movw	r24, r18
     950:	88 0f       	add	r24, r24
     952:	99 1f       	adc	r25, r25
     954:	88 0f       	add	r24, r24
     956:	99 1f       	adc	r25, r25
     958:	88 0f       	add	r24, r24
     95a:	99 1f       	adc	r25, r25
     95c:	82 1b       	sub	r24, r18
     95e:	93 0b       	sbc	r25, r19
     960:	8c 0f       	add	r24, r28
     962:	9d 1f       	adc	r25, r29
     964:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     968:	f8 01       	movw	r30, r16
     96a:	e6 56       	subi	r30, 0x66	; 102
     96c:	fd 4f       	sbci	r31, 0xFD	; 253
     96e:	80 95       	com	r24
     970:	80 83       	st	Z, r24
     972:	19 c0       	rjmp	.+50     	; 0x9a6 <LCD_12864_print_symbol_7_11+0x8a>
     974:	86 01       	movw	r16, r12
     976:	0c 0f       	add	r16, r28
     978:	1d 1f       	adc	r17, r29
     97a:	01 50       	subi	r16, 0x01	; 1
     97c:	11 09       	sbc	r17, r1
     97e:	97 01       	movw	r18, r14
     980:	22 0f       	add	r18, r18
     982:	33 1f       	adc	r19, r19
     984:	c9 01       	movw	r24, r18
     986:	88 0f       	add	r24, r24
     988:	99 1f       	adc	r25, r25
     98a:	88 0f       	add	r24, r24
     98c:	99 1f       	adc	r25, r25
     98e:	88 0f       	add	r24, r24
     990:	99 1f       	adc	r25, r25
     992:	82 1b       	sub	r24, r18
     994:	93 0b       	sbc	r25, r19
     996:	8c 0f       	add	r24, r28
     998:	9d 1f       	adc	r25, r29
     99a:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     99e:	f8 01       	movw	r30, r16
     9a0:	e6 56       	subi	r30, 0x66	; 102
     9a2:	fd 4f       	sbci	r31, 0xFD	; 253
     9a4:	80 83       	st	Z, r24
     9a6:	21 96       	adiw	r28, 0x01	; 1
     9a8:	c7 30       	cpi	r28, 0x07	; 7
     9aa:	d1 05       	cpc	r29, r1
     9ac:	34 f2       	brlt	.-116    	; 0x93a <LCD_12864_print_symbol_7_11+0x1e>
     9ae:	89 e7       	ldi	r24, 0x79	; 121
     9b0:	c8 0e       	add	r12, r24
     9b2:	d1 1c       	adc	r13, r1
     9b4:	c7 e0       	ldi	r28, 0x07	; 7
     9b6:	d0 e0       	ldi	r29, 0x00	; 0
     9b8:	37 c0       	rjmp	.+110    	; 0xa28 <LCD_12864_print_symbol_7_11+0x10c>
     9ba:	bb 20       	and	r11, r11
     9bc:	d9 f0       	breq	.+54     	; 0x9f4 <LCD_12864_print_symbol_7_11+0xd8>
     9be:	86 01       	movw	r16, r12
     9c0:	0c 0f       	add	r16, r28
     9c2:	1d 1f       	adc	r17, r29
     9c4:	01 50       	subi	r16, 0x01	; 1
     9c6:	11 09       	sbc	r17, r1
     9c8:	97 01       	movw	r18, r14
     9ca:	22 0f       	add	r18, r18
     9cc:	33 1f       	adc	r19, r19
     9ce:	c9 01       	movw	r24, r18
     9d0:	88 0f       	add	r24, r24
     9d2:	99 1f       	adc	r25, r25
     9d4:	88 0f       	add	r24, r24
     9d6:	99 1f       	adc	r25, r25
     9d8:	88 0f       	add	r24, r24
     9da:	99 1f       	adc	r25, r25
     9dc:	82 1b       	sub	r24, r18
     9de:	93 0b       	sbc	r25, r19
     9e0:	8c 0f       	add	r24, r28
     9e2:	9d 1f       	adc	r25, r29
     9e4:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     9e8:	f8 01       	movw	r30, r16
     9ea:	e6 56       	subi	r30, 0x66	; 102
     9ec:	fd 4f       	sbci	r31, 0xFD	; 253
     9ee:	80 95       	com	r24
     9f0:	80 83       	st	Z, r24
     9f2:	19 c0       	rjmp	.+50     	; 0xa26 <LCD_12864_print_symbol_7_11+0x10a>
     9f4:	86 01       	movw	r16, r12
     9f6:	0c 0f       	add	r16, r28
     9f8:	1d 1f       	adc	r17, r29
     9fa:	01 50       	subi	r16, 0x01	; 1
     9fc:	11 09       	sbc	r17, r1
     9fe:	97 01       	movw	r18, r14
     a00:	22 0f       	add	r18, r18
     a02:	33 1f       	adc	r19, r19
     a04:	c9 01       	movw	r24, r18
     a06:	88 0f       	add	r24, r24
     a08:	99 1f       	adc	r25, r25
     a0a:	88 0f       	add	r24, r24
     a0c:	99 1f       	adc	r25, r25
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	82 1b       	sub	r24, r18
     a14:	93 0b       	sbc	r25, r19
     a16:	8c 0f       	add	r24, r28
     a18:	9d 1f       	adc	r25, r29
     a1a:	0e 94 4a 15 	call	0x2a94	; 0x2a94 <read_symbol_from_SD>
     a1e:	f8 01       	movw	r30, r16
     a20:	e6 56       	subi	r30, 0x66	; 102
     a22:	fd 4f       	sbci	r31, 0xFD	; 253
     a24:	80 83       	st	Z, r24
     a26:	21 96       	adiw	r28, 0x01	; 1
     a28:	ce 30       	cpi	r28, 0x0E	; 14
     a2a:	d1 05       	cpc	r29, r1
     a2c:	34 f2       	brlt	.-116    	; 0x9ba <LCD_12864_print_symbol_7_11+0x9e>
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	ff 90       	pop	r15
     a38:	ef 90       	pop	r14
     a3a:	df 90       	pop	r13
     a3c:	cf 90       	pop	r12
     a3e:	bf 90       	pop	r11
     a40:	08 95       	ret

00000a42 <LCD_12864_Print_7_11>:
     a42:	bf 92       	push	r11
     a44:	cf 92       	push	r12
     a46:	df 92       	push	r13
     a48:	ef 92       	push	r14
     a4a:	ff 92       	push	r15
     a4c:	0f 93       	push	r16
     a4e:	1f 93       	push	r17
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	cd b7       	in	r28, 0x3d	; 61
     a56:	de b7       	in	r29, 0x3e	; 62
     a58:	ac 97       	sbiw	r28, 0x2c	; 44
     a5a:	0f b6       	in	r0, 0x3f	; 63
     a5c:	f8 94       	cli
     a5e:	de bf       	out	0x3e, r29	; 62
     a60:	0f be       	out	0x3f, r0	; 63
     a62:	cd bf       	out	0x3d, r28	; 61
     a64:	6c 01       	movw	r12, r24
     a66:	16 2f       	mov	r17, r22
     a68:	b4 2e       	mov	r11, r20
     a6a:	79 01       	movw	r14, r18
     a6c:	00 00       	nop
     a6e:	ce 01       	movw	r24, r28
     a70:	01 96       	adiw	r24, 0x01	; 1
     a72:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     a76:	85 e0       	ldi	r24, 0x05	; 5
     a78:	91 e0       	ldi	r25, 0x01	; 1
     a7a:	0e 94 b4 12 	call	0x2568	; 0x2568 <pf_open>
     a7e:	80 e8       	ldi	r24, 0x80	; 128
     a80:	18 9f       	mul	r17, r24
     a82:	c0 0c       	add	r12, r0
     a84:	d1 1c       	adc	r13, r1
     a86:	11 24       	eor	r1, r1
     a88:	00 e0       	ldi	r16, 0x00	; 0
     a8a:	10 e0       	ldi	r17, 0x00	; 0
     a8c:	2d c0       	rjmp	.+90     	; 0xae8 <LCD_12864_Print_7_11+0xa6>
     a8e:	f7 01       	movw	r30, r14
     a90:	e0 0f       	add	r30, r16
     a92:	f1 1f       	adc	r31, r17
     a94:	60 81       	ld	r22, Z
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	bb 20       	and	r11, r11
     a9a:	89 f0       	breq	.+34     	; 0xabe <LCD_12864_Print_7_11+0x7c>
     a9c:	6e 32       	cpi	r22, 0x2E	; 46
     a9e:	71 05       	cpc	r23, r1
     aa0:	39 f0       	breq	.+14     	; 0xab0 <LCD_12864_Print_7_11+0x6e>
     aa2:	60 53       	subi	r22, 0x30	; 48
     aa4:	71 09       	sbc	r23, r1
     aa6:	41 e0       	ldi	r20, 0x01	; 1
     aa8:	c6 01       	movw	r24, r12
     aaa:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_12864_print_symbol_7_11>
     aae:	17 c0       	rjmp	.+46     	; 0xade <LCD_12864_Print_7_11+0x9c>
     ab0:	41 e0       	ldi	r20, 0x01	; 1
     ab2:	6a e0       	ldi	r22, 0x0A	; 10
     ab4:	70 e0       	ldi	r23, 0x00	; 0
     ab6:	c6 01       	movw	r24, r12
     ab8:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_12864_print_symbol_7_11>
     abc:	10 c0       	rjmp	.+32     	; 0xade <LCD_12864_Print_7_11+0x9c>
     abe:	6e 32       	cpi	r22, 0x2E	; 46
     ac0:	71 05       	cpc	r23, r1
     ac2:	39 f0       	breq	.+14     	; 0xad2 <LCD_12864_Print_7_11+0x90>
     ac4:	60 53       	subi	r22, 0x30	; 48
     ac6:	71 09       	sbc	r23, r1
     ac8:	40 e0       	ldi	r20, 0x00	; 0
     aca:	c6 01       	movw	r24, r12
     acc:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_12864_print_symbol_7_11>
     ad0:	06 c0       	rjmp	.+12     	; 0xade <LCD_12864_Print_7_11+0x9c>
     ad2:	40 e0       	ldi	r20, 0x00	; 0
     ad4:	6a e0       	ldi	r22, 0x0A	; 10
     ad6:	70 e0       	ldi	r23, 0x00	; 0
     ad8:	c6 01       	movw	r24, r12
     ada:	0e 94 8e 04 	call	0x91c	; 0x91c <LCD_12864_print_symbol_7_11>
     ade:	88 e0       	ldi	r24, 0x08	; 8
     ae0:	c8 0e       	add	r12, r24
     ae2:	d1 1c       	adc	r13, r1
     ae4:	0f 5f       	subi	r16, 0xFF	; 255
     ae6:	1f 4f       	sbci	r17, 0xFF	; 255
     ae8:	f7 01       	movw	r30, r14
     aea:	01 90       	ld	r0, Z+
     aec:	00 20       	and	r0, r0
     aee:	e9 f7       	brne	.-6      	; 0xaea <LCD_12864_Print_7_11+0xa8>
     af0:	31 97       	sbiw	r30, 0x01	; 1
     af2:	ee 19       	sub	r30, r14
     af4:	ff 09       	sbc	r31, r15
     af6:	0e 17       	cp	r16, r30
     af8:	1f 07       	cpc	r17, r31
     afa:	48 f2       	brcs	.-110    	; 0xa8e <LCD_12864_Print_7_11+0x4c>
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     b04:	ac 96       	adiw	r28, 0x2c	; 44
     b06:	0f b6       	in	r0, 0x3f	; 63
     b08:	f8 94       	cli
     b0a:	de bf       	out	0x3e, r29	; 62
     b0c:	0f be       	out	0x3f, r0	; 63
     b0e:	cd bf       	out	0x3d, r28	; 61
     b10:	df 91       	pop	r29
     b12:	cf 91       	pop	r28
     b14:	1f 91       	pop	r17
     b16:	0f 91       	pop	r16
     b18:	ff 90       	pop	r15
     b1a:	ef 90       	pop	r14
     b1c:	df 90       	pop	r13
     b1e:	cf 90       	pop	r12
     b20:	bf 90       	pop	r11
     b22:	08 95       	ret

00000b24 <LCD_12864_Print_4_6>:
     b24:	bf 92       	push	r11
     b26:	cf 92       	push	r12
     b28:	df 92       	push	r13
     b2a:	ef 92       	push	r14
     b2c:	ff 92       	push	r15
     b2e:	0f 93       	push	r16
     b30:	1f 93       	push	r17
     b32:	cf 93       	push	r28
     b34:	df 93       	push	r29
     b36:	cd b7       	in	r28, 0x3d	; 61
     b38:	de b7       	in	r29, 0x3e	; 62
     b3a:	ac 97       	sbiw	r28, 0x2c	; 44
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	f8 94       	cli
     b40:	de bf       	out	0x3e, r29	; 62
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	cd bf       	out	0x3d, r28	; 61
     b46:	6c 01       	movw	r12, r24
     b48:	16 2f       	mov	r17, r22
     b4a:	b4 2e       	mov	r11, r20
     b4c:	79 01       	movw	r14, r18
     b4e:	00 00       	nop
     b50:	ce 01       	movw	r24, r28
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     b58:	8f e0       	ldi	r24, 0x0F	; 15
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	0e 94 b4 12 	call	0x2568	; 0x2568 <pf_open>
     b60:	80 e8       	ldi	r24, 0x80	; 128
     b62:	18 9f       	mul	r17, r24
     b64:	c0 0c       	add	r12, r0
     b66:	d1 1c       	adc	r13, r1
     b68:	11 24       	eor	r1, r1
     b6a:	00 e0       	ldi	r16, 0x00	; 0
     b6c:	10 e0       	ldi	r17, 0x00	; 0
     b6e:	2d c0       	rjmp	.+90     	; 0xbca <LCD_12864_Print_4_6+0xa6>
     b70:	f7 01       	movw	r30, r14
     b72:	e0 0f       	add	r30, r16
     b74:	f1 1f       	adc	r31, r17
     b76:	60 81       	ld	r22, Z
     b78:	70 e0       	ldi	r23, 0x00	; 0
     b7a:	bb 20       	and	r11, r11
     b7c:	89 f0       	breq	.+34     	; 0xba0 <LCD_12864_Print_4_6+0x7c>
     b7e:	6e 32       	cpi	r22, 0x2E	; 46
     b80:	71 05       	cpc	r23, r1
     b82:	39 f0       	breq	.+14     	; 0xb92 <LCD_12864_Print_4_6+0x6e>
     b84:	60 53       	subi	r22, 0x30	; 48
     b86:	71 09       	sbc	r23, r1
     b88:	41 e0       	ldi	r20, 0x01	; 1
     b8a:	c6 01       	movw	r24, r12
     b8c:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_12864_print_symbol_4_6>
     b90:	17 c0       	rjmp	.+46     	; 0xbc0 <LCD_12864_Print_4_6+0x9c>
     b92:	41 e0       	ldi	r20, 0x01	; 1
     b94:	6a e0       	ldi	r22, 0x0A	; 10
     b96:	70 e0       	ldi	r23, 0x00	; 0
     b98:	c6 01       	movw	r24, r12
     b9a:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_12864_print_symbol_4_6>
     b9e:	10 c0       	rjmp	.+32     	; 0xbc0 <LCD_12864_Print_4_6+0x9c>
     ba0:	6e 32       	cpi	r22, 0x2E	; 46
     ba2:	71 05       	cpc	r23, r1
     ba4:	39 f0       	breq	.+14     	; 0xbb4 <LCD_12864_Print_4_6+0x90>
     ba6:	60 53       	subi	r22, 0x30	; 48
     ba8:	71 09       	sbc	r23, r1
     baa:	40 e0       	ldi	r20, 0x00	; 0
     bac:	c6 01       	movw	r24, r12
     bae:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_12864_print_symbol_4_6>
     bb2:	06 c0       	rjmp	.+12     	; 0xbc0 <LCD_12864_Print_4_6+0x9c>
     bb4:	40 e0       	ldi	r20, 0x00	; 0
     bb6:	6a e0       	ldi	r22, 0x0A	; 10
     bb8:	70 e0       	ldi	r23, 0x00	; 0
     bba:	c6 01       	movw	r24, r12
     bbc:	0e 94 ce 03 	call	0x79c	; 0x79c <LCD_12864_print_symbol_4_6>
     bc0:	85 e0       	ldi	r24, 0x05	; 5
     bc2:	c8 0e       	add	r12, r24
     bc4:	d1 1c       	adc	r13, r1
     bc6:	0f 5f       	subi	r16, 0xFF	; 255
     bc8:	1f 4f       	sbci	r17, 0xFF	; 255
     bca:	f7 01       	movw	r30, r14
     bcc:	01 90       	ld	r0, Z+
     bce:	00 20       	and	r0, r0
     bd0:	e9 f7       	brne	.-6      	; 0xbcc <LCD_12864_Print_4_6+0xa8>
     bd2:	31 97       	sbiw	r30, 0x01	; 1
     bd4:	ee 19       	sub	r30, r14
     bd6:	ff 09       	sbc	r31, r15
     bd8:	0e 17       	cp	r16, r30
     bda:	1f 07       	cpc	r17, r31
     bdc:	48 f2       	brcs	.-110    	; 0xb70 <LCD_12864_Print_4_6+0x4c>
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     be6:	ac 96       	adiw	r28, 0x2c	; 44
     be8:	0f b6       	in	r0, 0x3f	; 63
     bea:	f8 94       	cli
     bec:	de bf       	out	0x3e, r29	; 62
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	cd bf       	out	0x3d, r28	; 61
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	1f 91       	pop	r17
     bf8:	0f 91       	pop	r16
     bfa:	ff 90       	pop	r15
     bfc:	ef 90       	pop	r14
     bfe:	df 90       	pop	r13
     c00:	cf 90       	pop	r12
     c02:	bf 90       	pop	r11
     c04:	08 95       	ret

00000c06 <LCD_12864_Print_11_16>:
     c06:	bf 92       	push	r11
     c08:	cf 92       	push	r12
     c0a:	df 92       	push	r13
     c0c:	ef 92       	push	r14
     c0e:	ff 92       	push	r15
     c10:	0f 93       	push	r16
     c12:	1f 93       	push	r17
     c14:	cf 93       	push	r28
     c16:	df 93       	push	r29
     c18:	cd b7       	in	r28, 0x3d	; 61
     c1a:	de b7       	in	r29, 0x3e	; 62
     c1c:	ac 97       	sbiw	r28, 0x2c	; 44
     c1e:	0f b6       	in	r0, 0x3f	; 63
     c20:	f8 94       	cli
     c22:	de bf       	out	0x3e, r29	; 62
     c24:	0f be       	out	0x3f, r0	; 63
     c26:	cd bf       	out	0x3d, r28	; 61
     c28:	7c 01       	movw	r14, r24
     c2a:	16 2f       	mov	r17, r22
     c2c:	b4 2e       	mov	r11, r20
     c2e:	69 01       	movw	r12, r18
     c30:	00 00       	nop
     c32:	ce 01       	movw	r24, r28
     c34:	01 96       	adiw	r24, 0x01	; 1
     c36:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     c3a:	88 e1       	ldi	r24, 0x18	; 24
     c3c:	91 e0       	ldi	r25, 0x01	; 1
     c3e:	0e 94 b4 12 	call	0x2568	; 0x2568 <pf_open>
     c42:	80 e8       	ldi	r24, 0x80	; 128
     c44:	18 9f       	mul	r17, r24
     c46:	e0 0c       	add	r14, r0
     c48:	f1 1c       	adc	r15, r1
     c4a:	11 24       	eor	r1, r1
     c4c:	00 e0       	ldi	r16, 0x00	; 0
     c4e:	10 e0       	ldi	r17, 0x00	; 0
     c50:	19 c0       	rjmp	.+50     	; 0xc84 <LCD_12864_Print_11_16+0x7e>
     c52:	f6 01       	movw	r30, r12
     c54:	e0 0f       	add	r30, r16
     c56:	f1 1f       	adc	r31, r17
     c58:	60 81       	ld	r22, Z
     c5a:	70 e0       	ldi	r23, 0x00	; 0
     c5c:	bb 20       	and	r11, r11
     c5e:	39 f0       	breq	.+14     	; 0xc6e <LCD_12864_Print_11_16+0x68>
     c60:	60 53       	subi	r22, 0x30	; 48
     c62:	71 09       	sbc	r23, r1
     c64:	41 e0       	ldi	r20, 0x01	; 1
     c66:	c7 01       	movw	r24, r14
     c68:	0e 94 13 04 	call	0x826	; 0x826 <LCD_12864_print_symbol_11_16>
     c6c:	06 c0       	rjmp	.+12     	; 0xc7a <LCD_12864_Print_11_16+0x74>
     c6e:	60 53       	subi	r22, 0x30	; 48
     c70:	71 09       	sbc	r23, r1
     c72:	40 e0       	ldi	r20, 0x00	; 0
     c74:	c7 01       	movw	r24, r14
     c76:	0e 94 13 04 	call	0x826	; 0x826 <LCD_12864_print_symbol_11_16>
     c7a:	8c e0       	ldi	r24, 0x0C	; 12
     c7c:	e8 0e       	add	r14, r24
     c7e:	f1 1c       	adc	r15, r1
     c80:	0f 5f       	subi	r16, 0xFF	; 255
     c82:	1f 4f       	sbci	r17, 0xFF	; 255
     c84:	f6 01       	movw	r30, r12
     c86:	01 90       	ld	r0, Z+
     c88:	00 20       	and	r0, r0
     c8a:	e9 f7       	brne	.-6      	; 0xc86 <LCD_12864_Print_11_16+0x80>
     c8c:	31 97       	sbiw	r30, 0x01	; 1
     c8e:	ec 19       	sub	r30, r12
     c90:	fd 09       	sbc	r31, r13
     c92:	0e 17       	cp	r16, r30
     c94:	1f 07       	cpc	r17, r31
     c96:	e8 f2       	brcs	.-70     	; 0xc52 <LCD_12864_Print_11_16+0x4c>
     c98:	80 e0       	ldi	r24, 0x00	; 0
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     ca0:	ac 96       	adiw	r28, 0x2c	; 44
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	f8 94       	cli
     ca6:	de bf       	out	0x3e, r29	; 62
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	cd bf       	out	0x3d, r28	; 61
     cac:	df 91       	pop	r29
     cae:	cf 91       	pop	r28
     cb0:	1f 91       	pop	r17
     cb2:	0f 91       	pop	r16
     cb4:	ff 90       	pop	r15
     cb6:	ef 90       	pop	r14
     cb8:	df 90       	pop	r13
     cba:	cf 90       	pop	r12
     cbc:	bf 90       	pop	r11
     cbe:	08 95       	ret

00000cc0 <LCD_12864_Decode_UTF8>:
     cc0:	9f 92       	push	r9
     cc2:	af 92       	push	r10
     cc4:	bf 92       	push	r11
     cc6:	cf 92       	push	r12
     cc8:	df 92       	push	r13
     cca:	ef 92       	push	r14
     ccc:	ff 92       	push	r15
     cce:	0f 93       	push	r16
     cd0:	1f 93       	push	r17
     cd2:	cf 93       	push	r28
     cd4:	df 93       	push	r29
     cd6:	cd b7       	in	r28, 0x3d	; 61
     cd8:	de b7       	in	r29, 0x3e	; 62
     cda:	ac 97       	sbiw	r28, 0x2c	; 44
     cdc:	0f b6       	in	r0, 0x3f	; 63
     cde:	f8 94       	cli
     ce0:	de bf       	out	0x3e, r29	; 62
     ce2:	0f be       	out	0x3f, r0	; 63
     ce4:	cd bf       	out	0x3d, r28	; 61
     ce6:	6c 01       	movw	r12, r24
     ce8:	16 2f       	mov	r17, r22
     cea:	94 2e       	mov	r9, r20
     cec:	59 01       	movw	r10, r18
     cee:	00 00       	nop
     cf0:	ce 01       	movw	r24, r28
     cf2:	01 96       	adiw	r24, 0x01	; 1
     cf4:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     cf8:	82 e2       	ldi	r24, 0x22	; 34
     cfa:	91 e0       	ldi	r25, 0x01	; 1
     cfc:	0e 94 b4 12 	call	0x2568	; 0x2568 <pf_open>
     d00:	80 e8       	ldi	r24, 0x80	; 128
     d02:	18 9f       	mul	r17, r24
     d04:	c0 0c       	add	r12, r0
     d06:	d1 1c       	adc	r13, r1
     d08:	11 24       	eor	r1, r1
     d0a:	e1 2c       	mov	r14, r1
     d0c:	f1 2c       	mov	r15, r1
     d0e:	7e c0       	rjmp	.+252    	; 0xe0c <LCD_12864_Decode_UTF8+0x14c>
     d10:	f5 01       	movw	r30, r10
     d12:	ee 0d       	add	r30, r14
     d14:	ff 1d       	adc	r31, r15
     d16:	00 81       	ld	r16, Z
     d18:	00 3c       	cpi	r16, 0xC0	; 192
     d1a:	d8 f4       	brcc	.+54     	; 0xd52 <LCD_12864_Decode_UTF8+0x92>
     d1c:	08 3a       	cpi	r16, 0xA8	; 168
     d1e:	c9 f0       	breq	.+50     	; 0xd52 <LCD_12864_Decode_UTF8+0x92>
     d20:	08 3b       	cpi	r16, 0xB8	; 184
     d22:	b9 f0       	breq	.+46     	; 0xd52 <LCD_12864_Decode_UTF8+0x92>
     d24:	00 3b       	cpi	r16, 0xB0	; 176
     d26:	a9 f0       	breq	.+42     	; 0xd52 <LCD_12864_Decode_UTF8+0x92>
     d28:	60 2f       	mov	r22, r16
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	99 20       	and	r9, r9
     d2e:	39 f0       	breq	.+14     	; 0xd3e <LCD_12864_Decode_UTF8+0x7e>
     d30:	60 52       	subi	r22, 0x20	; 32
     d32:	71 09       	sbc	r23, r1
     d34:	41 e0       	ldi	r20, 0x01	; 1
     d36:	c6 01       	movw	r24, r12
     d38:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     d3c:	06 c0       	rjmp	.+12     	; 0xd4a <LCD_12864_Decode_UTF8+0x8a>
     d3e:	60 52       	subi	r22, 0x20	; 32
     d40:	71 09       	sbc	r23, r1
     d42:	40 e0       	ldi	r20, 0x00	; 0
     d44:	c6 01       	movw	r24, r12
     d46:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     d4a:	86 e0       	ldi	r24, 0x06	; 6
     d4c:	c8 0e       	add	r12, r24
     d4e:	d1 1c       	adc	r13, r1
     d50:	5a c0       	rjmp	.+180    	; 0xe06 <LCD_12864_Decode_UTF8+0x146>
     d52:	10 e0       	ldi	r17, 0x00	; 0
     d54:	c8 01       	movw	r24, r16
     d56:	80 5c       	subi	r24, 0xC0	; 192
     d58:	91 09       	sbc	r25, r1
     d5a:	80 34       	cpi	r24, 0x40	; 64
     d5c:	91 05       	cpc	r25, r1
     d5e:	a0 f4       	brcc	.+40     	; 0xd88 <LCD_12864_Decode_UTF8+0xc8>
     d60:	99 20       	and	r9, r9
     d62:	41 f0       	breq	.+16     	; 0xd74 <LCD_12864_Decode_UTF8+0xb4>
     d64:	41 e0       	ldi	r20, 0x01	; 1
     d66:	b8 01       	movw	r22, r16
     d68:	61 56       	subi	r22, 0x61	; 97
     d6a:	71 09       	sbc	r23, r1
     d6c:	c6 01       	movw	r24, r12
     d6e:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     d72:	07 c0       	rjmp	.+14     	; 0xd82 <LCD_12864_Decode_UTF8+0xc2>
     d74:	40 e0       	ldi	r20, 0x00	; 0
     d76:	b8 01       	movw	r22, r16
     d78:	61 56       	subi	r22, 0x61	; 97
     d7a:	71 09       	sbc	r23, r1
     d7c:	c6 01       	movw	r24, r12
     d7e:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     d82:	86 e0       	ldi	r24, 0x06	; 6
     d84:	c8 0e       	add	r12, r24
     d86:	d1 1c       	adc	r13, r1
     d88:	08 3a       	cpi	r16, 0xA8	; 168
     d8a:	11 05       	cpc	r17, r1
     d8c:	91 f4       	brne	.+36     	; 0xdb2 <LCD_12864_Decode_UTF8+0xf2>
     d8e:	99 20       	and	r9, r9
     d90:	39 f0       	breq	.+14     	; 0xda0 <LCD_12864_Decode_UTF8+0xe0>
     d92:	41 e0       	ldi	r20, 0x01	; 1
     d94:	6f e9       	ldi	r22, 0x9F	; 159
     d96:	70 e0       	ldi	r23, 0x00	; 0
     d98:	c6 01       	movw	r24, r12
     d9a:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     d9e:	06 c0       	rjmp	.+12     	; 0xdac <LCD_12864_Decode_UTF8+0xec>
     da0:	40 e0       	ldi	r20, 0x00	; 0
     da2:	6f e9       	ldi	r22, 0x9F	; 159
     da4:	70 e0       	ldi	r23, 0x00	; 0
     da6:	c6 01       	movw	r24, r12
     da8:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     dac:	86 e0       	ldi	r24, 0x06	; 6
     dae:	c8 0e       	add	r12, r24
     db0:	d1 1c       	adc	r13, r1
     db2:	08 3b       	cpi	r16, 0xB8	; 184
     db4:	11 05       	cpc	r17, r1
     db6:	91 f4       	brne	.+36     	; 0xddc <LCD_12864_Decode_UTF8+0x11c>
     db8:	99 20       	and	r9, r9
     dba:	39 f0       	breq	.+14     	; 0xdca <LCD_12864_Decode_UTF8+0x10a>
     dbc:	41 e0       	ldi	r20, 0x01	; 1
     dbe:	60 ea       	ldi	r22, 0xA0	; 160
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	c6 01       	movw	r24, r12
     dc4:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     dc8:	06 c0       	rjmp	.+12     	; 0xdd6 <LCD_12864_Decode_UTF8+0x116>
     dca:	40 e0       	ldi	r20, 0x00	; 0
     dcc:	60 ea       	ldi	r22, 0xA0	; 160
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	c6 01       	movw	r24, r12
     dd2:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     dd6:	86 e0       	ldi	r24, 0x06	; 6
     dd8:	c8 0e       	add	r12, r24
     dda:	d1 1c       	adc	r13, r1
     ddc:	00 3b       	cpi	r16, 0xB0	; 176
     dde:	11 05       	cpc	r17, r1
     de0:	91 f4       	brne	.+36     	; 0xe06 <LCD_12864_Decode_UTF8+0x146>
     de2:	99 20       	and	r9, r9
     de4:	39 f0       	breq	.+14     	; 0xdf4 <LCD_12864_Decode_UTF8+0x134>
     de6:	41 e0       	ldi	r20, 0x01	; 1
     de8:	61 ea       	ldi	r22, 0xA1	; 161
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	c6 01       	movw	r24, r12
     dee:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     df2:	06 c0       	rjmp	.+12     	; 0xe00 <LCD_12864_Decode_UTF8+0x140>
     df4:	40 e0       	ldi	r20, 0x00	; 0
     df6:	61 ea       	ldi	r22, 0xA1	; 161
     df8:	70 e0       	ldi	r23, 0x00	; 0
     dfa:	c6 01       	movw	r24, r12
     dfc:	0e 94 85 03 	call	0x70a	; 0x70a <LCD_12864_print_symbol>
     e00:	86 e0       	ldi	r24, 0x06	; 6
     e02:	c8 0e       	add	r12, r24
     e04:	d1 1c       	adc	r13, r1
     e06:	8f ef       	ldi	r24, 0xFF	; 255
     e08:	e8 1a       	sub	r14, r24
     e0a:	f8 0a       	sbc	r15, r24
     e0c:	f5 01       	movw	r30, r10
     e0e:	01 90       	ld	r0, Z+
     e10:	00 20       	and	r0, r0
     e12:	e9 f7       	brne	.-6      	; 0xe0e <LCD_12864_Decode_UTF8+0x14e>
     e14:	31 97       	sbiw	r30, 0x01	; 1
     e16:	ea 19       	sub	r30, r10
     e18:	fb 09       	sbc	r31, r11
     e1a:	ee 16       	cp	r14, r30
     e1c:	ff 06       	cpc	r15, r31
     e1e:	08 f4       	brcc	.+2      	; 0xe22 <LCD_12864_Decode_UTF8+0x162>
     e20:	77 cf       	rjmp	.-274    	; 0xd10 <LCD_12864_Decode_UTF8+0x50>
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <pf_mount>
     e2a:	ac 96       	adiw	r28, 0x2c	; 44
     e2c:	0f b6       	in	r0, 0x3f	; 63
     e2e:	f8 94       	cli
     e30:	de bf       	out	0x3e, r29	; 62
     e32:	0f be       	out	0x3f, r0	; 63
     e34:	cd bf       	out	0x3d, r28	; 61
     e36:	df 91       	pop	r29
     e38:	cf 91       	pop	r28
     e3a:	1f 91       	pop	r17
     e3c:	0f 91       	pop	r16
     e3e:	ff 90       	pop	r15
     e40:	ef 90       	pop	r14
     e42:	df 90       	pop	r13
     e44:	cf 90       	pop	r12
     e46:	bf 90       	pop	r11
     e48:	af 90       	pop	r10
     e4a:	9f 90       	pop	r9
     e4c:	08 95       	ret

00000e4e <LCD_12864_Clean_Frame_buffer>:
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	94 e0       	ldi	r25, 0x04	; 4
     e52:	ea e9       	ldi	r30, 0x9A	; 154
     e54:	f2 e0       	ldi	r31, 0x02	; 2
     e56:	df 01       	movw	r26, r30
     e58:	9c 01       	movw	r18, r24
     e5a:	1d 92       	st	X+, r1
     e5c:	21 50       	subi	r18, 0x01	; 1
     e5e:	30 40       	sbci	r19, 0x00	; 0
     e60:	e1 f7       	brne	.-8      	; 0xe5a <LCD_12864_Clean_Frame_buffer+0xc>
     e62:	08 95       	ret

00000e64 <LCD_12864_Draw_line>:
     e64:	8f 92       	push	r8
     e66:	9f 92       	push	r9
     e68:	af 92       	push	r10
     e6a:	bf 92       	push	r11
     e6c:	cf 92       	push	r12
     e6e:	df 92       	push	r13
     e70:	ef 92       	push	r14
     e72:	ff 92       	push	r15
     e74:	0f 93       	push	r16
     e76:	1f 93       	push	r17
     e78:	cf 93       	push	r28
     e7a:	df 93       	push	r29
     e7c:	c8 2f       	mov	r28, r24
     e7e:	d6 2f       	mov	r29, r22
     e80:	b4 2e       	mov	r11, r20
     e82:	82 2e       	mov	r8, r18
     e84:	48 17       	cp	r20, r24
     e86:	28 f0       	brcs	.+10     	; 0xe92 <LCD_12864_Draw_line+0x2e>
     e88:	c4 2e       	mov	r12, r20
     e8a:	d1 2c       	mov	r13, r1
     e8c:	c8 1a       	sub	r12, r24
     e8e:	d1 08       	sbc	r13, r1
     e90:	04 c0       	rjmp	.+8      	; 0xe9a <LCD_12864_Draw_line+0x36>
     e92:	c8 2e       	mov	r12, r24
     e94:	d1 2c       	mov	r13, r1
     e96:	c4 1a       	sub	r12, r20
     e98:	d1 08       	sbc	r13, r1
     e9a:	8d 16       	cp	r8, r29
     e9c:	28 f0       	brcs	.+10     	; 0xea8 <LCD_12864_Draw_line+0x44>
     e9e:	e8 2c       	mov	r14, r8
     ea0:	f1 2c       	mov	r15, r1
     ea2:	ed 1a       	sub	r14, r29
     ea4:	f1 08       	sbc	r15, r1
     ea6:	04 c0       	rjmp	.+8      	; 0xeb0 <LCD_12864_Draw_line+0x4c>
     ea8:	ed 2e       	mov	r14, r29
     eaa:	f1 2c       	mov	r15, r1
     eac:	e8 18       	sub	r14, r8
     eae:	f1 08       	sbc	r15, r1
     eb0:	cb 15       	cp	r28, r11
     eb2:	18 f4       	brcc	.+6      	; 0xeba <LCD_12864_Draw_line+0x56>
     eb4:	aa 24       	eor	r10, r10
     eb6:	a3 94       	inc	r10
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <LCD_12864_Draw_line+0x5a>
     eba:	aa 24       	eor	r10, r10
     ebc:	aa 94       	dec	r10
     ebe:	d8 15       	cp	r29, r8
     ec0:	18 f4       	brcc	.+6      	; 0xec8 <LCD_12864_Draw_line+0x64>
     ec2:	99 24       	eor	r9, r9
     ec4:	93 94       	inc	r9
     ec6:	02 c0       	rjmp	.+4      	; 0xecc <LCD_12864_Draw_line+0x68>
     ec8:	99 24       	eor	r9, r9
     eca:	9a 94       	dec	r9
     ecc:	86 01       	movw	r16, r12
     ece:	0e 19       	sub	r16, r14
     ed0:	1f 09       	sbc	r17, r15
     ed2:	6d 2f       	mov	r22, r29
     ed4:	8c 2f       	mov	r24, r28
     ed6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
     eda:	cb 11       	cpse	r28, r11
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <LCD_12864_Draw_line+0x7e>
     ede:	d8 15       	cp	r29, r8
     ee0:	a1 f0       	breq	.+40     	; 0xf0a <LCD_12864_Draw_line+0xa6>
     ee2:	c8 01       	movw	r24, r16
     ee4:	88 0f       	add	r24, r24
     ee6:	99 1f       	adc	r25, r25
     ee8:	22 27       	eor	r18, r18
     eea:	33 27       	eor	r19, r19
     eec:	2e 19       	sub	r18, r14
     eee:	3f 09       	sbc	r19, r15
     ef0:	28 17       	cp	r18, r24
     ef2:	39 07       	cpc	r19, r25
     ef4:	1c f4       	brge	.+6      	; 0xefc <LCD_12864_Draw_line+0x98>
     ef6:	0e 19       	sub	r16, r14
     ef8:	1f 09       	sbc	r17, r15
     efa:	ca 0d       	add	r28, r10
     efc:	8c 15       	cp	r24, r12
     efe:	9d 05       	cpc	r25, r13
     f00:	44 f7       	brge	.-48     	; 0xed2 <LCD_12864_Draw_line+0x6e>
     f02:	0c 0d       	add	r16, r12
     f04:	1d 1d       	adc	r17, r13
     f06:	d9 0d       	add	r29, r9
     f08:	e4 cf       	rjmp	.-56     	; 0xed2 <LCD_12864_Draw_line+0x6e>
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	1f 91       	pop	r17
     f10:	0f 91       	pop	r16
     f12:	ff 90       	pop	r15
     f14:	ef 90       	pop	r14
     f16:	df 90       	pop	r13
     f18:	cf 90       	pop	r12
     f1a:	bf 90       	pop	r11
     f1c:	af 90       	pop	r10
     f1e:	9f 90       	pop	r9
     f20:	8f 90       	pop	r8
     f22:	08 95       	ret

00000f24 <LCD_12864_Draw_circle>:
/*---------------------------------Пустотелая окружность-----------------------------------*/
void LCD_12864_Draw_circle(uint8_t x, uint8_t y, uint8_t radius) {
     f24:	5f 92       	push	r5
     f26:	6f 92       	push	r6
     f28:	7f 92       	push	r7
     f2a:	8f 92       	push	r8
     f2c:	9f 92       	push	r9
     f2e:	af 92       	push	r10
     f30:	bf 92       	push	r11
     f32:	cf 92       	push	r12
     f34:	df 92       	push	r13
     f36:	ef 92       	push	r14
     f38:	ff 92       	push	r15
     f3a:	0f 93       	push	r16
     f3c:	1f 93       	push	r17
     f3e:	cf 93       	push	r28
     f40:	df 93       	push	r29
     f42:	78 2e       	mov	r7, r24
     f44:	66 2e       	mov	r6, r22
     f46:	c4 2f       	mov	r28, r20
	/// Вывести пустотелую окружность
	/// \param x - точка центра окружности по оси "x"
	/// \param y - точка центра окружности по оси "y"
	/// \param radius - радиус окружности

	int f = 1 - (int) radius;
     f48:	04 2f       	mov	r16, r20
     f4a:	10 e0       	ldi	r17, 0x00	; 0
     f4c:	81 e0       	ldi	r24, 0x01	; 1
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	6c 01       	movw	r12, r24
     f52:	c0 1a       	sub	r12, r16
     f54:	d1 0a       	sbc	r13, r17
	int ddF_x = 1;

	int ddF_y = -2 * (int) radius;
     f56:	aa 24       	eor	r10, r10
     f58:	bb 24       	eor	r11, r11
     f5a:	a0 1a       	sub	r10, r16
     f5c:	b1 0a       	sbc	r11, r17
     f5e:	aa 0c       	add	r10, r10
     f60:	bb 1c       	adc	r11, r11
	int x_0 = 0;

	LCD_1286_Draw_pixel(x, y + radius);
     f62:	64 2f       	mov	r22, r20
     f64:	66 0d       	add	r22, r6
     f66:	87 2d       	mov	r24, r7
     f68:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(x, y - radius);
     f6c:	66 2d       	mov	r22, r6
     f6e:	6c 1b       	sub	r22, r28
     f70:	87 2d       	mov	r24, r7
     f72:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(x + radius, y);
     f76:	66 2d       	mov	r22, r6
     f78:	8c 2f       	mov	r24, r28
     f7a:	87 0d       	add	r24, r7
     f7c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(x - radius, y);
     f80:	66 2d       	mov	r22, r6
     f82:	87 2d       	mov	r24, r7
     f84:	8c 1b       	sub	r24, r28
     f86:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>

	int f = 1 - (int) radius;
	int ddF_x = 1;

	int ddF_y = -2 * (int) radius;
	int x_0 = 0;
     f8a:	c0 e0       	ldi	r28, 0x00	; 0
     f8c:	d0 e0       	ldi	r29, 0x00	; 0
	/// \param x - точка центра окружности по оси "x"
	/// \param y - точка центра окружности по оси "y"
	/// \param radius - радиус окружности

	int f = 1 - (int) radius;
	int ddF_x = 1;
     f8e:	88 24       	eor	r8, r8
     f90:	83 94       	inc	r8
     f92:	91 2c       	mov	r9, r1
	LCD_1286_Draw_pixel(x, y - radius);
	LCD_1286_Draw_pixel(x + radius, y);
	LCD_1286_Draw_pixel(x - radius, y);

	int y_0 = radius;
	while (x_0 < y_0) {
     f94:	3f c0       	rjmp	.+126    	; 0x1014 <LCD_12864_Draw_circle+0xf0>
		if (f >= 0) {
     f96:	dd 20       	and	r13, r13
     f98:	3c f0       	brlt	.+14     	; 0xfa8 <LCD_12864_Draw_circle+0x84>
			y_0--;
     f9a:	01 50       	subi	r16, 0x01	; 1
     f9c:	11 09       	sbc	r17, r1
			ddF_y += 2;
     f9e:	82 e0       	ldi	r24, 0x02	; 2
     fa0:	a8 0e       	add	r10, r24
     fa2:	b1 1c       	adc	r11, r1
			f += ddF_y;
     fa4:	ca 0c       	add	r12, r10
     fa6:	db 1c       	adc	r13, r11
		}
		x_0++;
     fa8:	21 96       	adiw	r28, 0x01	; 1
		ddF_x += 2;
     faa:	82 e0       	ldi	r24, 0x02	; 2
     fac:	88 0e       	add	r8, r24
     fae:	91 1c       	adc	r9, r1
		f += ddF_x;
     fb0:	c8 0c       	add	r12, r8
     fb2:	d9 1c       	adc	r13, r9
		LCD_1286_Draw_pixel(x + x_0, y + y_0);
     fb4:	5c 2e       	mov	r5, r28
     fb6:	57 0c       	add	r5, r7
     fb8:	f6 2c       	mov	r15, r6
     fba:	f0 0e       	add	r15, r16
     fbc:	6f 2d       	mov	r22, r15
     fbe:	85 2d       	mov	r24, r5
     fc0:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(x - x_0, y + y_0);
     fc4:	e7 2c       	mov	r14, r7
     fc6:	ec 1a       	sub	r14, r28
     fc8:	6f 2d       	mov	r22, r15
     fca:	8e 2d       	mov	r24, r14
     fcc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(x + x_0, y - y_0);
     fd0:	f6 2c       	mov	r15, r6
     fd2:	f0 1a       	sub	r15, r16
     fd4:	6f 2d       	mov	r22, r15
     fd6:	85 2d       	mov	r24, r5
     fd8:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(x - x_0, y - y_0);
     fdc:	6f 2d       	mov	r22, r15
     fde:	8e 2d       	mov	r24, r14
     fe0:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(x + y_0, y + x_0);
     fe4:	fc 2e       	mov	r15, r28
     fe6:	f6 0c       	add	r15, r6
     fe8:	6f 2d       	mov	r22, r15
     fea:	e7 2c       	mov	r14, r7
     fec:	e0 0e       	add	r14, r16
     fee:	8e 2d       	mov	r24, r14
     ff0:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(x - y_0, y + x_0);
     ff4:	6f 2d       	mov	r22, r15
     ff6:	f7 2c       	mov	r15, r7
     ff8:	f0 1a       	sub	r15, r16
     ffa:	8f 2d       	mov	r24, r15
     ffc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(x + y_0, y - x_0);
    1000:	56 2c       	mov	r5, r6
    1002:	5c 1a       	sub	r5, r28
    1004:	65 2d       	mov	r22, r5
    1006:	8e 2d       	mov	r24, r14
    1008:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(x - y_0, y - x_0);
    100c:	65 2d       	mov	r22, r5
    100e:	8f 2d       	mov	r24, r15
    1010:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(x, y - radius);
	LCD_1286_Draw_pixel(x + radius, y);
	LCD_1286_Draw_pixel(x - radius, y);

	int y_0 = radius;
	while (x_0 < y_0) {
    1014:	c0 17       	cp	r28, r16
    1016:	d1 07       	cpc	r29, r17
    1018:	0c f4       	brge	.+2      	; 0x101c <LCD_12864_Draw_circle+0xf8>
    101a:	bd cf       	rjmp	.-134    	; 0xf96 <LCD_12864_Draw_circle+0x72>
		LCD_1286_Draw_pixel(x + y_0, y + x_0);
		LCD_1286_Draw_pixel(x - y_0, y + x_0);
		LCD_1286_Draw_pixel(x + y_0, y - x_0);
		LCD_1286_Draw_pixel(x - y_0, y - x_0);
	}
}
    101c:	df 91       	pop	r29
    101e:	cf 91       	pop	r28
    1020:	1f 91       	pop	r17
    1022:	0f 91       	pop	r16
    1024:	ff 90       	pop	r15
    1026:	ef 90       	pop	r14
    1028:	df 90       	pop	r13
    102a:	cf 90       	pop	r12
    102c:	bf 90       	pop	r11
    102e:	af 90       	pop	r10
    1030:	9f 90       	pop	r9
    1032:	8f 90       	pop	r8
    1034:	7f 90       	pop	r7
    1036:	6f 90       	pop	r6
    1038:	5f 90       	pop	r5
    103a:	08 95       	ret

0000103c <timer_ini>:
uint8_t flag_irq = 1;


void timer_ini(void)//период 4сек
{
	TCCR1B |= (1<<WGM12); // устанавливаем режим СТС (сброс по совпадению)
    103c:	e1 e8       	ldi	r30, 0x81	; 129
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	88 60       	ori	r24, 0x08	; 8
    1044:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); //устанавливаем бит разрешения прерывания 1ого счетчика по совпадению с OCR1A(H и L)
    1046:	af e6       	ldi	r26, 0x6F	; 111
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	8c 91       	ld	r24, X
    104c:	82 60       	ori	r24, 0x02	; 2
    104e:	8c 93       	st	X, r24
	OCR1AH = 0b11110100; //записываем в регистр число для сравнения
    1050:	84 ef       	ldi	r24, 0xF4	; 244
    1052:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0b00100100;
    1056:	84 e2       	ldi	r24, 0x24	; 36
    1058:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1B |= (1<<CS12)|(1<<CS10);//установим делитель 1024.
    105c:	80 81       	ld	r24, Z
    105e:	85 60       	ori	r24, 0x05	; 5
    1060:	80 83       	st	Z, r24
    1062:	08 95       	ret

00001064 <__vector_11>:
}
//——————————————–
ISR (TIMER1_COMPA_vect)
{
    1064:	1f 92       	push	r1
    1066:	0f 92       	push	r0
    1068:	0f b6       	in	r0, 0x3f	; 63
    106a:	0f 92       	push	r0
    106c:	11 24       	eor	r1, r1
    106e:	2f 93       	push	r18
    1070:	3f 93       	push	r19
    1072:	4f 93       	push	r20
    1074:	5f 93       	push	r21
    1076:	6f 93       	push	r22
    1078:	7f 93       	push	r23
    107a:	8f 93       	push	r24
    107c:	9f 93       	push	r25
    107e:	af 93       	push	r26
    1080:	bf 93       	push	r27
    1082:	ef 93       	push	r30
    1084:	ff 93       	push	r31
	if((strlen(temp_street)!=0)&&(strlen(hum_street)!=0)&&(strlen(WIND_speed)!=0)&&(strlen(Rain)!=0)&&(strlen(Vbat)!=0)&&(strlen(wind_direction)!=0))
    1086:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <temp_street>
    108a:	88 23       	and	r24, r24
    108c:	09 f4       	brne	.+2      	; 0x1090 <__vector_11+0x2c>
    108e:	4c c0       	rjmp	.+152    	; 0x1128 <__vector_11+0xc4>
    1090:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <hum_street>
    1094:	88 23       	and	r24, r24
    1096:	09 f4       	brne	.+2      	; 0x109a <__vector_11+0x36>
    1098:	47 c0       	rjmp	.+142    	; 0x1128 <__vector_11+0xc4>
    109a:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <WIND_speed>
    109e:	88 23       	and	r24, r24
    10a0:	09 f4       	brne	.+2      	; 0x10a4 <__vector_11+0x40>
    10a2:	42 c0       	rjmp	.+132    	; 0x1128 <__vector_11+0xc4>
    10a4:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <Rain>
    10a8:	88 23       	and	r24, r24
    10aa:	f1 f1       	breq	.+124    	; 0x1128 <__vector_11+0xc4>
    10ac:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <Vbat>
    10b0:	88 23       	and	r24, r24
    10b2:	d1 f1       	breq	.+116    	; 0x1128 <__vector_11+0xc4>
    10b4:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <wind_direction>
    10b8:	88 23       	and	r24, r24
    10ba:	b1 f1       	breq	.+108    	; 0x1128 <__vector_11+0xc4>
	{
		//отправка строки по UART в формате: ул.темп./скор.ветра/осадки/ул.влажность/заряд АКБ/направл.ветра
	    sprintf(DATA_TO_UART,"%s ",temp_street);
    10bc:	80 e9       	ldi	r24, 0x90	; 144
    10be:	92 e0       	ldi	r25, 0x02	; 2
    10c0:	9f 93       	push	r25
    10c2:	8f 93       	push	r24
    10c4:	8c e2       	ldi	r24, 0x2C	; 44
    10c6:	91 e0       	ldi	r25, 0x01	; 1
    10c8:	9f 93       	push	r25
    10ca:	8f 93       	push	r24
    10cc:	8e e0       	ldi	r24, 0x0E	; 14
    10ce:	92 e0       	ldi	r25, 0x02	; 2
    10d0:	9f 93       	push	r25
    10d2:	8f 93       	push	r24
    10d4:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
		strcat(DATA_TO_UART,WIND_speed);
    10d8:	62 e7       	ldi	r22, 0x72	; 114
    10da:	72 e0       	ldi	r23, 0x02	; 2
    10dc:	8e e0       	ldi	r24, 0x0E	; 14
    10de:	92 e0       	ldi	r25, 0x02	; 2
    10e0:	0e 94 1b 25 	call	0x4a36	; 0x4a36 <strcat>
		strcat(DATA_TO_UART,Rain);
    10e4:	60 e4       	ldi	r22, 0x40	; 64
    10e6:	72 e0       	ldi	r23, 0x02	; 2
    10e8:	8e e0       	ldi	r24, 0x0E	; 14
    10ea:	92 e0       	ldi	r25, 0x02	; 2
    10ec:	0e 94 1b 25 	call	0x4a36	; 0x4a36 <strcat>
		strcat(DATA_TO_UART,hum_street);
    10f0:	66 e8       	ldi	r22, 0x86	; 134
    10f2:	72 e0       	ldi	r23, 0x02	; 2
    10f4:	8e e0       	ldi	r24, 0x0E	; 14
    10f6:	92 e0       	ldi	r25, 0x02	; 2
    10f8:	0e 94 1b 25 	call	0x4a36	; 0x4a36 <strcat>
		strcat(DATA_TO_UART,Vbat);
    10fc:	6a e4       	ldi	r22, 0x4A	; 74
    10fe:	72 e0       	ldi	r23, 0x02	; 2
    1100:	8e e0       	ldi	r24, 0x0E	; 14
    1102:	92 e0       	ldi	r25, 0x02	; 2
    1104:	0e 94 1b 25 	call	0x4a36	; 0x4a36 <strcat>
		strcat(DATA_TO_UART,wind_direction);
    1108:	68 e6       	ldi	r22, 0x68	; 104
    110a:	72 e0       	ldi	r23, 0x02	; 2
    110c:	8e e0       	ldi	r24, 0x0E	; 14
    110e:	92 e0       	ldi	r25, 0x02	; 2
    1110:	0e 94 1b 25 	call	0x4a36	; 0x4a36 <strcat>
		USART_Transmit(DATA_TO_UART);
    1114:	8e e0       	ldi	r24, 0x0E	; 14
    1116:	92 e0       	ldi	r25, 0x02	; 2
    1118:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <USART_Transmit>
    111c:	0f 90       	pop	r0
    111e:	0f 90       	pop	r0
    1120:	0f 90       	pop	r0
    1122:	0f 90       	pop	r0
    1124:	0f 90       	pop	r0
    1126:	0f 90       	pop	r0
	}
}
    1128:	ff 91       	pop	r31
    112a:	ef 91       	pop	r30
    112c:	bf 91       	pop	r27
    112e:	af 91       	pop	r26
    1130:	9f 91       	pop	r25
    1132:	8f 91       	pop	r24
    1134:	7f 91       	pop	r23
    1136:	6f 91       	pop	r22
    1138:	5f 91       	pop	r21
    113a:	4f 91       	pop	r20
    113c:	3f 91       	pop	r19
    113e:	2f 91       	pop	r18
    1140:	0f 90       	pop	r0
    1142:	0f be       	out	0x3f, r0	; 63
    1144:	0f 90       	pop	r0
    1146:	1f 90       	pop	r1
    1148:	18 95       	reti

0000114a <SPI_init>:

void SPI_init(void) //инициализация SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //ножки SPI на выход
    114a:	84 b1       	in	r24, 0x04	; 4
    114c:	8e 62       	ori	r24, 0x2E	; 46
    114e:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //низкий уровень
    1150:	85 b1       	in	r24, 0x05	; 5
    1152:	83 7d       	andi	r24, 0xD3	; 211
    1154:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<IRQ);
    1156:	8a b1       	in	r24, 0x0a	; 10
    1158:	8b 7f       	andi	r24, 0xFB	; 251
    115a:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<IRQ);
    115c:	8b b1       	in	r24, 0x0b	; 11
    115e:	84 60       	ori	r24, 0x04	; 4
    1160:	8b b9       	out	0x0b, r24	; 11
	HIGH_CSN;
    1162:	85 b1       	in	r24, 0x05	; 5
    1164:	84 60       	ori	r24, 0x04	; 4
    1166:	85 b9       	out	0x05, r24	; 5
	SPCR = ((1<<SPE)|(1<<MSTR));//включим шину, объявим ведущим
    1168:	80 e5       	ldi	r24, 0x50	; 80
    116a:	8c bd       	out	0x2c, r24	; 44
    116c:	08 95       	ret

0000116e <port_init>:
}
//-------------------------------------------------------------
void port_init(void)
{
	//инициализация портов для светодиода
	DDRD |= (1 << LED);//led
    116e:	8a b1       	in	r24, 0x0a	; 10
    1170:	80 61       	ori	r24, 0x10	; 16
    1172:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~ (1 << LED);
    1174:	8b b1       	in	r24, 0x0b	; 11
    1176:	8f 7e       	andi	r24, 0xEF	; 239
    1178:	8b b9       	out	0x0b, r24	; 11
	
	//инициализация портов для LCD12864
	DDRD |= (1<<RS);//ножка RS на выход для LCD12864
    117a:	8a b1       	in	r24, 0x0a	; 10
    117c:	80 68       	ori	r24, 0x80	; 128
    117e:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RS);
    1180:	8b b1       	in	r24, 0x0b	; 11
    1182:	8f 77       	andi	r24, 0x7F	; 127
    1184:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<E);
    1186:	8a b1       	in	r24, 0x0a	; 10
    1188:	80 62       	ori	r24, 0x20	; 32
    118a:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<E);
    118c:	8b b1       	in	r24, 0x0b	; 11
    118e:	8f 7d       	andi	r24, 0xDF	; 223
    1190:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<RW);
    1192:	8a b1       	in	r24, 0x0a	; 10
    1194:	80 64       	ori	r24, 0x40	; 64
    1196:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RW);
    1198:	8b b1       	in	r24, 0x0b	; 11
    119a:	8f 7b       	andi	r24, 0xBF	; 191
    119c:	8b b9       	out	0x0b, r24	; 11
    119e:	08 95       	ret

000011a0 <spi_send_recv>:
	 DDRC|=(1<<MOSI_SD)|(1<<SCK_SD);*/
} 
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // Передаёт и принимает 1 байт по SPI, возвращает полученное значение
{
	SPDR = data;
    11a0:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
    11a2:	0d b4       	in	r0, 0x2d	; 45
    11a4:	07 fe       	sbrs	r0, 7
    11a6:	fd cf       	rjmp	.-6      	; 0x11a2 <spi_send_recv+0x2>
	return SPDR;
    11a8:	8e b5       	in	r24, 0x2e	; 46
}
    11aa:	08 95       	ret

000011ac <main>:
void main(void)
{	
	port_init();
    11ac:	0e 94 b7 08 	call	0x116e	; 0x116e <port_init>
	PORTD |= (1<<LED);
    11b0:	8b b1       	in	r24, 0x0b	; 11
    11b2:	80 61       	ori	r24, 0x10	; 16
    11b4:	8b b9       	out	0x0b, r24	; 11
    SPI_init();
    11b6:	0e 94 a5 08 	call	0x114a	; 0x114a <SPI_init>
	timer_ini();
    11ba:	0e 94 1e 08 	call	0x103c	; 0x103c <timer_ini>
	I2C_Init();
    11be:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <I2C_Init>
	RTC_init();
    11c2:	0e 94 39 15 	call	0x2a72	; 0x2a72 <RTC_init>
	// Установка времени для DS3231(делается 1 раз)
	//RTC_write_time(13, 30, 0);
	//RTC_write_date(2, 28, 6, 22);
	LCD_12864_ini();
    11c6:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_12864_ini>
	//Вывод приветствия
	//Print_Hello_World(Frame_buffer);
	USART_Init(16);    //Инициализация модуля USART скорость 115200
    11ca:	80 e1       	ldi	r24, 0x10	; 16
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <USART_Init>
    NRF24_ini();
    11d2:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <NRF24_ini>
	// настраиваем параметры прерывания
	EICRA = (1<<ISC01) | (0<<ISC00);
    11d6:	82 e0       	ldi	r24, 0x02	; 2
    11d8:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT0);
    11dc:	81 e0       	ldi	r24, 0x01	; 1
    11de:	8d bb       	out	0x1d, r24	; 29
	// и разрешаем его глобально
	sei();
    11e0:	78 94       	sei
	//Вывод окна загрузки
	//Print_Download(Frame_buffer);
	PORTD &= ~(1<<LED);
    11e2:	8b b1       	in	r24, 0x0b	; 11
    11e4:	8f 7e       	andi	r24, 0xEF	; 239
    11e6:	8b b9       	out	0x0b, r24	; 11
	clear_LCD_12864();
    11e8:	0e 94 5d 03 	call	0x6ba	; 0x6ba <clear_LCD_12864>
	//Print_Home_Page(Frame_buffer);
    while (1) 
    {
		Print_Home_Page(Frame_buffer);
    11ec:	8a e9       	ldi	r24, 0x9A	; 154
    11ee:	92 e0       	ldi	r25, 0x02	; 2
    11f0:	0e 94 4b 18 	call	0x3096	; 0x3096 <Print_Home_Page>
    11f4:	fb cf       	rjmp	.-10     	; 0x11ec <main+0x40>

000011f6 <xmit_spi>:
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    11f6:	20 e0       	ldi	r18, 0x00	; 0
    11f8:	12 c0       	rjmp	.+36     	; 0x121e <xmit_spi+0x28>
  {
   if ((data&0x80)==0x00) PORTC&=~_BV(SD_DI);
    11fa:	88 23       	and	r24, r24
    11fc:	24 f0       	brlt	.+8      	; 0x1206 <xmit_spi+0x10>
    11fe:	98 b1       	in	r25, 0x08	; 8
    1200:	9b 7f       	andi	r25, 0xFB	; 251
    1202:	98 b9       	out	0x08, r25	; 8
    1204:	03 c0       	rjmp	.+6      	; 0x120c <xmit_spi+0x16>
                     else PORTC|=_BV(SD_DI);
    1206:	98 b1       	in	r25, 0x08	; 8
    1208:	94 60       	ori	r25, 0x04	; 4
    120a:	98 b9       	out	0x08, r25	; 8
   data=data<<1; 
    120c:	88 0f       	add	r24, r24
   PORTC|=_BV(SD_CLK);
    120e:	98 b1       	in	r25, 0x08	; 8
    1210:	98 60       	ori	r25, 0x08	; 8
    1212:	98 b9       	out	0x08, r25	; 8
   asm("nop"); 
    1214:	00 00       	nop
   PORTC&=~_BV(SD_CLK);
    1216:	98 b1       	in	r25, 0x08	; 8
    1218:	97 7f       	andi	r25, 0xF7	; 247
    121a:	98 b9       	out	0x08, r25	; 8
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    121c:	2f 5f       	subi	r18, 0xFF	; 255
    121e:	28 30       	cpi	r18, 0x08	; 8
    1220:	60 f3       	brcs	.-40     	; 0x11fa <xmit_spi+0x4>
   data=data<<1; 
   PORTC|=_BV(SD_CLK);
   asm("nop"); 
   PORTC&=~_BV(SD_CLK);
  }
}
    1222:	08 95       	ret

00001224 <rcv_spi>:

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);
    1224:	88 b1       	in	r24, 0x08	; 8
    1226:	84 60       	ori	r24, 0x04	; 4
    1228:	88 b9       	out	0x08, r24	; 8
   PORTC&=~_BV(SD_CLK);
  }
}

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;
    122a:	80 e0       	ldi	r24, 0x00	; 0

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
    122c:	20 e0       	ldi	r18, 0x00	; 0
    122e:	0b c0       	rjmp	.+22     	; 0x1246 <rcv_spi+0x22>
  {
   PORTC|=_BV(SD_CLK);
    1230:	98 b1       	in	r25, 0x08	; 8
    1232:	98 60       	ori	r25, 0x08	; 8
    1234:	98 b9       	out	0x08, r25	; 8
   res=res<<1;
    1236:	88 0f       	add	r24, r24
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
    1238:	31 99       	sbic	0x06, 1	; 6
    123a:	81 60       	ori	r24, 0x01	; 1
   PORTC&=~_BV(SD_CLK);
    123c:	98 b1       	in	r25, 0x08	; 8
    123e:	97 7f       	andi	r25, 0xF7	; 247
    1240:	98 b9       	out	0x08, r25	; 8
   asm("nop");
    1242:	00 00       	nop
BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
    1244:	2f 5f       	subi	r18, 0xFF	; 255
    1246:	28 30       	cpi	r18, 0x08	; 8
    1248:	98 f3       	brcs	.-26     	; 0x1230 <rcv_spi+0xc>
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
   PORTC&=~_BV(SD_CLK);
   asm("nop");
  }
 return res;
}	/* Send 0xFF and receive a byte */
    124a:	08 95       	ret

0000124c <send_cmd>:
static
BYTE send_cmd (
	BYTE cmd,		// Command byte 
	DWORD arg		// Argument 
)
{
    124c:	ff 92       	push	r15
    124e:	0f 93       	push	r16
    1250:	1f 93       	push	r17
    1252:	cf 93       	push	r28
    1254:	df 93       	push	r29
    1256:	c8 2f       	mov	r28, r24
    1258:	d4 2f       	mov	r29, r20
    125a:	15 2f       	mov	r17, r21
    125c:	06 2f       	mov	r16, r22
    125e:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	// ACMD<n> is the command sequense of CMD55-CMD<n> 
    1260:	88 23       	and	r24, r24
    1262:	4c f4       	brge	.+18     	; 0x1276 <send_cmd+0x2a>
		cmd &= 0x7F;
    1264:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
    1266:	40 e0       	ldi	r20, 0x00	; 0
    1268:	50 e0       	ldi	r21, 0x00	; 0
    126a:	ba 01       	movw	r22, r20
    126c:	87 e7       	ldi	r24, 0x77	; 119
    126e:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
		if (res > 1) return res;
    1272:	82 30       	cpi	r24, 0x02	; 2
    1274:	50 f5       	brcc	.+84     	; 0x12ca <send_cmd+0x7e>
	}

	// Select the card 
	DESELECT();
    1276:	85 b1       	in	r24, 0x05	; 5
    1278:	81 60       	ori	r24, 0x01	; 1
    127a:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
    127c:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
	SELECT();
    1280:	85 b1       	in	r24, 0x05	; 5
    1282:	8e 7f       	andi	r24, 0xFE	; 254
    1284:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
    1286:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>

	// Send a command packet 
	xmit_spi(cmd);						// Start + Command index 
    128a:	8c 2f       	mov	r24, r28
    128c:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
    1290:	8f 2d       	mov	r24, r15
    1292:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
    1296:	80 2f       	mov	r24, r16
    1298:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
    129c:	81 2f       	mov	r24, r17
    129e:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
	xmit_spi((BYTE)arg);				// Argument[7..0] 
    12a2:	8d 2f       	mov	r24, r29
    12a4:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
	n = 0x01;							// Dummy CRC + Stop 
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    12a8:	c0 34       	cpi	r28, 0x40	; 64
    12aa:	11 f0       	breq	.+4      	; 0x12b0 <send_cmd+0x64>
	xmit_spi(cmd);						// Start + Command index 
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
	xmit_spi((BYTE)arg);				// Argument[7..0] 
	n = 0x01;							// Dummy CRC + Stop 
    12ac:	81 e0       	ldi	r24, 0x01	; 1
    12ae:	01 c0       	rjmp	.+2      	; 0x12b2 <send_cmd+0x66>
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    12b0:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;			// Valid CRC for CMD8(0x1AA) 
    12b2:	c8 34       	cpi	r28, 0x48	; 72
    12b4:	09 f4       	brne	.+2      	; 0x12b8 <send_cmd+0x6c>
    12b6:	87 e8       	ldi	r24, 0x87	; 135
	xmit_spi(n);
    12b8:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>

	// Receive a command response 
	n = 10;								// Wait for a valid response in timeout of 10 attempts 
    12bc:	ca e0       	ldi	r28, 0x0A	; 10
	do {
		res = rcv_spi();
    12be:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
	} while ((res & 0x80) && --n);
    12c2:	88 23       	and	r24, r24
    12c4:	14 f4       	brge	.+4      	; 0x12ca <send_cmd+0x7e>
    12c6:	c1 50       	subi	r28, 0x01	; 1
    12c8:	d1 f7       	brne	.-12     	; 0x12be <send_cmd+0x72>

	return res;			// Return with the response value 
}
    12ca:	df 91       	pop	r29
    12cc:	cf 91       	pop	r28
    12ce:	1f 91       	pop	r17
    12d0:	0f 91       	pop	r16
    12d2:	ff 90       	pop	r15
    12d4:	08 95       	ret

000012d6 <release_spi>:
// Deselect the card and release SPI bus                                 
//-----------------------------------------------------------------------
static
void release_spi (void)
{
	rcv_spi();
    12d6:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    12da:	08 95       	ret

000012dc <disk_readp>:
	BYTE *buff,		// Pointer to the read buffer (NULL:Read bytes are forwarded to the stream) 
	DWORD lba,		// Sector number (LBA) 
	WORD ofs,		// Byte offset to read from (0..511) 
	WORD cnt		// Number of bytes to read (ofs + cnt mus be <= 512) 
)
{
    12dc:	cf 92       	push	r12
    12de:	df 92       	push	r13
    12e0:	ef 92       	push	r14
    12e2:	ff 92       	push	r15
    12e4:	0f 93       	push	r16
    12e6:	1f 93       	push	r17
    12e8:	cf 93       	push	r28
    12ea:	df 93       	push	r29
    12ec:	7c 01       	movw	r14, r24
    12ee:	69 01       	movw	r12, r18
	BYTE rc;
	WORD bc;

//	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;

	if (!(CardType & CT_BLOCK))
    12f0:	80 91 9c 06 	lds	r24, 0x069C	; 0x80069c <CardType>
    12f4:	83 fd       	sbrc	r24, 3
    12f6:	09 c0       	rjmp	.+18     	; 0x130a <disk_readp+0x2e>
	{
		lba *= 512;		// Convert to byte address if needed 
    12f8:	03 2e       	mov	r0, r19
    12fa:	39 e0       	ldi	r19, 0x09	; 9
    12fc:	44 0f       	add	r20, r20
    12fe:	55 1f       	adc	r21, r21
    1300:	66 1f       	adc	r22, r22
    1302:	77 1f       	adc	r23, r23
    1304:	3a 95       	dec	r19
    1306:	d1 f7       	brne	.-12     	; 0x12fc <disk_readp+0x20>
    1308:	30 2d       	mov	r19, r0
	}
	res = RES_ERROR;
	if (send_cmd(CMD17, lba) == 0) {		// READ_SINGLE_BLOCK 
    130a:	81 e5       	ldi	r24, 0x51	; 81
    130c:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    1310:	81 11       	cpse	r24, r1
    1312:	34 c0       	rjmp	.+104    	; 0x137c <disk_readp+0xa0>
    1314:	c0 e3       	ldi	r28, 0x30	; 48
    1316:	d5 e7       	ldi	r29, 0x75	; 117
		bc = 30000;
		do {							// Wait for data packet in timeout of 100ms 
			rc = rcv_spi();
    1318:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
		} while (rc == 0xFF && --bc);
    131c:	8f 3f       	cpi	r24, 0xFF	; 255
    131e:	11 f4       	brne	.+4      	; 0x1324 <disk_readp+0x48>
    1320:	21 97       	sbiw	r28, 0x01	; 1
    1322:	d1 f7       	brne	.-12     	; 0x1318 <disk_readp+0x3c>

		if (rc == 0xFE) {				// A data packet arrived 
    1324:	8e 3f       	cpi	r24, 0xFE	; 254
    1326:	61 f5       	brne	.+88     	; 0x1380 <disk_readp+0xa4>
			bc = 514 - ofs - cnt;
    1328:	cc 27       	eor	r28, r28
    132a:	dd 27       	eor	r29, r29
    132c:	cc 19       	sub	r28, r12
    132e:	dd 09       	sbc	r29, r13
    1330:	c0 1b       	sub	r28, r16
    1332:	d1 0b       	sbc	r29, r17
    1334:	ce 5f       	subi	r28, 0xFE	; 254
    1336:	dd 4f       	sbci	r29, 0xFD	; 253

			// Skip leading bytes 
			if (ofs) {
    1338:	c1 14       	cp	r12, r1
    133a:	d1 04       	cpc	r13, r1
    133c:	31 f0       	breq	.+12     	; 0x134a <disk_readp+0x6e>
				do rcv_spi(); while (--ofs);
    133e:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    1342:	81 e0       	ldi	r24, 0x01	; 1
    1344:	c8 1a       	sub	r12, r24
    1346:	d1 08       	sbc	r13, r1
    1348:	d1 f7       	brne	.-12     	; 0x133e <disk_readp+0x62>
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
    134a:	e1 14       	cp	r14, r1
    134c:	f1 04       	cpc	r15, r1
    134e:	69 f0       	breq	.+26     	; 0x136a <disk_readp+0x8e>
				do
					*buff++ = rcv_spi();
    1350:	67 01       	movw	r12, r14
    1352:	ef ef       	ldi	r30, 0xFF	; 255
    1354:	ce 1a       	sub	r12, r30
    1356:	de 0a       	sbc	r13, r30
    1358:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    135c:	f7 01       	movw	r30, r14
    135e:	80 83       	st	Z, r24
				while (--cnt);
    1360:	01 50       	subi	r16, 0x01	; 1
    1362:	11 09       	sbc	r17, r1
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
				do
					*buff++ = rcv_spi();
    1364:	76 01       	movw	r14, r12
				while (--cnt);
    1366:	a1 f7       	brne	.-24     	; 0x1350 <disk_readp+0x74>
    1368:	03 c0       	rjmp	.+6      	; 0x1370 <disk_readp+0x94>
			} else {	// Forward data to the outgoing stream (depends on the project) 
				do 
                ;//uart_transmit(rcv_spi());		// (Console output) 
				while (--cnt);
    136a:	01 50       	subi	r16, 0x01	; 1
    136c:	11 09       	sbc	r17, r1
    136e:	e9 f7       	brne	.-6      	; 0x136a <disk_readp+0x8e>
			}

			// Skip trailing bytes and CRC 
			do rcv_spi(); while (--bc);
    1370:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    1374:	21 97       	sbiw	r28, 0x01	; 1
    1376:	e1 f7       	brne	.-8      	; 0x1370 <disk_readp+0x94>

			res = RES_OK;
    1378:	c0 e0       	ldi	r28, 0x00	; 0
    137a:	03 c0       	rjmp	.+6      	; 0x1382 <disk_readp+0xa6>

	if (!(CardType & CT_BLOCK))
	{
		lba *= 512;		// Convert to byte address if needed 
	}
	res = RES_ERROR;
    137c:	c1 e0       	ldi	r28, 0x01	; 1
    137e:	01 c0       	rjmp	.+2      	; 0x1382 <disk_readp+0xa6>
    1380:	c1 e0       	ldi	r28, 0x01	; 1

			res = RES_OK;
		}
	}

	release_spi();
    1382:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <release_spi>

	return res;
}
    1386:	8c 2f       	mov	r24, r28
    1388:	df 91       	pop	r29
    138a:	cf 91       	pop	r28
    138c:	1f 91       	pop	r17
    138e:	0f 91       	pop	r16
    1390:	ff 90       	pop	r15
    1392:	ef 90       	pop	r14
    1394:	df 90       	pop	r13
    1396:	cf 90       	pop	r12
    1398:	08 95       	ret

0000139a <disk_writep>:

DRESULT disk_writep (
	const BYTE *buff,	// Pointer to the bytes to be written (NULL:Initiate/Finalize sector write) 
	DWORD sa			// Number of bytes to send, Sector number (LBA) or zero 
)
{
    139a:	0f 93       	push	r16
    139c:	1f 93       	push	r17
    139e:	cf 93       	push	r28
    13a0:	df 93       	push	r29
    13a2:	fc 01       	movw	r30, r24
// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
    13a4:	89 2b       	or	r24, r25
    13a6:	f1 f0       	breq	.+60     	; 0x13e4 <disk_writep+0x4a>
		bc = (WORD)sa;
    13a8:	ea 01       	movw	r28, r20
		while (bc && wc) {		// Send data bytes to the card 
    13aa:	11 c0       	rjmp	.+34     	; 0x13ce <disk_writep+0x34>
			xmit_spi(*buff++);
    13ac:	8f 01       	movw	r16, r30
    13ae:	0f 5f       	subi	r16, 0xFF	; 255
    13b0:	1f 4f       	sbci	r17, 0xFF	; 255
    13b2:	80 81       	ld	r24, Z
    13b4:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
			wc--; bc--;
    13b8:	80 91 9a 06 	lds	r24, 0x069A	; 0x80069a <wc.1710>
    13bc:	90 91 9b 06 	lds	r25, 0x069B	; 0x80069b <wc.1710+0x1>
    13c0:	01 97       	sbiw	r24, 0x01	; 1
    13c2:	90 93 9b 06 	sts	0x069B, r25	; 0x80069b <wc.1710+0x1>
    13c6:	80 93 9a 06 	sts	0x069A, r24	; 0x80069a <wc.1710>
    13ca:	21 97       	sbiw	r28, 0x01	; 1
	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
    13cc:	f8 01       	movw	r30, r16

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
    13ce:	20 97       	sbiw	r28, 0x00	; 0
    13d0:	09 f4       	brne	.+2      	; 0x13d4 <disk_writep+0x3a>
    13d2:	54 c0       	rjmp	.+168    	; 0x147c <disk_writep+0xe2>
    13d4:	80 91 9a 06 	lds	r24, 0x069A	; 0x80069a <wc.1710>
    13d8:	90 91 9b 06 	lds	r25, 0x069B	; 0x80069b <wc.1710+0x1>
    13dc:	89 2b       	or	r24, r25
    13de:	31 f7       	brne	.-52     	; 0x13ac <disk_writep+0x12>
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    13e0:	c0 e0       	ldi	r28, 0x00	; 0
    13e2:	4f c0       	rjmp	.+158    	; 0x1482 <disk_writep+0xe8>
	} else {
		if (sa) {	// Initiate sector write process 
    13e4:	41 15       	cp	r20, r1
    13e6:	51 05       	cpc	r21, r1
    13e8:	61 05       	cpc	r22, r1
    13ea:	71 05       	cpc	r23, r1
    13ec:	01 f1       	breq	.+64     	; 0x142e <disk_writep+0x94>
			if (!(CardType & CT_BLOCK)) sa *= 512;	// Convert to byte address if needed 
    13ee:	80 91 9c 06 	lds	r24, 0x069C	; 0x80069c <CardType>
    13f2:	83 fd       	sbrc	r24, 3
    13f4:	09 c0       	rjmp	.+18     	; 0x1408 <disk_writep+0x6e>
    13f6:	03 2e       	mov	r0, r19
    13f8:	39 e0       	ldi	r19, 0x09	; 9
    13fa:	44 0f       	add	r20, r20
    13fc:	55 1f       	adc	r21, r21
    13fe:	66 1f       	adc	r22, r22
    1400:	77 1f       	adc	r23, r23
    1402:	3a 95       	dec	r19
    1404:	d1 f7       	brne	.-12     	; 0x13fa <disk_writep+0x60>
    1406:	30 2d       	mov	r19, r0
			if (send_cmd(CMD24, sa) == 0) {			// WRITE_SINGLE_BLOCK 
    1408:	88 e5       	ldi	r24, 0x58	; 88
    140a:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    140e:	81 11       	cpse	r24, r1
    1410:	37 c0       	rjmp	.+110    	; 0x1480 <disk_writep+0xe6>
				xmit_spi(0xFF); xmit_spi(0xFE);		// Data block header 
    1412:	8f ef       	ldi	r24, 0xFF	; 255
    1414:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
    1418:	8e ef       	ldi	r24, 0xFE	; 254
    141a:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
				wc = 512;							// Set byte counter 
    141e:	80 e0       	ldi	r24, 0x00	; 0
    1420:	92 e0       	ldi	r25, 0x02	; 2
    1422:	90 93 9b 06 	sts	0x069B, r25	; 0x80069b <wc.1710+0x1>
    1426:	80 93 9a 06 	sts	0x069A, r24	; 0x80069a <wc.1710>
				res = RES_OK;
    142a:	c0 e0       	ldi	r28, 0x00	; 0
    142c:	2a c0       	rjmp	.+84     	; 0x1482 <disk_writep+0xe8>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
    142e:	80 91 9a 06 	lds	r24, 0x069A	; 0x80069a <wc.1710>
    1432:	90 91 9b 06 	lds	r25, 0x069B	; 0x80069b <wc.1710+0x1>
    1436:	02 96       	adiw	r24, 0x02	; 2
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
    1438:	04 c0       	rjmp	.+8      	; 0x1442 <disk_writep+0xa8>
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <xmit_spi>
    1440:	ce 01       	movw	r24, r28
    1442:	ec 01       	movw	r28, r24
    1444:	21 97       	sbiw	r28, 0x01	; 1
    1446:	89 2b       	or	r24, r25
    1448:	c1 f7       	brne	.-16     	; 0x143a <disk_writep+0xa0>
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
    144a:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    144e:	8f 71       	andi	r24, 0x1F	; 31
    1450:	85 30       	cpi	r24, 0x05	; 5
    1452:	21 f0       	breq	.+8      	; 0x145c <disk_writep+0xc2>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1454:	c1 e0       	ldi	r28, 0x01	; 1
    1456:	0f c0       	rjmp	.+30     	; 0x1476 <disk_writep+0xdc>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
    1458:	21 97       	sbiw	r28, 0x01	; 1
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <disk_writep+0xc6>
    145c:	c8 ee       	ldi	r28, 0xE8	; 232
    145e:	dd ef       	ldi	r29, 0xFD	; 253
    1460:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    1464:	8f 3f       	cpi	r24, 0xFF	; 255
    1466:	11 f0       	breq	.+4      	; 0x146c <disk_writep+0xd2>
    1468:	20 97       	sbiw	r28, 0x00	; 0
    146a:	b1 f7       	brne	.-20     	; 0x1458 <disk_writep+0xbe>
				if (bc) res = RES_OK;
    146c:	cd 2b       	or	r28, r29
    146e:	11 f4       	brne	.+4      	; 0x1474 <disk_writep+0xda>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1470:	c1 e0       	ldi	r28, 0x01	; 1
    1472:	01 c0       	rjmp	.+2      	; 0x1476 <disk_writep+0xdc>
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
				if (bc) res = RES_OK;
    1474:	c0 e0       	ldi	r28, 0x00	; 0
			}
			release_spi();
    1476:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <release_spi>
    147a:	03 c0       	rjmp	.+6      	; 0x1482 <disk_writep+0xe8>
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    147c:	c0 e0       	ldi	r28, 0x00	; 0
    147e:	01 c0       	rjmp	.+2      	; 0x1482 <disk_writep+0xe8>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1480:	c1 e0       	ldi	r28, 0x01	; 1
			release_spi();
		}
	}

	return res;
}
    1482:	8c 2f       	mov	r24, r28
    1484:	df 91       	pop	r29
    1486:	cf 91       	pop	r28
    1488:	1f 91       	pop	r17
    148a:	0f 91       	pop	r16
    148c:	08 95       	ret

0000148e <disk_initialize>:

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    148e:	ef 92       	push	r14
    1490:	ff 92       	push	r15
    1492:	0f 93       	push	r16
    1494:	1f 93       	push	r17
    1496:	cf 93       	push	r28
    1498:	df 93       	push	r29
    149a:	00 d0       	rcall	.+0      	; 0x149c <disk_initialize+0xe>
    149c:	00 d0       	rcall	.+0      	; 0x149e <disk_initialize+0x10>
    149e:	cd b7       	in	r28, 0x3d	; 61
    14a0:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];
	WORD tmr;


	INIT_SPI();
    14a2:	85 b1       	in	r24, 0x05	; 5
    14a4:	81 60       	ori	r24, 0x01	; 1
    14a6:	85 b9       	out	0x05, r24	; 5
    14a8:	88 b1       	in	r24, 0x08	; 8
    14aa:	86 60       	ori	r24, 0x06	; 6
    14ac:	88 b9       	out	0x08, r24	; 8
    14ae:	84 b1       	in	r24, 0x04	; 4
    14b0:	81 60       	ori	r24, 0x01	; 1
    14b2:	84 b9       	out	0x04, r24	; 4
    14b4:	87 b1       	in	r24, 0x07	; 7
    14b6:	8c 60       	ori	r24, 0x0C	; 12
    14b8:	87 b9       	out	0x07, r24	; 7

//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
    14ba:	28 99       	sbic	0x05, 0	; 5
    14bc:	07 c0       	rjmp	.+14     	; 0x14cc <disk_initialize+0x3e>
    14be:	40 e0       	ldi	r20, 0x00	; 0
    14c0:	50 e0       	ldi	r21, 0x00	; 0
    14c2:	ba 01       	movw	r22, r20
    14c4:	80 e0       	ldi	r24, 0x00	; 0
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	0e 94 cd 09 	call	0x139a	; 0x139a <disk_writep>

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    14cc:	14 e6       	ldi	r17, 0x64	; 100
    14ce:	03 c0       	rjmp	.+6      	; 0x14d6 <disk_initialize+0x48>
//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 
    14d0:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    14d4:	11 50       	subi	r17, 0x01	; 1
    14d6:	11 11       	cpse	r17, r1
    14d8:	fb cf       	rjmp	.-10     	; 0x14d0 <disk_initialize+0x42>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			// Enter Idle state 
    14da:	40 e0       	ldi	r20, 0x00	; 0
    14dc:	50 e0       	ldi	r21, 0x00	; 0
    14de:	ba 01       	movw	r22, r20
    14e0:	80 e4       	ldi	r24, 0x40	; 64
    14e2:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    14e6:	81 30       	cpi	r24, 0x01	; 1
    14e8:	09 f0       	breq	.+2      	; 0x14ec <disk_initialize+0x5e>
    14ea:	8f c0       	rjmp	.+286    	; 0x160a <disk_initialize+0x17c>
		if (send_cmd(CMD8, 0x1AA) == 1) {	// SDv2 
    14ec:	4a ea       	ldi	r20, 0xAA	; 170
    14ee:	51 e0       	ldi	r21, 0x01	; 1
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	88 e4       	ldi	r24, 0x48	; 72
    14f6:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    14fa:	81 30       	cpi	r24, 0x01	; 1
    14fc:	09 f0       	breq	.+2      	; 0x1500 <disk_initialize+0x72>
    14fe:	53 c0       	rjmp	.+166    	; 0x15a6 <disk_initialize+0x118>
    1500:	0d c0       	rjmp	.+26     	; 0x151c <disk_initialize+0x8e>

// 	  		setpos(0,3);
// 	  		str_lcd("SDv2");

			for (n = 0; n < 4; n++) ocr[n] = rcv_spi();		// Get trailing return value of R7 resp 
    1502:	e0 2e       	mov	r14, r16
    1504:	f1 2c       	mov	r15, r1
    1506:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    150a:	e1 e0       	ldi	r30, 0x01	; 1
    150c:	f0 e0       	ldi	r31, 0x00	; 0
    150e:	ec 0f       	add	r30, r28
    1510:	fd 1f       	adc	r31, r29
    1512:	ee 0d       	add	r30, r14
    1514:	ff 1d       	adc	r31, r15
    1516:	80 83       	st	Z, r24
    1518:	0f 5f       	subi	r16, 0xFF	; 255
    151a:	01 c0       	rjmp	.+2      	; 0x151e <disk_initialize+0x90>
    151c:	01 2f       	mov	r16, r17
    151e:	04 30       	cpi	r16, 0x04	; 4
    1520:	80 f3       	brcs	.-32     	; 0x1502 <disk_initialize+0x74>
//  			sprintf(str,"%02X",ocr[1]);
//  			str_lcd(str);
//  			setpos(17,0);
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
    1522:	8b 81       	ldd	r24, Y+3	; 0x03
    1524:	81 30       	cpi	r24, 0x01	; 1
    1526:	09 f0       	breq	.+2      	; 0x152a <disk_initialize+0x9c>
    1528:	72 c0       	rjmp	.+228    	; 0x160e <disk_initialize+0x180>
    152a:	8c 81       	ldd	r24, Y+4	; 0x04
    152c:	8a 3a       	cpi	r24, 0xAA	; 170
    152e:	31 f0       	breq	.+12     	; 0x153c <disk_initialize+0xae>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1530:	f1 2c       	mov	r15, r1
    1532:	78 c0       	rjmp	.+240    	; 0x1624 <disk_initialize+0x196>
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
// 	  		setpos(5,3);
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
    1534:	81 e0       	ldi	r24, 0x01	; 1
    1536:	e8 1a       	sub	r14, r24
    1538:	f1 08       	sbc	r15, r1
    153a:	06 c0       	rjmp	.+12     	; 0x1548 <disk_initialize+0xba>
    153c:	0f 2e       	mov	r0, r31
    153e:	f0 ee       	ldi	r31, 0xE0	; 224
    1540:	ef 2e       	mov	r14, r31
    1542:	fe e2       	ldi	r31, 0x2E	; 46
    1544:	ff 2e       	mov	r15, r31
    1546:	f0 2d       	mov	r31, r0
    1548:	e1 14       	cp	r14, r1
    154a:	f1 04       	cpc	r15, r1
    154c:	49 f0       	breq	.+18     	; 0x1560 <disk_initialize+0xd2>
    154e:	40 e0       	ldi	r20, 0x00	; 0
    1550:	50 e0       	ldi	r21, 0x00	; 0
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	70 e4       	ldi	r23, 0x40	; 64
    1556:	89 ee       	ldi	r24, 0xE9	; 233
    1558:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    155c:	81 11       	cpse	r24, r1
    155e:	ea cf       	rjmp	.-44     	; 0x1534 <disk_initialize+0xa6>
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
    1560:	ef 28       	or	r14, r15
    1562:	09 f4       	brne	.+2      	; 0x1566 <disk_initialize+0xd8>
    1564:	56 c0       	rjmp	.+172    	; 0x1612 <disk_initialize+0x184>
    1566:	40 e0       	ldi	r20, 0x00	; 0
    1568:	50 e0       	ldi	r21, 0x00	; 0
    156a:	ba 01       	movw	r22, r20
    156c:	8a e7       	ldi	r24, 0x7A	; 122
    156e:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    1572:	88 23       	and	r24, r24
    1574:	71 f0       	breq	.+28     	; 0x1592 <disk_initialize+0x104>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1576:	f1 2c       	mov	r15, r1
    1578:	55 c0       	rjmp	.+170    	; 0x1624 <disk_initialize+0x196>
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
// 			  		setpos(10,3);
// 					str_lcd("CCS");
					for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
    157a:	e1 2e       	mov	r14, r17
    157c:	f1 2c       	mov	r15, r1
    157e:	0e 94 12 09 	call	0x1224	; 0x1224 <rcv_spi>
    1582:	e1 e0       	ldi	r30, 0x01	; 1
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	ec 0f       	add	r30, r28
    1588:	fd 1f       	adc	r31, r29
    158a:	ee 0d       	add	r30, r14
    158c:	ff 1d       	adc	r31, r15
    158e:	80 83       	st	Z, r24
    1590:	1f 5f       	subi	r17, 0xFF	; 255
    1592:	14 30       	cpi	r17, 0x04	; 4
    1594:	90 f3       	brcs	.-28     	; 0x157a <disk_initialize+0xec>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1596:	89 81       	ldd	r24, Y+1	; 0x01
    1598:	86 ff       	sbrs	r24, 6
    159a:	3d c0       	rjmp	.+122    	; 0x1616 <disk_initialize+0x188>
    159c:	0f 2e       	mov	r0, r31
    159e:	fc e0       	ldi	r31, 0x0C	; 12
    15a0:	ff 2e       	mov	r15, r31
    15a2:	f0 2d       	mov	r31, r0
    15a4:	3f c0       	rjmp	.+126    	; 0x1624 <disk_initialize+0x196>
				}
			}
		} else {							// SDv1 or MMCv3 
			if (send_cmd(ACMD41, 0) <= 1) 	{
    15a6:	40 e0       	ldi	r20, 0x00	; 0
    15a8:	50 e0       	ldi	r21, 0x00	; 0
    15aa:	ba 01       	movw	r22, r20
    15ac:	89 ee       	ldi	r24, 0xE9	; 233
    15ae:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    15b2:	82 30       	cpi	r24, 0x02	; 2
    15b4:	40 f4       	brcc	.+16     	; 0x15c6 <disk_initialize+0x138>
				ty = CT_SD1; cmd = ACMD41;	// SDv1 
    15b6:	68 94       	set
    15b8:	ff 24       	eor	r15, r15
    15ba:	f1 f8       	bld	r15, 1
    15bc:	0f 2e       	mov	r0, r31
    15be:	f9 ee       	ldi	r31, 0xE9	; 233
    15c0:	ef 2e       	mov	r14, r31
    15c2:	f0 2d       	mov	r31, r0
    15c4:	06 c0       	rjmp	.+12     	; 0x15d2 <disk_initialize+0x144>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
    15c6:	ff 24       	eor	r15, r15
    15c8:	f3 94       	inc	r15
    15ca:	0f 2e       	mov	r0, r31
    15cc:	f1 e4       	ldi	r31, 0x41	; 65
    15ce:	ef 2e       	mov	r14, r31
    15d0:	f0 2d       	mov	r31, r0
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
    15d2:	08 ea       	ldi	r16, 0xA8	; 168
    15d4:	11 e6       	ldi	r17, 0x61	; 97
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <disk_initialize+0x14e>
    15d8:	01 50       	subi	r16, 0x01	; 1
    15da:	11 09       	sbc	r17, r1
    15dc:	01 15       	cp	r16, r1
    15de:	11 05       	cpc	r17, r1
    15e0:	41 f0       	breq	.+16     	; 0x15f2 <disk_initialize+0x164>
    15e2:	40 e0       	ldi	r20, 0x00	; 0
    15e4:	50 e0       	ldi	r21, 0x00	; 0
    15e6:	ba 01       	movw	r22, r20
    15e8:	8e 2d       	mov	r24, r14
    15ea:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    15ee:	81 11       	cpse	r24, r1
    15f0:	f3 cf       	rjmp	.-26     	; 0x15d8 <disk_initialize+0x14a>
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
    15f2:	01 2b       	or	r16, r17
    15f4:	a1 f0       	breq	.+40     	; 0x161e <disk_initialize+0x190>
    15f6:	40 e0       	ldi	r20, 0x00	; 0
    15f8:	52 e0       	ldi	r21, 0x02	; 2
    15fa:	60 e0       	ldi	r22, 0x00	; 0
    15fc:	70 e0       	ldi	r23, 0x00	; 0
    15fe:	80 e5       	ldi	r24, 0x50	; 80
    1600:	0e 94 26 09 	call	0x124c	; 0x124c <send_cmd>
    1604:	81 11       	cpse	r24, r1
    1606:	0d c0       	rjmp	.+26     	; 0x1622 <disk_initialize+0x194>
    1608:	0d c0       	rjmp	.+26     	; 0x1624 <disk_initialize+0x196>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    160a:	f1 2c       	mov	r15, r1
    160c:	0b c0       	rjmp	.+22     	; 0x1624 <disk_initialize+0x196>
    160e:	f1 2c       	mov	r15, r1
    1610:	09 c0       	rjmp	.+18     	; 0x1624 <disk_initialize+0x196>
    1612:	f1 2c       	mov	r15, r1
    1614:	07 c0       	rjmp	.+14     	; 0x1624 <disk_initialize+0x196>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1616:	68 94       	set
    1618:	ff 24       	eor	r15, r15
    161a:	f2 f8       	bld	r15, 2
    161c:	03 c0       	rjmp	.+6      	; 0x1624 <disk_initialize+0x196>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
				ty = 0;
    161e:	f1 2c       	mov	r15, r1
    1620:	01 c0       	rjmp	.+2      	; 0x1624 <disk_initialize+0x196>
    1622:	f1 2c       	mov	r15, r1
		}
	}
	CardType = ty;
    1624:	f0 92 9c 06 	sts	0x069C, r15	; 0x80069c <CardType>
//   	sprintf(str,"%d",CardType);
//   	setpos(0,1);
//   	str_lcd(str);
	release_spi();
    1628:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <release_spi>

	return ty ? 0 : STA_NOINIT;
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	f1 10       	cpse	r15, r1
    1630:	80 e0       	ldi	r24, 0x00	; 0
}
    1632:	0f 90       	pop	r0
    1634:	0f 90       	pop	r0
    1636:	0f 90       	pop	r0
    1638:	0f 90       	pop	r0
    163a:	df 91       	pop	r29
    163c:	cf 91       	pop	r28
    163e:	1f 91       	pop	r17
    1640:	0f 91       	pop	r16
    1642:	ff 90       	pop	r15
    1644:	ef 90       	pop	r14
    1646:	08 95       	ret

00001648 <NRF24L01_Receive>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
    1648:	cf 93       	push	r28
    164a:	df 93       	push	r29
    164c:	80 91 9d 06 	lds	r24, 0x069D	; 0x80069d <rx_flag>
    1650:	81 30       	cpi	r24, 0x01	; 1
    1652:	09 f0       	breq	.+2      	; 0x1656 <NRF24L01_Receive+0xe>
    1654:	63 c1       	rjmp	.+710    	; 0x191c <NRF24L01_Receive+0x2d4>
    1656:	80 91 9e 06 	lds	r24, 0x069E	; 0x80069e <RX_BUF>
    165a:	81 30       	cpi	r24, 0x01	; 1
    165c:	09 f0       	breq	.+2      	; 0x1660 <NRF24L01_Receive+0x18>
    165e:	59 c0       	rjmp	.+178    	; 0x1712 <NRF24L01_Receive+0xca>
    1660:	e0 e9       	ldi	r30, 0x90	; 144
    1662:	f2 e0       	ldi	r31, 0x02	; 2
    1664:	01 90       	ld	r0, Z+
    1666:	00 20       	and	r0, r0
    1668:	e9 f7       	brne	.-6      	; 0x1664 <NRF24L01_Receive+0x1c>
    166a:	31 97       	sbiw	r30, 0x01	; 1
    166c:	af 01       	movw	r20, r30
    166e:	40 59       	subi	r20, 0x90	; 144
    1670:	52 40       	sbci	r21, 0x02	; 2
    1672:	44 0f       	add	r20, r20
    1674:	55 1f       	adc	r21, r21
    1676:	60 e0       	ldi	r22, 0x00	; 0
    1678:	70 e0       	ldi	r23, 0x00	; 0
    167a:	80 e9       	ldi	r24, 0x90	; 144
    167c:	92 e0       	ldi	r25, 0x02	; 2
    167e:	0e 94 14 25 	call	0x4a28	; 0x4a28 <memset>
    1682:	ee e9       	ldi	r30, 0x9E	; 158
    1684:	f6 e0       	ldi	r31, 0x06	; 6
    1686:	81 81       	ldd	r24, Z+1	; 0x01
    1688:	c2 81       	ldd	r28, Z+2	; 0x02
    168a:	d0 e0       	ldi	r29, 0x00	; 0
    168c:	dc 2f       	mov	r29, r28
    168e:	cc 27       	eor	r28, r28
    1690:	c8 2b       	or	r28, r24
    1692:	be 01       	movw	r22, r28
    1694:	0d 2e       	mov	r0, r29
    1696:	00 0c       	add	r0, r0
    1698:	88 0b       	sbc	r24, r24
    169a:	99 0b       	sbc	r25, r25
    169c:	0e 94 19 1f 	call	0x3e32	; 0x3e32 <__floatsisf>
    16a0:	20 e0       	ldi	r18, 0x00	; 0
    16a2:	30 e0       	ldi	r19, 0x00	; 0
    16a4:	40 e2       	ldi	r20, 0x20	; 32
    16a6:	51 e4       	ldi	r21, 0x41	; 65
    16a8:	0e 94 6f 1e 	call	0x3cde	; 0x3cde <__divsf3>
    16ac:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <temp>
    16b0:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <temp+0x1>
    16b4:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <temp+0x2>
    16b8:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <temp+0x3>
    16bc:	dd 23       	and	r29, r29
    16be:	5c f4       	brge	.+22     	; 0x16d6 <NRF24L01_Receive+0x8e>
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	b0 58       	subi	r27, 0x80	; 128
    16c6:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <temp>
    16ca:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <temp+0x1>
    16ce:	a0 93 0c 02 	sts	0x020C, r26	; 0x80020c <temp+0x2>
    16d2:	b0 93 0d 02 	sts	0x020D, r27	; 0x80020d <temp+0x3>
    16d6:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <temp+0x3>
    16da:	8f 93       	push	r24
    16dc:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <temp+0x2>
    16e0:	8f 93       	push	r24
    16e2:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <temp+0x1>
    16e6:	8f 93       	push	r24
    16e8:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <temp>
    16ec:	8f 93       	push	r24
    16ee:	80 e3       	ldi	r24, 0x30	; 48
    16f0:	91 e0       	ldi	r25, 0x01	; 1
    16f2:	9f 93       	push	r25
    16f4:	8f 93       	push	r24
    16f6:	80 e9       	ldi	r24, 0x90	; 144
    16f8:	92 e0       	ldi	r25, 0x02	; 2
    16fa:	9f 93       	push	r25
    16fc:	8f 93       	push	r24
    16fe:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    1702:	8d b7       	in	r24, 0x3d	; 61
    1704:	9e b7       	in	r25, 0x3e	; 62
    1706:	08 96       	adiw	r24, 0x08	; 8
    1708:	0f b6       	in	r0, 0x3f	; 63
    170a:	f8 94       	cli
    170c:	9e bf       	out	0x3e, r25	; 62
    170e:	0f be       	out	0x3f, r0	; 63
    1710:	8d bf       	out	0x3d, r24	; 61
    1712:	80 91 9e 06 	lds	r24, 0x069E	; 0x80069e <RX_BUF>
    1716:	85 30       	cpi	r24, 0x05	; 5
    1718:	09 f0       	breq	.+2      	; 0x171c <NRF24L01_Receive+0xd4>
    171a:	3f c0       	rjmp	.+126    	; 0x179a <NRF24L01_Receive+0x152>
    171c:	c6 e8       	ldi	r28, 0x86	; 134
    171e:	d2 e0       	ldi	r29, 0x02	; 2
    1720:	fe 01       	movw	r30, r28
    1722:	01 90       	ld	r0, Z+
    1724:	00 20       	and	r0, r0
    1726:	e9 f7       	brne	.-6      	; 0x1722 <NRF24L01_Receive+0xda>
    1728:	31 97       	sbiw	r30, 0x01	; 1
    172a:	af 01       	movw	r20, r30
    172c:	46 58       	subi	r20, 0x86	; 134
    172e:	52 40       	sbci	r21, 0x02	; 2
    1730:	44 0f       	add	r20, r20
    1732:	55 1f       	adc	r21, r21
    1734:	60 e0       	ldi	r22, 0x00	; 0
    1736:	70 e0       	ldi	r23, 0x00	; 0
    1738:	ce 01       	movw	r24, r28
    173a:	0e 94 14 25 	call	0x4a28	; 0x4a28 <memset>
    173e:	ee e9       	ldi	r30, 0x9E	; 158
    1740:	f6 e0       	ldi	r31, 0x06	; 6
    1742:	81 81       	ldd	r24, Z+1	; 0x01
    1744:	62 81       	ldd	r22, Z+2	; 0x02
    1746:	70 e0       	ldi	r23, 0x00	; 0
    1748:	76 2f       	mov	r23, r22
    174a:	66 27       	eor	r22, r22
    174c:	68 2b       	or	r22, r24
    174e:	07 2e       	mov	r0, r23
    1750:	00 0c       	add	r0, r0
    1752:	88 0b       	sbc	r24, r24
    1754:	99 0b       	sbc	r25, r25
    1756:	0e 94 19 1f 	call	0x3e32	; 0x3e32 <__floatsisf>
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	40 e2       	ldi	r20, 0x20	; 32
    1760:	51 e4       	ldi	r21, 0x41	; 65
    1762:	0e 94 6f 1e 	call	0x3cde	; 0x3cde <__divsf3>
    1766:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <__data_end>
    176a:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <__data_end+0x1>
    176e:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <__data_end+0x2>
    1772:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <__data_end+0x3>
    1776:	0e 94 e1 1e 	call	0x3dc2	; 0x3dc2 <__fixsfsi>
    177a:	7f 93       	push	r23
    177c:	6f 93       	push	r22
    177e:	82 e7       	ldi	r24, 0x72	; 114
    1780:	91 e0       	ldi	r25, 0x01	; 1
    1782:	9f 93       	push	r25
    1784:	8f 93       	push	r24
    1786:	df 93       	push	r29
    1788:	cf 93       	push	r28
    178a:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    178e:	0f 90       	pop	r0
    1790:	0f 90       	pop	r0
    1792:	0f 90       	pop	r0
    1794:	0f 90       	pop	r0
    1796:	0f 90       	pop	r0
    1798:	0f 90       	pop	r0
    179a:	c0 91 9e 06 	lds	r28, 0x069E	; 0x80069e <RX_BUF>
    179e:	c2 30       	cpi	r28, 0x02	; 2
    17a0:	61 f5       	brne	.+88     	; 0x17fa <NRF24L01_Receive+0x1b2>
    17a2:	ec e7       	ldi	r30, 0x7C	; 124
    17a4:	f2 e0       	ldi	r31, 0x02	; 2
    17a6:	01 90       	ld	r0, Z+
    17a8:	00 20       	and	r0, r0
    17aa:	e9 f7       	brne	.-6      	; 0x17a6 <NRF24L01_Receive+0x15e>
    17ac:	31 97       	sbiw	r30, 0x01	; 1
    17ae:	af 01       	movw	r20, r30
    17b0:	4c 57       	subi	r20, 0x7C	; 124
    17b2:	52 40       	sbci	r21, 0x02	; 2
    17b4:	44 0f       	add	r20, r20
    17b6:	55 1f       	adc	r21, r21
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	70 e0       	ldi	r23, 0x00	; 0
    17bc:	8c e7       	ldi	r24, 0x7C	; 124
    17be:	92 e0       	ldi	r25, 0x02	; 2
    17c0:	0e 94 14 25 	call	0x4a28	; 0x4a28 <memset>
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	0b c0       	rjmp	.+22     	; 0x17de <NRF24L01_Receive+0x196>
    17c8:	82 2f       	mov	r24, r18
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	fc 01       	movw	r30, r24
    17ce:	e1 56       	subi	r30, 0x61	; 97
    17d0:	f9 4f       	sbci	r31, 0xF9	; 249
    17d2:	30 81       	ld	r19, Z
    17d4:	fc 01       	movw	r30, r24
    17d6:	e4 58       	subi	r30, 0x84	; 132
    17d8:	fd 4f       	sbci	r31, 0xFD	; 253
    17da:	30 83       	st	Z, r19
    17dc:	2f 5f       	subi	r18, 0xFF	; 255
    17de:	82 2f       	mov	r24, r18
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	ee e9       	ldi	r30, 0x9E	; 158
    17e4:	f6 e0       	ldi	r31, 0x06	; 6
    17e6:	01 90       	ld	r0, Z+
    17e8:	00 20       	and	r0, r0
    17ea:	e9 f7       	brne	.-6      	; 0x17e6 <NRF24L01_Receive+0x19e>
    17ec:	31 97       	sbiw	r30, 0x01	; 1
    17ee:	ee 59       	subi	r30, 0x9E	; 158
    17f0:	f6 40       	sbci	r31, 0x06	; 6
    17f2:	31 97       	sbiw	r30, 0x01	; 1
    17f4:	8e 17       	cp	r24, r30
    17f6:	9f 07       	cpc	r25, r31
    17f8:	38 f3       	brcs	.-50     	; 0x17c8 <NRF24L01_Receive+0x180>
    17fa:	c3 30       	cpi	r28, 0x03	; 3
    17fc:	89 f5       	brne	.+98     	; 0x1860 <NRF24L01_Receive+0x218>
    17fe:	e8 e6       	ldi	r30, 0x68	; 104
    1800:	f2 e0       	ldi	r31, 0x02	; 2
    1802:	01 90       	ld	r0, Z+
    1804:	00 20       	and	r0, r0
    1806:	e9 f7       	brne	.-6      	; 0x1802 <NRF24L01_Receive+0x1ba>
    1808:	31 97       	sbiw	r30, 0x01	; 1
    180a:	af 01       	movw	r20, r30
    180c:	48 56       	subi	r20, 0x68	; 104
    180e:	52 40       	sbci	r21, 0x02	; 2
    1810:	44 0f       	add	r20, r20
    1812:	55 1f       	adc	r21, r21
    1814:	60 e0       	ldi	r22, 0x00	; 0
    1816:	70 e0       	ldi	r23, 0x00	; 0
    1818:	88 e6       	ldi	r24, 0x68	; 104
    181a:	92 e0       	ldi	r25, 0x02	; 2
    181c:	0e 94 14 25 	call	0x4a28	; 0x4a28 <memset>
    1820:	20 e0       	ldi	r18, 0x00	; 0
    1822:	0b c0       	rjmp	.+22     	; 0x183a <NRF24L01_Receive+0x1f2>
    1824:	82 2f       	mov	r24, r18
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	fc 01       	movw	r30, r24
    182a:	e1 56       	subi	r30, 0x61	; 97
    182c:	f9 4f       	sbci	r31, 0xF9	; 249
    182e:	30 81       	ld	r19, Z
    1830:	fc 01       	movw	r30, r24
    1832:	e8 59       	subi	r30, 0x98	; 152
    1834:	fd 4f       	sbci	r31, 0xFD	; 253
    1836:	30 83       	st	Z, r19
    1838:	2f 5f       	subi	r18, 0xFF	; 255
    183a:	82 2f       	mov	r24, r18
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	ee e9       	ldi	r30, 0x9E	; 158
    1840:	f6 e0       	ldi	r31, 0x06	; 6
    1842:	01 90       	ld	r0, Z+
    1844:	00 20       	and	r0, r0
    1846:	e9 f7       	brne	.-6      	; 0x1842 <NRF24L01_Receive+0x1fa>
    1848:	31 97       	sbiw	r30, 0x01	; 1
    184a:	ee 59       	subi	r30, 0x9E	; 158
    184c:	f6 40       	sbci	r31, 0x06	; 6
    184e:	31 97       	sbiw	r30, 0x01	; 1
    1850:	8e 17       	cp	r24, r30
    1852:	9f 07       	cpc	r25, r31
    1854:	38 f3       	brcs	.-50     	; 0x1824 <NRF24L01_Receive+0x1dc>
    1856:	fc 01       	movw	r30, r24
    1858:	e7 59       	subi	r30, 0x97	; 151
    185a:	fd 4f       	sbci	r31, 0xFD	; 253
    185c:	80 e2       	ldi	r24, 0x20	; 32
    185e:	80 83       	st	Z, r24
    1860:	c4 30       	cpi	r28, 0x04	; 4
    1862:	61 f5       	brne	.+88     	; 0x18bc <NRF24L01_Receive+0x274>
    1864:	ee e5       	ldi	r30, 0x5E	; 94
    1866:	f2 e0       	ldi	r31, 0x02	; 2
    1868:	01 90       	ld	r0, Z+
    186a:	00 20       	and	r0, r0
    186c:	e9 f7       	brne	.-6      	; 0x1868 <NRF24L01_Receive+0x220>
    186e:	31 97       	sbiw	r30, 0x01	; 1
    1870:	af 01       	movw	r20, r30
    1872:	4e 55       	subi	r20, 0x5E	; 94
    1874:	52 40       	sbci	r21, 0x02	; 2
    1876:	44 0f       	add	r20, r20
    1878:	55 1f       	adc	r21, r21
    187a:	60 e0       	ldi	r22, 0x00	; 0
    187c:	70 e0       	ldi	r23, 0x00	; 0
    187e:	8e e5       	ldi	r24, 0x5E	; 94
    1880:	92 e0       	ldi	r25, 0x02	; 2
    1882:	0e 94 14 25 	call	0x4a28	; 0x4a28 <memset>
    1886:	20 e0       	ldi	r18, 0x00	; 0
    1888:	0b c0       	rjmp	.+22     	; 0x18a0 <NRF24L01_Receive+0x258>
    188a:	82 2f       	mov	r24, r18
    188c:	90 e0       	ldi	r25, 0x00	; 0
    188e:	fc 01       	movw	r30, r24
    1890:	e1 56       	subi	r30, 0x61	; 97
    1892:	f9 4f       	sbci	r31, 0xF9	; 249
    1894:	30 81       	ld	r19, Z
    1896:	fc 01       	movw	r30, r24
    1898:	e2 5a       	subi	r30, 0xA2	; 162
    189a:	fd 4f       	sbci	r31, 0xFD	; 253
    189c:	30 83       	st	Z, r19
    189e:	2f 5f       	subi	r18, 0xFF	; 255
    18a0:	82 2f       	mov	r24, r18
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	ee e9       	ldi	r30, 0x9E	; 158
    18a6:	f6 e0       	ldi	r31, 0x06	; 6
    18a8:	01 90       	ld	r0, Z+
    18aa:	00 20       	and	r0, r0
    18ac:	e9 f7       	brne	.-6      	; 0x18a8 <NRF24L01_Receive+0x260>
    18ae:	31 97       	sbiw	r30, 0x01	; 1
    18b0:	ee 59       	subi	r30, 0x9E	; 158
    18b2:	f6 40       	sbci	r31, 0x06	; 6
    18b4:	31 97       	sbiw	r30, 0x01	; 1
    18b6:	8e 17       	cp	r24, r30
    18b8:	9f 07       	cpc	r25, r31
    18ba:	38 f3       	brcs	.-50     	; 0x188a <NRF24L01_Receive+0x242>
    18bc:	c6 30       	cpi	r28, 0x06	; 6
    18be:	61 f5       	brne	.+88     	; 0x1918 <NRF24L01_Receive+0x2d0>
    18c0:	e4 e5       	ldi	r30, 0x54	; 84
    18c2:	f2 e0       	ldi	r31, 0x02	; 2
    18c4:	01 90       	ld	r0, Z+
    18c6:	00 20       	and	r0, r0
    18c8:	e9 f7       	brne	.-6      	; 0x18c4 <NRF24L01_Receive+0x27c>
    18ca:	31 97       	sbiw	r30, 0x01	; 1
    18cc:	af 01       	movw	r20, r30
    18ce:	44 55       	subi	r20, 0x54	; 84
    18d0:	52 40       	sbci	r21, 0x02	; 2
    18d2:	44 0f       	add	r20, r20
    18d4:	55 1f       	adc	r21, r21
    18d6:	60 e0       	ldi	r22, 0x00	; 0
    18d8:	70 e0       	ldi	r23, 0x00	; 0
    18da:	84 e5       	ldi	r24, 0x54	; 84
    18dc:	92 e0       	ldi	r25, 0x02	; 2
    18de:	0e 94 14 25 	call	0x4a28	; 0x4a28 <memset>
    18e2:	20 e0       	ldi	r18, 0x00	; 0
    18e4:	0b c0       	rjmp	.+22     	; 0x18fc <NRF24L01_Receive+0x2b4>
    18e6:	82 2f       	mov	r24, r18
    18e8:	90 e0       	ldi	r25, 0x00	; 0
    18ea:	fc 01       	movw	r30, r24
    18ec:	e1 56       	subi	r30, 0x61	; 97
    18ee:	f9 4f       	sbci	r31, 0xF9	; 249
    18f0:	30 81       	ld	r19, Z
    18f2:	fc 01       	movw	r30, r24
    18f4:	ec 5a       	subi	r30, 0xAC	; 172
    18f6:	fd 4f       	sbci	r31, 0xFD	; 253
    18f8:	30 83       	st	Z, r19
    18fa:	2f 5f       	subi	r18, 0xFF	; 255
    18fc:	82 2f       	mov	r24, r18
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	ee e9       	ldi	r30, 0x9E	; 158
    1902:	f6 e0       	ldi	r31, 0x06	; 6
    1904:	01 90       	ld	r0, Z+
    1906:	00 20       	and	r0, r0
    1908:	e9 f7       	brne	.-6      	; 0x1904 <NRF24L01_Receive+0x2bc>
    190a:	31 97       	sbiw	r30, 0x01	; 1
    190c:	ee 59       	subi	r30, 0x9E	; 158
    190e:	f6 40       	sbci	r31, 0x06	; 6
    1910:	31 97       	sbiw	r30, 0x01	; 1
    1912:	8e 17       	cp	r24, r30
    1914:	9f 07       	cpc	r25, r31
    1916:	38 f3       	brcs	.-50     	; 0x18e6 <NRF24L01_Receive+0x29e>
    1918:	10 92 9d 06 	sts	0x069D, r1	; 0x80069d <rx_flag>
    191c:	df 91       	pop	r29
    191e:	cf 91       	pop	r28
    1920:	08 95       	ret

00001922 <NRF24_FlushRX>:
    1922:	85 b1       	in	r24, 0x05	; 5
    1924:	8b 7f       	andi	r24, 0xFB	; 251
    1926:	85 b9       	out	0x05, r24	; 5
    1928:	82 ee       	ldi	r24, 0xE2	; 226
    192a:	90 e0       	ldi	r25, 0x00	; 0
    192c:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    1930:	85 e0       	ldi	r24, 0x05	; 5
    1932:	8a 95       	dec	r24
    1934:	f1 f7       	brne	.-4      	; 0x1932 <NRF24_FlushRX+0x10>
    1936:	00 00       	nop
    1938:	85 b1       	in	r24, 0x05	; 5
    193a:	84 60       	ori	r24, 0x04	; 4
    193c:	85 b9       	out	0x05, r24	; 5
    193e:	08 95       	ret

00001940 <NRF24_FlushTX>:
    1940:	85 b1       	in	r24, 0x05	; 5
    1942:	8b 7f       	andi	r24, 0xFB	; 251
    1944:	85 b9       	out	0x05, r24	; 5
    1946:	81 ee       	ldi	r24, 0xE1	; 225
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    194e:	85 e0       	ldi	r24, 0x05	; 5
    1950:	8a 95       	dec	r24
    1952:	f1 f7       	brne	.-4      	; 0x1950 <NRF24_FlushTX+0x10>
    1954:	00 00       	nop
    1956:	85 b1       	in	r24, 0x05	; 5
    1958:	84 60       	ori	r24, 0x04	; 4
    195a:	85 b9       	out	0x05, r24	; 5
    195c:	08 95       	ret

0000195e <NRF24_ToggleFeatures>:
    195e:	85 b1       	in	r24, 0x05	; 5
    1960:	8b 7f       	andi	r24, 0xFB	; 251
    1962:	85 b9       	out	0x05, r24	; 5
    1964:	80 e5       	ldi	r24, 0x50	; 80
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    196c:	85 e0       	ldi	r24, 0x05	; 5
    196e:	8a 95       	dec	r24
    1970:	f1 f7       	brne	.-4      	; 0x196e <NRF24_ToggleFeatures+0x10>
    1972:	00 00       	nop
    1974:	83 e7       	ldi	r24, 0x73	; 115
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    197c:	85 b1       	in	r24, 0x05	; 5
    197e:	84 60       	ori	r24, 0x04	; 4
    1980:	85 b9       	out	0x05, r24	; 5
    1982:	08 95       	ret

00001984 <NRF24_Read_Buf>:
    1984:	ef 92       	push	r14
    1986:	ff 92       	push	r15
    1988:	0f 93       	push	r16
    198a:	1f 93       	push	r17
    198c:	cf 93       	push	r28
    198e:	df 93       	push	r29
    1990:	8b 01       	movw	r16, r22
    1992:	c4 2f       	mov	r28, r20
    1994:	95 b1       	in	r25, 0x05	; 5
    1996:	9b 7f       	andi	r25, 0xFB	; 251
    1998:	95 b9       	out	0x05, r25	; 5
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    19a0:	0c c0       	rjmp	.+24     	; 0x19ba <NRF24_Read_Buf+0x36>
    19a2:	78 01       	movw	r14, r16
    19a4:	8f ef       	ldi	r24, 0xFF	; 255
    19a6:	e8 1a       	sub	r14, r24
    19a8:	f8 0a       	sbc	r15, r24
    19aa:	8f ef       	ldi	r24, 0xFF	; 255
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    19b2:	f8 01       	movw	r30, r16
    19b4:	80 83       	st	Z, r24
    19b6:	cd 2f       	mov	r28, r29
    19b8:	87 01       	movw	r16, r14
    19ba:	df ef       	ldi	r29, 0xFF	; 255
    19bc:	dc 0f       	add	r29, r28
    19be:	c1 11       	cpse	r28, r1
    19c0:	f0 cf       	rjmp	.-32     	; 0x19a2 <NRF24_Read_Buf+0x1e>
    19c2:	85 b1       	in	r24, 0x05	; 5
    19c4:	84 60       	ori	r24, 0x04	; 4
    19c6:	85 b9       	out	0x05, r24	; 5
    19c8:	df 91       	pop	r29
    19ca:	cf 91       	pop	r28
    19cc:	1f 91       	pop	r17
    19ce:	0f 91       	pop	r16
    19d0:	ff 90       	pop	r15
    19d2:	ef 90       	pop	r14
    19d4:	08 95       	ret

000019d6 <NRF24_Write_Buf>:
    19d6:	ef 92       	push	r14
    19d8:	ff 92       	push	r15
    19da:	0f 93       	push	r16
    19dc:	1f 93       	push	r17
    19de:	cf 93       	push	r28
    19e0:	df 93       	push	r29
    19e2:	8b 01       	movw	r16, r22
    19e4:	c4 2f       	mov	r28, r20
    19e6:	80 62       	ori	r24, 0x20	; 32
    19e8:	95 b1       	in	r25, 0x05	; 5
    19ea:	9b 7f       	andi	r25, 0xFB	; 251
    19ec:	95 b9       	out	0x05, r25	; 5
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    19f4:	85 e0       	ldi	r24, 0x05	; 5
    19f6:	8a 95       	dec	r24
    19f8:	f1 f7       	brne	.-4      	; 0x19f6 <NRF24_Write_Buf+0x20>
    19fa:	00 00       	nop
    19fc:	0b c0       	rjmp	.+22     	; 0x1a14 <NRF24_Write_Buf+0x3e>
    19fe:	78 01       	movw	r14, r16
    1a00:	ef ef       	ldi	r30, 0xFF	; 255
    1a02:	ee 1a       	sub	r14, r30
    1a04:	fe 0a       	sbc	r15, r30
    1a06:	f8 01       	movw	r30, r16
    1a08:	80 81       	ld	r24, Z
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
    1a10:	cd 2f       	mov	r28, r29
    1a12:	87 01       	movw	r16, r14
    1a14:	df ef       	ldi	r29, 0xFF	; 255
    1a16:	dc 0f       	add	r29, r28
    1a18:	c1 11       	cpse	r28, r1
    1a1a:	f1 cf       	rjmp	.-30     	; 0x19fe <NRF24_Write_Buf+0x28>
    1a1c:	85 b1       	in	r24, 0x05	; 5
    1a1e:	84 60       	ori	r24, 0x04	; 4
    1a20:	85 b9       	out	0x05, r24	; 5
    1a22:	df 91       	pop	r29
    1a24:	cf 91       	pop	r28
    1a26:	1f 91       	pop	r17
    1a28:	0f 91       	pop	r16
    1a2a:	ff 90       	pop	r15
    1a2c:	ef 90       	pop	r14
    1a2e:	08 95       	ret

00001a30 <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
    1a30:	cf 93       	push	r28
    1a32:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
    1a34:	80 62       	ori	r24, 0x20	; 32
	LOW_CSN;
    1a36:	95 b1       	in	r25, 0x05	; 5
    1a38:	9b 7f       	andi	r25, 0xFB	; 251
    1a3a:	95 b9       	out	0x05, r25	; 5
	spi_send_recv(reg);
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
	spi_send_recv(data_out);
    1a42:	8c 2f       	mov	r24, r28
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
	HIGH_CSN;
    1a4a:	85 b1       	in	r24, 0x05	; 5
    1a4c:	84 60       	ori	r24, 0x04	; 4
    1a4e:	85 b9       	out	0x05, r24	; 5
}
    1a50:	cf 91       	pop	r28
    1a52:	08 95       	ret

00001a54 <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
    1a54:	cf 93       	push	r28
    1a56:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
    1a58:	85 b1       	in	r24, 0x05	; 5
    1a5a:	8b 7f       	andi	r24, 0xFB	; 251
    1a5c:	85 b9       	out	0x05, r24	; 5
	data_in = spi_send_recv(reg);
    1a5e:	8c 2f       	mov	r24, r28
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
	if(reg != STATUS)
    1a66:	c7 30       	cpi	r28, 0x07	; 7
    1a68:	21 f0       	breq	.+8      	; 0x1a72 <nRF_read_register+0x1e>
	{
		data_in = spi_send_recv(NOP);
    1a6a:	8f ef       	ldi	r24, 0xFF	; 255
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <spi_send_recv>
	}
	HIGH_CSN;
    1a72:	95 b1       	in	r25, 0x05	; 5
    1a74:	94 60       	ori	r25, 0x04	; 4
    1a76:	95 b9       	out	0x05, r25	; 5
	return data_in;
}
    1a78:	cf 91       	pop	r28
    1a7a:	08 95       	ret

00001a7c <__vector_1>:
		//memset(RX_BUF, 0, sizeof(int) * strlen(RX_BUF));//очистка массива
		rx_flag = 0;
	}
}
ISR(INT0_vect)
{
    1a7c:	1f 92       	push	r1
    1a7e:	0f 92       	push	r0
    1a80:	0f b6       	in	r0, 0x3f	; 63
    1a82:	0f 92       	push	r0
    1a84:	11 24       	eor	r1, r1
    1a86:	2f 93       	push	r18
    1a88:	3f 93       	push	r19
    1a8a:	4f 93       	push	r20
    1a8c:	5f 93       	push	r21
    1a8e:	6f 93       	push	r22
    1a90:	7f 93       	push	r23
    1a92:	8f 93       	push	r24
    1a94:	9f 93       	push	r25
    1a96:	af 93       	push	r26
    1a98:	bf 93       	push	r27
    1a9a:	ef 93       	push	r30
    1a9c:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a9e:	8f ea       	ldi	r24, 0xAF	; 175
    1aa0:	94 e0       	ldi	r25, 0x04	; 4
    1aa2:	01 97       	sbiw	r24, 0x01	; 1
    1aa4:	f1 f7       	brne	.-4      	; 0x1aa2 <__vector_1+0x26>
    1aa6:	00 c0       	rjmp	.+0      	; 0x1aa8 <__vector_1+0x2c>
    1aa8:	00 00       	nop
	uint8_t status=0x01;
	uint8_t pipe;
	_delay_us(300);
	PORTD |= (1<<LED);
    1aaa:	8b b1       	in	r24, 0x0b	; 11
    1aac:	80 61       	ori	r24, 0x10	; 16
    1aae:	8b b9       	out	0x0b, r24	; 11
    1ab0:	8f ea       	ldi	r24, 0xAF	; 175
    1ab2:	94 e0       	ldi	r25, 0x04	; 4
    1ab4:	01 97       	sbiw	r24, 0x01	; 1
    1ab6:	f1 f7       	brne	.-4      	; 0x1ab4 <__vector_1+0x38>
    1ab8:	00 c0       	rjmp	.+0      	; 0x1aba <__vector_1+0x3e>
    1aba:	00 00       	nop
	_delay_us(300);
	PORTD &= ~(1<<LED);
    1abc:	8b b1       	in	r24, 0x0b	; 11
    1abe:	8f 7e       	andi	r24, 0xEF	; 239
    1ac0:	8b b9       	out	0x0b, r24	; 11
	status = nRF_read_register(STATUS);
    1ac2:	87 e0       	ldi	r24, 0x07	; 7
    1ac4:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <nRF_read_register>
	if(status & 0x40)
    1ac8:	86 ff       	sbrs	r24, 6
    1aca:	0a c0       	rjmp	.+20     	; 0x1ae0 <__vector_1+0x64>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    1acc:	45 e0       	ldi	r20, 0x05	; 5
    1ace:	6e e9       	ldi	r22, 0x9E	; 158
    1ad0:	76 e0       	ldi	r23, 0x06	; 6
    1ad2:	81 e6       	ldi	r24, 0x61	; 97
    1ad4:	0e 94 c2 0c 	call	0x1984	; 0x1984 <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    1ad8:	60 e4       	ldi	r22, 0x40	; 64
    1ada:	87 e0       	ldi	r24, 0x07	; 7
    1adc:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	}
	 rx_flag = 1;
    1ae0:	81 e0       	ldi	r24, 0x01	; 1
    1ae2:	80 93 9d 06 	sts	0x069D, r24	; 0x80069d <rx_flag>
	 NRF24L01_Receive();
    1ae6:	0e 94 24 0b 	call	0x1648	; 0x1648 <NRF24L01_Receive>
}
    1aea:	ff 91       	pop	r31
    1aec:	ef 91       	pop	r30
    1aee:	bf 91       	pop	r27
    1af0:	af 91       	pop	r26
    1af2:	9f 91       	pop	r25
    1af4:	8f 91       	pop	r24
    1af6:	7f 91       	pop	r23
    1af8:	6f 91       	pop	r22
    1afa:	5f 91       	pop	r21
    1afc:	4f 91       	pop	r20
    1afe:	3f 91       	pop	r19
    1b00:	2f 91       	pop	r18
    1b02:	0f 90       	pop	r0
    1b04:	0f be       	out	0x3f, r0	; 63
    1b06:	0f 90       	pop	r0
    1b08:	1f 90       	pop	r1
    1b0a:	18 95       	reti

00001b0c <NRF24L01_RX_Mode>:
}
//-------------------------------------------------------------
void NRF24L01_RX_Mode(void) // включение режима приема
{
	uint8_t regval = 0x00;
	regval = nRF_read_register(CONFIG);
    1b0c:	80 e0       	ldi	r24, 0x00	; 0
    1b0e:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <nRF_read_register>
	//разбудим модуль и переведём его в режим приёмника, включив биты PWR_UP и PRIM_RX
	regval |= (1<<PWR_UP)|(1<<PRIM_RX);
    1b12:	68 2f       	mov	r22, r24
    1b14:	63 60       	ori	r22, 0x03	; 3
	nRF_write_register(CONFIG,regval);
    1b16:	80 e0       	ldi	r24, 0x00	; 0
    1b18:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	HIGH_CE;
    1b1c:	85 b1       	in	r24, 0x05	; 5
    1b1e:	82 60       	ori	r24, 0x02	; 2
    1b20:	85 b9       	out	0x05, r24	; 5
    1b22:	87 e5       	ldi	r24, 0x57	; 87
    1b24:	92 e0       	ldi	r25, 0x02	; 2
    1b26:	01 97       	sbiw	r24, 0x01	; 1
    1b28:	f1 f7       	brne	.-4      	; 0x1b26 <NRF24L01_RX_Mode+0x1a>
    1b2a:	00 c0       	rjmp	.+0      	; 0x1b2c <NRF24L01_RX_Mode+0x20>
    1b2c:	00 00       	nop
	_delay_us(150); //Задержка минимум 130 мкс
	// Flush buffers
	NRF24_FlushRX();
    1b2e:	0e 94 91 0c 	call	0x1922	; 0x1922 <NRF24_FlushRX>
	NRF24_FlushTX();
    1b32:	0e 94 a0 0c 	call	0x1940	; 0x1940 <NRF24_FlushTX>
    1b36:	08 95       	ret

00001b38 <NRF24_ini>:
volatile uint8_t rx_flag = 0;
extern uint8_t Frame_buffer[1024];
//-------------------------------------------------------------
void NRF24_ini(void)
{
	LOW_CE;
    1b38:	85 b1       	in	r24, 0x05	; 5
    1b3a:	8d 7f       	andi	r24, 0xFD	; 253
    1b3c:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b3e:	8f e1       	ldi	r24, 0x1F	; 31
    1b40:	9e e4       	ldi	r25, 0x4E	; 78
    1b42:	01 97       	sbiw	r24, 0x01	; 1
    1b44:	f1 f7       	brne	.-4      	; 0x1b42 <NRF24_ini+0xa>
    1b46:	00 c0       	rjmp	.+0      	; 0x1b48 <NRF24_ini+0x10>
    1b48:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(CONFIG, 0x0a); // Set PWR_UP bit, enable CRC(1 byte) &Prim_RX:0 (Transmitter)
    1b4a:	6a e0       	ldi	r22, 0x0A	; 10
    1b4c:	80 e0       	ldi	r24, 0x00	; 0
    1b4e:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
    1b52:	8f e1       	ldi	r24, 0x1F	; 31
    1b54:	9e e4       	ldi	r25, 0x4E	; 78
    1b56:	01 97       	sbiw	r24, 0x01	; 1
    1b58:	f1 f7       	brne	.-4      	; 0x1b56 <NRF24_ini+0x1e>
    1b5a:	00 c0       	rjmp	.+0      	; 0x1b5c <NRF24_ini+0x24>
    1b5c:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(EN_AA, 0x02); // Enable Pipe1
    1b5e:	62 e0       	ldi	r22, 0x02	; 2
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	nRF_write_register(EN_RXADDR, 0x02); // Enable Pipe1
    1b66:	62 e0       	ldi	r22, 0x02	; 2
    1b68:	82 e0       	ldi	r24, 0x02	; 2
    1b6a:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	nRF_write_register(SETUP_AW, 0x01); // Setup address width=3 bytes
    1b6e:	61 e0       	ldi	r22, 0x01	; 1
    1b70:	83 e0       	ldi	r24, 0x03	; 3
    1b72:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	nRF_write_register(SETUP_RETR, 0x5F); // // 1500us, 15 retrans
    1b76:	6f e5       	ldi	r22, 0x5F	; 95
    1b78:	84 e0       	ldi	r24, 0x04	; 4
    1b7a:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	NRF24_ToggleFeatures();
    1b7e:	0e 94 af 0c 	call	0x195e	; 0x195e <NRF24_ToggleFeatures>
	nRF_write_register(FEATURE, 0);
    1b82:	60 e0       	ldi	r22, 0x00	; 0
    1b84:	8d e1       	ldi	r24, 0x1D	; 29
    1b86:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	nRF_write_register(DYNPD, 0);
    1b8a:	60 e0       	ldi	r22, 0x00	; 0
    1b8c:	8c e1       	ldi	r24, 0x1C	; 28
    1b8e:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	nRF_write_register(STATUS, 0x70);//Reset flags for IRQ
    1b92:	60 e7       	ldi	r22, 0x70	; 112
    1b94:	87 e0       	ldi	r24, 0x07	; 7
    1b96:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	nRF_write_register(RF_CH, 76); // частота 2476 MHz
    1b9a:	6c e4       	ldi	r22, 0x4C	; 76
    1b9c:	85 e0       	ldi	r24, 0x05	; 5
    1b9e:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	nRF_write_register(RF_SETUP, 0x06); //TX_PWR:0dBm, Datarate:1Mbps
    1ba2:	66 e0       	ldi	r22, 0x06	; 6
    1ba4:	86 e0       	ldi	r24, 0x06	; 6
    1ba6:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	NRF24_Write_Buf(TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);
    1baa:	43 e0       	ldi	r20, 0x03	; 3
    1bac:	62 e0       	ldi	r22, 0x02	; 2
    1bae:	71 e0       	ldi	r23, 0x01	; 1
    1bb0:	80 e1       	ldi	r24, 0x10	; 16
    1bb2:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <NRF24_Write_Buf>
	NRF24_Write_Buf(RX_ADDR_P1, TX_ADDRESS, TX_ADR_WIDTH);
    1bb6:	43 e0       	ldi	r20, 0x03	; 3
    1bb8:	62 e0       	ldi	r22, 0x02	; 2
    1bba:	71 e0       	ldi	r23, 0x01	; 1
    1bbc:	8b e0       	ldi	r24, 0x0B	; 11
    1bbe:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <NRF24_Write_Buf>
	nRF_write_register(RX_PW_P1, TX_PLOAD_WIDTH); //Number of bytes in RX payload in data pipe 1
    1bc2:	65 e0       	ldi	r22, 0x05	; 5
    1bc4:	82 e1       	ldi	r24, 0x12	; 18
    1bc6:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <nRF_write_register>
	//пока уходим в режим приёмника
	NRF24L01_RX_Mode();
    1bca:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <NRF24L01_RX_Mode>
    1bce:	08 95       	ret

00001bd0 <mem_set>:
	return FR_OK;

fw_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    1bd0:	fc 01       	movw	r30, r24
    1bd2:	03 c0       	rjmp	.+6      	; 0x1bda <mem_set+0xa>
    1bd4:	60 83       	st	Z, r22
    1bd6:	ac 01       	movw	r20, r24
    1bd8:	31 96       	adiw	r30, 0x01	; 1
    1bda:	ca 01       	movw	r24, r20
    1bdc:	01 97       	sbiw	r24, 0x01	; 1
    1bde:	45 2b       	or	r20, r21
    1be0:	c9 f7       	brne	.-14     	; 0x1bd4 <mem_set+0x4>
    1be2:	08 95       	ret

00001be4 <mem_cmp>:
    1be4:	cf 93       	push	r28
    1be6:	df 93       	push	r29
    1be8:	dc 01       	movw	r26, r24
    1bea:	fb 01       	movw	r30, r22
    1bec:	80 e0       	ldi	r24, 0x00	; 0
    1bee:	90 e0       	ldi	r25, 0x00	; 0
    1bf0:	02 c0       	rjmp	.+4      	; 0x1bf6 <mem_cmp+0x12>
    1bf2:	fb 01       	movw	r30, r22
    1bf4:	de 01       	movw	r26, r28
    1bf6:	9a 01       	movw	r18, r20
    1bf8:	21 50       	subi	r18, 0x01	; 1
    1bfa:	31 09       	sbc	r19, r1
    1bfc:	45 2b       	or	r20, r21
    1bfe:	61 f0       	breq	.+24     	; 0x1c18 <mem_cmp+0x34>
    1c00:	ed 01       	movw	r28, r26
    1c02:	21 96       	adiw	r28, 0x01	; 1
    1c04:	8c 91       	ld	r24, X
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	bf 01       	movw	r22, r30
    1c0a:	6f 5f       	subi	r22, 0xFF	; 255
    1c0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c0e:	40 81       	ld	r20, Z
    1c10:	84 1b       	sub	r24, r20
    1c12:	91 09       	sbc	r25, r1
    1c14:	a9 01       	movw	r20, r18
    1c16:	69 f3       	breq	.-38     	; 0x1bf2 <mem_cmp+0xe>
    1c18:	df 91       	pop	r29
    1c1a:	cf 91       	pop	r28
    1c1c:	08 95       	ret

00001c1e <clust2sect>:
    1c1e:	0f 93       	push	r16
    1c20:	1f 93       	push	r17
    1c22:	e0 91 a3 06 	lds	r30, 0x06A3	; 0x8006a3 <FatFs>
    1c26:	f0 91 a4 06 	lds	r31, 0x06A4	; 0x8006a4 <FatFs+0x1>
    1c2a:	9b 01       	movw	r18, r22
    1c2c:	ac 01       	movw	r20, r24
    1c2e:	22 50       	subi	r18, 0x02	; 2
    1c30:	31 09       	sbc	r19, r1
    1c32:	41 09       	sbc	r20, r1
    1c34:	51 09       	sbc	r21, r1
    1c36:	80 85       	ldd	r24, Z+8	; 0x08
    1c38:	91 85       	ldd	r25, Z+9	; 0x09
    1c3a:	a2 85       	ldd	r26, Z+10	; 0x0a
    1c3c:	b3 85       	ldd	r27, Z+11	; 0x0b
    1c3e:	02 97       	sbiw	r24, 0x02	; 2
    1c40:	a1 09       	sbc	r26, r1
    1c42:	b1 09       	sbc	r27, r1
    1c44:	28 17       	cp	r18, r24
    1c46:	39 07       	cpc	r19, r25
    1c48:	4a 07       	cpc	r20, r26
    1c4a:	5b 07       	cpc	r21, r27
    1c4c:	68 f4       	brcc	.+26     	; 0x1c68 <clust2sect+0x4a>
    1c4e:	a1 81       	ldd	r26, Z+1	; 0x01
    1c50:	b0 e0       	ldi	r27, 0x00	; 0
    1c52:	0e 94 e0 23 	call	0x47c0	; 0x47c0 <__muluhisi3>
    1c56:	04 89       	ldd	r16, Z+20	; 0x14
    1c58:	15 89       	ldd	r17, Z+21	; 0x15
    1c5a:	26 89       	ldd	r18, Z+22	; 0x16
    1c5c:	37 89       	ldd	r19, Z+23	; 0x17
    1c5e:	60 0f       	add	r22, r16
    1c60:	71 1f       	adc	r23, r17
    1c62:	82 1f       	adc	r24, r18
    1c64:	93 1f       	adc	r25, r19
    1c66:	03 c0       	rjmp	.+6      	; 0x1c6e <clust2sect+0x50>
    1c68:	60 e0       	ldi	r22, 0x00	; 0
    1c6a:	70 e0       	ldi	r23, 0x00	; 0
    1c6c:	cb 01       	movw	r24, r22
    1c6e:	1f 91       	pop	r17
    1c70:	0f 91       	pop	r16
    1c72:	08 95       	ret

00001c74 <dir_rewind>:
    1c74:	0f 93       	push	r16
    1c76:	1f 93       	push	r17
    1c78:	cf 93       	push	r28
    1c7a:	df 93       	push	r29
    1c7c:	fc 01       	movw	r30, r24
    1c7e:	a0 91 a3 06 	lds	r26, 0x06A3	; 0x8006a3 <FatFs>
    1c82:	b0 91 a4 06 	lds	r27, 0x06A4	; 0x8006a4 <FatFs+0x1>
    1c86:	11 82       	std	Z+1, r1	; 0x01
    1c88:	10 82       	st	Z, r1
    1c8a:	64 81       	ldd	r22, Z+4	; 0x04
    1c8c:	75 81       	ldd	r23, Z+5	; 0x05
    1c8e:	86 81       	ldd	r24, Z+6	; 0x06
    1c90:	97 81       	ldd	r25, Z+7	; 0x07
    1c92:	61 30       	cpi	r22, 0x01	; 1
    1c94:	71 05       	cpc	r23, r1
    1c96:	81 05       	cpc	r24, r1
    1c98:	91 05       	cpc	r25, r1
    1c9a:	91 f1       	breq	.+100    	; 0x1d00 <dir_rewind+0x8c>
    1c9c:	18 96       	adiw	r26, 0x08	; 8
    1c9e:	0d 91       	ld	r16, X+
    1ca0:	1d 91       	ld	r17, X+
    1ca2:	2d 91       	ld	r18, X+
    1ca4:	3c 91       	ld	r19, X
    1ca6:	1b 97       	sbiw	r26, 0x0b	; 11
    1ca8:	60 17       	cp	r22, r16
    1caa:	71 07       	cpc	r23, r17
    1cac:	82 07       	cpc	r24, r18
    1cae:	93 07       	cpc	r25, r19
    1cb0:	48 f5       	brcc	.+82     	; 0x1d04 <dir_rewind+0x90>
    1cb2:	61 15       	cp	r22, r1
    1cb4:	71 05       	cpc	r23, r1
    1cb6:	81 05       	cpc	r24, r1
    1cb8:	91 05       	cpc	r25, r1
    1cba:	49 f4       	brne	.+18     	; 0x1cce <dir_rewind+0x5a>
    1cbc:	2c 91       	ld	r18, X
    1cbe:	23 30       	cpi	r18, 0x03	; 3
    1cc0:	31 f4       	brne	.+12     	; 0x1cce <dir_rewind+0x5a>
    1cc2:	50 96       	adiw	r26, 0x10	; 16
    1cc4:	6d 91       	ld	r22, X+
    1cc6:	7d 91       	ld	r23, X+
    1cc8:	8d 91       	ld	r24, X+
    1cca:	9c 91       	ld	r25, X
    1ccc:	53 97       	sbiw	r26, 0x13	; 19
    1cce:	ef 01       	movw	r28, r30
    1cd0:	60 87       	std	Z+8, r22	; 0x08
    1cd2:	71 87       	std	Z+9, r23	; 0x09
    1cd4:	82 87       	std	Z+10, r24	; 0x0a
    1cd6:	93 87       	std	Z+11, r25	; 0x0b
    1cd8:	61 15       	cp	r22, r1
    1cda:	71 05       	cpc	r23, r1
    1cdc:	81 05       	cpc	r24, r1
    1cde:	91 05       	cpc	r25, r1
    1ce0:	19 f0       	breq	.+6      	; 0x1ce8 <dir_rewind+0x74>
    1ce2:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <clust2sect>
    1ce6:	06 c0       	rjmp	.+12     	; 0x1cf4 <dir_rewind+0x80>
    1ce8:	50 96       	adiw	r26, 0x10	; 16
    1cea:	6d 91       	ld	r22, X+
    1cec:	7d 91       	ld	r23, X+
    1cee:	8d 91       	ld	r24, X+
    1cf0:	9c 91       	ld	r25, X
    1cf2:	53 97       	sbiw	r26, 0x13	; 19
    1cf4:	6c 87       	std	Y+12, r22	; 0x0c
    1cf6:	7d 87       	std	Y+13, r23	; 0x0d
    1cf8:	8e 87       	std	Y+14, r24	; 0x0e
    1cfa:	9f 87       	std	Y+15, r25	; 0x0f
    1cfc:	80 e0       	ldi	r24, 0x00	; 0
    1cfe:	03 c0       	rjmp	.+6      	; 0x1d06 <dir_rewind+0x92>
    1d00:	81 e0       	ldi	r24, 0x01	; 1
    1d02:	01 c0       	rjmp	.+2      	; 0x1d06 <dir_rewind+0x92>
    1d04:	81 e0       	ldi	r24, 0x01	; 1
    1d06:	df 91       	pop	r29
    1d08:	cf 91       	pop	r28
    1d0a:	1f 91       	pop	r17
    1d0c:	0f 91       	pop	r16
    1d0e:	08 95       	ret

00001d10 <create_name>:
    1d10:	0f 93       	push	r16
    1d12:	1f 93       	push	r17
    1d14:	cf 93       	push	r28
    1d16:	df 93       	push	r29
    1d18:	eb 01       	movw	r28, r22
    1d1a:	fc 01       	movw	r30, r24
    1d1c:	02 81       	ldd	r16, Z+2	; 0x02
    1d1e:	13 81       	ldd	r17, Z+3	; 0x03
    1d20:	4b e0       	ldi	r20, 0x0B	; 11
    1d22:	50 e0       	ldi	r21, 0x00	; 0
    1d24:	60 e2       	ldi	r22, 0x20	; 32
    1d26:	70 e0       	ldi	r23, 0x00	; 0
    1d28:	c8 01       	movw	r24, r16
    1d2a:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <mem_set>
    1d2e:	28 81       	ld	r18, Y
    1d30:	39 81       	ldd	r19, Y+1	; 0x01
    1d32:	90 e0       	ldi	r25, 0x00	; 0
    1d34:	80 e0       	ldi	r24, 0x00	; 0
    1d36:	58 e0       	ldi	r21, 0x08	; 8
    1d38:	01 c0       	rjmp	.+2      	; 0x1d3c <create_name+0x2c>
    1d3a:	84 2f       	mov	r24, r20
    1d3c:	41 e0       	ldi	r20, 0x01	; 1
    1d3e:	48 0f       	add	r20, r24
    1d40:	f9 01       	movw	r30, r18
    1d42:	e8 0f       	add	r30, r24
    1d44:	f1 1d       	adc	r31, r1
    1d46:	80 81       	ld	r24, Z
    1d48:	81 32       	cpi	r24, 0x21	; 33
    1d4a:	c0 f0       	brcs	.+48     	; 0x1d7c <create_name+0x6c>
    1d4c:	8f 32       	cpi	r24, 0x2F	; 47
    1d4e:	b1 f0       	breq	.+44     	; 0x1d7c <create_name+0x6c>
    1d50:	8e 32       	cpi	r24, 0x2E	; 46
    1d52:	11 f0       	breq	.+4      	; 0x1d58 <create_name+0x48>
    1d54:	95 17       	cp	r25, r21
    1d56:	38 f0       	brcs	.+14     	; 0x1d66 <create_name+0x56>
    1d58:	58 30       	cpi	r21, 0x08	; 8
    1d5a:	81 f4       	brne	.+32     	; 0x1d7c <create_name+0x6c>
    1d5c:	8e 32       	cpi	r24, 0x2E	; 46
    1d5e:	71 f4       	brne	.+28     	; 0x1d7c <create_name+0x6c>
    1d60:	98 e0       	ldi	r25, 0x08	; 8
    1d62:	5b e0       	ldi	r21, 0x0B	; 11
    1d64:	ea cf       	rjmp	.-44     	; 0x1d3a <create_name+0x2a>
    1d66:	6f e9       	ldi	r22, 0x9F	; 159
    1d68:	68 0f       	add	r22, r24
    1d6a:	6a 31       	cpi	r22, 0x1A	; 26
    1d6c:	08 f4       	brcc	.+2      	; 0x1d70 <create_name+0x60>
    1d6e:	80 52       	subi	r24, 0x20	; 32
    1d70:	f8 01       	movw	r30, r16
    1d72:	e9 0f       	add	r30, r25
    1d74:	f1 1d       	adc	r31, r1
    1d76:	80 83       	st	Z, r24
    1d78:	9f 5f       	subi	r25, 0xFF	; 255
    1d7a:	df cf       	rjmp	.-66     	; 0x1d3a <create_name+0x2a>
    1d7c:	24 0f       	add	r18, r20
    1d7e:	31 1d       	adc	r19, r1
    1d80:	39 83       	std	Y+1, r19	; 0x01
    1d82:	28 83       	st	Y, r18
    1d84:	91 e0       	ldi	r25, 0x01	; 1
    1d86:	81 32       	cpi	r24, 0x21	; 33
    1d88:	08 f0       	brcs	.+2      	; 0x1d8c <create_name+0x7c>
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	f8 01       	movw	r30, r16
    1d8e:	93 87       	std	Z+11, r25	; 0x0b
    1d90:	80 e0       	ldi	r24, 0x00	; 0
    1d92:	df 91       	pop	r29
    1d94:	cf 91       	pop	r28
    1d96:	1f 91       	pop	r17
    1d98:	0f 91       	pop	r16
    1d9a:	08 95       	ret

00001d9c <check_fs>:
    1d9c:	cf 92       	push	r12
    1d9e:	df 92       	push	r13
    1da0:	ef 92       	push	r14
    1da2:	ff 92       	push	r15
    1da4:	0f 93       	push	r16
    1da6:	1f 93       	push	r17
    1da8:	cf 93       	push	r28
    1daa:	df 93       	push	r29
    1dac:	ec 01       	movw	r28, r24
    1dae:	6a 01       	movw	r12, r20
    1db0:	7b 01       	movw	r14, r22
    1db2:	02 e0       	ldi	r16, 0x02	; 2
    1db4:	10 e0       	ldi	r17, 0x00	; 0
    1db6:	2e ef       	ldi	r18, 0xFE	; 254
    1db8:	31 e0       	ldi	r19, 0x01	; 1
    1dba:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1dbe:	81 11       	cpse	r24, r1
    1dc0:	25 c0       	rjmp	.+74     	; 0x1e0c <check_fs+0x70>
    1dc2:	88 81       	ld	r24, Y
    1dc4:	99 81       	ldd	r25, Y+1	; 0x01
    1dc6:	85 35       	cpi	r24, 0x55	; 85
    1dc8:	9a 4a       	sbci	r25, 0xAA	; 170
    1dca:	11 f5       	brne	.+68     	; 0x1e10 <check_fs+0x74>
    1dcc:	26 e3       	ldi	r18, 0x36	; 54
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	b7 01       	movw	r22, r14
    1dd2:	a6 01       	movw	r20, r12
    1dd4:	ce 01       	movw	r24, r28
    1dd6:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1dda:	81 11       	cpse	r24, r1
    1ddc:	05 c0       	rjmp	.+10     	; 0x1de8 <check_fs+0x4c>
    1dde:	88 81       	ld	r24, Y
    1de0:	99 81       	ldd	r25, Y+1	; 0x01
    1de2:	86 34       	cpi	r24, 0x46	; 70
    1de4:	91 44       	sbci	r25, 0x41	; 65
    1de6:	b1 f0       	breq	.+44     	; 0x1e14 <check_fs+0x78>
    1de8:	02 e0       	ldi	r16, 0x02	; 2
    1dea:	10 e0       	ldi	r17, 0x00	; 0
    1dec:	22 e5       	ldi	r18, 0x52	; 82
    1dee:	30 e0       	ldi	r19, 0x00	; 0
    1df0:	b7 01       	movw	r22, r14
    1df2:	a6 01       	movw	r20, r12
    1df4:	ce 01       	movw	r24, r28
    1df6:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1dfa:	81 11       	cpse	r24, r1
    1dfc:	0d c0       	rjmp	.+26     	; 0x1e18 <check_fs+0x7c>
    1dfe:	88 81       	ld	r24, Y
    1e00:	99 81       	ldd	r25, Y+1	; 0x01
    1e02:	86 34       	cpi	r24, 0x46	; 70
    1e04:	91 44       	sbci	r25, 0x41	; 65
    1e06:	51 f0       	breq	.+20     	; 0x1e1c <check_fs+0x80>
    1e08:	81 e0       	ldi	r24, 0x01	; 1
    1e0a:	09 c0       	rjmp	.+18     	; 0x1e1e <check_fs+0x82>
    1e0c:	83 e0       	ldi	r24, 0x03	; 3
    1e0e:	07 c0       	rjmp	.+14     	; 0x1e1e <check_fs+0x82>
    1e10:	82 e0       	ldi	r24, 0x02	; 2
    1e12:	05 c0       	rjmp	.+10     	; 0x1e1e <check_fs+0x82>
    1e14:	80 e0       	ldi	r24, 0x00	; 0
    1e16:	03 c0       	rjmp	.+6      	; 0x1e1e <check_fs+0x82>
    1e18:	81 e0       	ldi	r24, 0x01	; 1
    1e1a:	01 c0       	rjmp	.+2      	; 0x1e1e <check_fs+0x82>
    1e1c:	80 e0       	ldi	r24, 0x00	; 0
    1e1e:	df 91       	pop	r29
    1e20:	cf 91       	pop	r28
    1e22:	1f 91       	pop	r17
    1e24:	0f 91       	pop	r16
    1e26:	ff 90       	pop	r15
    1e28:	ef 90       	pop	r14
    1e2a:	df 90       	pop	r13
    1e2c:	cf 90       	pop	r12
    1e2e:	08 95       	ret

00001e30 <get_fat>:
    1e30:	4f 92       	push	r4
    1e32:	5f 92       	push	r5
    1e34:	6f 92       	push	r6
    1e36:	7f 92       	push	r7
    1e38:	8f 92       	push	r8
    1e3a:	9f 92       	push	r9
    1e3c:	af 92       	push	r10
    1e3e:	bf 92       	push	r11
    1e40:	cf 92       	push	r12
    1e42:	df 92       	push	r13
    1e44:	ef 92       	push	r14
    1e46:	ff 92       	push	r15
    1e48:	0f 93       	push	r16
    1e4a:	1f 93       	push	r17
    1e4c:	cf 93       	push	r28
    1e4e:	df 93       	push	r29
    1e50:	00 d0       	rcall	.+0      	; 0x1e52 <get_fat+0x22>
    1e52:	00 d0       	rcall	.+0      	; 0x1e54 <get_fat+0x24>
    1e54:	cd b7       	in	r28, 0x3d	; 61
    1e56:	de b7       	in	r29, 0x3e	; 62
    1e58:	e0 90 a3 06 	lds	r14, 0x06A3	; 0x8006a3 <FatFs>
    1e5c:	f0 90 a4 06 	lds	r15, 0x06A4	; 0x8006a4 <FatFs+0x1>
    1e60:	62 30       	cpi	r22, 0x02	; 2
    1e62:	71 05       	cpc	r23, r1
    1e64:	81 05       	cpc	r24, r1
    1e66:	91 05       	cpc	r25, r1
    1e68:	08 f4       	brcc	.+2      	; 0x1e6c <get_fat+0x3c>
    1e6a:	bf c0       	rjmp	.+382    	; 0x1fea <get_fat+0x1ba>
    1e6c:	f7 01       	movw	r30, r14
    1e6e:	80 84       	ldd	r8, Z+8	; 0x08
    1e70:	91 84       	ldd	r9, Z+9	; 0x09
    1e72:	a2 84       	ldd	r10, Z+10	; 0x0a
    1e74:	b3 84       	ldd	r11, Z+11	; 0x0b
    1e76:	68 15       	cp	r22, r8
    1e78:	79 05       	cpc	r23, r9
    1e7a:	8a 05       	cpc	r24, r10
    1e7c:	9b 05       	cpc	r25, r11
    1e7e:	08 f0       	brcs	.+2      	; 0x1e82 <get_fat+0x52>
    1e80:	b9 c0       	rjmp	.+370    	; 0x1ff4 <get_fat+0x1c4>
    1e82:	4b 01       	movw	r8, r22
    1e84:	5c 01       	movw	r10, r24
    1e86:	80 81       	ld	r24, Z
    1e88:	82 30       	cpi	r24, 0x02	; 2
    1e8a:	09 f4       	brne	.+2      	; 0x1e8e <get_fat+0x5e>
    1e8c:	62 c0       	rjmp	.+196    	; 0x1f52 <get_fat+0x122>
    1e8e:	83 30       	cpi	r24, 0x03	; 3
    1e90:	09 f4       	brne	.+2      	; 0x1e94 <get_fat+0x64>
    1e92:	7f c0       	rjmp	.+254    	; 0x1f92 <get_fat+0x162>
    1e94:	81 30       	cpi	r24, 0x01	; 1
    1e96:	09 f0       	breq	.+2      	; 0x1e9a <get_fat+0x6a>
    1e98:	b2 c0       	rjmp	.+356    	; 0x1ffe <get_fat+0x1ce>
    1e9a:	c4 01       	movw	r24, r8
    1e9c:	96 95       	lsr	r25
    1e9e:	87 95       	ror	r24
    1ea0:	88 0d       	add	r24, r8
    1ea2:	99 1d       	adc	r25, r9
    1ea4:	9c 01       	movw	r18, r24
    1ea6:	31 70       	andi	r19, 0x01	; 1
    1ea8:	89 2f       	mov	r24, r25
    1eaa:	99 27       	eor	r25, r25
    1eac:	86 95       	lsr	r24
    1eae:	2f 3f       	cpi	r18, 0xFF	; 255
    1eb0:	f1 e0       	ldi	r31, 0x01	; 1
    1eb2:	3f 07       	cpc	r19, r31
    1eb4:	91 f0       	breq	.+36     	; 0x1eda <get_fat+0xaa>
    1eb6:	f7 01       	movw	r30, r14
    1eb8:	44 85       	ldd	r20, Z+12	; 0x0c
    1eba:	55 85       	ldd	r21, Z+13	; 0x0d
    1ebc:	66 85       	ldd	r22, Z+14	; 0x0e
    1ebe:	77 85       	ldd	r23, Z+15	; 0x0f
    1ec0:	48 0f       	add	r20, r24
    1ec2:	59 1f       	adc	r21, r25
    1ec4:	61 1d       	adc	r22, r1
    1ec6:	71 1d       	adc	r23, r1
    1ec8:	02 e0       	ldi	r16, 0x02	; 2
    1eca:	10 e0       	ldi	r17, 0x00	; 0
    1ecc:	ce 01       	movw	r24, r28
    1ece:	01 96       	adiw	r24, 0x01	; 1
    1ed0:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1ed4:	88 23       	and	r24, r24
    1ed6:	61 f1       	breq	.+88     	; 0x1f30 <get_fat+0x100>
    1ed8:	97 c0       	rjmp	.+302    	; 0x2008 <get_fat+0x1d8>
    1eda:	f7 01       	movw	r30, r14
    1edc:	44 85       	ldd	r20, Z+12	; 0x0c
    1ede:	55 85       	ldd	r21, Z+13	; 0x0d
    1ee0:	66 85       	ldd	r22, Z+14	; 0x0e
    1ee2:	77 85       	ldd	r23, Z+15	; 0x0f
    1ee4:	2c 01       	movw	r4, r24
    1ee6:	61 2c       	mov	r6, r1
    1ee8:	71 2c       	mov	r7, r1
    1eea:	44 0d       	add	r20, r4
    1eec:	55 1d       	adc	r21, r5
    1eee:	66 1d       	adc	r22, r6
    1ef0:	77 1d       	adc	r23, r7
    1ef2:	01 e0       	ldi	r16, 0x01	; 1
    1ef4:	10 e0       	ldi	r17, 0x00	; 0
    1ef6:	2f ef       	ldi	r18, 0xFF	; 255
    1ef8:	31 e0       	ldi	r19, 0x01	; 1
    1efa:	ce 01       	movw	r24, r28
    1efc:	01 96       	adiw	r24, 0x01	; 1
    1efe:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1f02:	81 11       	cpse	r24, r1
    1f04:	86 c0       	rjmp	.+268    	; 0x2012 <get_fat+0x1e2>
    1f06:	f7 01       	movw	r30, r14
    1f08:	44 85       	ldd	r20, Z+12	; 0x0c
    1f0a:	55 85       	ldd	r21, Z+13	; 0x0d
    1f0c:	66 85       	ldd	r22, Z+14	; 0x0e
    1f0e:	77 85       	ldd	r23, Z+15	; 0x0f
    1f10:	44 0d       	add	r20, r4
    1f12:	55 1d       	adc	r21, r5
    1f14:	66 1d       	adc	r22, r6
    1f16:	77 1d       	adc	r23, r7
    1f18:	4f 5f       	subi	r20, 0xFF	; 255
    1f1a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f1c:	6f 4f       	sbci	r22, 0xFF	; 255
    1f1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f20:	20 e0       	ldi	r18, 0x00	; 0
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	ce 01       	movw	r24, r28
    1f26:	02 96       	adiw	r24, 0x02	; 2
    1f28:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1f2c:	81 11       	cpse	r24, r1
    1f2e:	76 c0       	rjmp	.+236    	; 0x201c <get_fat+0x1ec>
    1f30:	69 81       	ldd	r22, Y+1	; 0x01
    1f32:	7a 81       	ldd	r23, Y+2	; 0x02
    1f34:	80 fe       	sbrs	r8, 0
    1f36:	09 c0       	rjmp	.+18     	; 0x1f4a <get_fat+0x11a>
    1f38:	72 95       	swap	r23
    1f3a:	62 95       	swap	r22
    1f3c:	6f 70       	andi	r22, 0x0F	; 15
    1f3e:	67 27       	eor	r22, r23
    1f40:	7f 70       	andi	r23, 0x0F	; 15
    1f42:	67 27       	eor	r22, r23
    1f44:	80 e0       	ldi	r24, 0x00	; 0
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	77 c0       	rjmp	.+238    	; 0x2038 <get_fat+0x208>
    1f4a:	7f 70       	andi	r23, 0x0F	; 15
    1f4c:	80 e0       	ldi	r24, 0x00	; 0
    1f4e:	90 e0       	ldi	r25, 0x00	; 0
    1f50:	73 c0       	rjmp	.+230    	; 0x2038 <get_fat+0x208>
    1f52:	94 01       	movw	r18, r8
    1f54:	33 27       	eor	r19, r19
    1f56:	22 0f       	add	r18, r18
    1f58:	33 1f       	adc	r19, r19
    1f5a:	f7 01       	movw	r30, r14
    1f5c:	c4 84       	ldd	r12, Z+12	; 0x0c
    1f5e:	d5 84       	ldd	r13, Z+13	; 0x0d
    1f60:	e6 84       	ldd	r14, Z+14	; 0x0e
    1f62:	f7 84       	ldd	r15, Z+15	; 0x0f
    1f64:	bb 27       	eor	r27, r27
    1f66:	ab 2d       	mov	r26, r11
    1f68:	9a 2d       	mov	r25, r10
    1f6a:	89 2d       	mov	r24, r9
    1f6c:	b7 01       	movw	r22, r14
    1f6e:	a6 01       	movw	r20, r12
    1f70:	48 0f       	add	r20, r24
    1f72:	59 1f       	adc	r21, r25
    1f74:	6a 1f       	adc	r22, r26
    1f76:	7b 1f       	adc	r23, r27
    1f78:	02 e0       	ldi	r16, 0x02	; 2
    1f7a:	10 e0       	ldi	r17, 0x00	; 0
    1f7c:	ce 01       	movw	r24, r28
    1f7e:	01 96       	adiw	r24, 0x01	; 1
    1f80:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1f84:	81 11       	cpse	r24, r1
    1f86:	4f c0       	rjmp	.+158    	; 0x2026 <get_fat+0x1f6>
    1f88:	69 81       	ldd	r22, Y+1	; 0x01
    1f8a:	7a 81       	ldd	r23, Y+2	; 0x02
    1f8c:	80 e0       	ldi	r24, 0x00	; 0
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	53 c0       	rjmp	.+166    	; 0x2038 <get_fat+0x208>
    1f92:	94 01       	movw	r18, r8
    1f94:	2f 77       	andi	r18, 0x7F	; 127
    1f96:	33 27       	eor	r19, r19
    1f98:	22 0f       	add	r18, r18
    1f9a:	33 1f       	adc	r19, r19
    1f9c:	22 0f       	add	r18, r18
    1f9e:	33 1f       	adc	r19, r19
    1fa0:	f7 01       	movw	r30, r14
    1fa2:	c4 84       	ldd	r12, Z+12	; 0x0c
    1fa4:	d5 84       	ldd	r13, Z+13	; 0x0d
    1fa6:	e6 84       	ldd	r14, Z+14	; 0x0e
    1fa8:	f7 84       	ldd	r15, Z+15	; 0x0f
    1faa:	d5 01       	movw	r26, r10
    1fac:	c4 01       	movw	r24, r8
    1fae:	68 94       	set
    1fb0:	16 f8       	bld	r1, 6
    1fb2:	b6 95       	lsr	r27
    1fb4:	a7 95       	ror	r26
    1fb6:	97 95       	ror	r25
    1fb8:	87 95       	ror	r24
    1fba:	16 94       	lsr	r1
    1fbc:	d1 f7       	brne	.-12     	; 0x1fb2 <get_fat+0x182>
    1fbe:	b7 01       	movw	r22, r14
    1fc0:	a6 01       	movw	r20, r12
    1fc2:	48 0f       	add	r20, r24
    1fc4:	59 1f       	adc	r21, r25
    1fc6:	6a 1f       	adc	r22, r26
    1fc8:	7b 1f       	adc	r23, r27
    1fca:	04 e0       	ldi	r16, 0x04	; 4
    1fcc:	10 e0       	ldi	r17, 0x00	; 0
    1fce:	ce 01       	movw	r24, r28
    1fd0:	01 96       	adiw	r24, 0x01	; 1
    1fd2:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    1fd6:	81 11       	cpse	r24, r1
    1fd8:	2b c0       	rjmp	.+86     	; 0x2030 <get_fat+0x200>
    1fda:	89 81       	ldd	r24, Y+1	; 0x01
    1fdc:	9a 81       	ldd	r25, Y+2	; 0x02
    1fde:	ab 81       	ldd	r26, Y+3	; 0x03
    1fe0:	bc 81       	ldd	r27, Y+4	; 0x04
    1fe2:	bc 01       	movw	r22, r24
    1fe4:	cd 01       	movw	r24, r26
    1fe6:	9f 70       	andi	r25, 0x0F	; 15
    1fe8:	27 c0       	rjmp	.+78     	; 0x2038 <get_fat+0x208>
    1fea:	61 e0       	ldi	r22, 0x01	; 1
    1fec:	70 e0       	ldi	r23, 0x00	; 0
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	22 c0       	rjmp	.+68     	; 0x2038 <get_fat+0x208>
    1ff4:	61 e0       	ldi	r22, 0x01	; 1
    1ff6:	70 e0       	ldi	r23, 0x00	; 0
    1ff8:	80 e0       	ldi	r24, 0x00	; 0
    1ffa:	90 e0       	ldi	r25, 0x00	; 0
    1ffc:	1d c0       	rjmp	.+58     	; 0x2038 <get_fat+0x208>
    1ffe:	61 e0       	ldi	r22, 0x01	; 1
    2000:	70 e0       	ldi	r23, 0x00	; 0
    2002:	80 e0       	ldi	r24, 0x00	; 0
    2004:	90 e0       	ldi	r25, 0x00	; 0
    2006:	18 c0       	rjmp	.+48     	; 0x2038 <get_fat+0x208>
    2008:	61 e0       	ldi	r22, 0x01	; 1
    200a:	70 e0       	ldi	r23, 0x00	; 0
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	90 e0       	ldi	r25, 0x00	; 0
    2010:	13 c0       	rjmp	.+38     	; 0x2038 <get_fat+0x208>
    2012:	61 e0       	ldi	r22, 0x01	; 1
    2014:	70 e0       	ldi	r23, 0x00	; 0
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	0e c0       	rjmp	.+28     	; 0x2038 <get_fat+0x208>
    201c:	61 e0       	ldi	r22, 0x01	; 1
    201e:	70 e0       	ldi	r23, 0x00	; 0
    2020:	80 e0       	ldi	r24, 0x00	; 0
    2022:	90 e0       	ldi	r25, 0x00	; 0
    2024:	09 c0       	rjmp	.+18     	; 0x2038 <get_fat+0x208>
    2026:	61 e0       	ldi	r22, 0x01	; 1
    2028:	70 e0       	ldi	r23, 0x00	; 0
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	04 c0       	rjmp	.+8      	; 0x2038 <get_fat+0x208>
    2030:	61 e0       	ldi	r22, 0x01	; 1
    2032:	70 e0       	ldi	r23, 0x00	; 0
    2034:	80 e0       	ldi	r24, 0x00	; 0
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	0f 90       	pop	r0
    203a:	0f 90       	pop	r0
    203c:	0f 90       	pop	r0
    203e:	0f 90       	pop	r0
    2040:	df 91       	pop	r29
    2042:	cf 91       	pop	r28
    2044:	1f 91       	pop	r17
    2046:	0f 91       	pop	r16
    2048:	ff 90       	pop	r15
    204a:	ef 90       	pop	r14
    204c:	df 90       	pop	r13
    204e:	cf 90       	pop	r12
    2050:	bf 90       	pop	r11
    2052:	af 90       	pop	r10
    2054:	9f 90       	pop	r9
    2056:	8f 90       	pop	r8
    2058:	7f 90       	pop	r7
    205a:	6f 90       	pop	r6
    205c:	5f 90       	pop	r5
    205e:	4f 90       	pop	r4
    2060:	08 95       	ret

00002062 <dir_next>:
    2062:	cf 92       	push	r12
    2064:	df 92       	push	r13
    2066:	ef 92       	push	r14
    2068:	ff 92       	push	r15
    206a:	0f 93       	push	r16
    206c:	1f 93       	push	r17
    206e:	cf 93       	push	r28
    2070:	df 93       	push	r29
    2072:	e0 90 a3 06 	lds	r14, 0x06A3	; 0x8006a3 <FatFs>
    2076:	f0 90 a4 06 	lds	r15, 0x06A4	; 0x8006a4 <FatFs+0x1>
    207a:	fc 01       	movw	r30, r24
    207c:	c0 81       	ld	r28, Z
    207e:	d1 81       	ldd	r29, Z+1	; 0x01
    2080:	21 96       	adiw	r28, 0x01	; 1
    2082:	09 f4       	brne	.+2      	; 0x2086 <dir_next+0x24>
    2084:	5c c0       	rjmp	.+184    	; 0x213e <dir_next+0xdc>
    2086:	44 85       	ldd	r20, Z+12	; 0x0c
    2088:	55 85       	ldd	r21, Z+13	; 0x0d
    208a:	66 85       	ldd	r22, Z+14	; 0x0e
    208c:	77 85       	ldd	r23, Z+15	; 0x0f
    208e:	41 15       	cp	r20, r1
    2090:	51 05       	cpc	r21, r1
    2092:	61 05       	cpc	r22, r1
    2094:	71 05       	cpc	r23, r1
    2096:	09 f4       	brne	.+2      	; 0x209a <dir_next+0x38>
    2098:	54 c0       	rjmp	.+168    	; 0x2142 <dir_next+0xe0>
    209a:	8c 01       	movw	r16, r24
    209c:	ce 01       	movw	r24, r28
    209e:	8f 70       	andi	r24, 0x0F	; 15
    20a0:	99 27       	eor	r25, r25
    20a2:	89 2b       	or	r24, r25
    20a4:	09 f0       	breq	.+2      	; 0x20a8 <dir_next+0x46>
    20a6:	46 c0       	rjmp	.+140    	; 0x2134 <dir_next+0xd2>
    20a8:	4f 5f       	subi	r20, 0xFF	; 255
    20aa:	5f 4f       	sbci	r21, 0xFF	; 255
    20ac:	6f 4f       	sbci	r22, 0xFF	; 255
    20ae:	7f 4f       	sbci	r23, 0xFF	; 255
    20b0:	44 87       	std	Z+12, r20	; 0x0c
    20b2:	55 87       	std	Z+13, r21	; 0x0d
    20b4:	66 87       	std	Z+14, r22	; 0x0e
    20b6:	77 87       	std	Z+15, r23	; 0x0f
    20b8:	40 85       	ldd	r20, Z+8	; 0x08
    20ba:	51 85       	ldd	r21, Z+9	; 0x09
    20bc:	62 85       	ldd	r22, Z+10	; 0x0a
    20be:	73 85       	ldd	r23, Z+11	; 0x0b
    20c0:	41 15       	cp	r20, r1
    20c2:	51 05       	cpc	r21, r1
    20c4:	61 05       	cpc	r22, r1
    20c6:	71 05       	cpc	r23, r1
    20c8:	39 f4       	brne	.+14     	; 0x20d8 <dir_next+0x76>
    20ca:	f7 01       	movw	r30, r14
    20cc:	84 81       	ldd	r24, Z+4	; 0x04
    20ce:	95 81       	ldd	r25, Z+5	; 0x05
    20d0:	c8 17       	cp	r28, r24
    20d2:	d9 07       	cpc	r29, r25
    20d4:	c0 f5       	brcc	.+112    	; 0x2146 <dir_next+0xe4>
    20d6:	2e c0       	rjmp	.+92     	; 0x2134 <dir_next+0xd2>
    20d8:	f7 01       	movw	r30, r14
    20da:	81 81       	ldd	r24, Z+1	; 0x01
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	01 97       	sbiw	r24, 0x01	; 1
    20e0:	9e 01       	movw	r18, r28
    20e2:	32 95       	swap	r19
    20e4:	22 95       	swap	r18
    20e6:	2f 70       	andi	r18, 0x0F	; 15
    20e8:	23 27       	eor	r18, r19
    20ea:	3f 70       	andi	r19, 0x0F	; 15
    20ec:	23 27       	eor	r18, r19
    20ee:	82 23       	and	r24, r18
    20f0:	93 23       	and	r25, r19
    20f2:	89 2b       	or	r24, r25
    20f4:	f9 f4       	brne	.+62     	; 0x2134 <dir_next+0xd2>
    20f6:	cb 01       	movw	r24, r22
    20f8:	ba 01       	movw	r22, r20
    20fa:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <get_fat>
    20fe:	62 30       	cpi	r22, 0x02	; 2
    2100:	71 05       	cpc	r23, r1
    2102:	81 05       	cpc	r24, r1
    2104:	91 05       	cpc	r25, r1
    2106:	08 f1       	brcs	.+66     	; 0x214a <dir_next+0xe8>
    2108:	f7 01       	movw	r30, r14
    210a:	c0 84       	ldd	r12, Z+8	; 0x08
    210c:	d1 84       	ldd	r13, Z+9	; 0x09
    210e:	e2 84       	ldd	r14, Z+10	; 0x0a
    2110:	f3 84       	ldd	r15, Z+11	; 0x0b
    2112:	6c 15       	cp	r22, r12
    2114:	7d 05       	cpc	r23, r13
    2116:	8e 05       	cpc	r24, r14
    2118:	9f 05       	cpc	r25, r15
    211a:	c8 f4       	brcc	.+50     	; 0x214e <dir_next+0xec>
    211c:	f8 01       	movw	r30, r16
    211e:	60 87       	std	Z+8, r22	; 0x08
    2120:	71 87       	std	Z+9, r23	; 0x09
    2122:	82 87       	std	Z+10, r24	; 0x0a
    2124:	93 87       	std	Z+11, r25	; 0x0b
    2126:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <clust2sect>
    212a:	f8 01       	movw	r30, r16
    212c:	64 87       	std	Z+12, r22	; 0x0c
    212e:	75 87       	std	Z+13, r23	; 0x0d
    2130:	86 87       	std	Z+14, r24	; 0x0e
    2132:	97 87       	std	Z+15, r25	; 0x0f
    2134:	f8 01       	movw	r30, r16
    2136:	d1 83       	std	Z+1, r29	; 0x01
    2138:	c0 83       	st	Z, r28
    213a:	80 e0       	ldi	r24, 0x00	; 0
    213c:	09 c0       	rjmp	.+18     	; 0x2150 <dir_next+0xee>
    213e:	83 e0       	ldi	r24, 0x03	; 3
    2140:	07 c0       	rjmp	.+14     	; 0x2150 <dir_next+0xee>
    2142:	83 e0       	ldi	r24, 0x03	; 3
    2144:	05 c0       	rjmp	.+10     	; 0x2150 <dir_next+0xee>
    2146:	83 e0       	ldi	r24, 0x03	; 3
    2148:	03 c0       	rjmp	.+6      	; 0x2150 <dir_next+0xee>
    214a:	81 e0       	ldi	r24, 0x01	; 1
    214c:	01 c0       	rjmp	.+2      	; 0x2150 <dir_next+0xee>
    214e:	83 e0       	ldi	r24, 0x03	; 3
    2150:	df 91       	pop	r29
    2152:	cf 91       	pop	r28
    2154:	1f 91       	pop	r17
    2156:	0f 91       	pop	r16
    2158:	ff 90       	pop	r15
    215a:	ef 90       	pop	r14
    215c:	df 90       	pop	r13
    215e:	cf 90       	pop	r12
    2160:	08 95       	ret

00002162 <dir_find>:
    2162:	df 92       	push	r13
    2164:	ef 92       	push	r14
    2166:	ff 92       	push	r15
    2168:	0f 93       	push	r16
    216a:	1f 93       	push	r17
    216c:	cf 93       	push	r28
    216e:	df 93       	push	r29
    2170:	7c 01       	movw	r14, r24
    2172:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <dir_rewind>
    2176:	81 11       	cpse	r24, r1
    2178:	3e c0       	rjmp	.+124    	; 0x21f6 <dir_find+0x94>
    217a:	e0 91 a3 06 	lds	r30, 0x06A3	; 0x8006a3 <FatFs>
    217e:	f0 91 a4 06 	lds	r31, 0x06A4	; 0x8006a4 <FatFs+0x1>
    2182:	c6 81       	ldd	r28, Z+6	; 0x06
    2184:	d7 81       	ldd	r29, Z+7	; 0x07
    2186:	f7 01       	movw	r30, r14
    2188:	20 81       	ld	r18, Z
    218a:	31 81       	ldd	r19, Z+1	; 0x01
    218c:	2f 70       	andi	r18, 0x0F	; 15
    218e:	33 27       	eor	r19, r19
    2190:	22 0f       	add	r18, r18
    2192:	33 1f       	adc	r19, r19
    2194:	22 95       	swap	r18
    2196:	32 95       	swap	r19
    2198:	30 7f       	andi	r19, 0xF0	; 240
    219a:	32 27       	eor	r19, r18
    219c:	20 7f       	andi	r18, 0xF0	; 240
    219e:	32 27       	eor	r19, r18
    21a0:	44 85       	ldd	r20, Z+12	; 0x0c
    21a2:	55 85       	ldd	r21, Z+13	; 0x0d
    21a4:	66 85       	ldd	r22, Z+14	; 0x0e
    21a6:	77 85       	ldd	r23, Z+15	; 0x0f
    21a8:	00 e2       	ldi	r16, 0x20	; 32
    21aa:	10 e0       	ldi	r17, 0x00	; 0
    21ac:	ce 01       	movw	r24, r28
    21ae:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    21b2:	91 e0       	ldi	r25, 0x01	; 1
    21b4:	81 11       	cpse	r24, r1
    21b6:	01 c0       	rjmp	.+2      	; 0x21ba <dir_find+0x58>
    21b8:	90 e0       	ldi	r25, 0x00	; 0
    21ba:	d9 2e       	mov	r13, r25
    21bc:	91 11       	cpse	r25, r1
    21be:	16 c0       	rjmp	.+44     	; 0x21ec <dir_find+0x8a>
    21c0:	88 81       	ld	r24, Y
    21c2:	88 23       	and	r24, r24
    21c4:	a9 f0       	breq	.+42     	; 0x21f0 <dir_find+0x8e>
    21c6:	8b 85       	ldd	r24, Y+11	; 0x0b
    21c8:	83 fd       	sbrc	r24, 3
    21ca:	0a c0       	rjmp	.+20     	; 0x21e0 <dir_find+0x7e>
    21cc:	f7 01       	movw	r30, r14
    21ce:	62 81       	ldd	r22, Z+2	; 0x02
    21d0:	73 81       	ldd	r23, Z+3	; 0x03
    21d2:	4b e0       	ldi	r20, 0x0B	; 11
    21d4:	50 e0       	ldi	r21, 0x00	; 0
    21d6:	ce 01       	movw	r24, r28
    21d8:	0e 94 f2 0d 	call	0x1be4	; 0x1be4 <mem_cmp>
    21dc:	89 2b       	or	r24, r25
    21de:	51 f0       	breq	.+20     	; 0x21f4 <dir_find+0x92>
    21e0:	c7 01       	movw	r24, r14
    21e2:	0e 94 31 10 	call	0x2062	; 0x2062 <dir_next>
    21e6:	88 23       	and	r24, r24
    21e8:	71 f2       	breq	.-100    	; 0x2186 <dir_find+0x24>
    21ea:	05 c0       	rjmp	.+10     	; 0x21f6 <dir_find+0x94>
    21ec:	89 2f       	mov	r24, r25
    21ee:	03 c0       	rjmp	.+6      	; 0x21f6 <dir_find+0x94>
    21f0:	83 e0       	ldi	r24, 0x03	; 3
    21f2:	01 c0       	rjmp	.+2      	; 0x21f6 <dir_find+0x94>
    21f4:	8d 2d       	mov	r24, r13
    21f6:	df 91       	pop	r29
    21f8:	cf 91       	pop	r28
    21fa:	1f 91       	pop	r17
    21fc:	0f 91       	pop	r16
    21fe:	ff 90       	pop	r15
    2200:	ef 90       	pop	r14
    2202:	df 90       	pop	r13
    2204:	08 95       	ret

00002206 <follow_path>:
    2206:	0f 93       	push	r16
    2208:	1f 93       	push	r17
    220a:	cf 93       	push	r28
    220c:	df 93       	push	r29
    220e:	00 d0       	rcall	.+0      	; 0x2210 <follow_path+0xa>
    2210:	cd b7       	in	r28, 0x3d	; 61
    2212:	de b7       	in	r29, 0x3e	; 62
    2214:	8c 01       	movw	r16, r24
    2216:	7a 83       	std	Y+2, r23	; 0x02
    2218:	69 83       	std	Y+1, r22	; 0x01
    221a:	03 c0       	rjmp	.+6      	; 0x2222 <follow_path+0x1c>
    221c:	31 96       	adiw	r30, 0x01	; 1
    221e:	fa 83       	std	Y+2, r31	; 0x02
    2220:	e9 83       	std	Y+1, r30	; 0x01
    2222:	e9 81       	ldd	r30, Y+1	; 0x01
    2224:	fa 81       	ldd	r31, Y+2	; 0x02
    2226:	80 81       	ld	r24, Z
    2228:	80 32       	cpi	r24, 0x20	; 32
    222a:	c1 f3       	breq	.-16     	; 0x221c <follow_path+0x16>
    222c:	8f 32       	cpi	r24, 0x2F	; 47
    222e:	19 f4       	brne	.+6      	; 0x2236 <follow_path+0x30>
    2230:	31 96       	adiw	r30, 0x01	; 1
    2232:	fa 83       	std	Y+2, r31	; 0x02
    2234:	e9 83       	std	Y+1, r30	; 0x01
    2236:	d8 01       	movw	r26, r16
    2238:	14 96       	adiw	r26, 0x04	; 4
    223a:	1d 92       	st	X+, r1
    223c:	1d 92       	st	X+, r1
    223e:	1d 92       	st	X+, r1
    2240:	1c 92       	st	X, r1
    2242:	17 97       	sbiw	r26, 0x07	; 7
    2244:	e9 81       	ldd	r30, Y+1	; 0x01
    2246:	fa 81       	ldd	r31, Y+2	; 0x02
    2248:	80 81       	ld	r24, Z
    224a:	81 32       	cpi	r24, 0x21	; 33
    224c:	60 f4       	brcc	.+24     	; 0x2266 <follow_path+0x60>
    224e:	c8 01       	movw	r24, r16
    2250:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <dir_rewind>
    2254:	e0 91 a3 06 	lds	r30, 0x06A3	; 0x8006a3 <FatFs>
    2258:	f0 91 a4 06 	lds	r31, 0x06A4	; 0x8006a4 <FatFs+0x1>
    225c:	06 80       	ldd	r0, Z+6	; 0x06
    225e:	f7 81       	ldd	r31, Z+7	; 0x07
    2260:	e0 2d       	mov	r30, r0
    2262:	10 82       	st	Z, r1
    2264:	42 c0       	rjmp	.+132    	; 0x22ea <follow_path+0xe4>
    2266:	be 01       	movw	r22, r28
    2268:	6f 5f       	subi	r22, 0xFF	; 255
    226a:	7f 4f       	sbci	r23, 0xFF	; 255
    226c:	c8 01       	movw	r24, r16
    226e:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <create_name>
    2272:	81 11       	cpse	r24, r1
    2274:	3a c0       	rjmp	.+116    	; 0x22ea <follow_path+0xe4>
    2276:	c8 01       	movw	r24, r16
    2278:	0e 94 b1 10 	call	0x2162	; 0x2162 <dir_find>
    227c:	88 23       	and	r24, r24
    227e:	59 f0       	breq	.+22     	; 0x2296 <follow_path+0x90>
    2280:	83 30       	cpi	r24, 0x03	; 3
    2282:	99 f5       	brne	.+102    	; 0x22ea <follow_path+0xe4>
    2284:	d8 01       	movw	r26, r16
    2286:	12 96       	adiw	r26, 0x02	; 2
    2288:	ed 91       	ld	r30, X+
    228a:	fc 91       	ld	r31, X
    228c:	13 97       	sbiw	r26, 0x03	; 3
    228e:	93 85       	ldd	r25, Z+11	; 0x0b
    2290:	99 23       	and	r25, r25
    2292:	41 f1       	breq	.+80     	; 0x22e4 <follow_path+0xde>
    2294:	2a c0       	rjmp	.+84     	; 0x22ea <follow_path+0xe4>
    2296:	d8 01       	movw	r26, r16
    2298:	12 96       	adiw	r26, 0x02	; 2
    229a:	ed 91       	ld	r30, X+
    229c:	fc 91       	ld	r31, X
    229e:	13 97       	sbiw	r26, 0x03	; 3
    22a0:	93 85       	ldd	r25, Z+11	; 0x0b
    22a2:	91 11       	cpse	r25, r1
    22a4:	22 c0       	rjmp	.+68     	; 0x22ea <follow_path+0xe4>
    22a6:	e0 91 a3 06 	lds	r30, 0x06A3	; 0x8006a3 <FatFs>
    22aa:	f0 91 a4 06 	lds	r31, 0x06A4	; 0x8006a4 <FatFs+0x1>
    22ae:	06 80       	ldd	r0, Z+6	; 0x06
    22b0:	f7 81       	ldd	r31, Z+7	; 0x07
    22b2:	e0 2d       	mov	r30, r0
    22b4:	83 85       	ldd	r24, Z+11	; 0x0b
    22b6:	84 ff       	sbrs	r24, 4
    22b8:	17 c0       	rjmp	.+46     	; 0x22e8 <follow_path+0xe2>
    22ba:	84 89       	ldd	r24, Z+20	; 0x14
    22bc:	95 89       	ldd	r25, Z+21	; 0x15
    22be:	a0 e0       	ldi	r26, 0x00	; 0
    22c0:	b0 e0       	ldi	r27, 0x00	; 0
    22c2:	bc 01       	movw	r22, r24
    22c4:	55 27       	eor	r21, r21
    22c6:	44 27       	eor	r20, r20
    22c8:	82 8d       	ldd	r24, Z+26	; 0x1a
    22ca:	93 8d       	ldd	r25, Z+27	; 0x1b
    22cc:	a0 e0       	ldi	r26, 0x00	; 0
    22ce:	b0 e0       	ldi	r27, 0x00	; 0
    22d0:	84 2b       	or	r24, r20
    22d2:	95 2b       	or	r25, r21
    22d4:	a6 2b       	or	r26, r22
    22d6:	b7 2b       	or	r27, r23
    22d8:	f8 01       	movw	r30, r16
    22da:	84 83       	std	Z+4, r24	; 0x04
    22dc:	95 83       	std	Z+5, r25	; 0x05
    22de:	a6 83       	std	Z+6, r26	; 0x06
    22e0:	b7 83       	std	Z+7, r27	; 0x07
    22e2:	c1 cf       	rjmp	.-126    	; 0x2266 <follow_path+0x60>
    22e4:	84 e0       	ldi	r24, 0x04	; 4
    22e6:	01 c0       	rjmp	.+2      	; 0x22ea <follow_path+0xe4>
    22e8:	84 e0       	ldi	r24, 0x04	; 4
    22ea:	0f 90       	pop	r0
    22ec:	0f 90       	pop	r0
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	1f 91       	pop	r17
    22f4:	0f 91       	pop	r16
    22f6:	08 95       	ret

000022f8 <pf_mount>:
    22f8:	4f 92       	push	r4
    22fa:	5f 92       	push	r5
    22fc:	6f 92       	push	r6
    22fe:	7f 92       	push	r7
    2300:	8f 92       	push	r8
    2302:	9f 92       	push	r9
    2304:	af 92       	push	r10
    2306:	bf 92       	push	r11
    2308:	df 92       	push	r13
    230a:	ef 92       	push	r14
    230c:	ff 92       	push	r15
    230e:	0f 93       	push	r16
    2310:	1f 93       	push	r17
    2312:	cf 93       	push	r28
    2314:	df 93       	push	r29
    2316:	cd b7       	in	r28, 0x3d	; 61
    2318:	de b7       	in	r29, 0x3e	; 62
    231a:	a8 97       	sbiw	r28, 0x28	; 40
    231c:	0f b6       	in	r0, 0x3f	; 63
    231e:	f8 94       	cli
    2320:	de bf       	out	0x3e, r29	; 62
    2322:	0f be       	out	0x3f, r0	; 63
    2324:	cd bf       	out	0x3d, r28	; 61
    2326:	10 92 a4 06 	sts	0x06A4, r1	; 0x8006a4 <FatFs+0x1>
    232a:	10 92 a3 06 	sts	0x06A3, r1	; 0x8006a3 <FatFs>
    232e:	00 97       	sbiw	r24, 0x00	; 0
    2330:	09 f4       	brne	.+2      	; 0x2334 <pf_mount+0x3c>
    2332:	fb c0       	rjmp	.+502    	; 0x252a <pf_mount+0x232>
    2334:	7c 01       	movw	r14, r24
    2336:	0e 94 47 0a 	call	0x148e	; 0x148e <disk_initialize>
    233a:	80 fd       	sbrc	r24, 0
    233c:	f8 c0       	rjmp	.+496    	; 0x252e <pf_mount+0x236>
    233e:	40 e0       	ldi	r20, 0x00	; 0
    2340:	50 e0       	ldi	r21, 0x00	; 0
    2342:	ba 01       	movw	r22, r20
    2344:	ce 01       	movw	r24, r28
    2346:	01 96       	adiw	r24, 0x01	; 1
    2348:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <check_fs>
    234c:	d8 2e       	mov	r13, r24
    234e:	41 e0       	ldi	r20, 0x01	; 1
    2350:	84 13       	cpse	r24, r20
    2352:	1c c0       	rjmp	.+56     	; 0x238c <pf_mount+0x94>
    2354:	00 e1       	ldi	r16, 0x10	; 16
    2356:	10 e0       	ldi	r17, 0x00	; 0
    2358:	2e eb       	ldi	r18, 0xBE	; 190
    235a:	31 e0       	ldi	r19, 0x01	; 1
    235c:	40 e0       	ldi	r20, 0x00	; 0
    235e:	50 e0       	ldi	r21, 0x00	; 0
    2360:	ba 01       	movw	r22, r20
    2362:	ce 01       	movw	r24, r28
    2364:	01 96       	adiw	r24, 0x01	; 1
    2366:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    236a:	81 11       	cpse	r24, r1
    236c:	13 c0       	rjmp	.+38     	; 0x2394 <pf_mount+0x9c>
    236e:	8d 81       	ldd	r24, Y+5	; 0x05
    2370:	88 23       	and	r24, r24
    2372:	c1 f0       	breq	.+48     	; 0x23a4 <pf_mount+0xac>
    2374:	89 84       	ldd	r8, Y+9	; 0x09
    2376:	9a 84       	ldd	r9, Y+10	; 0x0a
    2378:	ab 84       	ldd	r10, Y+11	; 0x0b
    237a:	bc 84       	ldd	r11, Y+12	; 0x0c
    237c:	b5 01       	movw	r22, r10
    237e:	a4 01       	movw	r20, r8
    2380:	ce 01       	movw	r24, r28
    2382:	01 96       	adiw	r24, 0x01	; 1
    2384:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <check_fs>
    2388:	d8 2e       	mov	r13, r24
    238a:	0f c0       	rjmp	.+30     	; 0x23aa <pf_mount+0xb2>
    238c:	81 2c       	mov	r8, r1
    238e:	91 2c       	mov	r9, r1
    2390:	54 01       	movw	r10, r8
    2392:	0b c0       	rjmp	.+22     	; 0x23aa <pf_mount+0xb2>
    2394:	81 2c       	mov	r8, r1
    2396:	91 2c       	mov	r9, r1
    2398:	54 01       	movw	r10, r8
    239a:	0f 2e       	mov	r0, r31
    239c:	f3 e0       	ldi	r31, 0x03	; 3
    239e:	df 2e       	mov	r13, r31
    23a0:	f0 2d       	mov	r31, r0
    23a2:	03 c0       	rjmp	.+6      	; 0x23aa <pf_mount+0xb2>
    23a4:	81 2c       	mov	r8, r1
    23a6:	91 2c       	mov	r9, r1
    23a8:	54 01       	movw	r10, r8
    23aa:	53 e0       	ldi	r21, 0x03	; 3
    23ac:	d5 16       	cp	r13, r21
    23ae:	09 f4       	brne	.+2      	; 0x23b2 <pf_mount+0xba>
    23b0:	c0 c0       	rjmp	.+384    	; 0x2532 <pf_mount+0x23a>
    23b2:	d1 10       	cpse	r13, r1
    23b4:	c0 c0       	rjmp	.+384    	; 0x2536 <pf_mount+0x23e>
    23b6:	04 e2       	ldi	r16, 0x24	; 36
    23b8:	10 e0       	ldi	r17, 0x00	; 0
    23ba:	2d e0       	ldi	r18, 0x0D	; 13
    23bc:	30 e0       	ldi	r19, 0x00	; 0
    23be:	b5 01       	movw	r22, r10
    23c0:	a4 01       	movw	r20, r8
    23c2:	ce 01       	movw	r24, r28
    23c4:	01 96       	adiw	r24, 0x01	; 1
    23c6:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    23ca:	81 11       	cpse	r24, r1
    23cc:	b6 c0       	rjmp	.+364    	; 0x253a <pf_mount+0x242>
    23ce:	2a 85       	ldd	r18, Y+10	; 0x0a
    23d0:	3b 85       	ldd	r19, Y+11	; 0x0b
    23d2:	40 e0       	ldi	r20, 0x00	; 0
    23d4:	50 e0       	ldi	r21, 0x00	; 0
    23d6:	21 15       	cp	r18, r1
    23d8:	31 05       	cpc	r19, r1
    23da:	41 05       	cpc	r20, r1
    23dc:	51 05       	cpc	r21, r1
    23de:	21 f4       	brne	.+8      	; 0x23e8 <pf_mount+0xf0>
    23e0:	28 8d       	ldd	r18, Y+24	; 0x18
    23e2:	39 8d       	ldd	r19, Y+25	; 0x19
    23e4:	4a 8d       	ldd	r20, Y+26	; 0x1a
    23e6:	5b 8d       	ldd	r21, Y+27	; 0x1b
    23e8:	ac 81       	ldd	r26, Y+4	; 0x04
    23ea:	b0 e0       	ldi	r27, 0x00	; 0
    23ec:	0e 94 e0 23 	call	0x47c0	; 0x47c0 <__muluhisi3>
    23f0:	6d a3       	std	Y+37, r22	; 0x25
    23f2:	7e a3       	std	Y+38, r23	; 0x26
    23f4:	8f a3       	std	Y+39, r24	; 0x27
    23f6:	98 a7       	std	Y+40, r25	; 0x28
    23f8:	8a 81       	ldd	r24, Y+2	; 0x02
    23fa:	9b 81       	ldd	r25, Y+3	; 0x03
    23fc:	88 0e       	add	r8, r24
    23fe:	99 1e       	adc	r9, r25
    2400:	a1 1c       	adc	r10, r1
    2402:	b1 1c       	adc	r11, r1
    2404:	d7 01       	movw	r26, r14
    2406:	1c 96       	adiw	r26, 0x0c	; 12
    2408:	8d 92       	st	X+, r8
    240a:	9d 92       	st	X+, r9
    240c:	ad 92       	st	X+, r10
    240e:	bc 92       	st	X, r11
    2410:	1f 97       	sbiw	r26, 0x0f	; 15
    2412:	e9 81       	ldd	r30, Y+1	; 0x01
    2414:	11 96       	adiw	r26, 0x01	; 1
    2416:	ec 93       	st	X, r30
    2418:	11 97       	sbiw	r26, 0x01	; 1
    241a:	8d 81       	ldd	r24, Y+5	; 0x05
    241c:	9e 81       	ldd	r25, Y+6	; 0x06
    241e:	15 96       	adiw	r26, 0x05	; 5
    2420:	9c 93       	st	X, r25
    2422:	8e 93       	st	-X, r24
    2424:	14 97       	sbiw	r26, 0x04	; 4
    2426:	0f 81       	ldd	r16, Y+7	; 0x07
    2428:	18 85       	ldd	r17, Y+8	; 0x08
    242a:	20 e0       	ldi	r18, 0x00	; 0
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	01 15       	cp	r16, r1
    2430:	11 05       	cpc	r17, r1
    2432:	21 05       	cpc	r18, r1
    2434:	31 05       	cpc	r19, r1
    2436:	21 f4       	brne	.+8      	; 0x2440 <pf_mount+0x148>
    2438:	0c 89       	ldd	r16, Y+20	; 0x14
    243a:	1d 89       	ldd	r17, Y+21	; 0x15
    243c:	2e 89       	ldd	r18, Y+22	; 0x16
    243e:	3f 89       	ldd	r19, Y+23	; 0x17
    2440:	4a 81       	ldd	r20, Y+2	; 0x02
    2442:	5b 81       	ldd	r21, Y+3	; 0x03
    2444:	04 1b       	sub	r16, r20
    2446:	15 0b       	sbc	r17, r21
    2448:	21 09       	sbc	r18, r1
    244a:	31 09       	sbc	r19, r1
    244c:	4d a1       	ldd	r20, Y+37	; 0x25
    244e:	5e a1       	ldd	r21, Y+38	; 0x26
    2450:	6f a1       	ldd	r22, Y+39	; 0x27
    2452:	78 a5       	ldd	r23, Y+40	; 0x28
    2454:	04 1b       	sub	r16, r20
    2456:	15 0b       	sbc	r17, r21
    2458:	26 0b       	sbc	r18, r22
    245a:	37 0b       	sbc	r19, r23
    245c:	92 95       	swap	r25
    245e:	82 95       	swap	r24
    2460:	8f 70       	andi	r24, 0x0F	; 15
    2462:	89 27       	eor	r24, r25
    2464:	9f 70       	andi	r25, 0x0F	; 15
    2466:	89 27       	eor	r24, r25
    2468:	2c 01       	movw	r4, r24
    246a:	61 2c       	mov	r6, r1
    246c:	71 2c       	mov	r7, r1
    246e:	c9 01       	movw	r24, r18
    2470:	b8 01       	movw	r22, r16
    2472:	64 19       	sub	r22, r4
    2474:	75 09       	sbc	r23, r5
    2476:	86 09       	sbc	r24, r6
    2478:	97 09       	sbc	r25, r7
    247a:	2e 2f       	mov	r18, r30
    247c:	30 e0       	ldi	r19, 0x00	; 0
    247e:	40 e0       	ldi	r20, 0x00	; 0
    2480:	50 e0       	ldi	r21, 0x00	; 0
    2482:	0e 94 b8 23 	call	0x4770	; 0x4770 <__udivmodsi4>
    2486:	ba 01       	movw	r22, r20
    2488:	a9 01       	movw	r20, r18
    248a:	4e 5f       	subi	r20, 0xFE	; 254
    248c:	5f 4f       	sbci	r21, 0xFF	; 255
    248e:	6f 4f       	sbci	r22, 0xFF	; 255
    2490:	7f 4f       	sbci	r23, 0xFF	; 255
    2492:	d7 01       	movw	r26, r14
    2494:	18 96       	adiw	r26, 0x08	; 8
    2496:	4d 93       	st	X+, r20
    2498:	5d 93       	st	X+, r21
    249a:	6d 93       	st	X+, r22
    249c:	7c 93       	st	X, r23
    249e:	1b 97       	sbiw	r26, 0x0b	; 11
    24a0:	47 3f       	cpi	r20, 0xF7	; 247
    24a2:	bf e0       	ldi	r27, 0x0F	; 15
    24a4:	5b 07       	cpc	r21, r27
    24a6:	61 05       	cpc	r22, r1
    24a8:	71 05       	cpc	r23, r1
    24aa:	10 f4       	brcc	.+4      	; 0x24b0 <pf_mount+0x1b8>
    24ac:	81 e0       	ldi	r24, 0x01	; 1
    24ae:	01 c0       	rjmp	.+2      	; 0x24b2 <pf_mount+0x1ba>
    24b0:	82 e0       	ldi	r24, 0x02	; 2
    24b2:	47 3f       	cpi	r20, 0xF7	; 247
    24b4:	5f 4f       	sbci	r21, 0xFF	; 255
    24b6:	61 05       	cpc	r22, r1
    24b8:	71 05       	cpc	r23, r1
    24ba:	08 f0       	brcs	.+2      	; 0x24be <pf_mount+0x1c6>
    24bc:	83 e0       	ldi	r24, 0x03	; 3
    24be:	d7 01       	movw	r26, r14
    24c0:	8c 93       	st	X, r24
    24c2:	83 30       	cpi	r24, 0x03	; 3
    24c4:	51 f4       	brne	.+20     	; 0x24da <pf_mount+0x1e2>
    24c6:	88 a1       	ldd	r24, Y+32	; 0x20
    24c8:	99 a1       	ldd	r25, Y+33	; 0x21
    24ca:	aa a1       	ldd	r26, Y+34	; 0x22
    24cc:	bb a1       	ldd	r27, Y+35	; 0x23
    24ce:	f7 01       	movw	r30, r14
    24d0:	80 8b       	std	Z+16, r24	; 0x10
    24d2:	91 8b       	std	Z+17, r25	; 0x11
    24d4:	a2 8b       	std	Z+18, r26	; 0x12
    24d6:	b3 8b       	std	Z+19, r27	; 0x13
    24d8:	0d c0       	rjmp	.+26     	; 0x24f4 <pf_mount+0x1fc>
    24da:	8d a1       	ldd	r24, Y+37	; 0x25
    24dc:	9e a1       	ldd	r25, Y+38	; 0x26
    24de:	af a1       	ldd	r26, Y+39	; 0x27
    24e0:	b8 a5       	ldd	r27, Y+40	; 0x28
    24e2:	88 0d       	add	r24, r8
    24e4:	99 1d       	adc	r25, r9
    24e6:	aa 1d       	adc	r26, r10
    24e8:	bb 1d       	adc	r27, r11
    24ea:	f7 01       	movw	r30, r14
    24ec:	80 8b       	std	Z+16, r24	; 0x10
    24ee:	91 8b       	std	Z+17, r25	; 0x11
    24f0:	a2 8b       	std	Z+18, r26	; 0x12
    24f2:	b3 8b       	std	Z+19, r27	; 0x13
    24f4:	4d a1       	ldd	r20, Y+37	; 0x25
    24f6:	5e a1       	ldd	r21, Y+38	; 0x26
    24f8:	6f a1       	ldd	r22, Y+39	; 0x27
    24fa:	78 a5       	ldd	r23, Y+40	; 0x28
    24fc:	84 0e       	add	r8, r20
    24fe:	95 1e       	adc	r9, r21
    2500:	a6 1e       	adc	r10, r22
    2502:	b7 1e       	adc	r11, r23
    2504:	84 0c       	add	r8, r4
    2506:	95 1c       	adc	r9, r5
    2508:	a6 1c       	adc	r10, r6
    250a:	b7 1c       	adc	r11, r7
    250c:	d7 01       	movw	r26, r14
    250e:	54 96       	adiw	r26, 0x14	; 20
    2510:	8d 92       	st	X+, r8
    2512:	9d 92       	st	X+, r9
    2514:	ad 92       	st	X+, r10
    2516:	bc 92       	st	X, r11
    2518:	57 97       	sbiw	r26, 0x17	; 23
    251a:	12 96       	adiw	r26, 0x02	; 2
    251c:	1c 92       	st	X, r1
    251e:	f0 92 a4 06 	sts	0x06A4, r15	; 0x8006a4 <FatFs+0x1>
    2522:	e0 92 a3 06 	sts	0x06A3, r14	; 0x8006a3 <FatFs>
    2526:	80 e0       	ldi	r24, 0x00	; 0
    2528:	09 c0       	rjmp	.+18     	; 0x253c <pf_mount+0x244>
    252a:	80 e0       	ldi	r24, 0x00	; 0
    252c:	07 c0       	rjmp	.+14     	; 0x253c <pf_mount+0x244>
    252e:	82 e0       	ldi	r24, 0x02	; 2
    2530:	05 c0       	rjmp	.+10     	; 0x253c <pf_mount+0x244>
    2532:	81 e0       	ldi	r24, 0x01	; 1
    2534:	03 c0       	rjmp	.+6      	; 0x253c <pf_mount+0x244>
    2536:	87 e0       	ldi	r24, 0x07	; 7
    2538:	01 c0       	rjmp	.+2      	; 0x253c <pf_mount+0x244>
    253a:	81 e0       	ldi	r24, 0x01	; 1
    253c:	a8 96       	adiw	r28, 0x28	; 40
    253e:	0f b6       	in	r0, 0x3f	; 63
    2540:	f8 94       	cli
    2542:	de bf       	out	0x3e, r29	; 62
    2544:	0f be       	out	0x3f, r0	; 63
    2546:	cd bf       	out	0x3d, r28	; 61
    2548:	df 91       	pop	r29
    254a:	cf 91       	pop	r28
    254c:	1f 91       	pop	r17
    254e:	0f 91       	pop	r16
    2550:	ff 90       	pop	r15
    2552:	ef 90       	pop	r14
    2554:	df 90       	pop	r13
    2556:	bf 90       	pop	r11
    2558:	af 90       	pop	r10
    255a:	9f 90       	pop	r9
    255c:	8f 90       	pop	r8
    255e:	7f 90       	pop	r7
    2560:	6f 90       	pop	r6
    2562:	5f 90       	pop	r5
    2564:	4f 90       	pop	r4
    2566:	08 95       	ret

00002568 <pf_open>:
    2568:	0f 93       	push	r16
    256a:	1f 93       	push	r17
    256c:	cf 93       	push	r28
    256e:	df 93       	push	r29
    2570:	cd b7       	in	r28, 0x3d	; 61
    2572:	de b7       	in	r29, 0x3e	; 62
    2574:	ec 97       	sbiw	r28, 0x3c	; 60
    2576:	0f b6       	in	r0, 0x3f	; 63
    2578:	f8 94       	cli
    257a:	de bf       	out	0x3e, r29	; 62
    257c:	0f be       	out	0x3f, r0	; 63
    257e:	cd bf       	out	0x3d, r28	; 61
    2580:	00 91 a3 06 	lds	r16, 0x06A3	; 0x8006a3 <FatFs>
    2584:	10 91 a4 06 	lds	r17, 0x06A4	; 0x8006a4 <FatFs+0x1>
    2588:	01 15       	cp	r16, r1
    258a:	11 05       	cpc	r17, r1
    258c:	c9 f1       	breq	.+114    	; 0x2600 <pf_open+0x98>
    258e:	bc 01       	movw	r22, r24
    2590:	f8 01       	movw	r30, r16
    2592:	12 82       	std	Z+2, r1	; 0x02
    2594:	ce 01       	movw	r24, r28
    2596:	4d 96       	adiw	r24, 0x1d	; 29
    2598:	97 83       	std	Z+7, r25	; 0x07
    259a:	86 83       	std	Z+6, r24	; 0x06
    259c:	0c 97       	sbiw	r24, 0x0c	; 12
    259e:	9c 83       	std	Y+4, r25	; 0x04
    25a0:	8b 83       	std	Y+3, r24	; 0x03
    25a2:	40 97       	sbiw	r24, 0x10	; 16
    25a4:	0e 94 03 11 	call	0x2206	; 0x2206 <follow_path>
    25a8:	81 11       	cpse	r24, r1
    25aa:	2f c0       	rjmp	.+94     	; 0x260a <pf_open+0xa2>
    25ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
    25ae:	88 23       	and	r24, r24
    25b0:	49 f1       	breq	.+82     	; 0x2604 <pf_open+0x9c>
    25b2:	88 a5       	ldd	r24, Y+40	; 0x28
    25b4:	84 fd       	sbrc	r24, 4
    25b6:	28 c0       	rjmp	.+80     	; 0x2608 <pf_open+0xa0>
    25b8:	89 a9       	ldd	r24, Y+49	; 0x31
    25ba:	9a a9       	ldd	r25, Y+50	; 0x32
    25bc:	a0 e0       	ldi	r26, 0x00	; 0
    25be:	b0 e0       	ldi	r27, 0x00	; 0
    25c0:	bc 01       	movw	r22, r24
    25c2:	55 27       	eor	r21, r21
    25c4:	44 27       	eor	r20, r20
    25c6:	8f a9       	ldd	r24, Y+55	; 0x37
    25c8:	98 ad       	ldd	r25, Y+56	; 0x38
    25ca:	a0 e0       	ldi	r26, 0x00	; 0
    25cc:	b0 e0       	ldi	r27, 0x00	; 0
    25ce:	84 2b       	or	r24, r20
    25d0:	95 2b       	or	r25, r21
    25d2:	a6 2b       	or	r26, r22
    25d4:	b7 2b       	or	r27, r23
    25d6:	f8 01       	movw	r30, r16
    25d8:	80 a3       	std	Z+32, r24	; 0x20
    25da:	91 a3       	std	Z+33, r25	; 0x21
    25dc:	a2 a3       	std	Z+34, r26	; 0x22
    25de:	b3 a3       	std	Z+35, r27	; 0x23
    25e0:	89 ad       	ldd	r24, Y+57	; 0x39
    25e2:	9a ad       	ldd	r25, Y+58	; 0x3a
    25e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    25e6:	bc ad       	ldd	r27, Y+60	; 0x3c
    25e8:	84 8f       	std	Z+28, r24	; 0x1c
    25ea:	95 8f       	std	Z+29, r25	; 0x1d
    25ec:	a6 8f       	std	Z+30, r26	; 0x1e
    25ee:	b7 8f       	std	Z+31, r27	; 0x1f
    25f0:	10 8e       	std	Z+24, r1	; 0x18
    25f2:	11 8e       	std	Z+25, r1	; 0x19
    25f4:	12 8e       	std	Z+26, r1	; 0x1a
    25f6:	13 8e       	std	Z+27, r1	; 0x1b
    25f8:	81 e0       	ldi	r24, 0x01	; 1
    25fa:	82 83       	std	Z+2, r24	; 0x02
    25fc:	80 e0       	ldi	r24, 0x00	; 0
    25fe:	05 c0       	rjmp	.+10     	; 0x260a <pf_open+0xa2>
    2600:	86 e0       	ldi	r24, 0x06	; 6
    2602:	03 c0       	rjmp	.+6      	; 0x260a <pf_open+0xa2>
    2604:	83 e0       	ldi	r24, 0x03	; 3
    2606:	01 c0       	rjmp	.+2      	; 0x260a <pf_open+0xa2>
    2608:	83 e0       	ldi	r24, 0x03	; 3
    260a:	ec 96       	adiw	r28, 0x3c	; 60
    260c:	0f b6       	in	r0, 0x3f	; 63
    260e:	f8 94       	cli
    2610:	de bf       	out	0x3e, r29	; 62
    2612:	0f be       	out	0x3f, r0	; 63
    2614:	cd bf       	out	0x3d, r28	; 61
    2616:	df 91       	pop	r29
    2618:	cf 91       	pop	r28
    261a:	1f 91       	pop	r17
    261c:	0f 91       	pop	r16
    261e:	08 95       	ret

00002620 <pf_read>:
    2620:	2f 92       	push	r2
    2622:	3f 92       	push	r3
    2624:	4f 92       	push	r4
    2626:	5f 92       	push	r5
    2628:	6f 92       	push	r6
    262a:	7f 92       	push	r7
    262c:	8f 92       	push	r8
    262e:	9f 92       	push	r9
    2630:	af 92       	push	r10
    2632:	bf 92       	push	r11
    2634:	cf 92       	push	r12
    2636:	df 92       	push	r13
    2638:	ef 92       	push	r14
    263a:	ff 92       	push	r15
    263c:	0f 93       	push	r16
    263e:	1f 93       	push	r17
    2640:	cf 93       	push	r28
    2642:	df 93       	push	r29
    2644:	3c 01       	movw	r6, r24
    2646:	6b 01       	movw	r12, r22
    2648:	4a 01       	movw	r8, r20
    264a:	e0 90 a3 06 	lds	r14, 0x06A3	; 0x8006a3 <FatFs>
    264e:	f0 90 a4 06 	lds	r15, 0x06A4	; 0x8006a4 <FatFs+0x1>
    2652:	fa 01       	movw	r30, r20
    2654:	11 82       	std	Z+1, r1	; 0x01
    2656:	10 82       	st	Z, r1
    2658:	e1 14       	cp	r14, r1
    265a:	f1 04       	cpc	r15, r1
    265c:	09 f4       	brne	.+2      	; 0x2660 <pf_read+0x40>
    265e:	bb c0       	rjmp	.+374    	; 0x27d6 <pf_read+0x1b6>
    2660:	f7 01       	movw	r30, r14
    2662:	82 81       	ldd	r24, Z+2	; 0x02
    2664:	80 ff       	sbrs	r24, 0
    2666:	b9 c0       	rjmp	.+370    	; 0x27da <pf_read+0x1ba>
    2668:	84 8d       	ldd	r24, Z+28	; 0x1c
    266a:	95 8d       	ldd	r25, Z+29	; 0x1d
    266c:	a6 8d       	ldd	r26, Z+30	; 0x1e
    266e:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2670:	40 8d       	ldd	r20, Z+24	; 0x18
    2672:	51 8d       	ldd	r21, Z+25	; 0x19
    2674:	62 8d       	ldd	r22, Z+26	; 0x1a
    2676:	73 8d       	ldd	r23, Z+27	; 0x1b
    2678:	84 1b       	sub	r24, r20
    267a:	95 0b       	sbc	r25, r21
    267c:	a6 0b       	sbc	r26, r22
    267e:	b7 0b       	sbc	r27, r23
    2680:	a6 01       	movw	r20, r12
    2682:	60 e0       	ldi	r22, 0x00	; 0
    2684:	70 e0       	ldi	r23, 0x00	; 0
    2686:	84 17       	cp	r24, r20
    2688:	95 07       	cpc	r25, r21
    268a:	a6 07       	cpc	r26, r22
    268c:	b7 07       	cpc	r27, r23
    268e:	08 f4       	brcc	.+2      	; 0x2692 <pf_read+0x72>
    2690:	6c 01       	movw	r12, r24
    2692:	53 01       	movw	r10, r6
    2694:	96 c0       	rjmp	.+300    	; 0x27c2 <pf_read+0x1a2>
    2696:	f7 01       	movw	r30, r14
    2698:	20 8c       	ldd	r2, Z+24	; 0x18
    269a:	31 8c       	ldd	r3, Z+25	; 0x19
    269c:	42 8c       	ldd	r4, Z+26	; 0x1a
    269e:	53 8c       	ldd	r5, Z+27	; 0x1b
    26a0:	d2 01       	movw	r26, r4
    26a2:	c1 01       	movw	r24, r2
    26a4:	91 70       	andi	r25, 0x01	; 1
    26a6:	aa 27       	eor	r26, r26
    26a8:	bb 27       	eor	r27, r27
    26aa:	89 2b       	or	r24, r25
    26ac:	8a 2b       	or	r24, r26
    26ae:	8b 2b       	or	r24, r27
    26b0:	09 f0       	breq	.+2      	; 0x26b4 <pf_read+0x94>
    26b2:	4e c0       	rjmp	.+156    	; 0x2750 <pf_read+0x130>
    26b4:	21 81       	ldd	r18, Z+1	; 0x01
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	40 e0       	ldi	r20, 0x00	; 0
    26ba:	50 e0       	ldi	r21, 0x00	; 0
    26bc:	c2 01       	movw	r24, r4
    26be:	b1 01       	movw	r22, r2
    26c0:	05 2e       	mov	r0, r21
    26c2:	59 e0       	ldi	r21, 0x09	; 9
    26c4:	96 95       	lsr	r25
    26c6:	87 95       	ror	r24
    26c8:	77 95       	ror	r23
    26ca:	67 95       	ror	r22
    26cc:	5a 95       	dec	r21
    26ce:	d1 f7       	brne	.-12     	; 0x26c4 <pf_read+0xa4>
    26d0:	50 2d       	mov	r21, r0
    26d2:	0e 94 b8 23 	call	0x4770	; 0x4770 <__udivmodsi4>
    26d6:	67 2b       	or	r22, r23
    26d8:	68 2b       	or	r22, r24
    26da:	69 2b       	or	r22, r25
    26dc:	e9 f4       	brne	.+58     	; 0x2718 <pf_read+0xf8>
    26de:	23 28       	or	r2, r3
    26e0:	24 28       	or	r2, r4
    26e2:	25 28       	or	r2, r5
    26e4:	31 f4       	brne	.+12     	; 0x26f2 <pf_read+0xd2>
    26e6:	f7 01       	movw	r30, r14
    26e8:	60 a1       	ldd	r22, Z+32	; 0x20
    26ea:	71 a1       	ldd	r23, Z+33	; 0x21
    26ec:	82 a1       	ldd	r24, Z+34	; 0x22
    26ee:	93 a1       	ldd	r25, Z+35	; 0x23
    26f0:	07 c0       	rjmp	.+14     	; 0x2700 <pf_read+0xe0>
    26f2:	f7 01       	movw	r30, r14
    26f4:	64 a1       	ldd	r22, Z+36	; 0x24
    26f6:	75 a1       	ldd	r23, Z+37	; 0x25
    26f8:	86 a1       	ldd	r24, Z+38	; 0x26
    26fa:	97 a1       	ldd	r25, Z+39	; 0x27
    26fc:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <get_fat>
    2700:	62 30       	cpi	r22, 0x02	; 2
    2702:	71 05       	cpc	r23, r1
    2704:	81 05       	cpc	r24, r1
    2706:	91 05       	cpc	r25, r1
    2708:	08 f4       	brcc	.+2      	; 0x270c <pf_read+0xec>
    270a:	61 c0       	rjmp	.+194    	; 0x27ce <pf_read+0x1ae>
    270c:	f7 01       	movw	r30, r14
    270e:	64 a3       	std	Z+36, r22	; 0x24
    2710:	75 a3       	std	Z+37, r23	; 0x25
    2712:	86 a3       	std	Z+38, r24	; 0x26
    2714:	97 a3       	std	Z+39, r25	; 0x27
    2716:	13 82       	std	Z+3, r1	; 0x03
    2718:	f7 01       	movw	r30, r14
    271a:	64 a1       	ldd	r22, Z+36	; 0x24
    271c:	75 a1       	ldd	r23, Z+37	; 0x25
    271e:	86 a1       	ldd	r24, Z+38	; 0x26
    2720:	97 a1       	ldd	r25, Z+39	; 0x27
    2722:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <clust2sect>
    2726:	61 15       	cp	r22, r1
    2728:	71 05       	cpc	r23, r1
    272a:	81 05       	cpc	r24, r1
    272c:	91 05       	cpc	r25, r1
    272e:	09 f4       	brne	.+2      	; 0x2732 <pf_read+0x112>
    2730:	4e c0       	rjmp	.+156    	; 0x27ce <pf_read+0x1ae>
    2732:	f7 01       	movw	r30, r14
    2734:	23 81       	ldd	r18, Z+3	; 0x03
    2736:	31 e0       	ldi	r19, 0x01	; 1
    2738:	32 0f       	add	r19, r18
    273a:	33 83       	std	Z+3, r19	; 0x03
    273c:	dc 01       	movw	r26, r24
    273e:	cb 01       	movw	r24, r22
    2740:	82 0f       	add	r24, r18
    2742:	91 1d       	adc	r25, r1
    2744:	a1 1d       	adc	r26, r1
    2746:	b1 1d       	adc	r27, r1
    2748:	80 a7       	std	Z+40, r24	; 0x28
    274a:	91 a7       	std	Z+41, r25	; 0x29
    274c:	a2 a7       	std	Z+42, r26	; 0x2a
    274e:	b3 a7       	std	Z+43, r27	; 0x2b
    2750:	f7 01       	movw	r30, r14
    2752:	80 8d       	ldd	r24, Z+24	; 0x18
    2754:	91 8d       	ldd	r25, Z+25	; 0x19
    2756:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2758:	b3 8d       	ldd	r27, Z+27	; 0x1b
    275a:	9c 01       	movw	r18, r24
    275c:	31 70       	andi	r19, 0x01	; 1
    275e:	c0 e0       	ldi	r28, 0x00	; 0
    2760:	d2 e0       	ldi	r29, 0x02	; 2
    2762:	c2 1b       	sub	r28, r18
    2764:	d3 0b       	sbc	r29, r19
    2766:	cc 16       	cp	r12, r28
    2768:	dd 06       	cpc	r13, r29
    276a:	08 f4       	brcc	.+2      	; 0x276e <pf_read+0x14e>
    276c:	e6 01       	movw	r28, r12
    276e:	f7 01       	movw	r30, r14
    2770:	40 a5       	ldd	r20, Z+40	; 0x28
    2772:	51 a5       	ldd	r21, Z+41	; 0x29
    2774:	62 a5       	ldd	r22, Z+42	; 0x2a
    2776:	73 a5       	ldd	r23, Z+43	; 0x2b
    2778:	61 14       	cp	r6, r1
    277a:	71 04       	cpc	r7, r1
    277c:	19 f4       	brne	.+6      	; 0x2784 <pf_read+0x164>
    277e:	80 e0       	ldi	r24, 0x00	; 0
    2780:	90 e0       	ldi	r25, 0x00	; 0
    2782:	02 c0       	rjmp	.+4      	; 0x2788 <pf_read+0x168>
    2784:	8a 2d       	mov	r24, r10
    2786:	9b 2d       	mov	r25, r11
    2788:	8e 01       	movw	r16, r28
    278a:	0e 94 6e 09 	call	0x12dc	; 0x12dc <disk_readp>
    278e:	81 11       	cpse	r24, r1
    2790:	1e c0       	rjmp	.+60     	; 0x27ce <pf_read+0x1ae>
    2792:	f7 01       	movw	r30, r14
    2794:	80 8d       	ldd	r24, Z+24	; 0x18
    2796:	91 8d       	ldd	r25, Z+25	; 0x19
    2798:	a2 8d       	ldd	r26, Z+26	; 0x1a
    279a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    279c:	8c 0f       	add	r24, r28
    279e:	9d 1f       	adc	r25, r29
    27a0:	a1 1d       	adc	r26, r1
    27a2:	b1 1d       	adc	r27, r1
    27a4:	80 8f       	std	Z+24, r24	; 0x18
    27a6:	91 8f       	std	Z+25, r25	; 0x19
    27a8:	a2 8f       	std	Z+26, r26	; 0x1a
    27aa:	b3 8f       	std	Z+27, r27	; 0x1b
    27ac:	ac 0e       	add	r10, r28
    27ae:	bd 1e       	adc	r11, r29
    27b0:	cc 1a       	sub	r12, r28
    27b2:	dd 0a       	sbc	r13, r29
    27b4:	f4 01       	movw	r30, r8
    27b6:	80 81       	ld	r24, Z
    27b8:	91 81       	ldd	r25, Z+1	; 0x01
    27ba:	c8 0f       	add	r28, r24
    27bc:	d9 1f       	adc	r29, r25
    27be:	d1 83       	std	Z+1, r29	; 0x01
    27c0:	c0 83       	st	Z, r28
    27c2:	c1 14       	cp	r12, r1
    27c4:	d1 04       	cpc	r13, r1
    27c6:	09 f0       	breq	.+2      	; 0x27ca <pf_read+0x1aa>
    27c8:	66 cf       	rjmp	.-308    	; 0x2696 <pf_read+0x76>
    27ca:	80 e0       	ldi	r24, 0x00	; 0
    27cc:	07 c0       	rjmp	.+14     	; 0x27dc <pf_read+0x1bc>
    27ce:	f7 01       	movw	r30, r14
    27d0:	12 82       	std	Z+2, r1	; 0x02
    27d2:	81 e0       	ldi	r24, 0x01	; 1
    27d4:	03 c0       	rjmp	.+6      	; 0x27dc <pf_read+0x1bc>
    27d6:	86 e0       	ldi	r24, 0x06	; 6
    27d8:	01 c0       	rjmp	.+2      	; 0x27dc <pf_read+0x1bc>
    27da:	85 e0       	ldi	r24, 0x05	; 5
    27dc:	df 91       	pop	r29
    27de:	cf 91       	pop	r28
    27e0:	1f 91       	pop	r17
    27e2:	0f 91       	pop	r16
    27e4:	ff 90       	pop	r15
    27e6:	ef 90       	pop	r14
    27e8:	df 90       	pop	r13
    27ea:	cf 90       	pop	r12
    27ec:	bf 90       	pop	r11
    27ee:	af 90       	pop	r10
    27f0:	9f 90       	pop	r9
    27f2:	8f 90       	pop	r8
    27f4:	7f 90       	pop	r7
    27f6:	6f 90       	pop	r6
    27f8:	5f 90       	pop	r5
    27fa:	4f 90       	pop	r4
    27fc:	3f 90       	pop	r3
    27fe:	2f 90       	pop	r2
    2800:	08 95       	ret

00002802 <pf_lseek>:
#if _USE_LSEEK

FRESULT pf_lseek (
	DWORD ofs		/* File pointer from top of file */
)
{
    2802:	4f 92       	push	r4
    2804:	5f 92       	push	r5
    2806:	6f 92       	push	r6
    2808:	7f 92       	push	r7
    280a:	8f 92       	push	r8
    280c:	9f 92       	push	r9
    280e:	af 92       	push	r10
    2810:	bf 92       	push	r11
    2812:	cf 92       	push	r12
    2814:	df 92       	push	r13
    2816:	ef 92       	push	r14
    2818:	ff 92       	push	r15
    281a:	cf 93       	push	r28
    281c:	df 93       	push	r29
    281e:	00 d0       	rcall	.+0      	; 0x2820 <pf_lseek+0x1e>
    2820:	00 d0       	rcall	.+0      	; 0x2822 <pf_lseek+0x20>
    2822:	00 d0       	rcall	.+0      	; 0x2824 <pf_lseek+0x22>
    2824:	cd b7       	in	r28, 0x3d	; 61
    2826:	de b7       	in	r29, 0x3e	; 62
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;
    2828:	20 91 a3 06 	lds	r18, 0x06A3	; 0x8006a3 <FatFs>
    282c:	30 91 a4 06 	lds	r19, 0x06A4	; 0x8006a4 <FatFs+0x1>
    2830:	3e 83       	std	Y+6, r19	; 0x06
    2832:	2d 83       	std	Y+5, r18	; 0x05


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    2834:	21 15       	cp	r18, r1
    2836:	31 05       	cpc	r19, r1
    2838:	09 f4       	brne	.+2      	; 0x283c <pf_lseek+0x3a>
    283a:	f4 c0       	rjmp	.+488    	; 0x2a24 <pf_lseek+0x222>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
    283c:	d9 01       	movw	r26, r18
    283e:	12 96       	adiw	r26, 0x02	; 2
    2840:	2c 91       	ld	r18, X
    2842:	12 97       	sbiw	r26, 0x02	; 2
    2844:	20 ff       	sbrs	r18, 0
    2846:	f0 c0       	rjmp	.+480    	; 0x2a28 <pf_lseek+0x226>
			return FR_NOT_OPENED;

	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
    2848:	5c 96       	adiw	r26, 0x1c	; 28
    284a:	cd 90       	ld	r12, X+
    284c:	dd 90       	ld	r13, X+
    284e:	ed 90       	ld	r14, X+
    2850:	fc 90       	ld	r15, X
    2852:	5f 97       	sbiw	r26, 0x1f	; 31
    2854:	c6 16       	cp	r12, r22
    2856:	d7 06       	cpc	r13, r23
    2858:	e8 06       	cpc	r14, r24
    285a:	f9 06       	cpc	r15, r25
    285c:	10 f0       	brcs	.+4      	; 0x2862 <pf_lseek+0x60>
    285e:	6b 01       	movw	r12, r22
    2860:	7c 01       	movw	r14, r24
	ifptr = fs->fptr;
    2862:	ed 81       	ldd	r30, Y+5	; 0x05
    2864:	fe 81       	ldd	r31, Y+6	; 0x06
    2866:	40 8c       	ldd	r4, Z+24	; 0x18
    2868:	51 8c       	ldd	r5, Z+25	; 0x19
    286a:	62 8c       	ldd	r6, Z+26	; 0x1a
    286c:	73 8c       	ldd	r7, Z+27	; 0x1b
	fs->fptr = 0;
    286e:	10 8e       	std	Z+24, r1	; 0x18
    2870:	11 8e       	std	Z+25, r1	; 0x19
    2872:	12 8e       	std	Z+26, r1	; 0x1a
    2874:	13 8e       	std	Z+27, r1	; 0x1b
	if (ofs > 0) {
    2876:	c1 14       	cp	r12, r1
    2878:	d1 04       	cpc	r13, r1
    287a:	e1 04       	cpc	r14, r1
    287c:	f1 04       	cpc	r15, r1
    287e:	09 f4       	brne	.+2      	; 0x2882 <pf_lseek+0x80>
    2880:	d5 c0       	rjmp	.+426    	; 0x2a2c <pf_lseek+0x22a>
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
    2882:	81 80       	ldd	r8, Z+1	; 0x01
    2884:	91 2c       	mov	r9, r1
    2886:	a1 2c       	mov	r10, r1
    2888:	b1 2c       	mov	r11, r1
    288a:	07 2e       	mov	r0, r23
    288c:	79 e0       	ldi	r23, 0x09	; 9
    288e:	88 0c       	add	r8, r8
    2890:	99 1c       	adc	r9, r9
    2892:	aa 1c       	adc	r10, r10
    2894:	bb 1c       	adc	r11, r11
    2896:	7a 95       	dec	r23
    2898:	d1 f7       	brne	.-12     	; 0x288e <pf_lseek+0x8c>
    289a:	70 2d       	mov	r23, r0
		if (ifptr > 0 &&
    289c:	41 14       	cp	r4, r1
    289e:	51 04       	cpc	r5, r1
    28a0:	61 04       	cpc	r6, r1
    28a2:	71 04       	cpc	r7, r1
    28a4:	09 f4       	brne	.+2      	; 0x28a8 <pf_lseek+0xa6>
    28a6:	40 c0       	rjmp	.+128    	; 0x2928 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    28a8:	c7 01       	movw	r24, r14
    28aa:	b6 01       	movw	r22, r12
    28ac:	61 50       	subi	r22, 0x01	; 1
    28ae:	71 09       	sbc	r23, r1
    28b0:	81 09       	sbc	r24, r1
    28b2:	91 09       	sbc	r25, r1
    28b4:	a5 01       	movw	r20, r10
    28b6:	94 01       	movw	r18, r8
    28b8:	0e 94 b8 23 	call	0x4770	; 0x4770 <__udivmodsi4>
    28bc:	29 83       	std	Y+1, r18	; 0x01
    28be:	3a 83       	std	Y+2, r19	; 0x02
    28c0:	4b 83       	std	Y+3, r20	; 0x03
    28c2:	5c 83       	std	Y+4, r21	; 0x04
    28c4:	b1 e0       	ldi	r27, 0x01	; 1
    28c6:	4b 1a       	sub	r4, r27
    28c8:	51 08       	sbc	r5, r1
    28ca:	61 08       	sbc	r6, r1
    28cc:	71 08       	sbc	r7, r1
    28ce:	c3 01       	movw	r24, r6
    28d0:	b2 01       	movw	r22, r4
    28d2:	a5 01       	movw	r20, r10
    28d4:	94 01       	movw	r18, r8
    28d6:	0e 94 b8 23 	call	0x4770	; 0x4770 <__udivmodsi4>
	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
	ifptr = fs->fptr;
	fs->fptr = 0;
	if (ofs > 0) {
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
		if (ifptr > 0 &&
    28da:	89 81       	ldd	r24, Y+1	; 0x01
    28dc:	9a 81       	ldd	r25, Y+2	; 0x02
    28de:	ab 81       	ldd	r26, Y+3	; 0x03
    28e0:	bc 81       	ldd	r27, Y+4	; 0x04
    28e2:	82 17       	cp	r24, r18
    28e4:	93 07       	cpc	r25, r19
    28e6:	a4 07       	cpc	r26, r20
    28e8:	b5 07       	cpc	r27, r21
    28ea:	f0 f0       	brcs	.+60     	; 0x2928 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
			fs->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    28ec:	88 27       	eor	r24, r24
    28ee:	99 27       	eor	r25, r25
    28f0:	dc 01       	movw	r26, r24
    28f2:	88 19       	sub	r24, r8
    28f4:	99 09       	sbc	r25, r9
    28f6:	aa 09       	sbc	r26, r10
    28f8:	bb 09       	sbc	r27, r11
    28fa:	48 22       	and	r4, r24
    28fc:	59 22       	and	r5, r25
    28fe:	6a 22       	and	r6, r26
    2900:	7b 22       	and	r7, r27
    2902:	ad 81       	ldd	r26, Y+5	; 0x05
    2904:	be 81       	ldd	r27, Y+6	; 0x06
    2906:	58 96       	adiw	r26, 0x18	; 24
    2908:	4d 92       	st	X+, r4
    290a:	5d 92       	st	X+, r5
    290c:	6d 92       	st	X+, r6
    290e:	7c 92       	st	X, r7
    2910:	5b 97       	sbiw	r26, 0x1b	; 27
			ofs -= fs->fptr;
    2912:	c4 18       	sub	r12, r4
    2914:	d5 08       	sbc	r13, r5
    2916:	e6 08       	sbc	r14, r6
    2918:	f7 08       	sbc	r15, r7
			clst = fs->curr_clust;
    291a:	94 96       	adiw	r26, 0x24	; 36
    291c:	6d 91       	ld	r22, X+
    291e:	7d 91       	ld	r23, X+
    2920:	8d 91       	ld	r24, X+
    2922:	9c 91       	ld	r25, X
    2924:	97 97       	sbiw	r26, 0x27	; 39
    2926:	33 c0       	rjmp	.+102    	; 0x298e <pf_lseek+0x18c>
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
    2928:	ed 81       	ldd	r30, Y+5	; 0x05
    292a:	fe 81       	ldd	r31, Y+6	; 0x06
    292c:	60 a1       	ldd	r22, Z+32	; 0x20
    292e:	71 a1       	ldd	r23, Z+33	; 0x21
    2930:	82 a1       	ldd	r24, Z+34	; 0x22
    2932:	93 a1       	ldd	r25, Z+35	; 0x23
			fs->curr_clust = clst;
    2934:	64 a3       	std	Z+36, r22	; 0x24
    2936:	75 a3       	std	Z+37, r23	; 0x25
    2938:	86 a3       	std	Z+38, r24	; 0x26
    293a:	97 a3       	std	Z+39, r25	; 0x27
    293c:	28 c0       	rjmp	.+80     	; 0x298e <pf_lseek+0x18c>
		}
		while (ofs > bcs) {				/* Cluster following loop */
			clst = get_fat(clst);		/* Follow cluster chain */
    293e:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <get_fat>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
    2942:	62 30       	cpi	r22, 0x02	; 2
    2944:	71 05       	cpc	r23, r1
    2946:	81 05       	cpc	r24, r1
    2948:	91 05       	cpc	r25, r1
    294a:	08 f4       	brcc	.+2      	; 0x294e <pf_lseek+0x14c>
    294c:	65 c0       	rjmp	.+202    	; 0x2a18 <pf_lseek+0x216>
    294e:	ed 81       	ldd	r30, Y+5	; 0x05
    2950:	fe 81       	ldd	r31, Y+6	; 0x06
    2952:	40 84       	ldd	r4, Z+8	; 0x08
    2954:	51 84       	ldd	r5, Z+9	; 0x09
    2956:	62 84       	ldd	r6, Z+10	; 0x0a
    2958:	73 84       	ldd	r7, Z+11	; 0x0b
    295a:	64 15       	cp	r22, r4
    295c:	75 05       	cpc	r23, r5
    295e:	86 05       	cpc	r24, r6
    2960:	97 05       	cpc	r25, r7
    2962:	08 f0       	brcs	.+2      	; 0x2966 <pf_lseek+0x164>
    2964:	59 c0       	rjmp	.+178    	; 0x2a18 <pf_lseek+0x216>
			fs->curr_clust = clst;
    2966:	64 a3       	std	Z+36, r22	; 0x24
    2968:	75 a3       	std	Z+37, r23	; 0x25
    296a:	86 a3       	std	Z+38, r24	; 0x26
    296c:	97 a3       	std	Z+39, r25	; 0x27
			fs->fptr += bcs;
    296e:	40 8c       	ldd	r4, Z+24	; 0x18
    2970:	51 8c       	ldd	r5, Z+25	; 0x19
    2972:	62 8c       	ldd	r6, Z+26	; 0x1a
    2974:	73 8c       	ldd	r7, Z+27	; 0x1b
    2976:	48 0c       	add	r4, r8
    2978:	59 1c       	adc	r5, r9
    297a:	6a 1c       	adc	r6, r10
    297c:	7b 1c       	adc	r7, r11
    297e:	40 8e       	std	Z+24, r4	; 0x18
    2980:	51 8e       	std	Z+25, r5	; 0x19
    2982:	62 8e       	std	Z+26, r6	; 0x1a
    2984:	73 8e       	std	Z+27, r7	; 0x1b
			ofs -= bcs;
    2986:	c8 18       	sub	r12, r8
    2988:	d9 08       	sbc	r13, r9
    298a:	ea 08       	sbc	r14, r10
    298c:	fb 08       	sbc	r15, r11
			clst = fs->curr_clust;
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
			fs->curr_clust = clst;
		}
		while (ofs > bcs) {				/* Cluster following loop */
    298e:	8c 14       	cp	r8, r12
    2990:	9d 04       	cpc	r9, r13
    2992:	ae 04       	cpc	r10, r14
    2994:	bf 04       	cpc	r11, r15
    2996:	98 f2       	brcs	.-90     	; 0x293e <pf_lseek+0x13c>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
			fs->curr_clust = clst;
			fs->fptr += bcs;
			ofs -= bcs;
		}
		fs->fptr += ofs;
    2998:	ad 81       	ldd	r26, Y+5	; 0x05
    299a:	be 81       	ldd	r27, Y+6	; 0x06
    299c:	58 96       	adiw	r26, 0x18	; 24
    299e:	8d 90       	ld	r8, X+
    29a0:	9d 90       	ld	r9, X+
    29a2:	ad 90       	ld	r10, X+
    29a4:	bc 90       	ld	r11, X
    29a6:	5b 97       	sbiw	r26, 0x1b	; 27
    29a8:	8c 0c       	add	r8, r12
    29aa:	9d 1c       	adc	r9, r13
    29ac:	ae 1c       	adc	r10, r14
    29ae:	bf 1c       	adc	r11, r15
    29b0:	fd 01       	movw	r30, r26
    29b2:	80 8e       	std	Z+24, r8	; 0x18
    29b4:	91 8e       	std	Z+25, r9	; 0x19
    29b6:	a2 8e       	std	Z+26, r10	; 0x1a
    29b8:	b3 8e       	std	Z+27, r11	; 0x1b
		sect = clust2sect(clst);		/* Current sector */
    29ba:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <clust2sect>
		if (!sect) goto fe_abort;
    29be:	61 15       	cp	r22, r1
    29c0:	71 05       	cpc	r23, r1
    29c2:	81 05       	cpc	r24, r1
    29c4:	91 05       	cpc	r25, r1
    29c6:	41 f1       	breq	.+80     	; 0x2a18 <pf_lseek+0x216>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
    29c8:	46 01       	movw	r8, r12
    29ca:	57 01       	movw	r10, r14
    29cc:	07 2e       	mov	r0, r23
    29ce:	79 e0       	ldi	r23, 0x09	; 9
    29d0:	b6 94       	lsr	r11
    29d2:	a7 94       	ror	r10
    29d4:	97 94       	ror	r9
    29d6:	87 94       	ror	r8
    29d8:	7a 95       	dec	r23
    29da:	d1 f7       	brne	.-12     	; 0x29d0 <pf_lseek+0x1ce>
    29dc:	70 2d       	mov	r23, r0
    29de:	ad 81       	ldd	r26, Y+5	; 0x05
    29e0:	be 81       	ldd	r27, Y+6	; 0x06
    29e2:	13 96       	adiw	r26, 0x03	; 3
    29e4:	8c 92       	st	X, r8
		if (ofs % 512)
    29e6:	b1 e0       	ldi	r27, 0x01	; 1
    29e8:	db 22       	and	r13, r27
    29ea:	ee 24       	eor	r14, r14
    29ec:	ff 24       	eor	r15, r15
    29ee:	cd 28       	or	r12, r13
    29f0:	ce 28       	or	r12, r14
    29f2:	cf 28       	or	r12, r15
    29f4:	e9 f0       	breq	.+58     	; 0x2a30 <pf_lseek+0x22e>
			fs->dsect = sect + fs->csect++;
    29f6:	21 e0       	ldi	r18, 0x01	; 1
    29f8:	28 0d       	add	r18, r8
    29fa:	ed 81       	ldd	r30, Y+5	; 0x05
    29fc:	fe 81       	ldd	r31, Y+6	; 0x06
    29fe:	23 83       	std	Z+3, r18	; 0x03
    2a00:	dc 01       	movw	r26, r24
    2a02:	cb 01       	movw	r24, r22
    2a04:	88 0d       	add	r24, r8
    2a06:	91 1d       	adc	r25, r1
    2a08:	a1 1d       	adc	r26, r1
    2a0a:	b1 1d       	adc	r27, r1
    2a0c:	80 a7       	std	Z+40, r24	; 0x28
    2a0e:	91 a7       	std	Z+41, r25	; 0x29
    2a10:	a2 a7       	std	Z+42, r26	; 0x2a
    2a12:	b3 a7       	std	Z+43, r27	; 0x2b
	}

	return FR_OK;
    2a14:	80 e0       	ldi	r24, 0x00	; 0
    2a16:	0d c0       	rjmp	.+26     	; 0x2a32 <pf_lseek+0x230>

fe_abort:
	fs->flag = 0;
    2a18:	ad 81       	ldd	r26, Y+5	; 0x05
    2a1a:	be 81       	ldd	r27, Y+6	; 0x06
    2a1c:	12 96       	adiw	r26, 0x02	; 2
    2a1e:	1c 92       	st	X, r1
	return FR_DISK_ERR;
    2a20:	81 e0       	ldi	r24, 0x01	; 1
    2a22:	07 c0       	rjmp	.+14     	; 0x2a32 <pf_lseek+0x230>
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    2a24:	86 e0       	ldi	r24, 0x06	; 6
    2a26:	05 c0       	rjmp	.+10     	; 0x2a32 <pf_lseek+0x230>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
			return FR_NOT_OPENED;
    2a28:	85 e0       	ldi	r24, 0x05	; 5
    2a2a:	03 c0       	rjmp	.+6      	; 0x2a32 <pf_lseek+0x230>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
		if (ofs % 512)
			fs->dsect = sect + fs->csect++;
	}

	return FR_OK;
    2a2c:	80 e0       	ldi	r24, 0x00	; 0
    2a2e:	01 c0       	rjmp	.+2      	; 0x2a32 <pf_lseek+0x230>
    2a30:	80 e0       	ldi	r24, 0x00	; 0

fe_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    2a32:	26 96       	adiw	r28, 0x06	; 6
    2a34:	0f b6       	in	r0, 0x3f	; 63
    2a36:	f8 94       	cli
    2a38:	de bf       	out	0x3e, r29	; 62
    2a3a:	0f be       	out	0x3f, r0	; 63
    2a3c:	cd bf       	out	0x3d, r28	; 61
    2a3e:	df 91       	pop	r29
    2a40:	cf 91       	pop	r28
    2a42:	ff 90       	pop	r15
    2a44:	ef 90       	pop	r14
    2a46:	df 90       	pop	r13
    2a48:	cf 90       	pop	r12
    2a4a:	bf 90       	pop	r11
    2a4c:	af 90       	pop	r10
    2a4e:	9f 90       	pop	r9
    2a50:	8f 90       	pop	r8
    2a52:	7f 90       	pop	r7
    2a54:	6f 90       	pop	r6
    2a56:	5f 90       	pop	r5
    2a58:	4f 90       	pop	r4
    2a5a:	08 95       	ret

00002a5c <RTC_ConvertFromDec>:
	unsigned char ch = ((c/10)<<4)|(c%10);
	return ch;
}
unsigned char RTC_ConvertFromDec(unsigned char c)//перевод в десятичный формат
{
	unsigned char ch = ((c>>4)*10+(0b00001111&c));
    2a5c:	98 2f       	mov	r25, r24
    2a5e:	92 95       	swap	r25
    2a60:	9f 70       	andi	r25, 0x0F	; 15
    2a62:	99 0f       	add	r25, r25
    2a64:	29 2f       	mov	r18, r25
    2a66:	22 0f       	add	r18, r18
    2a68:	22 0f       	add	r18, r18
    2a6a:	92 0f       	add	r25, r18
    2a6c:	8f 70       	andi	r24, 0x0F	; 15
	return ch;
}
    2a6e:	89 0f       	add	r24, r25
    2a70:	08 95       	ret

00002a72 <RTC_init>:
// инициализация начальных установок
void RTC_init(void){
	I2C_StartCondition();               // запуск i2c
    2a72:	0e 94 93 15 	call	0x2b26	; 0x2b26 <I2C_StartCondition>
	I2C_SendByte(0b11010000);   // передача адреса устройства, режим записи
    2a76:	80 ed       	ldi	r24, 0xD0	; 208
    2a78:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <I2C_SendByte>
	I2C_SendByte(0x0E);            // передача адреса памяти
    2a7c:	8e e0       	ldi	r24, 0x0E	; 14
    2a7e:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <I2C_SendByte>
	I2C_SendByte(0b00100000);      // запустить преобразование температуры и выход на 1 Гц
    2a82:	80 e2       	ldi	r24, 0x20	; 32
    2a84:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <I2C_SendByte>
	I2C_SendByte(0b00001000);      // разрешить выход 32 кГц
    2a88:	88 e0       	ldi	r24, 0x08	; 8
    2a8a:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    2a8e:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <I2C_StopCondition>
    2a92:	08 95       	ret

00002a94 <read_symbol_from_SD>:
}
//—————————————-
*/

uint8_t read_symbol_from_SD (uint16_t symbol)
{
    2a94:	0f 93       	push	r16
    2a96:	1f 93       	push	r17
    2a98:	cf 93       	push	r28
    2a9a:	df 93       	push	r29
    2a9c:	cd b7       	in	r28, 0x3d	; 61
    2a9e:	de b7       	in	r29, 0x3e	; 62
    2aa0:	2d 97       	sbiw	r28, 0x0d	; 13
    2aa2:	0f b6       	in	r0, 0x3f	; 63
    2aa4:	f8 94       	cli
    2aa6:	de bf       	out	0x3e, r29	; 62
    2aa8:	0f be       	out	0x3f, r0	; 63
    2aaa:	cd bf       	out	0x3d, r28	; 61
	WORD s1;
	uint8_t result;
	char buffer[10] = {};
    2aac:	8e 01       	movw	r16, r28
    2aae:	0c 5f       	subi	r16, 0xFC	; 252
    2ab0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab2:	2a e0       	ldi	r18, 0x0A	; 10
    2ab4:	f8 01       	movw	r30, r16
    2ab6:	11 92       	st	Z+, r1
    2ab8:	2a 95       	dec	r18
    2aba:	e9 f7       	brne	.-6      	; 0x2ab6 <read_symbol_from_SD+0x22>

	pf_lseek(6*symbol); //Установим курсор чтения на 0 
    2abc:	bc 01       	movw	r22, r24
    2abe:	66 0f       	add	r22, r22
    2ac0:	77 1f       	adc	r23, r23
    2ac2:	68 0f       	add	r22, r24
    2ac4:	79 1f       	adc	r23, r25
    2ac6:	66 0f       	add	r22, r22
    2ac8:	77 1f       	adc	r23, r23
    2aca:	80 e0       	ldi	r24, 0x00	; 0
    2acc:	90 e0       	ldi	r25, 0x00	; 0
    2ace:	0e 94 01 14 	call	0x2802	; 0x2802 <pf_lseek>
	pf_read(buffer,4,&s1);
    2ad2:	ae 01       	movw	r20, r28
    2ad4:	4f 5f       	subi	r20, 0xFF	; 255
    2ad6:	5f 4f       	sbci	r21, 0xFF	; 255
    2ad8:	64 e0       	ldi	r22, 0x04	; 4
    2ada:	70 e0       	ldi	r23, 0x00	; 0
    2adc:	c8 01       	movw	r24, r16
    2ade:	0e 94 10 13 	call	0x2620	; 0x2620 <pf_read>
	sscanf(buffer, "%x", &result);
    2ae2:	ce 01       	movw	r24, r28
    2ae4:	03 96       	adiw	r24, 0x03	; 3
    2ae6:	9f 93       	push	r25
    2ae8:	8f 93       	push	r24
    2aea:	85 e3       	ldi	r24, 0x35	; 53
    2aec:	91 e0       	ldi	r25, 0x01	; 1
    2aee:	9f 93       	push	r25
    2af0:	8f 93       	push	r24
    2af2:	1f 93       	push	r17
    2af4:	0f 93       	push	r16
    2af6:	0e 94 98 25 	call	0x4b30	; 0x4b30 <sscanf>

	return result;
    2afa:	0f 90       	pop	r0
    2afc:	0f 90       	pop	r0
    2afe:	0f 90       	pop	r0
    2b00:	0f 90       	pop	r0
    2b02:	0f 90       	pop	r0
    2b04:	0f 90       	pop	r0
    2b06:	8b 81       	ldd	r24, Y+3	; 0x03
    2b08:	2d 96       	adiw	r28, 0x0d	; 13
    2b0a:	0f b6       	in	r0, 0x3f	; 63
    2b0c:	f8 94       	cli
    2b0e:	de bf       	out	0x3e, r29	; 62
    2b10:	0f be       	out	0x3f, r0	; 63
    2b12:	cd bf       	out	0x3d, r28	; 61
    2b14:	df 91       	pop	r29
    2b16:	cf 91       	pop	r28
    2b18:	1f 91       	pop	r17
    2b1a:	0f 91       	pop	r16
    2b1c:	08 95       	ret

00002b1e <I2C_Init>:
{
    I2C_StartCondition(); // Отправим условие START
	I2C_SendByte(addr); // Отправим в шину адрес устройства + бит чтения-записи
	I2C_SendByte(c);// Отправим байт данных
	I2C_StopCondition();// Отправим условие STOP
}
    2b1e:	88 e4       	ldi	r24, 0x48	; 72
    2b20:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    2b24:	08 95       	ret

00002b26 <I2C_StartCondition>:
    2b26:	84 ea       	ldi	r24, 0xA4	; 164
    2b28:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2b2c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2b30:	88 23       	and	r24, r24
    2b32:	e4 f7       	brge	.-8      	; 0x2b2c <I2C_StartCondition+0x6>
    2b34:	08 95       	ret

00002b36 <I2C_StopCondition>:
    2b36:	84 e9       	ldi	r24, 0x94	; 148
    2b38:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2b3c:	08 95       	ret

00002b3e <I2C_SendByte>:
    2b3e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2b42:	84 e8       	ldi	r24, 0x84	; 132
    2b44:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2b48:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2b4c:	88 23       	and	r24, r24
    2b4e:	e4 f7       	brge	.-8      	; 0x2b48 <I2C_SendByte+0xa>
    2b50:	08 95       	ret

00002b52 <I2C_ReadByte>:
unsigned char I2C_ReadByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
    2b52:	84 ec       	ldi	r24, 0xC4	; 196
    2b54:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    2b58:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2b5c:	88 23       	and	r24, r24
    2b5e:	e4 f7       	brge	.-8      	; 0x2b58 <I2C_ReadByte+0x6>
	return TWDR;//читаем регистр данных
    2b60:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
    2b64:	08 95       	ret

00002b66 <I2C_ReadLastByte>:
unsigned char I2C_ReadLastByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
    2b66:	84 e8       	ldi	r24, 0x84	; 132
    2b68:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    2b6c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2b70:	88 23       	and	r24, r24
    2b72:	e4 f7       	brge	.-8      	; 0x2b6c <I2C_ReadLastByte+0x6>
	return TWDR;//читаем регистр данных
    2b74:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2b78:	08 95       	ret

00002b7a <USART_Init>:
 */ 
#include "usart.h"

void USART_Init( unsigned int speed)//Инициализация модуля USART
{	
  UBRR0H = (unsigned char)(speed>>8);
    2b7a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  UBRR0L = (unsigned char)speed;
    2b7e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  UCSR0B=(1<<RXEN0)|( 1<<TXEN0); //Включаем прием и передачу по USART
    2b82:	e1 ec       	ldi	r30, 0xC1	; 193
    2b84:	f0 e0       	ldi	r31, 0x00	; 0
    2b86:	88 e1       	ldi	r24, 0x18	; 24
    2b88:	80 83       	st	Z, r24
  UCSR0B |= (1<<RXCIE0); //Разрешаем прерывание при приеме
    2b8a:	80 81       	ld	r24, Z
    2b8c:	80 68       	ori	r24, 0x80	; 128
    2b8e:	80 83       	st	Z, r24
  UCSR0A |= (1<<U2X0); // Для 8 мгц, удвоение скорости
    2b90:	e0 ec       	ldi	r30, 0xC0	; 192
    2b92:	f0 e0       	ldi	r31, 0x00	; 0
    2b94:	80 81       	ld	r24, Z
    2b96:	82 60       	ori	r24, 0x02	; 2
    2b98:	80 83       	st	Z, r24
  UCSR0C |= (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);// Обращаемся именно к регистру UCSRC (URSEL=1),
    2b9a:	e2 ec       	ldi	r30, 0xC2	; 194
    2b9c:	f0 e0       	ldi	r31, 0x00	; 0
    2b9e:	80 81       	ld	r24, Z
    2ba0:	8e 60       	ori	r24, 0x0E	; 14
    2ba2:	80 83       	st	Z, r24
    2ba4:	08 95       	ret

00002ba6 <USART_Transmit>:
  //ассинхронный режим (UMSEL=0), без контроля четности (UPM1=0 и UPM0=0),
  //2 стоп-бит (USBS=1), 8-бит посылка (UCSZ1=1 и UCSZ0=1)
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
    2ba6:	dc 01       	movw	r26, r24
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    2ba8:	80 e0       	ldi	r24, 0x00	; 0
    2baa:	0b c0       	rjmp	.+22     	; 0x2bc2 <USART_Transmit+0x1c>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
    2bac:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2bb0:	95 ff       	sbrs	r25, 5
    2bb2:	fc cf       	rjmp	.-8      	; 0x2bac <USART_Transmit+0x6>
	  UDR0 = data[i]; //Начало передачи данных
    2bb4:	fd 01       	movw	r30, r26
    2bb6:	e2 0f       	add	r30, r18
    2bb8:	f3 1f       	adc	r31, r19
    2bba:	90 81       	ld	r25, Z
    2bbc:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    2bc0:	8f 5f       	subi	r24, 0xFF	; 255
    2bc2:	28 2f       	mov	r18, r24
    2bc4:	30 e0       	ldi	r19, 0x00	; 0
    2bc6:	fd 01       	movw	r30, r26
    2bc8:	01 90       	ld	r0, Z+
    2bca:	00 20       	and	r0, r0
    2bcc:	e9 f7       	brne	.-6      	; 0x2bc8 <USART_Transmit+0x22>
    2bce:	31 97       	sbiw	r30, 0x01	; 1
    2bd0:	ea 1b       	sub	r30, r26
    2bd2:	fb 0b       	sbc	r31, r27
    2bd4:	2e 17       	cp	r18, r30
    2bd6:	3f 07       	cpc	r19, r31
    2bd8:	48 f3       	brcs	.-46     	; 0x2bac <USART_Transmit+0x6>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
	  UDR0 = data[i]; //Начало передачи данных
  }

}
    2bda:	08 95       	ret

00002bdc <Clock>:
	LCD_12864_GrapnicMode(0);
}
void Clock (void)
{		
	//Читаем время (для DS3231) - по сути функция RTC_read_time
	I2C_StartCondition();               // запуск i2c
    2bdc:	0e 94 93 15 	call	0x2b26	; 0x2b26 <I2C_StartCondition>
	I2C_SendByte(0b11010000);			// передача адреса устройства, режим записи
    2be0:	80 ed       	ldi	r24, 0xD0	; 208
    2be2:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <I2C_SendByte>
	I2C_SendByte(0x00);				    // передача адреса памяти
    2be6:	80 e0       	ldi	r24, 0x00	; 0
    2be8:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    2bec:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <I2C_StopCondition>
	
	I2C_StartCondition();               // запуск i2c
    2bf0:	0e 94 93 15 	call	0x2b26	; 0x2b26 <I2C_StartCondition>
	I2C_SendByte(0b11010001);			// передача адреса устройства, режим чтения
    2bf4:	81 ed       	ldi	r24, 0xD1	; 209
    2bf6:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <I2C_SendByte>
	sec = RTC_ConvertFromDec(I2C_ReadByte());     // чтение секунд, ACK
    2bfa:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <I2C_ReadByte>
    2bfe:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <RTC_ConvertFromDec>
    2c02:	80 93 d1 06 	sts	0x06D1, r24	; 0x8006d1 <sec>
	min = RTC_ConvertFromDec(I2C_ReadByte());     // чтение минут, ACK
    2c06:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <I2C_ReadByte>
    2c0a:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <RTC_ConvertFromDec>
    2c0e:	80 93 cb 06 	sts	0x06CB, r24	; 0x8006cb <min>
	hour = RTC_ConvertFromDec(I2C_ReadByte());    // чтение часов, ACK
    2c12:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <I2C_ReadByte>
    2c16:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <RTC_ConvertFromDec>
    2c1a:	80 93 c4 06 	sts	0x06C4, r24	; 0x8006c4 <hour>
	day = RTC_ConvertFromDec(I2C_ReadByte());     // чтение день недели, ACK
    2c1e:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <I2C_ReadByte>
    2c22:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <RTC_ConvertFromDec>
    2c26:	80 93 d2 06 	sts	0x06D2, r24	; 0x8006d2 <day>
	date = RTC_ConvertFromDec(I2C_ReadByte());    // чтение число, ACK
    2c2a:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <I2C_ReadByte>
    2c2e:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <RTC_ConvertFromDec>
    2c32:	80 93 d4 06 	sts	0x06D4, r24	; 0x8006d4 <date>
	month = RTC_ConvertFromDec(I2C_ReadByte());   // чтение месяц, ACK
    2c36:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <I2C_ReadByte>
    2c3a:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <RTC_ConvertFromDec>
    2c3e:	80 93 c3 06 	sts	0x06C3, r24	; 0x8006c3 <month>
	year = RTC_ConvertFromDec(I2C_ReadLastByte());// чтение год, NACK
    2c42:	0e 94 b3 15 	call	0x2b66	; 0x2b66 <I2C_ReadLastByte>
    2c46:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <RTC_ConvertFromDec>
    2c4a:	80 93 d0 06 	sts	0x06D0, r24	; 0x8006d0 <year>
	I2C_StopCondition();                // остановка i2c
    2c4e:	0e 94 9b 15 	call	0x2b36	; 0x2b36 <I2C_StopCondition>
	
	if ((sec >= 0) && (sec <= 9)) {
    2c52:	80 91 d1 06 	lds	r24, 0x06D1	; 0x8006d1 <sec>
    2c56:	8a 30       	cpi	r24, 0x0A	; 10
    2c58:	98 f4       	brcc	.+38     	; 0x2c80 <Clock+0xa4>
		sprintf(seconds,"0%d",sec);
    2c5a:	1f 92       	push	r1
    2c5c:	8f 93       	push	r24
    2c5e:	81 e7       	ldi	r24, 0x71	; 113
    2c60:	91 e0       	ldi	r25, 0x01	; 1
    2c62:	9f 93       	push	r25
    2c64:	8f 93       	push	r24
    2c66:	82 eb       	ldi	r24, 0xB2	; 178
    2c68:	96 e0       	ldi	r25, 0x06	; 6
    2c6a:	9f 93       	push	r25
    2c6c:	8f 93       	push	r24
    2c6e:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2c72:	0f 90       	pop	r0
    2c74:	0f 90       	pop	r0
    2c76:	0f 90       	pop	r0
    2c78:	0f 90       	pop	r0
    2c7a:	0f 90       	pop	r0
    2c7c:	0f 90       	pop	r0
    2c7e:	12 c0       	rjmp	.+36     	; 0x2ca4 <Clock+0xc8>
	}
	else {
		sprintf(seconds,"%d",sec);
    2c80:	1f 92       	push	r1
    2c82:	8f 93       	push	r24
    2c84:	82 e7       	ldi	r24, 0x72	; 114
    2c86:	91 e0       	ldi	r25, 0x01	; 1
    2c88:	9f 93       	push	r25
    2c8a:	8f 93       	push	r24
    2c8c:	82 eb       	ldi	r24, 0xB2	; 178
    2c8e:	96 e0       	ldi	r25, 0x06	; 6
    2c90:	9f 93       	push	r25
    2c92:	8f 93       	push	r24
    2c94:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2c98:	0f 90       	pop	r0
    2c9a:	0f 90       	pop	r0
    2c9c:	0f 90       	pop	r0
    2c9e:	0f 90       	pop	r0
    2ca0:	0f 90       	pop	r0
    2ca2:	0f 90       	pop	r0
	}
	if ((min >= 0) && (min <= 9)) {
    2ca4:	80 91 cb 06 	lds	r24, 0x06CB	; 0x8006cb <min>
    2ca8:	8a 30       	cpi	r24, 0x0A	; 10
    2caa:	98 f4       	brcc	.+38     	; 0x2cd2 <Clock+0xf6>
		sprintf(minutes,"0%d",min);
    2cac:	1f 92       	push	r1
    2cae:	8f 93       	push	r24
    2cb0:	81 e7       	ldi	r24, 0x71	; 113
    2cb2:	91 e0       	ldi	r25, 0x01	; 1
    2cb4:	9f 93       	push	r25
    2cb6:	8f 93       	push	r24
    2cb8:	87 eb       	ldi	r24, 0xB7	; 183
    2cba:	96 e0       	ldi	r25, 0x06	; 6
    2cbc:	9f 93       	push	r25
    2cbe:	8f 93       	push	r24
    2cc0:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2cc4:	0f 90       	pop	r0
    2cc6:	0f 90       	pop	r0
    2cc8:	0f 90       	pop	r0
    2cca:	0f 90       	pop	r0
    2ccc:	0f 90       	pop	r0
    2cce:	0f 90       	pop	r0
    2cd0:	12 c0       	rjmp	.+36     	; 0x2cf6 <Clock+0x11a>
	}
	else {
		sprintf(minutes,"%d",min);
    2cd2:	1f 92       	push	r1
    2cd4:	8f 93       	push	r24
    2cd6:	82 e7       	ldi	r24, 0x72	; 114
    2cd8:	91 e0       	ldi	r25, 0x01	; 1
    2cda:	9f 93       	push	r25
    2cdc:	8f 93       	push	r24
    2cde:	87 eb       	ldi	r24, 0xB7	; 183
    2ce0:	96 e0       	ldi	r25, 0x06	; 6
    2ce2:	9f 93       	push	r25
    2ce4:	8f 93       	push	r24
    2ce6:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2cea:	0f 90       	pop	r0
    2cec:	0f 90       	pop	r0
    2cee:	0f 90       	pop	r0
    2cf0:	0f 90       	pop	r0
    2cf2:	0f 90       	pop	r0
    2cf4:	0f 90       	pop	r0
	}
	if ((hour >= 0) && (hour <= 9)) {
    2cf6:	80 91 c4 06 	lds	r24, 0x06C4	; 0x8006c4 <hour>
    2cfa:	8a 30       	cpi	r24, 0x0A	; 10
    2cfc:	98 f4       	brcc	.+38     	; 0x2d24 <Clock+0x148>
		sprintf(hours,"0%d",hour);
    2cfe:	1f 92       	push	r1
    2d00:	8f 93       	push	r24
    2d02:	81 e7       	ldi	r24, 0x71	; 113
    2d04:	91 e0       	ldi	r25, 0x01	; 1
    2d06:	9f 93       	push	r25
    2d08:	8f 93       	push	r24
    2d0a:	8b eb       	ldi	r24, 0xBB	; 187
    2d0c:	96 e0       	ldi	r25, 0x06	; 6
    2d0e:	9f 93       	push	r25
    2d10:	8f 93       	push	r24
    2d12:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2d16:	0f 90       	pop	r0
    2d18:	0f 90       	pop	r0
    2d1a:	0f 90       	pop	r0
    2d1c:	0f 90       	pop	r0
    2d1e:	0f 90       	pop	r0
    2d20:	0f 90       	pop	r0
    2d22:	12 c0       	rjmp	.+36     	; 0x2d48 <Clock+0x16c>
	}
	else {
		sprintf(hours,"%d",hour);
    2d24:	1f 92       	push	r1
    2d26:	8f 93       	push	r24
    2d28:	82 e7       	ldi	r24, 0x72	; 114
    2d2a:	91 e0       	ldi	r25, 0x01	; 1
    2d2c:	9f 93       	push	r25
    2d2e:	8f 93       	push	r24
    2d30:	8b eb       	ldi	r24, 0xBB	; 187
    2d32:	96 e0       	ldi	r25, 0x06	; 6
    2d34:	9f 93       	push	r25
    2d36:	8f 93       	push	r24
    2d38:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2d3c:	0f 90       	pop	r0
    2d3e:	0f 90       	pop	r0
    2d40:	0f 90       	pop	r0
    2d42:	0f 90       	pop	r0
    2d44:	0f 90       	pop	r0
    2d46:	0f 90       	pop	r0
	}
	if ((date >= 0) && (date <= 9)) {
    2d48:	80 91 d4 06 	lds	r24, 0x06D4	; 0x8006d4 <date>
    2d4c:	8a 30       	cpi	r24, 0x0A	; 10
    2d4e:	98 f4       	brcc	.+38     	; 0x2d76 <Clock+0x19a>
		sprintf(mounthday,"0%d",date);
    2d50:	1f 92       	push	r1
    2d52:	8f 93       	push	r24
    2d54:	81 e7       	ldi	r24, 0x71	; 113
    2d56:	91 e0       	ldi	r25, 0x01	; 1
    2d58:	9f 93       	push	r25
    2d5a:	8f 93       	push	r24
    2d5c:	8c ec       	ldi	r24, 0xCC	; 204
    2d5e:	96 e0       	ldi	r25, 0x06	; 6
    2d60:	9f 93       	push	r25
    2d62:	8f 93       	push	r24
    2d64:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2d68:	0f 90       	pop	r0
    2d6a:	0f 90       	pop	r0
    2d6c:	0f 90       	pop	r0
    2d6e:	0f 90       	pop	r0
    2d70:	0f 90       	pop	r0
    2d72:	0f 90       	pop	r0
    2d74:	12 c0       	rjmp	.+36     	; 0x2d9a <Clock+0x1be>
	}
	else {
		sprintf(mounthday,"%d",date);
    2d76:	1f 92       	push	r1
    2d78:	8f 93       	push	r24
    2d7a:	82 e7       	ldi	r24, 0x72	; 114
    2d7c:	91 e0       	ldi	r25, 0x01	; 1
    2d7e:	9f 93       	push	r25
    2d80:	8f 93       	push	r24
    2d82:	8c ec       	ldi	r24, 0xCC	; 204
    2d84:	96 e0       	ldi	r25, 0x06	; 6
    2d86:	9f 93       	push	r25
    2d88:	8f 93       	push	r24
    2d8a:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
    2d8e:	0f 90       	pop	r0
    2d90:	0f 90       	pop	r0
    2d92:	0f 90       	pop	r0
    2d94:	0f 90       	pop	r0
    2d96:	0f 90       	pop	r0
    2d98:	0f 90       	pop	r0
	}
	switch (day)
    2d9a:	e0 91 d2 06 	lds	r30, 0x06D2	; 0x8006d2 <day>
    2d9e:	8e 2f       	mov	r24, r30
    2da0:	90 e0       	ldi	r25, 0x00	; 0
    2da2:	fc 01       	movw	r30, r24
    2da4:	31 97       	sbiw	r30, 0x01	; 1
    2da6:	e7 30       	cpi	r30, 0x07	; 7
    2da8:	f1 05       	cpc	r31, r1
    2daa:	d8 f5       	brcc	.+118    	; 0x2e22 <Clock+0x246>
    2dac:	ec 5c       	subi	r30, 0xCC	; 204
    2dae:	ff 4f       	sbci	r31, 0xFF	; 255
    2db0:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__tablejump2__>
	{
		case 1:
			sprintf(weakday,"Пн");
    2db4:	ef eb       	ldi	r30, 0xBF	; 191
    2db6:	f6 e0       	ldi	r31, 0x06	; 6
    2db8:	8f ec       	ldi	r24, 0xCF	; 207
    2dba:	9d ee       	ldi	r25, 0xED	; 237
    2dbc:	91 83       	std	Z+1, r25	; 0x01
    2dbe:	80 83       	st	Z, r24
    2dc0:	12 82       	std	Z+2, r1	; 0x02
			break;
    2dc2:	2f c0       	rjmp	.+94     	; 0x2e22 <Clock+0x246>
		case 2:
			sprintf(weakday,"Вт");
    2dc4:	ef eb       	ldi	r30, 0xBF	; 191
    2dc6:	f6 e0       	ldi	r31, 0x06	; 6
    2dc8:	82 ec       	ldi	r24, 0xC2	; 194
    2dca:	92 ef       	ldi	r25, 0xF2	; 242
    2dcc:	91 83       	std	Z+1, r25	; 0x01
    2dce:	80 83       	st	Z, r24
    2dd0:	12 82       	std	Z+2, r1	; 0x02
			break;
    2dd2:	27 c0       	rjmp	.+78     	; 0x2e22 <Clock+0x246>
		case 3:
			sprintf(weakday,"Ср");
    2dd4:	ef eb       	ldi	r30, 0xBF	; 191
    2dd6:	f6 e0       	ldi	r31, 0x06	; 6
    2dd8:	81 ed       	ldi	r24, 0xD1	; 209
    2dda:	90 ef       	ldi	r25, 0xF0	; 240
    2ddc:	91 83       	std	Z+1, r25	; 0x01
    2dde:	80 83       	st	Z, r24
    2de0:	12 82       	std	Z+2, r1	; 0x02
			break;
    2de2:	1f c0       	rjmp	.+62     	; 0x2e22 <Clock+0x246>
		case 4:
			sprintf(weakday,"Чт");
    2de4:	ef eb       	ldi	r30, 0xBF	; 191
    2de6:	f6 e0       	ldi	r31, 0x06	; 6
    2de8:	87 ed       	ldi	r24, 0xD7	; 215
    2dea:	92 ef       	ldi	r25, 0xF2	; 242
    2dec:	91 83       	std	Z+1, r25	; 0x01
    2dee:	80 83       	st	Z, r24
    2df0:	12 82       	std	Z+2, r1	; 0x02
			break;
    2df2:	17 c0       	rjmp	.+46     	; 0x2e22 <Clock+0x246>
		case 5:
			sprintf(weakday,"Пт");
    2df4:	ef eb       	ldi	r30, 0xBF	; 191
    2df6:	f6 e0       	ldi	r31, 0x06	; 6
    2df8:	8f ec       	ldi	r24, 0xCF	; 207
    2dfa:	92 ef       	ldi	r25, 0xF2	; 242
    2dfc:	91 83       	std	Z+1, r25	; 0x01
    2dfe:	80 83       	st	Z, r24
    2e00:	12 82       	std	Z+2, r1	; 0x02
			break;
    2e02:	0f c0       	rjmp	.+30     	; 0x2e22 <Clock+0x246>
		case 6:
			sprintf(weakday,"Сб");
    2e04:	ef eb       	ldi	r30, 0xBF	; 191
    2e06:	f6 e0       	ldi	r31, 0x06	; 6
    2e08:	81 ed       	ldi	r24, 0xD1	; 209
    2e0a:	91 ee       	ldi	r25, 0xE1	; 225
    2e0c:	91 83       	std	Z+1, r25	; 0x01
    2e0e:	80 83       	st	Z, r24
    2e10:	12 82       	std	Z+2, r1	; 0x02
			break;
    2e12:	07 c0       	rjmp	.+14     	; 0x2e22 <Clock+0x246>
		case 7:
			sprintf(weakday,"Вс");
    2e14:	ef eb       	ldi	r30, 0xBF	; 191
    2e16:	f6 e0       	ldi	r31, 0x06	; 6
    2e18:	82 ec       	ldi	r24, 0xC2	; 194
    2e1a:	91 ef       	ldi	r25, 0xF1	; 241
    2e1c:	91 83       	std	Z+1, r25	; 0x01
    2e1e:	80 83       	st	Z, r24
    2e20:	12 82       	std	Z+2, r1	; 0x02
			break;
		default:
			break;
	}
	switch (month)
    2e22:	e0 91 c3 06 	lds	r30, 0x06C3	; 0x8006c3 <month>
    2e26:	8e 2f       	mov	r24, r30
    2e28:	90 e0       	ldi	r25, 0x00	; 0
    2e2a:	fc 01       	movw	r30, r24
    2e2c:	31 97       	sbiw	r30, 0x01	; 1
    2e2e:	ec 30       	cpi	r30, 0x0C	; 12
    2e30:	f1 05       	cpc	r31, r1
    2e32:	08 f0       	brcs	.+2      	; 0x2e36 <Clock+0x25a>
    2e34:	7c c0       	rjmp	.+248    	; 0x2f2e <Clock+0x352>
    2e36:	e5 5c       	subi	r30, 0xC5	; 197
    2e38:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3a:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__tablejump2__>
	{
		case 1:
		sprintf(Mounth,"Янв.");
    2e3e:	85 e0       	ldi	r24, 0x05	; 5
    2e40:	e5 e7       	ldi	r30, 0x75	; 117
    2e42:	f1 e0       	ldi	r31, 0x01	; 1
    2e44:	a5 ec       	ldi	r26, 0xC5	; 197
    2e46:	b6 e0       	ldi	r27, 0x06	; 6
    2e48:	01 90       	ld	r0, Z+
    2e4a:	0d 92       	st	X+, r0
    2e4c:	8a 95       	dec	r24
    2e4e:	e1 f7       	brne	.-8      	; 0x2e48 <Clock+0x26c>
		break;
    2e50:	08 95       	ret
		case 2:
		sprintf(Mounth,"Февр.");
    2e52:	86 e0       	ldi	r24, 0x06	; 6
    2e54:	ed e9       	ldi	r30, 0x9D	; 157
    2e56:	f1 e0       	ldi	r31, 0x01	; 1
    2e58:	a5 ec       	ldi	r26, 0xC5	; 197
    2e5a:	b6 e0       	ldi	r27, 0x06	; 6
    2e5c:	01 90       	ld	r0, Z+
    2e5e:	0d 92       	st	X+, r0
    2e60:	8a 95       	dec	r24
    2e62:	e1 f7       	brne	.-8      	; 0x2e5c <Clock+0x280>
		break;
    2e64:	08 95       	ret
		case 3:
		sprintf(Mounth,"Март");
    2e66:	85 e0       	ldi	r24, 0x05	; 5
    2e68:	ea e7       	ldi	r30, 0x7A	; 122
    2e6a:	f1 e0       	ldi	r31, 0x01	; 1
    2e6c:	a5 ec       	ldi	r26, 0xC5	; 197
    2e6e:	b6 e0       	ldi	r27, 0x06	; 6
    2e70:	01 90       	ld	r0, Z+
    2e72:	0d 92       	st	X+, r0
    2e74:	8a 95       	dec	r24
    2e76:	e1 f7       	brne	.-8      	; 0x2e70 <Clock+0x294>
		break;
    2e78:	08 95       	ret
		case 4:
		sprintf(Mounth,"Апр.");
    2e7a:	85 e0       	ldi	r24, 0x05	; 5
    2e7c:	ef e7       	ldi	r30, 0x7F	; 127
    2e7e:	f1 e0       	ldi	r31, 0x01	; 1
    2e80:	a5 ec       	ldi	r26, 0xC5	; 197
    2e82:	b6 e0       	ldi	r27, 0x06	; 6
    2e84:	01 90       	ld	r0, Z+
    2e86:	0d 92       	st	X+, r0
    2e88:	8a 95       	dec	r24
    2e8a:	e1 f7       	brne	.-8      	; 0x2e84 <Clock+0x2a8>
		break;
    2e8c:	08 95       	ret
		case 5:
		sprintf(Mounth,"Май");
    2e8e:	e5 ec       	ldi	r30, 0xC5	; 197
    2e90:	f6 e0       	ldi	r31, 0x06	; 6
    2e92:	8c ec       	ldi	r24, 0xCC	; 204
    2e94:	90 ee       	ldi	r25, 0xE0	; 224
    2e96:	91 83       	std	Z+1, r25	; 0x01
    2e98:	80 83       	st	Z, r24
    2e9a:	89 ee       	ldi	r24, 0xE9	; 233
    2e9c:	90 e0       	ldi	r25, 0x00	; 0
    2e9e:	93 83       	std	Z+3, r25	; 0x03
    2ea0:	82 83       	std	Z+2, r24	; 0x02
		break;
    2ea2:	08 95       	ret
		case 6:
		sprintf(Mounth,"Июнь");
    2ea4:	85 e0       	ldi	r24, 0x05	; 5
    2ea6:	e4 e8       	ldi	r30, 0x84	; 132
    2ea8:	f1 e0       	ldi	r31, 0x01	; 1
    2eaa:	a5 ec       	ldi	r26, 0xC5	; 197
    2eac:	b6 e0       	ldi	r27, 0x06	; 6
    2eae:	01 90       	ld	r0, Z+
    2eb0:	0d 92       	st	X+, r0
    2eb2:	8a 95       	dec	r24
    2eb4:	e1 f7       	brne	.-8      	; 0x2eae <Clock+0x2d2>
		break;
    2eb6:	08 95       	ret
		case 7:
		sprintf(Mounth,"Июль");
    2eb8:	85 e0       	ldi	r24, 0x05	; 5
    2eba:	e9 e8       	ldi	r30, 0x89	; 137
    2ebc:	f1 e0       	ldi	r31, 0x01	; 1
    2ebe:	a5 ec       	ldi	r26, 0xC5	; 197
    2ec0:	b6 e0       	ldi	r27, 0x06	; 6
    2ec2:	01 90       	ld	r0, Z+
    2ec4:	0d 92       	st	X+, r0
    2ec6:	8a 95       	dec	r24
    2ec8:	e1 f7       	brne	.-8      	; 0x2ec2 <Clock+0x2e6>
		break;
    2eca:	08 95       	ret
		case 8:
		sprintf(Mounth,"Авг.");
    2ecc:	85 e0       	ldi	r24, 0x05	; 5
    2ece:	ee e8       	ldi	r30, 0x8E	; 142
    2ed0:	f1 e0       	ldi	r31, 0x01	; 1
    2ed2:	a5 ec       	ldi	r26, 0xC5	; 197
    2ed4:	b6 e0       	ldi	r27, 0x06	; 6
    2ed6:	01 90       	ld	r0, Z+
    2ed8:	0d 92       	st	X+, r0
    2eda:	8a 95       	dec	r24
    2edc:	e1 f7       	brne	.-8      	; 0x2ed6 <Clock+0x2fa>
		break;
    2ede:	08 95       	ret
		case 9:
		sprintf(Mounth,"Сент.");
    2ee0:	86 e0       	ldi	r24, 0x06	; 6
    2ee2:	e3 ea       	ldi	r30, 0xA3	; 163
    2ee4:	f1 e0       	ldi	r31, 0x01	; 1
    2ee6:	a5 ec       	ldi	r26, 0xC5	; 197
    2ee8:	b6 e0       	ldi	r27, 0x06	; 6
    2eea:	01 90       	ld	r0, Z+
    2eec:	0d 92       	st	X+, r0
    2eee:	8a 95       	dec	r24
    2ef0:	e1 f7       	brne	.-8      	; 0x2eea <Clock+0x30e>
		break;
    2ef2:	08 95       	ret
		case 10:
		sprintf(Mounth,"Окт.");
    2ef4:	85 e0       	ldi	r24, 0x05	; 5
    2ef6:	e3 e9       	ldi	r30, 0x93	; 147
    2ef8:	f1 e0       	ldi	r31, 0x01	; 1
    2efa:	a5 ec       	ldi	r26, 0xC5	; 197
    2efc:	b6 e0       	ldi	r27, 0x06	; 6
    2efe:	01 90       	ld	r0, Z+
    2f00:	0d 92       	st	X+, r0
    2f02:	8a 95       	dec	r24
    2f04:	e1 f7       	brne	.-8      	; 0x2efe <Clock+0x322>
		break;
    2f06:	08 95       	ret
		case 11:
		sprintf(Mounth,"Нояб.");
    2f08:	86 e0       	ldi	r24, 0x06	; 6
    2f0a:	e9 ea       	ldi	r30, 0xA9	; 169
    2f0c:	f1 e0       	ldi	r31, 0x01	; 1
    2f0e:	a5 ec       	ldi	r26, 0xC5	; 197
    2f10:	b6 e0       	ldi	r27, 0x06	; 6
    2f12:	01 90       	ld	r0, Z+
    2f14:	0d 92       	st	X+, r0
    2f16:	8a 95       	dec	r24
    2f18:	e1 f7       	brne	.-8      	; 0x2f12 <Clock+0x336>
		break;
    2f1a:	08 95       	ret
		case 12:
		sprintf(Mounth,"Дек.");
    2f1c:	85 e0       	ldi	r24, 0x05	; 5
    2f1e:	e8 e9       	ldi	r30, 0x98	; 152
    2f20:	f1 e0       	ldi	r31, 0x01	; 1
    2f22:	a5 ec       	ldi	r26, 0xC5	; 197
    2f24:	b6 e0       	ldi	r27, 0x06	; 6
    2f26:	01 90       	ld	r0, Z+
    2f28:	0d 92       	st	X+, r0
    2f2a:	8a 95       	dec	r24
    2f2c:	e1 f7       	brne	.-8      	; 0x2f26 <Clock+0x34a>
    2f2e:	08 95       	ret

00002f30 <RAIN_AMOUNT>:
	}
	
}
//Вычисление кол-ва осадков
float RAIN_AMOUNT(char *adc_value)
{
    2f30:	cf 93       	push	r28
    2f32:	df 93       	push	r29
    2f34:	00 d0       	rcall	.+0      	; 0x2f36 <RAIN_AMOUNT+0x6>
    2f36:	cd b7       	in	r28, 0x3d	; 61
    2f38:	de b7       	in	r29, 0x3e	; 62
	float RAIN;
	int R;
	if (strlen(adc_value) != 0)
    2f3a:	fc 01       	movw	r30, r24
    2f3c:	20 81       	ld	r18, Z
    2f3e:	22 23       	and	r18, r18
    2f40:	a1 f0       	breq	.+40     	; 0x2f6a <RAIN_AMOUNT+0x3a>
	{
		sscanf(adc_value, "%d", &R);
    2f42:	9e 01       	movw	r18, r28
    2f44:	2f 5f       	subi	r18, 0xFF	; 255
    2f46:	3f 4f       	sbci	r19, 0xFF	; 255
    2f48:	3f 93       	push	r19
    2f4a:	2f 93       	push	r18
    2f4c:	22 e7       	ldi	r18, 0x72	; 114
    2f4e:	31 e0       	ldi	r19, 0x01	; 1
    2f50:	3f 93       	push	r19
    2f52:	2f 93       	push	r18
    2f54:	9f 93       	push	r25
    2f56:	8f 93       	push	r24
    2f58:	0e 94 98 25 	call	0x4b30	; 0x4b30 <sscanf>
    2f5c:	0f 90       	pop	r0
    2f5e:	0f 90       	pop	r0
    2f60:	0f 90       	pop	r0
    2f62:	0f 90       	pop	r0
    2f64:	0f 90       	pop	r0
    2f66:	0f 90       	pop	r0
    2f68:	02 c0       	rjmp	.+4      	; 0x2f6e <RAIN_AMOUNT+0x3e>
	}
	else
	{
		R = 0;
    2f6a:	1a 82       	std	Y+2, r1	; 0x02
    2f6c:	19 82       	std	Y+1, r1	; 0x01
	}
	RAIN = 3*R*2.45/5120;
    2f6e:	69 81       	ldd	r22, Y+1	; 0x01
    2f70:	7a 81       	ldd	r23, Y+2	; 0x02
    2f72:	cb 01       	movw	r24, r22
    2f74:	88 0f       	add	r24, r24
    2f76:	99 1f       	adc	r25, r25
    2f78:	68 0f       	add	r22, r24
    2f7a:	79 1f       	adc	r23, r25
    2f7c:	07 2e       	mov	r0, r23
    2f7e:	00 0c       	add	r0, r0
    2f80:	88 0b       	sbc	r24, r24
    2f82:	99 0b       	sbc	r25, r25
    2f84:	0e 94 19 1f 	call	0x3e32	; 0x3e32 <__floatsisf>
    2f88:	2d ec       	ldi	r18, 0xCD	; 205
    2f8a:	3c ec       	ldi	r19, 0xCC	; 204
    2f8c:	4c e1       	ldi	r20, 0x1C	; 28
    2f8e:	50 e4       	ldi	r21, 0x40	; 64
    2f90:	0e 94 ce 1f 	call	0x3f9c	; 0x3f9c <__mulsf3>
    2f94:	20 e0       	ldi	r18, 0x00	; 0
    2f96:	30 e0       	ldi	r19, 0x00	; 0
    2f98:	40 ea       	ldi	r20, 0xA0	; 160
    2f9a:	55 e4       	ldi	r21, 0x45	; 69
    2f9c:	0e 94 6f 1e 	call	0x3cde	; 0x3cde <__divsf3>
	
	return RAIN;
}
    2fa0:	0f 90       	pop	r0
    2fa2:	0f 90       	pop	r0
    2fa4:	df 91       	pop	r29
    2fa6:	cf 91       	pop	r28
    2fa8:	08 95       	ret

00002faa <V_BAT>:
//Вычисление уровня заряда АКБ
float V_BAT (char *adc_value)
{
    2faa:	cf 93       	push	r28
    2fac:	df 93       	push	r29
    2fae:	00 d0       	rcall	.+0      	; 0x2fb0 <V_BAT+0x6>
    2fb0:	cd b7       	in	r28, 0x3d	; 61
    2fb2:	de b7       	in	r29, 0x3e	; 62
	float VBAT;
	int V;
	if (strlen(adc_value) != 0)
    2fb4:	fc 01       	movw	r30, r24
    2fb6:	20 81       	ld	r18, Z
    2fb8:	22 23       	and	r18, r18
    2fba:	a1 f0       	breq	.+40     	; 0x2fe4 <V_BAT+0x3a>
	{
		sscanf(adc_value, "%d", &V);
    2fbc:	9e 01       	movw	r18, r28
    2fbe:	2f 5f       	subi	r18, 0xFF	; 255
    2fc0:	3f 4f       	sbci	r19, 0xFF	; 255
    2fc2:	3f 93       	push	r19
    2fc4:	2f 93       	push	r18
    2fc6:	22 e7       	ldi	r18, 0x72	; 114
    2fc8:	31 e0       	ldi	r19, 0x01	; 1
    2fca:	3f 93       	push	r19
    2fcc:	2f 93       	push	r18
    2fce:	9f 93       	push	r25
    2fd0:	8f 93       	push	r24
    2fd2:	0e 94 98 25 	call	0x4b30	; 0x4b30 <sscanf>
    2fd6:	0f 90       	pop	r0
    2fd8:	0f 90       	pop	r0
    2fda:	0f 90       	pop	r0
    2fdc:	0f 90       	pop	r0
    2fde:	0f 90       	pop	r0
    2fe0:	0f 90       	pop	r0
    2fe2:	02 c0       	rjmp	.+4      	; 0x2fe8 <V_BAT+0x3e>
	}
	else
	{
		V = 0;
    2fe4:	1a 82       	std	Y+2, r1	; 0x02
    2fe6:	19 82       	std	Y+1, r1	; 0x01
	}
	VBAT = V*2.45*3/1024;
    2fe8:	69 81       	ldd	r22, Y+1	; 0x01
    2fea:	7a 81       	ldd	r23, Y+2	; 0x02
    2fec:	07 2e       	mov	r0, r23
    2fee:	00 0c       	add	r0, r0
    2ff0:	88 0b       	sbc	r24, r24
    2ff2:	99 0b       	sbc	r25, r25
    2ff4:	0e 94 19 1f 	call	0x3e32	; 0x3e32 <__floatsisf>
    2ff8:	2d ec       	ldi	r18, 0xCD	; 205
    2ffa:	3c ec       	ldi	r19, 0xCC	; 204
    2ffc:	4c e1       	ldi	r20, 0x1C	; 28
    2ffe:	50 e4       	ldi	r21, 0x40	; 64
    3000:	0e 94 ce 1f 	call	0x3f9c	; 0x3f9c <__mulsf3>
    3004:	20 e0       	ldi	r18, 0x00	; 0
    3006:	30 e0       	ldi	r19, 0x00	; 0
    3008:	40 e4       	ldi	r20, 0x40	; 64
    300a:	50 e4       	ldi	r21, 0x40	; 64
    300c:	0e 94 ce 1f 	call	0x3f9c	; 0x3f9c <__mulsf3>
    3010:	20 e0       	ldi	r18, 0x00	; 0
    3012:	30 e0       	ldi	r19, 0x00	; 0
    3014:	40 e8       	ldi	r20, 0x80	; 128
    3016:	5a e3       	ldi	r21, 0x3A	; 58
    3018:	0e 94 ce 1f 	call	0x3f9c	; 0x3f9c <__mulsf3>
	
	return VBAT;
}
    301c:	0f 90       	pop	r0
    301e:	0f 90       	pop	r0
    3020:	df 91       	pop	r29
    3022:	cf 91       	pop	r28
    3024:	08 95       	ret

00003026 <wind_speed>:
//Вычисление скорости ветра
float wind_speed (char *counter)
{
    3026:	cf 93       	push	r28
    3028:	df 93       	push	r29
    302a:	00 d0       	rcall	.+0      	; 0x302c <wind_speed+0x6>
    302c:	cd b7       	in	r28, 0x3d	; 61
    302e:	de b7       	in	r29, 0x3e	; 62
	float RADIUS = 0.09;
	float speed = 0;
	int n;
	if (strlen(counter) != 0)
    3030:	fc 01       	movw	r30, r24
    3032:	20 81       	ld	r18, Z
    3034:	22 23       	and	r18, r18
    3036:	a1 f0       	breq	.+40     	; 0x3060 <wind_speed+0x3a>
	{
		sscanf(counter, "%d", &n);
    3038:	9e 01       	movw	r18, r28
    303a:	2f 5f       	subi	r18, 0xFF	; 255
    303c:	3f 4f       	sbci	r19, 0xFF	; 255
    303e:	3f 93       	push	r19
    3040:	2f 93       	push	r18
    3042:	22 e7       	ldi	r18, 0x72	; 114
    3044:	31 e0       	ldi	r19, 0x01	; 1
    3046:	3f 93       	push	r19
    3048:	2f 93       	push	r18
    304a:	9f 93       	push	r25
    304c:	8f 93       	push	r24
    304e:	0e 94 98 25 	call	0x4b30	; 0x4b30 <sscanf>
    3052:	0f 90       	pop	r0
    3054:	0f 90       	pop	r0
    3056:	0f 90       	pop	r0
    3058:	0f 90       	pop	r0
    305a:	0f 90       	pop	r0
    305c:	0f 90       	pop	r0
    305e:	02 c0       	rjmp	.+4      	; 0x3064 <wind_speed+0x3e>
	}
	else
	{
		n = 0;
    3060:	1a 82       	std	Y+2, r1	; 0x02
    3062:	19 82       	std	Y+1, r1	; 0x01
	}
	speed = 2*3.14*RADIUS*n/4; //период 2 сек+2 магнита
    3064:	69 81       	ldd	r22, Y+1	; 0x01
    3066:	7a 81       	ldd	r23, Y+2	; 0x02
    3068:	07 2e       	mov	r0, r23
    306a:	00 0c       	add	r0, r0
    306c:	88 0b       	sbc	r24, r24
    306e:	99 0b       	sbc	r25, r25
    3070:	0e 94 19 1f 	call	0x3e32	; 0x3e32 <__floatsisf>
    3074:	23 ef       	ldi	r18, 0xF3	; 243
    3076:	30 eb       	ldi	r19, 0xB0	; 176
    3078:	40 e1       	ldi	r20, 0x10	; 16
    307a:	5f e3       	ldi	r21, 0x3F	; 63
    307c:	0e 94 ce 1f 	call	0x3f9c	; 0x3f9c <__mulsf3>
    3080:	20 e0       	ldi	r18, 0x00	; 0
    3082:	30 e0       	ldi	r19, 0x00	; 0
    3084:	40 e8       	ldi	r20, 0x80	; 128
    3086:	5e e3       	ldi	r21, 0x3E	; 62
    3088:	0e 94 ce 1f 	call	0x3f9c	; 0x3f9c <__mulsf3>
	
	return speed;
    308c:	0f 90       	pop	r0
    308e:	0f 90       	pop	r0
    3090:	df 91       	pop	r29
    3092:	cf 91       	pop	r28
    3094:	08 95       	ret

00003096 <Print_Home_Page>:
	LCD_12864_Clean();
	LCD_12864_GrapnicMode(0);
}
//Главное окно
void Print_Home_Page(uint8_t *Frame_buffer)
{
    3096:	0f 93       	push	r16
    3098:	1f 93       	push	r17
    309a:	cf 93       	push	r28
    309c:	df 93       	push	r29
    309e:	8c 01       	movw	r16, r24
	LCD_12864_GrapnicMode(1);
    30a0:	81 e0       	ldi	r24, 0x01	; 1
    30a2:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <LCD_12864_GrapnicMode>
	LCD_12864_Clean_Frame_buffer();
    30a6:	0e 94 27 07 	call	0xe4e	; 0xe4e <LCD_12864_Clean_Frame_buffer>
	//-----------Вывод времени/даты-------------------------------//
	Clock();
    30aa:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <Clock>
	sprintf(TIME,"%s:%s",hours, minutes);
    30ae:	87 eb       	ldi	r24, 0xB7	; 183
    30b0:	96 e0       	ldi	r25, 0x06	; 6
    30b2:	9f 93       	push	r25
    30b4:	8f 93       	push	r24
    30b6:	8b eb       	ldi	r24, 0xBB	; 187
    30b8:	96 e0       	ldi	r25, 0x06	; 6
    30ba:	9f 93       	push	r25
    30bc:	8f 93       	push	r24
    30be:	8f ea       	ldi	r24, 0xAF	; 175
    30c0:	91 e0       	ldi	r25, 0x01	; 1
    30c2:	9f 93       	push	r25
    30c4:	8f 93       	push	r24
    30c6:	85 ea       	ldi	r24, 0xA5	; 165
    30c8:	96 e0       	ldi	r25, 0x06	; 6
    30ca:	9f 93       	push	r25
    30cc:	8f 93       	push	r24
    30ce:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
	LCD_12864_Print_11_16(1, 0, 0, TIME);
    30d2:	25 ea       	ldi	r18, 0xA5	; 165
    30d4:	36 e0       	ldi	r19, 0x06	; 6
    30d6:	40 e0       	ldi	r20, 0x00	; 0
    30d8:	60 e0       	ldi	r22, 0x00	; 0
    30da:	81 e0       	ldi	r24, 0x01	; 1
    30dc:	90 e0       	ldi	r25, 0x00	; 0
    30de:	0e 94 03 06 	call	0xc06	; 0xc06 <LCD_12864_Print_11_16>
	LCD_12864_Decode_UTF8(59, 1, 0, seconds);
    30e2:	22 eb       	ldi	r18, 0xB2	; 178
    30e4:	36 e0       	ldi	r19, 0x06	; 6
    30e6:	40 e0       	ldi	r20, 0x00	; 0
    30e8:	61 e0       	ldi	r22, 0x01	; 1
    30ea:	8b e3       	ldi	r24, 0x3B	; 59
    30ec:	90 e0       	ldi	r25, 0x00	; 0
    30ee:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(73, 0, 0, "День");
    30f2:	25 eb       	ldi	r18, 0xB5	; 181
    30f4:	31 e0       	ldi	r19, 0x01	; 1
    30f6:	40 e0       	ldi	r20, 0x00	; 0
    30f8:	60 e0       	ldi	r22, 0x00	; 0
    30fa:	89 e4       	ldi	r24, 0x49	; 73
    30fc:	90 e0       	ldi	r25, 0x00	; 0
    30fe:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(99, 0, 0, "Месяц");
    3102:	2a eb       	ldi	r18, 0xBA	; 186
    3104:	31 e0       	ldi	r19, 0x01	; 1
    3106:	40 e0       	ldi	r20, 0x00	; 0
    3108:	60 e0       	ldi	r22, 0x00	; 0
    310a:	83 e6       	ldi	r24, 0x63	; 99
    310c:	90 e0       	ldi	r25, 0x00	; 0
    310e:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(73, 1, 0, mounthday);
    3112:	2c ec       	ldi	r18, 0xCC	; 204
    3114:	36 e0       	ldi	r19, 0x06	; 6
    3116:	40 e0       	ldi	r20, 0x00	; 0
    3118:	61 e0       	ldi	r22, 0x01	; 1
    311a:	89 e4       	ldi	r24, 0x49	; 73
    311c:	90 e0       	ldi	r25, 0x00	; 0
    311e:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(85, 1, 0, weakday);
    3122:	2f eb       	ldi	r18, 0xBF	; 191
    3124:	36 e0       	ldi	r19, 0x06	; 6
    3126:	40 e0       	ldi	r20, 0x00	; 0
    3128:	61 e0       	ldi	r22, 0x01	; 1
    312a:	85 e5       	ldi	r24, 0x55	; 85
    312c:	90 e0       	ldi	r25, 0x00	; 0
    312e:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(99, 1, 0, Mounth);
    3132:	25 ec       	ldi	r18, 0xC5	; 197
    3134:	36 e0       	ldi	r19, 0x06	; 6
    3136:	40 e0       	ldi	r20, 0x00	; 0
    3138:	61 e0       	ldi	r22, 0x01	; 1
    313a:	83 e6       	ldi	r24, 0x63	; 99
    313c:	90 e0       	ldi	r25, 0x00	; 0
    313e:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	
	//-----------Вывод уличных показателей-----------------------//
	LCD_12864_Decode_UTF8(30, 4, 0, "°C");
    3142:	20 ec       	ldi	r18, 0xC0	; 192
    3144:	31 e0       	ldi	r19, 0x01	; 1
    3146:	40 e0       	ldi	r20, 0x00	; 0
    3148:	64 e0       	ldi	r22, 0x04	; 4
    314a:	8e e1       	ldi	r24, 0x1E	; 30
    314c:	90 e0       	ldi	r25, 0x00	; 0
    314e:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(58, 4, 0, "%");
    3152:	23 ec       	ldi	r18, 0xC3	; 195
    3154:	31 e0       	ldi	r19, 0x01	; 1
    3156:	40 e0       	ldi	r20, 0x00	; 0
    3158:	64 e0       	ldi	r22, 0x04	; 4
    315a:	8a e3       	ldi	r24, 0x3A	; 58
    315c:	90 e0       	ldi	r25, 0x00	; 0
    315e:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(1, 3, 0, temp_street);
    3162:	20 e9       	ldi	r18, 0x90	; 144
    3164:	32 e0       	ldi	r19, 0x02	; 2
    3166:	40 e0       	ldi	r20, 0x00	; 0
    3168:	63 e0       	ldi	r22, 0x03	; 3
    316a:	81 e0       	ldi	r24, 0x01	; 1
    316c:	90 e0       	ldi	r25, 0x00	; 0
    316e:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Print_7_11>
	LCD_12864_Print_7_11(43, 3, 0, hum_street);
    3172:	26 e8       	ldi	r18, 0x86	; 134
    3174:	32 e0       	ldi	r19, 0x02	; 2
    3176:	40 e0       	ldi	r20, 0x00	; 0
    3178:	63 e0       	ldi	r22, 0x03	; 3
    317a:	8b e2       	ldi	r24, 0x2B	; 43
    317c:	90 e0       	ldi	r25, 0x00	; 0
    317e:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Print_7_11>
	sprintf(Vbat,"%.2f",V_BAT(adc_value1));
    3182:	8e e5       	ldi	r24, 0x5E	; 94
    3184:	92 e0       	ldi	r25, 0x02	; 2
    3186:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    318a:	9f 93       	push	r25
    318c:	8f 93       	push	r24
    318e:	7f 93       	push	r23
    3190:	6f 93       	push	r22
    3192:	c5 ec       	ldi	r28, 0xC5	; 197
    3194:	d1 e0       	ldi	r29, 0x01	; 1
    3196:	df 93       	push	r29
    3198:	cf 93       	push	r28
    319a:	8a e4       	ldi	r24, 0x4A	; 74
    319c:	92 e0       	ldi	r25, 0x02	; 2
    319e:	9f 93       	push	r25
    31a0:	8f 93       	push	r24
    31a2:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
	LCD_12864_Print_4_6(44, 2, 0, Vbat);
    31a6:	2a e4       	ldi	r18, 0x4A	; 74
    31a8:	32 e0       	ldi	r19, 0x02	; 2
    31aa:	40 e0       	ldi	r20, 0x00	; 0
    31ac:	62 e0       	ldi	r22, 0x02	; 2
    31ae:	8c e2       	ldi	r24, 0x2C	; 44
    31b0:	90 e0       	ldi	r25, 0x00	; 0
    31b2:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_12864_Print_4_6>
	//sprintf(Rain,"%.2f ",RAIN_AMOUNT(adc_value2));
	//LCD_12864_Decode_UTF8(32, 5, 0, Rain);
	sprintf(WIND_speed,"%.2f", wind_speed (HALL_counter));
    31b6:	8c e7       	ldi	r24, 0x7C	; 124
    31b8:	92 e0       	ldi	r25, 0x02	; 2
    31ba:	0e 94 13 18 	call	0x3026	; 0x3026 <wind_speed>
    31be:	9f 93       	push	r25
    31c0:	8f 93       	push	r24
    31c2:	7f 93       	push	r23
    31c4:	6f 93       	push	r22
    31c6:	df 93       	push	r29
    31c8:	cf 93       	push	r28
    31ca:	82 e7       	ldi	r24, 0x72	; 114
    31cc:	92 e0       	ldi	r25, 0x02	; 2
    31ce:	9f 93       	push	r25
    31d0:	8f 93       	push	r24
    31d2:	0e 94 76 25 	call	0x4aec	; 0x4aec <sprintf>
	LCD_12864_Print_4_6(26, 5, 0, WIND_speed);
    31d6:	22 e7       	ldi	r18, 0x72	; 114
    31d8:	32 e0       	ldi	r19, 0x02	; 2
    31da:	40 e0       	ldi	r20, 0x00	; 0
    31dc:	65 e0       	ldi	r22, 0x05	; 5
    31de:	8a e1       	ldi	r24, 0x1A	; 26
    31e0:	90 e0       	ldi	r25, 0x00	; 0
    31e2:	0e 94 92 05 	call	0xb24	; 0xb24 <LCD_12864_Print_4_6>
	LCD_12864_Decode_UTF8(45, 5, 0, "м/с");
    31e6:	2a ec       	ldi	r18, 0xCA	; 202
    31e8:	31 e0       	ldi	r19, 0x01	; 1
    31ea:	40 e0       	ldi	r20, 0x00	; 0
    31ec:	65 e0       	ldi	r22, 0x05	; 5
    31ee:	8d e2       	ldi	r24, 0x2D	; 45
    31f0:	90 e0       	ldi	r25, 0x00	; 0
    31f2:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(27, 6, 0, "осадки");
    31f6:	2e ec       	ldi	r18, 0xCE	; 206
    31f8:	31 e0       	ldi	r19, 0x01	; 1
    31fa:	40 e0       	ldi	r20, 0x00	; 0
    31fc:	66 e0       	ldi	r22, 0x06	; 6
    31fe:	8b e1       	ldi	r24, 0x1B	; 27
    3200:	90 e0       	ldi	r25, 0x00	; 0
    3202:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_line(25, 52, 24, 52);
    3206:	24 e3       	ldi	r18, 0x34	; 52
    3208:	48 e1       	ldi	r20, 0x18	; 24
    320a:	64 e3       	ldi	r22, 0x34	; 52
    320c:	89 e1       	ldi	r24, 0x19	; 25
    320e:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(24, 52, 24, 59);
    3212:	2b e3       	ldi	r18, 0x3B	; 59
    3214:	48 e1       	ldi	r20, 0x18	; 24
    3216:	64 e3       	ldi	r22, 0x34	; 52
    3218:	88 e1       	ldi	r24, 0x18	; 24
    321a:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(24, 59, 28, 59);
    321e:	2b e3       	ldi	r18, 0x3B	; 59
    3220:	4c e1       	ldi	r20, 0x1C	; 28
    3222:	6b e3       	ldi	r22, 0x3B	; 59
    3224:	88 e1       	ldi	r24, 0x18	; 24
    3226:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_1286_Draw_pixel(27, 58);
    322a:	6a e3       	ldi	r22, 0x3A	; 58
    322c:	8b e1       	ldi	r24, 0x1B	; 27
    322e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(27, 60);
    3232:	6c e3       	ldi	r22, 0x3C	; 60
    3234:	8b e1       	ldi	r24, 0x1B	; 27
    3236:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(26, 57);
    323a:	69 e3       	ldi	r22, 0x39	; 57
    323c:	8a e1       	ldi	r24, 0x1A	; 26
    323e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(26, 61);
    3242:	6d e3       	ldi	r22, 0x3D	; 61
    3244:	8a e1       	ldi	r24, 0x1A	; 26
    3246:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	if (RAIN_AMOUNT(adc_value2) >= 0.9f)  LCD_12864_Decode_UTF8(30, 7, 0, "нет");
    324a:	84 e5       	ldi	r24, 0x54	; 84
    324c:	92 e0       	ldi	r25, 0x02	; 2
    324e:	0e 94 98 17 	call	0x2f30	; 0x2f30 <RAIN_AMOUNT>
    3252:	2d b7       	in	r18, 0x3d	; 61
    3254:	3e b7       	in	r19, 0x3e	; 62
    3256:	28 5e       	subi	r18, 0xE8	; 232
    3258:	3f 4f       	sbci	r19, 0xFF	; 255
    325a:	0f b6       	in	r0, 0x3f	; 63
    325c:	f8 94       	cli
    325e:	3e bf       	out	0x3e, r19	; 62
    3260:	0f be       	out	0x3f, r0	; 63
    3262:	2d bf       	out	0x3d, r18	; 61
    3264:	26 e6       	ldi	r18, 0x66	; 102
    3266:	36 e6       	ldi	r19, 0x66	; 102
    3268:	46 e6       	ldi	r20, 0x66	; 102
    326a:	5f e3       	ldi	r21, 0x3F	; 63
    326c:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__gesf2>
    3270:	88 23       	and	r24, r24
    3272:	44 f0       	brlt	.+16     	; 0x3284 <Print_Home_Page+0x1ee>
    3274:	25 ed       	ldi	r18, 0xD5	; 213
    3276:	31 e0       	ldi	r19, 0x01	; 1
    3278:	40 e0       	ldi	r20, 0x00	; 0
    327a:	67 e0       	ldi	r22, 0x07	; 7
    327c:	8e e1       	ldi	r24, 0x1E	; 30
    327e:	90 e0       	ldi	r25, 0x00	; 0
    3280:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	

	//-----------Вывод показателей в доме-----------------------//
	LCD_12864_Decode_UTF8(95, 4, 0, "°C");
    3284:	20 ec       	ldi	r18, 0xC0	; 192
    3286:	31 e0       	ldi	r19, 0x01	; 1
    3288:	40 e0       	ldi	r20, 0x00	; 0
    328a:	64 e0       	ldi	r22, 0x04	; 4
    328c:	8f e5       	ldi	r24, 0x5F	; 95
    328e:	90 e0       	ldi	r25, 0x00	; 0
    3290:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(66, 3, 0, "30.0");
    3294:	29 ed       	ldi	r18, 0xD9	; 217
    3296:	31 e0       	ldi	r19, 0x01	; 1
    3298:	40 e0       	ldi	r20, 0x00	; 0
    329a:	63 e0       	ldi	r22, 0x03	; 3
    329c:	82 e4       	ldi	r24, 0x42	; 66
    329e:	90 e0       	ldi	r25, 0x00	; 0
    32a0:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Print_7_11>
	LCD_12864_Decode_UTF8(123, 4, 0, "%");
    32a4:	23 ec       	ldi	r18, 0xC3	; 195
    32a6:	31 e0       	ldi	r19, 0x01	; 1
    32a8:	40 e0       	ldi	r20, 0x00	; 0
    32aa:	64 e0       	ldi	r22, 0x04	; 4
    32ac:	8b e7       	ldi	r24, 0x7B	; 123
    32ae:	90 e0       	ldi	r25, 0x00	; 0
    32b0:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(108, 3, 0, "40");
    32b4:	2e ed       	ldi	r18, 0xDE	; 222
    32b6:	31 e0       	ldi	r19, 0x01	; 1
    32b8:	40 e0       	ldi	r20, 0x00	; 0
    32ba:	63 e0       	ldi	r22, 0x03	; 3
    32bc:	8c e6       	ldi	r24, 0x6C	; 108
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Print_7_11>
	LCD_12864_Decode_UTF8(67, 5, 0, "750мм.Hg");
    32c4:	21 ee       	ldi	r18, 0xE1	; 225
    32c6:	31 e0       	ldi	r19, 0x01	; 1
    32c8:	40 e0       	ldi	r20, 0x00	; 0
    32ca:	65 e0       	ldi	r22, 0x05	; 5
    32cc:	83 e4       	ldi	r24, 0x43	; 67
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	//-----------Вывод разделительных линий-----------------------//
	LCD_12864_Decode_UTF8(0, 2, 0, "улица");
    32d4:	2a ee       	ldi	r18, 0xEA	; 234
    32d6:	31 e0       	ldi	r19, 0x01	; 1
    32d8:	40 e0       	ldi	r20, 0x00	; 0
    32da:	62 e0       	ldi	r22, 0x02	; 2
    32dc:	80 e0       	ldi	r24, 0x00	; 0
    32de:	90 e0       	ldi	r25, 0x00	; 0
    32e0:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(65, 2, 0, "дом");
    32e4:	20 ef       	ldi	r18, 0xF0	; 240
    32e6:	31 e0       	ldi	r19, 0x01	; 1
    32e8:	40 e0       	ldi	r20, 0x00	; 0
    32ea:	62 e0       	ldi	r22, 0x02	; 2
    32ec:	81 e4       	ldi	r24, 0x41	; 65
    32ee:	90 e0       	ldi	r25, 0x00	; 0
    32f0:	0e 94 60 06 	call	0xcc0	; 0xcc0 <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_line(0, 16, 128, 16);
    32f4:	20 e1       	ldi	r18, 0x10	; 16
    32f6:	40 e8       	ldi	r20, 0x80	; 128
    32f8:	60 e1       	ldi	r22, 0x10	; 16
    32fa:	80 e0       	ldi	r24, 0x00	; 0
    32fc:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(71, 0, 71, 15);
    3300:	2f e0       	ldi	r18, 0x0F	; 15
    3302:	47 e4       	ldi	r20, 0x47	; 71
    3304:	60 e0       	ldi	r22, 0x00	; 0
    3306:	87 e4       	ldi	r24, 0x47	; 71
    3308:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(97, 0, 97, 15);
    330c:	2f e0       	ldi	r18, 0x0F	; 15
    330e:	41 e6       	ldi	r20, 0x61	; 97
    3310:	60 e0       	ldi	r22, 0x00	; 0
    3312:	81 e6       	ldi	r24, 0x61	; 97
    3314:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(0, 24, 30, 24);
    3318:	28 e1       	ldi	r18, 0x18	; 24
    331a:	4e e1       	ldi	r20, 0x1E	; 30
    331c:	68 e1       	ldi	r22, 0x18	; 24
    331e:	80 e0       	ldi	r24, 0x00	; 0
    3320:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(30, 17, 30, 24);
    3324:	28 e1       	ldi	r18, 0x18	; 24
    3326:	4e e1       	ldi	r20, 0x1E	; 30
    3328:	61 e1       	ldi	r22, 0x11	; 17
    332a:	8e e1       	ldi	r24, 0x1E	; 30
    332c:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(64, 24, 83, 24);
    3330:	28 e1       	ldi	r18, 0x18	; 24
    3332:	43 e5       	ldi	r20, 0x53	; 83
    3334:	68 e1       	ldi	r22, 0x18	; 24
    3336:	80 e4       	ldi	r24, 0x40	; 64
    3338:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(83, 17, 83, 24);
    333c:	28 e1       	ldi	r18, 0x18	; 24
    333e:	43 e5       	ldi	r20, 0x53	; 83
    3340:	61 e1       	ldi	r22, 0x11	; 17
    3342:	83 e5       	ldi	r24, 0x53	; 83
    3344:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(63, 17, 63, 64);
    3348:	20 e4       	ldi	r18, 0x40	; 64
    334a:	4f e3       	ldi	r20, 0x3F	; 63
    334c:	61 e1       	ldi	r22, 0x11	; 17
    334e:	8f e3       	ldi	r24, 0x3F	; 63
    3350:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(64, 47, 128, 47);
    3354:	2f e2       	ldi	r18, 0x2F	; 47
    3356:	40 e8       	ldi	r20, 0x80	; 128
    3358:	6f e2       	ldi	r22, 0x2F	; 47
    335a:	80 e4       	ldi	r24, 0x40	; 64
    335c:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	//-----------Вывод индикатора АКБ-----------------------//
	LCD_12864_Draw_line(34, 28, 40, 28);
    3360:	2c e1       	ldi	r18, 0x1C	; 28
    3362:	48 e2       	ldi	r20, 0x28	; 40
    3364:	6c e1       	ldi	r22, 0x1C	; 28
    3366:	82 e2       	ldi	r24, 0x22	; 34
    3368:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(34, 19, 34, 27);
    336c:	2b e1       	ldi	r18, 0x1B	; 27
    336e:	42 e2       	ldi	r20, 0x22	; 34
    3370:	63 e1       	ldi	r22, 0x13	; 19
    3372:	82 e2       	ldi	r24, 0x22	; 34
    3374:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(40, 19, 40, 27);
    3378:	2b e1       	ldi	r18, 0x1B	; 27
    337a:	48 e2       	ldi	r20, 0x28	; 40
    337c:	63 e1       	ldi	r22, 0x13	; 19
    337e:	88 e2       	ldi	r24, 0x28	; 40
    3380:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(34, 19, 36, 19);
    3384:	23 e1       	ldi	r18, 0x13	; 19
    3386:	44 e2       	ldi	r20, 0x24	; 36
    3388:	63 e1       	ldi	r22, 0x13	; 19
    338a:	82 e2       	ldi	r24, 0x22	; 34
    338c:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(38, 19, 40, 19);
    3390:	23 e1       	ldi	r18, 0x13	; 19
    3392:	48 e2       	ldi	r20, 0x28	; 40
    3394:	63 e1       	ldi	r22, 0x13	; 19
    3396:	86 e2       	ldi	r24, 0x26	; 38
    3398:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(36, 18, 36, 19);
    339c:	23 e1       	ldi	r18, 0x13	; 19
    339e:	44 e2       	ldi	r20, 0x24	; 36
    33a0:	62 e1       	ldi	r22, 0x12	; 18
    33a2:	84 e2       	ldi	r24, 0x24	; 36
    33a4:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(38, 18, 38, 19);
    33a8:	23 e1       	ldi	r18, 0x13	; 19
    33aa:	46 e2       	ldi	r20, 0x26	; 38
    33ac:	62 e1       	ldi	r22, 0x12	; 18
    33ae:	86 e2       	ldi	r24, 0x26	; 38
    33b0:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(36, 18, 38, 18);
    33b4:	22 e1       	ldi	r18, 0x12	; 18
    33b6:	46 e2       	ldi	r20, 0x26	; 38
    33b8:	62 e1       	ldi	r22, 0x12	; 18
    33ba:	84 e2       	ldi	r24, 0x24	; 36
    33bc:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	if (V_BAT(adc_value1) >= 4.0f) {
    33c0:	8e e5       	ldi	r24, 0x5E	; 94
    33c2:	92 e0       	ldi	r25, 0x02	; 2
    33c4:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    33c8:	20 e0       	ldi	r18, 0x00	; 0
    33ca:	30 e0       	ldi	r19, 0x00	; 0
    33cc:	40 e8       	ldi	r20, 0x80	; 128
    33ce:	50 e4       	ldi	r21, 0x40	; 64
    33d0:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__gesf2>
    33d4:	88 23       	and	r24, r24
    33d6:	2c f1       	brlt	.+74     	; 0x3422 <Print_Home_Page+0x38c>
		LCD_12864_Draw_line(36, 26, 38, 26);
    33d8:	2a e1       	ldi	r18, 0x1A	; 26
    33da:	46 e2       	ldi	r20, 0x26	; 38
    33dc:	6a e1       	ldi	r22, 0x1A	; 26
    33de:	84 e2       	ldi	r24, 0x24	; 36
    33e0:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    33e4:	29 e1       	ldi	r18, 0x19	; 25
    33e6:	46 e2       	ldi	r20, 0x26	; 38
    33e8:	69 e1       	ldi	r22, 0x19	; 25
    33ea:	84 e2       	ldi	r24, 0x24	; 36
    33ec:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    33f0:	28 e1       	ldi	r18, 0x18	; 24
    33f2:	46 e2       	ldi	r20, 0x26	; 38
    33f4:	68 e1       	ldi	r22, 0x18	; 24
    33f6:	84 e2       	ldi	r24, 0x24	; 36
    33f8:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    33fc:	27 e1       	ldi	r18, 0x17	; 23
    33fe:	46 e2       	ldi	r20, 0x26	; 38
    3400:	67 e1       	ldi	r22, 0x17	; 23
    3402:	84 e2       	ldi	r24, 0x24	; 36
    3404:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 22, 38, 22);
    3408:	26 e1       	ldi	r18, 0x16	; 22
    340a:	46 e2       	ldi	r20, 0x26	; 38
    340c:	66 e1       	ldi	r22, 0x16	; 22
    340e:	84 e2       	ldi	r24, 0x24	; 36
    3410:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 21, 38, 21);
    3414:	25 e1       	ldi	r18, 0x15	; 21
    3416:	46 e2       	ldi	r20, 0x26	; 38
    3418:	65 e1       	ldi	r22, 0x15	; 21
    341a:	84 e2       	ldi	r24, 0x24	; 36
    341c:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
    3420:	d6 c0       	rjmp	.+428    	; 0x35ce <Print_Home_Page+0x538>
	}
	else if ((V_BAT(adc_value1) >= 3.9f) && (V_BAT(adc_value1) < 4.0f)) {
    3422:	8e e5       	ldi	r24, 0x5E	; 94
    3424:	92 e0       	ldi	r25, 0x02	; 2
    3426:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    342a:	2a e9       	ldi	r18, 0x9A	; 154
    342c:	39 e9       	ldi	r19, 0x99	; 153
    342e:	49 e7       	ldi	r20, 0x79	; 121
    3430:	50 e4       	ldi	r21, 0x40	; 64
    3432:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__gesf2>
    3436:	88 23       	and	r24, r24
    3438:	5c f1       	brlt	.+86     	; 0x3490 <Print_Home_Page+0x3fa>
    343a:	8e e5       	ldi	r24, 0x5E	; 94
    343c:	92 e0       	ldi	r25, 0x02	; 2
    343e:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    3442:	20 e0       	ldi	r18, 0x00	; 0
    3444:	30 e0       	ldi	r19, 0x00	; 0
    3446:	40 e8       	ldi	r20, 0x80	; 128
    3448:	50 e4       	ldi	r21, 0x40	; 64
    344a:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__cmpsf2>
    344e:	88 23       	and	r24, r24
    3450:	fc f4       	brge	.+62     	; 0x3490 <Print_Home_Page+0x3fa>
		LCD_12864_Draw_line(36, 26, 38, 26);
    3452:	2a e1       	ldi	r18, 0x1A	; 26
    3454:	46 e2       	ldi	r20, 0x26	; 38
    3456:	6a e1       	ldi	r22, 0x1A	; 26
    3458:	84 e2       	ldi	r24, 0x24	; 36
    345a:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    345e:	29 e1       	ldi	r18, 0x19	; 25
    3460:	46 e2       	ldi	r20, 0x26	; 38
    3462:	69 e1       	ldi	r22, 0x19	; 25
    3464:	84 e2       	ldi	r24, 0x24	; 36
    3466:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    346a:	28 e1       	ldi	r18, 0x18	; 24
    346c:	46 e2       	ldi	r20, 0x26	; 38
    346e:	68 e1       	ldi	r22, 0x18	; 24
    3470:	84 e2       	ldi	r24, 0x24	; 36
    3472:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    3476:	27 e1       	ldi	r18, 0x17	; 23
    3478:	46 e2       	ldi	r20, 0x26	; 38
    347a:	67 e1       	ldi	r22, 0x17	; 23
    347c:	84 e2       	ldi	r24, 0x24	; 36
    347e:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 22, 38, 22);
    3482:	26 e1       	ldi	r18, 0x16	; 22
    3484:	46 e2       	ldi	r20, 0x26	; 38
    3486:	66 e1       	ldi	r22, 0x16	; 22
    3488:	84 e2       	ldi	r24, 0x24	; 36
    348a:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
    348e:	9f c0       	rjmp	.+318    	; 0x35ce <Print_Home_Page+0x538>
	}
	else if ((V_BAT(adc_value1) >= 3.8f) && (V_BAT(adc_value1) < 3.9f)) {
    3490:	8e e5       	ldi	r24, 0x5E	; 94
    3492:	92 e0       	ldi	r25, 0x02	; 2
    3494:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    3498:	23 e3       	ldi	r18, 0x33	; 51
    349a:	33 e3       	ldi	r19, 0x33	; 51
    349c:	43 e7       	ldi	r20, 0x73	; 115
    349e:	50 e4       	ldi	r21, 0x40	; 64
    34a0:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__gesf2>
    34a4:	88 23       	and	r24, r24
    34a6:	2c f1       	brlt	.+74     	; 0x34f2 <Print_Home_Page+0x45c>
    34a8:	8e e5       	ldi	r24, 0x5E	; 94
    34aa:	92 e0       	ldi	r25, 0x02	; 2
    34ac:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    34b0:	2a e9       	ldi	r18, 0x9A	; 154
    34b2:	39 e9       	ldi	r19, 0x99	; 153
    34b4:	49 e7       	ldi	r20, 0x79	; 121
    34b6:	50 e4       	ldi	r21, 0x40	; 64
    34b8:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__cmpsf2>
    34bc:	88 23       	and	r24, r24
    34be:	cc f4       	brge	.+50     	; 0x34f2 <Print_Home_Page+0x45c>
		LCD_12864_Draw_line(36, 26, 38, 26);
    34c0:	2a e1       	ldi	r18, 0x1A	; 26
    34c2:	46 e2       	ldi	r20, 0x26	; 38
    34c4:	6a e1       	ldi	r22, 0x1A	; 26
    34c6:	84 e2       	ldi	r24, 0x24	; 36
    34c8:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    34cc:	29 e1       	ldi	r18, 0x19	; 25
    34ce:	46 e2       	ldi	r20, 0x26	; 38
    34d0:	69 e1       	ldi	r22, 0x19	; 25
    34d2:	84 e2       	ldi	r24, 0x24	; 36
    34d4:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    34d8:	28 e1       	ldi	r18, 0x18	; 24
    34da:	46 e2       	ldi	r20, 0x26	; 38
    34dc:	68 e1       	ldi	r22, 0x18	; 24
    34de:	84 e2       	ldi	r24, 0x24	; 36
    34e0:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    34e4:	27 e1       	ldi	r18, 0x17	; 23
    34e6:	46 e2       	ldi	r20, 0x26	; 38
    34e8:	67 e1       	ldi	r22, 0x17	; 23
    34ea:	84 e2       	ldi	r24, 0x24	; 36
    34ec:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
    34f0:	6e c0       	rjmp	.+220    	; 0x35ce <Print_Home_Page+0x538>
	}
	else if ((V_BAT(adc_value1) >= 3.7f) && (V_BAT(adc_value1) < 3.8f)) {
    34f2:	8e e5       	ldi	r24, 0x5E	; 94
    34f4:	92 e0       	ldi	r25, 0x02	; 2
    34f6:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    34fa:	2d ec       	ldi	r18, 0xCD	; 205
    34fc:	3c ec       	ldi	r19, 0xCC	; 204
    34fe:	4c e6       	ldi	r20, 0x6C	; 108
    3500:	50 e4       	ldi	r21, 0x40	; 64
    3502:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__gesf2>
    3506:	88 23       	and	r24, r24
    3508:	fc f0       	brlt	.+62     	; 0x3548 <Print_Home_Page+0x4b2>
    350a:	8e e5       	ldi	r24, 0x5E	; 94
    350c:	92 e0       	ldi	r25, 0x02	; 2
    350e:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    3512:	23 e3       	ldi	r18, 0x33	; 51
    3514:	33 e3       	ldi	r19, 0x33	; 51
    3516:	43 e7       	ldi	r20, 0x73	; 115
    3518:	50 e4       	ldi	r21, 0x40	; 64
    351a:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__cmpsf2>
    351e:	88 23       	and	r24, r24
    3520:	9c f4       	brge	.+38     	; 0x3548 <Print_Home_Page+0x4b2>
		LCD_12864_Draw_line(36, 26, 38, 26);
    3522:	2a e1       	ldi	r18, 0x1A	; 26
    3524:	46 e2       	ldi	r20, 0x26	; 38
    3526:	6a e1       	ldi	r22, 0x1A	; 26
    3528:	84 e2       	ldi	r24, 0x24	; 36
    352a:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    352e:	29 e1       	ldi	r18, 0x19	; 25
    3530:	46 e2       	ldi	r20, 0x26	; 38
    3532:	69 e1       	ldi	r22, 0x19	; 25
    3534:	84 e2       	ldi	r24, 0x24	; 36
    3536:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    353a:	28 e1       	ldi	r18, 0x18	; 24
    353c:	46 e2       	ldi	r20, 0x26	; 38
    353e:	68 e1       	ldi	r22, 0x18	; 24
    3540:	84 e2       	ldi	r24, 0x24	; 36
    3542:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
    3546:	43 c0       	rjmp	.+134    	; 0x35ce <Print_Home_Page+0x538>
	}
	else if ((V_BAT(adc_value1) >= 3.6f) && (V_BAT(adc_value1) < 3.7f)) {
    3548:	8e e5       	ldi	r24, 0x5E	; 94
    354a:	92 e0       	ldi	r25, 0x02	; 2
    354c:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    3550:	26 e6       	ldi	r18, 0x66	; 102
    3552:	36 e6       	ldi	r19, 0x66	; 102
    3554:	46 e6       	ldi	r20, 0x66	; 102
    3556:	50 e4       	ldi	r21, 0x40	; 64
    3558:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__gesf2>
    355c:	88 23       	and	r24, r24
    355e:	cc f0       	brlt	.+50     	; 0x3592 <Print_Home_Page+0x4fc>
    3560:	8e e5       	ldi	r24, 0x5E	; 94
    3562:	92 e0       	ldi	r25, 0x02	; 2
    3564:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    3568:	2d ec       	ldi	r18, 0xCD	; 205
    356a:	3c ec       	ldi	r19, 0xCC	; 204
    356c:	4c e6       	ldi	r20, 0x6C	; 108
    356e:	50 e4       	ldi	r21, 0x40	; 64
    3570:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__cmpsf2>
    3574:	88 23       	and	r24, r24
    3576:	6c f4       	brge	.+26     	; 0x3592 <Print_Home_Page+0x4fc>
		LCD_12864_Draw_line(36, 26, 38, 26);
    3578:	2a e1       	ldi	r18, 0x1A	; 26
    357a:	46 e2       	ldi	r20, 0x26	; 38
    357c:	6a e1       	ldi	r22, 0x1A	; 26
    357e:	84 e2       	ldi	r24, 0x24	; 36
    3580:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    3584:	29 e1       	ldi	r18, 0x19	; 25
    3586:	46 e2       	ldi	r20, 0x26	; 38
    3588:	69 e1       	ldi	r22, 0x19	; 25
    358a:	84 e2       	ldi	r24, 0x24	; 36
    358c:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
    3590:	1e c0       	rjmp	.+60     	; 0x35ce <Print_Home_Page+0x538>
	}
	else if ((V_BAT(adc_value1) >= 3.5f) && (V_BAT(adc_value1) < 3.6f)) {
    3592:	8e e5       	ldi	r24, 0x5E	; 94
    3594:	92 e0       	ldi	r25, 0x02	; 2
    3596:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    359a:	20 e0       	ldi	r18, 0x00	; 0
    359c:	30 e0       	ldi	r19, 0x00	; 0
    359e:	40 e6       	ldi	r20, 0x60	; 96
    35a0:	50 e4       	ldi	r21, 0x40	; 64
    35a2:	0e 94 c9 1f 	call	0x3f92	; 0x3f92 <__gesf2>
    35a6:	88 23       	and	r24, r24
    35a8:	94 f0       	brlt	.+36     	; 0x35ce <Print_Home_Page+0x538>
    35aa:	8e e5       	ldi	r24, 0x5E	; 94
    35ac:	92 e0       	ldi	r25, 0x02	; 2
    35ae:	0e 94 d5 17 	call	0x2faa	; 0x2faa <V_BAT>
    35b2:	26 e6       	ldi	r18, 0x66	; 102
    35b4:	36 e6       	ldi	r19, 0x66	; 102
    35b6:	46 e6       	ldi	r20, 0x66	; 102
    35b8:	50 e4       	ldi	r21, 0x40	; 64
    35ba:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <__cmpsf2>
    35be:	88 23       	and	r24, r24
    35c0:	34 f4       	brge	.+12     	; 0x35ce <Print_Home_Page+0x538>
		LCD_12864_Draw_line(36, 26, 38, 26);
    35c2:	2a e1       	ldi	r18, 0x1A	; 26
    35c4:	46 e2       	ldi	r20, 0x26	; 38
    35c6:	6a e1       	ldi	r22, 0x1A	; 26
    35c8:	84 e2       	ldi	r24, 0x24	; 36
    35ca:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
	}
	else {}
	//-----------Вывод индикатора флюгера-----------------------//
	LCD_12864_Draw_circle(11, 52, 9);
    35ce:	49 e0       	ldi	r20, 0x09	; 9
    35d0:	64 e3       	ldi	r22, 0x34	; 52
    35d2:	8b e0       	ldi	r24, 0x0B	; 11
    35d4:	0e 94 92 07 	call	0xf24	; 0xf24 <LCD_12864_Draw_circle>
	//---------N-----------------
	LCD_1286_Clean_pixel(11, 44);
    35d8:	6c e2       	ldi	r22, 0x2C	; 44
    35da:	8b e0       	ldi	r24, 0x0B	; 11
    35dc:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(10, 44);
    35e0:	6c e2       	ldi	r22, 0x2C	; 44
    35e2:	8a e0       	ldi	r24, 0x0A	; 10
    35e4:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(9, 44);
    35e8:	6c e2       	ldi	r22, 0x2C	; 44
    35ea:	89 e0       	ldi	r24, 0x09	; 9
    35ec:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(8, 44);
    35f0:	6c e2       	ldi	r22, 0x2C	; 44
    35f2:	88 e0       	ldi	r24, 0x08	; 8
    35f4:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(12, 44);
    35f8:	6c e2       	ldi	r22, 0x2C	; 44
    35fa:	8c e0       	ldi	r24, 0x0C	; 12
    35fc:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(13, 44);
    3600:	6c e2       	ldi	r22, 0x2C	; 44
    3602:	8d e0       	ldi	r24, 0x0D	; 13
    3604:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(14, 44);
    3608:	6c e2       	ldi	r22, 0x2C	; 44
    360a:	8e e0       	ldi	r24, 0x0E	; 14
    360c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Draw_pixel(9, 43);
    3610:	6b e2       	ldi	r22, 0x2B	; 43
    3612:	89 e0       	ldi	r24, 0x09	; 9
    3614:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(9, 44);
    3618:	6c e2       	ldi	r22, 0x2C	; 44
    361a:	89 e0       	ldi	r24, 0x09	; 9
    361c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(9, 45);
    3620:	6d e2       	ldi	r22, 0x2D	; 45
    3622:	89 e0       	ldi	r24, 0x09	; 9
    3624:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(9, 42);
    3628:	6a e2       	ldi	r22, 0x2A	; 42
    362a:	89 e0       	ldi	r24, 0x09	; 9
    362c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(9, 41);
    3630:	69 e2       	ldi	r22, 0x29	; 41
    3632:	89 e0       	ldi	r24, 0x09	; 9
    3634:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(10, 42);
    3638:	6a e2       	ldi	r22, 0x2A	; 42
    363a:	8a e0       	ldi	r24, 0x0A	; 10
    363c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(11, 43);
    3640:	6b e2       	ldi	r22, 0x2B	; 43
    3642:	8b e0       	ldi	r24, 0x0B	; 11
    3644:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(12, 44);
    3648:	6c e2       	ldi	r22, 0x2C	; 44
    364a:	8c e0       	ldi	r24, 0x0C	; 12
    364c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(13, 43);
    3650:	6b e2       	ldi	r22, 0x2B	; 43
    3652:	8d e0       	ldi	r24, 0x0D	; 13
    3654:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(13, 44);
    3658:	6c e2       	ldi	r22, 0x2C	; 44
    365a:	8d e0       	ldi	r24, 0x0D	; 13
    365c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(13, 45);
    3660:	6d e2       	ldi	r22, 0x2D	; 45
    3662:	8d e0       	ldi	r24, 0x0D	; 13
    3664:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(13, 42);
    3668:	6a e2       	ldi	r22, 0x2A	; 42
    366a:	8d e0       	ldi	r24, 0x0D	; 13
    366c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(13, 41);
    3670:	69 e2       	ldi	r22, 0x29	; 41
    3672:	8d e0       	ldi	r24, 0x0D	; 13
    3674:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	//---------S-----------------
	LCD_1286_Clean_pixel(11, 61);
    3678:	6d e3       	ldi	r22, 0x3D	; 61
    367a:	8b e0       	ldi	r24, 0x0B	; 11
    367c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(10, 61);
    3680:	6d e3       	ldi	r22, 0x3D	; 61
    3682:	8a e0       	ldi	r24, 0x0A	; 10
    3684:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(9, 61);
    3688:	6d e3       	ldi	r22, 0x3D	; 61
    368a:	89 e0       	ldi	r24, 0x09	; 9
    368c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(8, 61);
    3690:	6d e3       	ldi	r22, 0x3D	; 61
    3692:	88 e0       	ldi	r24, 0x08	; 8
    3694:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(12, 61);
    3698:	6d e3       	ldi	r22, 0x3D	; 61
    369a:	8c e0       	ldi	r24, 0x0C	; 12
    369c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(13, 61);
    36a0:	6d e3       	ldi	r22, 0x3D	; 61
    36a2:	8d e0       	ldi	r24, 0x0D	; 13
    36a4:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(14, 61);
    36a8:	6d e3       	ldi	r22, 0x3D	; 61
    36aa:	8e e0       	ldi	r24, 0x0E	; 14
    36ac:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Draw_pixel(9, 60);
    36b0:	6c e3       	ldi	r22, 0x3C	; 60
    36b2:	89 e0       	ldi	r24, 0x09	; 9
    36b4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(9, 63);
    36b8:	6f e3       	ldi	r22, 0x3F	; 63
    36ba:	89 e0       	ldi	r24, 0x09	; 9
    36bc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(10, 61);
    36c0:	6d e3       	ldi	r22, 0x3D	; 61
    36c2:	8a e0       	ldi	r24, 0x0A	; 10
    36c4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(10, 59);
    36c8:	6b e3       	ldi	r22, 0x3B	; 59
    36ca:	8a e0       	ldi	r24, 0x0A	; 10
    36cc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(10, 63);
    36d0:	6f e3       	ldi	r22, 0x3F	; 63
    36d2:	8a e0       	ldi	r24, 0x0A	; 10
    36d4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(11, 61);
    36d8:	6d e3       	ldi	r22, 0x3D	; 61
    36da:	8b e0       	ldi	r24, 0x0B	; 11
    36dc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(11, 59);
    36e0:	6b e3       	ldi	r22, 0x3B	; 59
    36e2:	8b e0       	ldi	r24, 0x0B	; 11
    36e4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(11, 63);
    36e8:	6f e3       	ldi	r22, 0x3F	; 63
    36ea:	8b e0       	ldi	r24, 0x0B	; 11
    36ec:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(12, 61);
    36f0:	6d e3       	ldi	r22, 0x3D	; 61
    36f2:	8c e0       	ldi	r24, 0x0C	; 12
    36f4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(12, 59);
    36f8:	6b e3       	ldi	r22, 0x3B	; 59
    36fa:	8c e0       	ldi	r24, 0x0C	; 12
    36fc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(12, 63);
    3700:	6f e3       	ldi	r22, 0x3F	; 63
    3702:	8c e0       	ldi	r24, 0x0C	; 12
    3704:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(13, 62);
    3708:	6e e3       	ldi	r22, 0x3E	; 62
    370a:	8d e0       	ldi	r24, 0x0D	; 13
    370c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(13, 59);
    3710:	6b e3       	ldi	r22, 0x3B	; 59
    3712:	8d e0       	ldi	r24, 0x0D	; 13
    3714:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	//---------E-----------------
	LCD_1286_Clean_pixel(20, 52);
    3718:	64 e3       	ldi	r22, 0x34	; 52
    371a:	84 e1       	ldi	r24, 0x14	; 20
    371c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(20, 53);
    3720:	65 e3       	ldi	r22, 0x35	; 53
    3722:	84 e1       	ldi	r24, 0x14	; 20
    3724:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(20, 54);
    3728:	66 e3       	ldi	r22, 0x36	; 54
    372a:	84 e1       	ldi	r24, 0x14	; 20
    372c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(19, 55);
    3730:	67 e3       	ldi	r22, 0x37	; 55
    3732:	83 e1       	ldi	r24, 0x13	; 19
    3734:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Draw_pixel(19, 48);
    3738:	60 e3       	ldi	r22, 0x30	; 48
    373a:	83 e1       	ldi	r24, 0x13	; 19
    373c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Clean_pixel(20, 51);
    3740:	63 e3       	ldi	r22, 0x33	; 51
    3742:	84 e1       	ldi	r24, 0x14	; 20
    3744:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(20, 50);
    3748:	62 e3       	ldi	r22, 0x32	; 50
    374a:	84 e1       	ldi	r24, 0x14	; 20
    374c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Draw_pixel(20, 52);
    3750:	64 e3       	ldi	r22, 0x34	; 52
    3752:	84 e1       	ldi	r24, 0x14	; 20
    3754:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(20, 50);
    3758:	62 e3       	ldi	r22, 0x32	; 50
    375a:	84 e1       	ldi	r24, 0x14	; 20
    375c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(20, 54);
    3760:	66 e3       	ldi	r22, 0x36	; 54
    3762:	84 e1       	ldi	r24, 0x14	; 20
    3764:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(21, 52);
    3768:	64 e3       	ldi	r22, 0x34	; 52
    376a:	85 e1       	ldi	r24, 0x15	; 21
    376c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(21, 50);
    3770:	62 e3       	ldi	r22, 0x32	; 50
    3772:	85 e1       	ldi	r24, 0x15	; 21
    3774:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(21, 54);
    3778:	66 e3       	ldi	r22, 0x36	; 54
    377a:	85 e1       	ldi	r24, 0x15	; 21
    377c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(22, 52);
    3780:	64 e3       	ldi	r22, 0x34	; 52
    3782:	86 e1       	ldi	r24, 0x16	; 22
    3784:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(22, 50);
    3788:	62 e3       	ldi	r22, 0x32	; 50
    378a:	86 e1       	ldi	r24, 0x16	; 22
    378c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(22, 54);
    3790:	66 e3       	ldi	r22, 0x36	; 54
    3792:	86 e1       	ldi	r24, 0x16	; 22
    3794:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(19, 52);
    3798:	64 e3       	ldi	r22, 0x34	; 52
    379a:	83 e1       	ldi	r24, 0x13	; 19
    379c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(19, 50);
    37a0:	62 e3       	ldi	r22, 0x32	; 50
    37a2:	83 e1       	ldi	r24, 0x13	; 19
    37a4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(19, 54);
    37a8:	66 e3       	ldi	r22, 0x36	; 54
    37aa:	83 e1       	ldi	r24, 0x13	; 19
    37ac:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(18, 52);
    37b0:	64 e3       	ldi	r22, 0x34	; 52
    37b2:	82 e1       	ldi	r24, 0x12	; 18
    37b4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(18, 53);
    37b8:	65 e3       	ldi	r22, 0x35	; 53
    37ba:	82 e1       	ldi	r24, 0x12	; 18
    37bc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(18, 54);
    37c0:	66 e3       	ldi	r22, 0x36	; 54
    37c2:	82 e1       	ldi	r24, 0x12	; 18
    37c4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(18, 51);
    37c8:	63 e3       	ldi	r22, 0x33	; 51
    37ca:	82 e1       	ldi	r24, 0x12	; 18
    37cc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(18, 50);
    37d0:	62 e3       	ldi	r22, 0x32	; 50
    37d2:	82 e1       	ldi	r24, 0x12	; 18
    37d4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	//---------W-----------------
	LCD_1286_Clean_pixel(2, 52);
    37d8:	64 e3       	ldi	r22, 0x34	; 52
    37da:	82 e0       	ldi	r24, 0x02	; 2
    37dc:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(2, 53);
    37e0:	65 e3       	ldi	r22, 0x35	; 53
    37e2:	82 e0       	ldi	r24, 0x02	; 2
    37e4:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(2, 54);
    37e8:	66 e3       	ldi	r22, 0x36	; 54
    37ea:	82 e0       	ldi	r24, 0x02	; 2
    37ec:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(3, 55);
    37f0:	67 e3       	ldi	r22, 0x37	; 55
    37f2:	83 e0       	ldi	r24, 0x03	; 3
    37f4:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Draw_pixel(3, 48);
    37f8:	60 e3       	ldi	r22, 0x30	; 48
    37fa:	83 e0       	ldi	r24, 0x03	; 3
    37fc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Clean_pixel(2, 51);
    3800:	63 e3       	ldi	r22, 0x33	; 51
    3802:	82 e0       	ldi	r24, 0x02	; 2
    3804:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Clean_pixel(2, 50);
    3808:	62 e3       	ldi	r22, 0x32	; 50
    380a:	82 e0       	ldi	r24, 0x02	; 2
    380c:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_1286_Clean_pixel>
	LCD_1286_Draw_pixel(2, 52);
    3810:	64 e3       	ldi	r22, 0x34	; 52
    3812:	82 e0       	ldi	r24, 0x02	; 2
    3814:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(2, 53);
    3818:	65 e3       	ldi	r22, 0x35	; 53
    381a:	82 e0       	ldi	r24, 0x02	; 2
    381c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(3, 54);
    3820:	66 e3       	ldi	r22, 0x36	; 54
    3822:	83 e0       	ldi	r24, 0x03	; 3
    3824:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(4, 52);
    3828:	64 e3       	ldi	r22, 0x34	; 52
    382a:	84 e0       	ldi	r24, 0x04	; 4
    382c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(4, 53);
    3830:	65 e3       	ldi	r22, 0x35	; 53
    3832:	84 e0       	ldi	r24, 0x04	; 4
    3834:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(4, 51);
    3838:	63 e3       	ldi	r22, 0x33	; 51
    383a:	84 e0       	ldi	r24, 0x04	; 4
    383c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(4, 50);
    3840:	62 e3       	ldi	r22, 0x32	; 50
    3842:	84 e0       	ldi	r24, 0x04	; 4
    3844:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(1, 54);
    3848:	66 e3       	ldi	r22, 0x36	; 54
    384a:	81 e0       	ldi	r24, 0x01	; 1
    384c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(0, 52);
    3850:	64 e3       	ldi	r22, 0x34	; 52
    3852:	80 e0       	ldi	r24, 0x00	; 0
    3854:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(0, 53);
    3858:	65 e3       	ldi	r22, 0x35	; 53
    385a:	80 e0       	ldi	r24, 0x00	; 0
    385c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(0, 51);
    3860:	63 e3       	ldi	r22, 0x33	; 51
    3862:	80 e0       	ldi	r24, 0x00	; 0
    3864:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	LCD_1286_Draw_pixel(0, 50);
    3868:	62 e3       	ldi	r22, 0x32	; 50
    386a:	80 e0       	ldi	r24, 0x00	; 0
    386c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	//---------Стрелка-----------------
	//--точка в центре---
	LCD_1286_Draw_pixel(11, 52);	
    3870:	64 e3       	ldi	r22, 0x34	; 52
    3872:	8b e0       	ldi	r24, 0x0B	; 11
    3874:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	if (!strcmp(wind_direction, "N"))
    3878:	68 e4       	ldi	r22, 0x48	; 72
    387a:	71 e0       	ldi	r23, 0x01	; 1
    387c:	88 e6       	ldi	r24, 0x68	; 104
    387e:	92 e0       	ldi	r25, 0x02	; 2
    3880:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    3884:	89 2b       	or	r24, r25
    3886:	09 f0       	breq	.+2      	; 0x388a <Print_Home_Page+0x7f4>
    3888:	41 c0       	rjmp	.+130    	; 0x390c <Print_Home_Page+0x876>
	{
		LCD_1286_Draw_pixel(10, 53);
    388a:	65 e3       	ldi	r22, 0x35	; 53
    388c:	8a e0       	ldi	r24, 0x0A	; 10
    388e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 54);
    3892:	66 e3       	ldi	r22, 0x36	; 54
    3894:	8a e0       	ldi	r24, 0x0A	; 10
    3896:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 53);
    389a:	65 e3       	ldi	r22, 0x35	; 53
    389c:	8c e0       	ldi	r24, 0x0C	; 12
    389e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 54);
    38a2:	66 e3       	ldi	r22, 0x36	; 54
    38a4:	8c e0       	ldi	r24, 0x0C	; 12
    38a6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 51);
    38aa:	63 e3       	ldi	r22, 0x33	; 51
    38ac:	8b e0       	ldi	r24, 0x0B	; 11
    38ae:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 50);
    38b2:	62 e3       	ldi	r22, 0x32	; 50
    38b4:	8b e0       	ldi	r24, 0x0B	; 11
    38b6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 49);
    38ba:	61 e3       	ldi	r22, 0x31	; 49
    38bc:	8b e0       	ldi	r24, 0x0B	; 11
    38be:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 48);
    38c2:	60 e3       	ldi	r22, 0x30	; 48
    38c4:	8b e0       	ldi	r24, 0x0B	; 11
    38c6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 47);
    38ca:	6f e2       	ldi	r22, 0x2F	; 47
    38cc:	8b e0       	ldi	r24, 0x0B	; 11
    38ce:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 46);
    38d2:	6e e2       	ldi	r22, 0x2E	; 46
    38d4:	8b e0       	ldi	r24, 0x0B	; 11
    38d6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 47);
    38da:	6f e2       	ldi	r22, 0x2F	; 47
    38dc:	8a e0       	ldi	r24, 0x0A	; 10
    38de:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 47);
    38e2:	6f e2       	ldi	r22, 0x2F	; 47
    38e4:	8c e0       	ldi	r24, 0x0C	; 12
    38e6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 48);
    38ea:	60 e3       	ldi	r22, 0x30	; 48
    38ec:	8a e0       	ldi	r24, 0x0A	; 10
    38ee:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 48);
    38f2:	60 e3       	ldi	r22, 0x30	; 48
    38f4:	89 e0       	ldi	r24, 0x09	; 9
    38f6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 48);
    38fa:	60 e3       	ldi	r22, 0x30	; 48
    38fc:	8c e0       	ldi	r24, 0x0C	; 12
    38fe:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 48);
    3902:	60 e3       	ldi	r22, 0x30	; 48
    3904:	8d e0       	ldi	r24, 0x0D	; 13
    3906:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
    390a:	d9 c1       	rjmp	.+946    	; 0x3cbe <Print_Home_Page+0xc28>
	}
	else if (!strcmp(wind_direction, "S"))
    390c:	64 ef       	ldi	r22, 0xF4	; 244
    390e:	71 e0       	ldi	r23, 0x01	; 1
    3910:	88 e6       	ldi	r24, 0x68	; 104
    3912:	92 e0       	ldi	r25, 0x02	; 2
    3914:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    3918:	89 2b       	or	r24, r25
    391a:	09 f0       	breq	.+2      	; 0x391e <Print_Home_Page+0x888>
    391c:	41 c0       	rjmp	.+130    	; 0x39a0 <Print_Home_Page+0x90a>
	{
		LCD_1286_Draw_pixel(10, 50);
    391e:	62 e3       	ldi	r22, 0x32	; 50
    3920:	8a e0       	ldi	r24, 0x0A	; 10
    3922:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 51);
    3926:	63 e3       	ldi	r22, 0x33	; 51
    3928:	8a e0       	ldi	r24, 0x0A	; 10
    392a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 50);
    392e:	62 e3       	ldi	r22, 0x32	; 50
    3930:	8c e0       	ldi	r24, 0x0C	; 12
    3932:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 51);
    3936:	63 e3       	ldi	r22, 0x33	; 51
    3938:	8c e0       	ldi	r24, 0x0C	; 12
    393a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 53);
    393e:	65 e3       	ldi	r22, 0x35	; 53
    3940:	8b e0       	ldi	r24, 0x0B	; 11
    3942:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 54);
    3946:	66 e3       	ldi	r22, 0x36	; 54
    3948:	8b e0       	ldi	r24, 0x0B	; 11
    394a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 55);
    394e:	67 e3       	ldi	r22, 0x37	; 55
    3950:	8b e0       	ldi	r24, 0x0B	; 11
    3952:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 56);
    3956:	68 e3       	ldi	r22, 0x38	; 56
    3958:	8b e0       	ldi	r24, 0x0B	; 11
    395a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 57);
    395e:	69 e3       	ldi	r22, 0x39	; 57
    3960:	8b e0       	ldi	r24, 0x0B	; 11
    3962:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 58);
    3966:	6a e3       	ldi	r22, 0x3A	; 58
    3968:	8b e0       	ldi	r24, 0x0B	; 11
    396a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 57);
    396e:	69 e3       	ldi	r22, 0x39	; 57
    3970:	8a e0       	ldi	r24, 0x0A	; 10
    3972:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 57);
    3976:	69 e3       	ldi	r22, 0x39	; 57
    3978:	8c e0       	ldi	r24, 0x0C	; 12
    397a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 56);
    397e:	68 e3       	ldi	r22, 0x38	; 56
    3980:	8a e0       	ldi	r24, 0x0A	; 10
    3982:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 56);
    3986:	68 e3       	ldi	r22, 0x38	; 56
    3988:	89 e0       	ldi	r24, 0x09	; 9
    398a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 56);
    398e:	68 e3       	ldi	r22, 0x38	; 56
    3990:	8c e0       	ldi	r24, 0x0C	; 12
    3992:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 56);
    3996:	68 e3       	ldi	r22, 0x38	; 56
    3998:	8d e0       	ldi	r24, 0x0D	; 13
    399a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
    399e:	8f c1       	rjmp	.+798    	; 0x3cbe <Print_Home_Page+0xc28>
	}
	else if (!strcmp(wind_direction, "E"))
    39a0:	68 ef       	ldi	r22, 0xF8	; 248
    39a2:	71 e0       	ldi	r23, 0x01	; 1
    39a4:	88 e6       	ldi	r24, 0x68	; 104
    39a6:	92 e0       	ldi	r25, 0x02	; 2
    39a8:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    39ac:	89 2b       	or	r24, r25
    39ae:	09 f0       	breq	.+2      	; 0x39b2 <Print_Home_Page+0x91c>
    39b0:	41 c0       	rjmp	.+130    	; 0x3a34 <Print_Home_Page+0x99e>
	{
		LCD_1286_Draw_pixel(9, 51);
    39b2:	63 e3       	ldi	r22, 0x33	; 51
    39b4:	89 e0       	ldi	r24, 0x09	; 9
    39b6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 51);
    39ba:	63 e3       	ldi	r22, 0x33	; 51
    39bc:	8a e0       	ldi	r24, 0x0A	; 10
    39be:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 53);
    39c2:	65 e3       	ldi	r22, 0x35	; 53
    39c4:	89 e0       	ldi	r24, 0x09	; 9
    39c6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 53);
    39ca:	65 e3       	ldi	r22, 0x35	; 53
    39cc:	8a e0       	ldi	r24, 0x0A	; 10
    39ce:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 52);
    39d2:	64 e3       	ldi	r22, 0x34	; 52
    39d4:	8c e0       	ldi	r24, 0x0C	; 12
    39d6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 52);
    39da:	64 e3       	ldi	r22, 0x34	; 52
    39dc:	8d e0       	ldi	r24, 0x0D	; 13
    39de:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(14, 52);
    39e2:	64 e3       	ldi	r22, 0x34	; 52
    39e4:	8e e0       	ldi	r24, 0x0E	; 14
    39e6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 52);
    39ea:	64 e3       	ldi	r22, 0x34	; 52
    39ec:	8f e0       	ldi	r24, 0x0F	; 15
    39ee:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 52);
    39f2:	64 e3       	ldi	r22, 0x34	; 52
    39f4:	80 e1       	ldi	r24, 0x10	; 16
    39f6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(17, 52);
    39fa:	64 e3       	ldi	r22, 0x34	; 52
    39fc:	81 e1       	ldi	r24, 0x11	; 17
    39fe:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 51);
    3a02:	63 e3       	ldi	r22, 0x33	; 51
    3a04:	80 e1       	ldi	r24, 0x10	; 16
    3a06:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 53);
    3a0a:	65 e3       	ldi	r22, 0x35	; 53
    3a0c:	80 e1       	ldi	r24, 0x10	; 16
    3a0e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 53);
    3a12:	65 e3       	ldi	r22, 0x35	; 53
    3a14:	8f e0       	ldi	r24, 0x0F	; 15
    3a16:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 54);
    3a1a:	66 e3       	ldi	r22, 0x36	; 54
    3a1c:	8f e0       	ldi	r24, 0x0F	; 15
    3a1e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 51);
    3a22:	63 e3       	ldi	r22, 0x33	; 51
    3a24:	8f e0       	ldi	r24, 0x0F	; 15
    3a26:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 50);
    3a2a:	62 e3       	ldi	r22, 0x32	; 50
    3a2c:	8f e0       	ldi	r24, 0x0F	; 15
    3a2e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
    3a32:	45 c1       	rjmp	.+650    	; 0x3cbe <Print_Home_Page+0xc28>
	}
	else if (!strcmp(wind_direction, "W"))
    3a34:	6c ef       	ldi	r22, 0xFC	; 252
    3a36:	71 e0       	ldi	r23, 0x01	; 1
    3a38:	88 e6       	ldi	r24, 0x68	; 104
    3a3a:	92 e0       	ldi	r25, 0x02	; 2
    3a3c:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    3a40:	89 2b       	or	r24, r25
    3a42:	09 f0       	breq	.+2      	; 0x3a46 <Print_Home_Page+0x9b0>
    3a44:	41 c0       	rjmp	.+130    	; 0x3ac8 <Print_Home_Page+0xa32>
	{
		LCD_1286_Draw_pixel(13, 51);
    3a46:	63 e3       	ldi	r22, 0x33	; 51
    3a48:	8d e0       	ldi	r24, 0x0D	; 13
    3a4a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 51);
    3a4e:	63 e3       	ldi	r22, 0x33	; 51
    3a50:	8c e0       	ldi	r24, 0x0C	; 12
    3a52:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 53);
    3a56:	65 e3       	ldi	r22, 0x35	; 53
    3a58:	8d e0       	ldi	r24, 0x0D	; 13
    3a5a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 53);
    3a5e:	65 e3       	ldi	r22, 0x35	; 53
    3a60:	8c e0       	ldi	r24, 0x0C	; 12
    3a62:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 52);
    3a66:	64 e3       	ldi	r22, 0x34	; 52
    3a68:	8a e0       	ldi	r24, 0x0A	; 10
    3a6a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 52);
    3a6e:	64 e3       	ldi	r22, 0x34	; 52
    3a70:	89 e0       	ldi	r24, 0x09	; 9
    3a72:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(8, 52);
    3a76:	64 e3       	ldi	r22, 0x34	; 52
    3a78:	88 e0       	ldi	r24, 0x08	; 8
    3a7a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 52);
    3a7e:	64 e3       	ldi	r22, 0x34	; 52
    3a80:	87 e0       	ldi	r24, 0x07	; 7
    3a82:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 52);
    3a86:	64 e3       	ldi	r22, 0x34	; 52
    3a88:	86 e0       	ldi	r24, 0x06	; 6
    3a8a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(5, 52);
    3a8e:	64 e3       	ldi	r22, 0x34	; 52
    3a90:	85 e0       	ldi	r24, 0x05	; 5
    3a92:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 51);
    3a96:	63 e3       	ldi	r22, 0x33	; 51
    3a98:	86 e0       	ldi	r24, 0x06	; 6
    3a9a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 53);
    3a9e:	65 e3       	ldi	r22, 0x35	; 53
    3aa0:	86 e0       	ldi	r24, 0x06	; 6
    3aa2:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 53);
    3aa6:	65 e3       	ldi	r22, 0x35	; 53
    3aa8:	87 e0       	ldi	r24, 0x07	; 7
    3aaa:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 54);
    3aae:	66 e3       	ldi	r22, 0x36	; 54
    3ab0:	87 e0       	ldi	r24, 0x07	; 7
    3ab2:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 51);
    3ab6:	63 e3       	ldi	r22, 0x33	; 51
    3ab8:	87 e0       	ldi	r24, 0x07	; 7
    3aba:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 50);
    3abe:	62 e3       	ldi	r22, 0x32	; 50
    3ac0:	87 e0       	ldi	r24, 0x07	; 7
    3ac2:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
    3ac6:	fb c0       	rjmp	.+502    	; 0x3cbe <Print_Home_Page+0xc28>
	}
	else if (!strcmp(wind_direction, "N-E"))
    3ac8:	66 ef       	ldi	r22, 0xF6	; 246
    3aca:	71 e0       	ldi	r23, 0x01	; 1
    3acc:	88 e6       	ldi	r24, 0x68	; 104
    3ace:	92 e0       	ldi	r25, 0x02	; 2
    3ad0:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    3ad4:	89 2b       	or	r24, r25
    3ad6:	b9 f5       	brne	.+110    	; 0x3b46 <Print_Home_Page+0xab0>
	{
		LCD_1286_Draw_pixel(10, 51);
    3ad8:	63 e3       	ldi	r22, 0x33	; 51
    3ada:	8a e0       	ldi	r24, 0x0A	; 10
    3adc:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 52);
    3ae0:	64 e3       	ldi	r22, 0x34	; 52
    3ae2:	89 e0       	ldi	r24, 0x09	; 9
    3ae4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 53);
    3ae8:	65 e3       	ldi	r22, 0x35	; 53
    3aea:	8c e0       	ldi	r24, 0x0C	; 12
    3aec:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 54);
    3af0:	66 e3       	ldi	r22, 0x36	; 54
    3af2:	8b e0       	ldi	r24, 0x0B	; 11
    3af4:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 16, 47);
    3af8:	2f e2       	ldi	r18, 0x2F	; 47
    3afa:	40 e1       	ldi	r20, 0x10	; 16
    3afc:	64 e3       	ldi	r22, 0x34	; 52
    3afe:	8b e0       	ldi	r24, 0x0B	; 11
    3b00:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_1286_Draw_pixel(15, 47);
    3b04:	6f e2       	ldi	r22, 0x2F	; 47
    3b06:	8f e0       	ldi	r24, 0x0F	; 15
    3b08:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(14, 47);
    3b0c:	6f e2       	ldi	r22, 0x2F	; 47
    3b0e:	8e e0       	ldi	r24, 0x0E	; 14
    3b10:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 47);
    3b14:	6f e2       	ldi	r22, 0x2F	; 47
    3b16:	8d e0       	ldi	r24, 0x0D	; 13
    3b18:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(14, 48);
    3b1c:	60 e3       	ldi	r22, 0x30	; 48
    3b1e:	8e e0       	ldi	r24, 0x0E	; 14
    3b20:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 48);
    3b24:	60 e3       	ldi	r22, 0x30	; 48
    3b26:	80 e1       	ldi	r24, 0x10	; 16
    3b28:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 49);
    3b2c:	61 e3       	ldi	r22, 0x31	; 49
    3b2e:	80 e1       	ldi	r24, 0x10	; 16
    3b30:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 49);
    3b34:	61 e3       	ldi	r22, 0x31	; 49
    3b36:	8f e0       	ldi	r24, 0x0F	; 15
    3b38:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 50);
    3b3c:	62 e3       	ldi	r22, 0x32	; 50
    3b3e:	80 e1       	ldi	r24, 0x10	; 16
    3b40:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
    3b44:	bc c0       	rjmp	.+376    	; 0x3cbe <Print_Home_Page+0xc28>
	}
	else if (!strcmp(wind_direction, "N-W"))
    3b46:	6a ef       	ldi	r22, 0xFA	; 250
    3b48:	71 e0       	ldi	r23, 0x01	; 1
    3b4a:	88 e6       	ldi	r24, 0x68	; 104
    3b4c:	92 e0       	ldi	r25, 0x02	; 2
    3b4e:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    3b52:	89 2b       	or	r24, r25
    3b54:	b9 f5       	brne	.+110    	; 0x3bc4 <Print_Home_Page+0xb2e>
	{
		LCD_1286_Draw_pixel(12, 51);
    3b56:	63 e3       	ldi	r22, 0x33	; 51
    3b58:	8c e0       	ldi	r24, 0x0C	; 12
    3b5a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 52);
    3b5e:	64 e3       	ldi	r22, 0x34	; 52
    3b60:	8d e0       	ldi	r24, 0x0D	; 13
    3b62:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 53);
    3b66:	65 e3       	ldi	r22, 0x35	; 53
    3b68:	8a e0       	ldi	r24, 0x0A	; 10
    3b6a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(11, 54);
    3b6e:	66 e3       	ldi	r22, 0x36	; 54
    3b70:	8b e0       	ldi	r24, 0x0B	; 11
    3b72:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 6, 47);
    3b76:	2f e2       	ldi	r18, 0x2F	; 47
    3b78:	46 e0       	ldi	r20, 0x06	; 6
    3b7a:	64 e3       	ldi	r22, 0x34	; 52
    3b7c:	8b e0       	ldi	r24, 0x0B	; 11
    3b7e:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_1286_Draw_pixel(7, 47);
    3b82:	6f e2       	ldi	r22, 0x2F	; 47
    3b84:	87 e0       	ldi	r24, 0x07	; 7
    3b86:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(8, 47);
    3b8a:	6f e2       	ldi	r22, 0x2F	; 47
    3b8c:	88 e0       	ldi	r24, 0x08	; 8
    3b8e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 47);
    3b92:	6f e2       	ldi	r22, 0x2F	; 47
    3b94:	89 e0       	ldi	r24, 0x09	; 9
    3b96:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(8, 48);
    3b9a:	60 e3       	ldi	r22, 0x30	; 48
    3b9c:	88 e0       	ldi	r24, 0x08	; 8
    3b9e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 48);
    3ba2:	60 e3       	ldi	r22, 0x30	; 48
    3ba4:	86 e0       	ldi	r24, 0x06	; 6
    3ba6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 49);
    3baa:	61 e3       	ldi	r22, 0x31	; 49
    3bac:	86 e0       	ldi	r24, 0x06	; 6
    3bae:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 50);
    3bb2:	62 e3       	ldi	r22, 0x32	; 50
    3bb4:	86 e0       	ldi	r24, 0x06	; 6
    3bb6:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 49);
    3bba:	61 e3       	ldi	r22, 0x31	; 49
    3bbc:	87 e0       	ldi	r24, 0x07	; 7
    3bbe:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
    3bc2:	7d c0       	rjmp	.+250    	; 0x3cbe <Print_Home_Page+0xc28>
	}
	else if (!strcmp(wind_direction, "S-E"))
    3bc4:	6e ef       	ldi	r22, 0xFE	; 254
    3bc6:	71 e0       	ldi	r23, 0x01	; 1
    3bc8:	88 e6       	ldi	r24, 0x68	; 104
    3bca:	92 e0       	ldi	r25, 0x02	; 2
    3bcc:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    3bd0:	89 2b       	or	r24, r25
    3bd2:	b9 f5       	brne	.+110    	; 0x3c42 <Print_Home_Page+0xbac>
	{
		LCD_1286_Draw_pixel(11, 50);
    3bd4:	62 e3       	ldi	r22, 0x32	; 50
    3bd6:	8b e0       	ldi	r24, 0x0B	; 11
    3bd8:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 51);
    3bdc:	63 e3       	ldi	r22, 0x33	; 51
    3bde:	8c e0       	ldi	r24, 0x0C	; 12
    3be0:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 53);
    3be4:	65 e3       	ldi	r22, 0x35	; 53
    3be6:	8a e0       	ldi	r24, 0x0A	; 10
    3be8:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 52);
    3bec:	64 e3       	ldi	r22, 0x34	; 52
    3bee:	89 e0       	ldi	r24, 0x09	; 9
    3bf0:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 16, 57);
    3bf4:	29 e3       	ldi	r18, 0x39	; 57
    3bf6:	40 e1       	ldi	r20, 0x10	; 16
    3bf8:	64 e3       	ldi	r22, 0x34	; 52
    3bfa:	8b e0       	ldi	r24, 0x0B	; 11
    3bfc:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_1286_Draw_pixel(16, 56);
    3c00:	68 e3       	ldi	r22, 0x38	; 56
    3c02:	80 e1       	ldi	r24, 0x10	; 16
    3c04:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 57);
    3c08:	69 e3       	ldi	r22, 0x39	; 57
    3c0a:	8f e0       	ldi	r24, 0x0F	; 15
    3c0c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(15, 55);
    3c10:	67 e3       	ldi	r22, 0x37	; 55
    3c12:	8f e0       	ldi	r24, 0x0F	; 15
    3c14:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 55);
    3c18:	67 e3       	ldi	r22, 0x37	; 55
    3c1a:	80 e1       	ldi	r24, 0x10	; 16
    3c1c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(16, 54);
    3c20:	66 e3       	ldi	r22, 0x36	; 54
    3c22:	80 e1       	ldi	r24, 0x10	; 16
    3c24:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(14, 56);
    3c28:	68 e3       	ldi	r22, 0x38	; 56
    3c2a:	8e e0       	ldi	r24, 0x0E	; 14
    3c2c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(14, 57);
    3c30:	69 e3       	ldi	r22, 0x39	; 57
    3c32:	8e e0       	ldi	r24, 0x0E	; 14
    3c34:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 57);
    3c38:	69 e3       	ldi	r22, 0x39	; 57
    3c3a:	8d e0       	ldi	r24, 0x0D	; 13
    3c3c:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
    3c40:	3e c0       	rjmp	.+124    	; 0x3cbe <Print_Home_Page+0xc28>
	}
	else if (!strcmp(wind_direction, "S-W"))
    3c42:	62 e0       	ldi	r22, 0x02	; 2
    3c44:	72 e0       	ldi	r23, 0x02	; 2
    3c46:	88 e6       	ldi	r24, 0x68	; 104
    3c48:	92 e0       	ldi	r25, 0x02	; 2
    3c4a:	0e 94 26 25 	call	0x4a4c	; 0x4a4c <strcmp>
    3c4e:	89 2b       	or	r24, r25
    3c50:	b1 f5       	brne	.+108    	; 0x3cbe <Print_Home_Page+0xc28>
	{
		LCD_1286_Draw_pixel(11, 50);
    3c52:	62 e3       	ldi	r22, 0x32	; 50
    3c54:	8b e0       	ldi	r24, 0x0B	; 11
    3c56:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(10, 51);
    3c5a:	63 e3       	ldi	r22, 0x33	; 51
    3c5c:	8a e0       	ldi	r24, 0x0A	; 10
    3c5e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(13, 52);
    3c62:	64 e3       	ldi	r22, 0x34	; 52
    3c64:	8d e0       	ldi	r24, 0x0D	; 13
    3c66:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(12, 53);
    3c6a:	65 e3       	ldi	r22, 0x35	; 53
    3c6c:	8c e0       	ldi	r24, 0x0C	; 12
    3c6e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 6, 57);
    3c72:	29 e3       	ldi	r18, 0x39	; 57
    3c74:	46 e0       	ldi	r20, 0x06	; 6
    3c76:	64 e3       	ldi	r22, 0x34	; 52
    3c78:	8b e0       	ldi	r24, 0x0B	; 11
    3c7a:	0e 94 32 07 	call	0xe64	; 0xe64 <LCD_12864_Draw_line>
		LCD_1286_Draw_pixel(6, 56);
    3c7e:	68 e3       	ldi	r22, 0x38	; 56
    3c80:	86 e0       	ldi	r24, 0x06	; 6
    3c82:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 55);
    3c86:	67 e3       	ldi	r22, 0x37	; 55
    3c88:	86 e0       	ldi	r24, 0x06	; 6
    3c8a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 55);
    3c8e:	67 e3       	ldi	r22, 0x37	; 55
    3c90:	87 e0       	ldi	r24, 0x07	; 7
    3c92:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(6, 54);
    3c96:	66 e3       	ldi	r22, 0x36	; 54
    3c98:	86 e0       	ldi	r24, 0x06	; 6
    3c9a:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(7, 57);
    3c9e:	69 e3       	ldi	r22, 0x39	; 57
    3ca0:	87 e0       	ldi	r24, 0x07	; 7
    3ca2:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(8, 57);
    3ca6:	69 e3       	ldi	r22, 0x39	; 57
    3ca8:	88 e0       	ldi	r24, 0x08	; 8
    3caa:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(8, 56);
    3cae:	68 e3       	ldi	r22, 0x38	; 56
    3cb0:	88 e0       	ldi	r24, 0x08	; 8
    3cb2:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
		LCD_1286_Draw_pixel(9, 57);
    3cb6:	69 e3       	ldi	r22, 0x39	; 57
    3cb8:	89 e0       	ldi	r24, 0x09	; 9
    3cba:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_1286_Draw_pixel>
	}
	else {}
	
	LCD_12864_Draw_bitmap(Frame_buffer);
    3cbe:	c8 01       	movw	r24, r16
    3cc0:	0e 94 0f 02 	call	0x41e	; 0x41e <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
    3cc4:	80 e0       	ldi	r24, 0x00	; 0
    3cc6:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <LCD_12864_GrapnicMode>
}
    3cca:	df 91       	pop	r29
    3ccc:	cf 91       	pop	r28
    3cce:	1f 91       	pop	r17
    3cd0:	0f 91       	pop	r16
    3cd2:	08 95       	ret

00003cd4 <__cmpsf2>:
    3cd4:	0e 94 54 1f 	call	0x3ea8	; 0x3ea8 <__fp_cmp>
    3cd8:	08 f4       	brcc	.+2      	; 0x3cdc <__cmpsf2+0x8>
    3cda:	81 e0       	ldi	r24, 0x01	; 1
    3cdc:	08 95       	ret

00003cde <__divsf3>:
    3cde:	0e 94 83 1e 	call	0x3d06	; 0x3d06 <__divsf3x>
    3ce2:	0c 94 8f 1f 	jmp	0x3f1e	; 0x3f1e <__fp_round>
    3ce6:	0e 94 88 1f 	call	0x3f10	; 0x3f10 <__fp_pscB>
    3cea:	58 f0       	brcs	.+22     	; 0x3d02 <__divsf3+0x24>
    3cec:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <__fp_pscA>
    3cf0:	40 f0       	brcs	.+16     	; 0x3d02 <__divsf3+0x24>
    3cf2:	29 f4       	brne	.+10     	; 0x3cfe <__divsf3+0x20>
    3cf4:	5f 3f       	cpi	r21, 0xFF	; 255
    3cf6:	29 f0       	breq	.+10     	; 0x3d02 <__divsf3+0x24>
    3cf8:	0c 94 78 1f 	jmp	0x3ef0	; 0x3ef0 <__fp_inf>
    3cfc:	51 11       	cpse	r21, r1
    3cfe:	0c 94 c3 1f 	jmp	0x3f86	; 0x3f86 <__fp_szero>
    3d02:	0c 94 7e 1f 	jmp	0x3efc	; 0x3efc <__fp_nan>

00003d06 <__divsf3x>:
    3d06:	0e 94 a0 1f 	call	0x3f40	; 0x3f40 <__fp_split3>
    3d0a:	68 f3       	brcs	.-38     	; 0x3ce6 <__divsf3+0x8>

00003d0c <__divsf3_pse>:
    3d0c:	99 23       	and	r25, r25
    3d0e:	b1 f3       	breq	.-20     	; 0x3cfc <__divsf3+0x1e>
    3d10:	55 23       	and	r21, r21
    3d12:	91 f3       	breq	.-28     	; 0x3cf8 <__divsf3+0x1a>
    3d14:	95 1b       	sub	r25, r21
    3d16:	55 0b       	sbc	r21, r21
    3d18:	bb 27       	eor	r27, r27
    3d1a:	aa 27       	eor	r26, r26
    3d1c:	62 17       	cp	r22, r18
    3d1e:	73 07       	cpc	r23, r19
    3d20:	84 07       	cpc	r24, r20
    3d22:	38 f0       	brcs	.+14     	; 0x3d32 <__divsf3_pse+0x26>
    3d24:	9f 5f       	subi	r25, 0xFF	; 255
    3d26:	5f 4f       	sbci	r21, 0xFF	; 255
    3d28:	22 0f       	add	r18, r18
    3d2a:	33 1f       	adc	r19, r19
    3d2c:	44 1f       	adc	r20, r20
    3d2e:	aa 1f       	adc	r26, r26
    3d30:	a9 f3       	breq	.-22     	; 0x3d1c <__divsf3_pse+0x10>
    3d32:	35 d0       	rcall	.+106    	; 0x3d9e <__divsf3_pse+0x92>
    3d34:	0e 2e       	mov	r0, r30
    3d36:	3a f0       	brmi	.+14     	; 0x3d46 <__divsf3_pse+0x3a>
    3d38:	e0 e8       	ldi	r30, 0x80	; 128
    3d3a:	32 d0       	rcall	.+100    	; 0x3da0 <__divsf3_pse+0x94>
    3d3c:	91 50       	subi	r25, 0x01	; 1
    3d3e:	50 40       	sbci	r21, 0x00	; 0
    3d40:	e6 95       	lsr	r30
    3d42:	00 1c       	adc	r0, r0
    3d44:	ca f7       	brpl	.-14     	; 0x3d38 <__divsf3_pse+0x2c>
    3d46:	2b d0       	rcall	.+86     	; 0x3d9e <__divsf3_pse+0x92>
    3d48:	fe 2f       	mov	r31, r30
    3d4a:	29 d0       	rcall	.+82     	; 0x3d9e <__divsf3_pse+0x92>
    3d4c:	66 0f       	add	r22, r22
    3d4e:	77 1f       	adc	r23, r23
    3d50:	88 1f       	adc	r24, r24
    3d52:	bb 1f       	adc	r27, r27
    3d54:	26 17       	cp	r18, r22
    3d56:	37 07       	cpc	r19, r23
    3d58:	48 07       	cpc	r20, r24
    3d5a:	ab 07       	cpc	r26, r27
    3d5c:	b0 e8       	ldi	r27, 0x80	; 128
    3d5e:	09 f0       	breq	.+2      	; 0x3d62 <__divsf3_pse+0x56>
    3d60:	bb 0b       	sbc	r27, r27
    3d62:	80 2d       	mov	r24, r0
    3d64:	bf 01       	movw	r22, r30
    3d66:	ff 27       	eor	r31, r31
    3d68:	93 58       	subi	r25, 0x83	; 131
    3d6a:	5f 4f       	sbci	r21, 0xFF	; 255
    3d6c:	3a f0       	brmi	.+14     	; 0x3d7c <__divsf3_pse+0x70>
    3d6e:	9e 3f       	cpi	r25, 0xFE	; 254
    3d70:	51 05       	cpc	r21, r1
    3d72:	78 f0       	brcs	.+30     	; 0x3d92 <__divsf3_pse+0x86>
    3d74:	0c 94 78 1f 	jmp	0x3ef0	; 0x3ef0 <__fp_inf>
    3d78:	0c 94 c3 1f 	jmp	0x3f86	; 0x3f86 <__fp_szero>
    3d7c:	5f 3f       	cpi	r21, 0xFF	; 255
    3d7e:	e4 f3       	brlt	.-8      	; 0x3d78 <__divsf3_pse+0x6c>
    3d80:	98 3e       	cpi	r25, 0xE8	; 232
    3d82:	d4 f3       	brlt	.-12     	; 0x3d78 <__divsf3_pse+0x6c>
    3d84:	86 95       	lsr	r24
    3d86:	77 95       	ror	r23
    3d88:	67 95       	ror	r22
    3d8a:	b7 95       	ror	r27
    3d8c:	f7 95       	ror	r31
    3d8e:	9f 5f       	subi	r25, 0xFF	; 255
    3d90:	c9 f7       	brne	.-14     	; 0x3d84 <__divsf3_pse+0x78>
    3d92:	88 0f       	add	r24, r24
    3d94:	91 1d       	adc	r25, r1
    3d96:	96 95       	lsr	r25
    3d98:	87 95       	ror	r24
    3d9a:	97 f9       	bld	r25, 7
    3d9c:	08 95       	ret
    3d9e:	e1 e0       	ldi	r30, 0x01	; 1
    3da0:	66 0f       	add	r22, r22
    3da2:	77 1f       	adc	r23, r23
    3da4:	88 1f       	adc	r24, r24
    3da6:	bb 1f       	adc	r27, r27
    3da8:	62 17       	cp	r22, r18
    3daa:	73 07       	cpc	r23, r19
    3dac:	84 07       	cpc	r24, r20
    3dae:	ba 07       	cpc	r27, r26
    3db0:	20 f0       	brcs	.+8      	; 0x3dba <__divsf3_pse+0xae>
    3db2:	62 1b       	sub	r22, r18
    3db4:	73 0b       	sbc	r23, r19
    3db6:	84 0b       	sbc	r24, r20
    3db8:	ba 0b       	sbc	r27, r26
    3dba:	ee 1f       	adc	r30, r30
    3dbc:	88 f7       	brcc	.-30     	; 0x3da0 <__divsf3_pse+0x94>
    3dbe:	e0 95       	com	r30
    3dc0:	08 95       	ret

00003dc2 <__fixsfsi>:
    3dc2:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <__fixunssfsi>
    3dc6:	68 94       	set
    3dc8:	b1 11       	cpse	r27, r1
    3dca:	0c 94 c3 1f 	jmp	0x3f86	; 0x3f86 <__fp_szero>
    3dce:	08 95       	ret

00003dd0 <__fixunssfsi>:
    3dd0:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <__fp_splitA>
    3dd4:	88 f0       	brcs	.+34     	; 0x3df8 <__fixunssfsi+0x28>
    3dd6:	9f 57       	subi	r25, 0x7F	; 127
    3dd8:	98 f0       	brcs	.+38     	; 0x3e00 <__fixunssfsi+0x30>
    3dda:	b9 2f       	mov	r27, r25
    3ddc:	99 27       	eor	r25, r25
    3dde:	b7 51       	subi	r27, 0x17	; 23
    3de0:	b0 f0       	brcs	.+44     	; 0x3e0e <__fixunssfsi+0x3e>
    3de2:	e1 f0       	breq	.+56     	; 0x3e1c <__fixunssfsi+0x4c>
    3de4:	66 0f       	add	r22, r22
    3de6:	77 1f       	adc	r23, r23
    3de8:	88 1f       	adc	r24, r24
    3dea:	99 1f       	adc	r25, r25
    3dec:	1a f0       	brmi	.+6      	; 0x3df4 <__fixunssfsi+0x24>
    3dee:	ba 95       	dec	r27
    3df0:	c9 f7       	brne	.-14     	; 0x3de4 <__fixunssfsi+0x14>
    3df2:	14 c0       	rjmp	.+40     	; 0x3e1c <__fixunssfsi+0x4c>
    3df4:	b1 30       	cpi	r27, 0x01	; 1
    3df6:	91 f0       	breq	.+36     	; 0x3e1c <__fixunssfsi+0x4c>
    3df8:	0e 94 c2 1f 	call	0x3f84	; 0x3f84 <__fp_zero>
    3dfc:	b1 e0       	ldi	r27, 0x01	; 1
    3dfe:	08 95       	ret
    3e00:	0c 94 c2 1f 	jmp	0x3f84	; 0x3f84 <__fp_zero>
    3e04:	67 2f       	mov	r22, r23
    3e06:	78 2f       	mov	r23, r24
    3e08:	88 27       	eor	r24, r24
    3e0a:	b8 5f       	subi	r27, 0xF8	; 248
    3e0c:	39 f0       	breq	.+14     	; 0x3e1c <__fixunssfsi+0x4c>
    3e0e:	b9 3f       	cpi	r27, 0xF9	; 249
    3e10:	cc f3       	brlt	.-14     	; 0x3e04 <__fixunssfsi+0x34>
    3e12:	86 95       	lsr	r24
    3e14:	77 95       	ror	r23
    3e16:	67 95       	ror	r22
    3e18:	b3 95       	inc	r27
    3e1a:	d9 f7       	brne	.-10     	; 0x3e12 <__fixunssfsi+0x42>
    3e1c:	3e f4       	brtc	.+14     	; 0x3e2c <__fixunssfsi+0x5c>
    3e1e:	90 95       	com	r25
    3e20:	80 95       	com	r24
    3e22:	70 95       	com	r23
    3e24:	61 95       	neg	r22
    3e26:	7f 4f       	sbci	r23, 0xFF	; 255
    3e28:	8f 4f       	sbci	r24, 0xFF	; 255
    3e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    3e2c:	08 95       	ret

00003e2e <__floatunsisf>:
    3e2e:	e8 94       	clt
    3e30:	09 c0       	rjmp	.+18     	; 0x3e44 <__floatsisf+0x12>

00003e32 <__floatsisf>:
    3e32:	97 fb       	bst	r25, 7
    3e34:	3e f4       	brtc	.+14     	; 0x3e44 <__floatsisf+0x12>
    3e36:	90 95       	com	r25
    3e38:	80 95       	com	r24
    3e3a:	70 95       	com	r23
    3e3c:	61 95       	neg	r22
    3e3e:	7f 4f       	sbci	r23, 0xFF	; 255
    3e40:	8f 4f       	sbci	r24, 0xFF	; 255
    3e42:	9f 4f       	sbci	r25, 0xFF	; 255
    3e44:	99 23       	and	r25, r25
    3e46:	a9 f0       	breq	.+42     	; 0x3e72 <__floatsisf+0x40>
    3e48:	f9 2f       	mov	r31, r25
    3e4a:	96 e9       	ldi	r25, 0x96	; 150
    3e4c:	bb 27       	eor	r27, r27
    3e4e:	93 95       	inc	r25
    3e50:	f6 95       	lsr	r31
    3e52:	87 95       	ror	r24
    3e54:	77 95       	ror	r23
    3e56:	67 95       	ror	r22
    3e58:	b7 95       	ror	r27
    3e5a:	f1 11       	cpse	r31, r1
    3e5c:	f8 cf       	rjmp	.-16     	; 0x3e4e <__floatsisf+0x1c>
    3e5e:	fa f4       	brpl	.+62     	; 0x3e9e <__floatsisf+0x6c>
    3e60:	bb 0f       	add	r27, r27
    3e62:	11 f4       	brne	.+4      	; 0x3e68 <__floatsisf+0x36>
    3e64:	60 ff       	sbrs	r22, 0
    3e66:	1b c0       	rjmp	.+54     	; 0x3e9e <__floatsisf+0x6c>
    3e68:	6f 5f       	subi	r22, 0xFF	; 255
    3e6a:	7f 4f       	sbci	r23, 0xFF	; 255
    3e6c:	8f 4f       	sbci	r24, 0xFF	; 255
    3e6e:	9f 4f       	sbci	r25, 0xFF	; 255
    3e70:	16 c0       	rjmp	.+44     	; 0x3e9e <__floatsisf+0x6c>
    3e72:	88 23       	and	r24, r24
    3e74:	11 f0       	breq	.+4      	; 0x3e7a <__floatsisf+0x48>
    3e76:	96 e9       	ldi	r25, 0x96	; 150
    3e78:	11 c0       	rjmp	.+34     	; 0x3e9c <__floatsisf+0x6a>
    3e7a:	77 23       	and	r23, r23
    3e7c:	21 f0       	breq	.+8      	; 0x3e86 <__floatsisf+0x54>
    3e7e:	9e e8       	ldi	r25, 0x8E	; 142
    3e80:	87 2f       	mov	r24, r23
    3e82:	76 2f       	mov	r23, r22
    3e84:	05 c0       	rjmp	.+10     	; 0x3e90 <__floatsisf+0x5e>
    3e86:	66 23       	and	r22, r22
    3e88:	71 f0       	breq	.+28     	; 0x3ea6 <__floatsisf+0x74>
    3e8a:	96 e8       	ldi	r25, 0x86	; 134
    3e8c:	86 2f       	mov	r24, r22
    3e8e:	70 e0       	ldi	r23, 0x00	; 0
    3e90:	60 e0       	ldi	r22, 0x00	; 0
    3e92:	2a f0       	brmi	.+10     	; 0x3e9e <__floatsisf+0x6c>
    3e94:	9a 95       	dec	r25
    3e96:	66 0f       	add	r22, r22
    3e98:	77 1f       	adc	r23, r23
    3e9a:	88 1f       	adc	r24, r24
    3e9c:	da f7       	brpl	.-10     	; 0x3e94 <__floatsisf+0x62>
    3e9e:	88 0f       	add	r24, r24
    3ea0:	96 95       	lsr	r25
    3ea2:	87 95       	ror	r24
    3ea4:	97 f9       	bld	r25, 7
    3ea6:	08 95       	ret

00003ea8 <__fp_cmp>:
    3ea8:	99 0f       	add	r25, r25
    3eaa:	00 08       	sbc	r0, r0
    3eac:	55 0f       	add	r21, r21
    3eae:	aa 0b       	sbc	r26, r26
    3eb0:	e0 e8       	ldi	r30, 0x80	; 128
    3eb2:	fe ef       	ldi	r31, 0xFE	; 254
    3eb4:	16 16       	cp	r1, r22
    3eb6:	17 06       	cpc	r1, r23
    3eb8:	e8 07       	cpc	r30, r24
    3eba:	f9 07       	cpc	r31, r25
    3ebc:	c0 f0       	brcs	.+48     	; 0x3eee <__fp_cmp+0x46>
    3ebe:	12 16       	cp	r1, r18
    3ec0:	13 06       	cpc	r1, r19
    3ec2:	e4 07       	cpc	r30, r20
    3ec4:	f5 07       	cpc	r31, r21
    3ec6:	98 f0       	brcs	.+38     	; 0x3eee <__fp_cmp+0x46>
    3ec8:	62 1b       	sub	r22, r18
    3eca:	73 0b       	sbc	r23, r19
    3ecc:	84 0b       	sbc	r24, r20
    3ece:	95 0b       	sbc	r25, r21
    3ed0:	39 f4       	brne	.+14     	; 0x3ee0 <__fp_cmp+0x38>
    3ed2:	0a 26       	eor	r0, r26
    3ed4:	61 f0       	breq	.+24     	; 0x3eee <__fp_cmp+0x46>
    3ed6:	23 2b       	or	r18, r19
    3ed8:	24 2b       	or	r18, r20
    3eda:	25 2b       	or	r18, r21
    3edc:	21 f4       	brne	.+8      	; 0x3ee6 <__fp_cmp+0x3e>
    3ede:	08 95       	ret
    3ee0:	0a 26       	eor	r0, r26
    3ee2:	09 f4       	brne	.+2      	; 0x3ee6 <__fp_cmp+0x3e>
    3ee4:	a1 40       	sbci	r26, 0x01	; 1
    3ee6:	a6 95       	lsr	r26
    3ee8:	8f ef       	ldi	r24, 0xFF	; 255
    3eea:	81 1d       	adc	r24, r1
    3eec:	81 1d       	adc	r24, r1
    3eee:	08 95       	ret

00003ef0 <__fp_inf>:
    3ef0:	97 f9       	bld	r25, 7
    3ef2:	9f 67       	ori	r25, 0x7F	; 127
    3ef4:	80 e8       	ldi	r24, 0x80	; 128
    3ef6:	70 e0       	ldi	r23, 0x00	; 0
    3ef8:	60 e0       	ldi	r22, 0x00	; 0
    3efa:	08 95       	ret

00003efc <__fp_nan>:
    3efc:	9f ef       	ldi	r25, 0xFF	; 255
    3efe:	80 ec       	ldi	r24, 0xC0	; 192
    3f00:	08 95       	ret

00003f02 <__fp_pscA>:
    3f02:	00 24       	eor	r0, r0
    3f04:	0a 94       	dec	r0
    3f06:	16 16       	cp	r1, r22
    3f08:	17 06       	cpc	r1, r23
    3f0a:	18 06       	cpc	r1, r24
    3f0c:	09 06       	cpc	r0, r25
    3f0e:	08 95       	ret

00003f10 <__fp_pscB>:
    3f10:	00 24       	eor	r0, r0
    3f12:	0a 94       	dec	r0
    3f14:	12 16       	cp	r1, r18
    3f16:	13 06       	cpc	r1, r19
    3f18:	14 06       	cpc	r1, r20
    3f1a:	05 06       	cpc	r0, r21
    3f1c:	08 95       	ret

00003f1e <__fp_round>:
    3f1e:	09 2e       	mov	r0, r25
    3f20:	03 94       	inc	r0
    3f22:	00 0c       	add	r0, r0
    3f24:	11 f4       	brne	.+4      	; 0x3f2a <__fp_round+0xc>
    3f26:	88 23       	and	r24, r24
    3f28:	52 f0       	brmi	.+20     	; 0x3f3e <__fp_round+0x20>
    3f2a:	bb 0f       	add	r27, r27
    3f2c:	40 f4       	brcc	.+16     	; 0x3f3e <__fp_round+0x20>
    3f2e:	bf 2b       	or	r27, r31
    3f30:	11 f4       	brne	.+4      	; 0x3f36 <__fp_round+0x18>
    3f32:	60 ff       	sbrs	r22, 0
    3f34:	04 c0       	rjmp	.+8      	; 0x3f3e <__fp_round+0x20>
    3f36:	6f 5f       	subi	r22, 0xFF	; 255
    3f38:	7f 4f       	sbci	r23, 0xFF	; 255
    3f3a:	8f 4f       	sbci	r24, 0xFF	; 255
    3f3c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f3e:	08 95       	ret

00003f40 <__fp_split3>:
    3f40:	57 fd       	sbrc	r21, 7
    3f42:	90 58       	subi	r25, 0x80	; 128
    3f44:	44 0f       	add	r20, r20
    3f46:	55 1f       	adc	r21, r21
    3f48:	59 f0       	breq	.+22     	; 0x3f60 <__fp_splitA+0x10>
    3f4a:	5f 3f       	cpi	r21, 0xFF	; 255
    3f4c:	71 f0       	breq	.+28     	; 0x3f6a <__fp_splitA+0x1a>
    3f4e:	47 95       	ror	r20

00003f50 <__fp_splitA>:
    3f50:	88 0f       	add	r24, r24
    3f52:	97 fb       	bst	r25, 7
    3f54:	99 1f       	adc	r25, r25
    3f56:	61 f0       	breq	.+24     	; 0x3f70 <__fp_splitA+0x20>
    3f58:	9f 3f       	cpi	r25, 0xFF	; 255
    3f5a:	79 f0       	breq	.+30     	; 0x3f7a <__fp_splitA+0x2a>
    3f5c:	87 95       	ror	r24
    3f5e:	08 95       	ret
    3f60:	12 16       	cp	r1, r18
    3f62:	13 06       	cpc	r1, r19
    3f64:	14 06       	cpc	r1, r20
    3f66:	55 1f       	adc	r21, r21
    3f68:	f2 cf       	rjmp	.-28     	; 0x3f4e <__fp_split3+0xe>
    3f6a:	46 95       	lsr	r20
    3f6c:	f1 df       	rcall	.-30     	; 0x3f50 <__fp_splitA>
    3f6e:	08 c0       	rjmp	.+16     	; 0x3f80 <__fp_splitA+0x30>
    3f70:	16 16       	cp	r1, r22
    3f72:	17 06       	cpc	r1, r23
    3f74:	18 06       	cpc	r1, r24
    3f76:	99 1f       	adc	r25, r25
    3f78:	f1 cf       	rjmp	.-30     	; 0x3f5c <__fp_splitA+0xc>
    3f7a:	86 95       	lsr	r24
    3f7c:	71 05       	cpc	r23, r1
    3f7e:	61 05       	cpc	r22, r1
    3f80:	08 94       	sec
    3f82:	08 95       	ret

00003f84 <__fp_zero>:
    3f84:	e8 94       	clt

00003f86 <__fp_szero>:
    3f86:	bb 27       	eor	r27, r27
    3f88:	66 27       	eor	r22, r22
    3f8a:	77 27       	eor	r23, r23
    3f8c:	cb 01       	movw	r24, r22
    3f8e:	97 f9       	bld	r25, 7
    3f90:	08 95       	ret

00003f92 <__gesf2>:
    3f92:	0e 94 54 1f 	call	0x3ea8	; 0x3ea8 <__fp_cmp>
    3f96:	08 f4       	brcc	.+2      	; 0x3f9a <__gesf2+0x8>
    3f98:	8f ef       	ldi	r24, 0xFF	; 255
    3f9a:	08 95       	ret

00003f9c <__mulsf3>:
    3f9c:	0e 94 e1 1f 	call	0x3fc2	; 0x3fc2 <__mulsf3x>
    3fa0:	0c 94 8f 1f 	jmp	0x3f1e	; 0x3f1e <__fp_round>
    3fa4:	0e 94 81 1f 	call	0x3f02	; 0x3f02 <__fp_pscA>
    3fa8:	38 f0       	brcs	.+14     	; 0x3fb8 <__mulsf3+0x1c>
    3faa:	0e 94 88 1f 	call	0x3f10	; 0x3f10 <__fp_pscB>
    3fae:	20 f0       	brcs	.+8      	; 0x3fb8 <__mulsf3+0x1c>
    3fb0:	95 23       	and	r25, r21
    3fb2:	11 f0       	breq	.+4      	; 0x3fb8 <__mulsf3+0x1c>
    3fb4:	0c 94 78 1f 	jmp	0x3ef0	; 0x3ef0 <__fp_inf>
    3fb8:	0c 94 7e 1f 	jmp	0x3efc	; 0x3efc <__fp_nan>
    3fbc:	11 24       	eor	r1, r1
    3fbe:	0c 94 c3 1f 	jmp	0x3f86	; 0x3f86 <__fp_szero>

00003fc2 <__mulsf3x>:
    3fc2:	0e 94 a0 1f 	call	0x3f40	; 0x3f40 <__fp_split3>
    3fc6:	70 f3       	brcs	.-36     	; 0x3fa4 <__mulsf3+0x8>

00003fc8 <__mulsf3_pse>:
    3fc8:	95 9f       	mul	r25, r21
    3fca:	c1 f3       	breq	.-16     	; 0x3fbc <__mulsf3+0x20>
    3fcc:	95 0f       	add	r25, r21
    3fce:	50 e0       	ldi	r21, 0x00	; 0
    3fd0:	55 1f       	adc	r21, r21
    3fd2:	62 9f       	mul	r22, r18
    3fd4:	f0 01       	movw	r30, r0
    3fd6:	72 9f       	mul	r23, r18
    3fd8:	bb 27       	eor	r27, r27
    3fda:	f0 0d       	add	r31, r0
    3fdc:	b1 1d       	adc	r27, r1
    3fde:	63 9f       	mul	r22, r19
    3fe0:	aa 27       	eor	r26, r26
    3fe2:	f0 0d       	add	r31, r0
    3fe4:	b1 1d       	adc	r27, r1
    3fe6:	aa 1f       	adc	r26, r26
    3fe8:	64 9f       	mul	r22, r20
    3fea:	66 27       	eor	r22, r22
    3fec:	b0 0d       	add	r27, r0
    3fee:	a1 1d       	adc	r26, r1
    3ff0:	66 1f       	adc	r22, r22
    3ff2:	82 9f       	mul	r24, r18
    3ff4:	22 27       	eor	r18, r18
    3ff6:	b0 0d       	add	r27, r0
    3ff8:	a1 1d       	adc	r26, r1
    3ffa:	62 1f       	adc	r22, r18
    3ffc:	73 9f       	mul	r23, r19
    3ffe:	b0 0d       	add	r27, r0
    4000:	a1 1d       	adc	r26, r1
    4002:	62 1f       	adc	r22, r18
    4004:	83 9f       	mul	r24, r19
    4006:	a0 0d       	add	r26, r0
    4008:	61 1d       	adc	r22, r1
    400a:	22 1f       	adc	r18, r18
    400c:	74 9f       	mul	r23, r20
    400e:	33 27       	eor	r19, r19
    4010:	a0 0d       	add	r26, r0
    4012:	61 1d       	adc	r22, r1
    4014:	23 1f       	adc	r18, r19
    4016:	84 9f       	mul	r24, r20
    4018:	60 0d       	add	r22, r0
    401a:	21 1d       	adc	r18, r1
    401c:	82 2f       	mov	r24, r18
    401e:	76 2f       	mov	r23, r22
    4020:	6a 2f       	mov	r22, r26
    4022:	11 24       	eor	r1, r1
    4024:	9f 57       	subi	r25, 0x7F	; 127
    4026:	50 40       	sbci	r21, 0x00	; 0
    4028:	9a f0       	brmi	.+38     	; 0x4050 <__mulsf3_pse+0x88>
    402a:	f1 f0       	breq	.+60     	; 0x4068 <__mulsf3_pse+0xa0>
    402c:	88 23       	and	r24, r24
    402e:	4a f0       	brmi	.+18     	; 0x4042 <__mulsf3_pse+0x7a>
    4030:	ee 0f       	add	r30, r30
    4032:	ff 1f       	adc	r31, r31
    4034:	bb 1f       	adc	r27, r27
    4036:	66 1f       	adc	r22, r22
    4038:	77 1f       	adc	r23, r23
    403a:	88 1f       	adc	r24, r24
    403c:	91 50       	subi	r25, 0x01	; 1
    403e:	50 40       	sbci	r21, 0x00	; 0
    4040:	a9 f7       	brne	.-22     	; 0x402c <__mulsf3_pse+0x64>
    4042:	9e 3f       	cpi	r25, 0xFE	; 254
    4044:	51 05       	cpc	r21, r1
    4046:	80 f0       	brcs	.+32     	; 0x4068 <__mulsf3_pse+0xa0>
    4048:	0c 94 78 1f 	jmp	0x3ef0	; 0x3ef0 <__fp_inf>
    404c:	0c 94 c3 1f 	jmp	0x3f86	; 0x3f86 <__fp_szero>
    4050:	5f 3f       	cpi	r21, 0xFF	; 255
    4052:	e4 f3       	brlt	.-8      	; 0x404c <__mulsf3_pse+0x84>
    4054:	98 3e       	cpi	r25, 0xE8	; 232
    4056:	d4 f3       	brlt	.-12     	; 0x404c <__mulsf3_pse+0x84>
    4058:	86 95       	lsr	r24
    405a:	77 95       	ror	r23
    405c:	67 95       	ror	r22
    405e:	b7 95       	ror	r27
    4060:	f7 95       	ror	r31
    4062:	e7 95       	ror	r30
    4064:	9f 5f       	subi	r25, 0xFF	; 255
    4066:	c1 f7       	brne	.-16     	; 0x4058 <__mulsf3_pse+0x90>
    4068:	fe 2b       	or	r31, r30
    406a:	88 0f       	add	r24, r24
    406c:	91 1d       	adc	r25, r1
    406e:	96 95       	lsr	r25
    4070:	87 95       	ror	r24
    4072:	97 f9       	bld	r25, 7
    4074:	08 95       	ret

00004076 <vfprintf>:
    4076:	a0 e1       	ldi	r26, 0x10	; 16
    4078:	b0 e0       	ldi	r27, 0x00	; 0
    407a:	e1 e4       	ldi	r30, 0x41	; 65
    407c:	f0 e2       	ldi	r31, 0x20	; 32
    407e:	0c 94 eb 23 	jmp	0x47d6	; 0x47d6 <__prologue_saves__>
    4082:	7c 01       	movw	r14, r24
    4084:	1b 01       	movw	r2, r22
    4086:	6a 01       	movw	r12, r20
    4088:	fc 01       	movw	r30, r24
    408a:	17 82       	std	Z+7, r1	; 0x07
    408c:	16 82       	std	Z+6, r1	; 0x06
    408e:	83 81       	ldd	r24, Z+3	; 0x03
    4090:	81 ff       	sbrs	r24, 1
    4092:	44 c3       	rjmp	.+1672   	; 0x471c <vfprintf+0x6a6>
    4094:	9e 01       	movw	r18, r28
    4096:	2f 5f       	subi	r18, 0xFF	; 255
    4098:	3f 4f       	sbci	r19, 0xFF	; 255
    409a:	39 01       	movw	r6, r18
    409c:	f7 01       	movw	r30, r14
    409e:	93 81       	ldd	r25, Z+3	; 0x03
    40a0:	f1 01       	movw	r30, r2
    40a2:	93 fd       	sbrc	r25, 3
    40a4:	85 91       	lpm	r24, Z+
    40a6:	93 ff       	sbrs	r25, 3
    40a8:	81 91       	ld	r24, Z+
    40aa:	1f 01       	movw	r2, r30
    40ac:	88 23       	and	r24, r24
    40ae:	09 f4       	brne	.+2      	; 0x40b2 <vfprintf+0x3c>
    40b0:	31 c3       	rjmp	.+1634   	; 0x4714 <vfprintf+0x69e>
    40b2:	85 32       	cpi	r24, 0x25	; 37
    40b4:	39 f4       	brne	.+14     	; 0x40c4 <vfprintf+0x4e>
    40b6:	93 fd       	sbrc	r25, 3
    40b8:	85 91       	lpm	r24, Z+
    40ba:	93 ff       	sbrs	r25, 3
    40bc:	81 91       	ld	r24, Z+
    40be:	1f 01       	movw	r2, r30
    40c0:	85 32       	cpi	r24, 0x25	; 37
    40c2:	39 f4       	brne	.+14     	; 0x40d2 <vfprintf+0x5c>
    40c4:	b7 01       	movw	r22, r14
    40c6:	90 e0       	ldi	r25, 0x00	; 0
    40c8:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    40cc:	56 01       	movw	r10, r12
    40ce:	65 01       	movw	r12, r10
    40d0:	e5 cf       	rjmp	.-54     	; 0x409c <vfprintf+0x26>
    40d2:	10 e0       	ldi	r17, 0x00	; 0
    40d4:	51 2c       	mov	r5, r1
    40d6:	91 2c       	mov	r9, r1
    40d8:	ff e1       	ldi	r31, 0x1F	; 31
    40da:	f9 15       	cp	r31, r9
    40dc:	d8 f0       	brcs	.+54     	; 0x4114 <vfprintf+0x9e>
    40de:	8b 32       	cpi	r24, 0x2B	; 43
    40e0:	79 f0       	breq	.+30     	; 0x4100 <vfprintf+0x8a>
    40e2:	38 f4       	brcc	.+14     	; 0x40f2 <vfprintf+0x7c>
    40e4:	80 32       	cpi	r24, 0x20	; 32
    40e6:	79 f0       	breq	.+30     	; 0x4106 <vfprintf+0x90>
    40e8:	83 32       	cpi	r24, 0x23	; 35
    40ea:	a1 f4       	brne	.+40     	; 0x4114 <vfprintf+0x9e>
    40ec:	f9 2d       	mov	r31, r9
    40ee:	f0 61       	ori	r31, 0x10	; 16
    40f0:	2e c0       	rjmp	.+92     	; 0x414e <vfprintf+0xd8>
    40f2:	8d 32       	cpi	r24, 0x2D	; 45
    40f4:	61 f0       	breq	.+24     	; 0x410e <vfprintf+0x98>
    40f6:	80 33       	cpi	r24, 0x30	; 48
    40f8:	69 f4       	brne	.+26     	; 0x4114 <vfprintf+0x9e>
    40fa:	29 2d       	mov	r18, r9
    40fc:	21 60       	ori	r18, 0x01	; 1
    40fe:	2d c0       	rjmp	.+90     	; 0x415a <vfprintf+0xe4>
    4100:	39 2d       	mov	r19, r9
    4102:	32 60       	ori	r19, 0x02	; 2
    4104:	93 2e       	mov	r9, r19
    4106:	89 2d       	mov	r24, r9
    4108:	84 60       	ori	r24, 0x04	; 4
    410a:	98 2e       	mov	r9, r24
    410c:	2a c0       	rjmp	.+84     	; 0x4162 <vfprintf+0xec>
    410e:	e9 2d       	mov	r30, r9
    4110:	e8 60       	ori	r30, 0x08	; 8
    4112:	15 c0       	rjmp	.+42     	; 0x413e <vfprintf+0xc8>
    4114:	97 fc       	sbrc	r9, 7
    4116:	2d c0       	rjmp	.+90     	; 0x4172 <vfprintf+0xfc>
    4118:	20 ed       	ldi	r18, 0xD0	; 208
    411a:	28 0f       	add	r18, r24
    411c:	2a 30       	cpi	r18, 0x0A	; 10
    411e:	88 f4       	brcc	.+34     	; 0x4142 <vfprintf+0xcc>
    4120:	96 fe       	sbrs	r9, 6
    4122:	06 c0       	rjmp	.+12     	; 0x4130 <vfprintf+0xba>
    4124:	3a e0       	ldi	r19, 0x0A	; 10
    4126:	13 9f       	mul	r17, r19
    4128:	20 0d       	add	r18, r0
    412a:	11 24       	eor	r1, r1
    412c:	12 2f       	mov	r17, r18
    412e:	19 c0       	rjmp	.+50     	; 0x4162 <vfprintf+0xec>
    4130:	8a e0       	ldi	r24, 0x0A	; 10
    4132:	58 9e       	mul	r5, r24
    4134:	20 0d       	add	r18, r0
    4136:	11 24       	eor	r1, r1
    4138:	52 2e       	mov	r5, r18
    413a:	e9 2d       	mov	r30, r9
    413c:	e0 62       	ori	r30, 0x20	; 32
    413e:	9e 2e       	mov	r9, r30
    4140:	10 c0       	rjmp	.+32     	; 0x4162 <vfprintf+0xec>
    4142:	8e 32       	cpi	r24, 0x2E	; 46
    4144:	31 f4       	brne	.+12     	; 0x4152 <vfprintf+0xdc>
    4146:	96 fc       	sbrc	r9, 6
    4148:	e5 c2       	rjmp	.+1482   	; 0x4714 <vfprintf+0x69e>
    414a:	f9 2d       	mov	r31, r9
    414c:	f0 64       	ori	r31, 0x40	; 64
    414e:	9f 2e       	mov	r9, r31
    4150:	08 c0       	rjmp	.+16     	; 0x4162 <vfprintf+0xec>
    4152:	8c 36       	cpi	r24, 0x6C	; 108
    4154:	21 f4       	brne	.+8      	; 0x415e <vfprintf+0xe8>
    4156:	29 2d       	mov	r18, r9
    4158:	20 68       	ori	r18, 0x80	; 128
    415a:	92 2e       	mov	r9, r18
    415c:	02 c0       	rjmp	.+4      	; 0x4162 <vfprintf+0xec>
    415e:	88 36       	cpi	r24, 0x68	; 104
    4160:	41 f4       	brne	.+16     	; 0x4172 <vfprintf+0xfc>
    4162:	f1 01       	movw	r30, r2
    4164:	93 fd       	sbrc	r25, 3
    4166:	85 91       	lpm	r24, Z+
    4168:	93 ff       	sbrs	r25, 3
    416a:	81 91       	ld	r24, Z+
    416c:	1f 01       	movw	r2, r30
    416e:	81 11       	cpse	r24, r1
    4170:	b3 cf       	rjmp	.-154    	; 0x40d8 <vfprintf+0x62>
    4172:	9b eb       	ldi	r25, 0xBB	; 187
    4174:	98 0f       	add	r25, r24
    4176:	93 30       	cpi	r25, 0x03	; 3
    4178:	20 f4       	brcc	.+8      	; 0x4182 <vfprintf+0x10c>
    417a:	99 2d       	mov	r25, r9
    417c:	90 61       	ori	r25, 0x10	; 16
    417e:	80 5e       	subi	r24, 0xE0	; 224
    4180:	07 c0       	rjmp	.+14     	; 0x4190 <vfprintf+0x11a>
    4182:	9b e9       	ldi	r25, 0x9B	; 155
    4184:	98 0f       	add	r25, r24
    4186:	93 30       	cpi	r25, 0x03	; 3
    4188:	08 f0       	brcs	.+2      	; 0x418c <vfprintf+0x116>
    418a:	66 c1       	rjmp	.+716    	; 0x4458 <vfprintf+0x3e2>
    418c:	99 2d       	mov	r25, r9
    418e:	9f 7e       	andi	r25, 0xEF	; 239
    4190:	96 ff       	sbrs	r25, 6
    4192:	16 e0       	ldi	r17, 0x06	; 6
    4194:	9f 73       	andi	r25, 0x3F	; 63
    4196:	99 2e       	mov	r9, r25
    4198:	85 36       	cpi	r24, 0x65	; 101
    419a:	19 f4       	brne	.+6      	; 0x41a2 <vfprintf+0x12c>
    419c:	90 64       	ori	r25, 0x40	; 64
    419e:	99 2e       	mov	r9, r25
    41a0:	08 c0       	rjmp	.+16     	; 0x41b2 <vfprintf+0x13c>
    41a2:	86 36       	cpi	r24, 0x66	; 102
    41a4:	21 f4       	brne	.+8      	; 0x41ae <vfprintf+0x138>
    41a6:	39 2f       	mov	r19, r25
    41a8:	30 68       	ori	r19, 0x80	; 128
    41aa:	93 2e       	mov	r9, r19
    41ac:	02 c0       	rjmp	.+4      	; 0x41b2 <vfprintf+0x13c>
    41ae:	11 11       	cpse	r17, r1
    41b0:	11 50       	subi	r17, 0x01	; 1
    41b2:	97 fe       	sbrs	r9, 7
    41b4:	07 c0       	rjmp	.+14     	; 0x41c4 <vfprintf+0x14e>
    41b6:	1c 33       	cpi	r17, 0x3C	; 60
    41b8:	50 f4       	brcc	.+20     	; 0x41ce <vfprintf+0x158>
    41ba:	44 24       	eor	r4, r4
    41bc:	43 94       	inc	r4
    41be:	41 0e       	add	r4, r17
    41c0:	27 e0       	ldi	r18, 0x07	; 7
    41c2:	0b c0       	rjmp	.+22     	; 0x41da <vfprintf+0x164>
    41c4:	18 30       	cpi	r17, 0x08	; 8
    41c6:	38 f0       	brcs	.+14     	; 0x41d6 <vfprintf+0x160>
    41c8:	27 e0       	ldi	r18, 0x07	; 7
    41ca:	17 e0       	ldi	r17, 0x07	; 7
    41cc:	05 c0       	rjmp	.+10     	; 0x41d8 <vfprintf+0x162>
    41ce:	27 e0       	ldi	r18, 0x07	; 7
    41d0:	9c e3       	ldi	r25, 0x3C	; 60
    41d2:	49 2e       	mov	r4, r25
    41d4:	02 c0       	rjmp	.+4      	; 0x41da <vfprintf+0x164>
    41d6:	21 2f       	mov	r18, r17
    41d8:	41 2c       	mov	r4, r1
    41da:	56 01       	movw	r10, r12
    41dc:	84 e0       	ldi	r24, 0x04	; 4
    41de:	a8 0e       	add	r10, r24
    41e0:	b1 1c       	adc	r11, r1
    41e2:	f6 01       	movw	r30, r12
    41e4:	60 81       	ld	r22, Z
    41e6:	71 81       	ldd	r23, Z+1	; 0x01
    41e8:	82 81       	ldd	r24, Z+2	; 0x02
    41ea:	93 81       	ldd	r25, Z+3	; 0x03
    41ec:	04 2d       	mov	r16, r4
    41ee:	a3 01       	movw	r20, r6
    41f0:	0e 94 31 24 	call	0x4862	; 0x4862 <__ftoa_engine>
    41f4:	6c 01       	movw	r12, r24
    41f6:	f9 81       	ldd	r31, Y+1	; 0x01
    41f8:	fc 87       	std	Y+12, r31	; 0x0c
    41fa:	f0 ff       	sbrs	r31, 0
    41fc:	02 c0       	rjmp	.+4      	; 0x4202 <vfprintf+0x18c>
    41fe:	f3 ff       	sbrs	r31, 3
    4200:	06 c0       	rjmp	.+12     	; 0x420e <vfprintf+0x198>
    4202:	91 fc       	sbrc	r9, 1
    4204:	06 c0       	rjmp	.+12     	; 0x4212 <vfprintf+0x19c>
    4206:	92 fe       	sbrs	r9, 2
    4208:	06 c0       	rjmp	.+12     	; 0x4216 <vfprintf+0x1a0>
    420a:	00 e2       	ldi	r16, 0x20	; 32
    420c:	05 c0       	rjmp	.+10     	; 0x4218 <vfprintf+0x1a2>
    420e:	0d e2       	ldi	r16, 0x2D	; 45
    4210:	03 c0       	rjmp	.+6      	; 0x4218 <vfprintf+0x1a2>
    4212:	0b e2       	ldi	r16, 0x2B	; 43
    4214:	01 c0       	rjmp	.+2      	; 0x4218 <vfprintf+0x1a2>
    4216:	00 e0       	ldi	r16, 0x00	; 0
    4218:	8c 85       	ldd	r24, Y+12	; 0x0c
    421a:	8c 70       	andi	r24, 0x0C	; 12
    421c:	19 f0       	breq	.+6      	; 0x4224 <vfprintf+0x1ae>
    421e:	01 11       	cpse	r16, r1
    4220:	5a c2       	rjmp	.+1204   	; 0x46d6 <vfprintf+0x660>
    4222:	9b c2       	rjmp	.+1334   	; 0x475a <vfprintf+0x6e4>
    4224:	97 fe       	sbrs	r9, 7
    4226:	10 c0       	rjmp	.+32     	; 0x4248 <vfprintf+0x1d2>
    4228:	4c 0c       	add	r4, r12
    422a:	fc 85       	ldd	r31, Y+12	; 0x0c
    422c:	f4 ff       	sbrs	r31, 4
    422e:	04 c0       	rjmp	.+8      	; 0x4238 <vfprintf+0x1c2>
    4230:	8a 81       	ldd	r24, Y+2	; 0x02
    4232:	81 33       	cpi	r24, 0x31	; 49
    4234:	09 f4       	brne	.+2      	; 0x4238 <vfprintf+0x1c2>
    4236:	4a 94       	dec	r4
    4238:	14 14       	cp	r1, r4
    423a:	74 f5       	brge	.+92     	; 0x4298 <vfprintf+0x222>
    423c:	28 e0       	ldi	r18, 0x08	; 8
    423e:	24 15       	cp	r18, r4
    4240:	78 f5       	brcc	.+94     	; 0x42a0 <vfprintf+0x22a>
    4242:	88 e0       	ldi	r24, 0x08	; 8
    4244:	48 2e       	mov	r4, r24
    4246:	2c c0       	rjmp	.+88     	; 0x42a0 <vfprintf+0x22a>
    4248:	96 fc       	sbrc	r9, 6
    424a:	2a c0       	rjmp	.+84     	; 0x42a0 <vfprintf+0x22a>
    424c:	81 2f       	mov	r24, r17
    424e:	90 e0       	ldi	r25, 0x00	; 0
    4250:	8c 15       	cp	r24, r12
    4252:	9d 05       	cpc	r25, r13
    4254:	9c f0       	brlt	.+38     	; 0x427c <vfprintf+0x206>
    4256:	3c ef       	ldi	r19, 0xFC	; 252
    4258:	c3 16       	cp	r12, r19
    425a:	3f ef       	ldi	r19, 0xFF	; 255
    425c:	d3 06       	cpc	r13, r19
    425e:	74 f0       	brlt	.+28     	; 0x427c <vfprintf+0x206>
    4260:	89 2d       	mov	r24, r9
    4262:	80 68       	ori	r24, 0x80	; 128
    4264:	98 2e       	mov	r9, r24
    4266:	0a c0       	rjmp	.+20     	; 0x427c <vfprintf+0x206>
    4268:	e2 e0       	ldi	r30, 0x02	; 2
    426a:	f0 e0       	ldi	r31, 0x00	; 0
    426c:	ec 0f       	add	r30, r28
    426e:	fd 1f       	adc	r31, r29
    4270:	e1 0f       	add	r30, r17
    4272:	f1 1d       	adc	r31, r1
    4274:	80 81       	ld	r24, Z
    4276:	80 33       	cpi	r24, 0x30	; 48
    4278:	19 f4       	brne	.+6      	; 0x4280 <vfprintf+0x20a>
    427a:	11 50       	subi	r17, 0x01	; 1
    427c:	11 11       	cpse	r17, r1
    427e:	f4 cf       	rjmp	.-24     	; 0x4268 <vfprintf+0x1f2>
    4280:	97 fe       	sbrs	r9, 7
    4282:	0e c0       	rjmp	.+28     	; 0x42a0 <vfprintf+0x22a>
    4284:	44 24       	eor	r4, r4
    4286:	43 94       	inc	r4
    4288:	41 0e       	add	r4, r17
    428a:	81 2f       	mov	r24, r17
    428c:	90 e0       	ldi	r25, 0x00	; 0
    428e:	c8 16       	cp	r12, r24
    4290:	d9 06       	cpc	r13, r25
    4292:	2c f4       	brge	.+10     	; 0x429e <vfprintf+0x228>
    4294:	1c 19       	sub	r17, r12
    4296:	04 c0       	rjmp	.+8      	; 0x42a0 <vfprintf+0x22a>
    4298:	44 24       	eor	r4, r4
    429a:	43 94       	inc	r4
    429c:	01 c0       	rjmp	.+2      	; 0x42a0 <vfprintf+0x22a>
    429e:	10 e0       	ldi	r17, 0x00	; 0
    42a0:	97 fe       	sbrs	r9, 7
    42a2:	06 c0       	rjmp	.+12     	; 0x42b0 <vfprintf+0x23a>
    42a4:	1c 14       	cp	r1, r12
    42a6:	1d 04       	cpc	r1, r13
    42a8:	34 f4       	brge	.+12     	; 0x42b6 <vfprintf+0x240>
    42aa:	c6 01       	movw	r24, r12
    42ac:	01 96       	adiw	r24, 0x01	; 1
    42ae:	05 c0       	rjmp	.+10     	; 0x42ba <vfprintf+0x244>
    42b0:	85 e0       	ldi	r24, 0x05	; 5
    42b2:	90 e0       	ldi	r25, 0x00	; 0
    42b4:	02 c0       	rjmp	.+4      	; 0x42ba <vfprintf+0x244>
    42b6:	81 e0       	ldi	r24, 0x01	; 1
    42b8:	90 e0       	ldi	r25, 0x00	; 0
    42ba:	01 11       	cpse	r16, r1
    42bc:	01 96       	adiw	r24, 0x01	; 1
    42be:	11 23       	and	r17, r17
    42c0:	31 f0       	breq	.+12     	; 0x42ce <vfprintf+0x258>
    42c2:	21 2f       	mov	r18, r17
    42c4:	30 e0       	ldi	r19, 0x00	; 0
    42c6:	2f 5f       	subi	r18, 0xFF	; 255
    42c8:	3f 4f       	sbci	r19, 0xFF	; 255
    42ca:	82 0f       	add	r24, r18
    42cc:	93 1f       	adc	r25, r19
    42ce:	25 2d       	mov	r18, r5
    42d0:	30 e0       	ldi	r19, 0x00	; 0
    42d2:	82 17       	cp	r24, r18
    42d4:	93 07       	cpc	r25, r19
    42d6:	14 f4       	brge	.+4      	; 0x42dc <vfprintf+0x266>
    42d8:	58 1a       	sub	r5, r24
    42da:	01 c0       	rjmp	.+2      	; 0x42de <vfprintf+0x268>
    42dc:	51 2c       	mov	r5, r1
    42de:	89 2d       	mov	r24, r9
    42e0:	89 70       	andi	r24, 0x09	; 9
    42e2:	49 f4       	brne	.+18     	; 0x42f6 <vfprintf+0x280>
    42e4:	55 20       	and	r5, r5
    42e6:	39 f0       	breq	.+14     	; 0x42f6 <vfprintf+0x280>
    42e8:	b7 01       	movw	r22, r14
    42ea:	80 e2       	ldi	r24, 0x20	; 32
    42ec:	90 e0       	ldi	r25, 0x00	; 0
    42ee:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    42f2:	5a 94       	dec	r5
    42f4:	f7 cf       	rjmp	.-18     	; 0x42e4 <vfprintf+0x26e>
    42f6:	00 23       	and	r16, r16
    42f8:	29 f0       	breq	.+10     	; 0x4304 <vfprintf+0x28e>
    42fa:	b7 01       	movw	r22, r14
    42fc:	80 2f       	mov	r24, r16
    42fe:	90 e0       	ldi	r25, 0x00	; 0
    4300:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4304:	93 fc       	sbrc	r9, 3
    4306:	09 c0       	rjmp	.+18     	; 0x431a <vfprintf+0x2a4>
    4308:	55 20       	and	r5, r5
    430a:	39 f0       	breq	.+14     	; 0x431a <vfprintf+0x2a4>
    430c:	b7 01       	movw	r22, r14
    430e:	80 e3       	ldi	r24, 0x30	; 48
    4310:	90 e0       	ldi	r25, 0x00	; 0
    4312:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4316:	5a 94       	dec	r5
    4318:	f7 cf       	rjmp	.-18     	; 0x4308 <vfprintf+0x292>
    431a:	97 fe       	sbrs	r9, 7
    431c:	4c c0       	rjmp	.+152    	; 0x43b6 <vfprintf+0x340>
    431e:	46 01       	movw	r8, r12
    4320:	d7 fe       	sbrs	r13, 7
    4322:	02 c0       	rjmp	.+4      	; 0x4328 <vfprintf+0x2b2>
    4324:	81 2c       	mov	r8, r1
    4326:	91 2c       	mov	r9, r1
    4328:	c6 01       	movw	r24, r12
    432a:	88 19       	sub	r24, r8
    432c:	99 09       	sbc	r25, r9
    432e:	f3 01       	movw	r30, r6
    4330:	e8 0f       	add	r30, r24
    4332:	f9 1f       	adc	r31, r25
    4334:	fe 87       	std	Y+14, r31	; 0x0e
    4336:	ed 87       	std	Y+13, r30	; 0x0d
    4338:	96 01       	movw	r18, r12
    433a:	24 19       	sub	r18, r4
    433c:	31 09       	sbc	r19, r1
    433e:	38 8b       	std	Y+16, r19	; 0x10
    4340:	2f 87       	std	Y+15, r18	; 0x0f
    4342:	01 2f       	mov	r16, r17
    4344:	10 e0       	ldi	r17, 0x00	; 0
    4346:	11 95       	neg	r17
    4348:	01 95       	neg	r16
    434a:	11 09       	sbc	r17, r1
    434c:	3f ef       	ldi	r19, 0xFF	; 255
    434e:	83 16       	cp	r8, r19
    4350:	93 06       	cpc	r9, r19
    4352:	29 f4       	brne	.+10     	; 0x435e <vfprintf+0x2e8>
    4354:	b7 01       	movw	r22, r14
    4356:	8e e2       	ldi	r24, 0x2E	; 46
    4358:	90 e0       	ldi	r25, 0x00	; 0
    435a:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    435e:	c8 14       	cp	r12, r8
    4360:	d9 04       	cpc	r13, r9
    4362:	4c f0       	brlt	.+18     	; 0x4376 <vfprintf+0x300>
    4364:	8f 85       	ldd	r24, Y+15	; 0x0f
    4366:	98 89       	ldd	r25, Y+16	; 0x10
    4368:	88 15       	cp	r24, r8
    436a:	99 05       	cpc	r25, r9
    436c:	24 f4       	brge	.+8      	; 0x4376 <vfprintf+0x300>
    436e:	ed 85       	ldd	r30, Y+13	; 0x0d
    4370:	fe 85       	ldd	r31, Y+14	; 0x0e
    4372:	81 81       	ldd	r24, Z+1	; 0x01
    4374:	01 c0       	rjmp	.+2      	; 0x4378 <vfprintf+0x302>
    4376:	80 e3       	ldi	r24, 0x30	; 48
    4378:	f1 e0       	ldi	r31, 0x01	; 1
    437a:	8f 1a       	sub	r8, r31
    437c:	91 08       	sbc	r9, r1
    437e:	2d 85       	ldd	r18, Y+13	; 0x0d
    4380:	3e 85       	ldd	r19, Y+14	; 0x0e
    4382:	2f 5f       	subi	r18, 0xFF	; 255
    4384:	3f 4f       	sbci	r19, 0xFF	; 255
    4386:	3e 87       	std	Y+14, r19	; 0x0e
    4388:	2d 87       	std	Y+13, r18	; 0x0d
    438a:	80 16       	cp	r8, r16
    438c:	91 06       	cpc	r9, r17
    438e:	2c f0       	brlt	.+10     	; 0x439a <vfprintf+0x324>
    4390:	b7 01       	movw	r22, r14
    4392:	90 e0       	ldi	r25, 0x00	; 0
    4394:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4398:	d9 cf       	rjmp	.-78     	; 0x434c <vfprintf+0x2d6>
    439a:	c8 14       	cp	r12, r8
    439c:	d9 04       	cpc	r13, r9
    439e:	41 f4       	brne	.+16     	; 0x43b0 <vfprintf+0x33a>
    43a0:	9a 81       	ldd	r25, Y+2	; 0x02
    43a2:	96 33       	cpi	r25, 0x36	; 54
    43a4:	20 f4       	brcc	.+8      	; 0x43ae <vfprintf+0x338>
    43a6:	95 33       	cpi	r25, 0x35	; 53
    43a8:	19 f4       	brne	.+6      	; 0x43b0 <vfprintf+0x33a>
    43aa:	3c 85       	ldd	r19, Y+12	; 0x0c
    43ac:	34 ff       	sbrs	r19, 4
    43ae:	81 e3       	ldi	r24, 0x31	; 49
    43b0:	b7 01       	movw	r22, r14
    43b2:	90 e0       	ldi	r25, 0x00	; 0
    43b4:	4e c0       	rjmp	.+156    	; 0x4452 <vfprintf+0x3dc>
    43b6:	8a 81       	ldd	r24, Y+2	; 0x02
    43b8:	81 33       	cpi	r24, 0x31	; 49
    43ba:	19 f0       	breq	.+6      	; 0x43c2 <vfprintf+0x34c>
    43bc:	9c 85       	ldd	r25, Y+12	; 0x0c
    43be:	9f 7e       	andi	r25, 0xEF	; 239
    43c0:	9c 87       	std	Y+12, r25	; 0x0c
    43c2:	b7 01       	movw	r22, r14
    43c4:	90 e0       	ldi	r25, 0x00	; 0
    43c6:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    43ca:	11 11       	cpse	r17, r1
    43cc:	05 c0       	rjmp	.+10     	; 0x43d8 <vfprintf+0x362>
    43ce:	94 fc       	sbrc	r9, 4
    43d0:	18 c0       	rjmp	.+48     	; 0x4402 <vfprintf+0x38c>
    43d2:	85 e6       	ldi	r24, 0x65	; 101
    43d4:	90 e0       	ldi	r25, 0x00	; 0
    43d6:	17 c0       	rjmp	.+46     	; 0x4406 <vfprintf+0x390>
    43d8:	b7 01       	movw	r22, r14
    43da:	8e e2       	ldi	r24, 0x2E	; 46
    43dc:	90 e0       	ldi	r25, 0x00	; 0
    43de:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    43e2:	1e 5f       	subi	r17, 0xFE	; 254
    43e4:	82 e0       	ldi	r24, 0x02	; 2
    43e6:	01 e0       	ldi	r16, 0x01	; 1
    43e8:	08 0f       	add	r16, r24
    43ea:	f3 01       	movw	r30, r6
    43ec:	e8 0f       	add	r30, r24
    43ee:	f1 1d       	adc	r31, r1
    43f0:	80 81       	ld	r24, Z
    43f2:	b7 01       	movw	r22, r14
    43f4:	90 e0       	ldi	r25, 0x00	; 0
    43f6:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    43fa:	80 2f       	mov	r24, r16
    43fc:	01 13       	cpse	r16, r17
    43fe:	f3 cf       	rjmp	.-26     	; 0x43e6 <vfprintf+0x370>
    4400:	e6 cf       	rjmp	.-52     	; 0x43ce <vfprintf+0x358>
    4402:	85 e4       	ldi	r24, 0x45	; 69
    4404:	90 e0       	ldi	r25, 0x00	; 0
    4406:	b7 01       	movw	r22, r14
    4408:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    440c:	d7 fc       	sbrc	r13, 7
    440e:	06 c0       	rjmp	.+12     	; 0x441c <vfprintf+0x3a6>
    4410:	c1 14       	cp	r12, r1
    4412:	d1 04       	cpc	r13, r1
    4414:	41 f4       	brne	.+16     	; 0x4426 <vfprintf+0x3b0>
    4416:	ec 85       	ldd	r30, Y+12	; 0x0c
    4418:	e4 ff       	sbrs	r30, 4
    441a:	05 c0       	rjmp	.+10     	; 0x4426 <vfprintf+0x3b0>
    441c:	d1 94       	neg	r13
    441e:	c1 94       	neg	r12
    4420:	d1 08       	sbc	r13, r1
    4422:	8d e2       	ldi	r24, 0x2D	; 45
    4424:	01 c0       	rjmp	.+2      	; 0x4428 <vfprintf+0x3b2>
    4426:	8b e2       	ldi	r24, 0x2B	; 43
    4428:	b7 01       	movw	r22, r14
    442a:	90 e0       	ldi	r25, 0x00	; 0
    442c:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4430:	80 e3       	ldi	r24, 0x30	; 48
    4432:	2a e0       	ldi	r18, 0x0A	; 10
    4434:	c2 16       	cp	r12, r18
    4436:	d1 04       	cpc	r13, r1
    4438:	2c f0       	brlt	.+10     	; 0x4444 <vfprintf+0x3ce>
    443a:	8f 5f       	subi	r24, 0xFF	; 255
    443c:	fa e0       	ldi	r31, 0x0A	; 10
    443e:	cf 1a       	sub	r12, r31
    4440:	d1 08       	sbc	r13, r1
    4442:	f7 cf       	rjmp	.-18     	; 0x4432 <vfprintf+0x3bc>
    4444:	b7 01       	movw	r22, r14
    4446:	90 e0       	ldi	r25, 0x00	; 0
    4448:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    444c:	b7 01       	movw	r22, r14
    444e:	c6 01       	movw	r24, r12
    4450:	c0 96       	adiw	r24, 0x30	; 48
    4452:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4456:	54 c1       	rjmp	.+680    	; 0x4700 <vfprintf+0x68a>
    4458:	83 36       	cpi	r24, 0x63	; 99
    445a:	31 f0       	breq	.+12     	; 0x4468 <vfprintf+0x3f2>
    445c:	83 37       	cpi	r24, 0x73	; 115
    445e:	79 f0       	breq	.+30     	; 0x447e <vfprintf+0x408>
    4460:	83 35       	cpi	r24, 0x53	; 83
    4462:	09 f0       	breq	.+2      	; 0x4466 <vfprintf+0x3f0>
    4464:	56 c0       	rjmp	.+172    	; 0x4512 <vfprintf+0x49c>
    4466:	20 c0       	rjmp	.+64     	; 0x44a8 <vfprintf+0x432>
    4468:	56 01       	movw	r10, r12
    446a:	32 e0       	ldi	r19, 0x02	; 2
    446c:	a3 0e       	add	r10, r19
    446e:	b1 1c       	adc	r11, r1
    4470:	f6 01       	movw	r30, r12
    4472:	80 81       	ld	r24, Z
    4474:	89 83       	std	Y+1, r24	; 0x01
    4476:	01 e0       	ldi	r16, 0x01	; 1
    4478:	10 e0       	ldi	r17, 0x00	; 0
    447a:	63 01       	movw	r12, r6
    447c:	12 c0       	rjmp	.+36     	; 0x44a2 <vfprintf+0x42c>
    447e:	56 01       	movw	r10, r12
    4480:	f2 e0       	ldi	r31, 0x02	; 2
    4482:	af 0e       	add	r10, r31
    4484:	b1 1c       	adc	r11, r1
    4486:	f6 01       	movw	r30, r12
    4488:	c0 80       	ld	r12, Z
    448a:	d1 80       	ldd	r13, Z+1	; 0x01
    448c:	96 fe       	sbrs	r9, 6
    448e:	03 c0       	rjmp	.+6      	; 0x4496 <vfprintf+0x420>
    4490:	61 2f       	mov	r22, r17
    4492:	70 e0       	ldi	r23, 0x00	; 0
    4494:	02 c0       	rjmp	.+4      	; 0x449a <vfprintf+0x424>
    4496:	6f ef       	ldi	r22, 0xFF	; 255
    4498:	7f ef       	ldi	r23, 0xFF	; 255
    449a:	c6 01       	movw	r24, r12
    449c:	0e 94 2f 25 	call	0x4a5e	; 0x4a5e <strnlen>
    44a0:	8c 01       	movw	r16, r24
    44a2:	f9 2d       	mov	r31, r9
    44a4:	ff 77       	andi	r31, 0x7F	; 127
    44a6:	14 c0       	rjmp	.+40     	; 0x44d0 <vfprintf+0x45a>
    44a8:	56 01       	movw	r10, r12
    44aa:	22 e0       	ldi	r18, 0x02	; 2
    44ac:	a2 0e       	add	r10, r18
    44ae:	b1 1c       	adc	r11, r1
    44b0:	f6 01       	movw	r30, r12
    44b2:	c0 80       	ld	r12, Z
    44b4:	d1 80       	ldd	r13, Z+1	; 0x01
    44b6:	96 fe       	sbrs	r9, 6
    44b8:	03 c0       	rjmp	.+6      	; 0x44c0 <vfprintf+0x44a>
    44ba:	61 2f       	mov	r22, r17
    44bc:	70 e0       	ldi	r23, 0x00	; 0
    44be:	02 c0       	rjmp	.+4      	; 0x44c4 <vfprintf+0x44e>
    44c0:	6f ef       	ldi	r22, 0xFF	; 255
    44c2:	7f ef       	ldi	r23, 0xFF	; 255
    44c4:	c6 01       	movw	r24, r12
    44c6:	0e 94 09 25 	call	0x4a12	; 0x4a12 <strnlen_P>
    44ca:	8c 01       	movw	r16, r24
    44cc:	f9 2d       	mov	r31, r9
    44ce:	f0 68       	ori	r31, 0x80	; 128
    44d0:	9f 2e       	mov	r9, r31
    44d2:	f3 fd       	sbrc	r31, 3
    44d4:	1a c0       	rjmp	.+52     	; 0x450a <vfprintf+0x494>
    44d6:	85 2d       	mov	r24, r5
    44d8:	90 e0       	ldi	r25, 0x00	; 0
    44da:	08 17       	cp	r16, r24
    44dc:	19 07       	cpc	r17, r25
    44de:	a8 f4       	brcc	.+42     	; 0x450a <vfprintf+0x494>
    44e0:	b7 01       	movw	r22, r14
    44e2:	80 e2       	ldi	r24, 0x20	; 32
    44e4:	90 e0       	ldi	r25, 0x00	; 0
    44e6:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    44ea:	5a 94       	dec	r5
    44ec:	f4 cf       	rjmp	.-24     	; 0x44d6 <vfprintf+0x460>
    44ee:	f6 01       	movw	r30, r12
    44f0:	97 fc       	sbrc	r9, 7
    44f2:	85 91       	lpm	r24, Z+
    44f4:	97 fe       	sbrs	r9, 7
    44f6:	81 91       	ld	r24, Z+
    44f8:	6f 01       	movw	r12, r30
    44fa:	b7 01       	movw	r22, r14
    44fc:	90 e0       	ldi	r25, 0x00	; 0
    44fe:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4502:	51 10       	cpse	r5, r1
    4504:	5a 94       	dec	r5
    4506:	01 50       	subi	r16, 0x01	; 1
    4508:	11 09       	sbc	r17, r1
    450a:	01 15       	cp	r16, r1
    450c:	11 05       	cpc	r17, r1
    450e:	79 f7       	brne	.-34     	; 0x44ee <vfprintf+0x478>
    4510:	f7 c0       	rjmp	.+494    	; 0x4700 <vfprintf+0x68a>
    4512:	84 36       	cpi	r24, 0x64	; 100
    4514:	11 f0       	breq	.+4      	; 0x451a <vfprintf+0x4a4>
    4516:	89 36       	cpi	r24, 0x69	; 105
    4518:	61 f5       	brne	.+88     	; 0x4572 <vfprintf+0x4fc>
    451a:	56 01       	movw	r10, r12
    451c:	97 fe       	sbrs	r9, 7
    451e:	09 c0       	rjmp	.+18     	; 0x4532 <vfprintf+0x4bc>
    4520:	24 e0       	ldi	r18, 0x04	; 4
    4522:	a2 0e       	add	r10, r18
    4524:	b1 1c       	adc	r11, r1
    4526:	f6 01       	movw	r30, r12
    4528:	60 81       	ld	r22, Z
    452a:	71 81       	ldd	r23, Z+1	; 0x01
    452c:	82 81       	ldd	r24, Z+2	; 0x02
    452e:	93 81       	ldd	r25, Z+3	; 0x03
    4530:	0a c0       	rjmp	.+20     	; 0x4546 <vfprintf+0x4d0>
    4532:	f2 e0       	ldi	r31, 0x02	; 2
    4534:	af 0e       	add	r10, r31
    4536:	b1 1c       	adc	r11, r1
    4538:	f6 01       	movw	r30, r12
    453a:	60 81       	ld	r22, Z
    453c:	71 81       	ldd	r23, Z+1	; 0x01
    453e:	07 2e       	mov	r0, r23
    4540:	00 0c       	add	r0, r0
    4542:	88 0b       	sbc	r24, r24
    4544:	99 0b       	sbc	r25, r25
    4546:	f9 2d       	mov	r31, r9
    4548:	ff 76       	andi	r31, 0x6F	; 111
    454a:	9f 2e       	mov	r9, r31
    454c:	97 ff       	sbrs	r25, 7
    454e:	09 c0       	rjmp	.+18     	; 0x4562 <vfprintf+0x4ec>
    4550:	90 95       	com	r25
    4552:	80 95       	com	r24
    4554:	70 95       	com	r23
    4556:	61 95       	neg	r22
    4558:	7f 4f       	sbci	r23, 0xFF	; 255
    455a:	8f 4f       	sbci	r24, 0xFF	; 255
    455c:	9f 4f       	sbci	r25, 0xFF	; 255
    455e:	f0 68       	ori	r31, 0x80	; 128
    4560:	9f 2e       	mov	r9, r31
    4562:	2a e0       	ldi	r18, 0x0A	; 10
    4564:	30 e0       	ldi	r19, 0x00	; 0
    4566:	a3 01       	movw	r20, r6
    4568:	0e 94 b1 25 	call	0x4b62	; 0x4b62 <__ultoa_invert>
    456c:	c8 2e       	mov	r12, r24
    456e:	c6 18       	sub	r12, r6
    4570:	3f c0       	rjmp	.+126    	; 0x45f0 <vfprintf+0x57a>
    4572:	09 2d       	mov	r16, r9
    4574:	85 37       	cpi	r24, 0x75	; 117
    4576:	21 f4       	brne	.+8      	; 0x4580 <vfprintf+0x50a>
    4578:	0f 7e       	andi	r16, 0xEF	; 239
    457a:	2a e0       	ldi	r18, 0x0A	; 10
    457c:	30 e0       	ldi	r19, 0x00	; 0
    457e:	1d c0       	rjmp	.+58     	; 0x45ba <vfprintf+0x544>
    4580:	09 7f       	andi	r16, 0xF9	; 249
    4582:	8f 36       	cpi	r24, 0x6F	; 111
    4584:	91 f0       	breq	.+36     	; 0x45aa <vfprintf+0x534>
    4586:	18 f4       	brcc	.+6      	; 0x458e <vfprintf+0x518>
    4588:	88 35       	cpi	r24, 0x58	; 88
    458a:	59 f0       	breq	.+22     	; 0x45a2 <vfprintf+0x52c>
    458c:	c3 c0       	rjmp	.+390    	; 0x4714 <vfprintf+0x69e>
    458e:	80 37       	cpi	r24, 0x70	; 112
    4590:	19 f0       	breq	.+6      	; 0x4598 <vfprintf+0x522>
    4592:	88 37       	cpi	r24, 0x78	; 120
    4594:	11 f0       	breq	.+4      	; 0x459a <vfprintf+0x524>
    4596:	be c0       	rjmp	.+380    	; 0x4714 <vfprintf+0x69e>
    4598:	00 61       	ori	r16, 0x10	; 16
    459a:	04 ff       	sbrs	r16, 4
    459c:	09 c0       	rjmp	.+18     	; 0x45b0 <vfprintf+0x53a>
    459e:	04 60       	ori	r16, 0x04	; 4
    45a0:	07 c0       	rjmp	.+14     	; 0x45b0 <vfprintf+0x53a>
    45a2:	94 fe       	sbrs	r9, 4
    45a4:	08 c0       	rjmp	.+16     	; 0x45b6 <vfprintf+0x540>
    45a6:	06 60       	ori	r16, 0x06	; 6
    45a8:	06 c0       	rjmp	.+12     	; 0x45b6 <vfprintf+0x540>
    45aa:	28 e0       	ldi	r18, 0x08	; 8
    45ac:	30 e0       	ldi	r19, 0x00	; 0
    45ae:	05 c0       	rjmp	.+10     	; 0x45ba <vfprintf+0x544>
    45b0:	20 e1       	ldi	r18, 0x10	; 16
    45b2:	30 e0       	ldi	r19, 0x00	; 0
    45b4:	02 c0       	rjmp	.+4      	; 0x45ba <vfprintf+0x544>
    45b6:	20 e1       	ldi	r18, 0x10	; 16
    45b8:	32 e0       	ldi	r19, 0x02	; 2
    45ba:	56 01       	movw	r10, r12
    45bc:	07 ff       	sbrs	r16, 7
    45be:	09 c0       	rjmp	.+18     	; 0x45d2 <vfprintf+0x55c>
    45c0:	84 e0       	ldi	r24, 0x04	; 4
    45c2:	a8 0e       	add	r10, r24
    45c4:	b1 1c       	adc	r11, r1
    45c6:	f6 01       	movw	r30, r12
    45c8:	60 81       	ld	r22, Z
    45ca:	71 81       	ldd	r23, Z+1	; 0x01
    45cc:	82 81       	ldd	r24, Z+2	; 0x02
    45ce:	93 81       	ldd	r25, Z+3	; 0x03
    45d0:	08 c0       	rjmp	.+16     	; 0x45e2 <vfprintf+0x56c>
    45d2:	f2 e0       	ldi	r31, 0x02	; 2
    45d4:	af 0e       	add	r10, r31
    45d6:	b1 1c       	adc	r11, r1
    45d8:	f6 01       	movw	r30, r12
    45da:	60 81       	ld	r22, Z
    45dc:	71 81       	ldd	r23, Z+1	; 0x01
    45de:	80 e0       	ldi	r24, 0x00	; 0
    45e0:	90 e0       	ldi	r25, 0x00	; 0
    45e2:	a3 01       	movw	r20, r6
    45e4:	0e 94 b1 25 	call	0x4b62	; 0x4b62 <__ultoa_invert>
    45e8:	c8 2e       	mov	r12, r24
    45ea:	c6 18       	sub	r12, r6
    45ec:	0f 77       	andi	r16, 0x7F	; 127
    45ee:	90 2e       	mov	r9, r16
    45f0:	96 fe       	sbrs	r9, 6
    45f2:	0b c0       	rjmp	.+22     	; 0x460a <vfprintf+0x594>
    45f4:	09 2d       	mov	r16, r9
    45f6:	0e 7f       	andi	r16, 0xFE	; 254
    45f8:	c1 16       	cp	r12, r17
    45fa:	50 f4       	brcc	.+20     	; 0x4610 <vfprintf+0x59a>
    45fc:	94 fe       	sbrs	r9, 4
    45fe:	0a c0       	rjmp	.+20     	; 0x4614 <vfprintf+0x59e>
    4600:	92 fc       	sbrc	r9, 2
    4602:	08 c0       	rjmp	.+16     	; 0x4614 <vfprintf+0x59e>
    4604:	09 2d       	mov	r16, r9
    4606:	0e 7e       	andi	r16, 0xEE	; 238
    4608:	05 c0       	rjmp	.+10     	; 0x4614 <vfprintf+0x59e>
    460a:	dc 2c       	mov	r13, r12
    460c:	09 2d       	mov	r16, r9
    460e:	03 c0       	rjmp	.+6      	; 0x4616 <vfprintf+0x5a0>
    4610:	dc 2c       	mov	r13, r12
    4612:	01 c0       	rjmp	.+2      	; 0x4616 <vfprintf+0x5a0>
    4614:	d1 2e       	mov	r13, r17
    4616:	04 ff       	sbrs	r16, 4
    4618:	0d c0       	rjmp	.+26     	; 0x4634 <vfprintf+0x5be>
    461a:	fe 01       	movw	r30, r28
    461c:	ec 0d       	add	r30, r12
    461e:	f1 1d       	adc	r31, r1
    4620:	80 81       	ld	r24, Z
    4622:	80 33       	cpi	r24, 0x30	; 48
    4624:	11 f4       	brne	.+4      	; 0x462a <vfprintf+0x5b4>
    4626:	09 7e       	andi	r16, 0xE9	; 233
    4628:	09 c0       	rjmp	.+18     	; 0x463c <vfprintf+0x5c6>
    462a:	02 ff       	sbrs	r16, 2
    462c:	06 c0       	rjmp	.+12     	; 0x463a <vfprintf+0x5c4>
    462e:	d3 94       	inc	r13
    4630:	d3 94       	inc	r13
    4632:	04 c0       	rjmp	.+8      	; 0x463c <vfprintf+0x5c6>
    4634:	80 2f       	mov	r24, r16
    4636:	86 78       	andi	r24, 0x86	; 134
    4638:	09 f0       	breq	.+2      	; 0x463c <vfprintf+0x5c6>
    463a:	d3 94       	inc	r13
    463c:	03 fd       	sbrc	r16, 3
    463e:	11 c0       	rjmp	.+34     	; 0x4662 <vfprintf+0x5ec>
    4640:	00 ff       	sbrs	r16, 0
    4642:	06 c0       	rjmp	.+12     	; 0x4650 <vfprintf+0x5da>
    4644:	1c 2d       	mov	r17, r12
    4646:	d5 14       	cp	r13, r5
    4648:	80 f4       	brcc	.+32     	; 0x466a <vfprintf+0x5f4>
    464a:	15 0d       	add	r17, r5
    464c:	1d 19       	sub	r17, r13
    464e:	0d c0       	rjmp	.+26     	; 0x466a <vfprintf+0x5f4>
    4650:	d5 14       	cp	r13, r5
    4652:	58 f4       	brcc	.+22     	; 0x466a <vfprintf+0x5f4>
    4654:	b7 01       	movw	r22, r14
    4656:	80 e2       	ldi	r24, 0x20	; 32
    4658:	90 e0       	ldi	r25, 0x00	; 0
    465a:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    465e:	d3 94       	inc	r13
    4660:	f7 cf       	rjmp	.-18     	; 0x4650 <vfprintf+0x5da>
    4662:	d5 14       	cp	r13, r5
    4664:	10 f4       	brcc	.+4      	; 0x466a <vfprintf+0x5f4>
    4666:	5d 18       	sub	r5, r13
    4668:	01 c0       	rjmp	.+2      	; 0x466c <vfprintf+0x5f6>
    466a:	51 2c       	mov	r5, r1
    466c:	04 ff       	sbrs	r16, 4
    466e:	10 c0       	rjmp	.+32     	; 0x4690 <vfprintf+0x61a>
    4670:	b7 01       	movw	r22, r14
    4672:	80 e3       	ldi	r24, 0x30	; 48
    4674:	90 e0       	ldi	r25, 0x00	; 0
    4676:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    467a:	02 ff       	sbrs	r16, 2
    467c:	17 c0       	rjmp	.+46     	; 0x46ac <vfprintf+0x636>
    467e:	01 fd       	sbrc	r16, 1
    4680:	03 c0       	rjmp	.+6      	; 0x4688 <vfprintf+0x612>
    4682:	88 e7       	ldi	r24, 0x78	; 120
    4684:	90 e0       	ldi	r25, 0x00	; 0
    4686:	02 c0       	rjmp	.+4      	; 0x468c <vfprintf+0x616>
    4688:	88 e5       	ldi	r24, 0x58	; 88
    468a:	90 e0       	ldi	r25, 0x00	; 0
    468c:	b7 01       	movw	r22, r14
    468e:	0c c0       	rjmp	.+24     	; 0x46a8 <vfprintf+0x632>
    4690:	80 2f       	mov	r24, r16
    4692:	86 78       	andi	r24, 0x86	; 134
    4694:	59 f0       	breq	.+22     	; 0x46ac <vfprintf+0x636>
    4696:	01 ff       	sbrs	r16, 1
    4698:	02 c0       	rjmp	.+4      	; 0x469e <vfprintf+0x628>
    469a:	8b e2       	ldi	r24, 0x2B	; 43
    469c:	01 c0       	rjmp	.+2      	; 0x46a0 <vfprintf+0x62a>
    469e:	80 e2       	ldi	r24, 0x20	; 32
    46a0:	07 fd       	sbrc	r16, 7
    46a2:	8d e2       	ldi	r24, 0x2D	; 45
    46a4:	b7 01       	movw	r22, r14
    46a6:	90 e0       	ldi	r25, 0x00	; 0
    46a8:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    46ac:	c1 16       	cp	r12, r17
    46ae:	38 f4       	brcc	.+14     	; 0x46be <vfprintf+0x648>
    46b0:	b7 01       	movw	r22, r14
    46b2:	80 e3       	ldi	r24, 0x30	; 48
    46b4:	90 e0       	ldi	r25, 0x00	; 0
    46b6:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    46ba:	11 50       	subi	r17, 0x01	; 1
    46bc:	f7 cf       	rjmp	.-18     	; 0x46ac <vfprintf+0x636>
    46be:	ca 94       	dec	r12
    46c0:	f3 01       	movw	r30, r6
    46c2:	ec 0d       	add	r30, r12
    46c4:	f1 1d       	adc	r31, r1
    46c6:	80 81       	ld	r24, Z
    46c8:	b7 01       	movw	r22, r14
    46ca:	90 e0       	ldi	r25, 0x00	; 0
    46cc:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    46d0:	c1 10       	cpse	r12, r1
    46d2:	f5 cf       	rjmp	.-22     	; 0x46be <vfprintf+0x648>
    46d4:	15 c0       	rjmp	.+42     	; 0x4700 <vfprintf+0x68a>
    46d6:	f4 e0       	ldi	r31, 0x04	; 4
    46d8:	f5 15       	cp	r31, r5
    46da:	60 f5       	brcc	.+88     	; 0x4734 <vfprintf+0x6be>
    46dc:	84 e0       	ldi	r24, 0x04	; 4
    46de:	58 1a       	sub	r5, r24
    46e0:	93 fe       	sbrs	r9, 3
    46e2:	1f c0       	rjmp	.+62     	; 0x4722 <vfprintf+0x6ac>
    46e4:	01 11       	cpse	r16, r1
    46e6:	27 c0       	rjmp	.+78     	; 0x4736 <vfprintf+0x6c0>
    46e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    46ea:	23 ff       	sbrs	r18, 3
    46ec:	2a c0       	rjmp	.+84     	; 0x4742 <vfprintf+0x6cc>
    46ee:	0e e8       	ldi	r16, 0x8E	; 142
    46f0:	10 e0       	ldi	r17, 0x00	; 0
    46f2:	39 2d       	mov	r19, r9
    46f4:	30 71       	andi	r19, 0x10	; 16
    46f6:	93 2e       	mov	r9, r19
    46f8:	f8 01       	movw	r30, r16
    46fa:	84 91       	lpm	r24, Z
    46fc:	81 11       	cpse	r24, r1
    46fe:	24 c0       	rjmp	.+72     	; 0x4748 <vfprintf+0x6d2>
    4700:	55 20       	and	r5, r5
    4702:	09 f4       	brne	.+2      	; 0x4706 <vfprintf+0x690>
    4704:	e4 cc       	rjmp	.-1592   	; 0x40ce <vfprintf+0x58>
    4706:	b7 01       	movw	r22, r14
    4708:	80 e2       	ldi	r24, 0x20	; 32
    470a:	90 e0       	ldi	r25, 0x00	; 0
    470c:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4710:	5a 94       	dec	r5
    4712:	f6 cf       	rjmp	.-20     	; 0x4700 <vfprintf+0x68a>
    4714:	f7 01       	movw	r30, r14
    4716:	86 81       	ldd	r24, Z+6	; 0x06
    4718:	97 81       	ldd	r25, Z+7	; 0x07
    471a:	26 c0       	rjmp	.+76     	; 0x4768 <vfprintf+0x6f2>
    471c:	8f ef       	ldi	r24, 0xFF	; 255
    471e:	9f ef       	ldi	r25, 0xFF	; 255
    4720:	23 c0       	rjmp	.+70     	; 0x4768 <vfprintf+0x6f2>
    4722:	b7 01       	movw	r22, r14
    4724:	80 e2       	ldi	r24, 0x20	; 32
    4726:	90 e0       	ldi	r25, 0x00	; 0
    4728:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    472c:	5a 94       	dec	r5
    472e:	51 10       	cpse	r5, r1
    4730:	f8 cf       	rjmp	.-16     	; 0x4722 <vfprintf+0x6ac>
    4732:	d8 cf       	rjmp	.-80     	; 0x46e4 <vfprintf+0x66e>
    4734:	51 2c       	mov	r5, r1
    4736:	b7 01       	movw	r22, r14
    4738:	80 2f       	mov	r24, r16
    473a:	90 e0       	ldi	r25, 0x00	; 0
    473c:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4740:	d3 cf       	rjmp	.-90     	; 0x46e8 <vfprintf+0x672>
    4742:	02 e9       	ldi	r16, 0x92	; 146
    4744:	10 e0       	ldi	r17, 0x00	; 0
    4746:	d5 cf       	rjmp	.-86     	; 0x46f2 <vfprintf+0x67c>
    4748:	91 10       	cpse	r9, r1
    474a:	80 52       	subi	r24, 0x20	; 32
    474c:	b7 01       	movw	r22, r14
    474e:	90 e0       	ldi	r25, 0x00	; 0
    4750:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <fputc>
    4754:	0f 5f       	subi	r16, 0xFF	; 255
    4756:	1f 4f       	sbci	r17, 0xFF	; 255
    4758:	cf cf       	rjmp	.-98     	; 0x46f8 <vfprintf+0x682>
    475a:	23 e0       	ldi	r18, 0x03	; 3
    475c:	25 15       	cp	r18, r5
    475e:	10 f4       	brcc	.+4      	; 0x4764 <vfprintf+0x6ee>
    4760:	83 e0       	ldi	r24, 0x03	; 3
    4762:	bd cf       	rjmp	.-134    	; 0x46de <vfprintf+0x668>
    4764:	51 2c       	mov	r5, r1
    4766:	c0 cf       	rjmp	.-128    	; 0x46e8 <vfprintf+0x672>
    4768:	60 96       	adiw	r28, 0x10	; 16
    476a:	e2 e1       	ldi	r30, 0x12	; 18
    476c:	0c 94 07 24 	jmp	0x480e	; 0x480e <__epilogue_restores__>

00004770 <__udivmodsi4>:
    4770:	a1 e2       	ldi	r26, 0x21	; 33
    4772:	1a 2e       	mov	r1, r26
    4774:	aa 1b       	sub	r26, r26
    4776:	bb 1b       	sub	r27, r27
    4778:	fd 01       	movw	r30, r26
    477a:	0d c0       	rjmp	.+26     	; 0x4796 <__udivmodsi4_ep>

0000477c <__udivmodsi4_loop>:
    477c:	aa 1f       	adc	r26, r26
    477e:	bb 1f       	adc	r27, r27
    4780:	ee 1f       	adc	r30, r30
    4782:	ff 1f       	adc	r31, r31
    4784:	a2 17       	cp	r26, r18
    4786:	b3 07       	cpc	r27, r19
    4788:	e4 07       	cpc	r30, r20
    478a:	f5 07       	cpc	r31, r21
    478c:	20 f0       	brcs	.+8      	; 0x4796 <__udivmodsi4_ep>
    478e:	a2 1b       	sub	r26, r18
    4790:	b3 0b       	sbc	r27, r19
    4792:	e4 0b       	sbc	r30, r20
    4794:	f5 0b       	sbc	r31, r21

00004796 <__udivmodsi4_ep>:
    4796:	66 1f       	adc	r22, r22
    4798:	77 1f       	adc	r23, r23
    479a:	88 1f       	adc	r24, r24
    479c:	99 1f       	adc	r25, r25
    479e:	1a 94       	dec	r1
    47a0:	69 f7       	brne	.-38     	; 0x477c <__udivmodsi4_loop>
    47a2:	60 95       	com	r22
    47a4:	70 95       	com	r23
    47a6:	80 95       	com	r24
    47a8:	90 95       	com	r25
    47aa:	9b 01       	movw	r18, r22
    47ac:	ac 01       	movw	r20, r24
    47ae:	bd 01       	movw	r22, r26
    47b0:	cf 01       	movw	r24, r30
    47b2:	08 95       	ret

000047b4 <__tablejump2__>:
    47b4:	ee 0f       	add	r30, r30
    47b6:	ff 1f       	adc	r31, r31
    47b8:	05 90       	lpm	r0, Z+
    47ba:	f4 91       	lpm	r31, Z
    47bc:	e0 2d       	mov	r30, r0
    47be:	09 94       	ijmp

000047c0 <__muluhisi3>:
    47c0:	0e 94 22 24 	call	0x4844	; 0x4844 <__umulhisi3>
    47c4:	a5 9f       	mul	r26, r21
    47c6:	90 0d       	add	r25, r0
    47c8:	b4 9f       	mul	r27, r20
    47ca:	90 0d       	add	r25, r0
    47cc:	a4 9f       	mul	r26, r20
    47ce:	80 0d       	add	r24, r0
    47d0:	91 1d       	adc	r25, r1
    47d2:	11 24       	eor	r1, r1
    47d4:	08 95       	ret

000047d6 <__prologue_saves__>:
    47d6:	2f 92       	push	r2
    47d8:	3f 92       	push	r3
    47da:	4f 92       	push	r4
    47dc:	5f 92       	push	r5
    47de:	6f 92       	push	r6
    47e0:	7f 92       	push	r7
    47e2:	8f 92       	push	r8
    47e4:	9f 92       	push	r9
    47e6:	af 92       	push	r10
    47e8:	bf 92       	push	r11
    47ea:	cf 92       	push	r12
    47ec:	df 92       	push	r13
    47ee:	ef 92       	push	r14
    47f0:	ff 92       	push	r15
    47f2:	0f 93       	push	r16
    47f4:	1f 93       	push	r17
    47f6:	cf 93       	push	r28
    47f8:	df 93       	push	r29
    47fa:	cd b7       	in	r28, 0x3d	; 61
    47fc:	de b7       	in	r29, 0x3e	; 62
    47fe:	ca 1b       	sub	r28, r26
    4800:	db 0b       	sbc	r29, r27
    4802:	0f b6       	in	r0, 0x3f	; 63
    4804:	f8 94       	cli
    4806:	de bf       	out	0x3e, r29	; 62
    4808:	0f be       	out	0x3f, r0	; 63
    480a:	cd bf       	out	0x3d, r28	; 61
    480c:	09 94       	ijmp

0000480e <__epilogue_restores__>:
    480e:	2a 88       	ldd	r2, Y+18	; 0x12
    4810:	39 88       	ldd	r3, Y+17	; 0x11
    4812:	48 88       	ldd	r4, Y+16	; 0x10
    4814:	5f 84       	ldd	r5, Y+15	; 0x0f
    4816:	6e 84       	ldd	r6, Y+14	; 0x0e
    4818:	7d 84       	ldd	r7, Y+13	; 0x0d
    481a:	8c 84       	ldd	r8, Y+12	; 0x0c
    481c:	9b 84       	ldd	r9, Y+11	; 0x0b
    481e:	aa 84       	ldd	r10, Y+10	; 0x0a
    4820:	b9 84       	ldd	r11, Y+9	; 0x09
    4822:	c8 84       	ldd	r12, Y+8	; 0x08
    4824:	df 80       	ldd	r13, Y+7	; 0x07
    4826:	ee 80       	ldd	r14, Y+6	; 0x06
    4828:	fd 80       	ldd	r15, Y+5	; 0x05
    482a:	0c 81       	ldd	r16, Y+4	; 0x04
    482c:	1b 81       	ldd	r17, Y+3	; 0x03
    482e:	aa 81       	ldd	r26, Y+2	; 0x02
    4830:	b9 81       	ldd	r27, Y+1	; 0x01
    4832:	ce 0f       	add	r28, r30
    4834:	d1 1d       	adc	r29, r1
    4836:	0f b6       	in	r0, 0x3f	; 63
    4838:	f8 94       	cli
    483a:	de bf       	out	0x3e, r29	; 62
    483c:	0f be       	out	0x3f, r0	; 63
    483e:	cd bf       	out	0x3d, r28	; 61
    4840:	ed 01       	movw	r28, r26
    4842:	08 95       	ret

00004844 <__umulhisi3>:
    4844:	a2 9f       	mul	r26, r18
    4846:	b0 01       	movw	r22, r0
    4848:	b3 9f       	mul	r27, r19
    484a:	c0 01       	movw	r24, r0
    484c:	a3 9f       	mul	r26, r19
    484e:	70 0d       	add	r23, r0
    4850:	81 1d       	adc	r24, r1
    4852:	11 24       	eor	r1, r1
    4854:	91 1d       	adc	r25, r1
    4856:	b2 9f       	mul	r27, r18
    4858:	70 0d       	add	r23, r0
    485a:	81 1d       	adc	r24, r1
    485c:	11 24       	eor	r1, r1
    485e:	91 1d       	adc	r25, r1
    4860:	08 95       	ret

00004862 <__ftoa_engine>:
    4862:	28 30       	cpi	r18, 0x08	; 8
    4864:	08 f0       	brcs	.+2      	; 0x4868 <__ftoa_engine+0x6>
    4866:	27 e0       	ldi	r18, 0x07	; 7
    4868:	33 27       	eor	r19, r19
    486a:	da 01       	movw	r26, r20
    486c:	99 0f       	add	r25, r25
    486e:	31 1d       	adc	r19, r1
    4870:	87 fd       	sbrc	r24, 7
    4872:	91 60       	ori	r25, 0x01	; 1
    4874:	00 96       	adiw	r24, 0x00	; 0
    4876:	61 05       	cpc	r22, r1
    4878:	71 05       	cpc	r23, r1
    487a:	39 f4       	brne	.+14     	; 0x488a <__ftoa_engine+0x28>
    487c:	32 60       	ori	r19, 0x02	; 2
    487e:	2e 5f       	subi	r18, 0xFE	; 254
    4880:	3d 93       	st	X+, r19
    4882:	30 e3       	ldi	r19, 0x30	; 48
    4884:	2a 95       	dec	r18
    4886:	e1 f7       	brne	.-8      	; 0x4880 <__ftoa_engine+0x1e>
    4888:	08 95       	ret
    488a:	9f 3f       	cpi	r25, 0xFF	; 255
    488c:	30 f0       	brcs	.+12     	; 0x489a <__ftoa_engine+0x38>
    488e:	80 38       	cpi	r24, 0x80	; 128
    4890:	71 05       	cpc	r23, r1
    4892:	61 05       	cpc	r22, r1
    4894:	09 f0       	breq	.+2      	; 0x4898 <__ftoa_engine+0x36>
    4896:	3c 5f       	subi	r19, 0xFC	; 252
    4898:	3c 5f       	subi	r19, 0xFC	; 252
    489a:	3d 93       	st	X+, r19
    489c:	91 30       	cpi	r25, 0x01	; 1
    489e:	08 f0       	brcs	.+2      	; 0x48a2 <__ftoa_engine+0x40>
    48a0:	80 68       	ori	r24, 0x80	; 128
    48a2:	91 1d       	adc	r25, r1
    48a4:	df 93       	push	r29
    48a6:	cf 93       	push	r28
    48a8:	1f 93       	push	r17
    48aa:	0f 93       	push	r16
    48ac:	ff 92       	push	r15
    48ae:	ef 92       	push	r14
    48b0:	19 2f       	mov	r17, r25
    48b2:	98 7f       	andi	r25, 0xF8	; 248
    48b4:	96 95       	lsr	r25
    48b6:	e9 2f       	mov	r30, r25
    48b8:	96 95       	lsr	r25
    48ba:	96 95       	lsr	r25
    48bc:	e9 0f       	add	r30, r25
    48be:	ff 27       	eor	r31, r31
    48c0:	e0 51       	subi	r30, 0x10	; 16
    48c2:	ff 4f       	sbci	r31, 0xFF	; 255
    48c4:	99 27       	eor	r25, r25
    48c6:	33 27       	eor	r19, r19
    48c8:	ee 24       	eor	r14, r14
    48ca:	ff 24       	eor	r15, r15
    48cc:	a7 01       	movw	r20, r14
    48ce:	e7 01       	movw	r28, r14
    48d0:	05 90       	lpm	r0, Z+
    48d2:	08 94       	sec
    48d4:	07 94       	ror	r0
    48d6:	28 f4       	brcc	.+10     	; 0x48e2 <__ftoa_engine+0x80>
    48d8:	36 0f       	add	r19, r22
    48da:	e7 1e       	adc	r14, r23
    48dc:	f8 1e       	adc	r15, r24
    48de:	49 1f       	adc	r20, r25
    48e0:	51 1d       	adc	r21, r1
    48e2:	66 0f       	add	r22, r22
    48e4:	77 1f       	adc	r23, r23
    48e6:	88 1f       	adc	r24, r24
    48e8:	99 1f       	adc	r25, r25
    48ea:	06 94       	lsr	r0
    48ec:	a1 f7       	brne	.-24     	; 0x48d6 <__ftoa_engine+0x74>
    48ee:	05 90       	lpm	r0, Z+
    48f0:	07 94       	ror	r0
    48f2:	28 f4       	brcc	.+10     	; 0x48fe <__ftoa_engine+0x9c>
    48f4:	e7 0e       	add	r14, r23
    48f6:	f8 1e       	adc	r15, r24
    48f8:	49 1f       	adc	r20, r25
    48fa:	56 1f       	adc	r21, r22
    48fc:	c1 1d       	adc	r28, r1
    48fe:	77 0f       	add	r23, r23
    4900:	88 1f       	adc	r24, r24
    4902:	99 1f       	adc	r25, r25
    4904:	66 1f       	adc	r22, r22
    4906:	06 94       	lsr	r0
    4908:	a1 f7       	brne	.-24     	; 0x48f2 <__ftoa_engine+0x90>
    490a:	05 90       	lpm	r0, Z+
    490c:	07 94       	ror	r0
    490e:	28 f4       	brcc	.+10     	; 0x491a <__ftoa_engine+0xb8>
    4910:	f8 0e       	add	r15, r24
    4912:	49 1f       	adc	r20, r25
    4914:	56 1f       	adc	r21, r22
    4916:	c7 1f       	adc	r28, r23
    4918:	d1 1d       	adc	r29, r1
    491a:	88 0f       	add	r24, r24
    491c:	99 1f       	adc	r25, r25
    491e:	66 1f       	adc	r22, r22
    4920:	77 1f       	adc	r23, r23
    4922:	06 94       	lsr	r0
    4924:	a1 f7       	brne	.-24     	; 0x490e <__ftoa_engine+0xac>
    4926:	05 90       	lpm	r0, Z+
    4928:	07 94       	ror	r0
    492a:	20 f4       	brcc	.+8      	; 0x4934 <__ftoa_engine+0xd2>
    492c:	49 0f       	add	r20, r25
    492e:	56 1f       	adc	r21, r22
    4930:	c7 1f       	adc	r28, r23
    4932:	d8 1f       	adc	r29, r24
    4934:	99 0f       	add	r25, r25
    4936:	66 1f       	adc	r22, r22
    4938:	77 1f       	adc	r23, r23
    493a:	88 1f       	adc	r24, r24
    493c:	06 94       	lsr	r0
    493e:	a9 f7       	brne	.-22     	; 0x492a <__ftoa_engine+0xc8>
    4940:	84 91       	lpm	r24, Z
    4942:	10 95       	com	r17
    4944:	17 70       	andi	r17, 0x07	; 7
    4946:	41 f0       	breq	.+16     	; 0x4958 <__ftoa_engine+0xf6>
    4948:	d6 95       	lsr	r29
    494a:	c7 95       	ror	r28
    494c:	57 95       	ror	r21
    494e:	47 95       	ror	r20
    4950:	f7 94       	ror	r15
    4952:	e7 94       	ror	r14
    4954:	1a 95       	dec	r17
    4956:	c1 f7       	brne	.-16     	; 0x4948 <__ftoa_engine+0xe6>
    4958:	e6 e9       	ldi	r30, 0x96	; 150
    495a:	f0 e0       	ldi	r31, 0x00	; 0
    495c:	68 94       	set
    495e:	15 90       	lpm	r1, Z+
    4960:	15 91       	lpm	r17, Z+
    4962:	35 91       	lpm	r19, Z+
    4964:	65 91       	lpm	r22, Z+
    4966:	95 91       	lpm	r25, Z+
    4968:	05 90       	lpm	r0, Z+
    496a:	7f e2       	ldi	r23, 0x2F	; 47
    496c:	73 95       	inc	r23
    496e:	e1 18       	sub	r14, r1
    4970:	f1 0a       	sbc	r15, r17
    4972:	43 0b       	sbc	r20, r19
    4974:	56 0b       	sbc	r21, r22
    4976:	c9 0b       	sbc	r28, r25
    4978:	d0 09       	sbc	r29, r0
    497a:	c0 f7       	brcc	.-16     	; 0x496c <__ftoa_engine+0x10a>
    497c:	e1 0c       	add	r14, r1
    497e:	f1 1e       	adc	r15, r17
    4980:	43 1f       	adc	r20, r19
    4982:	56 1f       	adc	r21, r22
    4984:	c9 1f       	adc	r28, r25
    4986:	d0 1d       	adc	r29, r0
    4988:	7e f4       	brtc	.+30     	; 0x49a8 <__ftoa_engine+0x146>
    498a:	70 33       	cpi	r23, 0x30	; 48
    498c:	11 f4       	brne	.+4      	; 0x4992 <__ftoa_engine+0x130>
    498e:	8a 95       	dec	r24
    4990:	e6 cf       	rjmp	.-52     	; 0x495e <__ftoa_engine+0xfc>
    4992:	e8 94       	clt
    4994:	01 50       	subi	r16, 0x01	; 1
    4996:	30 f0       	brcs	.+12     	; 0x49a4 <__ftoa_engine+0x142>
    4998:	08 0f       	add	r16, r24
    499a:	0a f4       	brpl	.+2      	; 0x499e <__ftoa_engine+0x13c>
    499c:	00 27       	eor	r16, r16
    499e:	02 17       	cp	r16, r18
    49a0:	08 f4       	brcc	.+2      	; 0x49a4 <__ftoa_engine+0x142>
    49a2:	20 2f       	mov	r18, r16
    49a4:	23 95       	inc	r18
    49a6:	02 2f       	mov	r16, r18
    49a8:	7a 33       	cpi	r23, 0x3A	; 58
    49aa:	28 f0       	brcs	.+10     	; 0x49b6 <__ftoa_engine+0x154>
    49ac:	79 e3       	ldi	r23, 0x39	; 57
    49ae:	7d 93       	st	X+, r23
    49b0:	2a 95       	dec	r18
    49b2:	e9 f7       	brne	.-6      	; 0x49ae <__ftoa_engine+0x14c>
    49b4:	10 c0       	rjmp	.+32     	; 0x49d6 <__ftoa_engine+0x174>
    49b6:	7d 93       	st	X+, r23
    49b8:	2a 95       	dec	r18
    49ba:	89 f6       	brne	.-94     	; 0x495e <__ftoa_engine+0xfc>
    49bc:	06 94       	lsr	r0
    49be:	97 95       	ror	r25
    49c0:	67 95       	ror	r22
    49c2:	37 95       	ror	r19
    49c4:	17 95       	ror	r17
    49c6:	17 94       	ror	r1
    49c8:	e1 18       	sub	r14, r1
    49ca:	f1 0a       	sbc	r15, r17
    49cc:	43 0b       	sbc	r20, r19
    49ce:	56 0b       	sbc	r21, r22
    49d0:	c9 0b       	sbc	r28, r25
    49d2:	d0 09       	sbc	r29, r0
    49d4:	98 f0       	brcs	.+38     	; 0x49fc <__ftoa_engine+0x19a>
    49d6:	23 95       	inc	r18
    49d8:	7e 91       	ld	r23, -X
    49da:	73 95       	inc	r23
    49dc:	7a 33       	cpi	r23, 0x3A	; 58
    49de:	08 f0       	brcs	.+2      	; 0x49e2 <__ftoa_engine+0x180>
    49e0:	70 e3       	ldi	r23, 0x30	; 48
    49e2:	7c 93       	st	X, r23
    49e4:	20 13       	cpse	r18, r16
    49e6:	b8 f7       	brcc	.-18     	; 0x49d6 <__ftoa_engine+0x174>
    49e8:	7e 91       	ld	r23, -X
    49ea:	70 61       	ori	r23, 0x10	; 16
    49ec:	7d 93       	st	X+, r23
    49ee:	30 f0       	brcs	.+12     	; 0x49fc <__ftoa_engine+0x19a>
    49f0:	83 95       	inc	r24
    49f2:	71 e3       	ldi	r23, 0x31	; 49
    49f4:	7d 93       	st	X+, r23
    49f6:	70 e3       	ldi	r23, 0x30	; 48
    49f8:	2a 95       	dec	r18
    49fa:	e1 f7       	brne	.-8      	; 0x49f4 <__ftoa_engine+0x192>
    49fc:	11 24       	eor	r1, r1
    49fe:	ef 90       	pop	r14
    4a00:	ff 90       	pop	r15
    4a02:	0f 91       	pop	r16
    4a04:	1f 91       	pop	r17
    4a06:	cf 91       	pop	r28
    4a08:	df 91       	pop	r29
    4a0a:	99 27       	eor	r25, r25
    4a0c:	87 fd       	sbrc	r24, 7
    4a0e:	90 95       	com	r25
    4a10:	08 95       	ret

00004a12 <strnlen_P>:
    4a12:	fc 01       	movw	r30, r24
    4a14:	05 90       	lpm	r0, Z+
    4a16:	61 50       	subi	r22, 0x01	; 1
    4a18:	70 40       	sbci	r23, 0x00	; 0
    4a1a:	01 10       	cpse	r0, r1
    4a1c:	d8 f7       	brcc	.-10     	; 0x4a14 <strnlen_P+0x2>
    4a1e:	80 95       	com	r24
    4a20:	90 95       	com	r25
    4a22:	8e 0f       	add	r24, r30
    4a24:	9f 1f       	adc	r25, r31
    4a26:	08 95       	ret

00004a28 <memset>:
    4a28:	dc 01       	movw	r26, r24
    4a2a:	01 c0       	rjmp	.+2      	; 0x4a2e <memset+0x6>
    4a2c:	6d 93       	st	X+, r22
    4a2e:	41 50       	subi	r20, 0x01	; 1
    4a30:	50 40       	sbci	r21, 0x00	; 0
    4a32:	e0 f7       	brcc	.-8      	; 0x4a2c <memset+0x4>
    4a34:	08 95       	ret

00004a36 <strcat>:
    4a36:	fb 01       	movw	r30, r22
    4a38:	dc 01       	movw	r26, r24
    4a3a:	0d 90       	ld	r0, X+
    4a3c:	00 20       	and	r0, r0
    4a3e:	e9 f7       	brne	.-6      	; 0x4a3a <strcat+0x4>
    4a40:	11 97       	sbiw	r26, 0x01	; 1
    4a42:	01 90       	ld	r0, Z+
    4a44:	0d 92       	st	X+, r0
    4a46:	00 20       	and	r0, r0
    4a48:	e1 f7       	brne	.-8      	; 0x4a42 <strcat+0xc>
    4a4a:	08 95       	ret

00004a4c <strcmp>:
    4a4c:	fb 01       	movw	r30, r22
    4a4e:	dc 01       	movw	r26, r24
    4a50:	8d 91       	ld	r24, X+
    4a52:	01 90       	ld	r0, Z+
    4a54:	80 19       	sub	r24, r0
    4a56:	01 10       	cpse	r0, r1
    4a58:	d9 f3       	breq	.-10     	; 0x4a50 <strcmp+0x4>
    4a5a:	99 0b       	sbc	r25, r25
    4a5c:	08 95       	ret

00004a5e <strnlen>:
    4a5e:	fc 01       	movw	r30, r24
    4a60:	61 50       	subi	r22, 0x01	; 1
    4a62:	70 40       	sbci	r23, 0x00	; 0
    4a64:	01 90       	ld	r0, Z+
    4a66:	01 10       	cpse	r0, r1
    4a68:	d8 f7       	brcc	.-10     	; 0x4a60 <strnlen+0x2>
    4a6a:	80 95       	com	r24
    4a6c:	90 95       	com	r25
    4a6e:	8e 0f       	add	r24, r30
    4a70:	9f 1f       	adc	r25, r31
    4a72:	08 95       	ret

00004a74 <fputc>:
    4a74:	0f 93       	push	r16
    4a76:	1f 93       	push	r17
    4a78:	cf 93       	push	r28
    4a7a:	df 93       	push	r29
    4a7c:	fb 01       	movw	r30, r22
    4a7e:	23 81       	ldd	r18, Z+3	; 0x03
    4a80:	21 fd       	sbrc	r18, 1
    4a82:	03 c0       	rjmp	.+6      	; 0x4a8a <fputc+0x16>
    4a84:	8f ef       	ldi	r24, 0xFF	; 255
    4a86:	9f ef       	ldi	r25, 0xFF	; 255
    4a88:	2c c0       	rjmp	.+88     	; 0x4ae2 <fputc+0x6e>
    4a8a:	22 ff       	sbrs	r18, 2
    4a8c:	16 c0       	rjmp	.+44     	; 0x4aba <fputc+0x46>
    4a8e:	46 81       	ldd	r20, Z+6	; 0x06
    4a90:	57 81       	ldd	r21, Z+7	; 0x07
    4a92:	24 81       	ldd	r18, Z+4	; 0x04
    4a94:	35 81       	ldd	r19, Z+5	; 0x05
    4a96:	42 17       	cp	r20, r18
    4a98:	53 07       	cpc	r21, r19
    4a9a:	44 f4       	brge	.+16     	; 0x4aac <fputc+0x38>
    4a9c:	a0 81       	ld	r26, Z
    4a9e:	b1 81       	ldd	r27, Z+1	; 0x01
    4aa0:	9d 01       	movw	r18, r26
    4aa2:	2f 5f       	subi	r18, 0xFF	; 255
    4aa4:	3f 4f       	sbci	r19, 0xFF	; 255
    4aa6:	31 83       	std	Z+1, r19	; 0x01
    4aa8:	20 83       	st	Z, r18
    4aaa:	8c 93       	st	X, r24
    4aac:	26 81       	ldd	r18, Z+6	; 0x06
    4aae:	37 81       	ldd	r19, Z+7	; 0x07
    4ab0:	2f 5f       	subi	r18, 0xFF	; 255
    4ab2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ab4:	37 83       	std	Z+7, r19	; 0x07
    4ab6:	26 83       	std	Z+6, r18	; 0x06
    4ab8:	14 c0       	rjmp	.+40     	; 0x4ae2 <fputc+0x6e>
    4aba:	8b 01       	movw	r16, r22
    4abc:	ec 01       	movw	r28, r24
    4abe:	fb 01       	movw	r30, r22
    4ac0:	00 84       	ldd	r0, Z+8	; 0x08
    4ac2:	f1 85       	ldd	r31, Z+9	; 0x09
    4ac4:	e0 2d       	mov	r30, r0
    4ac6:	09 95       	icall
    4ac8:	89 2b       	or	r24, r25
    4aca:	e1 f6       	brne	.-72     	; 0x4a84 <fputc+0x10>
    4acc:	d8 01       	movw	r26, r16
    4ace:	16 96       	adiw	r26, 0x06	; 6
    4ad0:	8d 91       	ld	r24, X+
    4ad2:	9c 91       	ld	r25, X
    4ad4:	17 97       	sbiw	r26, 0x07	; 7
    4ad6:	01 96       	adiw	r24, 0x01	; 1
    4ad8:	17 96       	adiw	r26, 0x07	; 7
    4ada:	9c 93       	st	X, r25
    4adc:	8e 93       	st	-X, r24
    4ade:	16 97       	sbiw	r26, 0x06	; 6
    4ae0:	ce 01       	movw	r24, r28
    4ae2:	df 91       	pop	r29
    4ae4:	cf 91       	pop	r28
    4ae6:	1f 91       	pop	r17
    4ae8:	0f 91       	pop	r16
    4aea:	08 95       	ret

00004aec <sprintf>:
    4aec:	ae e0       	ldi	r26, 0x0E	; 14
    4aee:	b0 e0       	ldi	r27, 0x00	; 0
    4af0:	ec e7       	ldi	r30, 0x7C	; 124
    4af2:	f5 e2       	ldi	r31, 0x25	; 37
    4af4:	0c 94 f9 23 	jmp	0x47f2	; 0x47f2 <__prologue_saves__+0x1c>
    4af8:	0d 89       	ldd	r16, Y+21	; 0x15
    4afa:	1e 89       	ldd	r17, Y+22	; 0x16
    4afc:	86 e0       	ldi	r24, 0x06	; 6
    4afe:	8c 83       	std	Y+4, r24	; 0x04
    4b00:	1a 83       	std	Y+2, r17	; 0x02
    4b02:	09 83       	std	Y+1, r16	; 0x01
    4b04:	8f ef       	ldi	r24, 0xFF	; 255
    4b06:	9f e7       	ldi	r25, 0x7F	; 127
    4b08:	9e 83       	std	Y+6, r25	; 0x06
    4b0a:	8d 83       	std	Y+5, r24	; 0x05
    4b0c:	ae 01       	movw	r20, r28
    4b0e:	47 5e       	subi	r20, 0xE7	; 231
    4b10:	5f 4f       	sbci	r21, 0xFF	; 255
    4b12:	6f 89       	ldd	r22, Y+23	; 0x17
    4b14:	78 8d       	ldd	r23, Y+24	; 0x18
    4b16:	ce 01       	movw	r24, r28
    4b18:	01 96       	adiw	r24, 0x01	; 1
    4b1a:	0e 94 3b 20 	call	0x4076	; 0x4076 <vfprintf>
    4b1e:	ef 81       	ldd	r30, Y+7	; 0x07
    4b20:	f8 85       	ldd	r31, Y+8	; 0x08
    4b22:	e0 0f       	add	r30, r16
    4b24:	f1 1f       	adc	r31, r17
    4b26:	10 82       	st	Z, r1
    4b28:	2e 96       	adiw	r28, 0x0e	; 14
    4b2a:	e4 e0       	ldi	r30, 0x04	; 4
    4b2c:	0c 94 15 24 	jmp	0x482a	; 0x482a <__epilogue_restores__+0x1c>

00004b30 <sscanf>:
    4b30:	ae e0       	ldi	r26, 0x0E	; 14
    4b32:	b0 e0       	ldi	r27, 0x00	; 0
    4b34:	ee e9       	ldi	r30, 0x9E	; 158
    4b36:	f5 e2       	ldi	r31, 0x25	; 37
    4b38:	0c 94 fb 23 	jmp	0x47f6	; 0x47f6 <__prologue_saves__+0x20>
    4b3c:	85 e0       	ldi	r24, 0x05	; 5
    4b3e:	8c 83       	std	Y+4, r24	; 0x04
    4b40:	8b 89       	ldd	r24, Y+19	; 0x13
    4b42:	9c 89       	ldd	r25, Y+20	; 0x14
    4b44:	9a 83       	std	Y+2, r25	; 0x02
    4b46:	89 83       	std	Y+1, r24	; 0x01
    4b48:	ae 01       	movw	r20, r28
    4b4a:	49 5e       	subi	r20, 0xE9	; 233
    4b4c:	5f 4f       	sbci	r21, 0xFF	; 255
    4b4e:	6d 89       	ldd	r22, Y+21	; 0x15
    4b50:	7e 89       	ldd	r23, Y+22	; 0x16
    4b52:	ce 01       	movw	r24, r28
    4b54:	01 96       	adiw	r24, 0x01	; 1
    4b56:	0e 94 ab 27 	call	0x4f56	; 0x4f56 <vfscanf>
    4b5a:	2e 96       	adiw	r28, 0x0e	; 14
    4b5c:	e2 e0       	ldi	r30, 0x02	; 2
    4b5e:	0c 94 17 24 	jmp	0x482e	; 0x482e <__epilogue_restores__+0x20>

00004b62 <__ultoa_invert>:
    4b62:	fa 01       	movw	r30, r20
    4b64:	aa 27       	eor	r26, r26
    4b66:	28 30       	cpi	r18, 0x08	; 8
    4b68:	51 f1       	breq	.+84     	; 0x4bbe <__ultoa_invert+0x5c>
    4b6a:	20 31       	cpi	r18, 0x10	; 16
    4b6c:	81 f1       	breq	.+96     	; 0x4bce <__ultoa_invert+0x6c>
    4b6e:	e8 94       	clt
    4b70:	6f 93       	push	r22
    4b72:	6e 7f       	andi	r22, 0xFE	; 254
    4b74:	6e 5f       	subi	r22, 0xFE	; 254
    4b76:	7f 4f       	sbci	r23, 0xFF	; 255
    4b78:	8f 4f       	sbci	r24, 0xFF	; 255
    4b7a:	9f 4f       	sbci	r25, 0xFF	; 255
    4b7c:	af 4f       	sbci	r26, 0xFF	; 255
    4b7e:	b1 e0       	ldi	r27, 0x01	; 1
    4b80:	3e d0       	rcall	.+124    	; 0x4bfe <__ultoa_invert+0x9c>
    4b82:	b4 e0       	ldi	r27, 0x04	; 4
    4b84:	3c d0       	rcall	.+120    	; 0x4bfe <__ultoa_invert+0x9c>
    4b86:	67 0f       	add	r22, r23
    4b88:	78 1f       	adc	r23, r24
    4b8a:	89 1f       	adc	r24, r25
    4b8c:	9a 1f       	adc	r25, r26
    4b8e:	a1 1d       	adc	r26, r1
    4b90:	68 0f       	add	r22, r24
    4b92:	79 1f       	adc	r23, r25
    4b94:	8a 1f       	adc	r24, r26
    4b96:	91 1d       	adc	r25, r1
    4b98:	a1 1d       	adc	r26, r1
    4b9a:	6a 0f       	add	r22, r26
    4b9c:	71 1d       	adc	r23, r1
    4b9e:	81 1d       	adc	r24, r1
    4ba0:	91 1d       	adc	r25, r1
    4ba2:	a1 1d       	adc	r26, r1
    4ba4:	20 d0       	rcall	.+64     	; 0x4be6 <__ultoa_invert+0x84>
    4ba6:	09 f4       	brne	.+2      	; 0x4baa <__ultoa_invert+0x48>
    4ba8:	68 94       	set
    4baa:	3f 91       	pop	r19
    4bac:	2a e0       	ldi	r18, 0x0A	; 10
    4bae:	26 9f       	mul	r18, r22
    4bb0:	11 24       	eor	r1, r1
    4bb2:	30 19       	sub	r19, r0
    4bb4:	30 5d       	subi	r19, 0xD0	; 208
    4bb6:	31 93       	st	Z+, r19
    4bb8:	de f6       	brtc	.-74     	; 0x4b70 <__ultoa_invert+0xe>
    4bba:	cf 01       	movw	r24, r30
    4bbc:	08 95       	ret
    4bbe:	46 2f       	mov	r20, r22
    4bc0:	47 70       	andi	r20, 0x07	; 7
    4bc2:	40 5d       	subi	r20, 0xD0	; 208
    4bc4:	41 93       	st	Z+, r20
    4bc6:	b3 e0       	ldi	r27, 0x03	; 3
    4bc8:	0f d0       	rcall	.+30     	; 0x4be8 <__ultoa_invert+0x86>
    4bca:	c9 f7       	brne	.-14     	; 0x4bbe <__ultoa_invert+0x5c>
    4bcc:	f6 cf       	rjmp	.-20     	; 0x4bba <__ultoa_invert+0x58>
    4bce:	46 2f       	mov	r20, r22
    4bd0:	4f 70       	andi	r20, 0x0F	; 15
    4bd2:	40 5d       	subi	r20, 0xD0	; 208
    4bd4:	4a 33       	cpi	r20, 0x3A	; 58
    4bd6:	18 f0       	brcs	.+6      	; 0x4bde <__ultoa_invert+0x7c>
    4bd8:	49 5d       	subi	r20, 0xD9	; 217
    4bda:	31 fd       	sbrc	r19, 1
    4bdc:	40 52       	subi	r20, 0x20	; 32
    4bde:	41 93       	st	Z+, r20
    4be0:	02 d0       	rcall	.+4      	; 0x4be6 <__ultoa_invert+0x84>
    4be2:	a9 f7       	brne	.-22     	; 0x4bce <__ultoa_invert+0x6c>
    4be4:	ea cf       	rjmp	.-44     	; 0x4bba <__ultoa_invert+0x58>
    4be6:	b4 e0       	ldi	r27, 0x04	; 4
    4be8:	a6 95       	lsr	r26
    4bea:	97 95       	ror	r25
    4bec:	87 95       	ror	r24
    4bee:	77 95       	ror	r23
    4bf0:	67 95       	ror	r22
    4bf2:	ba 95       	dec	r27
    4bf4:	c9 f7       	brne	.-14     	; 0x4be8 <__ultoa_invert+0x86>
    4bf6:	00 97       	sbiw	r24, 0x00	; 0
    4bf8:	61 05       	cpc	r22, r1
    4bfa:	71 05       	cpc	r23, r1
    4bfc:	08 95       	ret
    4bfe:	9b 01       	movw	r18, r22
    4c00:	ac 01       	movw	r20, r24
    4c02:	0a 2e       	mov	r0, r26
    4c04:	06 94       	lsr	r0
    4c06:	57 95       	ror	r21
    4c08:	47 95       	ror	r20
    4c0a:	37 95       	ror	r19
    4c0c:	27 95       	ror	r18
    4c0e:	ba 95       	dec	r27
    4c10:	c9 f7       	brne	.-14     	; 0x4c04 <__ultoa_invert+0xa2>
    4c12:	62 0f       	add	r22, r18
    4c14:	73 1f       	adc	r23, r19
    4c16:	84 1f       	adc	r24, r20
    4c18:	95 1f       	adc	r25, r21
    4c1a:	a0 1d       	adc	r26, r0
    4c1c:	08 95       	ret

00004c1e <putval>:
    4c1e:	20 fd       	sbrc	r18, 0
    4c20:	09 c0       	rjmp	.+18     	; 0x4c34 <putval+0x16>
    4c22:	fc 01       	movw	r30, r24
    4c24:	23 fd       	sbrc	r18, 3
    4c26:	05 c0       	rjmp	.+10     	; 0x4c32 <putval+0x14>
    4c28:	22 ff       	sbrs	r18, 2
    4c2a:	02 c0       	rjmp	.+4      	; 0x4c30 <putval+0x12>
    4c2c:	73 83       	std	Z+3, r23	; 0x03
    4c2e:	62 83       	std	Z+2, r22	; 0x02
    4c30:	51 83       	std	Z+1, r21	; 0x01
    4c32:	40 83       	st	Z, r20
    4c34:	08 95       	ret

00004c36 <mulacc>:
    4c36:	44 fd       	sbrc	r20, 4
    4c38:	17 c0       	rjmp	.+46     	; 0x4c68 <mulacc+0x32>
    4c3a:	46 fd       	sbrc	r20, 6
    4c3c:	17 c0       	rjmp	.+46     	; 0x4c6c <mulacc+0x36>
    4c3e:	ab 01       	movw	r20, r22
    4c40:	bc 01       	movw	r22, r24
    4c42:	da 01       	movw	r26, r20
    4c44:	fb 01       	movw	r30, r22
    4c46:	aa 0f       	add	r26, r26
    4c48:	bb 1f       	adc	r27, r27
    4c4a:	ee 1f       	adc	r30, r30
    4c4c:	ff 1f       	adc	r31, r31
    4c4e:	10 94       	com	r1
    4c50:	d1 f7       	brne	.-12     	; 0x4c46 <mulacc+0x10>
    4c52:	4a 0f       	add	r20, r26
    4c54:	5b 1f       	adc	r21, r27
    4c56:	6e 1f       	adc	r22, r30
    4c58:	7f 1f       	adc	r23, r31
    4c5a:	cb 01       	movw	r24, r22
    4c5c:	ba 01       	movw	r22, r20
    4c5e:	66 0f       	add	r22, r22
    4c60:	77 1f       	adc	r23, r23
    4c62:	88 1f       	adc	r24, r24
    4c64:	99 1f       	adc	r25, r25
    4c66:	09 c0       	rjmp	.+18     	; 0x4c7a <mulacc+0x44>
    4c68:	33 e0       	ldi	r19, 0x03	; 3
    4c6a:	01 c0       	rjmp	.+2      	; 0x4c6e <mulacc+0x38>
    4c6c:	34 e0       	ldi	r19, 0x04	; 4
    4c6e:	66 0f       	add	r22, r22
    4c70:	77 1f       	adc	r23, r23
    4c72:	88 1f       	adc	r24, r24
    4c74:	99 1f       	adc	r25, r25
    4c76:	31 50       	subi	r19, 0x01	; 1
    4c78:	d1 f7       	brne	.-12     	; 0x4c6e <mulacc+0x38>
    4c7a:	62 0f       	add	r22, r18
    4c7c:	71 1d       	adc	r23, r1
    4c7e:	81 1d       	adc	r24, r1
    4c80:	91 1d       	adc	r25, r1
    4c82:	08 95       	ret

00004c84 <skip_spaces>:
    4c84:	0f 93       	push	r16
    4c86:	1f 93       	push	r17
    4c88:	cf 93       	push	r28
    4c8a:	df 93       	push	r29
    4c8c:	8c 01       	movw	r16, r24
    4c8e:	c8 01       	movw	r24, r16
    4c90:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4c94:	ec 01       	movw	r28, r24
    4c96:	97 fd       	sbrc	r25, 7
    4c98:	08 c0       	rjmp	.+16     	; 0x4caa <skip_spaces+0x26>
    4c9a:	0e 94 bc 28 	call	0x5178	; 0x5178 <isspace>
    4c9e:	89 2b       	or	r24, r25
    4ca0:	b1 f7       	brne	.-20     	; 0x4c8e <skip_spaces+0xa>
    4ca2:	b8 01       	movw	r22, r16
    4ca4:	ce 01       	movw	r24, r28
    4ca6:	0e 94 0e 29 	call	0x521c	; 0x521c <ungetc>
    4caa:	ce 01       	movw	r24, r28
    4cac:	df 91       	pop	r29
    4cae:	cf 91       	pop	r28
    4cb0:	1f 91       	pop	r17
    4cb2:	0f 91       	pop	r16
    4cb4:	08 95       	ret

00004cb6 <conv_int>:
    4cb6:	8f 92       	push	r8
    4cb8:	9f 92       	push	r9
    4cba:	af 92       	push	r10
    4cbc:	bf 92       	push	r11
    4cbe:	ef 92       	push	r14
    4cc0:	ff 92       	push	r15
    4cc2:	0f 93       	push	r16
    4cc4:	1f 93       	push	r17
    4cc6:	cf 93       	push	r28
    4cc8:	df 93       	push	r29
    4cca:	8c 01       	movw	r16, r24
    4ccc:	d6 2f       	mov	r29, r22
    4cce:	7a 01       	movw	r14, r20
    4cd0:	b2 2e       	mov	r11, r18
    4cd2:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4cd6:	9c 01       	movw	r18, r24
    4cd8:	33 27       	eor	r19, r19
    4cda:	2b 32       	cpi	r18, 0x2B	; 43
    4cdc:	31 05       	cpc	r19, r1
    4cde:	31 f0       	breq	.+12     	; 0x4cec <conv_int+0x36>
    4ce0:	2d 32       	cpi	r18, 0x2D	; 45
    4ce2:	31 05       	cpc	r19, r1
    4ce4:	61 f4       	brne	.+24     	; 0x4cfe <conv_int+0x48>
    4ce6:	8b 2d       	mov	r24, r11
    4ce8:	80 68       	ori	r24, 0x80	; 128
    4cea:	b8 2e       	mov	r11, r24
    4cec:	d1 50       	subi	r29, 0x01	; 1
    4cee:	11 f4       	brne	.+4      	; 0x4cf4 <conv_int+0x3e>
    4cf0:	80 e0       	ldi	r24, 0x00	; 0
    4cf2:	68 c0       	rjmp	.+208    	; 0x4dc4 <conv_int+0x10e>
    4cf4:	c8 01       	movw	r24, r16
    4cf6:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4cfa:	97 fd       	sbrc	r25, 7
    4cfc:	f9 cf       	rjmp	.-14     	; 0x4cf0 <conv_int+0x3a>
    4cfe:	cb 2d       	mov	r28, r11
    4d00:	cd 7f       	andi	r28, 0xFD	; 253
    4d02:	2b 2d       	mov	r18, r11
    4d04:	20 73       	andi	r18, 0x30	; 48
    4d06:	09 f5       	brne	.+66     	; 0x4d4a <conv_int+0x94>
    4d08:	80 33       	cpi	r24, 0x30	; 48
    4d0a:	f9 f4       	brne	.+62     	; 0x4d4a <conv_int+0x94>
    4d0c:	aa 24       	eor	r10, r10
    4d0e:	aa 94       	dec	r10
    4d10:	ad 0e       	add	r10, r29
    4d12:	09 f4       	brne	.+2      	; 0x4d16 <conv_int+0x60>
    4d14:	43 c0       	rjmp	.+134    	; 0x4d9c <conv_int+0xe6>
    4d16:	c8 01       	movw	r24, r16
    4d18:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4d1c:	97 fd       	sbrc	r25, 7
    4d1e:	3e c0       	rjmp	.+124    	; 0x4d9c <conv_int+0xe6>
    4d20:	9c 01       	movw	r18, r24
    4d22:	2f 7d       	andi	r18, 0xDF	; 223
    4d24:	33 27       	eor	r19, r19
    4d26:	28 35       	cpi	r18, 0x58	; 88
    4d28:	31 05       	cpc	r19, r1
    4d2a:	49 f4       	brne	.+18     	; 0x4d3e <conv_int+0x88>
    4d2c:	c2 64       	ori	r28, 0x42	; 66
    4d2e:	d2 50       	subi	r29, 0x02	; 2
    4d30:	a9 f1       	breq	.+106    	; 0x4d9c <conv_int+0xe6>
    4d32:	c8 01       	movw	r24, r16
    4d34:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4d38:	97 ff       	sbrs	r25, 7
    4d3a:	07 c0       	rjmp	.+14     	; 0x4d4a <conv_int+0x94>
    4d3c:	2f c0       	rjmp	.+94     	; 0x4d9c <conv_int+0xe6>
    4d3e:	b6 fe       	sbrs	r11, 6
    4d40:	02 c0       	rjmp	.+4      	; 0x4d46 <conv_int+0x90>
    4d42:	c2 60       	ori	r28, 0x02	; 2
    4d44:	01 c0       	rjmp	.+2      	; 0x4d48 <conv_int+0x92>
    4d46:	c2 61       	ori	r28, 0x12	; 18
    4d48:	da 2d       	mov	r29, r10
    4d4a:	81 2c       	mov	r8, r1
    4d4c:	91 2c       	mov	r9, r1
    4d4e:	54 01       	movw	r10, r8
    4d50:	20 ed       	ldi	r18, 0xD0	; 208
    4d52:	28 0f       	add	r18, r24
    4d54:	28 30       	cpi	r18, 0x08	; 8
    4d56:	80 f0       	brcs	.+32     	; 0x4d78 <conv_int+0xc2>
    4d58:	c4 ff       	sbrs	r28, 4
    4d5a:	04 c0       	rjmp	.+8      	; 0x4d64 <conv_int+0xae>
    4d5c:	b8 01       	movw	r22, r16
    4d5e:	0e 94 0e 29 	call	0x521c	; 0x521c <ungetc>
    4d62:	19 c0       	rjmp	.+50     	; 0x4d96 <conv_int+0xe0>
    4d64:	2a 30       	cpi	r18, 0x0A	; 10
    4d66:	40 f0       	brcs	.+16     	; 0x4d78 <conv_int+0xc2>
    4d68:	c6 ff       	sbrs	r28, 6
    4d6a:	f8 cf       	rjmp	.-16     	; 0x4d5c <conv_int+0xa6>
    4d6c:	2f 7d       	andi	r18, 0xDF	; 223
    4d6e:	3f ee       	ldi	r19, 0xEF	; 239
    4d70:	32 0f       	add	r19, r18
    4d72:	36 30       	cpi	r19, 0x06	; 6
    4d74:	98 f7       	brcc	.-26     	; 0x4d5c <conv_int+0xa6>
    4d76:	27 50       	subi	r18, 0x07	; 7
    4d78:	4c 2f       	mov	r20, r28
    4d7a:	c5 01       	movw	r24, r10
    4d7c:	b4 01       	movw	r22, r8
    4d7e:	0e 94 1b 26 	call	0x4c36	; 0x4c36 <mulacc>
    4d82:	4b 01       	movw	r8, r22
    4d84:	5c 01       	movw	r10, r24
    4d86:	c2 60       	ori	r28, 0x02	; 2
    4d88:	d1 50       	subi	r29, 0x01	; 1
    4d8a:	59 f0       	breq	.+22     	; 0x4da2 <conv_int+0xec>
    4d8c:	c8 01       	movw	r24, r16
    4d8e:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4d92:	97 ff       	sbrs	r25, 7
    4d94:	dd cf       	rjmp	.-70     	; 0x4d50 <conv_int+0x9a>
    4d96:	c1 fd       	sbrc	r28, 1
    4d98:	04 c0       	rjmp	.+8      	; 0x4da2 <conv_int+0xec>
    4d9a:	aa cf       	rjmp	.-172    	; 0x4cf0 <conv_int+0x3a>
    4d9c:	81 2c       	mov	r8, r1
    4d9e:	91 2c       	mov	r9, r1
    4da0:	54 01       	movw	r10, r8
    4da2:	c7 ff       	sbrs	r28, 7
    4da4:	08 c0       	rjmp	.+16     	; 0x4db6 <conv_int+0x100>
    4da6:	b0 94       	com	r11
    4da8:	a0 94       	com	r10
    4daa:	90 94       	com	r9
    4dac:	80 94       	com	r8
    4dae:	81 1c       	adc	r8, r1
    4db0:	91 1c       	adc	r9, r1
    4db2:	a1 1c       	adc	r10, r1
    4db4:	b1 1c       	adc	r11, r1
    4db6:	2c 2f       	mov	r18, r28
    4db8:	b5 01       	movw	r22, r10
    4dba:	a4 01       	movw	r20, r8
    4dbc:	c7 01       	movw	r24, r14
    4dbe:	0e 94 0f 26 	call	0x4c1e	; 0x4c1e <putval>
    4dc2:	81 e0       	ldi	r24, 0x01	; 1
    4dc4:	df 91       	pop	r29
    4dc6:	cf 91       	pop	r28
    4dc8:	1f 91       	pop	r17
    4dca:	0f 91       	pop	r16
    4dcc:	ff 90       	pop	r15
    4dce:	ef 90       	pop	r14
    4dd0:	bf 90       	pop	r11
    4dd2:	af 90       	pop	r10
    4dd4:	9f 90       	pop	r9
    4dd6:	8f 90       	pop	r8
    4dd8:	08 95       	ret

00004dda <conv_brk>:
    4dda:	a0 e2       	ldi	r26, 0x20	; 32
    4ddc:	b0 e0       	ldi	r27, 0x00	; 0
    4dde:	e3 ef       	ldi	r30, 0xF3	; 243
    4de0:	f6 e2       	ldi	r31, 0x26	; 38
    4de2:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__prologue_saves__+0x6>
    4de6:	5c 01       	movw	r10, r24
    4de8:	96 2e       	mov	r9, r22
    4dea:	7a 01       	movw	r14, r20
    4dec:	f9 01       	movw	r30, r18
    4dee:	8e 01       	movw	r16, r28
    4df0:	0f 5f       	subi	r16, 0xFF	; 255
    4df2:	1f 4f       	sbci	r17, 0xFF	; 255
    4df4:	68 01       	movw	r12, r16
    4df6:	80 e2       	ldi	r24, 0x20	; 32
    4df8:	d8 01       	movw	r26, r16
    4dfa:	1d 92       	st	X+, r1
    4dfc:	8a 95       	dec	r24
    4dfe:	e9 f7       	brne	.-6      	; 0x4dfa <conv_brk+0x20>
    4e00:	d5 01       	movw	r26, r10
    4e02:	13 96       	adiw	r26, 0x03	; 3
    4e04:	8c 90       	ld	r8, X
    4e06:	80 e0       	ldi	r24, 0x00	; 0
    4e08:	90 e0       	ldi	r25, 0x00	; 0
    4e0a:	61 2c       	mov	r6, r1
    4e0c:	71 2c       	mov	r7, r1
    4e0e:	30 e0       	ldi	r19, 0x00	; 0
    4e10:	61 e0       	ldi	r22, 0x01	; 1
    4e12:	70 e0       	ldi	r23, 0x00	; 0
    4e14:	83 fc       	sbrc	r8, 3
    4e16:	25 91       	lpm	r18, Z+
    4e18:	83 fe       	sbrs	r8, 3
    4e1a:	21 91       	ld	r18, Z+
    4e1c:	8f 01       	movw	r16, r30
    4e1e:	52 2e       	mov	r5, r18
    4e20:	21 11       	cpse	r18, r1
    4e22:	03 c0       	rjmp	.+6      	; 0x4e2a <conv_brk+0x50>
    4e24:	80 e0       	ldi	r24, 0x00	; 0
    4e26:	90 e0       	ldi	r25, 0x00	; 0
    4e28:	92 c0       	rjmp	.+292    	; 0x4f4e <conv_brk+0x174>
    4e2a:	2e 35       	cpi	r18, 0x5E	; 94
    4e2c:	11 f4       	brne	.+4      	; 0x4e32 <conv_brk+0x58>
    4e2e:	00 97       	sbiw	r24, 0x00	; 0
    4e30:	51 f1       	breq	.+84     	; 0x4e86 <conv_brk+0xac>
    4e32:	43 2f       	mov	r20, r19
    4e34:	50 e0       	ldi	r21, 0x00	; 0
    4e36:	48 17       	cp	r20, r24
    4e38:	59 07       	cpc	r21, r25
    4e3a:	3c f4       	brge	.+14     	; 0x4e4a <conv_brk+0x70>
    4e3c:	2d 35       	cpi	r18, 0x5D	; 93
    4e3e:	59 f1       	breq	.+86     	; 0x4e96 <conv_brk+0xbc>
    4e40:	2d 32       	cpi	r18, 0x2D	; 45
    4e42:	19 f4       	brne	.+6      	; 0x4e4a <conv_brk+0x70>
    4e44:	77 20       	and	r7, r7
    4e46:	09 f1       	breq	.+66     	; 0x4e8a <conv_brk+0xb0>
    4e48:	03 c0       	rjmp	.+6      	; 0x4e50 <conv_brk+0x76>
    4e4a:	77 20       	and	r7, r7
    4e4c:	09 f4       	brne	.+2      	; 0x4e50 <conv_brk+0x76>
    4e4e:	6a c0       	rjmp	.+212    	; 0x4f24 <conv_brk+0x14a>
    4e50:	45 2d       	mov	r20, r5
    4e52:	46 95       	lsr	r20
    4e54:	46 95       	lsr	r20
    4e56:	46 95       	lsr	r20
    4e58:	d6 01       	movw	r26, r12
    4e5a:	a4 0f       	add	r26, r20
    4e5c:	b1 1d       	adc	r27, r1
    4e5e:	45 2d       	mov	r20, r5
    4e60:	47 70       	andi	r20, 0x07	; 7
    4e62:	8b 01       	movw	r16, r22
    4e64:	02 c0       	rjmp	.+4      	; 0x4e6a <conv_brk+0x90>
    4e66:	00 0f       	add	r16, r16
    4e68:	11 1f       	adc	r17, r17
    4e6a:	4a 95       	dec	r20
    4e6c:	e2 f7       	brpl	.-8      	; 0x4e66 <conv_brk+0x8c>
    4e6e:	a8 01       	movw	r20, r16
    4e70:	5c 91       	ld	r21, X
    4e72:	45 2b       	or	r20, r21
    4e74:	4c 93       	st	X, r20
    4e76:	65 14       	cp	r6, r5
    4e78:	59 f0       	breq	.+22     	; 0x4e90 <conv_brk+0xb6>
    4e7a:	56 14       	cp	r5, r6
    4e7c:	10 f4       	brcc	.+4      	; 0x4e82 <conv_brk+0xa8>
    4e7e:	53 94       	inc	r5
    4e80:	e7 cf       	rjmp	.-50     	; 0x4e50 <conv_brk+0x76>
    4e82:	5a 94       	dec	r5
    4e84:	e5 cf       	rjmp	.-54     	; 0x4e50 <conv_brk+0x76>
    4e86:	31 e0       	ldi	r19, 0x01	; 1
    4e88:	04 c0       	rjmp	.+8      	; 0x4e92 <conv_brk+0xb8>
    4e8a:	77 24       	eor	r7, r7
    4e8c:	73 94       	inc	r7
    4e8e:	01 c0       	rjmp	.+2      	; 0x4e92 <conv_brk+0xb8>
    4e90:	71 2c       	mov	r7, r1
    4e92:	01 96       	adiw	r24, 0x01	; 1
    4e94:	bf cf       	rjmp	.-130    	; 0x4e14 <conv_brk+0x3a>
    4e96:	77 20       	and	r7, r7
    4e98:	19 f0       	breq	.+6      	; 0x4ea0 <conv_brk+0xc6>
    4e9a:	8e 81       	ldd	r24, Y+6	; 0x06
    4e9c:	80 62       	ori	r24, 0x20	; 32
    4e9e:	8e 83       	std	Y+6, r24	; 0x06
    4ea0:	31 11       	cpse	r19, r1
    4ea2:	03 c0       	rjmp	.+6      	; 0x4eaa <conv_brk+0xd0>
    4ea4:	88 24       	eor	r8, r8
    4ea6:	83 94       	inc	r8
    4ea8:	17 c0       	rjmp	.+46     	; 0x4ed8 <conv_brk+0xfe>
    4eaa:	f6 01       	movw	r30, r12
    4eac:	9e 01       	movw	r18, r28
    4eae:	2f 5d       	subi	r18, 0xDF	; 223
    4eb0:	3f 4f       	sbci	r19, 0xFF	; 255
    4eb2:	80 81       	ld	r24, Z
    4eb4:	80 95       	com	r24
    4eb6:	81 93       	st	Z+, r24
    4eb8:	2e 17       	cp	r18, r30
    4eba:	3f 07       	cpc	r19, r31
    4ebc:	d1 f7       	brne	.-12     	; 0x4eb2 <conv_brk+0xd8>
    4ebe:	f2 cf       	rjmp	.-28     	; 0x4ea4 <conv_brk+0xca>
    4ec0:	e1 14       	cp	r14, r1
    4ec2:	f1 04       	cpc	r15, r1
    4ec4:	29 f0       	breq	.+10     	; 0x4ed0 <conv_brk+0xf6>
    4ec6:	d7 01       	movw	r26, r14
    4ec8:	8c 93       	st	X, r24
    4eca:	f7 01       	movw	r30, r14
    4ecc:	31 96       	adiw	r30, 0x01	; 1
    4ece:	7f 01       	movw	r14, r30
    4ed0:	9a 94       	dec	r9
    4ed2:	81 2c       	mov	r8, r1
    4ed4:	99 20       	and	r9, r9
    4ed6:	f9 f0       	breq	.+62     	; 0x4f16 <conv_brk+0x13c>
    4ed8:	c5 01       	movw	r24, r10
    4eda:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4ede:	97 fd       	sbrc	r25, 7
    4ee0:	18 c0       	rjmp	.+48     	; 0x4f12 <conv_brk+0x138>
    4ee2:	fc 01       	movw	r30, r24
    4ee4:	ff 27       	eor	r31, r31
    4ee6:	23 e0       	ldi	r18, 0x03	; 3
    4ee8:	f5 95       	asr	r31
    4eea:	e7 95       	ror	r30
    4eec:	2a 95       	dec	r18
    4eee:	e1 f7       	brne	.-8      	; 0x4ee8 <conv_brk+0x10e>
    4ef0:	ec 0d       	add	r30, r12
    4ef2:	fd 1d       	adc	r31, r13
    4ef4:	20 81       	ld	r18, Z
    4ef6:	30 e0       	ldi	r19, 0x00	; 0
    4ef8:	ac 01       	movw	r20, r24
    4efa:	47 70       	andi	r20, 0x07	; 7
    4efc:	55 27       	eor	r21, r21
    4efe:	02 c0       	rjmp	.+4      	; 0x4f04 <conv_brk+0x12a>
    4f00:	35 95       	asr	r19
    4f02:	27 95       	ror	r18
    4f04:	4a 95       	dec	r20
    4f06:	e2 f7       	brpl	.-8      	; 0x4f00 <conv_brk+0x126>
    4f08:	20 fd       	sbrc	r18, 0
    4f0a:	da cf       	rjmp	.-76     	; 0x4ec0 <conv_brk+0xe6>
    4f0c:	b5 01       	movw	r22, r10
    4f0e:	0e 94 0e 29 	call	0x521c	; 0x521c <ungetc>
    4f12:	81 10       	cpse	r8, r1
    4f14:	87 cf       	rjmp	.-242    	; 0x4e24 <conv_brk+0x4a>
    4f16:	e1 14       	cp	r14, r1
    4f18:	f1 04       	cpc	r15, r1
    4f1a:	11 f0       	breq	.+4      	; 0x4f20 <conv_brk+0x146>
    4f1c:	d7 01       	movw	r26, r14
    4f1e:	1c 92       	st	X, r1
    4f20:	c8 01       	movw	r24, r16
    4f22:	15 c0       	rjmp	.+42     	; 0x4f4e <conv_brk+0x174>
    4f24:	42 2f       	mov	r20, r18
    4f26:	46 95       	lsr	r20
    4f28:	46 95       	lsr	r20
    4f2a:	46 95       	lsr	r20
    4f2c:	d6 01       	movw	r26, r12
    4f2e:	a4 0f       	add	r26, r20
    4f30:	b1 1d       	adc	r27, r1
    4f32:	42 2f       	mov	r20, r18
    4f34:	47 70       	andi	r20, 0x07	; 7
    4f36:	8b 01       	movw	r16, r22
    4f38:	02 c0       	rjmp	.+4      	; 0x4f3e <conv_brk+0x164>
    4f3a:	00 0f       	add	r16, r16
    4f3c:	11 1f       	adc	r17, r17
    4f3e:	4a 95       	dec	r20
    4f40:	e2 f7       	brpl	.-8      	; 0x4f3a <conv_brk+0x160>
    4f42:	a8 01       	movw	r20, r16
    4f44:	5c 91       	ld	r21, X
    4f46:	45 2b       	or	r20, r21
    4f48:	4c 93       	st	X, r20
    4f4a:	62 2e       	mov	r6, r18
    4f4c:	a2 cf       	rjmp	.-188    	; 0x4e92 <conv_brk+0xb8>
    4f4e:	a0 96       	adiw	r28, 0x20	; 32
    4f50:	ef e0       	ldi	r30, 0x0F	; 15
    4f52:	0c 94 0a 24 	jmp	0x4814	; 0x4814 <__epilogue_restores__+0x6>

00004f56 <vfscanf>:
    4f56:	a0 e0       	ldi	r26, 0x00	; 0
    4f58:	b0 e0       	ldi	r27, 0x00	; 0
    4f5a:	e1 eb       	ldi	r30, 0xB1	; 177
    4f5c:	f7 e2       	ldi	r31, 0x27	; 39
    4f5e:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__prologue_saves__+0x6>
    4f62:	6c 01       	movw	r12, r24
    4f64:	eb 01       	movw	r28, r22
    4f66:	5a 01       	movw	r10, r20
    4f68:	fc 01       	movw	r30, r24
    4f6a:	17 82       	std	Z+7, r1	; 0x07
    4f6c:	16 82       	std	Z+6, r1	; 0x06
    4f6e:	51 2c       	mov	r5, r1
    4f70:	f6 01       	movw	r30, r12
    4f72:	e3 80       	ldd	r14, Z+3	; 0x03
    4f74:	fe 01       	movw	r30, r28
    4f76:	e3 fc       	sbrc	r14, 3
    4f78:	85 91       	lpm	r24, Z+
    4f7a:	e3 fe       	sbrs	r14, 3
    4f7c:	81 91       	ld	r24, Z+
    4f7e:	18 2f       	mov	r17, r24
    4f80:	ef 01       	movw	r28, r30
    4f82:	88 23       	and	r24, r24
    4f84:	09 f4       	brne	.+2      	; 0x4f88 <vfscanf+0x32>
    4f86:	ee c0       	rjmp	.+476    	; 0x5164 <vfscanf+0x20e>
    4f88:	90 e0       	ldi	r25, 0x00	; 0
    4f8a:	0e 94 bc 28 	call	0x5178	; 0x5178 <isspace>
    4f8e:	89 2b       	or	r24, r25
    4f90:	21 f0       	breq	.+8      	; 0x4f9a <vfscanf+0x44>
    4f92:	c6 01       	movw	r24, r12
    4f94:	0e 94 42 26 	call	0x4c84	; 0x4c84 <skip_spaces>
    4f98:	eb cf       	rjmp	.-42     	; 0x4f70 <vfscanf+0x1a>
    4f9a:	15 32       	cpi	r17, 0x25	; 37
    4f9c:	41 f4       	brne	.+16     	; 0x4fae <vfscanf+0x58>
    4f9e:	fe 01       	movw	r30, r28
    4fa0:	e3 fc       	sbrc	r14, 3
    4fa2:	15 91       	lpm	r17, Z+
    4fa4:	e3 fe       	sbrs	r14, 3
    4fa6:	11 91       	ld	r17, Z+
    4fa8:	ef 01       	movw	r28, r30
    4faa:	15 32       	cpi	r17, 0x25	; 37
    4fac:	81 f4       	brne	.+32     	; 0x4fce <vfscanf+0x78>
    4fae:	c6 01       	movw	r24, r12
    4fb0:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    4fb4:	97 fd       	sbrc	r25, 7
    4fb6:	d4 c0       	rjmp	.+424    	; 0x5160 <vfscanf+0x20a>
    4fb8:	41 2f       	mov	r20, r17
    4fba:	50 e0       	ldi	r21, 0x00	; 0
    4fbc:	9c 01       	movw	r18, r24
    4fbe:	33 27       	eor	r19, r19
    4fc0:	24 17       	cp	r18, r20
    4fc2:	35 07       	cpc	r19, r21
    4fc4:	a9 f2       	breq	.-86     	; 0x4f70 <vfscanf+0x1a>
    4fc6:	b6 01       	movw	r22, r12
    4fc8:	0e 94 0e 29 	call	0x521c	; 0x521c <ungetc>
    4fcc:	cb c0       	rjmp	.+406    	; 0x5164 <vfscanf+0x20e>
    4fce:	1a 32       	cpi	r17, 0x2A	; 42
    4fd0:	39 f4       	brne	.+14     	; 0x4fe0 <vfscanf+0x8a>
    4fd2:	e3 fc       	sbrc	r14, 3
    4fd4:	15 91       	lpm	r17, Z+
    4fd6:	e3 fe       	sbrs	r14, 3
    4fd8:	11 91       	ld	r17, Z+
    4fda:	ef 01       	movw	r28, r30
    4fdc:	01 e0       	ldi	r16, 0x01	; 1
    4fde:	01 c0       	rjmp	.+2      	; 0x4fe2 <vfscanf+0x8c>
    4fe0:	00 e0       	ldi	r16, 0x00	; 0
    4fe2:	f1 2c       	mov	r15, r1
    4fe4:	20 ed       	ldi	r18, 0xD0	; 208
    4fe6:	21 0f       	add	r18, r17
    4fe8:	2a 30       	cpi	r18, 0x0A	; 10
    4fea:	80 f4       	brcc	.+32     	; 0x500c <vfscanf+0xb6>
    4fec:	02 60       	ori	r16, 0x02	; 2
    4fee:	6f 2d       	mov	r22, r15
    4ff0:	70 e0       	ldi	r23, 0x00	; 0
    4ff2:	80 e0       	ldi	r24, 0x00	; 0
    4ff4:	90 e0       	ldi	r25, 0x00	; 0
    4ff6:	40 e2       	ldi	r20, 0x20	; 32
    4ff8:	0e 94 1b 26 	call	0x4c36	; 0x4c36 <mulacc>
    4ffc:	f6 2e       	mov	r15, r22
    4ffe:	fe 01       	movw	r30, r28
    5000:	e3 fc       	sbrc	r14, 3
    5002:	15 91       	lpm	r17, Z+
    5004:	e3 fe       	sbrs	r14, 3
    5006:	11 91       	ld	r17, Z+
    5008:	ef 01       	movw	r28, r30
    500a:	ec cf       	rjmp	.-40     	; 0x4fe4 <vfscanf+0x8e>
    500c:	01 ff       	sbrs	r16, 1
    500e:	03 c0       	rjmp	.+6      	; 0x5016 <vfscanf+0xc0>
    5010:	f1 10       	cpse	r15, r1
    5012:	03 c0       	rjmp	.+6      	; 0x501a <vfscanf+0xc4>
    5014:	a7 c0       	rjmp	.+334    	; 0x5164 <vfscanf+0x20e>
    5016:	ff 24       	eor	r15, r15
    5018:	fa 94       	dec	r15
    501a:	18 36       	cpi	r17, 0x68	; 104
    501c:	19 f0       	breq	.+6      	; 0x5024 <vfscanf+0xce>
    501e:	1c 36       	cpi	r17, 0x6C	; 108
    5020:	51 f0       	breq	.+20     	; 0x5036 <vfscanf+0xe0>
    5022:	10 c0       	rjmp	.+32     	; 0x5044 <vfscanf+0xee>
    5024:	fe 01       	movw	r30, r28
    5026:	e3 fc       	sbrc	r14, 3
    5028:	15 91       	lpm	r17, Z+
    502a:	e3 fe       	sbrs	r14, 3
    502c:	11 91       	ld	r17, Z+
    502e:	ef 01       	movw	r28, r30
    5030:	18 36       	cpi	r17, 0x68	; 104
    5032:	41 f4       	brne	.+16     	; 0x5044 <vfscanf+0xee>
    5034:	08 60       	ori	r16, 0x08	; 8
    5036:	04 60       	ori	r16, 0x04	; 4
    5038:	fe 01       	movw	r30, r28
    503a:	e3 fc       	sbrc	r14, 3
    503c:	15 91       	lpm	r17, Z+
    503e:	e3 fe       	sbrs	r14, 3
    5040:	11 91       	ld	r17, Z+
    5042:	ef 01       	movw	r28, r30
    5044:	11 23       	and	r17, r17
    5046:	09 f4       	brne	.+2      	; 0x504a <vfscanf+0xf4>
    5048:	8d c0       	rjmp	.+282    	; 0x5164 <vfscanf+0x20e>
    504a:	61 2f       	mov	r22, r17
    504c:	70 e0       	ldi	r23, 0x00	; 0
    504e:	80 e9       	ldi	r24, 0x90	; 144
    5050:	91 e0       	ldi	r25, 0x01	; 1
    5052:	0e 94 c5 28 	call	0x518a	; 0x518a <strchr_P>
    5056:	89 2b       	or	r24, r25
    5058:	09 f4       	brne	.+2      	; 0x505c <vfscanf+0x106>
    505a:	84 c0       	rjmp	.+264    	; 0x5164 <vfscanf+0x20e>
    505c:	00 fd       	sbrc	r16, 0
    505e:	07 c0       	rjmp	.+14     	; 0x506e <vfscanf+0x118>
    5060:	f5 01       	movw	r30, r10
    5062:	80 80       	ld	r8, Z
    5064:	91 80       	ldd	r9, Z+1	; 0x01
    5066:	c5 01       	movw	r24, r10
    5068:	02 96       	adiw	r24, 0x02	; 2
    506a:	5c 01       	movw	r10, r24
    506c:	02 c0       	rjmp	.+4      	; 0x5072 <vfscanf+0x11c>
    506e:	81 2c       	mov	r8, r1
    5070:	91 2c       	mov	r9, r1
    5072:	1e 36       	cpi	r17, 0x6E	; 110
    5074:	51 f4       	brne	.+20     	; 0x508a <vfscanf+0x134>
    5076:	f6 01       	movw	r30, r12
    5078:	46 81       	ldd	r20, Z+6	; 0x06
    507a:	57 81       	ldd	r21, Z+7	; 0x07
    507c:	60 e0       	ldi	r22, 0x00	; 0
    507e:	70 e0       	ldi	r23, 0x00	; 0
    5080:	20 2f       	mov	r18, r16
    5082:	c4 01       	movw	r24, r8
    5084:	0e 94 0f 26 	call	0x4c1e	; 0x4c1e <putval>
    5088:	73 cf       	rjmp	.-282    	; 0x4f70 <vfscanf+0x1a>
    508a:	13 36       	cpi	r17, 0x63	; 99
    508c:	a9 f4       	brne	.+42     	; 0x50b8 <vfscanf+0x162>
    508e:	01 fd       	sbrc	r16, 1
    5090:	02 c0       	rjmp	.+4      	; 0x5096 <vfscanf+0x140>
    5092:	ff 24       	eor	r15, r15
    5094:	f3 94       	inc	r15
    5096:	c6 01       	movw	r24, r12
    5098:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    509c:	97 fd       	sbrc	r25, 7
    509e:	60 c0       	rjmp	.+192    	; 0x5160 <vfscanf+0x20a>
    50a0:	81 14       	cp	r8, r1
    50a2:	91 04       	cpc	r9, r1
    50a4:	29 f0       	breq	.+10     	; 0x50b0 <vfscanf+0x15a>
    50a6:	f4 01       	movw	r30, r8
    50a8:	80 83       	st	Z, r24
    50aa:	c4 01       	movw	r24, r8
    50ac:	01 96       	adiw	r24, 0x01	; 1
    50ae:	4c 01       	movw	r8, r24
    50b0:	fa 94       	dec	r15
    50b2:	f1 10       	cpse	r15, r1
    50b4:	f0 cf       	rjmp	.-32     	; 0x5096 <vfscanf+0x140>
    50b6:	50 c0       	rjmp	.+160    	; 0x5158 <vfscanf+0x202>
    50b8:	1b 35       	cpi	r17, 0x5B	; 91
    50ba:	59 f4       	brne	.+22     	; 0x50d2 <vfscanf+0x17c>
    50bc:	9e 01       	movw	r18, r28
    50be:	a4 01       	movw	r20, r8
    50c0:	6f 2d       	mov	r22, r15
    50c2:	c6 01       	movw	r24, r12
    50c4:	0e 94 ed 26 	call	0x4dda	; 0x4dda <conv_brk>
    50c8:	ec 01       	movw	r28, r24
    50ca:	89 2b       	or	r24, r25
    50cc:	09 f0       	breq	.+2      	; 0x50d0 <vfscanf+0x17a>
    50ce:	44 c0       	rjmp	.+136    	; 0x5158 <vfscanf+0x202>
    50d0:	3e c0       	rjmp	.+124    	; 0x514e <vfscanf+0x1f8>
    50d2:	c6 01       	movw	r24, r12
    50d4:	0e 94 42 26 	call	0x4c84	; 0x4c84 <skip_spaces>
    50d8:	97 fd       	sbrc	r25, 7
    50da:	42 c0       	rjmp	.+132    	; 0x5160 <vfscanf+0x20a>
    50dc:	1f 36       	cpi	r17, 0x6F	; 111
    50de:	61 f1       	breq	.+88     	; 0x5138 <vfscanf+0x1e2>
    50e0:	28 f4       	brcc	.+10     	; 0x50ec <vfscanf+0x196>
    50e2:	14 36       	cpi	r17, 0x64	; 100
    50e4:	39 f1       	breq	.+78     	; 0x5134 <vfscanf+0x1de>
    50e6:	19 36       	cpi	r17, 0x69	; 105
    50e8:	51 f1       	breq	.+84     	; 0x513e <vfscanf+0x1e8>
    50ea:	28 c0       	rjmp	.+80     	; 0x513c <vfscanf+0x1e6>
    50ec:	13 37       	cpi	r17, 0x73	; 115
    50ee:	71 f0       	breq	.+28     	; 0x510c <vfscanf+0x1b6>
    50f0:	15 37       	cpi	r17, 0x75	; 117
    50f2:	01 f1       	breq	.+64     	; 0x5134 <vfscanf+0x1de>
    50f4:	23 c0       	rjmp	.+70     	; 0x513c <vfscanf+0x1e6>
    50f6:	81 14       	cp	r8, r1
    50f8:	91 04       	cpc	r9, r1
    50fa:	29 f0       	breq	.+10     	; 0x5106 <vfscanf+0x1b0>
    50fc:	f4 01       	movw	r30, r8
    50fe:	60 82       	st	Z, r6
    5100:	c4 01       	movw	r24, r8
    5102:	01 96       	adiw	r24, 0x01	; 1
    5104:	4c 01       	movw	r8, r24
    5106:	fa 94       	dec	r15
    5108:	ff 20       	and	r15, r15
    510a:	71 f0       	breq	.+28     	; 0x5128 <vfscanf+0x1d2>
    510c:	c6 01       	movw	r24, r12
    510e:	0e 94 d0 28 	call	0x51a0	; 0x51a0 <fgetc>
    5112:	3c 01       	movw	r6, r24
    5114:	97 fd       	sbrc	r25, 7
    5116:	08 c0       	rjmp	.+16     	; 0x5128 <vfscanf+0x1d2>
    5118:	0e 94 bc 28 	call	0x5178	; 0x5178 <isspace>
    511c:	89 2b       	or	r24, r25
    511e:	59 f3       	breq	.-42     	; 0x50f6 <vfscanf+0x1a0>
    5120:	b6 01       	movw	r22, r12
    5122:	c3 01       	movw	r24, r6
    5124:	0e 94 0e 29 	call	0x521c	; 0x521c <ungetc>
    5128:	81 14       	cp	r8, r1
    512a:	91 04       	cpc	r9, r1
    512c:	a9 f0       	breq	.+42     	; 0x5158 <vfscanf+0x202>
    512e:	f4 01       	movw	r30, r8
    5130:	10 82       	st	Z, r1
    5132:	12 c0       	rjmp	.+36     	; 0x5158 <vfscanf+0x202>
    5134:	00 62       	ori	r16, 0x20	; 32
    5136:	03 c0       	rjmp	.+6      	; 0x513e <vfscanf+0x1e8>
    5138:	00 61       	ori	r16, 0x10	; 16
    513a:	01 c0       	rjmp	.+2      	; 0x513e <vfscanf+0x1e8>
    513c:	00 64       	ori	r16, 0x40	; 64
    513e:	20 2f       	mov	r18, r16
    5140:	a4 01       	movw	r20, r8
    5142:	6f 2d       	mov	r22, r15
    5144:	c6 01       	movw	r24, r12
    5146:	0e 94 5b 26 	call	0x4cb6	; 0x4cb6 <conv_int>
    514a:	81 11       	cpse	r24, r1
    514c:	05 c0       	rjmp	.+10     	; 0x5158 <vfscanf+0x202>
    514e:	f6 01       	movw	r30, r12
    5150:	83 81       	ldd	r24, Z+3	; 0x03
    5152:	80 73       	andi	r24, 0x30	; 48
    5154:	29 f4       	brne	.+10     	; 0x5160 <vfscanf+0x20a>
    5156:	06 c0       	rjmp	.+12     	; 0x5164 <vfscanf+0x20e>
    5158:	00 fd       	sbrc	r16, 0
    515a:	0a cf       	rjmp	.-492    	; 0x4f70 <vfscanf+0x1a>
    515c:	53 94       	inc	r5
    515e:	08 cf       	rjmp	.-496    	; 0x4f70 <vfscanf+0x1a>
    5160:	55 20       	and	r5, r5
    5162:	19 f0       	breq	.+6      	; 0x516a <vfscanf+0x214>
    5164:	85 2d       	mov	r24, r5
    5166:	90 e0       	ldi	r25, 0x00	; 0
    5168:	02 c0       	rjmp	.+4      	; 0x516e <vfscanf+0x218>
    516a:	8f ef       	ldi	r24, 0xFF	; 255
    516c:	9f ef       	ldi	r25, 0xFF	; 255
    516e:	cd b7       	in	r28, 0x3d	; 61
    5170:	de b7       	in	r29, 0x3e	; 62
    5172:	ef e0       	ldi	r30, 0x0F	; 15
    5174:	0c 94 0a 24 	jmp	0x4814	; 0x4814 <__epilogue_restores__+0x6>

00005178 <isspace>:
    5178:	91 11       	cpse	r25, r1
    517a:	0c 94 27 29 	jmp	0x524e	; 0x524e <__ctype_isfalse>
    517e:	80 32       	cpi	r24, 0x20	; 32
    5180:	19 f0       	breq	.+6      	; 0x5188 <isspace+0x10>
    5182:	89 50       	subi	r24, 0x09	; 9
    5184:	85 50       	subi	r24, 0x05	; 5
    5186:	c8 f7       	brcc	.-14     	; 0x517a <isspace+0x2>
    5188:	08 95       	ret

0000518a <strchr_P>:
    518a:	fc 01       	movw	r30, r24
    518c:	05 90       	lpm	r0, Z+
    518e:	06 16       	cp	r0, r22
    5190:	21 f0       	breq	.+8      	; 0x519a <strchr_P+0x10>
    5192:	00 20       	and	r0, r0
    5194:	d9 f7       	brne	.-10     	; 0x518c <strchr_P+0x2>
    5196:	c0 01       	movw	r24, r0
    5198:	08 95       	ret
    519a:	31 97       	sbiw	r30, 0x01	; 1
    519c:	cf 01       	movw	r24, r30
    519e:	08 95       	ret

000051a0 <fgetc>:
    51a0:	cf 93       	push	r28
    51a2:	df 93       	push	r29
    51a4:	ec 01       	movw	r28, r24
    51a6:	2b 81       	ldd	r18, Y+3	; 0x03
    51a8:	20 ff       	sbrs	r18, 0
    51aa:	33 c0       	rjmp	.+102    	; 0x5212 <fgetc+0x72>
    51ac:	26 ff       	sbrs	r18, 6
    51ae:	0a c0       	rjmp	.+20     	; 0x51c4 <fgetc+0x24>
    51b0:	2f 7b       	andi	r18, 0xBF	; 191
    51b2:	2b 83       	std	Y+3, r18	; 0x03
    51b4:	8e 81       	ldd	r24, Y+6	; 0x06
    51b6:	9f 81       	ldd	r25, Y+7	; 0x07
    51b8:	01 96       	adiw	r24, 0x01	; 1
    51ba:	9f 83       	std	Y+7, r25	; 0x07
    51bc:	8e 83       	std	Y+6, r24	; 0x06
    51be:	8a 81       	ldd	r24, Y+2	; 0x02
    51c0:	90 e0       	ldi	r25, 0x00	; 0
    51c2:	29 c0       	rjmp	.+82     	; 0x5216 <fgetc+0x76>
    51c4:	22 ff       	sbrs	r18, 2
    51c6:	0f c0       	rjmp	.+30     	; 0x51e6 <fgetc+0x46>
    51c8:	e8 81       	ld	r30, Y
    51ca:	f9 81       	ldd	r31, Y+1	; 0x01
    51cc:	80 81       	ld	r24, Z
    51ce:	08 2e       	mov	r0, r24
    51d0:	00 0c       	add	r0, r0
    51d2:	99 0b       	sbc	r25, r25
    51d4:	00 97       	sbiw	r24, 0x00	; 0
    51d6:	19 f4       	brne	.+6      	; 0x51de <fgetc+0x3e>
    51d8:	20 62       	ori	r18, 0x20	; 32
    51da:	2b 83       	std	Y+3, r18	; 0x03
    51dc:	1a c0       	rjmp	.+52     	; 0x5212 <fgetc+0x72>
    51de:	31 96       	adiw	r30, 0x01	; 1
    51e0:	f9 83       	std	Y+1, r31	; 0x01
    51e2:	e8 83       	st	Y, r30
    51e4:	0e c0       	rjmp	.+28     	; 0x5202 <fgetc+0x62>
    51e6:	ea 85       	ldd	r30, Y+10	; 0x0a
    51e8:	fb 85       	ldd	r31, Y+11	; 0x0b
    51ea:	09 95       	icall
    51ec:	97 ff       	sbrs	r25, 7
    51ee:	09 c0       	rjmp	.+18     	; 0x5202 <fgetc+0x62>
    51f0:	2b 81       	ldd	r18, Y+3	; 0x03
    51f2:	01 96       	adiw	r24, 0x01	; 1
    51f4:	11 f0       	breq	.+4      	; 0x51fa <fgetc+0x5a>
    51f6:	80 e2       	ldi	r24, 0x20	; 32
    51f8:	01 c0       	rjmp	.+2      	; 0x51fc <fgetc+0x5c>
    51fa:	80 e1       	ldi	r24, 0x10	; 16
    51fc:	82 2b       	or	r24, r18
    51fe:	8b 83       	std	Y+3, r24	; 0x03
    5200:	08 c0       	rjmp	.+16     	; 0x5212 <fgetc+0x72>
    5202:	2e 81       	ldd	r18, Y+6	; 0x06
    5204:	3f 81       	ldd	r19, Y+7	; 0x07
    5206:	2f 5f       	subi	r18, 0xFF	; 255
    5208:	3f 4f       	sbci	r19, 0xFF	; 255
    520a:	3f 83       	std	Y+7, r19	; 0x07
    520c:	2e 83       	std	Y+6, r18	; 0x06
    520e:	99 27       	eor	r25, r25
    5210:	02 c0       	rjmp	.+4      	; 0x5216 <fgetc+0x76>
    5212:	8f ef       	ldi	r24, 0xFF	; 255
    5214:	9f ef       	ldi	r25, 0xFF	; 255
    5216:	df 91       	pop	r29
    5218:	cf 91       	pop	r28
    521a:	08 95       	ret

0000521c <ungetc>:
    521c:	fb 01       	movw	r30, r22
    521e:	23 81       	ldd	r18, Z+3	; 0x03
    5220:	20 ff       	sbrs	r18, 0
    5222:	12 c0       	rjmp	.+36     	; 0x5248 <ungetc+0x2c>
    5224:	26 fd       	sbrc	r18, 6
    5226:	10 c0       	rjmp	.+32     	; 0x5248 <ungetc+0x2c>
    5228:	8f 3f       	cpi	r24, 0xFF	; 255
    522a:	3f ef       	ldi	r19, 0xFF	; 255
    522c:	93 07       	cpc	r25, r19
    522e:	61 f0       	breq	.+24     	; 0x5248 <ungetc+0x2c>
    5230:	82 83       	std	Z+2, r24	; 0x02
    5232:	2f 7d       	andi	r18, 0xDF	; 223
    5234:	20 64       	ori	r18, 0x40	; 64
    5236:	23 83       	std	Z+3, r18	; 0x03
    5238:	26 81       	ldd	r18, Z+6	; 0x06
    523a:	37 81       	ldd	r19, Z+7	; 0x07
    523c:	21 50       	subi	r18, 0x01	; 1
    523e:	31 09       	sbc	r19, r1
    5240:	37 83       	std	Z+7, r19	; 0x07
    5242:	26 83       	std	Z+6, r18	; 0x06
    5244:	99 27       	eor	r25, r25
    5246:	08 95       	ret
    5248:	8f ef       	ldi	r24, 0xFF	; 255
    524a:	9f ef       	ldi	r25, 0xFF	; 255
    524c:	08 95       	ret

0000524e <__ctype_isfalse>:
    524e:	99 27       	eor	r25, r25
    5250:	88 27       	eor	r24, r24

00005252 <__ctype_istrue>:
    5252:	08 95       	ret

00005254 <_exit>:
    5254:	f8 94       	cli

00005256 <__stop_program>:
    5256:	ff cf       	rjmp	.-2      	; 0x5256 <__stop_program>
