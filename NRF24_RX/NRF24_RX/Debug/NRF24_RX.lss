
NRF24_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00002980  00002a14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002980  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000005d1  00800128  00800128  00002a3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002a3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002a98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00002ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002aeb  00000000  00000000  00002cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f66  00000000  00000000  000057e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000172e  00000000  00000000  00006749  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  00007e78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000846  00000000  00000000  000084fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001f31  00000000  00000000  00008d42  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  0000ac73  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__vector_1>
       8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      28:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      2c:	0c 94 d0 05 	jmp	0xba0	; 0xba0 <__vector_11>
      30:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      34:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      4c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      50:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      54:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      58:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      5c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      60:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      64:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2474>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf ef       	ldi	r28, 0xFF	; 255
     17c:	d8 e0       	ldi	r29, 0x08	; 8
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	11 e0       	ldi	r17, 0x01	; 1
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	e0 e8       	ldi	r30, 0x80	; 128
     18a:	f9 e2       	ldi	r31, 0x29	; 41
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	a8 32       	cpi	r26, 0x28	; 40
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	26 e0       	ldi	r18, 0x06	; 6
     19a:	a8 e2       	ldi	r26, 0x28	; 40
     19c:	b1 e0       	ldi	r27, 0x01	; 1
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	a9 3f       	cpi	r26, 0xF9	; 249
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 74 06 	call	0xce8	; 0xce8 <main>
     1ac:	0c 94 be 14 	jmp	0x297c	; 0x297c <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <sendhalfbyte>:
#include "lcdtwi.h"

unsigned char portlcd = 0; //ÿ÷åéêà äëÿ õðàíåíèÿ äàííûõ ïîðòà ìèêðîñõåìû ðàñøèðåíèÿ

void sendhalfbyte(unsigned char c)
{
     1b4:	cf 93       	push	r28
	c<<=4;
     1b6:	c8 2f       	mov	r28, r24
     1b8:	c2 95       	swap	r28
     1ba:	c0 7f       	andi	r28, 0xF0	; 240
	e1; //âêëþ÷àåì ëèíèþ Å
     1bc:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
     1c0:	84 60       	ori	r24, 0x04	; 4
     1c2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
     1c6:	6e e4       	ldi	r22, 0x4E	; 78
     1c8:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <I2C_SendByteByADDR>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1cc:	87 ec       	ldi	r24, 0xC7	; 199
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <sendhalfbyte+0x1c>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <sendhalfbyte+0x22>
     1d6:	00 00       	nop
	_delay_us(50);
	I2C_SendByteByADDR(portlcd|c,0b01001110);
     1d8:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
     1dc:	6e e4       	ldi	r22, 0x4E	; 78
     1de:	8c 2b       	or	r24, r28
     1e0:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <I2C_SendByteByADDR>
	e0; //âûêëþ÷àåì ëèíèþ Å
     1e4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
     1e8:	8b 7f       	andi	r24, 0xFB	; 251
     1ea:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
     1ee:	6e e4       	ldi	r22, 0x4E	; 78
     1f0:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <I2C_SendByteByADDR>
     1f4:	87 ec       	ldi	r24, 0xC7	; 199
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	01 97       	sbiw	r24, 0x01	; 1
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <sendhalfbyte+0x44>
     1fc:	00 c0       	rjmp	.+0      	; 0x1fe <sendhalfbyte+0x4a>
     1fe:	00 00       	nop
	_delay_us(50);
}
     200:	cf 91       	pop	r28
     202:	08 95       	ret

00000204 <sendbyte>:
//—————————————-
void sendbyte(unsigned char c, unsigned char mode)
{
     204:	cf 93       	push	r28
     206:	c8 2f       	mov	r28, r24
	if (mode==0) rs0;
     208:	61 11       	cpse	r22, r1
     20a:	09 c0       	rjmp	.+18     	; 0x21e <sendbyte+0x1a>
     20c:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
     210:	8e 7f       	andi	r24, 0xFE	; 254
     212:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
     216:	6e e4       	ldi	r22, 0x4E	; 78
     218:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <I2C_SendByteByADDR>
     21c:	08 c0       	rjmp	.+16     	; 0x22e <sendbyte+0x2a>
	else rs1;
     21e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
     222:	81 60       	ori	r24, 0x01	; 1
     224:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
     228:	6e e4       	ldi	r22, 0x4E	; 78
     22a:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <I2C_SendByteByADDR>
	unsigned char hc=0;
	hc=c>>4;
	sendhalfbyte(hc); sendhalfbyte(c);
     22e:	8c 2f       	mov	r24, r28
     230:	82 95       	swap	r24
     232:	8f 70       	andi	r24, 0x0F	; 15
     234:	0e 94 da 00 	call	0x1b4	; 0x1b4 <sendhalfbyte>
     238:	8c 2f       	mov	r24, r28
     23a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <sendhalfbyte>
}
     23e:	cf 91       	pop	r28
     240:	08 95       	ret

00000242 <sendchar>:
//—————————————-
void sendchar(unsigned char c)
{
	sendbyte(c,1);
     242:	61 e0       	ldi	r22, 0x01	; 1
     244:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
     248:	08 95       	ret

0000024a <setpos>:
}
//—————————————-
void setpos(unsigned char x, unsigned y)
{
	char adress;
	adress=(0x40*y+x)|0b10000000;
     24a:	90 e4       	ldi	r25, 0x40	; 64
     24c:	69 9f       	mul	r22, r25
     24e:	80 0d       	add	r24, r0
     250:	11 24       	eor	r1, r1
	sendbyte(adress|0x80, 0);
     252:	60 e0       	ldi	r22, 0x00	; 0
     254:	80 68       	ori	r24, 0x80	; 128
     256:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
     25a:	08 95       	ret

0000025c <LCD_ini>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     25c:	2f ef       	ldi	r18, 0xFF	; 255
     25e:	83 ef       	ldi	r24, 0xF3	; 243
     260:	91 e0       	ldi	r25, 0x01	; 1
     262:	21 50       	subi	r18, 0x01	; 1
     264:	80 40       	sbci	r24, 0x00	; 0
     266:	90 40       	sbci	r25, 0x00	; 0
     268:	e1 f7       	brne	.-8      	; 0x262 <LCD_ini+0x6>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <LCD_ini+0x10>
     26c:	00 00       	nop
}
//—————————————-
void LCD_ini(void)
{
	_delay_ms(40); //Æäåì 40 ìñ
	sendhalfbyte(0b00000011);
     26e:	83 e0       	ldi	r24, 0x03	; 3
     270:	0e 94 da 00 	call	0x1b4	; 0x1b4 <sendhalfbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     274:	20 ed       	ldi	r18, 0xD0	; 208
     276:	2a 95       	dec	r18
     278:	f1 f7       	brne	.-4      	; 0x276 <LCD_ini+0x1a>
	_delay_us(39);	
	sendhalfbyte(0b00000010);//èç "òàíöåâ ñ áóáíîì"
     27a:	82 e0       	ldi	r24, 0x02	; 2
     27c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <sendhalfbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     280:	8f e9       	ldi	r24, 0x9F	; 159
     282:	9f e0       	ldi	r25, 0x0F	; 15
     284:	01 97       	sbiw	r24, 0x01	; 1
     286:	f1 f7       	brne	.-4      	; 0x284 <LCD_ini+0x28>
     288:	00 c0       	rjmp	.+0      	; 0x28a <LCD_ini+0x2e>
     28a:	00 00       	nop
	_delay_ms(1);	
	sendbyte(0b00101000,0);//ïåðåõîä â 4áèò ðåæèì
     28c:	60 e0       	ldi	r22, 0x00	; 0
     28e:	88 e2       	ldi	r24, 0x28	; 40
     290:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     294:	90 ed       	ldi	r25, 0xD0	; 208
     296:	9a 95       	dec	r25
     298:	f1 f7       	brne	.-4      	; 0x296 <LCD_ini+0x3a>
	_delay_us(39);
	sendbyte(0b00101000,0);//ïåðåõîä â 4áèò ðåæèì
     29a:	60 e0       	ldi	r22, 0x00	; 0
     29c:	88 e2       	ldi	r24, 0x28	; 40
     29e:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
     2a2:	25 ec       	ldi	r18, 0xC5	; 197
     2a4:	2a 95       	dec	r18
     2a6:	f1 f7       	brne	.-4      	; 0x2a4 <LCD_ini+0x48>
     2a8:	00 00       	nop
	_delay_us(37);
	sendbyte(0b00001000, 0);//display on/off control
     2aa:	60 e0       	ldi	r22, 0x00	; 0
     2ac:	88 e0       	ldi	r24, 0x08	; 8
     2ae:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
     2b2:	85 ec       	ldi	r24, 0xC5	; 197
     2b4:	8a 95       	dec	r24
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <LCD_ini+0x58>
     2b8:	00 00       	nop
	_delay_us(37);
	sendbyte(0b00000001, 0);//display clear
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	81 e0       	ldi	r24, 0x01	; 1
     2be:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2c2:	8f e9       	ldi	r24, 0x9F	; 159
     2c4:	9f e0       	ldi	r25, 0x0F	; 15
     2c6:	01 97       	sbiw	r24, 0x01	; 1
     2c8:	f1 f7       	brne	.-4      	; 0x2c6 <LCD_ini+0x6a>
     2ca:	00 c0       	rjmp	.+0      	; 0x2cc <LCD_ini+0x70>
     2cc:	00 00       	nop
	_delay_ms(1);
	sendbyte(0b00000110, 0);//entry mode set
     2ce:	60 e0       	ldi	r22, 0x00	; 0
     2d0:	86 e0       	ldi	r24, 0x06	; 6
     2d2:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
     2d6:	8f e9       	ldi	r24, 0x9F	; 159
     2d8:	9f e0       	ldi	r25, 0x0F	; 15
     2da:	01 97       	sbiw	r24, 0x01	; 1
     2dc:	f1 f7       	brne	.-4      	; 0x2da <LCD_ini+0x7e>
     2de:	00 c0       	rjmp	.+0      	; 0x2e0 <LCD_ini+0x84>
     2e0:	00 00       	nop
	_delay_ms(1);
	sendbyte(0b00001100, 0);
     2e2:	60 e0       	ldi	r22, 0x00	; 0
     2e4:	8c e0       	ldi	r24, 0x0C	; 12
     2e6:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
     2ea:	8f e9       	ldi	r24, 0x9F	; 159
     2ec:	9f e0       	ldi	r25, 0x0F	; 15
     2ee:	01 97       	sbiw	r24, 0x01	; 1
     2f0:	f1 f7       	brne	.-4      	; 0x2ee <LCD_ini+0x92>
     2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <LCD_ini+0x98>
     2f4:	00 00       	nop
	_delay_ms(1);
	 setled();//ïîäñâåòêà
     2f6:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
     2fa:	88 60       	ori	r24, 0x08	; 8
     2fc:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
     300:	6e e4       	ldi	r22, 0x4E	; 78
     302:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <I2C_SendByteByADDR>
	 setwrite();//çàïèñü
     306:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
     30a:	8d 7f       	andi	r24, 0xFD	; 253
     30c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
     310:	6e e4       	ldi	r22, 0x4E	; 78
     312:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <I2C_SendByteByADDR>
     316:	08 95       	ret

00000318 <str_lcd>:
}
//—————————————-
void str_lcd (char *str1)
{
     318:	0f 93       	push	r16
     31a:	1f 93       	push	r17
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	8c 01       	movw	r16, r24
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     322:	c0 e0       	ldi	r28, 0x00	; 0
     324:	d0 e0       	ldi	r29, 0x00	; 0
     326:	03 c0       	rjmp	.+6      	; 0x32e <str_lcd+0x16>
	sendchar(str1[n]);
     328:	0e 94 21 01 	call	0x242	; 0x242 <sendchar>
}
//—————————————-
void str_lcd (char *str1)
{
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     32c:	21 96       	adiw	r28, 0x01	; 1
     32e:	f8 01       	movw	r30, r16
     330:	ec 0f       	add	r30, r28
     332:	fd 1f       	adc	r31, r29
     334:	80 81       	ld	r24, Z
     336:	81 11       	cpse	r24, r1
     338:	f7 cf       	rjmp	.-18     	; 0x328 <str_lcd+0x10>
	sendchar(str1[n]);
}
     33a:	df 91       	pop	r29
     33c:	cf 91       	pop	r28
     33e:	1f 91       	pop	r17
     340:	0f 91       	pop	r16
     342:	08 95       	ret

00000344 <clearlcd>:
//—————————————-
void clearlcd ()
{
    sendbyte(0b00000001, 0);
     344:	60 e0       	ldi	r22, 0x00	; 0
     346:	81 e0       	ldi	r24, 0x01	; 1
     348:	0e 94 02 01 	call	0x204	; 0x204 <sendbyte>
     34c:	8f e3       	ldi	r24, 0x3F	; 63
     34e:	9f e1       	ldi	r25, 0x1F	; 31
     350:	01 97       	sbiw	r24, 0x01	; 1
     352:	f1 f7       	brne	.-4      	; 0x350 <clearlcd+0xc>
     354:	00 c0       	rjmp	.+0      	; 0x356 <clearlcd+0x12>
     356:	00 00       	nop
     358:	08 95       	ret

0000035a <LCD_1286_Draw_pixel>:
/*----------Ðèñîâàíèå ïèêñåëÿ--------------------*/
void LCD_1286_Draw_pixel(uint8_t x, uint8_t y) {
	/// Ôóíêöèÿ ðèñîâàíèÿ òî÷êè.
	/// param\ x - êîîðäèíàòà ïî X(îò 0 äî 127)
	/// paran\ y - êîîðäèíàòà ïî Y(îò 0 äî 63)
	if (y < ST7920_height && x < ST7920_width) {
     35a:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <ST7920_height>
     35e:	69 17       	cp	r22, r25
     360:	e0 f4       	brcc	.+56     	; 0x39a <LCD_1286_Draw_pixel+0x40>
     362:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <ST7920_width>
     366:	89 17       	cp	r24, r25
     368:	c0 f4       	brcc	.+48     	; 0x39a <LCD_1286_Draw_pixel+0x40>
		Frame_buffer[(x) + ((y / 8) * 128)] |= 0x01 << y % 8;
     36a:	96 2f       	mov	r25, r22
     36c:	96 95       	lsr	r25
     36e:	96 95       	lsr	r25
     370:	96 95       	lsr	r25
     372:	e8 2f       	mov	r30, r24
     374:	f0 e0       	ldi	r31, 0x00	; 0
     376:	80 e8       	ldi	r24, 0x80	; 128
     378:	98 9f       	mul	r25, r24
     37a:	e0 0d       	add	r30, r0
     37c:	f1 1d       	adc	r31, r1
     37e:	11 24       	eor	r1, r1
     380:	67 70       	andi	r22, 0x07	; 7
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	02 c0       	rjmp	.+4      	; 0x38c <LCD_1286_Draw_pixel+0x32>
     388:	88 0f       	add	r24, r24
     38a:	99 1f       	adc	r25, r25
     38c:	6a 95       	dec	r22
     38e:	e2 f7       	brpl	.-8      	; 0x388 <LCD_1286_Draw_pixel+0x2e>
     390:	ed 50       	subi	r30, 0x0D	; 13
     392:	fd 4f       	sbci	r31, 0xFD	; 253
     394:	90 81       	ld	r25, Z
     396:	89 2b       	or	r24, r25
     398:	80 83       	st	Z, r24
     39a:	08 95       	ret

0000039c <strob>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     39c:	85 e0       	ldi	r24, 0x05	; 5
     39e:	8a 95       	dec	r24
     3a0:	f1 f7       	brne	.-4      	; 0x39e <strob+0x2>
     3a2:	00 00       	nop
}
/*----------Òàêòîâûé èìïóëüñ--------------------*/
void strob(void)
{
	_delay_us(1);
	PORTD |= (1<<E);
     3a4:	8b b1       	in	r24, 0x0b	; 11
     3a6:	80 62       	ori	r24, 0x20	; 32
     3a8:	8b b9       	out	0x0b, r24	; 11
     3aa:	85 e0       	ldi	r24, 0x05	; 5
     3ac:	8a 95       	dec	r24
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <strob+0x10>
     3b0:	00 00       	nop
	_delay_us(1);
	PORTD &= ~(1<<E);
     3b2:	8b b1       	in	r24, 0x0b	; 11
     3b4:	8f 7d       	andi	r24, 0xDF	; 223
     3b6:	8b b9       	out	0x0b, r24	; 11
     3b8:	85 e0       	ldi	r24, 0x05	; 5
     3ba:	8a 95       	dec	r24
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <strob+0x1e>
     3be:	00 00       	nop
     3c0:	08 95       	ret

000003c2 <LCD_12864_send_data>:
	for(n=0;str1[n]!='\0';n++)
	LCD_12864_send_data(str1[n]);
}
/*----------Îòïðàâêà äàííûõ--------------------*/
void LCD_12864_send_data(uint8_t data)
{
     3c2:	1f 93       	push	r17
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	18 2f       	mov	r17, r24
	PORTD |= (1<<RS);
     3ca:	8b b1       	in	r24, 0x0b	; 11
     3cc:	80 68       	ori	r24, 0x80	; 128
     3ce:	8b b9       	out	0x0b, r24	; 11
    //ïåðåäà÷à 5 åäèíèö
	PORTD |= (1<<RW);
     3d0:	8b b1       	in	r24, 0x0b	; 11
     3d2:	80 64       	ori	r24, 0x40	; 64
     3d4:	8b b9       	out	0x0b, r24	; 11
	strob();
     3d6:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     3da:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     3de:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     3e2:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     3e6:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	PORTD &= ~(1<<RW);//r/w=0
     3ea:	8b b1       	in	r24, 0x0b	; 11
     3ec:	8f 7b       	andi	r24, 0xBF	; 191
     3ee:	8b b9       	out	0x0b, r24	; 11
	strob();
     3f0:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	PORTD |= (1<<RW);//rs=1
     3f4:	8b b1       	in	r24, 0x0b	; 11
     3f6:	80 64       	ori	r24, 0x40	; 64
     3f8:	8b b9       	out	0x0b, r24	; 11
	strob();
     3fa:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	PORTD &= ~(1<<RW);
     3fe:	8b b1       	in	r24, 0x0b	; 11
     400:	8f 7b       	andi	r24, 0xBF	; 191
     402:	8b b9       	out	0x0b, r24	; 11
	strob();
     404:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	for (int k = 0; k < 12; k++)
     408:	c0 e0       	ldi	r28, 0x00	; 0
     40a:	d0 e0       	ldi	r29, 0x00	; 0
     40c:	1c c0       	rjmp	.+56     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
	{
		if ((k == 4)||(k == 5)||(k == 6)||(k == 7))
     40e:	ce 01       	movw	r24, r28
     410:	04 97       	sbiw	r24, 0x04	; 4
     412:	04 97       	sbiw	r24, 0x04	; 4
     414:	30 f4       	brcc	.+12     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
		{
			PORTD &= ~(1<<RW);
     416:	8b b1       	in	r24, 0x0b	; 11
     418:	8f 7b       	andi	r24, 0xBF	; 191
     41a:	8b b9       	out	0x0b, r24	; 11
			strob();
     41c:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
     420:	11 c0       	rjmp	.+34     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
		}
		else
		{
			switch(data & 0x80)
     422:	81 2f       	mov	r24, r17
     424:	80 78       	andi	r24, 0x80	; 128
     426:	41 f0       	breq	.+16     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     428:	80 38       	cpi	r24, 0x80	; 128
     42a:	59 f4       	brne	.+22     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			{
				case 0x80: PORTD |= (1<<RW);
     42c:	8b b1       	in	r24, 0x0b	; 11
     42e:	80 64       	ori	r24, 0x40	; 64
     430:	8b b9       	out	0x0b, r24	; 11
						strob();
     432:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
						break;
     436:	05 c0       	rjmp	.+10     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
				case 0: PORTD &= ~(1<<RW);
     438:	8b b1       	in	r24, 0x0b	; 11
     43a:	8f 7b       	andi	r24, 0xBF	; 191
     43c:	8b b9       	out	0x0b, r24	; 11
						strob();	
     43e:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
						break;
			}
			data = data << 1;
     442:	11 0f       	add	r17, r17
	strob();
	PORTD |= (1<<RW);//rs=1
	strob();
	PORTD &= ~(1<<RW);
	strob();
	for (int k = 0; k < 12; k++)
     444:	21 96       	adiw	r28, 0x01	; 1
     446:	cc 30       	cpi	r28, 0x0C	; 12
     448:	d1 05       	cpc	r29, r1
     44a:	0c f3       	brlt	.-62     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
			}
			data = data << 1;
		}
	}
	//ïåðåäà÷à 4 íóëåé
	PORTD &= ~(1<<RW);
     44c:	8b b1       	in	r24, 0x0b	; 11
     44e:	8f 7b       	andi	r24, 0xBF	; 191
     450:	8b b9       	out	0x0b, r24	; 11
	strob();
     452:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     456:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     45a:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     45e:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	
	PORTD &= ~(1<<RS);
     462:	8b b1       	in	r24, 0x0b	; 11
     464:	8f 77       	andi	r24, 0x7F	; 127
     466:	8b b9       	out	0x0b, r24	; 11
}
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	1f 91       	pop	r17
     46e:	08 95       	ret

00000470 <str_LCD_12864>:
	command = command | x;
	LCD_12864_send_command(command);
}
/*----------Âûâîä ñèìâîëüíîãî òåêñòà ñòðîêîé--------------------*/
void str_LCD_12864 (char *str1)
{
     470:	0f 93       	push	r16
     472:	1f 93       	push	r17
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
     478:	8c 01       	movw	r16, r24
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     47a:	c0 e0       	ldi	r28, 0x00	; 0
     47c:	d0 e0       	ldi	r29, 0x00	; 0
     47e:	03 c0       	rjmp	.+6      	; 0x486 <str_LCD_12864+0x16>
	LCD_12864_send_data(str1[n]);
     480:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_12864_send_data>
}
/*----------Âûâîä ñèìâîëüíîãî òåêñòà ñòðîêîé--------------------*/
void str_LCD_12864 (char *str1)
{
	wchar_t n;
	for(n=0;str1[n]!='\0';n++)
     484:	21 96       	adiw	r28, 0x01	; 1
     486:	f8 01       	movw	r30, r16
     488:	ec 0f       	add	r30, r28
     48a:	fd 1f       	adc	r31, r29
     48c:	80 81       	ld	r24, Z
     48e:	81 11       	cpse	r24, r1
     490:	f7 cf       	rjmp	.-18     	; 0x480 <str_LCD_12864+0x10>
	LCD_12864_send_data(str1[n]);
}
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	1f 91       	pop	r17
     498:	0f 91       	pop	r16
     49a:	08 95       	ret

0000049c <LCD_12864_send_command>:
	
	PORTD &= ~(1<<RS);
}
/*----------Îòïðàâêà êîìàíäû--------------------*/
void LCD_12864_send_command(uint8_t command)
{
     49c:	1f 93       	push	r17
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	18 2f       	mov	r17, r24
	PORTD |= (1<<RS);
     4a4:	8b b1       	in	r24, 0x0b	; 11
     4a6:	80 68       	ori	r24, 0x80	; 128
     4a8:	8b b9       	out	0x0b, r24	; 11
    //ïåðåäà÷à 5 åäèíèö
	PORTD |= (1<<RW);
     4aa:	8b b1       	in	r24, 0x0b	; 11
     4ac:	80 64       	ori	r24, 0x40	; 64
     4ae:	8b b9       	out	0x0b, r24	; 11
	strob();
     4b0:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     4b4:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     4b8:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     4bc:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     4c0:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	PORTD &= ~(1<<RW);//r/w=0
     4c4:	8b b1       	in	r24, 0x0b	; 11
     4c6:	8f 7b       	andi	r24, 0xBF	; 191
     4c8:	8b b9       	out	0x0b, r24	; 11
	strob();
     4ca:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	PORTD &= ~(1<<RW);//rs=0
     4ce:	8b b1       	in	r24, 0x0b	; 11
     4d0:	8f 7b       	andi	r24, 0xBF	; 191
     4d2:	8b b9       	out	0x0b, r24	; 11
	strob();
     4d4:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	PORTD &= ~(1<<RW);
     4d8:	8b b1       	in	r24, 0x0b	; 11
     4da:	8f 7b       	andi	r24, 0xBF	; 191
     4dc:	8b b9       	out	0x0b, r24	; 11
	strob();
     4de:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	for (int k = 0; k < 12; k++)
     4e2:	c0 e0       	ldi	r28, 0x00	; 0
     4e4:	d0 e0       	ldi	r29, 0x00	; 0
     4e6:	1c c0       	rjmp	.+56     	; 0x520 <LCD_12864_send_command+0x84>
	{
		if ((k == 4)||(k == 5)||(k == 6)||(k == 7))
     4e8:	ce 01       	movw	r24, r28
     4ea:	04 97       	sbiw	r24, 0x04	; 4
     4ec:	04 97       	sbiw	r24, 0x04	; 4
     4ee:	30 f4       	brcc	.+12     	; 0x4fc <LCD_12864_send_command+0x60>
		{
			PORTD &= ~(1<<RW);
     4f0:	8b b1       	in	r24, 0x0b	; 11
     4f2:	8f 7b       	andi	r24, 0xBF	; 191
     4f4:	8b b9       	out	0x0b, r24	; 11
			strob();
     4f6:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
     4fa:	11 c0       	rjmp	.+34     	; 0x51e <LCD_12864_send_command+0x82>
		}
		else
		{
			switch(command & 0x80)
     4fc:	81 2f       	mov	r24, r17
     4fe:	80 78       	andi	r24, 0x80	; 128
     500:	41 f0       	breq	.+16     	; 0x512 <LCD_12864_send_command+0x76>
     502:	80 38       	cpi	r24, 0x80	; 128
     504:	59 f4       	brne	.+22     	; 0x51c <LCD_12864_send_command+0x80>
			{
				case 0x80: PORTD |= (1<<RW);
     506:	8b b1       	in	r24, 0x0b	; 11
     508:	80 64       	ori	r24, 0x40	; 64
     50a:	8b b9       	out	0x0b, r24	; 11
				strob();
     50c:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
				break;
     510:	05 c0       	rjmp	.+10     	; 0x51c <LCD_12864_send_command+0x80>
				case 0: PORTD &= ~(1<<RW);
     512:	8b b1       	in	r24, 0x0b	; 11
     514:	8f 7b       	andi	r24, 0xBF	; 191
     516:	8b b9       	out	0x0b, r24	; 11
				strob();
     518:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
				break;
			}
			command = command << 1;
     51c:	11 0f       	add	r17, r17
	strob();
	PORTD &= ~(1<<RW);//rs=0
	strob();
	PORTD &= ~(1<<RW);
	strob();
	for (int k = 0; k < 12; k++)
     51e:	21 96       	adiw	r28, 0x01	; 1
     520:	cc 30       	cpi	r28, 0x0C	; 12
     522:	d1 05       	cpc	r29, r1
     524:	0c f3       	brlt	.-62     	; 0x4e8 <LCD_12864_send_command+0x4c>
			}
			command = command << 1;
		}
	}
	//ïåðåäà÷à 4 íóëåé
	PORTD &= ~(1<<RW);
     526:	8b b1       	in	r24, 0x0b	; 11
     528:	8f 7b       	andi	r24, 0xBF	; 191
     52a:	8b b9       	out	0x0b, r24	; 11
	strob();
     52c:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     530:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     534:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	strob();
     538:	0e 94 ce 01 	call	0x39c	; 0x39c <strob>
	
	PORTD &= ~(1<<RS);
     53c:	8b b1       	in	r24, 0x0b	; 11
     53e:	8f 77       	andi	r24, 0x7F	; 127
     540:	8b b9       	out	0x0b, r24	; 11
}
     542:	df 91       	pop	r29
     544:	cf 91       	pop	r28
     546:	1f 91       	pop	r17
     548:	08 95       	ret

0000054a <LCD_12864_GrapnicMode>:
	_delay_ms(10);
}
/*----------Âêëþ÷åíèå ãðàôè÷åñêîãî ðåæèìà--------------------*/
void LCD_12864_GrapnicMode(uint8_t enable)   // 1-enable, 0-disable
{
	if (enable) 
     54a:	88 23       	and	r24, r24
     54c:	99 f0       	breq	.+38     	; 0x574 <LCD_12864_GrapnicMode+0x2a>
	{
		LCD_12864_send_command(0x34); //Ïåðåõîäèì â extended instruction
     54e:	84 e3       	ldi	r24, 0x34	; 52
     550:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     554:	8f e9       	ldi	r24, 0x9F	; 159
     556:	9f e0       	ldi	r25, 0x0F	; 15
     558:	01 97       	sbiw	r24, 0x01	; 1
     55a:	f1 f7       	brne	.-4      	; 0x558 <LCD_12864_GrapnicMode+0xe>
     55c:	00 c0       	rjmp	.+0      	; 0x55e <LCD_12864_GrapnicMode+0x14>
     55e:	00 00       	nop
		_delay_ms(1);	
	    LCD_12864_send_command(0x36); //âêë ãðàôè÷. ðåæèì
     560:	86 e3       	ldi	r24, 0x36	; 54
     562:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
     566:	8f e9       	ldi	r24, 0x9F	; 159
     568:	9f e0       	ldi	r25, 0x0F	; 15
     56a:	01 97       	sbiw	r24, 0x01	; 1
     56c:	f1 f7       	brne	.-4      	; 0x56a <LCD_12864_GrapnicMode+0x20>
     56e:	00 c0       	rjmp	.+0      	; 0x570 <LCD_12864_GrapnicMode+0x26>
     570:	00 00       	nop
     572:	08 95       	ret
		_delay_ms(1);	
	}
	else
	{
		LCD_12864_send_command(0x30); //Ïåðåõîäèì â basic instruction
     574:	80 e3       	ldi	r24, 0x30	; 48
     576:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
     57a:	8f e9       	ldi	r24, 0x9F	; 159
     57c:	9f e0       	ldi	r25, 0x0F	; 15
     57e:	01 97       	sbiw	r24, 0x01	; 1
     580:	f1 f7       	brne	.-4      	; 0x57e <LCD_12864_GrapnicMode+0x34>
     582:	00 c0       	rjmp	.+0      	; 0x584 <LCD_12864_GrapnicMode+0x3a>
     584:	00 00       	nop
     586:	08 95       	ret

00000588 <LCD_12864_Draw_bitmap>:
		_delay_ms(1);
	}
}
/*----------Âûâîä èçîáðàæåíèÿ íà ýêðàí äèñïëåÿ--------------------*/
void LCD_12864_Draw_bitmap(const unsigned char *bitmap) {
     588:	8f 92       	push	r8
     58a:	9f 92       	push	r9
     58c:	af 92       	push	r10
     58e:	bf 92       	push	r11
     590:	df 92       	push	r13
     592:	ef 92       	push	r14
     594:	ff 92       	push	r15
     596:	0f 93       	push	r16
     598:	1f 93       	push	r17
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	7c 01       	movw	r14, r24
	/// \param *bitmap - èçîáðàæåíèå 128*64. ò.å. Áóôåð èç 1024 ýëåìåíòîâ.
	uint8_t x, y;
	uint16_t i = 0;
	uint8_t Temp, Db;

	for (y = 0; y < 64; y++) {
     5a0:	d1 2c       	mov	r13, r1
     5a2:	31 c1       	rjmp	.+610    	; 0x806 <__DATA_REGION_LENGTH__+0x6>
		for (x = 0; x < 8; x++) {
			if (y < 32) {
     5a4:	8f e1       	ldi	r24, 0x1F	; 31
     5a6:	8d 15       	cp	r24, r13
     5a8:	48 f0       	brcs	.+18     	; 0x5bc <LCD_12864_Draw_bitmap+0x34>
				LCD_12864_send_command(0x80 | y);				//y(0-31)
     5aa:	8d 2d       	mov	r24, r13
     5ac:	80 68       	ori	r24, 0x80	; 128
     5ae:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
				LCD_12864_send_command(0x80 | x);				//x(0-8)
     5b2:	80 2f       	mov	r24, r16
     5b4:	80 68       	ori	r24, 0x80	; 128
     5b6:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
     5ba:	09 c0       	rjmp	.+18     	; 0x5ce <LCD_12864_Draw_bitmap+0x46>
				} else {
				LCD_12864_send_command(0x80 | (y - 32));		//y(0-31)
     5bc:	80 ee       	ldi	r24, 0xE0	; 224
     5be:	8d 0d       	add	r24, r13
     5c0:	80 68       	ori	r24, 0x80	; 128
     5c2:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
				LCD_12864_send_command(0x88 | x);				//x(0-8)
     5c6:	80 2f       	mov	r24, r16
     5c8:	88 68       	ori	r24, 0x88	; 136
     5ca:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
			}

			i = ((y / 8) * 128) + (x * 16);
     5ce:	cd 2d       	mov	r28, r13
     5d0:	c6 95       	lsr	r28
     5d2:	c6 95       	lsr	r28
     5d4:	c6 95       	lsr	r28
     5d6:	d0 e0       	ldi	r29, 0x00	; 0
     5d8:	cc 0f       	add	r28, r28
     5da:	dd 1f       	adc	r29, r29
     5dc:	cc 0f       	add	r28, r28
     5de:	dd 1f       	adc	r29, r29
     5e0:	cc 0f       	add	r28, r28
     5e2:	dd 1f       	adc	r29, r29
     5e4:	c0 0f       	add	r28, r16
     5e6:	d1 1d       	adc	r29, r1
     5e8:	c2 95       	swap	r28
     5ea:	d2 95       	swap	r29
     5ec:	d0 7f       	andi	r29, 0xF0	; 240
     5ee:	dc 27       	eor	r29, r28
     5f0:	c0 7f       	andi	r28, 0xF0	; 240
     5f2:	dc 27       	eor	r29, r28
			Db = y % 8;

			Temp = (((bitmap[i] >> Db) & 0x01) << 7) | (((bitmap[i + 1] >> Db) & 0x01) << 6) | (((bitmap[i + 2] >> Db) & 0x01) << 5)
     5f4:	ce 0d       	add	r28, r14
     5f6:	df 1d       	adc	r29, r15
     5f8:	88 80       	ld	r8, Y
     5fa:	91 2c       	mov	r9, r1
     5fc:	1d 2d       	mov	r17, r13
     5fe:	17 70       	andi	r17, 0x07	; 7
     600:	01 2e       	mov	r0, r17
     602:	02 c0       	rjmp	.+4      	; 0x608 <LCD_12864_Draw_bitmap+0x80>
     604:	95 94       	asr	r9
     606:	87 94       	ror	r8
     608:	0a 94       	dec	r0
     60a:	e2 f7       	brpl	.-8      	; 0x604 <LCD_12864_Draw_bitmap+0x7c>
     60c:	96 94       	lsr	r9
     60e:	98 2c       	mov	r9, r8
     610:	88 24       	eor	r8, r8
     612:	97 94       	ror	r9
     614:	87 94       	ror	r8
     616:	a9 80       	ldd	r10, Y+1	; 0x01
     618:	b1 2c       	mov	r11, r1
     61a:	01 2e       	mov	r0, r17
     61c:	02 c0       	rjmp	.+4      	; 0x622 <LCD_12864_Draw_bitmap+0x9a>
     61e:	b5 94       	asr	r11
     620:	a7 94       	ror	r10
     622:	0a 94       	dec	r0
     624:	e2 f7       	brpl	.-8      	; 0x61e <LCD_12864_Draw_bitmap+0x96>
     626:	81 e0       	ldi	r24, 0x01	; 1
     628:	a8 22       	and	r10, r24
     62a:	bb 24       	eor	r11, r11
     62c:	00 24       	eor	r0, r0
     62e:	b6 94       	lsr	r11
     630:	a7 94       	ror	r10
     632:	07 94       	ror	r0
     634:	b6 94       	lsr	r11
     636:	a7 94       	ror	r10
     638:	07 94       	ror	r0
     63a:	ba 2c       	mov	r11, r10
     63c:	a0 2c       	mov	r10, r0
     63e:	aa 81       	ldd	r26, Y+2	; 0x02
     640:	b0 e0       	ldi	r27, 0x00	; 0
     642:	01 2e       	mov	r0, r17
     644:	02 c0       	rjmp	.+4      	; 0x64a <LCD_12864_Draw_bitmap+0xc2>
     646:	b5 95       	asr	r27
     648:	a7 95       	ror	r26
     64a:	0a 94       	dec	r0
     64c:	e2 f7       	brpl	.-8      	; 0x646 <LCD_12864_Draw_bitmap+0xbe>
     64e:	a1 70       	andi	r26, 0x01	; 1
     650:	bb 27       	eor	r27, r27
     652:	aa 0f       	add	r26, r26
     654:	bb 1f       	adc	r27, r27
     656:	a2 95       	swap	r26
     658:	b2 95       	swap	r27
     65a:	b0 7f       	andi	r27, 0xF0	; 240
     65c:	ba 27       	eor	r27, r26
     65e:	a0 7f       	andi	r26, 0xF0	; 240
     660:	ba 27       	eor	r27, r26
			| (((bitmap[i + 3] >> Db) & 0x01) << 4) | (((bitmap[i + 4] >> Db) & 0x01) << 3) | (((bitmap[i + 5] >> Db) & 0x01) << 2)
     662:	eb 81       	ldd	r30, Y+3	; 0x03
     664:	f0 e0       	ldi	r31, 0x00	; 0
     666:	01 2e       	mov	r0, r17
     668:	02 c0       	rjmp	.+4      	; 0x66e <LCD_12864_Draw_bitmap+0xe6>
     66a:	f5 95       	asr	r31
     66c:	e7 95       	ror	r30
     66e:	0a 94       	dec	r0
     670:	e2 f7       	brpl	.-8      	; 0x66a <LCD_12864_Draw_bitmap+0xe2>
     672:	e1 70       	andi	r30, 0x01	; 1
     674:	ff 27       	eor	r31, r31
     676:	e2 95       	swap	r30
     678:	f2 95       	swap	r31
     67a:	f0 7f       	andi	r31, 0xF0	; 240
     67c:	fe 27       	eor	r31, r30
     67e:	e0 7f       	andi	r30, 0xF0	; 240
     680:	fe 27       	eor	r31, r30
     682:	6c 81       	ldd	r22, Y+4	; 0x04
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	01 2e       	mov	r0, r17
     688:	02 c0       	rjmp	.+4      	; 0x68e <LCD_12864_Draw_bitmap+0x106>
     68a:	75 95       	asr	r23
     68c:	67 95       	ror	r22
     68e:	0a 94       	dec	r0
     690:	e2 f7       	brpl	.-8      	; 0x68a <LCD_12864_Draw_bitmap+0x102>
     692:	61 70       	andi	r22, 0x01	; 1
     694:	77 27       	eor	r23, r23
     696:	66 0f       	add	r22, r22
     698:	77 1f       	adc	r23, r23
     69a:	66 0f       	add	r22, r22
     69c:	77 1f       	adc	r23, r23
     69e:	66 0f       	add	r22, r22
     6a0:	77 1f       	adc	r23, r23
     6a2:	4d 81       	ldd	r20, Y+5	; 0x05
     6a4:	50 e0       	ldi	r21, 0x00	; 0
     6a6:	01 2e       	mov	r0, r17
     6a8:	02 c0       	rjmp	.+4      	; 0x6ae <LCD_12864_Draw_bitmap+0x126>
     6aa:	55 95       	asr	r21
     6ac:	47 95       	ror	r20
     6ae:	0a 94       	dec	r0
     6b0:	e2 f7       	brpl	.-8      	; 0x6aa <LCD_12864_Draw_bitmap+0x122>
     6b2:	41 70       	andi	r20, 0x01	; 1
     6b4:	55 27       	eor	r21, r21
     6b6:	44 0f       	add	r20, r20
     6b8:	55 1f       	adc	r21, r21
     6ba:	44 0f       	add	r20, r20
     6bc:	55 1f       	adc	r21, r21
			| (((bitmap[i + 6] >> Db) & 0x01) << 1) | (((bitmap[i + 7] >> Db) & 0x01) << 0);
     6be:	2e 81       	ldd	r18, Y+6	; 0x06
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	01 2e       	mov	r0, r17
     6c4:	02 c0       	rjmp	.+4      	; 0x6ca <LCD_12864_Draw_bitmap+0x142>
     6c6:	35 95       	asr	r19
     6c8:	27 95       	ror	r18
     6ca:	0a 94       	dec	r0
     6cc:	e2 f7       	brpl	.-8      	; 0x6c6 <LCD_12864_Draw_bitmap+0x13e>
     6ce:	21 70       	andi	r18, 0x01	; 1
     6d0:	33 27       	eor	r19, r19
     6d2:	22 0f       	add	r18, r18
     6d4:	33 1f       	adc	r19, r19
     6d6:	8f 81       	ldd	r24, Y+7	; 0x07
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	01 2e       	mov	r0, r17
     6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <LCD_12864_Draw_bitmap+0x15a>
     6de:	95 95       	asr	r25
     6e0:	87 95       	ror	r24
     6e2:	0a 94       	dec	r0
     6e4:	e2 f7       	brpl	.-8      	; 0x6de <LCD_12864_Draw_bitmap+0x156>
			}

			i = ((y / 8) * 128) + (x * 16);
			Db = y % 8;

			Temp = (((bitmap[i] >> Db) & 0x01) << 7) | (((bitmap[i + 1] >> Db) & 0x01) << 6) | (((bitmap[i + 2] >> Db) & 0x01) << 5)
     6e6:	a8 28       	or	r10, r8
     6e8:	aa 29       	or	r26, r10
     6ea:	ea 2b       	or	r30, r26
     6ec:	6e 2b       	or	r22, r30
     6ee:	46 2b       	or	r20, r22
     6f0:	24 2b       	or	r18, r20
     6f2:	81 70       	andi	r24, 0x01	; 1
			| (((bitmap[i + 3] >> Db) & 0x01) << 4) | (((bitmap[i + 4] >> Db) & 0x01) << 3) | (((bitmap[i + 5] >> Db) & 0x01) << 2)
			| (((bitmap[i + 6] >> Db) & 0x01) << 1) | (((bitmap[i + 7] >> Db) & 0x01) << 0);
			LCD_12864_send_data(Temp);
     6f4:	82 2b       	or	r24, r18
     6f6:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_12864_send_data>

			Temp = (((bitmap[i + 8] >> Db) & 0x01) << 7) | (((bitmap[i + 9] >> Db) & 0x01) << 6) | (((bitmap[i + 10] >> Db) & 0x01) << 5)
     6fa:	88 84       	ldd	r8, Y+8	; 0x08
     6fc:	91 2c       	mov	r9, r1
     6fe:	01 2e       	mov	r0, r17
     700:	02 c0       	rjmp	.+4      	; 0x706 <LCD_12864_Draw_bitmap+0x17e>
     702:	95 94       	asr	r9
     704:	87 94       	ror	r8
     706:	0a 94       	dec	r0
     708:	e2 f7       	brpl	.-8      	; 0x702 <LCD_12864_Draw_bitmap+0x17a>
     70a:	96 94       	lsr	r9
     70c:	98 2c       	mov	r9, r8
     70e:	88 24       	eor	r8, r8
     710:	97 94       	ror	r9
     712:	87 94       	ror	r8
     714:	a9 84       	ldd	r10, Y+9	; 0x09
     716:	b1 2c       	mov	r11, r1
     718:	01 2e       	mov	r0, r17
     71a:	02 c0       	rjmp	.+4      	; 0x720 <LCD_12864_Draw_bitmap+0x198>
     71c:	b5 94       	asr	r11
     71e:	a7 94       	ror	r10
     720:	0a 94       	dec	r0
     722:	e2 f7       	brpl	.-8      	; 0x71c <LCD_12864_Draw_bitmap+0x194>
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	a8 22       	and	r10, r24
     728:	bb 24       	eor	r11, r11
     72a:	00 24       	eor	r0, r0
     72c:	b6 94       	lsr	r11
     72e:	a7 94       	ror	r10
     730:	07 94       	ror	r0
     732:	b6 94       	lsr	r11
     734:	a7 94       	ror	r10
     736:	07 94       	ror	r0
     738:	ba 2c       	mov	r11, r10
     73a:	a0 2c       	mov	r10, r0
     73c:	aa 85       	ldd	r26, Y+10	; 0x0a
     73e:	b0 e0       	ldi	r27, 0x00	; 0
     740:	01 2e       	mov	r0, r17
     742:	02 c0       	rjmp	.+4      	; 0x748 <LCD_12864_Draw_bitmap+0x1c0>
     744:	b5 95       	asr	r27
     746:	a7 95       	ror	r26
     748:	0a 94       	dec	r0
     74a:	e2 f7       	brpl	.-8      	; 0x744 <LCD_12864_Draw_bitmap+0x1bc>
     74c:	a1 70       	andi	r26, 0x01	; 1
     74e:	bb 27       	eor	r27, r27
     750:	aa 0f       	add	r26, r26
     752:	bb 1f       	adc	r27, r27
     754:	a2 95       	swap	r26
     756:	b2 95       	swap	r27
     758:	b0 7f       	andi	r27, 0xF0	; 240
     75a:	ba 27       	eor	r27, r26
     75c:	a0 7f       	andi	r26, 0xF0	; 240
     75e:	ba 27       	eor	r27, r26
			| (((bitmap[i + 11] >> Db) & 0x01) << 4) | (((bitmap[i + 12] >> Db) & 0x01) << 3) | (((bitmap[i + 13] >> Db) & 0x01) << 2)
     760:	eb 85       	ldd	r30, Y+11	; 0x0b
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	01 2e       	mov	r0, r17
     766:	02 c0       	rjmp	.+4      	; 0x76c <LCD_12864_Draw_bitmap+0x1e4>
     768:	f5 95       	asr	r31
     76a:	e7 95       	ror	r30
     76c:	0a 94       	dec	r0
     76e:	e2 f7       	brpl	.-8      	; 0x768 <LCD_12864_Draw_bitmap+0x1e0>
     770:	e1 70       	andi	r30, 0x01	; 1
     772:	ff 27       	eor	r31, r31
     774:	e2 95       	swap	r30
     776:	f2 95       	swap	r31
     778:	f0 7f       	andi	r31, 0xF0	; 240
     77a:	fe 27       	eor	r31, r30
     77c:	e0 7f       	andi	r30, 0xF0	; 240
     77e:	fe 27       	eor	r31, r30
     780:	6c 85       	ldd	r22, Y+12	; 0x0c
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	01 2e       	mov	r0, r17
     786:	02 c0       	rjmp	.+4      	; 0x78c <LCD_12864_Draw_bitmap+0x204>
     788:	75 95       	asr	r23
     78a:	67 95       	ror	r22
     78c:	0a 94       	dec	r0
     78e:	e2 f7       	brpl	.-8      	; 0x788 <LCD_12864_Draw_bitmap+0x200>
     790:	61 70       	andi	r22, 0x01	; 1
     792:	77 27       	eor	r23, r23
     794:	66 0f       	add	r22, r22
     796:	77 1f       	adc	r23, r23
     798:	66 0f       	add	r22, r22
     79a:	77 1f       	adc	r23, r23
     79c:	66 0f       	add	r22, r22
     79e:	77 1f       	adc	r23, r23
     7a0:	4d 85       	ldd	r20, Y+13	; 0x0d
     7a2:	50 e0       	ldi	r21, 0x00	; 0
     7a4:	01 2e       	mov	r0, r17
     7a6:	02 c0       	rjmp	.+4      	; 0x7ac <LCD_12864_Draw_bitmap+0x224>
     7a8:	55 95       	asr	r21
     7aa:	47 95       	ror	r20
     7ac:	0a 94       	dec	r0
     7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <LCD_12864_Draw_bitmap+0x220>
     7b0:	41 70       	andi	r20, 0x01	; 1
     7b2:	55 27       	eor	r21, r21
     7b4:	44 0f       	add	r20, r20
     7b6:	55 1f       	adc	r21, r21
     7b8:	44 0f       	add	r20, r20
     7ba:	55 1f       	adc	r21, r21
			| (((bitmap[i + 14] >> Db) & 0x01) << 1) | (((bitmap[i + 15] >> Db) & 0x01) << 0);
     7bc:	2e 85       	ldd	r18, Y+14	; 0x0e
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	01 2e       	mov	r0, r17
     7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <LCD_12864_Draw_bitmap+0x240>
     7c4:	35 95       	asr	r19
     7c6:	27 95       	ror	r18
     7c8:	0a 94       	dec	r0
     7ca:	e2 f7       	brpl	.-8      	; 0x7c4 <LCD_12864_Draw_bitmap+0x23c>
     7cc:	21 70       	andi	r18, 0x01	; 1
     7ce:	33 27       	eor	r19, r19
     7d0:	22 0f       	add	r18, r18
     7d2:	33 1f       	adc	r19, r19
     7d4:	cf 85       	ldd	r28, Y+15	; 0x0f
     7d6:	d0 e0       	ldi	r29, 0x00	; 0
     7d8:	02 c0       	rjmp	.+4      	; 0x7de <LCD_12864_Draw_bitmap+0x256>
     7da:	d5 95       	asr	r29
     7dc:	c7 95       	ror	r28
     7de:	1a 95       	dec	r17
     7e0:	e2 f7       	brpl	.-8      	; 0x7da <LCD_12864_Draw_bitmap+0x252>
			Temp = (((bitmap[i] >> Db) & 0x01) << 7) | (((bitmap[i + 1] >> Db) & 0x01) << 6) | (((bitmap[i + 2] >> Db) & 0x01) << 5)
			| (((bitmap[i + 3] >> Db) & 0x01) << 4) | (((bitmap[i + 4] >> Db) & 0x01) << 3) | (((bitmap[i + 5] >> Db) & 0x01) << 2)
			| (((bitmap[i + 6] >> Db) & 0x01) << 1) | (((bitmap[i + 7] >> Db) & 0x01) << 0);
			LCD_12864_send_data(Temp);

			Temp = (((bitmap[i + 8] >> Db) & 0x01) << 7) | (((bitmap[i + 9] >> Db) & 0x01) << 6) | (((bitmap[i + 10] >> Db) & 0x01) << 5)
     7e2:	88 2d       	mov	r24, r8
     7e4:	8a 29       	or	r24, r10
     7e6:	8a 2b       	or	r24, r26
     7e8:	8e 2b       	or	r24, r30
     7ea:	86 2b       	or	r24, r22
     7ec:	84 2b       	or	r24, r20
     7ee:	82 2b       	or	r24, r18
     7f0:	c1 70       	andi	r28, 0x01	; 1
			| (((bitmap[i + 11] >> Db) & 0x01) << 4) | (((bitmap[i + 12] >> Db) & 0x01) << 3) | (((bitmap[i + 13] >> Db) & 0x01) << 2)
			| (((bitmap[i + 14] >> Db) & 0x01) << 1) | (((bitmap[i + 15] >> Db) & 0x01) << 0);

			LCD_12864_send_data(Temp);
     7f2:	8c 2b       	or	r24, r28
     7f4:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_12864_send_data>
	uint8_t x, y;
	uint16_t i = 0;
	uint8_t Temp, Db;

	for (y = 0; y < 64; y++) {
		for (x = 0; x < 8; x++) {
     7f8:	0f 5f       	subi	r16, 0xFF	; 255
     7fa:	01 c0       	rjmp	.+2      	; 0x7fe <LCD_12864_Draw_bitmap+0x276>
     7fc:	00 e0       	ldi	r16, 0x00	; 0
     7fe:	08 30       	cpi	r16, 0x08	; 8
     800:	08 f4       	brcc	.+2      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     802:	d0 ce       	rjmp	.-608    	; 0x5a4 <LCD_12864_Draw_bitmap+0x1c>
	/// \param *bitmap - èçîáðàæåíèå 128*64. ò.å. Áóôåð èç 1024 ýëåìåíòîâ.
	uint8_t x, y;
	uint16_t i = 0;
	uint8_t Temp, Db;

	for (y = 0; y < 64; y++) {
     804:	d3 94       	inc	r13
     806:	8f e3       	ldi	r24, 0x3F	; 63
     808:	8d 15       	cp	r24, r13
     80a:	c0 f7       	brcc	.-16     	; 0x7fc <LCD_12864_Draw_bitmap+0x274>
			| (((bitmap[i + 14] >> Db) & 0x01) << 1) | (((bitmap[i + 15] >> Db) & 0x01) << 0);

			LCD_12864_send_data(Temp);
		}
	}
}
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	1f 91       	pop	r17
     812:	0f 91       	pop	r16
     814:	ff 90       	pop	r15
     816:	ef 90       	pop	r14
     818:	df 90       	pop	r13
     81a:	bf 90       	pop	r11
     81c:	af 90       	pop	r10
     81e:	9f 90       	pop	r9
     820:	8f 90       	pop	r8
     822:	08 95       	ret

00000824 <clear_LCD_12864>:
	}
}
/*----------Î÷èñòêà--------------------*/
void clear_LCD_12864(void)
{
	LCD_12864_send_command(0x1);//clear
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
     82a:	8f e3       	ldi	r24, 0x3F	; 63
     82c:	9c e9       	ldi	r25, 0x9C	; 156
     82e:	01 97       	sbiw	r24, 0x01	; 1
     830:	f1 f7       	brne	.-4      	; 0x82e <clear_LCD_12864+0xa>
     832:	00 c0       	rjmp	.+0      	; 0x834 <clear_LCD_12864+0x10>
     834:	00 00       	nop
     836:	08 95       	ret

00000838 <LCD_12864_ini>:
     838:	2f ef       	ldi	r18, 0xFF	; 255
     83a:	83 ef       	ldi	r24, 0xF3	; 243
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	21 50       	subi	r18, 0x01	; 1
     840:	80 40       	sbci	r24, 0x00	; 0
     842:	90 40       	sbci	r25, 0x00	; 0
     844:	e1 f7       	brne	.-8      	; 0x83e <LCD_12864_ini+0x6>
     846:	00 c0       	rjmp	.+0      	; 0x848 <LCD_12864_ini+0x10>
     848:	00 00       	nop

/*----------Èíèöèàëèçàöèÿ--------------------*/
void LCD_12864_ini(void)
{
	_delay_ms(40);
	LCD_12864_send_command(0xC);//display on
     84a:	8c e0       	ldi	r24, 0x0C	; 12
     84c:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     850:	8f e8       	ldi	r24, 0x8F	; 143
     852:	91 e0       	ldi	r25, 0x01	; 1
     854:	01 97       	sbiw	r24, 0x01	; 1
     856:	f1 f7       	brne	.-4      	; 0x854 <LCD_12864_ini+0x1c>
     858:	00 c0       	rjmp	.+0      	; 0x85a <LCD_12864_ini+0x22>
     85a:	00 00       	nop
	_delay_us(100);
	clear_LCD_12864();
     85c:	0e 94 12 04 	call	0x824	; 0x824 <clear_LCD_12864>
	LCD_12864_send_command(6);//êóðñîð ñäâèãàåòñÿ âïðàâî
     860:	86 e0       	ldi	r24, 0x06	; 6
     862:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     866:	8f e3       	ldi	r24, 0x3F	; 63
     868:	9c e9       	ldi	r25, 0x9C	; 156
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	f1 f7       	brne	.-4      	; 0x86a <LCD_12864_ini+0x32>
     86e:	00 c0       	rjmp	.+0      	; 0x870 <LCD_12864_ini+0x38>
     870:	00 00       	nop
     872:	08 95       	ret

00000874 <setpos_LCD_12864>:
}
/*----------Ïîçèöèîíèðîâàíèå ñèìâîëüíîãî òåêñòà--------------------*/
void setpos_LCD_12864(unsigned char x, unsigned y)
{
	uint8_t command;
	switch (y)
     874:	61 30       	cpi	r22, 0x01	; 1
     876:	71 05       	cpc	r23, r1
     878:	41 f0       	breq	.+16     	; 0x88a <setpos_LCD_12864+0x16>
     87a:	68 f0       	brcs	.+26     	; 0x896 <setpos_LCD_12864+0x22>
     87c:	62 30       	cpi	r22, 0x02	; 2
     87e:	71 05       	cpc	r23, r1
     880:	31 f0       	breq	.+12     	; 0x88e <setpos_LCD_12864+0x1a>
     882:	63 30       	cpi	r22, 0x03	; 3
     884:	71 05       	cpc	r23, r1
     886:	29 f0       	breq	.+10     	; 0x892 <setpos_LCD_12864+0x1e>
     888:	07 c0       	rjmp	.+14     	; 0x898 <setpos_LCD_12864+0x24>
	{
		case 0: command = 0x80; break;
		case 1: command = 0x90; break;
     88a:	90 e9       	ldi	r25, 0x90	; 144
     88c:	05 c0       	rjmp	.+10     	; 0x898 <setpos_LCD_12864+0x24>
		case 2: command = 0x88; break;
     88e:	98 e8       	ldi	r25, 0x88	; 136
     890:	03 c0       	rjmp	.+6      	; 0x898 <setpos_LCD_12864+0x24>
		case 3: command = 0x98; break;
     892:	98 e9       	ldi	r25, 0x98	; 152
     894:	01 c0       	rjmp	.+2      	; 0x898 <setpos_LCD_12864+0x24>
void setpos_LCD_12864(unsigned char x, unsigned y)
{
	uint8_t command;
	switch (y)
	{
		case 0: command = 0x80; break;
     896:	90 e8       	ldi	r25, 0x80	; 128
		case 1: command = 0x90; break;
		case 2: command = 0x88; break;
		case 3: command = 0x98; break;
	}
	command = command | x;
	LCD_12864_send_command(command);
     898:	89 2b       	or	r24, r25
     89a:	0e 94 4e 02 	call	0x49c	; 0x49c <LCD_12864_send_command>
     89e:	08 95       	ret

000008a0 <ST7920_Draw_line>:
}

/*----------Ðàçëè÷íàÿ ãðàôèêà--------------------*/
/*-----------------------------------------------*/
/*----------Ëèíèÿ--------------------*/
void ST7920_Draw_line(uint8_t x_start, uint8_t y_start, uint8_t x_end, uint8_t y_end) {
     8a0:	8f 92       	push	r8
     8a2:	9f 92       	push	r9
     8a4:	af 92       	push	r10
     8a6:	bf 92       	push	r11
     8a8:	cf 92       	push	r12
     8aa:	df 92       	push	r13
     8ac:	ef 92       	push	r14
     8ae:	ff 92       	push	r15
     8b0:	0f 93       	push	r16
     8b2:	1f 93       	push	r17
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
     8b8:	c8 2f       	mov	r28, r24
     8ba:	d6 2f       	mov	r29, r22
     8bc:	b4 2e       	mov	r11, r20
     8be:	82 2e       	mov	r8, r18
	int dx = (x_end >= x_start) ? x_end - x_start : x_start - x_end;
     8c0:	48 17       	cp	r20, r24
     8c2:	28 f0       	brcs	.+10     	; 0x8ce <ST7920_Draw_line+0x2e>
     8c4:	c4 2e       	mov	r12, r20
     8c6:	d1 2c       	mov	r13, r1
     8c8:	c8 1a       	sub	r12, r24
     8ca:	d1 08       	sbc	r13, r1
     8cc:	04 c0       	rjmp	.+8      	; 0x8d6 <ST7920_Draw_line+0x36>
     8ce:	c8 2e       	mov	r12, r24
     8d0:	d1 2c       	mov	r13, r1
     8d2:	c4 1a       	sub	r12, r20
     8d4:	d1 08       	sbc	r13, r1
	int dy = (y_end >= y_start) ? y_end - y_start : y_start - y_end;
     8d6:	8d 16       	cp	r8, r29
     8d8:	28 f0       	brcs	.+10     	; 0x8e4 <ST7920_Draw_line+0x44>
     8da:	e8 2c       	mov	r14, r8
     8dc:	f1 2c       	mov	r15, r1
     8de:	ed 1a       	sub	r14, r29
     8e0:	f1 08       	sbc	r15, r1
     8e2:	04 c0       	rjmp	.+8      	; 0x8ec <ST7920_Draw_line+0x4c>
     8e4:	ed 2e       	mov	r14, r29
     8e6:	f1 2c       	mov	r15, r1
     8e8:	e8 18       	sub	r14, r8
     8ea:	f1 08       	sbc	r15, r1
	int sx = (x_start < x_end) ? 1 : -1;
     8ec:	cb 15       	cp	r28, r11
     8ee:	18 f4       	brcc	.+6      	; 0x8f6 <ST7920_Draw_line+0x56>
     8f0:	aa 24       	eor	r10, r10
     8f2:	a3 94       	inc	r10
     8f4:	02 c0       	rjmp	.+4      	; 0x8fa <ST7920_Draw_line+0x5a>
     8f6:	aa 24       	eor	r10, r10
     8f8:	aa 94       	dec	r10
	int sy = (y_start < y_end) ? 1 : -1;
     8fa:	d8 15       	cp	r29, r8
     8fc:	18 f4       	brcc	.+6      	; 0x904 <__stack+0x5>
     8fe:	99 24       	eor	r9, r9
     900:	93 94       	inc	r9
     902:	02 c0       	rjmp	.+4      	; 0x908 <__stack+0x9>
     904:	99 24       	eor	r9, r9
     906:	9a 94       	dec	r9
	int err = dx - dy;
     908:	86 01       	movw	r16, r12
     90a:	0e 19       	sub	r16, r14
     90c:	1f 09       	sbc	r17, r15

	for (;;) {
		LCD_1286_Draw_pixel(x_start, y_start);
     90e:	6d 2f       	mov	r22, r29
     910:	8c 2f       	mov	r24, r28
     912:	0e 94 ad 01 	call	0x35a	; 0x35a <LCD_1286_Draw_pixel>
		if (x_start == x_end && y_start == y_end)
     916:	cb 11       	cpse	r28, r11
     918:	02 c0       	rjmp	.+4      	; 0x91e <__stack+0x1f>
     91a:	d8 15       	cp	r29, r8
     91c:	a1 f0       	breq	.+40     	; 0x946 <__stack+0x47>
		break;
		int e2 = err + err;
     91e:	c8 01       	movw	r24, r16
     920:	88 0f       	add	r24, r24
     922:	99 1f       	adc	r25, r25
		if (e2 > -dy) {
     924:	22 27       	eor	r18, r18
     926:	33 27       	eor	r19, r19
     928:	2e 19       	sub	r18, r14
     92a:	3f 09       	sbc	r19, r15
     92c:	28 17       	cp	r18, r24
     92e:	39 07       	cpc	r19, r25
     930:	1c f4       	brge	.+6      	; 0x938 <__stack+0x39>
			err -= dy;
     932:	0e 19       	sub	r16, r14
     934:	1f 09       	sbc	r17, r15
			x_start += sx;
     936:	ca 0d       	add	r28, r10
		}
		if (e2 < dx) {
     938:	8c 15       	cp	r24, r12
     93a:	9d 05       	cpc	r25, r13
     93c:	44 f7       	brge	.-48     	; 0x90e <__stack+0xf>
			err += dx;
     93e:	0c 0d       	add	r16, r12
     940:	1d 1d       	adc	r17, r13
			y_start += sy;
     942:	d9 0d       	add	r29, r9
     944:	e4 cf       	rjmp	.-56     	; 0x90e <__stack+0xf>
		}
	}
}
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	1f 91       	pop	r17
     94c:	0f 91       	pop	r16
     94e:	ff 90       	pop	r15
     950:	ef 90       	pop	r14
     952:	df 90       	pop	r13
     954:	cf 90       	pop	r12
     956:	bf 90       	pop	r11
     958:	af 90       	pop	r10
     95a:	9f 90       	pop	r9
     95c:	8f 90       	pop	r8
     95e:	08 95       	ret

00000960 <ST7920_Draw_rectangle>:
/*----------Ïóñòîòåëûé ïðÿìîóãîëüíèê--------------------*/
void ST7920_Draw_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
     960:	ef 92       	push	r14
     962:	ff 92       	push	r15
     964:	0f 93       	push	r16
     966:	1f 93       	push	r17
     968:	cf 93       	push	r28
     96a:	df 93       	push	r29
     96c:	7c 01       	movw	r14, r24
     96e:	8b 01       	movw	r16, r22
     970:	e9 01       	movw	r28, r18
	/// \param y - íà÷àëüíàÿ òî÷êà ïî îñè "y"
	/// \param width - øèðèíà ïðÿìîóãîëüíèêà
	/// \param height - âûñîòà ïðÿìîóãîëüíèêà

	/*Ïðîâåðêà øèðèíû è âûñîòû*/
	if ((x + width) >= ST7920_width) {
     972:	9c 01       	movw	r18, r24
     974:	24 0f       	add	r18, r20
     976:	35 1f       	adc	r19, r21
     978:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <ST7920_width>
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	28 17       	cp	r18, r24
     980:	39 07       	cpc	r19, r25
     982:	18 f0       	brcs	.+6      	; 0x98a <ST7920_Draw_rectangle+0x2a>
		width = ST7920_width - x;
     984:	ac 01       	movw	r20, r24
     986:	4e 19       	sub	r20, r14
     988:	5f 09       	sbc	r21, r15
	}
	if ((y + height) >= ST7920_height) {
     98a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <ST7920_height>
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	98 01       	movw	r18, r16
     992:	2c 0f       	add	r18, r28
     994:	3d 1f       	adc	r19, r29
     996:	28 17       	cp	r18, r24
     998:	39 07       	cpc	r19, r25
     99a:	18 f0       	brcs	.+6      	; 0x9a2 <ST7920_Draw_rectangle+0x42>
		height = ST7920_height - y;
     99c:	ec 01       	movw	r28, r24
     99e:	c0 1b       	sub	r28, r16
     9a0:	d1 0b       	sbc	r29, r17
	}

	/*Ðèñóåì ëèíèè*/
	ST7920_Draw_line(x, y, x + width, y); /*Âåðõ ïðÿìîóãîëüíèêà*/
     9a2:	de 2d       	mov	r29, r14
     9a4:	d4 0f       	add	r29, r20
     9a6:	20 2f       	mov	r18, r16
     9a8:	4d 2f       	mov	r20, r29
     9aa:	60 2f       	mov	r22, r16
     9ac:	8e 2d       	mov	r24, r14
     9ae:	0e 94 50 04 	call	0x8a0	; 0x8a0 <ST7920_Draw_line>
	ST7920_Draw_line(x, y + height, x + width, y + height); /*Íèç ïðÿìîóãîëüíèêà*/
     9b2:	c0 0f       	add	r28, r16
     9b4:	2c 2f       	mov	r18, r28
     9b6:	4d 2f       	mov	r20, r29
     9b8:	6c 2f       	mov	r22, r28
     9ba:	8e 2d       	mov	r24, r14
     9bc:	0e 94 50 04 	call	0x8a0	; 0x8a0 <ST7920_Draw_line>
	ST7920_Draw_line(x, y, x, y + height); /*Ëåâàÿ ñòîðîíà ïðÿìîóãîëüíèêà*/
     9c0:	2c 2f       	mov	r18, r28
     9c2:	4e 2d       	mov	r20, r14
     9c4:	60 2f       	mov	r22, r16
     9c6:	8e 2d       	mov	r24, r14
     9c8:	0e 94 50 04 	call	0x8a0	; 0x8a0 <ST7920_Draw_line>
	ST7920_Draw_line(x + width, y, x + width, y + height); /*Ïðàâàÿ ñòîðîíà ïðÿìîóãîëüíèêà*/
     9cc:	2c 2f       	mov	r18, r28
     9ce:	4d 2f       	mov	r20, r29
     9d0:	60 2f       	mov	r22, r16
     9d2:	8d 2f       	mov	r24, r29
     9d4:	0e 94 50 04 	call	0x8a0	; 0x8a0 <ST7920_Draw_line>
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	1f 91       	pop	r17
     9de:	0f 91       	pop	r16
     9e0:	ff 90       	pop	r15
     9e2:	ef 90       	pop	r14
     9e4:	08 95       	ret

000009e6 <wind_speed>:
int flag_irq = 1;

float RADIUS = 0.09;

float wind_speed (char *counter)
{
     9e6:	cf 92       	push	r12
     9e8:	df 92       	push	r13
     9ea:	ef 92       	push	r14
     9ec:	ff 92       	push	r15
     9ee:	cf 93       	push	r28
     9f0:	df 93       	push	r29
     9f2:	00 d0       	rcall	.+0      	; 0x9f4 <wind_speed+0xe>
     9f4:	cd b7       	in	r28, 0x3d	; 61
     9f6:	de b7       	in	r29, 0x3e	; 62
	float speed = 0;
	int n;
	if (strlen(counter) != 0)
     9f8:	fc 01       	movw	r30, r24
     9fa:	20 81       	ld	r18, Z
     9fc:	22 23       	and	r18, r18
     9fe:	a1 f0       	breq	.+40     	; 0xa28 <wind_speed+0x42>
	{
		sscanf(counter, "%d", &n);
     a00:	9e 01       	movw	r18, r28
     a02:	2f 5f       	subi	r18, 0xFF	; 255
     a04:	3f 4f       	sbci	r19, 0xFF	; 255
     a06:	3f 93       	push	r19
     a08:	2f 93       	push	r18
     a0a:	29 e0       	ldi	r18, 0x09	; 9
     a0c:	31 e0       	ldi	r19, 0x01	; 1
     a0e:	3f 93       	push	r19
     a10:	2f 93       	push	r18
     a12:	9f 93       	push	r25
     a14:	8f 93       	push	r24
     a16:	0e 94 2c 11 	call	0x2258	; 0x2258 <sscanf>
     a1a:	0f 90       	pop	r0
     a1c:	0f 90       	pop	r0
     a1e:	0f 90       	pop	r0
     a20:	0f 90       	pop	r0
     a22:	0f 90       	pop	r0
     a24:	0f 90       	pop	r0
     a26:	02 c0       	rjmp	.+4      	; 0xa2c <wind_speed+0x46>
	}
	else
	{
        n = 0;
     a28:	1a 82       	std	Y+2, r1	; 0x02
     a2a:	19 82       	std	Y+1, r1	; 0x01
	}
	speed = 2*3.14*RADIUS*n/4; //ïåðèîä 2 ñåê+2 ìàãíèòà
     a2c:	23 ec       	ldi	r18, 0xC3	; 195
     a2e:	35 ef       	ldi	r19, 0xF5	; 245
     a30:	48 ec       	ldi	r20, 0xC8	; 200
     a32:	50 e4       	ldi	r21, 0x40	; 64
     a34:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a38:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a3c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     a40:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     a44:	0e 94 ad 0b 	call	0x175a	; 0x175a <__mulsf3>
     a48:	6b 01       	movw	r12, r22
     a4a:	7c 01       	movw	r14, r24
     a4c:	69 81       	ldd	r22, Y+1	; 0x01
     a4e:	7a 81       	ldd	r23, Y+2	; 0x02
     a50:	07 2e       	mov	r0, r23
     a52:	00 0c       	add	r0, r0
     a54:	88 0b       	sbc	r24, r24
     a56:	99 0b       	sbc	r25, r25
     a58:	0e 94 21 0b 	call	0x1642	; 0x1642 <__floatsisf>
     a5c:	a7 01       	movw	r20, r14
     a5e:	96 01       	movw	r18, r12
     a60:	0e 94 ad 0b 	call	0x175a	; 0x175a <__mulsf3>
     a64:	20 e0       	ldi	r18, 0x00	; 0
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	40 e8       	ldi	r20, 0x80	; 128
     a6a:	5e e3       	ldi	r21, 0x3E	; 62
     a6c:	0e 94 ad 0b 	call	0x175a	; 0x175a <__mulsf3>
	
	return speed;
}
     a70:	0f 90       	pop	r0
     a72:	0f 90       	pop	r0
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	ff 90       	pop	r15
     a7a:	ef 90       	pop	r14
     a7c:	df 90       	pop	r13
     a7e:	cf 90       	pop	r12
     a80:	08 95       	ret

00000a82 <V_BAT>:
float V_BAT (char *adc_value)
{
     a82:	cf 93       	push	r28
     a84:	df 93       	push	r29
     a86:	00 d0       	rcall	.+0      	; 0xa88 <V_BAT+0x6>
     a88:	cd b7       	in	r28, 0x3d	; 61
     a8a:	de b7       	in	r29, 0x3e	; 62
	float VBAT;
	int V;
	if (strlen(adc_value) != 0)
     a8c:	fc 01       	movw	r30, r24
     a8e:	20 81       	ld	r18, Z
     a90:	22 23       	and	r18, r18
     a92:	a1 f0       	breq	.+40     	; 0xabc <V_BAT+0x3a>
	{
		sscanf(adc_value, "%d", &V);
     a94:	9e 01       	movw	r18, r28
     a96:	2f 5f       	subi	r18, 0xFF	; 255
     a98:	3f 4f       	sbci	r19, 0xFF	; 255
     a9a:	3f 93       	push	r19
     a9c:	2f 93       	push	r18
     a9e:	29 e0       	ldi	r18, 0x09	; 9
     aa0:	31 e0       	ldi	r19, 0x01	; 1
     aa2:	3f 93       	push	r19
     aa4:	2f 93       	push	r18
     aa6:	9f 93       	push	r25
     aa8:	8f 93       	push	r24
     aaa:	0e 94 2c 11 	call	0x2258	; 0x2258 <sscanf>
     aae:	0f 90       	pop	r0
     ab0:	0f 90       	pop	r0
     ab2:	0f 90       	pop	r0
     ab4:	0f 90       	pop	r0
     ab6:	0f 90       	pop	r0
     ab8:	0f 90       	pop	r0
     aba:	02 c0       	rjmp	.+4      	; 0xac0 <V_BAT+0x3e>
	}
	else
	{
		V = 0;
     abc:	1a 82       	std	Y+2, r1	; 0x02
     abe:	19 82       	std	Y+1, r1	; 0x01
	}
	VBAT = V*2.45*3/1024;
     ac0:	69 81       	ldd	r22, Y+1	; 0x01
     ac2:	7a 81       	ldd	r23, Y+2	; 0x02
     ac4:	07 2e       	mov	r0, r23
     ac6:	00 0c       	add	r0, r0
     ac8:	88 0b       	sbc	r24, r24
     aca:	99 0b       	sbc	r25, r25
     acc:	0e 94 21 0b 	call	0x1642	; 0x1642 <__floatsisf>
     ad0:	2d ec       	ldi	r18, 0xCD	; 205
     ad2:	3c ec       	ldi	r19, 0xCC	; 204
     ad4:	4c e1       	ldi	r20, 0x1C	; 28
     ad6:	50 e4       	ldi	r21, 0x40	; 64
     ad8:	0e 94 ad 0b 	call	0x175a	; 0x175a <__mulsf3>
     adc:	20 e0       	ldi	r18, 0x00	; 0
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	40 e4       	ldi	r20, 0x40	; 64
     ae2:	50 e4       	ldi	r21, 0x40	; 64
     ae4:	0e 94 ad 0b 	call	0x175a	; 0x175a <__mulsf3>
     ae8:	20 e0       	ldi	r18, 0x00	; 0
     aea:	30 e0       	ldi	r19, 0x00	; 0
     aec:	40 e8       	ldi	r20, 0x80	; 128
     aee:	5a e3       	ldi	r21, 0x3A	; 58
     af0:	0e 94 ad 0b 	call	0x175a	; 0x175a <__mulsf3>
	
	return VBAT;
}
     af4:	0f 90       	pop	r0
     af6:	0f 90       	pop	r0
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	08 95       	ret

00000afe <RAIN_AMOUNT>:
float RAIN_AMOUNT(char *adc_value)
{
     afe:	cf 93       	push	r28
     b00:	df 93       	push	r29
     b02:	00 d0       	rcall	.+0      	; 0xb04 <RAIN_AMOUNT+0x6>
     b04:	cd b7       	in	r28, 0x3d	; 61
     b06:	de b7       	in	r29, 0x3e	; 62
	float RAIN;
	int R;
	if (strlen(adc_value) != 0)
     b08:	fc 01       	movw	r30, r24
     b0a:	20 81       	ld	r18, Z
     b0c:	22 23       	and	r18, r18
     b0e:	a1 f0       	breq	.+40     	; 0xb38 <RAIN_AMOUNT+0x3a>
	{
		sscanf(adc_value, "%d", &R);
     b10:	9e 01       	movw	r18, r28
     b12:	2f 5f       	subi	r18, 0xFF	; 255
     b14:	3f 4f       	sbci	r19, 0xFF	; 255
     b16:	3f 93       	push	r19
     b18:	2f 93       	push	r18
     b1a:	29 e0       	ldi	r18, 0x09	; 9
     b1c:	31 e0       	ldi	r19, 0x01	; 1
     b1e:	3f 93       	push	r19
     b20:	2f 93       	push	r18
     b22:	9f 93       	push	r25
     b24:	8f 93       	push	r24
     b26:	0e 94 2c 11 	call	0x2258	; 0x2258 <sscanf>
     b2a:	0f 90       	pop	r0
     b2c:	0f 90       	pop	r0
     b2e:	0f 90       	pop	r0
     b30:	0f 90       	pop	r0
     b32:	0f 90       	pop	r0
     b34:	0f 90       	pop	r0
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <RAIN_AMOUNT+0x3e>
	}
	else
	{
		R = 0;
     b38:	1a 82       	std	Y+2, r1	; 0x02
     b3a:	19 82       	std	Y+1, r1	; 0x01
	}
    RAIN = 3*R*2.45/5120;
     b3c:	69 81       	ldd	r22, Y+1	; 0x01
     b3e:	7a 81       	ldd	r23, Y+2	; 0x02
     b40:	cb 01       	movw	r24, r22
     b42:	88 0f       	add	r24, r24
     b44:	99 1f       	adc	r25, r25
     b46:	68 0f       	add	r22, r24
     b48:	79 1f       	adc	r23, r25
     b4a:	07 2e       	mov	r0, r23
     b4c:	00 0c       	add	r0, r0
     b4e:	88 0b       	sbc	r24, r24
     b50:	99 0b       	sbc	r25, r25
     b52:	0e 94 21 0b 	call	0x1642	; 0x1642 <__floatsisf>
     b56:	2d ec       	ldi	r18, 0xCD	; 205
     b58:	3c ec       	ldi	r19, 0xCC	; 204
     b5a:	4c e1       	ldi	r20, 0x1C	; 28
     b5c:	50 e4       	ldi	r21, 0x40	; 64
     b5e:	0e 94 ad 0b 	call	0x175a	; 0x175a <__mulsf3>
     b62:	20 e0       	ldi	r18, 0x00	; 0
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	40 ea       	ldi	r20, 0xA0	; 160
     b68:	55 e4       	ldi	r21, 0x45	; 69
     b6a:	0e 94 ad 0a 	call	0x155a	; 0x155a <__divsf3>
	
	return RAIN;	
}
     b6e:	0f 90       	pop	r0
     b70:	0f 90       	pop	r0
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	08 95       	ret

00000b78 <timer_ini>:
void timer_ini(void)//ïåðèîä 4ñåê
{
	TCCR1B |= (1<<WGM12); // óñòàíàâëèâàåì ðåæèì ÑÒÑ (ñáðîñ ïî ñîâïàäåíèþ)
     b78:	e1 e8       	ldi	r30, 0x81	; 129
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	80 81       	ld	r24, Z
     b7e:	88 60       	ori	r24, 0x08	; 8
     b80:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); //óñòàíàâëèâàåì áèò ðàçðåøåíèÿ ïðåðûâàíèÿ 1îãî ñ÷åò÷èêà ïî ñîâïàäåíèþ ñ OCR1A(H è L)
     b82:	af e6       	ldi	r26, 0x6F	; 111
     b84:	b0 e0       	ldi	r27, 0x00	; 0
     b86:	8c 91       	ld	r24, X
     b88:	82 60       	ori	r24, 0x02	; 2
     b8a:	8c 93       	st	X, r24
	OCR1AH = 0b11110100; //çàïèñûâàåì â ðåãèñòð ÷èñëî äëÿ ñðàâíåíèÿ
     b8c:	84 ef       	ldi	r24, 0xF4	; 244
     b8e:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0b00100100;
     b92:	84 e2       	ldi	r24, 0x24	; 36
     b94:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1B |= (1<<CS12)|(1<<CS10);//óñòàíîâèì äåëèòåëü 256.
     b98:	80 81       	ld	r24, Z
     b9a:	85 60       	ori	r24, 0x05	; 5
     b9c:	80 83       	st	Z, r24
     b9e:	08 95       	ret

00000ba0 <__vector_11>:
}
//——————————————–
ISR (TIMER1_COMPA_vect)
{
     ba0:	1f 92       	push	r1
     ba2:	0f 92       	push	r0
     ba4:	0f b6       	in	r0, 0x3f	; 63
     ba6:	0f 92       	push	r0
     ba8:	11 24       	eor	r1, r1
     baa:	2f 93       	push	r18
     bac:	3f 93       	push	r19
     bae:	4f 93       	push	r20
     bb0:	5f 93       	push	r21
     bb2:	6f 93       	push	r22
     bb4:	7f 93       	push	r23
     bb6:	8f 93       	push	r24
     bb8:	9f 93       	push	r25
     bba:	af 93       	push	r26
     bbc:	bf 93       	push	r27
     bbe:	ef 93       	push	r30
     bc0:	ff 93       	push	r31
	if((strlen(temp_street)!=0)&&(strlen(hum_street)!=0)&&(strlen(WIND_speed)!=0)&&(strlen(Rain)!=0)&&(strlen(Vbat)!=0)&&(strlen(wind_direction)!=0))
     bc2:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <temp_street>
     bc6:	88 23       	and	r24, r24
     bc8:	09 f4       	brne	.+2      	; 0xbcc <__vector_11+0x2c>
     bca:	4c c0       	rjmp	.+152    	; 0xc64 <__vector_11+0xc4>
     bcc:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <hum_street>
     bd0:	88 23       	and	r24, r24
     bd2:	09 f4       	brne	.+2      	; 0xbd6 <__vector_11+0x36>
     bd4:	47 c0       	rjmp	.+142    	; 0xc64 <__vector_11+0xc4>
     bd6:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <WIND_speed>
     bda:	88 23       	and	r24, r24
     bdc:	09 f4       	brne	.+2      	; 0xbe0 <__vector_11+0x40>
     bde:	42 c0       	rjmp	.+132    	; 0xc64 <__vector_11+0xc4>
     be0:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <Rain>
     be4:	88 23       	and	r24, r24
     be6:	f1 f1       	breq	.+124    	; 0xc64 <__vector_11+0xc4>
     be8:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <Vbat>
     bec:	88 23       	and	r24, r24
     bee:	d1 f1       	breq	.+116    	; 0xc64 <__vector_11+0xc4>
     bf0:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <wind_direction>
     bf4:	88 23       	and	r24, r24
     bf6:	b1 f1       	breq	.+108    	; 0xc64 <__vector_11+0xc4>
	{
		//îòïðàâêà ñòðîêè ïî UART â ôîðìàòå: óë.òåìï./ñêîð.âåòðà/îñàäêè/óë.âëàæíîñòü/çàðÿä ÀÊÁ/íàïðàâë.âåòðà
	    sprintf(DATA_TO_UART,"%s ",temp_street);
     bf8:	8f e8       	ldi	r24, 0x8F	; 143
     bfa:	92 e0       	ldi	r25, 0x02	; 2
     bfc:	9f 93       	push	r25
     bfe:	8f 93       	push	r24
     c00:	8c e0       	ldi	r24, 0x0C	; 12
     c02:	91 e0       	ldi	r25, 0x01	; 1
     c04:	9f 93       	push	r25
     c06:	8f 93       	push	r24
     c08:	81 e3       	ldi	r24, 0x31	; 49
     c0a:	91 e0       	ldi	r25, 0x01	; 1
     c0c:	9f 93       	push	r25
     c0e:	8f 93       	push	r24
     c10:	0e 94 0a 11 	call	0x2214	; 0x2214 <sprintf>
		strcat(DATA_TO_UART,WIND_speed);
     c14:	65 e9       	ldi	r22, 0x95	; 149
     c16:	71 e0       	ldi	r23, 0x01	; 1
     c18:	81 e3       	ldi	r24, 0x31	; 49
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	0e 94 b8 10 	call	0x2170	; 0x2170 <strcat>
		strcat(DATA_TO_UART,Rain);
     c20:	63 e6       	ldi	r22, 0x63	; 99
     c22:	71 e0       	ldi	r23, 0x01	; 1
     c24:	81 e3       	ldi	r24, 0x31	; 49
     c26:	91 e0       	ldi	r25, 0x01	; 1
     c28:	0e 94 b8 10 	call	0x2170	; 0x2170 <strcat>
		strcat(DATA_TO_UART,hum_street);
     c2c:	6b e2       	ldi	r22, 0x2B	; 43
     c2e:	72 e0       	ldi	r23, 0x02	; 2
     c30:	81 e3       	ldi	r24, 0x31	; 49
     c32:	91 e0       	ldi	r25, 0x01	; 1
     c34:	0e 94 b8 10 	call	0x2170	; 0x2170 <strcat>
		strcat(DATA_TO_UART,Vbat);
     c38:	6d e6       	ldi	r22, 0x6D	; 109
     c3a:	71 e0       	ldi	r23, 0x01	; 1
     c3c:	81 e3       	ldi	r24, 0x31	; 49
     c3e:	91 e0       	ldi	r25, 0x01	; 1
     c40:	0e 94 b8 10 	call	0x2170	; 0x2170 <strcat>
		strcat(DATA_TO_UART,wind_direction);
     c44:	6b e8       	ldi	r22, 0x8B	; 139
     c46:	71 e0       	ldi	r23, 0x01	; 1
     c48:	81 e3       	ldi	r24, 0x31	; 49
     c4a:	91 e0       	ldi	r25, 0x01	; 1
     c4c:	0e 94 b8 10 	call	0x2170	; 0x2170 <strcat>
		USART_Transmit(DATA_TO_UART);
     c50:	81 e3       	ldi	r24, 0x31	; 49
     c52:	91 e0       	ldi	r25, 0x01	; 1
     c54:	0e 94 92 0a 	call	0x1524	; 0x1524 <USART_Transmit>
     c58:	0f 90       	pop	r0
     c5a:	0f 90       	pop	r0
     c5c:	0f 90       	pop	r0
     c5e:	0f 90       	pop	r0
     c60:	0f 90       	pop	r0
     c62:	0f 90       	pop	r0
	}

}
     c64:	ff 91       	pop	r31
     c66:	ef 91       	pop	r30
     c68:	bf 91       	pop	r27
     c6a:	af 91       	pop	r26
     c6c:	9f 91       	pop	r25
     c6e:	8f 91       	pop	r24
     c70:	7f 91       	pop	r23
     c72:	6f 91       	pop	r22
     c74:	5f 91       	pop	r21
     c76:	4f 91       	pop	r20
     c78:	3f 91       	pop	r19
     c7a:	2f 91       	pop	r18
     c7c:	0f 90       	pop	r0
     c7e:	0f be       	out	0x3f, r0	; 63
     c80:	0f 90       	pop	r0
     c82:	1f 90       	pop	r1
     c84:	18 95       	reti

00000c86 <SPI_init>:

SPI_init(void) //èíèöèàëèçàöèÿ SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //íîæêè SPI íà âûõîä
     c86:	84 b1       	in	r24, 0x04	; 4
     c88:	8e 62       	ori	r24, 0x2E	; 46
     c8a:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //íèçêèé óðîâåíü
     c8c:	85 b1       	in	r24, 0x05	; 5
     c8e:	83 7d       	andi	r24, 0xD3	; 211
     c90:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<IRQ);
     c92:	8a b1       	in	r24, 0x0a	; 10
     c94:	8b 7f       	andi	r24, 0xFB	; 251
     c96:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<IRQ);
     c98:	8b b1       	in	r24, 0x0b	; 11
     c9a:	84 60       	ori	r24, 0x04	; 4
     c9c:	8b b9       	out	0x0b, r24	; 11
	HIGH_CSN;
     c9e:	85 b1       	in	r24, 0x05	; 5
     ca0:	84 60       	ori	r24, 0x04	; 4
     ca2:	85 b9       	out	0x05, r24	; 5
	SPCR = ((1<<SPE)|(1<<MSTR));//âêëþ÷èì øèíó, îáúÿâèì âåäóùèì
     ca4:	80 e5       	ldi	r24, 0x50	; 80
     ca6:	8c bd       	out	0x2c, r24	; 44
}
     ca8:	08 95       	ret

00000caa <port_init>:
//-------------------------------------------------------------
port_init(void)
{
	DDRD |= (1 << LED);//led
     caa:	8a b1       	in	r24, 0x0a	; 10
     cac:	80 61       	ori	r24, 0x10	; 16
     cae:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~ (1 << LED);
     cb0:	8b b1       	in	r24, 0x0b	; 11
     cb2:	8f 7e       	andi	r24, 0xEF	; 239
     cb4:	8b b9       	out	0x0b, r24	; 11
	
	DDRD |= (1<<RS);//íîæêà RS íà âûõîä äëÿ LCD12864
     cb6:	8a b1       	in	r24, 0x0a	; 10
     cb8:	80 68       	ori	r24, 0x80	; 128
     cba:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RS);
     cbc:	8b b1       	in	r24, 0x0b	; 11
     cbe:	8f 77       	andi	r24, 0x7F	; 127
     cc0:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<E);
     cc2:	8a b1       	in	r24, 0x0a	; 10
     cc4:	80 62       	ori	r24, 0x20	; 32
     cc6:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<E);
     cc8:	8b b1       	in	r24, 0x0b	; 11
     cca:	8f 7d       	andi	r24, 0xDF	; 223
     ccc:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<RW);
     cce:	8a b1       	in	r24, 0x0a	; 10
     cd0:	80 64       	ori	r24, 0x40	; 64
     cd2:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RW);
     cd4:	8b b1       	in	r24, 0x0b	; 11
     cd6:	8f 7b       	andi	r24, 0xBF	; 191
     cd8:	8b b9       	out	0x0b, r24	; 11
	//DDRB |= (1<<PSB);//íîæêà PSB íà âûõîä äëÿ LCD12864
	//PORTB &= ~(1<<PSB);
} 
     cda:	08 95       	ret

00000cdc <spi_send_recv>:
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // Ïåðåäà¸ò è ïðèíèìàåò 1 áàéò ïî SPI, âîçâðàùàåò ïîëó÷åííîå çíà÷åíèå
{
	SPDR = data;
     cdc:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
     cde:	0d b4       	in	r0, 0x2d	; 45
     ce0:	07 fe       	sbrs	r0, 7
     ce2:	fd cf       	rjmp	.-6      	; 0xcde <spi_send_recv+0x2>
	return SPDR;
     ce4:	8e b5       	in	r24, 0x2e	; 46
}
     ce6:	08 95       	ret

00000ce8 <main>:
int main(void)
{
	port_init();
     ce8:	0e 94 55 06 	call	0xcaa	; 0xcaa <port_init>
	PORTD |= (1<<LED);
     cec:	8b b1       	in	r24, 0x0b	; 11
     cee:	80 61       	ori	r24, 0x10	; 16
     cf0:	8b b9       	out	0x0b, r24	; 11
    SPI_init();
     cf2:	0e 94 43 06 	call	0xc86	; 0xc86 <SPI_init>
	timer_ini();
     cf6:	0e 94 bc 05 	call	0xb78	; 0xb78 <timer_ini>
	I2C_Init();
     cfa:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <I2C_Init>
	LCD_ini();
     cfe:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_ini>
	
	LCD_12864_ini();
     d02:	0e 94 1c 04 	call	0x838	; 0x838 <LCD_12864_ini>
	//setpos_LCD_12864(2,2);
	//str_LCD_12864 ("Hello world");
	LCD_12864_GrapnicMode(1);
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	0e 94 a5 02 	call	0x54a	; 0x54a <LCD_12864_GrapnicMode>
	//LCD_1286_Draw_pixel(100, 60);
	ST7920_Draw_rectangle(0, 0, 127, 63);
     d0c:	2f e3       	ldi	r18, 0x3F	; 63
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	4f e7       	ldi	r20, 0x7F	; 127
     d12:	50 e0       	ldi	r21, 0x00	; 0
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	80 e0       	ldi	r24, 0x00	; 0
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	0e 94 b0 04 	call	0x960	; 0x960 <ST7920_Draw_rectangle>
	LCD_12864_Draw_bitmap(Frame_buffer);
     d20:	83 ef       	ldi	r24, 0xF3	; 243
     d22:	92 e0       	ldi	r25, 0x02	; 2
     d24:	0e 94 c4 02 	call	0x588	; 0x588 <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
     d28:	80 e0       	ldi	r24, 0x00	; 0
     d2a:	0e 94 a5 02 	call	0x54a	; 0x54a <LCD_12864_GrapnicMode>
	
	USART_Init(16);    //Èíèöèàëèçàöèÿ ìîäóëÿ USART ñêîðîñòü 115200
     d2e:	80 e1       	ldi	r24, 0x10	; 16
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <USART_Init>
     d36:	2f ef       	ldi	r18, 0xFF	; 255
     d38:	83 ed       	ldi	r24, 0xD3	; 211
     d3a:	90 e3       	ldi	r25, 0x30	; 48
     d3c:	21 50       	subi	r18, 0x01	; 1
     d3e:	80 40       	sbci	r24, 0x00	; 0
     d40:	90 40       	sbci	r25, 0x00	; 0
     d42:	e1 f7       	brne	.-8      	; 0xd3c <main+0x54>
     d44:	00 c0       	rjmp	.+0      	; 0xd46 <main+0x5e>
     d46:	00 00       	nop
	_delay_ms(1000);
    NRF24_ini();
     d48:	0e 94 05 0a 	call	0x140a	; 0x140a <NRF24_ini>
	clearlcd();
     d4c:	0e 94 a2 01 	call	0x344	; 0x344 <clearlcd>
	setpos(0,0);
     d50:	60 e0       	ldi	r22, 0x00	; 0
     d52:	70 e0       	ldi	r23, 0x00	; 0
     d54:	80 e0       	ldi	r24, 0x00	; 0
     d56:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
	str_lcd ("hello");
     d5a:	80 e1       	ldi	r24, 0x10	; 16
     d5c:	91 e0       	ldi	r25, 0x01	; 1
     d5e:	0e 94 8c 01 	call	0x318	; 0x318 <str_lcd>
     d62:	2f ef       	ldi	r18, 0xFF	; 255
     d64:	83 ed       	ldi	r24, 0xD3	; 211
     d66:	90 e3       	ldi	r25, 0x30	; 48
     d68:	21 50       	subi	r18, 0x01	; 1
     d6a:	80 40       	sbci	r24, 0x00	; 0
     d6c:	90 40       	sbci	r25, 0x00	; 0
     d6e:	e1 f7       	brne	.-8      	; 0xd68 <main+0x80>
     d70:	00 c0       	rjmp	.+0      	; 0xd72 <main+0x8a>
     d72:	00 00       	nop
	_delay_ms(1000);
	clearlcd();
     d74:	0e 94 a2 01 	call	0x344	; 0x344 <clearlcd>
	setpos(0,0);
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
	// íàñòðàèâàåì ïàðàìåòðû ïðåðûâàíèÿ
	EICRA = (1<<ISC01) | (0<<ISC00);
     d82:	82 e0       	ldi	r24, 0x02	; 2
     d84:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT0);
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	8d bb       	out	0x1d, r24	; 29
	// è ðàçðåøàåì åãî ãëîáàëüíî
	sei();
     d8c:	78 94       	sei
     d8e:	2f ef       	ldi	r18, 0xFF	; 255
     d90:	83 ed       	ldi	r24, 0xD3	; 211
     d92:	90 e3       	ldi	r25, 0x30	; 48
     d94:	21 50       	subi	r18, 0x01	; 1
     d96:	80 40       	sbci	r24, 0x00	; 0
     d98:	90 40       	sbci	r25, 0x00	; 0
     d9a:	e1 f7       	brne	.-8      	; 0xd94 <main+0xac>
     d9c:	00 c0       	rjmp	.+0      	; 0xd9e <main+0xb6>
     d9e:	00 00       	nop
	_delay_ms(1000);
	PORTD &= ~(1<<LED);
     da0:	8b b1       	in	r24, 0x0b	; 11
     da2:	8f 7e       	andi	r24, 0xEF	; 239
     da4:	8b b9       	out	0x0b, r24	; 11
    while (1) 
    {
		clearlcd();
     da6:	0e 94 a2 01 	call	0x344	; 0x344 <clearlcd>
		setpos(0,0);
     daa:	60 e0       	ldi	r22, 0x00	; 0
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
		setpos_LCD_12864(0,0);
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	0e 94 3a 04 	call	0x874	; 0x874 <setpos_LCD_12864>
		NRF24L01_Receive();
     dbe:	0e 94 87 07 	call	0xf0e	; 0xf0e <NRF24L01_Receive>
		str_lcd(temp_street);
     dc2:	8f e8       	ldi	r24, 0x8F	; 143
     dc4:	92 e0       	ldi	r25, 0x02	; 2
     dc6:	0e 94 8c 01 	call	0x318	; 0x318 <str_lcd>
		str_LCD_12864 (temp_street);
     dca:	8f e8       	ldi	r24, 0x8F	; 143
     dcc:	92 e0       	ldi	r25, 0x02	; 2
     dce:	0e 94 38 02 	call	0x470	; 0x470 <str_LCD_12864>
		setpos(6,0);
     dd2:	60 e0       	ldi	r22, 0x00	; 0
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	86 e0       	ldi	r24, 0x06	; 6
     dd8:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
		setpos_LCD_12864(3,0);
     ddc:	60 e0       	ldi	r22, 0x00	; 0
     dde:	70 e0       	ldi	r23, 0x00	; 0
     de0:	83 e0       	ldi	r24, 0x03	; 3
     de2:	0e 94 3a 04 	call	0x874	; 0x874 <setpos_LCD_12864>
	    sprintf(WIND_speed,"%.2f ", wind_speed (HALL_counter));
     de6:	87 ec       	ldi	r24, 0xC7	; 199
     de8:	91 e0       	ldi	r25, 0x01	; 1
     dea:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <wind_speed>
     dee:	9f 93       	push	r25
     df0:	8f 93       	push	r24
     df2:	7f 93       	push	r23
     df4:	6f 93       	push	r22
     df6:	c6 e1       	ldi	r28, 0x16	; 22
     df8:	d1 e0       	ldi	r29, 0x01	; 1
     dfa:	df 93       	push	r29
     dfc:	cf 93       	push	r28
     dfe:	85 e9       	ldi	r24, 0x95	; 149
     e00:	91 e0       	ldi	r25, 0x01	; 1
     e02:	9f 93       	push	r25
     e04:	8f 93       	push	r24
     e06:	0e 94 0a 11 	call	0x2214	; 0x2214 <sprintf>
		str_lcd(WIND_speed);
     e0a:	85 e9       	ldi	r24, 0x95	; 149
     e0c:	91 e0       	ldi	r25, 0x01	; 1
     e0e:	0e 94 8c 01 	call	0x318	; 0x318 <str_lcd>
		str_LCD_12864 (WIND_speed);
     e12:	85 e9       	ldi	r24, 0x95	; 149
     e14:	91 e0       	ldi	r25, 0x01	; 1
     e16:	0e 94 38 02 	call	0x470	; 0x470 <str_LCD_12864>
		setpos(12,0);
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	70 e0       	ldi	r23, 0x00	; 0
     e1e:	8c e0       	ldi	r24, 0x0C	; 12
     e20:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
		setpos_LCD_12864(6,0);
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	86 e0       	ldi	r24, 0x06	; 6
     e2a:	0e 94 3a 04 	call	0x874	; 0x874 <setpos_LCD_12864>
	    sprintf(Rain,"%.2f ",RAIN_AMOUNT(adc_value2));
     e2e:	87 e7       	ldi	r24, 0x77	; 119
     e30:	91 e0       	ldi	r25, 0x01	; 1
     e32:	0e 94 7f 05 	call	0xafe	; 0xafe <RAIN_AMOUNT>
     e36:	9f 93       	push	r25
     e38:	8f 93       	push	r24
     e3a:	7f 93       	push	r23
     e3c:	6f 93       	push	r22
     e3e:	df 93       	push	r29
     e40:	cf 93       	push	r28
     e42:	83 e6       	ldi	r24, 0x63	; 99
     e44:	91 e0       	ldi	r25, 0x01	; 1
     e46:	9f 93       	push	r25
     e48:	8f 93       	push	r24
     e4a:	0e 94 0a 11 	call	0x2214	; 0x2214 <sprintf>
		str_lcd(Rain);
     e4e:	83 e6       	ldi	r24, 0x63	; 99
     e50:	91 e0       	ldi	r25, 0x01	; 1
     e52:	0e 94 8c 01 	call	0x318	; 0x318 <str_lcd>
		str_LCD_12864 (Rain);
     e56:	83 e6       	ldi	r24, 0x63	; 99
     e58:	91 e0       	ldi	r25, 0x01	; 1
     e5a:	0e 94 38 02 	call	0x470	; 0x470 <str_LCD_12864>
		setpos(0,1);
     e5e:	61 e0       	ldi	r22, 0x01	; 1
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
		setpos_LCD_12864(0,1);
     e68:	61 e0       	ldi	r22, 0x01	; 1
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	80 e0       	ldi	r24, 0x00	; 0
     e6e:	0e 94 3a 04 	call	0x874	; 0x874 <setpos_LCD_12864>
		str_lcd(hum_street);
     e72:	8b e2       	ldi	r24, 0x2B	; 43
     e74:	92 e0       	ldi	r25, 0x02	; 2
     e76:	0e 94 8c 01 	call	0x318	; 0x318 <str_lcd>
		str_LCD_12864 (hum_street);
     e7a:	8b e2       	ldi	r24, 0x2B	; 43
     e7c:	92 e0       	ldi	r25, 0x02	; 2
     e7e:	0e 94 38 02 	call	0x470	; 0x470 <str_LCD_12864>
		setpos(6,1);
     e82:	61 e0       	ldi	r22, 0x01	; 1
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	86 e0       	ldi	r24, 0x06	; 6
     e88:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
		setpos_LCD_12864(3,1);
     e8c:	61 e0       	ldi	r22, 0x01	; 1
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	83 e0       	ldi	r24, 0x03	; 3
     e92:	0e 94 3a 04 	call	0x874	; 0x874 <setpos_LCD_12864>
		str_lcd(wind_direction);
     e96:	8b e8       	ldi	r24, 0x8B	; 139
     e98:	91 e0       	ldi	r25, 0x01	; 1
     e9a:	0e 94 8c 01 	call	0x318	; 0x318 <str_lcd>
		str_LCD_12864 (wind_direction);
     e9e:	8b e8       	ldi	r24, 0x8B	; 139
     ea0:	91 e0       	ldi	r25, 0x01	; 1
     ea2:	0e 94 38 02 	call	0x470	; 0x470 <str_LCD_12864>
		setpos(10,1);
     ea6:	61 e0       	ldi	r22, 0x01	; 1
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	8a e0       	ldi	r24, 0x0A	; 10
     eac:	0e 94 25 01 	call	0x24a	; 0x24a <setpos>
		setpos_LCD_12864(6,1);
     eb0:	61 e0       	ldi	r22, 0x01	; 1
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	86 e0       	ldi	r24, 0x06	; 6
     eb6:	0e 94 3a 04 	call	0x874	; 0x874 <setpos_LCD_12864>
	    sprintf(Vbat,"%.2f ",V_BAT(adc_value1));
     eba:	81 e8       	ldi	r24, 0x81	; 129
     ebc:	91 e0       	ldi	r25, 0x01	; 1
     ebe:	0e 94 41 05 	call	0xa82	; 0xa82 <V_BAT>
     ec2:	9f 93       	push	r25
     ec4:	8f 93       	push	r24
     ec6:	7f 93       	push	r23
     ec8:	6f 93       	push	r22
     eca:	df 93       	push	r29
     ecc:	cf 93       	push	r28
     ece:	8d e6       	ldi	r24, 0x6D	; 109
     ed0:	91 e0       	ldi	r25, 0x01	; 1
     ed2:	9f 93       	push	r25
     ed4:	8f 93       	push	r24
     ed6:	0e 94 0a 11 	call	0x2214	; 0x2214 <sprintf>
		str_lcd(Vbat);
     eda:	8d e6       	ldi	r24, 0x6D	; 109
     edc:	91 e0       	ldi	r25, 0x01	; 1
     ede:	0e 94 8c 01 	call	0x318	; 0x318 <str_lcd>
		str_LCD_12864 (Vbat);
     ee2:	8d e6       	ldi	r24, 0x6D	; 109
     ee4:	91 e0       	ldi	r25, 0x01	; 1
     ee6:	0e 94 38 02 	call	0x470	; 0x470 <str_LCD_12864>
     eea:	2f ef       	ldi	r18, 0xFF	; 255
     eec:	81 ee       	ldi	r24, 0xE1	; 225
     eee:	94 e0       	ldi	r25, 0x04	; 4
     ef0:	21 50       	subi	r18, 0x01	; 1
     ef2:	80 40       	sbci	r24, 0x00	; 0
     ef4:	90 40       	sbci	r25, 0x00	; 0
     ef6:	e1 f7       	brne	.-8      	; 0xef0 <main+0x208>
     ef8:	00 c0       	rjmp	.+0      	; 0xefa <main+0x212>
     efa:	00 00       	nop
     efc:	8d b7       	in	r24, 0x3d	; 61
     efe:	9e b7       	in	r25, 0x3e	; 62
     f00:	48 96       	adiw	r24, 0x18	; 24
     f02:	0f b6       	in	r0, 0x3f	; 63
     f04:	f8 94       	cli
     f06:	9e bf       	out	0x3e, r25	; 62
     f08:	0f be       	out	0x3f, r0	; 63
     f0a:	8d bf       	out	0x3d, r24	; 61
     f0c:	4c cf       	rjmp	.-360    	; 0xda6 <main+0xbe>

00000f0e <NRF24L01_Receive>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
     f0e:	cf 93       	push	r28
     f10:	df 93       	push	r29
     f12:	80 91 f3 06 	lds	r24, 0x06F3	; 0x8006f3 <rx_flag>
     f16:	81 30       	cpi	r24, 0x01	; 1
     f18:	09 f0       	breq	.+2      	; 0xf1c <NRF24L01_Receive+0xe>
     f1a:	6b c1       	rjmp	.+726    	; 0x11f2 <NRF24L01_Receive+0x2e4>
     f1c:	80 91 f4 06 	lds	r24, 0x06F4	; 0x8006f4 <RX_BUF>
     f20:	81 30       	cpi	r24, 0x01	; 1
     f22:	09 f0       	breq	.+2      	; 0xf26 <NRF24L01_Receive+0x18>
     f24:	59 c0       	rjmp	.+178    	; 0xfd8 <NRF24L01_Receive+0xca>
     f26:	ef e8       	ldi	r30, 0x8F	; 143
     f28:	f2 e0       	ldi	r31, 0x02	; 2
     f2a:	01 90       	ld	r0, Z+
     f2c:	00 20       	and	r0, r0
     f2e:	e9 f7       	brne	.-6      	; 0xf2a <NRF24L01_Receive+0x1c>
     f30:	31 97       	sbiw	r30, 0x01	; 1
     f32:	af 01       	movw	r20, r30
     f34:	4f 58       	subi	r20, 0x8F	; 143
     f36:	52 40       	sbci	r21, 0x02	; 2
     f38:	44 0f       	add	r20, r20
     f3a:	55 1f       	adc	r21, r21
     f3c:	60 e0       	ldi	r22, 0x00	; 0
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	8f e8       	ldi	r24, 0x8F	; 143
     f42:	92 e0       	ldi	r25, 0x02	; 2
     f44:	0e 94 b1 10 	call	0x2162	; 0x2162 <memset>
     f48:	e4 ef       	ldi	r30, 0xF4	; 244
     f4a:	f6 e0       	ldi	r31, 0x06	; 6
     f4c:	81 81       	ldd	r24, Z+1	; 0x01
     f4e:	c2 81       	ldd	r28, Z+2	; 0x02
     f50:	d0 e0       	ldi	r29, 0x00	; 0
     f52:	dc 2f       	mov	r29, r28
     f54:	cc 27       	eor	r28, r28
     f56:	c8 2b       	or	r28, r24
     f58:	be 01       	movw	r22, r28
     f5a:	0d 2e       	mov	r0, r29
     f5c:	00 0c       	add	r0, r0
     f5e:	88 0b       	sbc	r24, r24
     f60:	99 0b       	sbc	r25, r25
     f62:	0e 94 21 0b 	call	0x1642	; 0x1642 <__floatsisf>
     f66:	20 e0       	ldi	r18, 0x00	; 0
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	40 e2       	ldi	r20, 0x20	; 32
     f6c:	51 e4       	ldi	r21, 0x41	; 65
     f6e:	0e 94 ad 0a 	call	0x155a	; 0x155a <__divsf3>
     f72:	60 93 2d 01 	sts	0x012D, r22	; 0x80012d <temp>
     f76:	70 93 2e 01 	sts	0x012E, r23	; 0x80012e <temp+0x1>
     f7a:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <temp+0x2>
     f7e:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <temp+0x3>
     f82:	dd 23       	and	r29, r29
     f84:	5c f4       	brge	.+22     	; 0xf9c <NRF24L01_Receive+0x8e>
     f86:	dc 01       	movw	r26, r24
     f88:	cb 01       	movw	r24, r22
     f8a:	b0 58       	subi	r27, 0x80	; 128
     f8c:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <temp>
     f90:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <temp+0x1>
     f94:	a0 93 2f 01 	sts	0x012F, r26	; 0x80012f <temp+0x2>
     f98:	b0 93 30 01 	sts	0x0130, r27	; 0x800130 <temp+0x3>
     f9c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <temp+0x3>
     fa0:	8f 93       	push	r24
     fa2:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <temp+0x2>
     fa6:	8f 93       	push	r24
     fa8:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <temp+0x1>
     fac:	8f 93       	push	r24
     fae:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <temp>
     fb2:	8f 93       	push	r24
     fb4:	8c e1       	ldi	r24, 0x1C	; 28
     fb6:	91 e0       	ldi	r25, 0x01	; 1
     fb8:	9f 93       	push	r25
     fba:	8f 93       	push	r24
     fbc:	8f e8       	ldi	r24, 0x8F	; 143
     fbe:	92 e0       	ldi	r25, 0x02	; 2
     fc0:	9f 93       	push	r25
     fc2:	8f 93       	push	r24
     fc4:	0e 94 0a 11 	call	0x2214	; 0x2214 <sprintf>
     fc8:	8d b7       	in	r24, 0x3d	; 61
     fca:	9e b7       	in	r25, 0x3e	; 62
     fcc:	08 96       	adiw	r24, 0x08	; 8
     fce:	0f b6       	in	r0, 0x3f	; 63
     fd0:	f8 94       	cli
     fd2:	9e bf       	out	0x3e, r25	; 62
     fd4:	0f be       	out	0x3f, r0	; 63
     fd6:	8d bf       	out	0x3d, r24	; 61
     fd8:	80 91 f4 06 	lds	r24, 0x06F4	; 0x8006f4 <RX_BUF>
     fdc:	85 30       	cpi	r24, 0x05	; 5
     fde:	09 f0       	breq	.+2      	; 0xfe2 <NRF24L01_Receive+0xd4>
     fe0:	47 c0       	rjmp	.+142    	; 0x1070 <NRF24L01_Receive+0x162>
     fe2:	cb e2       	ldi	r28, 0x2B	; 43
     fe4:	d2 e0       	ldi	r29, 0x02	; 2
     fe6:	fe 01       	movw	r30, r28
     fe8:	01 90       	ld	r0, Z+
     fea:	00 20       	and	r0, r0
     fec:	e9 f7       	brne	.-6      	; 0xfe8 <NRF24L01_Receive+0xda>
     fee:	31 97       	sbiw	r30, 0x01	; 1
     ff0:	af 01       	movw	r20, r30
     ff2:	4b 52       	subi	r20, 0x2B	; 43
     ff4:	52 40       	sbci	r21, 0x02	; 2
     ff6:	44 0f       	add	r20, r20
     ff8:	55 1f       	adc	r21, r21
     ffa:	60 e0       	ldi	r22, 0x00	; 0
     ffc:	70 e0       	ldi	r23, 0x00	; 0
     ffe:	ce 01       	movw	r24, r28
    1000:	0e 94 b1 10 	call	0x2162	; 0x2162 <memset>
    1004:	e4 ef       	ldi	r30, 0xF4	; 244
    1006:	f6 e0       	ldi	r31, 0x06	; 6
    1008:	81 81       	ldd	r24, Z+1	; 0x01
    100a:	62 81       	ldd	r22, Z+2	; 0x02
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	76 2f       	mov	r23, r22
    1010:	66 27       	eor	r22, r22
    1012:	68 2b       	or	r22, r24
    1014:	07 2e       	mov	r0, r23
    1016:	00 0c       	add	r0, r0
    1018:	88 0b       	sbc	r24, r24
    101a:	99 0b       	sbc	r25, r25
    101c:	0e 94 21 0b 	call	0x1642	; 0x1642 <__floatsisf>
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	40 e2       	ldi	r20, 0x20	; 32
    1026:	51 e4       	ldi	r21, 0x41	; 65
    1028:	0e 94 ad 0a 	call	0x155a	; 0x155a <__divsf3>
    102c:	26 2f       	mov	r18, r22
    102e:	37 2f       	mov	r19, r23
    1030:	46 2f       	mov	r20, r22
    1032:	57 2f       	mov	r21, r23
    1034:	68 2f       	mov	r22, r24
    1036:	79 2f       	mov	r23, r25
    1038:	40 93 29 01 	sts	0x0129, r20	; 0x800129 <hum>
    103c:	50 93 2a 01 	sts	0x012A, r21	; 0x80012a <hum+0x1>
    1040:	60 93 2b 01 	sts	0x012B, r22	; 0x80012b <hum+0x2>
    1044:	70 93 2c 01 	sts	0x012C, r23	; 0x80012c <hum+0x3>
    1048:	9f 93       	push	r25
    104a:	8f 93       	push	r24
    104c:	3f 93       	push	r19
    104e:	2f 93       	push	r18
    1050:	81 e2       	ldi	r24, 0x21	; 33
    1052:	91 e0       	ldi	r25, 0x01	; 1
    1054:	9f 93       	push	r25
    1056:	8f 93       	push	r24
    1058:	df 93       	push	r29
    105a:	cf 93       	push	r28
    105c:	0e 94 0a 11 	call	0x2214	; 0x2214 <sprintf>
    1060:	8d b7       	in	r24, 0x3d	; 61
    1062:	9e b7       	in	r25, 0x3e	; 62
    1064:	08 96       	adiw	r24, 0x08	; 8
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	9e bf       	out	0x3e, r25	; 62
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	8d bf       	out	0x3d, r24	; 61
    1070:	c0 91 f4 06 	lds	r28, 0x06F4	; 0x8006f4 <RX_BUF>
    1074:	c2 30       	cpi	r28, 0x02	; 2
    1076:	61 f5       	brne	.+88     	; 0x10d0 <NRF24L01_Receive+0x1c2>
    1078:	e7 ec       	ldi	r30, 0xC7	; 199
    107a:	f1 e0       	ldi	r31, 0x01	; 1
    107c:	01 90       	ld	r0, Z+
    107e:	00 20       	and	r0, r0
    1080:	e9 f7       	brne	.-6      	; 0x107c <NRF24L01_Receive+0x16e>
    1082:	31 97       	sbiw	r30, 0x01	; 1
    1084:	af 01       	movw	r20, r30
    1086:	47 5c       	subi	r20, 0xC7	; 199
    1088:	51 40       	sbci	r21, 0x01	; 1
    108a:	44 0f       	add	r20, r20
    108c:	55 1f       	adc	r21, r21
    108e:	60 e0       	ldi	r22, 0x00	; 0
    1090:	70 e0       	ldi	r23, 0x00	; 0
    1092:	87 ec       	ldi	r24, 0xC7	; 199
    1094:	91 e0       	ldi	r25, 0x01	; 1
    1096:	0e 94 b1 10 	call	0x2162	; 0x2162 <memset>
    109a:	20 e0       	ldi	r18, 0x00	; 0
    109c:	0b c0       	rjmp	.+22     	; 0x10b4 <NRF24L01_Receive+0x1a6>
    109e:	82 2f       	mov	r24, r18
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	fc 01       	movw	r30, r24
    10a4:	eb 50       	subi	r30, 0x0B	; 11
    10a6:	f9 4f       	sbci	r31, 0xF9	; 249
    10a8:	30 81       	ld	r19, Z
    10aa:	fc 01       	movw	r30, r24
    10ac:	e9 53       	subi	r30, 0x39	; 57
    10ae:	fe 4f       	sbci	r31, 0xFE	; 254
    10b0:	30 83       	st	Z, r19
    10b2:	2f 5f       	subi	r18, 0xFF	; 255
    10b4:	82 2f       	mov	r24, r18
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	e4 ef       	ldi	r30, 0xF4	; 244
    10ba:	f6 e0       	ldi	r31, 0x06	; 6
    10bc:	01 90       	ld	r0, Z+
    10be:	00 20       	and	r0, r0
    10c0:	e9 f7       	brne	.-6      	; 0x10bc <NRF24L01_Receive+0x1ae>
    10c2:	31 97       	sbiw	r30, 0x01	; 1
    10c4:	e4 5f       	subi	r30, 0xF4	; 244
    10c6:	f6 40       	sbci	r31, 0x06	; 6
    10c8:	31 97       	sbiw	r30, 0x01	; 1
    10ca:	8e 17       	cp	r24, r30
    10cc:	9f 07       	cpc	r25, r31
    10ce:	38 f3       	brcs	.-50     	; 0x109e <NRF24L01_Receive+0x190>
    10d0:	c3 30       	cpi	r28, 0x03	; 3
    10d2:	89 f5       	brne	.+98     	; 0x1136 <NRF24L01_Receive+0x228>
    10d4:	eb e8       	ldi	r30, 0x8B	; 139
    10d6:	f1 e0       	ldi	r31, 0x01	; 1
    10d8:	01 90       	ld	r0, Z+
    10da:	00 20       	and	r0, r0
    10dc:	e9 f7       	brne	.-6      	; 0x10d8 <NRF24L01_Receive+0x1ca>
    10de:	31 97       	sbiw	r30, 0x01	; 1
    10e0:	af 01       	movw	r20, r30
    10e2:	4b 58       	subi	r20, 0x8B	; 139
    10e4:	51 40       	sbci	r21, 0x01	; 1
    10e6:	44 0f       	add	r20, r20
    10e8:	55 1f       	adc	r21, r21
    10ea:	60 e0       	ldi	r22, 0x00	; 0
    10ec:	70 e0       	ldi	r23, 0x00	; 0
    10ee:	8b e8       	ldi	r24, 0x8B	; 139
    10f0:	91 e0       	ldi	r25, 0x01	; 1
    10f2:	0e 94 b1 10 	call	0x2162	; 0x2162 <memset>
    10f6:	20 e0       	ldi	r18, 0x00	; 0
    10f8:	0b c0       	rjmp	.+22     	; 0x1110 <NRF24L01_Receive+0x202>
    10fa:	82 2f       	mov	r24, r18
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	fc 01       	movw	r30, r24
    1100:	eb 50       	subi	r30, 0x0B	; 11
    1102:	f9 4f       	sbci	r31, 0xF9	; 249
    1104:	30 81       	ld	r19, Z
    1106:	fc 01       	movw	r30, r24
    1108:	e5 57       	subi	r30, 0x75	; 117
    110a:	fe 4f       	sbci	r31, 0xFE	; 254
    110c:	30 83       	st	Z, r19
    110e:	2f 5f       	subi	r18, 0xFF	; 255
    1110:	82 2f       	mov	r24, r18
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	e4 ef       	ldi	r30, 0xF4	; 244
    1116:	f6 e0       	ldi	r31, 0x06	; 6
    1118:	01 90       	ld	r0, Z+
    111a:	00 20       	and	r0, r0
    111c:	e9 f7       	brne	.-6      	; 0x1118 <NRF24L01_Receive+0x20a>
    111e:	31 97       	sbiw	r30, 0x01	; 1
    1120:	e4 5f       	subi	r30, 0xF4	; 244
    1122:	f6 40       	sbci	r31, 0x06	; 6
    1124:	31 97       	sbiw	r30, 0x01	; 1
    1126:	8e 17       	cp	r24, r30
    1128:	9f 07       	cpc	r25, r31
    112a:	38 f3       	brcs	.-50     	; 0x10fa <NRF24L01_Receive+0x1ec>
    112c:	fc 01       	movw	r30, r24
    112e:	e4 57       	subi	r30, 0x74	; 116
    1130:	fe 4f       	sbci	r31, 0xFE	; 254
    1132:	80 e2       	ldi	r24, 0x20	; 32
    1134:	80 83       	st	Z, r24
    1136:	c4 30       	cpi	r28, 0x04	; 4
    1138:	61 f5       	brne	.+88     	; 0x1192 <NRF24L01_Receive+0x284>
    113a:	e1 e8       	ldi	r30, 0x81	; 129
    113c:	f1 e0       	ldi	r31, 0x01	; 1
    113e:	01 90       	ld	r0, Z+
    1140:	00 20       	and	r0, r0
    1142:	e9 f7       	brne	.-6      	; 0x113e <NRF24L01_Receive+0x230>
    1144:	31 97       	sbiw	r30, 0x01	; 1
    1146:	af 01       	movw	r20, r30
    1148:	41 58       	subi	r20, 0x81	; 129
    114a:	51 40       	sbci	r21, 0x01	; 1
    114c:	44 0f       	add	r20, r20
    114e:	55 1f       	adc	r21, r21
    1150:	60 e0       	ldi	r22, 0x00	; 0
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	81 e8       	ldi	r24, 0x81	; 129
    1156:	91 e0       	ldi	r25, 0x01	; 1
    1158:	0e 94 b1 10 	call	0x2162	; 0x2162 <memset>
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	0b c0       	rjmp	.+22     	; 0x1176 <NRF24L01_Receive+0x268>
    1160:	82 2f       	mov	r24, r18
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	fc 01       	movw	r30, r24
    1166:	eb 50       	subi	r30, 0x0B	; 11
    1168:	f9 4f       	sbci	r31, 0xF9	; 249
    116a:	30 81       	ld	r19, Z
    116c:	fc 01       	movw	r30, r24
    116e:	ef 57       	subi	r30, 0x7F	; 127
    1170:	fe 4f       	sbci	r31, 0xFE	; 254
    1172:	30 83       	st	Z, r19
    1174:	2f 5f       	subi	r18, 0xFF	; 255
    1176:	82 2f       	mov	r24, r18
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	e4 ef       	ldi	r30, 0xF4	; 244
    117c:	f6 e0       	ldi	r31, 0x06	; 6
    117e:	01 90       	ld	r0, Z+
    1180:	00 20       	and	r0, r0
    1182:	e9 f7       	brne	.-6      	; 0x117e <NRF24L01_Receive+0x270>
    1184:	31 97       	sbiw	r30, 0x01	; 1
    1186:	e4 5f       	subi	r30, 0xF4	; 244
    1188:	f6 40       	sbci	r31, 0x06	; 6
    118a:	31 97       	sbiw	r30, 0x01	; 1
    118c:	8e 17       	cp	r24, r30
    118e:	9f 07       	cpc	r25, r31
    1190:	38 f3       	brcs	.-50     	; 0x1160 <NRF24L01_Receive+0x252>
    1192:	c6 30       	cpi	r28, 0x06	; 6
    1194:	61 f5       	brne	.+88     	; 0x11ee <NRF24L01_Receive+0x2e0>
    1196:	e7 e7       	ldi	r30, 0x77	; 119
    1198:	f1 e0       	ldi	r31, 0x01	; 1
    119a:	01 90       	ld	r0, Z+
    119c:	00 20       	and	r0, r0
    119e:	e9 f7       	brne	.-6      	; 0x119a <NRF24L01_Receive+0x28c>
    11a0:	31 97       	sbiw	r30, 0x01	; 1
    11a2:	af 01       	movw	r20, r30
    11a4:	47 57       	subi	r20, 0x77	; 119
    11a6:	51 40       	sbci	r21, 0x01	; 1
    11a8:	44 0f       	add	r20, r20
    11aa:	55 1f       	adc	r21, r21
    11ac:	60 e0       	ldi	r22, 0x00	; 0
    11ae:	70 e0       	ldi	r23, 0x00	; 0
    11b0:	87 e7       	ldi	r24, 0x77	; 119
    11b2:	91 e0       	ldi	r25, 0x01	; 1
    11b4:	0e 94 b1 10 	call	0x2162	; 0x2162 <memset>
    11b8:	20 e0       	ldi	r18, 0x00	; 0
    11ba:	0b c0       	rjmp	.+22     	; 0x11d2 <NRF24L01_Receive+0x2c4>
    11bc:	82 2f       	mov	r24, r18
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	fc 01       	movw	r30, r24
    11c2:	eb 50       	subi	r30, 0x0B	; 11
    11c4:	f9 4f       	sbci	r31, 0xF9	; 249
    11c6:	30 81       	ld	r19, Z
    11c8:	fc 01       	movw	r30, r24
    11ca:	e9 58       	subi	r30, 0x89	; 137
    11cc:	fe 4f       	sbci	r31, 0xFE	; 254
    11ce:	30 83       	st	Z, r19
    11d0:	2f 5f       	subi	r18, 0xFF	; 255
    11d2:	82 2f       	mov	r24, r18
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	e4 ef       	ldi	r30, 0xF4	; 244
    11d8:	f6 e0       	ldi	r31, 0x06	; 6
    11da:	01 90       	ld	r0, Z+
    11dc:	00 20       	and	r0, r0
    11de:	e9 f7       	brne	.-6      	; 0x11da <NRF24L01_Receive+0x2cc>
    11e0:	31 97       	sbiw	r30, 0x01	; 1
    11e2:	e4 5f       	subi	r30, 0xF4	; 244
    11e4:	f6 40       	sbci	r31, 0x06	; 6
    11e6:	31 97       	sbiw	r30, 0x01	; 1
    11e8:	8e 17       	cp	r24, r30
    11ea:	9f 07       	cpc	r25, r31
    11ec:	38 f3       	brcs	.-50     	; 0x11bc <NRF24L01_Receive+0x2ae>
    11ee:	10 92 f3 06 	sts	0x06F3, r1	; 0x8006f3 <rx_flag>
    11f2:	df 91       	pop	r29
    11f4:	cf 91       	pop	r28
    11f6:	08 95       	ret

000011f8 <NRF24_FlushRX>:
    11f8:	85 b1       	in	r24, 0x05	; 5
    11fa:	8b 7f       	andi	r24, 0xFB	; 251
    11fc:	85 b9       	out	0x05, r24	; 5
    11fe:	82 ee       	ldi	r24, 0xE2	; 226
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    1206:	85 e0       	ldi	r24, 0x05	; 5
    1208:	8a 95       	dec	r24
    120a:	f1 f7       	brne	.-4      	; 0x1208 <NRF24_FlushRX+0x10>
    120c:	00 00       	nop
    120e:	85 b1       	in	r24, 0x05	; 5
    1210:	84 60       	ori	r24, 0x04	; 4
    1212:	85 b9       	out	0x05, r24	; 5
    1214:	08 95       	ret

00001216 <NRF24_FlushTX>:
    1216:	85 b1       	in	r24, 0x05	; 5
    1218:	8b 7f       	andi	r24, 0xFB	; 251
    121a:	85 b9       	out	0x05, r24	; 5
    121c:	81 ee       	ldi	r24, 0xE1	; 225
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    1224:	85 e0       	ldi	r24, 0x05	; 5
    1226:	8a 95       	dec	r24
    1228:	f1 f7       	brne	.-4      	; 0x1226 <NRF24_FlushTX+0x10>
    122a:	00 00       	nop
    122c:	85 b1       	in	r24, 0x05	; 5
    122e:	84 60       	ori	r24, 0x04	; 4
    1230:	85 b9       	out	0x05, r24	; 5
    1232:	08 95       	ret

00001234 <NRF24_ToggleFeatures>:
    1234:	85 b1       	in	r24, 0x05	; 5
    1236:	8b 7f       	andi	r24, 0xFB	; 251
    1238:	85 b9       	out	0x05, r24	; 5
    123a:	80 e5       	ldi	r24, 0x50	; 80
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    1242:	85 e0       	ldi	r24, 0x05	; 5
    1244:	8a 95       	dec	r24
    1246:	f1 f7       	brne	.-4      	; 0x1244 <NRF24_ToggleFeatures+0x10>
    1248:	00 00       	nop
    124a:	83 e7       	ldi	r24, 0x73	; 115
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    1252:	85 b1       	in	r24, 0x05	; 5
    1254:	84 60       	ori	r24, 0x04	; 4
    1256:	85 b9       	out	0x05, r24	; 5
    1258:	08 95       	ret

0000125a <NRF24_Read_Buf>:
    125a:	ef 92       	push	r14
    125c:	ff 92       	push	r15
    125e:	0f 93       	push	r16
    1260:	1f 93       	push	r17
    1262:	cf 93       	push	r28
    1264:	df 93       	push	r29
    1266:	8b 01       	movw	r16, r22
    1268:	c4 2f       	mov	r28, r20
    126a:	95 b1       	in	r25, 0x05	; 5
    126c:	9b 7f       	andi	r25, 0xFB	; 251
    126e:	95 b9       	out	0x05, r25	; 5
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    1276:	0c c0       	rjmp	.+24     	; 0x1290 <NRF24_Read_Buf+0x36>
    1278:	78 01       	movw	r14, r16
    127a:	8f ef       	ldi	r24, 0xFF	; 255
    127c:	e8 1a       	sub	r14, r24
    127e:	f8 0a       	sbc	r15, r24
    1280:	8f ef       	ldi	r24, 0xFF	; 255
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    1288:	f8 01       	movw	r30, r16
    128a:	80 83       	st	Z, r24
    128c:	cd 2f       	mov	r28, r29
    128e:	87 01       	movw	r16, r14
    1290:	df ef       	ldi	r29, 0xFF	; 255
    1292:	dc 0f       	add	r29, r28
    1294:	c1 11       	cpse	r28, r1
    1296:	f0 cf       	rjmp	.-32     	; 0x1278 <NRF24_Read_Buf+0x1e>
    1298:	85 b1       	in	r24, 0x05	; 5
    129a:	84 60       	ori	r24, 0x04	; 4
    129c:	85 b9       	out	0x05, r24	; 5
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	1f 91       	pop	r17
    12a4:	0f 91       	pop	r16
    12a6:	ff 90       	pop	r15
    12a8:	ef 90       	pop	r14
    12aa:	08 95       	ret

000012ac <NRF24_Write_Buf>:
    12ac:	ef 92       	push	r14
    12ae:	ff 92       	push	r15
    12b0:	0f 93       	push	r16
    12b2:	1f 93       	push	r17
    12b4:	cf 93       	push	r28
    12b6:	df 93       	push	r29
    12b8:	8b 01       	movw	r16, r22
    12ba:	c4 2f       	mov	r28, r20
    12bc:	80 62       	ori	r24, 0x20	; 32
    12be:	95 b1       	in	r25, 0x05	; 5
    12c0:	9b 7f       	andi	r25, 0xFB	; 251
    12c2:	95 b9       	out	0x05, r25	; 5
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    12ca:	85 e0       	ldi	r24, 0x05	; 5
    12cc:	8a 95       	dec	r24
    12ce:	f1 f7       	brne	.-4      	; 0x12cc <NRF24_Write_Buf+0x20>
    12d0:	00 00       	nop
    12d2:	0b c0       	rjmp	.+22     	; 0x12ea <NRF24_Write_Buf+0x3e>
    12d4:	78 01       	movw	r14, r16
    12d6:	ef ef       	ldi	r30, 0xFF	; 255
    12d8:	ee 1a       	sub	r14, r30
    12da:	fe 0a       	sbc	r15, r30
    12dc:	f8 01       	movw	r30, r16
    12de:	80 81       	ld	r24, Z
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
    12e6:	cd 2f       	mov	r28, r29
    12e8:	87 01       	movw	r16, r14
    12ea:	df ef       	ldi	r29, 0xFF	; 255
    12ec:	dc 0f       	add	r29, r28
    12ee:	c1 11       	cpse	r28, r1
    12f0:	f1 cf       	rjmp	.-30     	; 0x12d4 <NRF24_Write_Buf+0x28>
    12f2:	85 b1       	in	r24, 0x05	; 5
    12f4:	84 60       	ori	r24, 0x04	; 4
    12f6:	85 b9       	out	0x05, r24	; 5
    12f8:	df 91       	pop	r29
    12fa:	cf 91       	pop	r28
    12fc:	1f 91       	pop	r17
    12fe:	0f 91       	pop	r16
    1300:	ff 90       	pop	r15
    1302:	ef 90       	pop	r14
    1304:	08 95       	ret

00001306 <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
    1306:	cf 93       	push	r28
    1308:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
    130a:	80 62       	ori	r24, 0x20	; 32
	LOW_CSN;
    130c:	95 b1       	in	r25, 0x05	; 5
    130e:	9b 7f       	andi	r25, 0xFB	; 251
    1310:	95 b9       	out	0x05, r25	; 5
	spi_send_recv(reg);
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
	spi_send_recv(data_out);
    1318:	8c 2f       	mov	r24, r28
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
	HIGH_CSN;
    1320:	85 b1       	in	r24, 0x05	; 5
    1322:	84 60       	ori	r24, 0x04	; 4
    1324:	85 b9       	out	0x05, r24	; 5
}
    1326:	cf 91       	pop	r28
    1328:	08 95       	ret

0000132a <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
    132a:	cf 93       	push	r28
    132c:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
    132e:	85 b1       	in	r24, 0x05	; 5
    1330:	8b 7f       	andi	r24, 0xFB	; 251
    1332:	85 b9       	out	0x05, r24	; 5
	data_in = spi_send_recv(reg);
    1334:	8c 2f       	mov	r24, r28
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
	if(reg != STATUS)
    133c:	c7 30       	cpi	r28, 0x07	; 7
    133e:	21 f0       	breq	.+8      	; 0x1348 <nRF_read_register+0x1e>
	{
		data_in = spi_send_recv(NOP);
    1340:	8f ef       	ldi	r24, 0xFF	; 255
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	0e 94 6e 06 	call	0xcdc	; 0xcdc <spi_send_recv>
	}
	HIGH_CSN;
    1348:	95 b1       	in	r25, 0x05	; 5
    134a:	94 60       	ori	r25, 0x04	; 4
    134c:	95 b9       	out	0x05, r25	; 5
	return data_in;
}
    134e:	cf 91       	pop	r28
    1350:	08 95       	ret

00001352 <__vector_1>:
		//memset(RX_BUF, 0, sizeof(int) * strlen(RX_BUF));//î÷èñòêà ìàññèâà
		rx_flag = 0;
	}
}
ISR(INT0_vect)
{
    1352:	1f 92       	push	r1
    1354:	0f 92       	push	r0
    1356:	0f b6       	in	r0, 0x3f	; 63
    1358:	0f 92       	push	r0
    135a:	11 24       	eor	r1, r1
    135c:	2f 93       	push	r18
    135e:	3f 93       	push	r19
    1360:	4f 93       	push	r20
    1362:	5f 93       	push	r21
    1364:	6f 93       	push	r22
    1366:	7f 93       	push	r23
    1368:	8f 93       	push	r24
    136a:	9f 93       	push	r25
    136c:	af 93       	push	r26
    136e:	bf 93       	push	r27
    1370:	ef 93       	push	r30
    1372:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1374:	8f ea       	ldi	r24, 0xAF	; 175
    1376:	94 e0       	ldi	r25, 0x04	; 4
    1378:	01 97       	sbiw	r24, 0x01	; 1
    137a:	f1 f7       	brne	.-4      	; 0x1378 <__vector_1+0x26>
    137c:	00 c0       	rjmp	.+0      	; 0x137e <__vector_1+0x2c>
    137e:	00 00       	nop
	uint8_t status=0x01;
	uint8_t pipe;
	_delay_us(300);
	PORTD |= (1<<LED);
    1380:	8b b1       	in	r24, 0x0b	; 11
    1382:	80 61       	ori	r24, 0x10	; 16
    1384:	8b b9       	out	0x0b, r24	; 11
    1386:	8f ea       	ldi	r24, 0xAF	; 175
    1388:	94 e0       	ldi	r25, 0x04	; 4
    138a:	01 97       	sbiw	r24, 0x01	; 1
    138c:	f1 f7       	brne	.-4      	; 0x138a <__vector_1+0x38>
    138e:	00 c0       	rjmp	.+0      	; 0x1390 <__vector_1+0x3e>
    1390:	00 00       	nop
	_delay_us(300);
	PORTD &= ~(1<<LED);
    1392:	8b b1       	in	r24, 0x0b	; 11
    1394:	8f 7e       	andi	r24, 0xEF	; 239
    1396:	8b b9       	out	0x0b, r24	; 11
	status = nRF_read_register(STATUS);
    1398:	87 e0       	ldi	r24, 0x07	; 7
    139a:	0e 94 95 09 	call	0x132a	; 0x132a <nRF_read_register>
	if(status & 0x40)
    139e:	86 ff       	sbrs	r24, 6
    13a0:	0a c0       	rjmp	.+20     	; 0x13b6 <__vector_1+0x64>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    13a2:	45 e0       	ldi	r20, 0x05	; 5
    13a4:	64 ef       	ldi	r22, 0xF4	; 244
    13a6:	76 e0       	ldi	r23, 0x06	; 6
    13a8:	81 e6       	ldi	r24, 0x61	; 97
    13aa:	0e 94 2d 09 	call	0x125a	; 0x125a <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    13ae:	60 e4       	ldi	r22, 0x40	; 64
    13b0:	87 e0       	ldi	r24, 0x07	; 7
    13b2:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	}
	 rx_flag = 1;
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	80 93 f3 06 	sts	0x06F3, r24	; 0x8006f3 <rx_flag>
}
    13bc:	ff 91       	pop	r31
    13be:	ef 91       	pop	r30
    13c0:	bf 91       	pop	r27
    13c2:	af 91       	pop	r26
    13c4:	9f 91       	pop	r25
    13c6:	8f 91       	pop	r24
    13c8:	7f 91       	pop	r23
    13ca:	6f 91       	pop	r22
    13cc:	5f 91       	pop	r21
    13ce:	4f 91       	pop	r20
    13d0:	3f 91       	pop	r19
    13d2:	2f 91       	pop	r18
    13d4:	0f 90       	pop	r0
    13d6:	0f be       	out	0x3f, r0	; 63
    13d8:	0f 90       	pop	r0
    13da:	1f 90       	pop	r1
    13dc:	18 95       	reti

000013de <NRF24L01_RX_Mode>:
}
//-------------------------------------------------------------
void NRF24L01_RX_Mode(void) // âêëþ÷åíèå ðåæèìà ïðèåìà
{
	uint8_t regval = 0x00;
	regval = nRF_read_register(CONFIG);
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	0e 94 95 09 	call	0x132a	; 0x132a <nRF_read_register>
	//ðàçáóäèì ìîäóëü è ïåðåâåä¸ì åãî â ðåæèì ïðè¸ìíèêà, âêëþ÷èâ áèòû PWR_UP è PRIM_RX
	regval |= (1<<PWR_UP)|(1<<PRIM_RX);
    13e4:	68 2f       	mov	r22, r24
    13e6:	63 60       	ori	r22, 0x03	; 3
	nRF_write_register(CONFIG,regval);
    13e8:	80 e0       	ldi	r24, 0x00	; 0
    13ea:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	HIGH_CE;
    13ee:	85 b1       	in	r24, 0x05	; 5
    13f0:	82 60       	ori	r24, 0x02	; 2
    13f2:	85 b9       	out	0x05, r24	; 5
    13f4:	87 e5       	ldi	r24, 0x57	; 87
    13f6:	92 e0       	ldi	r25, 0x02	; 2
    13f8:	01 97       	sbiw	r24, 0x01	; 1
    13fa:	f1 f7       	brne	.-4      	; 0x13f8 <NRF24L01_RX_Mode+0x1a>
    13fc:	00 c0       	rjmp	.+0      	; 0x13fe <NRF24L01_RX_Mode+0x20>
    13fe:	00 00       	nop
	_delay_us(150); //Çàäåðæêà ìèíèìóì 130 ìêñ
	// Flush buffers
	NRF24_FlushRX();
    1400:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <NRF24_FlushRX>
	NRF24_FlushTX();
    1404:	0e 94 0b 09 	call	0x1216	; 0x1216 <NRF24_FlushTX>
    1408:	08 95       	ret

0000140a <NRF24_ini>:
extern int flag_irq;
volatile uint8_t rx_flag = 0;
//-------------------------------------------------------------
void NRF24_ini(void)
{
	LOW_CE;
    140a:	85 b1       	in	r24, 0x05	; 5
    140c:	8d 7f       	andi	r24, 0xFD	; 253
    140e:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1410:	8f e1       	ldi	r24, 0x1F	; 31
    1412:	9e e4       	ldi	r25, 0x4E	; 78
    1414:	01 97       	sbiw	r24, 0x01	; 1
    1416:	f1 f7       	brne	.-4      	; 0x1414 <NRF24_ini+0xa>
    1418:	00 c0       	rjmp	.+0      	; 0x141a <NRF24_ini+0x10>
    141a:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(CONFIG, 0x0a); // Set PWR_UP bit, enable CRC(1 byte) &Prim_RX:0 (Transmitter)
    141c:	6a e0       	ldi	r22, 0x0A	; 10
    141e:	80 e0       	ldi	r24, 0x00	; 0
    1420:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
    1424:	8f e1       	ldi	r24, 0x1F	; 31
    1426:	9e e4       	ldi	r25, 0x4E	; 78
    1428:	01 97       	sbiw	r24, 0x01	; 1
    142a:	f1 f7       	brne	.-4      	; 0x1428 <NRF24_ini+0x1e>
    142c:	00 c0       	rjmp	.+0      	; 0x142e <NRF24_ini+0x24>
    142e:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(EN_AA, 0x02); // Enable Pipe1
    1430:	62 e0       	ldi	r22, 0x02	; 2
    1432:	81 e0       	ldi	r24, 0x01	; 1
    1434:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	nRF_write_register(EN_RXADDR, 0x02); // Enable Pipe1
    1438:	62 e0       	ldi	r22, 0x02	; 2
    143a:	82 e0       	ldi	r24, 0x02	; 2
    143c:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	nRF_write_register(SETUP_AW, 0x01); // Setup address width=3 bytes
    1440:	61 e0       	ldi	r22, 0x01	; 1
    1442:	83 e0       	ldi	r24, 0x03	; 3
    1444:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	nRF_write_register(SETUP_RETR, 0x5F); // // 1500us, 15 retrans
    1448:	6f e5       	ldi	r22, 0x5F	; 95
    144a:	84 e0       	ldi	r24, 0x04	; 4
    144c:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	NRF24_ToggleFeatures();
    1450:	0e 94 1a 09 	call	0x1234	; 0x1234 <NRF24_ToggleFeatures>
	nRF_write_register(FEATURE, 0);
    1454:	60 e0       	ldi	r22, 0x00	; 0
    1456:	8d e1       	ldi	r24, 0x1D	; 29
    1458:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	nRF_write_register(DYNPD, 0);
    145c:	60 e0       	ldi	r22, 0x00	; 0
    145e:	8c e1       	ldi	r24, 0x1C	; 28
    1460:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	nRF_write_register(STATUS, 0x70);//Reset flags for IRQ
    1464:	60 e7       	ldi	r22, 0x70	; 112
    1466:	87 e0       	ldi	r24, 0x07	; 7
    1468:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	nRF_write_register(RF_CH, 76); // ÷àñòîòà 2476 MHz
    146c:	6c e4       	ldi	r22, 0x4C	; 76
    146e:	85 e0       	ldi	r24, 0x05	; 5
    1470:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	nRF_write_register(RF_SETUP, 0x06); //TX_PWR:0dBm, Datarate:1Mbps
    1474:	66 e0       	ldi	r22, 0x06	; 6
    1476:	86 e0       	ldi	r24, 0x06	; 6
    1478:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	NRF24_Write_Buf(TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);
    147c:	43 e0       	ldi	r20, 0x03	; 3
    147e:	66 e0       	ldi	r22, 0x06	; 6
    1480:	71 e0       	ldi	r23, 0x01	; 1
    1482:	80 e1       	ldi	r24, 0x10	; 16
    1484:	0e 94 56 09 	call	0x12ac	; 0x12ac <NRF24_Write_Buf>
	NRF24_Write_Buf(RX_ADDR_P1, TX_ADDRESS, TX_ADR_WIDTH);
    1488:	43 e0       	ldi	r20, 0x03	; 3
    148a:	66 e0       	ldi	r22, 0x06	; 6
    148c:	71 e0       	ldi	r23, 0x01	; 1
    148e:	8b e0       	ldi	r24, 0x0B	; 11
    1490:	0e 94 56 09 	call	0x12ac	; 0x12ac <NRF24_Write_Buf>
	nRF_write_register(RX_PW_P1, TX_PLOAD_WIDTH); //Number of bytes in RX payload in data pipe 1
    1494:	65 e0       	ldi	r22, 0x05	; 5
    1496:	82 e1       	ldi	r24, 0x12	; 18
    1498:	0e 94 83 09 	call	0x1306	; 0x1306 <nRF_write_register>
	//ïîêà óõîäèì â ðåæèì ïðè¸ìíèêà
	NRF24L01_RX_Mode();
    149c:	0e 94 ef 09 	call	0x13de	; 0x13de <NRF24L01_RX_Mode>
    14a0:	08 95       	ret

000014a2 <I2C_Init>:
 */ 
#include "TWI.h"

void I2C_Init(void)
{
	TWBR=0x48; //ñêîðîñòü ïåðåäà÷è (ïðè 8 ìÃö ïîëó÷àåòñÿ 100 êÃö)
    14a2:	88 e4       	ldi	r24, 0x48	; 72
    14a4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    14a8:	08 95       	ret

000014aa <I2C_StartCondition>:
}
void I2C_StartCondition(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
    14aa:	84 ea       	ldi	r24, 0xA4	; 164
    14ac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR&(1<<TWINT)));//ïîäîæäåì ïîêà óñòàíîâèòñÿ TWIN
    14b0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    14b4:	88 23       	and	r24, r24
    14b6:	e4 f7       	brge	.-8      	; 0x14b0 <I2C_StartCondition+0x6>
}
    14b8:	08 95       	ret

000014ba <I2C_StopCondition>:
void I2C_StopCondition(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
    14ba:	84 e9       	ldi	r24, 0x94	; 148
    14bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    14c0:	08 95       	ret

000014c2 <I2C_SendByte>:
}
void I2C_SendByte(unsigned char c)
{
	TWDR = c;//çàïèøåì áàéò â ðåãèñòð äàííûõ
    14c2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT)|(1<<TWEN);//âêëþ÷èì ïåðåäà÷ó áàéòà
    14c6:	84 e8       	ldi	r24, 0x84	; 132
    14c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ïîäîæäåì ïîêà óñòàíîâèòñÿ TWIN
    14cc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    14d0:	88 23       	and	r24, r24
    14d2:	e4 f7       	brge	.-8      	; 0x14cc <I2C_SendByte+0xa>
}
    14d4:	08 95       	ret

000014d6 <I2C_SendByteByADDR>:
void I2C_SendByteByADDR(unsigned char c,unsigned char addr)
{
    14d6:	cf 93       	push	r28
    14d8:	df 93       	push	r29
    14da:	c8 2f       	mov	r28, r24
    14dc:	d6 2f       	mov	r29, r22
    I2C_StartCondition(); // Îòïðàâèì óñëîâèå START
    14de:	0e 94 55 0a 	call	0x14aa	; 0x14aa <I2C_StartCondition>
	I2C_SendByte(addr); // Îòïðàâèì â øèíó àäðåñ óñòðîéñòâà + áèò ÷òåíèÿ-çàïèñè
    14e2:	8d 2f       	mov	r24, r29
    14e4:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <I2C_SendByte>
	I2C_SendByte(c);// Îòïðàâèì áàéò äàííûõ
    14e8:	8c 2f       	mov	r24, r28
    14ea:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <I2C_SendByte>
	I2C_StopCondition();// Îòïðàâèì óñëîâèå STOP
    14ee:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <I2C_StopCondition>
    14f2:	df 91       	pop	r29
    14f4:	cf 91       	pop	r28
    14f6:	08 95       	ret

000014f8 <USART_Init>:
 */ 
#include "usart.h"

void USART_Init( unsigned int speed)//Èíèöèàëèçàöèÿ ìîäóëÿ USART
{	
  UBRR0H = (unsigned char)(speed>>8);
    14f8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  UBRR0L = (unsigned char)speed;
    14fc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  UCSR0B=(1<<RXEN0)|( 1<<TXEN0); //Âêëþ÷àåì ïðèåì è ïåðåäà÷ó ïî USART
    1500:	e1 ec       	ldi	r30, 0xC1	; 193
    1502:	f0 e0       	ldi	r31, 0x00	; 0
    1504:	88 e1       	ldi	r24, 0x18	; 24
    1506:	80 83       	st	Z, r24
  UCSR0B |= (1<<RXCIE0); //Ðàçðåøàåì ïðåðûâàíèå ïðè ïðèåìå
    1508:	80 81       	ld	r24, Z
    150a:	80 68       	ori	r24, 0x80	; 128
    150c:	80 83       	st	Z, r24
  UCSR0A |= (1<<U2X0); // Äëÿ 8 ìãö, óäâîåíèå ñêîðîñòè
    150e:	e0 ec       	ldi	r30, 0xC0	; 192
    1510:	f0 e0       	ldi	r31, 0x00	; 0
    1512:	80 81       	ld	r24, Z
    1514:	82 60       	ori	r24, 0x02	; 2
    1516:	80 83       	st	Z, r24
  UCSR0C |= (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);// Îáðàùàåìñÿ èìåííî ê ðåãèñòðó UCSRC (URSEL=1),
    1518:	e2 ec       	ldi	r30, 0xC2	; 194
    151a:	f0 e0       	ldi	r31, 0x00	; 0
    151c:	80 81       	ld	r24, Z
    151e:	8e 60       	ori	r24, 0x0E	; 14
    1520:	80 83       	st	Z, r24
    1522:	08 95       	ret

00001524 <USART_Transmit>:
  //àññèíõðîííûé ðåæèì (UMSEL=0), áåç êîíòðîëÿ ÷åòíîñòè (UPM1=0 è UPM0=0),
  //2 ñòîï-áèò (USBS=1), 8-áèò ïîñûëêà (UCSZ1=1 è UCSZ0=1)
  //UCSRC |= (1<<UPM1);//÷åòíîñòü
}
void USART_Transmit( char* data ) //Ôóíêöèÿ îòïðàâêè äàííûõ
{
    1524:	dc 01       	movw	r26, r24
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	0b c0       	rjmp	.+22     	; 0x1540 <USART_Transmit+0x1c>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Îæèäàíèå îïóñòîøåíèÿ áóôåðà ïðèåìà
    152a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    152e:	95 ff       	sbrs	r25, 5
    1530:	fc cf       	rjmp	.-8      	; 0x152a <USART_Transmit+0x6>
	  UDR0 = data[i]; //Íà÷àëî ïåðåäà÷è äàííûõ
    1532:	fd 01       	movw	r30, r26
    1534:	e2 0f       	add	r30, r18
    1536:	f3 1f       	adc	r31, r19
    1538:	90 81       	ld	r25, Z
    153a:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  //UCSRC |= (1<<UPM1);//÷åòíîñòü
}
void USART_Transmit( char* data ) //Ôóíêöèÿ îòïðàâêè äàííûõ
{
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    153e:	8f 5f       	subi	r24, 0xFF	; 255
    1540:	28 2f       	mov	r18, r24
    1542:	30 e0       	ldi	r19, 0x00	; 0
    1544:	fd 01       	movw	r30, r26
    1546:	01 90       	ld	r0, Z+
    1548:	00 20       	and	r0, r0
    154a:	e9 f7       	brne	.-6      	; 0x1546 <USART_Transmit+0x22>
    154c:	31 97       	sbiw	r30, 0x01	; 1
    154e:	ea 1b       	sub	r30, r26
    1550:	fb 0b       	sbc	r31, r27
    1552:	2e 17       	cp	r18, r30
    1554:	3f 07       	cpc	r19, r31
    1556:	48 f3       	brcs	.-46     	; 0x152a <USART_Transmit+0x6>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Îæèäàíèå îïóñòîøåíèÿ áóôåðà ïðèåìà
	  UDR0 = data[i]; //Íà÷àëî ïåðåäà÷è äàííûõ
  }

}
    1558:	08 95       	ret

0000155a <__divsf3>:
    155a:	0e 94 c1 0a 	call	0x1582	; 0x1582 <__divsf3x>
    155e:	0c 94 73 0b 	jmp	0x16e6	; 0x16e6 <__fp_round>
    1562:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__fp_pscB>
    1566:	58 f0       	brcs	.+22     	; 0x157e <__divsf3+0x24>
    1568:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__fp_pscA>
    156c:	40 f0       	brcs	.+16     	; 0x157e <__divsf3+0x24>
    156e:	29 f4       	brne	.+10     	; 0x157a <__divsf3+0x20>
    1570:	5f 3f       	cpi	r21, 0xFF	; 255
    1572:	29 f0       	breq	.+10     	; 0x157e <__divsf3+0x24>
    1574:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_inf>
    1578:	51 11       	cpse	r21, r1
    157a:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__fp_szero>
    157e:	0c 94 62 0b 	jmp	0x16c4	; 0x16c4 <__fp_nan>

00001582 <__divsf3x>:
    1582:	0e 94 84 0b 	call	0x1708	; 0x1708 <__fp_split3>
    1586:	68 f3       	brcs	.-38     	; 0x1562 <__divsf3+0x8>

00001588 <__divsf3_pse>:
    1588:	99 23       	and	r25, r25
    158a:	b1 f3       	breq	.-20     	; 0x1578 <__divsf3+0x1e>
    158c:	55 23       	and	r21, r21
    158e:	91 f3       	breq	.-28     	; 0x1574 <__divsf3+0x1a>
    1590:	95 1b       	sub	r25, r21
    1592:	55 0b       	sbc	r21, r21
    1594:	bb 27       	eor	r27, r27
    1596:	aa 27       	eor	r26, r26
    1598:	62 17       	cp	r22, r18
    159a:	73 07       	cpc	r23, r19
    159c:	84 07       	cpc	r24, r20
    159e:	38 f0       	brcs	.+14     	; 0x15ae <__divsf3_pse+0x26>
    15a0:	9f 5f       	subi	r25, 0xFF	; 255
    15a2:	5f 4f       	sbci	r21, 0xFF	; 255
    15a4:	22 0f       	add	r18, r18
    15a6:	33 1f       	adc	r19, r19
    15a8:	44 1f       	adc	r20, r20
    15aa:	aa 1f       	adc	r26, r26
    15ac:	a9 f3       	breq	.-22     	; 0x1598 <__divsf3_pse+0x10>
    15ae:	35 d0       	rcall	.+106    	; 0x161a <__divsf3_pse+0x92>
    15b0:	0e 2e       	mov	r0, r30
    15b2:	3a f0       	brmi	.+14     	; 0x15c2 <__divsf3_pse+0x3a>
    15b4:	e0 e8       	ldi	r30, 0x80	; 128
    15b6:	32 d0       	rcall	.+100    	; 0x161c <__divsf3_pse+0x94>
    15b8:	91 50       	subi	r25, 0x01	; 1
    15ba:	50 40       	sbci	r21, 0x00	; 0
    15bc:	e6 95       	lsr	r30
    15be:	00 1c       	adc	r0, r0
    15c0:	ca f7       	brpl	.-14     	; 0x15b4 <__divsf3_pse+0x2c>
    15c2:	2b d0       	rcall	.+86     	; 0x161a <__divsf3_pse+0x92>
    15c4:	fe 2f       	mov	r31, r30
    15c6:	29 d0       	rcall	.+82     	; 0x161a <__divsf3_pse+0x92>
    15c8:	66 0f       	add	r22, r22
    15ca:	77 1f       	adc	r23, r23
    15cc:	88 1f       	adc	r24, r24
    15ce:	bb 1f       	adc	r27, r27
    15d0:	26 17       	cp	r18, r22
    15d2:	37 07       	cpc	r19, r23
    15d4:	48 07       	cpc	r20, r24
    15d6:	ab 07       	cpc	r26, r27
    15d8:	b0 e8       	ldi	r27, 0x80	; 128
    15da:	09 f0       	breq	.+2      	; 0x15de <__divsf3_pse+0x56>
    15dc:	bb 0b       	sbc	r27, r27
    15de:	80 2d       	mov	r24, r0
    15e0:	bf 01       	movw	r22, r30
    15e2:	ff 27       	eor	r31, r31
    15e4:	93 58       	subi	r25, 0x83	; 131
    15e6:	5f 4f       	sbci	r21, 0xFF	; 255
    15e8:	3a f0       	brmi	.+14     	; 0x15f8 <__divsf3_pse+0x70>
    15ea:	9e 3f       	cpi	r25, 0xFE	; 254
    15ec:	51 05       	cpc	r21, r1
    15ee:	78 f0       	brcs	.+30     	; 0x160e <__divsf3_pse+0x86>
    15f0:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_inf>
    15f4:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__fp_szero>
    15f8:	5f 3f       	cpi	r21, 0xFF	; 255
    15fa:	e4 f3       	brlt	.-8      	; 0x15f4 <__divsf3_pse+0x6c>
    15fc:	98 3e       	cpi	r25, 0xE8	; 232
    15fe:	d4 f3       	brlt	.-12     	; 0x15f4 <__divsf3_pse+0x6c>
    1600:	86 95       	lsr	r24
    1602:	77 95       	ror	r23
    1604:	67 95       	ror	r22
    1606:	b7 95       	ror	r27
    1608:	f7 95       	ror	r31
    160a:	9f 5f       	subi	r25, 0xFF	; 255
    160c:	c9 f7       	brne	.-14     	; 0x1600 <__divsf3_pse+0x78>
    160e:	88 0f       	add	r24, r24
    1610:	91 1d       	adc	r25, r1
    1612:	96 95       	lsr	r25
    1614:	87 95       	ror	r24
    1616:	97 f9       	bld	r25, 7
    1618:	08 95       	ret
    161a:	e1 e0       	ldi	r30, 0x01	; 1
    161c:	66 0f       	add	r22, r22
    161e:	77 1f       	adc	r23, r23
    1620:	88 1f       	adc	r24, r24
    1622:	bb 1f       	adc	r27, r27
    1624:	62 17       	cp	r22, r18
    1626:	73 07       	cpc	r23, r19
    1628:	84 07       	cpc	r24, r20
    162a:	ba 07       	cpc	r27, r26
    162c:	20 f0       	brcs	.+8      	; 0x1636 <__divsf3_pse+0xae>
    162e:	62 1b       	sub	r22, r18
    1630:	73 0b       	sbc	r23, r19
    1632:	84 0b       	sbc	r24, r20
    1634:	ba 0b       	sbc	r27, r26
    1636:	ee 1f       	adc	r30, r30
    1638:	88 f7       	brcc	.-30     	; 0x161c <__divsf3_pse+0x94>
    163a:	e0 95       	com	r30
    163c:	08 95       	ret

0000163e <__floatunsisf>:
    163e:	e8 94       	clt
    1640:	09 c0       	rjmp	.+18     	; 0x1654 <__floatsisf+0x12>

00001642 <__floatsisf>:
    1642:	97 fb       	bst	r25, 7
    1644:	3e f4       	brtc	.+14     	; 0x1654 <__floatsisf+0x12>
    1646:	90 95       	com	r25
    1648:	80 95       	com	r24
    164a:	70 95       	com	r23
    164c:	61 95       	neg	r22
    164e:	7f 4f       	sbci	r23, 0xFF	; 255
    1650:	8f 4f       	sbci	r24, 0xFF	; 255
    1652:	9f 4f       	sbci	r25, 0xFF	; 255
    1654:	99 23       	and	r25, r25
    1656:	a9 f0       	breq	.+42     	; 0x1682 <__floatsisf+0x40>
    1658:	f9 2f       	mov	r31, r25
    165a:	96 e9       	ldi	r25, 0x96	; 150
    165c:	bb 27       	eor	r27, r27
    165e:	93 95       	inc	r25
    1660:	f6 95       	lsr	r31
    1662:	87 95       	ror	r24
    1664:	77 95       	ror	r23
    1666:	67 95       	ror	r22
    1668:	b7 95       	ror	r27
    166a:	f1 11       	cpse	r31, r1
    166c:	f8 cf       	rjmp	.-16     	; 0x165e <__floatsisf+0x1c>
    166e:	fa f4       	brpl	.+62     	; 0x16ae <__floatsisf+0x6c>
    1670:	bb 0f       	add	r27, r27
    1672:	11 f4       	brne	.+4      	; 0x1678 <__floatsisf+0x36>
    1674:	60 ff       	sbrs	r22, 0
    1676:	1b c0       	rjmp	.+54     	; 0x16ae <__floatsisf+0x6c>
    1678:	6f 5f       	subi	r22, 0xFF	; 255
    167a:	7f 4f       	sbci	r23, 0xFF	; 255
    167c:	8f 4f       	sbci	r24, 0xFF	; 255
    167e:	9f 4f       	sbci	r25, 0xFF	; 255
    1680:	16 c0       	rjmp	.+44     	; 0x16ae <__floatsisf+0x6c>
    1682:	88 23       	and	r24, r24
    1684:	11 f0       	breq	.+4      	; 0x168a <__floatsisf+0x48>
    1686:	96 e9       	ldi	r25, 0x96	; 150
    1688:	11 c0       	rjmp	.+34     	; 0x16ac <__floatsisf+0x6a>
    168a:	77 23       	and	r23, r23
    168c:	21 f0       	breq	.+8      	; 0x1696 <__floatsisf+0x54>
    168e:	9e e8       	ldi	r25, 0x8E	; 142
    1690:	87 2f       	mov	r24, r23
    1692:	76 2f       	mov	r23, r22
    1694:	05 c0       	rjmp	.+10     	; 0x16a0 <__floatsisf+0x5e>
    1696:	66 23       	and	r22, r22
    1698:	71 f0       	breq	.+28     	; 0x16b6 <__floatsisf+0x74>
    169a:	96 e8       	ldi	r25, 0x86	; 134
    169c:	86 2f       	mov	r24, r22
    169e:	70 e0       	ldi	r23, 0x00	; 0
    16a0:	60 e0       	ldi	r22, 0x00	; 0
    16a2:	2a f0       	brmi	.+10     	; 0x16ae <__floatsisf+0x6c>
    16a4:	9a 95       	dec	r25
    16a6:	66 0f       	add	r22, r22
    16a8:	77 1f       	adc	r23, r23
    16aa:	88 1f       	adc	r24, r24
    16ac:	da f7       	brpl	.-10     	; 0x16a4 <__floatsisf+0x62>
    16ae:	88 0f       	add	r24, r24
    16b0:	96 95       	lsr	r25
    16b2:	87 95       	ror	r24
    16b4:	97 f9       	bld	r25, 7
    16b6:	08 95       	ret

000016b8 <__fp_inf>:
    16b8:	97 f9       	bld	r25, 7
    16ba:	9f 67       	ori	r25, 0x7F	; 127
    16bc:	80 e8       	ldi	r24, 0x80	; 128
    16be:	70 e0       	ldi	r23, 0x00	; 0
    16c0:	60 e0       	ldi	r22, 0x00	; 0
    16c2:	08 95       	ret

000016c4 <__fp_nan>:
    16c4:	9f ef       	ldi	r25, 0xFF	; 255
    16c6:	80 ec       	ldi	r24, 0xC0	; 192
    16c8:	08 95       	ret

000016ca <__fp_pscA>:
    16ca:	00 24       	eor	r0, r0
    16cc:	0a 94       	dec	r0
    16ce:	16 16       	cp	r1, r22
    16d0:	17 06       	cpc	r1, r23
    16d2:	18 06       	cpc	r1, r24
    16d4:	09 06       	cpc	r0, r25
    16d6:	08 95       	ret

000016d8 <__fp_pscB>:
    16d8:	00 24       	eor	r0, r0
    16da:	0a 94       	dec	r0
    16dc:	12 16       	cp	r1, r18
    16de:	13 06       	cpc	r1, r19
    16e0:	14 06       	cpc	r1, r20
    16e2:	05 06       	cpc	r0, r21
    16e4:	08 95       	ret

000016e6 <__fp_round>:
    16e6:	09 2e       	mov	r0, r25
    16e8:	03 94       	inc	r0
    16ea:	00 0c       	add	r0, r0
    16ec:	11 f4       	brne	.+4      	; 0x16f2 <__fp_round+0xc>
    16ee:	88 23       	and	r24, r24
    16f0:	52 f0       	brmi	.+20     	; 0x1706 <__fp_round+0x20>
    16f2:	bb 0f       	add	r27, r27
    16f4:	40 f4       	brcc	.+16     	; 0x1706 <__fp_round+0x20>
    16f6:	bf 2b       	or	r27, r31
    16f8:	11 f4       	brne	.+4      	; 0x16fe <__fp_round+0x18>
    16fa:	60 ff       	sbrs	r22, 0
    16fc:	04 c0       	rjmp	.+8      	; 0x1706 <__fp_round+0x20>
    16fe:	6f 5f       	subi	r22, 0xFF	; 255
    1700:	7f 4f       	sbci	r23, 0xFF	; 255
    1702:	8f 4f       	sbci	r24, 0xFF	; 255
    1704:	9f 4f       	sbci	r25, 0xFF	; 255
    1706:	08 95       	ret

00001708 <__fp_split3>:
    1708:	57 fd       	sbrc	r21, 7
    170a:	90 58       	subi	r25, 0x80	; 128
    170c:	44 0f       	add	r20, r20
    170e:	55 1f       	adc	r21, r21
    1710:	59 f0       	breq	.+22     	; 0x1728 <__fp_splitA+0x10>
    1712:	5f 3f       	cpi	r21, 0xFF	; 255
    1714:	71 f0       	breq	.+28     	; 0x1732 <__fp_splitA+0x1a>
    1716:	47 95       	ror	r20

00001718 <__fp_splitA>:
    1718:	88 0f       	add	r24, r24
    171a:	97 fb       	bst	r25, 7
    171c:	99 1f       	adc	r25, r25
    171e:	61 f0       	breq	.+24     	; 0x1738 <__fp_splitA+0x20>
    1720:	9f 3f       	cpi	r25, 0xFF	; 255
    1722:	79 f0       	breq	.+30     	; 0x1742 <__fp_splitA+0x2a>
    1724:	87 95       	ror	r24
    1726:	08 95       	ret
    1728:	12 16       	cp	r1, r18
    172a:	13 06       	cpc	r1, r19
    172c:	14 06       	cpc	r1, r20
    172e:	55 1f       	adc	r21, r21
    1730:	f2 cf       	rjmp	.-28     	; 0x1716 <__fp_split3+0xe>
    1732:	46 95       	lsr	r20
    1734:	f1 df       	rcall	.-30     	; 0x1718 <__fp_splitA>
    1736:	08 c0       	rjmp	.+16     	; 0x1748 <__fp_splitA+0x30>
    1738:	16 16       	cp	r1, r22
    173a:	17 06       	cpc	r1, r23
    173c:	18 06       	cpc	r1, r24
    173e:	99 1f       	adc	r25, r25
    1740:	f1 cf       	rjmp	.-30     	; 0x1724 <__fp_splitA+0xc>
    1742:	86 95       	lsr	r24
    1744:	71 05       	cpc	r23, r1
    1746:	61 05       	cpc	r22, r1
    1748:	08 94       	sec
    174a:	08 95       	ret

0000174c <__fp_zero>:
    174c:	e8 94       	clt

0000174e <__fp_szero>:
    174e:	bb 27       	eor	r27, r27
    1750:	66 27       	eor	r22, r22
    1752:	77 27       	eor	r23, r23
    1754:	cb 01       	movw	r24, r22
    1756:	97 f9       	bld	r25, 7
    1758:	08 95       	ret

0000175a <__mulsf3>:
    175a:	0e 94 c0 0b 	call	0x1780	; 0x1780 <__mulsf3x>
    175e:	0c 94 73 0b 	jmp	0x16e6	; 0x16e6 <__fp_round>
    1762:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__fp_pscA>
    1766:	38 f0       	brcs	.+14     	; 0x1776 <__mulsf3+0x1c>
    1768:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__fp_pscB>
    176c:	20 f0       	brcs	.+8      	; 0x1776 <__mulsf3+0x1c>
    176e:	95 23       	and	r25, r21
    1770:	11 f0       	breq	.+4      	; 0x1776 <__mulsf3+0x1c>
    1772:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_inf>
    1776:	0c 94 62 0b 	jmp	0x16c4	; 0x16c4 <__fp_nan>
    177a:	11 24       	eor	r1, r1
    177c:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__fp_szero>

00001780 <__mulsf3x>:
    1780:	0e 94 84 0b 	call	0x1708	; 0x1708 <__fp_split3>
    1784:	70 f3       	brcs	.-36     	; 0x1762 <__mulsf3+0x8>

00001786 <__mulsf3_pse>:
    1786:	95 9f       	mul	r25, r21
    1788:	c1 f3       	breq	.-16     	; 0x177a <__mulsf3+0x20>
    178a:	95 0f       	add	r25, r21
    178c:	50 e0       	ldi	r21, 0x00	; 0
    178e:	55 1f       	adc	r21, r21
    1790:	62 9f       	mul	r22, r18
    1792:	f0 01       	movw	r30, r0
    1794:	72 9f       	mul	r23, r18
    1796:	bb 27       	eor	r27, r27
    1798:	f0 0d       	add	r31, r0
    179a:	b1 1d       	adc	r27, r1
    179c:	63 9f       	mul	r22, r19
    179e:	aa 27       	eor	r26, r26
    17a0:	f0 0d       	add	r31, r0
    17a2:	b1 1d       	adc	r27, r1
    17a4:	aa 1f       	adc	r26, r26
    17a6:	64 9f       	mul	r22, r20
    17a8:	66 27       	eor	r22, r22
    17aa:	b0 0d       	add	r27, r0
    17ac:	a1 1d       	adc	r26, r1
    17ae:	66 1f       	adc	r22, r22
    17b0:	82 9f       	mul	r24, r18
    17b2:	22 27       	eor	r18, r18
    17b4:	b0 0d       	add	r27, r0
    17b6:	a1 1d       	adc	r26, r1
    17b8:	62 1f       	adc	r22, r18
    17ba:	73 9f       	mul	r23, r19
    17bc:	b0 0d       	add	r27, r0
    17be:	a1 1d       	adc	r26, r1
    17c0:	62 1f       	adc	r22, r18
    17c2:	83 9f       	mul	r24, r19
    17c4:	a0 0d       	add	r26, r0
    17c6:	61 1d       	adc	r22, r1
    17c8:	22 1f       	adc	r18, r18
    17ca:	74 9f       	mul	r23, r20
    17cc:	33 27       	eor	r19, r19
    17ce:	a0 0d       	add	r26, r0
    17d0:	61 1d       	adc	r22, r1
    17d2:	23 1f       	adc	r18, r19
    17d4:	84 9f       	mul	r24, r20
    17d6:	60 0d       	add	r22, r0
    17d8:	21 1d       	adc	r18, r1
    17da:	82 2f       	mov	r24, r18
    17dc:	76 2f       	mov	r23, r22
    17de:	6a 2f       	mov	r22, r26
    17e0:	11 24       	eor	r1, r1
    17e2:	9f 57       	subi	r25, 0x7F	; 127
    17e4:	50 40       	sbci	r21, 0x00	; 0
    17e6:	9a f0       	brmi	.+38     	; 0x180e <__mulsf3_pse+0x88>
    17e8:	f1 f0       	breq	.+60     	; 0x1826 <__mulsf3_pse+0xa0>
    17ea:	88 23       	and	r24, r24
    17ec:	4a f0       	brmi	.+18     	; 0x1800 <__mulsf3_pse+0x7a>
    17ee:	ee 0f       	add	r30, r30
    17f0:	ff 1f       	adc	r31, r31
    17f2:	bb 1f       	adc	r27, r27
    17f4:	66 1f       	adc	r22, r22
    17f6:	77 1f       	adc	r23, r23
    17f8:	88 1f       	adc	r24, r24
    17fa:	91 50       	subi	r25, 0x01	; 1
    17fc:	50 40       	sbci	r21, 0x00	; 0
    17fe:	a9 f7       	brne	.-22     	; 0x17ea <__mulsf3_pse+0x64>
    1800:	9e 3f       	cpi	r25, 0xFE	; 254
    1802:	51 05       	cpc	r21, r1
    1804:	80 f0       	brcs	.+32     	; 0x1826 <__mulsf3_pse+0xa0>
    1806:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__fp_inf>
    180a:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__fp_szero>
    180e:	5f 3f       	cpi	r21, 0xFF	; 255
    1810:	e4 f3       	brlt	.-8      	; 0x180a <__mulsf3_pse+0x84>
    1812:	98 3e       	cpi	r25, 0xE8	; 232
    1814:	d4 f3       	brlt	.-12     	; 0x180a <__mulsf3_pse+0x84>
    1816:	86 95       	lsr	r24
    1818:	77 95       	ror	r23
    181a:	67 95       	ror	r22
    181c:	b7 95       	ror	r27
    181e:	f7 95       	ror	r31
    1820:	e7 95       	ror	r30
    1822:	9f 5f       	subi	r25, 0xFF	; 255
    1824:	c1 f7       	brne	.-16     	; 0x1816 <__mulsf3_pse+0x90>
    1826:	fe 2b       	or	r31, r30
    1828:	88 0f       	add	r24, r24
    182a:	91 1d       	adc	r25, r1
    182c:	96 95       	lsr	r25
    182e:	87 95       	ror	r24
    1830:	97 f9       	bld	r25, 7
    1832:	08 95       	ret

00001834 <vfprintf>:
    1834:	a0 e1       	ldi	r26, 0x10	; 16
    1836:	b0 e0       	ldi	r27, 0x00	; 0
    1838:	e0 e2       	ldi	r30, 0x20	; 32
    183a:	fc e0       	ldi	r31, 0x0C	; 12
    183c:	0c 94 97 0f 	jmp	0x1f2e	; 0x1f2e <__prologue_saves__>
    1840:	7c 01       	movw	r14, r24
    1842:	1b 01       	movw	r2, r22
    1844:	6a 01       	movw	r12, r20
    1846:	fc 01       	movw	r30, r24
    1848:	17 82       	std	Z+7, r1	; 0x07
    184a:	16 82       	std	Z+6, r1	; 0x06
    184c:	83 81       	ldd	r24, Z+3	; 0x03
    184e:	81 ff       	sbrs	r24, 1
    1850:	44 c3       	rjmp	.+1672   	; 0x1eda <vfprintf+0x6a6>
    1852:	9e 01       	movw	r18, r28
    1854:	2f 5f       	subi	r18, 0xFF	; 255
    1856:	3f 4f       	sbci	r19, 0xFF	; 255
    1858:	39 01       	movw	r6, r18
    185a:	f7 01       	movw	r30, r14
    185c:	93 81       	ldd	r25, Z+3	; 0x03
    185e:	f1 01       	movw	r30, r2
    1860:	93 fd       	sbrc	r25, 3
    1862:	85 91       	lpm	r24, Z+
    1864:	93 ff       	sbrs	r25, 3
    1866:	81 91       	ld	r24, Z+
    1868:	1f 01       	movw	r2, r30
    186a:	88 23       	and	r24, r24
    186c:	09 f4       	brne	.+2      	; 0x1870 <vfprintf+0x3c>
    186e:	31 c3       	rjmp	.+1634   	; 0x1ed2 <vfprintf+0x69e>
    1870:	85 32       	cpi	r24, 0x25	; 37
    1872:	39 f4       	brne	.+14     	; 0x1882 <vfprintf+0x4e>
    1874:	93 fd       	sbrc	r25, 3
    1876:	85 91       	lpm	r24, Z+
    1878:	93 ff       	sbrs	r25, 3
    187a:	81 91       	ld	r24, Z+
    187c:	1f 01       	movw	r2, r30
    187e:	85 32       	cpi	r24, 0x25	; 37
    1880:	39 f4       	brne	.+14     	; 0x1890 <vfprintf+0x5c>
    1882:	b7 01       	movw	r22, r14
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    188a:	56 01       	movw	r10, r12
    188c:	65 01       	movw	r12, r10
    188e:	e5 cf       	rjmp	.-54     	; 0x185a <vfprintf+0x26>
    1890:	10 e0       	ldi	r17, 0x00	; 0
    1892:	51 2c       	mov	r5, r1
    1894:	91 2c       	mov	r9, r1
    1896:	ff e1       	ldi	r31, 0x1F	; 31
    1898:	f9 15       	cp	r31, r9
    189a:	d8 f0       	brcs	.+54     	; 0x18d2 <vfprintf+0x9e>
    189c:	8b 32       	cpi	r24, 0x2B	; 43
    189e:	79 f0       	breq	.+30     	; 0x18be <vfprintf+0x8a>
    18a0:	38 f4       	brcc	.+14     	; 0x18b0 <vfprintf+0x7c>
    18a2:	80 32       	cpi	r24, 0x20	; 32
    18a4:	79 f0       	breq	.+30     	; 0x18c4 <vfprintf+0x90>
    18a6:	83 32       	cpi	r24, 0x23	; 35
    18a8:	a1 f4       	brne	.+40     	; 0x18d2 <vfprintf+0x9e>
    18aa:	f9 2d       	mov	r31, r9
    18ac:	f0 61       	ori	r31, 0x10	; 16
    18ae:	2e c0       	rjmp	.+92     	; 0x190c <vfprintf+0xd8>
    18b0:	8d 32       	cpi	r24, 0x2D	; 45
    18b2:	61 f0       	breq	.+24     	; 0x18cc <vfprintf+0x98>
    18b4:	80 33       	cpi	r24, 0x30	; 48
    18b6:	69 f4       	brne	.+26     	; 0x18d2 <vfprintf+0x9e>
    18b8:	29 2d       	mov	r18, r9
    18ba:	21 60       	ori	r18, 0x01	; 1
    18bc:	2d c0       	rjmp	.+90     	; 0x1918 <vfprintf+0xe4>
    18be:	39 2d       	mov	r19, r9
    18c0:	32 60       	ori	r19, 0x02	; 2
    18c2:	93 2e       	mov	r9, r19
    18c4:	89 2d       	mov	r24, r9
    18c6:	84 60       	ori	r24, 0x04	; 4
    18c8:	98 2e       	mov	r9, r24
    18ca:	2a c0       	rjmp	.+84     	; 0x1920 <vfprintf+0xec>
    18cc:	e9 2d       	mov	r30, r9
    18ce:	e8 60       	ori	r30, 0x08	; 8
    18d0:	15 c0       	rjmp	.+42     	; 0x18fc <vfprintf+0xc8>
    18d2:	97 fc       	sbrc	r9, 7
    18d4:	2d c0       	rjmp	.+90     	; 0x1930 <vfprintf+0xfc>
    18d6:	20 ed       	ldi	r18, 0xD0	; 208
    18d8:	28 0f       	add	r18, r24
    18da:	2a 30       	cpi	r18, 0x0A	; 10
    18dc:	88 f4       	brcc	.+34     	; 0x1900 <vfprintf+0xcc>
    18de:	96 fe       	sbrs	r9, 6
    18e0:	06 c0       	rjmp	.+12     	; 0x18ee <vfprintf+0xba>
    18e2:	3a e0       	ldi	r19, 0x0A	; 10
    18e4:	13 9f       	mul	r17, r19
    18e6:	20 0d       	add	r18, r0
    18e8:	11 24       	eor	r1, r1
    18ea:	12 2f       	mov	r17, r18
    18ec:	19 c0       	rjmp	.+50     	; 0x1920 <vfprintf+0xec>
    18ee:	8a e0       	ldi	r24, 0x0A	; 10
    18f0:	58 9e       	mul	r5, r24
    18f2:	20 0d       	add	r18, r0
    18f4:	11 24       	eor	r1, r1
    18f6:	52 2e       	mov	r5, r18
    18f8:	e9 2d       	mov	r30, r9
    18fa:	e0 62       	ori	r30, 0x20	; 32
    18fc:	9e 2e       	mov	r9, r30
    18fe:	10 c0       	rjmp	.+32     	; 0x1920 <vfprintf+0xec>
    1900:	8e 32       	cpi	r24, 0x2E	; 46
    1902:	31 f4       	brne	.+12     	; 0x1910 <vfprintf+0xdc>
    1904:	96 fc       	sbrc	r9, 6
    1906:	e5 c2       	rjmp	.+1482   	; 0x1ed2 <vfprintf+0x69e>
    1908:	f9 2d       	mov	r31, r9
    190a:	f0 64       	ori	r31, 0x40	; 64
    190c:	9f 2e       	mov	r9, r31
    190e:	08 c0       	rjmp	.+16     	; 0x1920 <vfprintf+0xec>
    1910:	8c 36       	cpi	r24, 0x6C	; 108
    1912:	21 f4       	brne	.+8      	; 0x191c <vfprintf+0xe8>
    1914:	29 2d       	mov	r18, r9
    1916:	20 68       	ori	r18, 0x80	; 128
    1918:	92 2e       	mov	r9, r18
    191a:	02 c0       	rjmp	.+4      	; 0x1920 <vfprintf+0xec>
    191c:	88 36       	cpi	r24, 0x68	; 104
    191e:	41 f4       	brne	.+16     	; 0x1930 <vfprintf+0xfc>
    1920:	f1 01       	movw	r30, r2
    1922:	93 fd       	sbrc	r25, 3
    1924:	85 91       	lpm	r24, Z+
    1926:	93 ff       	sbrs	r25, 3
    1928:	81 91       	ld	r24, Z+
    192a:	1f 01       	movw	r2, r30
    192c:	81 11       	cpse	r24, r1
    192e:	b3 cf       	rjmp	.-154    	; 0x1896 <vfprintf+0x62>
    1930:	9b eb       	ldi	r25, 0xBB	; 187
    1932:	98 0f       	add	r25, r24
    1934:	93 30       	cpi	r25, 0x03	; 3
    1936:	20 f4       	brcc	.+8      	; 0x1940 <vfprintf+0x10c>
    1938:	99 2d       	mov	r25, r9
    193a:	90 61       	ori	r25, 0x10	; 16
    193c:	80 5e       	subi	r24, 0xE0	; 224
    193e:	07 c0       	rjmp	.+14     	; 0x194e <vfprintf+0x11a>
    1940:	9b e9       	ldi	r25, 0x9B	; 155
    1942:	98 0f       	add	r25, r24
    1944:	93 30       	cpi	r25, 0x03	; 3
    1946:	08 f0       	brcs	.+2      	; 0x194a <vfprintf+0x116>
    1948:	66 c1       	rjmp	.+716    	; 0x1c16 <vfprintf+0x3e2>
    194a:	99 2d       	mov	r25, r9
    194c:	9f 7e       	andi	r25, 0xEF	; 239
    194e:	96 ff       	sbrs	r25, 6
    1950:	16 e0       	ldi	r17, 0x06	; 6
    1952:	9f 73       	andi	r25, 0x3F	; 63
    1954:	99 2e       	mov	r9, r25
    1956:	85 36       	cpi	r24, 0x65	; 101
    1958:	19 f4       	brne	.+6      	; 0x1960 <vfprintf+0x12c>
    195a:	90 64       	ori	r25, 0x40	; 64
    195c:	99 2e       	mov	r9, r25
    195e:	08 c0       	rjmp	.+16     	; 0x1970 <vfprintf+0x13c>
    1960:	86 36       	cpi	r24, 0x66	; 102
    1962:	21 f4       	brne	.+8      	; 0x196c <vfprintf+0x138>
    1964:	39 2f       	mov	r19, r25
    1966:	30 68       	ori	r19, 0x80	; 128
    1968:	93 2e       	mov	r9, r19
    196a:	02 c0       	rjmp	.+4      	; 0x1970 <vfprintf+0x13c>
    196c:	11 11       	cpse	r17, r1
    196e:	11 50       	subi	r17, 0x01	; 1
    1970:	97 fe       	sbrs	r9, 7
    1972:	07 c0       	rjmp	.+14     	; 0x1982 <vfprintf+0x14e>
    1974:	1c 33       	cpi	r17, 0x3C	; 60
    1976:	50 f4       	brcc	.+20     	; 0x198c <vfprintf+0x158>
    1978:	44 24       	eor	r4, r4
    197a:	43 94       	inc	r4
    197c:	41 0e       	add	r4, r17
    197e:	27 e0       	ldi	r18, 0x07	; 7
    1980:	0b c0       	rjmp	.+22     	; 0x1998 <vfprintf+0x164>
    1982:	18 30       	cpi	r17, 0x08	; 8
    1984:	38 f0       	brcs	.+14     	; 0x1994 <vfprintf+0x160>
    1986:	27 e0       	ldi	r18, 0x07	; 7
    1988:	17 e0       	ldi	r17, 0x07	; 7
    198a:	05 c0       	rjmp	.+10     	; 0x1996 <vfprintf+0x162>
    198c:	27 e0       	ldi	r18, 0x07	; 7
    198e:	9c e3       	ldi	r25, 0x3C	; 60
    1990:	49 2e       	mov	r4, r25
    1992:	02 c0       	rjmp	.+4      	; 0x1998 <vfprintf+0x164>
    1994:	21 2f       	mov	r18, r17
    1996:	41 2c       	mov	r4, r1
    1998:	56 01       	movw	r10, r12
    199a:	84 e0       	ldi	r24, 0x04	; 4
    199c:	a8 0e       	add	r10, r24
    199e:	b1 1c       	adc	r11, r1
    19a0:	f6 01       	movw	r30, r12
    19a2:	60 81       	ld	r22, Z
    19a4:	71 81       	ldd	r23, Z+1	; 0x01
    19a6:	82 81       	ldd	r24, Z+2	; 0x02
    19a8:	93 81       	ldd	r25, Z+3	; 0x03
    19aa:	04 2d       	mov	r16, r4
    19ac:	a3 01       	movw	r20, r6
    19ae:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <__ftoa_engine>
    19b2:	6c 01       	movw	r12, r24
    19b4:	f9 81       	ldd	r31, Y+1	; 0x01
    19b6:	fc 87       	std	Y+12, r31	; 0x0c
    19b8:	f0 ff       	sbrs	r31, 0
    19ba:	02 c0       	rjmp	.+4      	; 0x19c0 <vfprintf+0x18c>
    19bc:	f3 ff       	sbrs	r31, 3
    19be:	06 c0       	rjmp	.+12     	; 0x19cc <vfprintf+0x198>
    19c0:	91 fc       	sbrc	r9, 1
    19c2:	06 c0       	rjmp	.+12     	; 0x19d0 <vfprintf+0x19c>
    19c4:	92 fe       	sbrs	r9, 2
    19c6:	06 c0       	rjmp	.+12     	; 0x19d4 <vfprintf+0x1a0>
    19c8:	00 e2       	ldi	r16, 0x20	; 32
    19ca:	05 c0       	rjmp	.+10     	; 0x19d6 <vfprintf+0x1a2>
    19cc:	0d e2       	ldi	r16, 0x2D	; 45
    19ce:	03 c0       	rjmp	.+6      	; 0x19d6 <vfprintf+0x1a2>
    19d0:	0b e2       	ldi	r16, 0x2B	; 43
    19d2:	01 c0       	rjmp	.+2      	; 0x19d6 <vfprintf+0x1a2>
    19d4:	00 e0       	ldi	r16, 0x00	; 0
    19d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    19d8:	8c 70       	andi	r24, 0x0C	; 12
    19da:	19 f0       	breq	.+6      	; 0x19e2 <vfprintf+0x1ae>
    19dc:	01 11       	cpse	r16, r1
    19de:	5a c2       	rjmp	.+1204   	; 0x1e94 <vfprintf+0x660>
    19e0:	9b c2       	rjmp	.+1334   	; 0x1f18 <vfprintf+0x6e4>
    19e2:	97 fe       	sbrs	r9, 7
    19e4:	10 c0       	rjmp	.+32     	; 0x1a06 <vfprintf+0x1d2>
    19e6:	4c 0c       	add	r4, r12
    19e8:	fc 85       	ldd	r31, Y+12	; 0x0c
    19ea:	f4 ff       	sbrs	r31, 4
    19ec:	04 c0       	rjmp	.+8      	; 0x19f6 <vfprintf+0x1c2>
    19ee:	8a 81       	ldd	r24, Y+2	; 0x02
    19f0:	81 33       	cpi	r24, 0x31	; 49
    19f2:	09 f4       	brne	.+2      	; 0x19f6 <vfprintf+0x1c2>
    19f4:	4a 94       	dec	r4
    19f6:	14 14       	cp	r1, r4
    19f8:	74 f5       	brge	.+92     	; 0x1a56 <vfprintf+0x222>
    19fa:	28 e0       	ldi	r18, 0x08	; 8
    19fc:	24 15       	cp	r18, r4
    19fe:	78 f5       	brcc	.+94     	; 0x1a5e <vfprintf+0x22a>
    1a00:	88 e0       	ldi	r24, 0x08	; 8
    1a02:	48 2e       	mov	r4, r24
    1a04:	2c c0       	rjmp	.+88     	; 0x1a5e <vfprintf+0x22a>
    1a06:	96 fc       	sbrc	r9, 6
    1a08:	2a c0       	rjmp	.+84     	; 0x1a5e <vfprintf+0x22a>
    1a0a:	81 2f       	mov	r24, r17
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	8c 15       	cp	r24, r12
    1a10:	9d 05       	cpc	r25, r13
    1a12:	9c f0       	brlt	.+38     	; 0x1a3a <vfprintf+0x206>
    1a14:	3c ef       	ldi	r19, 0xFC	; 252
    1a16:	c3 16       	cp	r12, r19
    1a18:	3f ef       	ldi	r19, 0xFF	; 255
    1a1a:	d3 06       	cpc	r13, r19
    1a1c:	74 f0       	brlt	.+28     	; 0x1a3a <vfprintf+0x206>
    1a1e:	89 2d       	mov	r24, r9
    1a20:	80 68       	ori	r24, 0x80	; 128
    1a22:	98 2e       	mov	r9, r24
    1a24:	0a c0       	rjmp	.+20     	; 0x1a3a <vfprintf+0x206>
    1a26:	e2 e0       	ldi	r30, 0x02	; 2
    1a28:	f0 e0       	ldi	r31, 0x00	; 0
    1a2a:	ec 0f       	add	r30, r28
    1a2c:	fd 1f       	adc	r31, r29
    1a2e:	e1 0f       	add	r30, r17
    1a30:	f1 1d       	adc	r31, r1
    1a32:	80 81       	ld	r24, Z
    1a34:	80 33       	cpi	r24, 0x30	; 48
    1a36:	19 f4       	brne	.+6      	; 0x1a3e <vfprintf+0x20a>
    1a38:	11 50       	subi	r17, 0x01	; 1
    1a3a:	11 11       	cpse	r17, r1
    1a3c:	f4 cf       	rjmp	.-24     	; 0x1a26 <vfprintf+0x1f2>
    1a3e:	97 fe       	sbrs	r9, 7
    1a40:	0e c0       	rjmp	.+28     	; 0x1a5e <vfprintf+0x22a>
    1a42:	44 24       	eor	r4, r4
    1a44:	43 94       	inc	r4
    1a46:	41 0e       	add	r4, r17
    1a48:	81 2f       	mov	r24, r17
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	c8 16       	cp	r12, r24
    1a4e:	d9 06       	cpc	r13, r25
    1a50:	2c f4       	brge	.+10     	; 0x1a5c <vfprintf+0x228>
    1a52:	1c 19       	sub	r17, r12
    1a54:	04 c0       	rjmp	.+8      	; 0x1a5e <vfprintf+0x22a>
    1a56:	44 24       	eor	r4, r4
    1a58:	43 94       	inc	r4
    1a5a:	01 c0       	rjmp	.+2      	; 0x1a5e <vfprintf+0x22a>
    1a5c:	10 e0       	ldi	r17, 0x00	; 0
    1a5e:	97 fe       	sbrs	r9, 7
    1a60:	06 c0       	rjmp	.+12     	; 0x1a6e <vfprintf+0x23a>
    1a62:	1c 14       	cp	r1, r12
    1a64:	1d 04       	cpc	r1, r13
    1a66:	34 f4       	brge	.+12     	; 0x1a74 <vfprintf+0x240>
    1a68:	c6 01       	movw	r24, r12
    1a6a:	01 96       	adiw	r24, 0x01	; 1
    1a6c:	05 c0       	rjmp	.+10     	; 0x1a78 <vfprintf+0x244>
    1a6e:	85 e0       	ldi	r24, 0x05	; 5
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	02 c0       	rjmp	.+4      	; 0x1a78 <vfprintf+0x244>
    1a74:	81 e0       	ldi	r24, 0x01	; 1
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	01 11       	cpse	r16, r1
    1a7a:	01 96       	adiw	r24, 0x01	; 1
    1a7c:	11 23       	and	r17, r17
    1a7e:	31 f0       	breq	.+12     	; 0x1a8c <vfprintf+0x258>
    1a80:	21 2f       	mov	r18, r17
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	2f 5f       	subi	r18, 0xFF	; 255
    1a86:	3f 4f       	sbci	r19, 0xFF	; 255
    1a88:	82 0f       	add	r24, r18
    1a8a:	93 1f       	adc	r25, r19
    1a8c:	25 2d       	mov	r18, r5
    1a8e:	30 e0       	ldi	r19, 0x00	; 0
    1a90:	82 17       	cp	r24, r18
    1a92:	93 07       	cpc	r25, r19
    1a94:	14 f4       	brge	.+4      	; 0x1a9a <vfprintf+0x266>
    1a96:	58 1a       	sub	r5, r24
    1a98:	01 c0       	rjmp	.+2      	; 0x1a9c <vfprintf+0x268>
    1a9a:	51 2c       	mov	r5, r1
    1a9c:	89 2d       	mov	r24, r9
    1a9e:	89 70       	andi	r24, 0x09	; 9
    1aa0:	49 f4       	brne	.+18     	; 0x1ab4 <vfprintf+0x280>
    1aa2:	55 20       	and	r5, r5
    1aa4:	39 f0       	breq	.+14     	; 0x1ab4 <vfprintf+0x280>
    1aa6:	b7 01       	movw	r22, r14
    1aa8:	80 e2       	ldi	r24, 0x20	; 32
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1ab0:	5a 94       	dec	r5
    1ab2:	f7 cf       	rjmp	.-18     	; 0x1aa2 <vfprintf+0x26e>
    1ab4:	00 23       	and	r16, r16
    1ab6:	29 f0       	breq	.+10     	; 0x1ac2 <vfprintf+0x28e>
    1ab8:	b7 01       	movw	r22, r14
    1aba:	80 2f       	mov	r24, r16
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1ac2:	93 fc       	sbrc	r9, 3
    1ac4:	09 c0       	rjmp	.+18     	; 0x1ad8 <vfprintf+0x2a4>
    1ac6:	55 20       	and	r5, r5
    1ac8:	39 f0       	breq	.+14     	; 0x1ad8 <vfprintf+0x2a4>
    1aca:	b7 01       	movw	r22, r14
    1acc:	80 e3       	ldi	r24, 0x30	; 48
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1ad4:	5a 94       	dec	r5
    1ad6:	f7 cf       	rjmp	.-18     	; 0x1ac6 <vfprintf+0x292>
    1ad8:	97 fe       	sbrs	r9, 7
    1ada:	4c c0       	rjmp	.+152    	; 0x1b74 <vfprintf+0x340>
    1adc:	46 01       	movw	r8, r12
    1ade:	d7 fe       	sbrs	r13, 7
    1ae0:	02 c0       	rjmp	.+4      	; 0x1ae6 <vfprintf+0x2b2>
    1ae2:	81 2c       	mov	r8, r1
    1ae4:	91 2c       	mov	r9, r1
    1ae6:	c6 01       	movw	r24, r12
    1ae8:	88 19       	sub	r24, r8
    1aea:	99 09       	sbc	r25, r9
    1aec:	f3 01       	movw	r30, r6
    1aee:	e8 0f       	add	r30, r24
    1af0:	f9 1f       	adc	r31, r25
    1af2:	fe 87       	std	Y+14, r31	; 0x0e
    1af4:	ed 87       	std	Y+13, r30	; 0x0d
    1af6:	96 01       	movw	r18, r12
    1af8:	24 19       	sub	r18, r4
    1afa:	31 09       	sbc	r19, r1
    1afc:	38 8b       	std	Y+16, r19	; 0x10
    1afe:	2f 87       	std	Y+15, r18	; 0x0f
    1b00:	01 2f       	mov	r16, r17
    1b02:	10 e0       	ldi	r17, 0x00	; 0
    1b04:	11 95       	neg	r17
    1b06:	01 95       	neg	r16
    1b08:	11 09       	sbc	r17, r1
    1b0a:	3f ef       	ldi	r19, 0xFF	; 255
    1b0c:	83 16       	cp	r8, r19
    1b0e:	93 06       	cpc	r9, r19
    1b10:	29 f4       	brne	.+10     	; 0x1b1c <vfprintf+0x2e8>
    1b12:	b7 01       	movw	r22, r14
    1b14:	8e e2       	ldi	r24, 0x2E	; 46
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1b1c:	c8 14       	cp	r12, r8
    1b1e:	d9 04       	cpc	r13, r9
    1b20:	4c f0       	brlt	.+18     	; 0x1b34 <vfprintf+0x300>
    1b22:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b24:	98 89       	ldd	r25, Y+16	; 0x10
    1b26:	88 15       	cp	r24, r8
    1b28:	99 05       	cpc	r25, r9
    1b2a:	24 f4       	brge	.+8      	; 0x1b34 <vfprintf+0x300>
    1b2c:	ed 85       	ldd	r30, Y+13	; 0x0d
    1b2e:	fe 85       	ldd	r31, Y+14	; 0x0e
    1b30:	81 81       	ldd	r24, Z+1	; 0x01
    1b32:	01 c0       	rjmp	.+2      	; 0x1b36 <vfprintf+0x302>
    1b34:	80 e3       	ldi	r24, 0x30	; 48
    1b36:	f1 e0       	ldi	r31, 0x01	; 1
    1b38:	8f 1a       	sub	r8, r31
    1b3a:	91 08       	sbc	r9, r1
    1b3c:	2d 85       	ldd	r18, Y+13	; 0x0d
    1b3e:	3e 85       	ldd	r19, Y+14	; 0x0e
    1b40:	2f 5f       	subi	r18, 0xFF	; 255
    1b42:	3f 4f       	sbci	r19, 0xFF	; 255
    1b44:	3e 87       	std	Y+14, r19	; 0x0e
    1b46:	2d 87       	std	Y+13, r18	; 0x0d
    1b48:	80 16       	cp	r8, r16
    1b4a:	91 06       	cpc	r9, r17
    1b4c:	2c f0       	brlt	.+10     	; 0x1b58 <vfprintf+0x324>
    1b4e:	b7 01       	movw	r22, r14
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1b56:	d9 cf       	rjmp	.-78     	; 0x1b0a <vfprintf+0x2d6>
    1b58:	c8 14       	cp	r12, r8
    1b5a:	d9 04       	cpc	r13, r9
    1b5c:	41 f4       	brne	.+16     	; 0x1b6e <vfprintf+0x33a>
    1b5e:	9a 81       	ldd	r25, Y+2	; 0x02
    1b60:	96 33       	cpi	r25, 0x36	; 54
    1b62:	20 f4       	brcc	.+8      	; 0x1b6c <vfprintf+0x338>
    1b64:	95 33       	cpi	r25, 0x35	; 53
    1b66:	19 f4       	brne	.+6      	; 0x1b6e <vfprintf+0x33a>
    1b68:	3c 85       	ldd	r19, Y+12	; 0x0c
    1b6a:	34 ff       	sbrs	r19, 4
    1b6c:	81 e3       	ldi	r24, 0x31	; 49
    1b6e:	b7 01       	movw	r22, r14
    1b70:	90 e0       	ldi	r25, 0x00	; 0
    1b72:	4e c0       	rjmp	.+156    	; 0x1c10 <vfprintf+0x3dc>
    1b74:	8a 81       	ldd	r24, Y+2	; 0x02
    1b76:	81 33       	cpi	r24, 0x31	; 49
    1b78:	19 f0       	breq	.+6      	; 0x1b80 <vfprintf+0x34c>
    1b7a:	9c 85       	ldd	r25, Y+12	; 0x0c
    1b7c:	9f 7e       	andi	r25, 0xEF	; 239
    1b7e:	9c 87       	std	Y+12, r25	; 0x0c
    1b80:	b7 01       	movw	r22, r14
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1b88:	11 11       	cpse	r17, r1
    1b8a:	05 c0       	rjmp	.+10     	; 0x1b96 <vfprintf+0x362>
    1b8c:	94 fc       	sbrc	r9, 4
    1b8e:	18 c0       	rjmp	.+48     	; 0x1bc0 <vfprintf+0x38c>
    1b90:	85 e6       	ldi	r24, 0x65	; 101
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	17 c0       	rjmp	.+46     	; 0x1bc4 <vfprintf+0x390>
    1b96:	b7 01       	movw	r22, r14
    1b98:	8e e2       	ldi	r24, 0x2E	; 46
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1ba0:	1e 5f       	subi	r17, 0xFE	; 254
    1ba2:	82 e0       	ldi	r24, 0x02	; 2
    1ba4:	01 e0       	ldi	r16, 0x01	; 1
    1ba6:	08 0f       	add	r16, r24
    1ba8:	f3 01       	movw	r30, r6
    1baa:	e8 0f       	add	r30, r24
    1bac:	f1 1d       	adc	r31, r1
    1bae:	80 81       	ld	r24, Z
    1bb0:	b7 01       	movw	r22, r14
    1bb2:	90 e0       	ldi	r25, 0x00	; 0
    1bb4:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1bb8:	80 2f       	mov	r24, r16
    1bba:	01 13       	cpse	r16, r17
    1bbc:	f3 cf       	rjmp	.-26     	; 0x1ba4 <vfprintf+0x370>
    1bbe:	e6 cf       	rjmp	.-52     	; 0x1b8c <vfprintf+0x358>
    1bc0:	85 e4       	ldi	r24, 0x45	; 69
    1bc2:	90 e0       	ldi	r25, 0x00	; 0
    1bc4:	b7 01       	movw	r22, r14
    1bc6:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1bca:	d7 fc       	sbrc	r13, 7
    1bcc:	06 c0       	rjmp	.+12     	; 0x1bda <vfprintf+0x3a6>
    1bce:	c1 14       	cp	r12, r1
    1bd0:	d1 04       	cpc	r13, r1
    1bd2:	41 f4       	brne	.+16     	; 0x1be4 <vfprintf+0x3b0>
    1bd4:	ec 85       	ldd	r30, Y+12	; 0x0c
    1bd6:	e4 ff       	sbrs	r30, 4
    1bd8:	05 c0       	rjmp	.+10     	; 0x1be4 <vfprintf+0x3b0>
    1bda:	d1 94       	neg	r13
    1bdc:	c1 94       	neg	r12
    1bde:	d1 08       	sbc	r13, r1
    1be0:	8d e2       	ldi	r24, 0x2D	; 45
    1be2:	01 c0       	rjmp	.+2      	; 0x1be6 <vfprintf+0x3b2>
    1be4:	8b e2       	ldi	r24, 0x2B	; 43
    1be6:	b7 01       	movw	r22, r14
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1bee:	80 e3       	ldi	r24, 0x30	; 48
    1bf0:	2a e0       	ldi	r18, 0x0A	; 10
    1bf2:	c2 16       	cp	r12, r18
    1bf4:	d1 04       	cpc	r13, r1
    1bf6:	2c f0       	brlt	.+10     	; 0x1c02 <vfprintf+0x3ce>
    1bf8:	8f 5f       	subi	r24, 0xFF	; 255
    1bfa:	fa e0       	ldi	r31, 0x0A	; 10
    1bfc:	cf 1a       	sub	r12, r31
    1bfe:	d1 08       	sbc	r13, r1
    1c00:	f7 cf       	rjmp	.-18     	; 0x1bf0 <vfprintf+0x3bc>
    1c02:	b7 01       	movw	r22, r14
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1c0a:	b7 01       	movw	r22, r14
    1c0c:	c6 01       	movw	r24, r12
    1c0e:	c0 96       	adiw	r24, 0x30	; 48
    1c10:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1c14:	54 c1       	rjmp	.+680    	; 0x1ebe <vfprintf+0x68a>
    1c16:	83 36       	cpi	r24, 0x63	; 99
    1c18:	31 f0       	breq	.+12     	; 0x1c26 <vfprintf+0x3f2>
    1c1a:	83 37       	cpi	r24, 0x73	; 115
    1c1c:	79 f0       	breq	.+30     	; 0x1c3c <vfprintf+0x408>
    1c1e:	83 35       	cpi	r24, 0x53	; 83
    1c20:	09 f0       	breq	.+2      	; 0x1c24 <vfprintf+0x3f0>
    1c22:	56 c0       	rjmp	.+172    	; 0x1cd0 <vfprintf+0x49c>
    1c24:	20 c0       	rjmp	.+64     	; 0x1c66 <vfprintf+0x432>
    1c26:	56 01       	movw	r10, r12
    1c28:	32 e0       	ldi	r19, 0x02	; 2
    1c2a:	a3 0e       	add	r10, r19
    1c2c:	b1 1c       	adc	r11, r1
    1c2e:	f6 01       	movw	r30, r12
    1c30:	80 81       	ld	r24, Z
    1c32:	89 83       	std	Y+1, r24	; 0x01
    1c34:	01 e0       	ldi	r16, 0x01	; 1
    1c36:	10 e0       	ldi	r17, 0x00	; 0
    1c38:	63 01       	movw	r12, r6
    1c3a:	12 c0       	rjmp	.+36     	; 0x1c60 <vfprintf+0x42c>
    1c3c:	56 01       	movw	r10, r12
    1c3e:	f2 e0       	ldi	r31, 0x02	; 2
    1c40:	af 0e       	add	r10, r31
    1c42:	b1 1c       	adc	r11, r1
    1c44:	f6 01       	movw	r30, r12
    1c46:	c0 80       	ld	r12, Z
    1c48:	d1 80       	ldd	r13, Z+1	; 0x01
    1c4a:	96 fe       	sbrs	r9, 6
    1c4c:	03 c0       	rjmp	.+6      	; 0x1c54 <vfprintf+0x420>
    1c4e:	61 2f       	mov	r22, r17
    1c50:	70 e0       	ldi	r23, 0x00	; 0
    1c52:	02 c0       	rjmp	.+4      	; 0x1c58 <vfprintf+0x424>
    1c54:	6f ef       	ldi	r22, 0xFF	; 255
    1c56:	7f ef       	ldi	r23, 0xFF	; 255
    1c58:	c6 01       	movw	r24, r12
    1c5a:	0e 94 c3 10 	call	0x2186	; 0x2186 <strnlen>
    1c5e:	8c 01       	movw	r16, r24
    1c60:	f9 2d       	mov	r31, r9
    1c62:	ff 77       	andi	r31, 0x7F	; 127
    1c64:	14 c0       	rjmp	.+40     	; 0x1c8e <vfprintf+0x45a>
    1c66:	56 01       	movw	r10, r12
    1c68:	22 e0       	ldi	r18, 0x02	; 2
    1c6a:	a2 0e       	add	r10, r18
    1c6c:	b1 1c       	adc	r11, r1
    1c6e:	f6 01       	movw	r30, r12
    1c70:	c0 80       	ld	r12, Z
    1c72:	d1 80       	ldd	r13, Z+1	; 0x01
    1c74:	96 fe       	sbrs	r9, 6
    1c76:	03 c0       	rjmp	.+6      	; 0x1c7e <vfprintf+0x44a>
    1c78:	61 2f       	mov	r22, r17
    1c7a:	70 e0       	ldi	r23, 0x00	; 0
    1c7c:	02 c0       	rjmp	.+4      	; 0x1c82 <vfprintf+0x44e>
    1c7e:	6f ef       	ldi	r22, 0xFF	; 255
    1c80:	7f ef       	ldi	r23, 0xFF	; 255
    1c82:	c6 01       	movw	r24, r12
    1c84:	0e 94 a6 10 	call	0x214c	; 0x214c <strnlen_P>
    1c88:	8c 01       	movw	r16, r24
    1c8a:	f9 2d       	mov	r31, r9
    1c8c:	f0 68       	ori	r31, 0x80	; 128
    1c8e:	9f 2e       	mov	r9, r31
    1c90:	f3 fd       	sbrc	r31, 3
    1c92:	1a c0       	rjmp	.+52     	; 0x1cc8 <vfprintf+0x494>
    1c94:	85 2d       	mov	r24, r5
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	08 17       	cp	r16, r24
    1c9a:	19 07       	cpc	r17, r25
    1c9c:	a8 f4       	brcc	.+42     	; 0x1cc8 <vfprintf+0x494>
    1c9e:	b7 01       	movw	r22, r14
    1ca0:	80 e2       	ldi	r24, 0x20	; 32
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1ca8:	5a 94       	dec	r5
    1caa:	f4 cf       	rjmp	.-24     	; 0x1c94 <vfprintf+0x460>
    1cac:	f6 01       	movw	r30, r12
    1cae:	97 fc       	sbrc	r9, 7
    1cb0:	85 91       	lpm	r24, Z+
    1cb2:	97 fe       	sbrs	r9, 7
    1cb4:	81 91       	ld	r24, Z+
    1cb6:	6f 01       	movw	r12, r30
    1cb8:	b7 01       	movw	r22, r14
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1cc0:	51 10       	cpse	r5, r1
    1cc2:	5a 94       	dec	r5
    1cc4:	01 50       	subi	r16, 0x01	; 1
    1cc6:	11 09       	sbc	r17, r1
    1cc8:	01 15       	cp	r16, r1
    1cca:	11 05       	cpc	r17, r1
    1ccc:	79 f7       	brne	.-34     	; 0x1cac <vfprintf+0x478>
    1cce:	f7 c0       	rjmp	.+494    	; 0x1ebe <vfprintf+0x68a>
    1cd0:	84 36       	cpi	r24, 0x64	; 100
    1cd2:	11 f0       	breq	.+4      	; 0x1cd8 <vfprintf+0x4a4>
    1cd4:	89 36       	cpi	r24, 0x69	; 105
    1cd6:	61 f5       	brne	.+88     	; 0x1d30 <vfprintf+0x4fc>
    1cd8:	56 01       	movw	r10, r12
    1cda:	97 fe       	sbrs	r9, 7
    1cdc:	09 c0       	rjmp	.+18     	; 0x1cf0 <vfprintf+0x4bc>
    1cde:	24 e0       	ldi	r18, 0x04	; 4
    1ce0:	a2 0e       	add	r10, r18
    1ce2:	b1 1c       	adc	r11, r1
    1ce4:	f6 01       	movw	r30, r12
    1ce6:	60 81       	ld	r22, Z
    1ce8:	71 81       	ldd	r23, Z+1	; 0x01
    1cea:	82 81       	ldd	r24, Z+2	; 0x02
    1cec:	93 81       	ldd	r25, Z+3	; 0x03
    1cee:	0a c0       	rjmp	.+20     	; 0x1d04 <vfprintf+0x4d0>
    1cf0:	f2 e0       	ldi	r31, 0x02	; 2
    1cf2:	af 0e       	add	r10, r31
    1cf4:	b1 1c       	adc	r11, r1
    1cf6:	f6 01       	movw	r30, r12
    1cf8:	60 81       	ld	r22, Z
    1cfa:	71 81       	ldd	r23, Z+1	; 0x01
    1cfc:	07 2e       	mov	r0, r23
    1cfe:	00 0c       	add	r0, r0
    1d00:	88 0b       	sbc	r24, r24
    1d02:	99 0b       	sbc	r25, r25
    1d04:	f9 2d       	mov	r31, r9
    1d06:	ff 76       	andi	r31, 0x6F	; 111
    1d08:	9f 2e       	mov	r9, r31
    1d0a:	97 ff       	sbrs	r25, 7
    1d0c:	09 c0       	rjmp	.+18     	; 0x1d20 <vfprintf+0x4ec>
    1d0e:	90 95       	com	r25
    1d10:	80 95       	com	r24
    1d12:	70 95       	com	r23
    1d14:	61 95       	neg	r22
    1d16:	7f 4f       	sbci	r23, 0xFF	; 255
    1d18:	8f 4f       	sbci	r24, 0xFF	; 255
    1d1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d1c:	f0 68       	ori	r31, 0x80	; 128
    1d1e:	9f 2e       	mov	r9, r31
    1d20:	2a e0       	ldi	r18, 0x0A	; 10
    1d22:	30 e0       	ldi	r19, 0x00	; 0
    1d24:	a3 01       	movw	r20, r6
    1d26:	0e 94 45 11 	call	0x228a	; 0x228a <__ultoa_invert>
    1d2a:	c8 2e       	mov	r12, r24
    1d2c:	c6 18       	sub	r12, r6
    1d2e:	3f c0       	rjmp	.+126    	; 0x1dae <vfprintf+0x57a>
    1d30:	09 2d       	mov	r16, r9
    1d32:	85 37       	cpi	r24, 0x75	; 117
    1d34:	21 f4       	brne	.+8      	; 0x1d3e <vfprintf+0x50a>
    1d36:	0f 7e       	andi	r16, 0xEF	; 239
    1d38:	2a e0       	ldi	r18, 0x0A	; 10
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	1d c0       	rjmp	.+58     	; 0x1d78 <vfprintf+0x544>
    1d3e:	09 7f       	andi	r16, 0xF9	; 249
    1d40:	8f 36       	cpi	r24, 0x6F	; 111
    1d42:	91 f0       	breq	.+36     	; 0x1d68 <vfprintf+0x534>
    1d44:	18 f4       	brcc	.+6      	; 0x1d4c <vfprintf+0x518>
    1d46:	88 35       	cpi	r24, 0x58	; 88
    1d48:	59 f0       	breq	.+22     	; 0x1d60 <vfprintf+0x52c>
    1d4a:	c3 c0       	rjmp	.+390    	; 0x1ed2 <vfprintf+0x69e>
    1d4c:	80 37       	cpi	r24, 0x70	; 112
    1d4e:	19 f0       	breq	.+6      	; 0x1d56 <vfprintf+0x522>
    1d50:	88 37       	cpi	r24, 0x78	; 120
    1d52:	11 f0       	breq	.+4      	; 0x1d58 <vfprintf+0x524>
    1d54:	be c0       	rjmp	.+380    	; 0x1ed2 <vfprintf+0x69e>
    1d56:	00 61       	ori	r16, 0x10	; 16
    1d58:	04 ff       	sbrs	r16, 4
    1d5a:	09 c0       	rjmp	.+18     	; 0x1d6e <vfprintf+0x53a>
    1d5c:	04 60       	ori	r16, 0x04	; 4
    1d5e:	07 c0       	rjmp	.+14     	; 0x1d6e <vfprintf+0x53a>
    1d60:	94 fe       	sbrs	r9, 4
    1d62:	08 c0       	rjmp	.+16     	; 0x1d74 <vfprintf+0x540>
    1d64:	06 60       	ori	r16, 0x06	; 6
    1d66:	06 c0       	rjmp	.+12     	; 0x1d74 <vfprintf+0x540>
    1d68:	28 e0       	ldi	r18, 0x08	; 8
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	05 c0       	rjmp	.+10     	; 0x1d78 <vfprintf+0x544>
    1d6e:	20 e1       	ldi	r18, 0x10	; 16
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	02 c0       	rjmp	.+4      	; 0x1d78 <vfprintf+0x544>
    1d74:	20 e1       	ldi	r18, 0x10	; 16
    1d76:	32 e0       	ldi	r19, 0x02	; 2
    1d78:	56 01       	movw	r10, r12
    1d7a:	07 ff       	sbrs	r16, 7
    1d7c:	09 c0       	rjmp	.+18     	; 0x1d90 <vfprintf+0x55c>
    1d7e:	84 e0       	ldi	r24, 0x04	; 4
    1d80:	a8 0e       	add	r10, r24
    1d82:	b1 1c       	adc	r11, r1
    1d84:	f6 01       	movw	r30, r12
    1d86:	60 81       	ld	r22, Z
    1d88:	71 81       	ldd	r23, Z+1	; 0x01
    1d8a:	82 81       	ldd	r24, Z+2	; 0x02
    1d8c:	93 81       	ldd	r25, Z+3	; 0x03
    1d8e:	08 c0       	rjmp	.+16     	; 0x1da0 <vfprintf+0x56c>
    1d90:	f2 e0       	ldi	r31, 0x02	; 2
    1d92:	af 0e       	add	r10, r31
    1d94:	b1 1c       	adc	r11, r1
    1d96:	f6 01       	movw	r30, r12
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	80 e0       	ldi	r24, 0x00	; 0
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	a3 01       	movw	r20, r6
    1da2:	0e 94 45 11 	call	0x228a	; 0x228a <__ultoa_invert>
    1da6:	c8 2e       	mov	r12, r24
    1da8:	c6 18       	sub	r12, r6
    1daa:	0f 77       	andi	r16, 0x7F	; 127
    1dac:	90 2e       	mov	r9, r16
    1dae:	96 fe       	sbrs	r9, 6
    1db0:	0b c0       	rjmp	.+22     	; 0x1dc8 <vfprintf+0x594>
    1db2:	09 2d       	mov	r16, r9
    1db4:	0e 7f       	andi	r16, 0xFE	; 254
    1db6:	c1 16       	cp	r12, r17
    1db8:	50 f4       	brcc	.+20     	; 0x1dce <vfprintf+0x59a>
    1dba:	94 fe       	sbrs	r9, 4
    1dbc:	0a c0       	rjmp	.+20     	; 0x1dd2 <vfprintf+0x59e>
    1dbe:	92 fc       	sbrc	r9, 2
    1dc0:	08 c0       	rjmp	.+16     	; 0x1dd2 <vfprintf+0x59e>
    1dc2:	09 2d       	mov	r16, r9
    1dc4:	0e 7e       	andi	r16, 0xEE	; 238
    1dc6:	05 c0       	rjmp	.+10     	; 0x1dd2 <vfprintf+0x59e>
    1dc8:	dc 2c       	mov	r13, r12
    1dca:	09 2d       	mov	r16, r9
    1dcc:	03 c0       	rjmp	.+6      	; 0x1dd4 <vfprintf+0x5a0>
    1dce:	dc 2c       	mov	r13, r12
    1dd0:	01 c0       	rjmp	.+2      	; 0x1dd4 <vfprintf+0x5a0>
    1dd2:	d1 2e       	mov	r13, r17
    1dd4:	04 ff       	sbrs	r16, 4
    1dd6:	0d c0       	rjmp	.+26     	; 0x1df2 <vfprintf+0x5be>
    1dd8:	fe 01       	movw	r30, r28
    1dda:	ec 0d       	add	r30, r12
    1ddc:	f1 1d       	adc	r31, r1
    1dde:	80 81       	ld	r24, Z
    1de0:	80 33       	cpi	r24, 0x30	; 48
    1de2:	11 f4       	brne	.+4      	; 0x1de8 <vfprintf+0x5b4>
    1de4:	09 7e       	andi	r16, 0xE9	; 233
    1de6:	09 c0       	rjmp	.+18     	; 0x1dfa <vfprintf+0x5c6>
    1de8:	02 ff       	sbrs	r16, 2
    1dea:	06 c0       	rjmp	.+12     	; 0x1df8 <vfprintf+0x5c4>
    1dec:	d3 94       	inc	r13
    1dee:	d3 94       	inc	r13
    1df0:	04 c0       	rjmp	.+8      	; 0x1dfa <vfprintf+0x5c6>
    1df2:	80 2f       	mov	r24, r16
    1df4:	86 78       	andi	r24, 0x86	; 134
    1df6:	09 f0       	breq	.+2      	; 0x1dfa <vfprintf+0x5c6>
    1df8:	d3 94       	inc	r13
    1dfa:	03 fd       	sbrc	r16, 3
    1dfc:	11 c0       	rjmp	.+34     	; 0x1e20 <vfprintf+0x5ec>
    1dfe:	00 ff       	sbrs	r16, 0
    1e00:	06 c0       	rjmp	.+12     	; 0x1e0e <vfprintf+0x5da>
    1e02:	1c 2d       	mov	r17, r12
    1e04:	d5 14       	cp	r13, r5
    1e06:	80 f4       	brcc	.+32     	; 0x1e28 <vfprintf+0x5f4>
    1e08:	15 0d       	add	r17, r5
    1e0a:	1d 19       	sub	r17, r13
    1e0c:	0d c0       	rjmp	.+26     	; 0x1e28 <vfprintf+0x5f4>
    1e0e:	d5 14       	cp	r13, r5
    1e10:	58 f4       	brcc	.+22     	; 0x1e28 <vfprintf+0x5f4>
    1e12:	b7 01       	movw	r22, r14
    1e14:	80 e2       	ldi	r24, 0x20	; 32
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1e1c:	d3 94       	inc	r13
    1e1e:	f7 cf       	rjmp	.-18     	; 0x1e0e <vfprintf+0x5da>
    1e20:	d5 14       	cp	r13, r5
    1e22:	10 f4       	brcc	.+4      	; 0x1e28 <vfprintf+0x5f4>
    1e24:	5d 18       	sub	r5, r13
    1e26:	01 c0       	rjmp	.+2      	; 0x1e2a <vfprintf+0x5f6>
    1e28:	51 2c       	mov	r5, r1
    1e2a:	04 ff       	sbrs	r16, 4
    1e2c:	10 c0       	rjmp	.+32     	; 0x1e4e <vfprintf+0x61a>
    1e2e:	b7 01       	movw	r22, r14
    1e30:	80 e3       	ldi	r24, 0x30	; 48
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1e38:	02 ff       	sbrs	r16, 2
    1e3a:	17 c0       	rjmp	.+46     	; 0x1e6a <vfprintf+0x636>
    1e3c:	01 fd       	sbrc	r16, 1
    1e3e:	03 c0       	rjmp	.+6      	; 0x1e46 <vfprintf+0x612>
    1e40:	88 e7       	ldi	r24, 0x78	; 120
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	02 c0       	rjmp	.+4      	; 0x1e4a <vfprintf+0x616>
    1e46:	88 e5       	ldi	r24, 0x58	; 88
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	b7 01       	movw	r22, r14
    1e4c:	0c c0       	rjmp	.+24     	; 0x1e66 <vfprintf+0x632>
    1e4e:	80 2f       	mov	r24, r16
    1e50:	86 78       	andi	r24, 0x86	; 134
    1e52:	59 f0       	breq	.+22     	; 0x1e6a <vfprintf+0x636>
    1e54:	01 ff       	sbrs	r16, 1
    1e56:	02 c0       	rjmp	.+4      	; 0x1e5c <vfprintf+0x628>
    1e58:	8b e2       	ldi	r24, 0x2B	; 43
    1e5a:	01 c0       	rjmp	.+2      	; 0x1e5e <vfprintf+0x62a>
    1e5c:	80 e2       	ldi	r24, 0x20	; 32
    1e5e:	07 fd       	sbrc	r16, 7
    1e60:	8d e2       	ldi	r24, 0x2D	; 45
    1e62:	b7 01       	movw	r22, r14
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1e6a:	c1 16       	cp	r12, r17
    1e6c:	38 f4       	brcc	.+14     	; 0x1e7c <vfprintf+0x648>
    1e6e:	b7 01       	movw	r22, r14
    1e70:	80 e3       	ldi	r24, 0x30	; 48
    1e72:	90 e0       	ldi	r25, 0x00	; 0
    1e74:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1e78:	11 50       	subi	r17, 0x01	; 1
    1e7a:	f7 cf       	rjmp	.-18     	; 0x1e6a <vfprintf+0x636>
    1e7c:	ca 94       	dec	r12
    1e7e:	f3 01       	movw	r30, r6
    1e80:	ec 0d       	add	r30, r12
    1e82:	f1 1d       	adc	r31, r1
    1e84:	80 81       	ld	r24, Z
    1e86:	b7 01       	movw	r22, r14
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1e8e:	c1 10       	cpse	r12, r1
    1e90:	f5 cf       	rjmp	.-22     	; 0x1e7c <vfprintf+0x648>
    1e92:	15 c0       	rjmp	.+42     	; 0x1ebe <vfprintf+0x68a>
    1e94:	f4 e0       	ldi	r31, 0x04	; 4
    1e96:	f5 15       	cp	r31, r5
    1e98:	60 f5       	brcc	.+88     	; 0x1ef2 <vfprintf+0x6be>
    1e9a:	84 e0       	ldi	r24, 0x04	; 4
    1e9c:	58 1a       	sub	r5, r24
    1e9e:	93 fe       	sbrs	r9, 3
    1ea0:	1f c0       	rjmp	.+62     	; 0x1ee0 <vfprintf+0x6ac>
    1ea2:	01 11       	cpse	r16, r1
    1ea4:	27 c0       	rjmp	.+78     	; 0x1ef4 <vfprintf+0x6c0>
    1ea6:	2c 85       	ldd	r18, Y+12	; 0x0c
    1ea8:	23 ff       	sbrs	r18, 3
    1eaa:	2a c0       	rjmp	.+84     	; 0x1f00 <vfprintf+0x6cc>
    1eac:	08 e6       	ldi	r16, 0x68	; 104
    1eae:	10 e0       	ldi	r17, 0x00	; 0
    1eb0:	39 2d       	mov	r19, r9
    1eb2:	30 71       	andi	r19, 0x10	; 16
    1eb4:	93 2e       	mov	r9, r19
    1eb6:	f8 01       	movw	r30, r16
    1eb8:	84 91       	lpm	r24, Z
    1eba:	81 11       	cpse	r24, r1
    1ebc:	24 c0       	rjmp	.+72     	; 0x1f06 <vfprintf+0x6d2>
    1ebe:	55 20       	and	r5, r5
    1ec0:	09 f4       	brne	.+2      	; 0x1ec4 <vfprintf+0x690>
    1ec2:	e4 cc       	rjmp	.-1592   	; 0x188c <vfprintf+0x58>
    1ec4:	b7 01       	movw	r22, r14
    1ec6:	80 e2       	ldi	r24, 0x20	; 32
    1ec8:	90 e0       	ldi	r25, 0x00	; 0
    1eca:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1ece:	5a 94       	dec	r5
    1ed0:	f6 cf       	rjmp	.-20     	; 0x1ebe <vfprintf+0x68a>
    1ed2:	f7 01       	movw	r30, r14
    1ed4:	86 81       	ldd	r24, Z+6	; 0x06
    1ed6:	97 81       	ldd	r25, Z+7	; 0x07
    1ed8:	26 c0       	rjmp	.+76     	; 0x1f26 <vfprintf+0x6f2>
    1eda:	8f ef       	ldi	r24, 0xFF	; 255
    1edc:	9f ef       	ldi	r25, 0xFF	; 255
    1ede:	23 c0       	rjmp	.+70     	; 0x1f26 <vfprintf+0x6f2>
    1ee0:	b7 01       	movw	r22, r14
    1ee2:	80 e2       	ldi	r24, 0x20	; 32
    1ee4:	90 e0       	ldi	r25, 0x00	; 0
    1ee6:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1eea:	5a 94       	dec	r5
    1eec:	51 10       	cpse	r5, r1
    1eee:	f8 cf       	rjmp	.-16     	; 0x1ee0 <vfprintf+0x6ac>
    1ef0:	d8 cf       	rjmp	.-80     	; 0x1ea2 <vfprintf+0x66e>
    1ef2:	51 2c       	mov	r5, r1
    1ef4:	b7 01       	movw	r22, r14
    1ef6:	80 2f       	mov	r24, r16
    1ef8:	90 e0       	ldi	r25, 0x00	; 0
    1efa:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1efe:	d3 cf       	rjmp	.-90     	; 0x1ea6 <vfprintf+0x672>
    1f00:	0c e6       	ldi	r16, 0x6C	; 108
    1f02:	10 e0       	ldi	r17, 0x00	; 0
    1f04:	d5 cf       	rjmp	.-86     	; 0x1eb0 <vfprintf+0x67c>
    1f06:	91 10       	cpse	r9, r1
    1f08:	80 52       	subi	r24, 0x20	; 32
    1f0a:	b7 01       	movw	r22, r14
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	0e 94 ce 10 	call	0x219c	; 0x219c <fputc>
    1f12:	0f 5f       	subi	r16, 0xFF	; 255
    1f14:	1f 4f       	sbci	r17, 0xFF	; 255
    1f16:	cf cf       	rjmp	.-98     	; 0x1eb6 <vfprintf+0x682>
    1f18:	23 e0       	ldi	r18, 0x03	; 3
    1f1a:	25 15       	cp	r18, r5
    1f1c:	10 f4       	brcc	.+4      	; 0x1f22 <vfprintf+0x6ee>
    1f1e:	83 e0       	ldi	r24, 0x03	; 3
    1f20:	bd cf       	rjmp	.-134    	; 0x1e9c <vfprintf+0x668>
    1f22:	51 2c       	mov	r5, r1
    1f24:	c0 cf       	rjmp	.-128    	; 0x1ea6 <vfprintf+0x672>
    1f26:	60 96       	adiw	r28, 0x10	; 16
    1f28:	e2 e1       	ldi	r30, 0x12	; 18
    1f2a:	0c 94 b3 0f 	jmp	0x1f66	; 0x1f66 <__epilogue_restores__>

00001f2e <__prologue_saves__>:
    1f2e:	2f 92       	push	r2
    1f30:	3f 92       	push	r3
    1f32:	4f 92       	push	r4
    1f34:	5f 92       	push	r5
    1f36:	6f 92       	push	r6
    1f38:	7f 92       	push	r7
    1f3a:	8f 92       	push	r8
    1f3c:	9f 92       	push	r9
    1f3e:	af 92       	push	r10
    1f40:	bf 92       	push	r11
    1f42:	cf 92       	push	r12
    1f44:	df 92       	push	r13
    1f46:	ef 92       	push	r14
    1f48:	ff 92       	push	r15
    1f4a:	0f 93       	push	r16
    1f4c:	1f 93       	push	r17
    1f4e:	cf 93       	push	r28
    1f50:	df 93       	push	r29
    1f52:	cd b7       	in	r28, 0x3d	; 61
    1f54:	de b7       	in	r29, 0x3e	; 62
    1f56:	ca 1b       	sub	r28, r26
    1f58:	db 0b       	sbc	r29, r27
    1f5a:	0f b6       	in	r0, 0x3f	; 63
    1f5c:	f8 94       	cli
    1f5e:	de bf       	out	0x3e, r29	; 62
    1f60:	0f be       	out	0x3f, r0	; 63
    1f62:	cd bf       	out	0x3d, r28	; 61
    1f64:	09 94       	ijmp

00001f66 <__epilogue_restores__>:
    1f66:	2a 88       	ldd	r2, Y+18	; 0x12
    1f68:	39 88       	ldd	r3, Y+17	; 0x11
    1f6a:	48 88       	ldd	r4, Y+16	; 0x10
    1f6c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f6e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f70:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f72:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f74:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f76:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f78:	b9 84       	ldd	r11, Y+9	; 0x09
    1f7a:	c8 84       	ldd	r12, Y+8	; 0x08
    1f7c:	df 80       	ldd	r13, Y+7	; 0x07
    1f7e:	ee 80       	ldd	r14, Y+6	; 0x06
    1f80:	fd 80       	ldd	r15, Y+5	; 0x05
    1f82:	0c 81       	ldd	r16, Y+4	; 0x04
    1f84:	1b 81       	ldd	r17, Y+3	; 0x03
    1f86:	aa 81       	ldd	r26, Y+2	; 0x02
    1f88:	b9 81       	ldd	r27, Y+1	; 0x01
    1f8a:	ce 0f       	add	r28, r30
    1f8c:	d1 1d       	adc	r29, r1
    1f8e:	0f b6       	in	r0, 0x3f	; 63
    1f90:	f8 94       	cli
    1f92:	de bf       	out	0x3e, r29	; 62
    1f94:	0f be       	out	0x3f, r0	; 63
    1f96:	cd bf       	out	0x3d, r28	; 61
    1f98:	ed 01       	movw	r28, r26
    1f9a:	08 95       	ret

00001f9c <__ftoa_engine>:
    1f9c:	28 30       	cpi	r18, 0x08	; 8
    1f9e:	08 f0       	brcs	.+2      	; 0x1fa2 <__ftoa_engine+0x6>
    1fa0:	27 e0       	ldi	r18, 0x07	; 7
    1fa2:	33 27       	eor	r19, r19
    1fa4:	da 01       	movw	r26, r20
    1fa6:	99 0f       	add	r25, r25
    1fa8:	31 1d       	adc	r19, r1
    1faa:	87 fd       	sbrc	r24, 7
    1fac:	91 60       	ori	r25, 0x01	; 1
    1fae:	00 96       	adiw	r24, 0x00	; 0
    1fb0:	61 05       	cpc	r22, r1
    1fb2:	71 05       	cpc	r23, r1
    1fb4:	39 f4       	brne	.+14     	; 0x1fc4 <__ftoa_engine+0x28>
    1fb6:	32 60       	ori	r19, 0x02	; 2
    1fb8:	2e 5f       	subi	r18, 0xFE	; 254
    1fba:	3d 93       	st	X+, r19
    1fbc:	30 e3       	ldi	r19, 0x30	; 48
    1fbe:	2a 95       	dec	r18
    1fc0:	e1 f7       	brne	.-8      	; 0x1fba <__ftoa_engine+0x1e>
    1fc2:	08 95       	ret
    1fc4:	9f 3f       	cpi	r25, 0xFF	; 255
    1fc6:	30 f0       	brcs	.+12     	; 0x1fd4 <__ftoa_engine+0x38>
    1fc8:	80 38       	cpi	r24, 0x80	; 128
    1fca:	71 05       	cpc	r23, r1
    1fcc:	61 05       	cpc	r22, r1
    1fce:	09 f0       	breq	.+2      	; 0x1fd2 <__ftoa_engine+0x36>
    1fd0:	3c 5f       	subi	r19, 0xFC	; 252
    1fd2:	3c 5f       	subi	r19, 0xFC	; 252
    1fd4:	3d 93       	st	X+, r19
    1fd6:	91 30       	cpi	r25, 0x01	; 1
    1fd8:	08 f0       	brcs	.+2      	; 0x1fdc <__ftoa_engine+0x40>
    1fda:	80 68       	ori	r24, 0x80	; 128
    1fdc:	91 1d       	adc	r25, r1
    1fde:	df 93       	push	r29
    1fe0:	cf 93       	push	r28
    1fe2:	1f 93       	push	r17
    1fe4:	0f 93       	push	r16
    1fe6:	ff 92       	push	r15
    1fe8:	ef 92       	push	r14
    1fea:	19 2f       	mov	r17, r25
    1fec:	98 7f       	andi	r25, 0xF8	; 248
    1fee:	96 95       	lsr	r25
    1ff0:	e9 2f       	mov	r30, r25
    1ff2:	96 95       	lsr	r25
    1ff4:	96 95       	lsr	r25
    1ff6:	e9 0f       	add	r30, r25
    1ff8:	ff 27       	eor	r31, r31
    1ffa:	e6 53       	subi	r30, 0x36	; 54
    1ffc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffe:	99 27       	eor	r25, r25
    2000:	33 27       	eor	r19, r19
    2002:	ee 24       	eor	r14, r14
    2004:	ff 24       	eor	r15, r15
    2006:	a7 01       	movw	r20, r14
    2008:	e7 01       	movw	r28, r14
    200a:	05 90       	lpm	r0, Z+
    200c:	08 94       	sec
    200e:	07 94       	ror	r0
    2010:	28 f4       	brcc	.+10     	; 0x201c <__ftoa_engine+0x80>
    2012:	36 0f       	add	r19, r22
    2014:	e7 1e       	adc	r14, r23
    2016:	f8 1e       	adc	r15, r24
    2018:	49 1f       	adc	r20, r25
    201a:	51 1d       	adc	r21, r1
    201c:	66 0f       	add	r22, r22
    201e:	77 1f       	adc	r23, r23
    2020:	88 1f       	adc	r24, r24
    2022:	99 1f       	adc	r25, r25
    2024:	06 94       	lsr	r0
    2026:	a1 f7       	brne	.-24     	; 0x2010 <__ftoa_engine+0x74>
    2028:	05 90       	lpm	r0, Z+
    202a:	07 94       	ror	r0
    202c:	28 f4       	brcc	.+10     	; 0x2038 <__ftoa_engine+0x9c>
    202e:	e7 0e       	add	r14, r23
    2030:	f8 1e       	adc	r15, r24
    2032:	49 1f       	adc	r20, r25
    2034:	56 1f       	adc	r21, r22
    2036:	c1 1d       	adc	r28, r1
    2038:	77 0f       	add	r23, r23
    203a:	88 1f       	adc	r24, r24
    203c:	99 1f       	adc	r25, r25
    203e:	66 1f       	adc	r22, r22
    2040:	06 94       	lsr	r0
    2042:	a1 f7       	brne	.-24     	; 0x202c <__ftoa_engine+0x90>
    2044:	05 90       	lpm	r0, Z+
    2046:	07 94       	ror	r0
    2048:	28 f4       	brcc	.+10     	; 0x2054 <__ftoa_engine+0xb8>
    204a:	f8 0e       	add	r15, r24
    204c:	49 1f       	adc	r20, r25
    204e:	56 1f       	adc	r21, r22
    2050:	c7 1f       	adc	r28, r23
    2052:	d1 1d       	adc	r29, r1
    2054:	88 0f       	add	r24, r24
    2056:	99 1f       	adc	r25, r25
    2058:	66 1f       	adc	r22, r22
    205a:	77 1f       	adc	r23, r23
    205c:	06 94       	lsr	r0
    205e:	a1 f7       	brne	.-24     	; 0x2048 <__ftoa_engine+0xac>
    2060:	05 90       	lpm	r0, Z+
    2062:	07 94       	ror	r0
    2064:	20 f4       	brcc	.+8      	; 0x206e <__ftoa_engine+0xd2>
    2066:	49 0f       	add	r20, r25
    2068:	56 1f       	adc	r21, r22
    206a:	c7 1f       	adc	r28, r23
    206c:	d8 1f       	adc	r29, r24
    206e:	99 0f       	add	r25, r25
    2070:	66 1f       	adc	r22, r22
    2072:	77 1f       	adc	r23, r23
    2074:	88 1f       	adc	r24, r24
    2076:	06 94       	lsr	r0
    2078:	a9 f7       	brne	.-22     	; 0x2064 <__ftoa_engine+0xc8>
    207a:	84 91       	lpm	r24, Z
    207c:	10 95       	com	r17
    207e:	17 70       	andi	r17, 0x07	; 7
    2080:	41 f0       	breq	.+16     	; 0x2092 <__ftoa_engine+0xf6>
    2082:	d6 95       	lsr	r29
    2084:	c7 95       	ror	r28
    2086:	57 95       	ror	r21
    2088:	47 95       	ror	r20
    208a:	f7 94       	ror	r15
    208c:	e7 94       	ror	r14
    208e:	1a 95       	dec	r17
    2090:	c1 f7       	brne	.-16     	; 0x2082 <__ftoa_engine+0xe6>
    2092:	e0 e7       	ldi	r30, 0x70	; 112
    2094:	f0 e0       	ldi	r31, 0x00	; 0
    2096:	68 94       	set
    2098:	15 90       	lpm	r1, Z+
    209a:	15 91       	lpm	r17, Z+
    209c:	35 91       	lpm	r19, Z+
    209e:	65 91       	lpm	r22, Z+
    20a0:	95 91       	lpm	r25, Z+
    20a2:	05 90       	lpm	r0, Z+
    20a4:	7f e2       	ldi	r23, 0x2F	; 47
    20a6:	73 95       	inc	r23
    20a8:	e1 18       	sub	r14, r1
    20aa:	f1 0a       	sbc	r15, r17
    20ac:	43 0b       	sbc	r20, r19
    20ae:	56 0b       	sbc	r21, r22
    20b0:	c9 0b       	sbc	r28, r25
    20b2:	d0 09       	sbc	r29, r0
    20b4:	c0 f7       	brcc	.-16     	; 0x20a6 <__ftoa_engine+0x10a>
    20b6:	e1 0c       	add	r14, r1
    20b8:	f1 1e       	adc	r15, r17
    20ba:	43 1f       	adc	r20, r19
    20bc:	56 1f       	adc	r21, r22
    20be:	c9 1f       	adc	r28, r25
    20c0:	d0 1d       	adc	r29, r0
    20c2:	7e f4       	brtc	.+30     	; 0x20e2 <__ftoa_engine+0x146>
    20c4:	70 33       	cpi	r23, 0x30	; 48
    20c6:	11 f4       	brne	.+4      	; 0x20cc <__ftoa_engine+0x130>
    20c8:	8a 95       	dec	r24
    20ca:	e6 cf       	rjmp	.-52     	; 0x2098 <__ftoa_engine+0xfc>
    20cc:	e8 94       	clt
    20ce:	01 50       	subi	r16, 0x01	; 1
    20d0:	30 f0       	brcs	.+12     	; 0x20de <__ftoa_engine+0x142>
    20d2:	08 0f       	add	r16, r24
    20d4:	0a f4       	brpl	.+2      	; 0x20d8 <__ftoa_engine+0x13c>
    20d6:	00 27       	eor	r16, r16
    20d8:	02 17       	cp	r16, r18
    20da:	08 f4       	brcc	.+2      	; 0x20de <__ftoa_engine+0x142>
    20dc:	20 2f       	mov	r18, r16
    20de:	23 95       	inc	r18
    20e0:	02 2f       	mov	r16, r18
    20e2:	7a 33       	cpi	r23, 0x3A	; 58
    20e4:	28 f0       	brcs	.+10     	; 0x20f0 <__ftoa_engine+0x154>
    20e6:	79 e3       	ldi	r23, 0x39	; 57
    20e8:	7d 93       	st	X+, r23
    20ea:	2a 95       	dec	r18
    20ec:	e9 f7       	brne	.-6      	; 0x20e8 <__ftoa_engine+0x14c>
    20ee:	10 c0       	rjmp	.+32     	; 0x2110 <__ftoa_engine+0x174>
    20f0:	7d 93       	st	X+, r23
    20f2:	2a 95       	dec	r18
    20f4:	89 f6       	brne	.-94     	; 0x2098 <__ftoa_engine+0xfc>
    20f6:	06 94       	lsr	r0
    20f8:	97 95       	ror	r25
    20fa:	67 95       	ror	r22
    20fc:	37 95       	ror	r19
    20fe:	17 95       	ror	r17
    2100:	17 94       	ror	r1
    2102:	e1 18       	sub	r14, r1
    2104:	f1 0a       	sbc	r15, r17
    2106:	43 0b       	sbc	r20, r19
    2108:	56 0b       	sbc	r21, r22
    210a:	c9 0b       	sbc	r28, r25
    210c:	d0 09       	sbc	r29, r0
    210e:	98 f0       	brcs	.+38     	; 0x2136 <__ftoa_engine+0x19a>
    2110:	23 95       	inc	r18
    2112:	7e 91       	ld	r23, -X
    2114:	73 95       	inc	r23
    2116:	7a 33       	cpi	r23, 0x3A	; 58
    2118:	08 f0       	brcs	.+2      	; 0x211c <__ftoa_engine+0x180>
    211a:	70 e3       	ldi	r23, 0x30	; 48
    211c:	7c 93       	st	X, r23
    211e:	20 13       	cpse	r18, r16
    2120:	b8 f7       	brcc	.-18     	; 0x2110 <__ftoa_engine+0x174>
    2122:	7e 91       	ld	r23, -X
    2124:	70 61       	ori	r23, 0x10	; 16
    2126:	7d 93       	st	X+, r23
    2128:	30 f0       	brcs	.+12     	; 0x2136 <__ftoa_engine+0x19a>
    212a:	83 95       	inc	r24
    212c:	71 e3       	ldi	r23, 0x31	; 49
    212e:	7d 93       	st	X+, r23
    2130:	70 e3       	ldi	r23, 0x30	; 48
    2132:	2a 95       	dec	r18
    2134:	e1 f7       	brne	.-8      	; 0x212e <__ftoa_engine+0x192>
    2136:	11 24       	eor	r1, r1
    2138:	ef 90       	pop	r14
    213a:	ff 90       	pop	r15
    213c:	0f 91       	pop	r16
    213e:	1f 91       	pop	r17
    2140:	cf 91       	pop	r28
    2142:	df 91       	pop	r29
    2144:	99 27       	eor	r25, r25
    2146:	87 fd       	sbrc	r24, 7
    2148:	90 95       	com	r25
    214a:	08 95       	ret

0000214c <strnlen_P>:
    214c:	fc 01       	movw	r30, r24
    214e:	05 90       	lpm	r0, Z+
    2150:	61 50       	subi	r22, 0x01	; 1
    2152:	70 40       	sbci	r23, 0x00	; 0
    2154:	01 10       	cpse	r0, r1
    2156:	d8 f7       	brcc	.-10     	; 0x214e <strnlen_P+0x2>
    2158:	80 95       	com	r24
    215a:	90 95       	com	r25
    215c:	8e 0f       	add	r24, r30
    215e:	9f 1f       	adc	r25, r31
    2160:	08 95       	ret

00002162 <memset>:
    2162:	dc 01       	movw	r26, r24
    2164:	01 c0       	rjmp	.+2      	; 0x2168 <memset+0x6>
    2166:	6d 93       	st	X+, r22
    2168:	41 50       	subi	r20, 0x01	; 1
    216a:	50 40       	sbci	r21, 0x00	; 0
    216c:	e0 f7       	brcc	.-8      	; 0x2166 <memset+0x4>
    216e:	08 95       	ret

00002170 <strcat>:
    2170:	fb 01       	movw	r30, r22
    2172:	dc 01       	movw	r26, r24
    2174:	0d 90       	ld	r0, X+
    2176:	00 20       	and	r0, r0
    2178:	e9 f7       	brne	.-6      	; 0x2174 <strcat+0x4>
    217a:	11 97       	sbiw	r26, 0x01	; 1
    217c:	01 90       	ld	r0, Z+
    217e:	0d 92       	st	X+, r0
    2180:	00 20       	and	r0, r0
    2182:	e1 f7       	brne	.-8      	; 0x217c <strcat+0xc>
    2184:	08 95       	ret

00002186 <strnlen>:
    2186:	fc 01       	movw	r30, r24
    2188:	61 50       	subi	r22, 0x01	; 1
    218a:	70 40       	sbci	r23, 0x00	; 0
    218c:	01 90       	ld	r0, Z+
    218e:	01 10       	cpse	r0, r1
    2190:	d8 f7       	brcc	.-10     	; 0x2188 <strnlen+0x2>
    2192:	80 95       	com	r24
    2194:	90 95       	com	r25
    2196:	8e 0f       	add	r24, r30
    2198:	9f 1f       	adc	r25, r31
    219a:	08 95       	ret

0000219c <fputc>:
    219c:	0f 93       	push	r16
    219e:	1f 93       	push	r17
    21a0:	cf 93       	push	r28
    21a2:	df 93       	push	r29
    21a4:	fb 01       	movw	r30, r22
    21a6:	23 81       	ldd	r18, Z+3	; 0x03
    21a8:	21 fd       	sbrc	r18, 1
    21aa:	03 c0       	rjmp	.+6      	; 0x21b2 <fputc+0x16>
    21ac:	8f ef       	ldi	r24, 0xFF	; 255
    21ae:	9f ef       	ldi	r25, 0xFF	; 255
    21b0:	2c c0       	rjmp	.+88     	; 0x220a <fputc+0x6e>
    21b2:	22 ff       	sbrs	r18, 2
    21b4:	16 c0       	rjmp	.+44     	; 0x21e2 <fputc+0x46>
    21b6:	46 81       	ldd	r20, Z+6	; 0x06
    21b8:	57 81       	ldd	r21, Z+7	; 0x07
    21ba:	24 81       	ldd	r18, Z+4	; 0x04
    21bc:	35 81       	ldd	r19, Z+5	; 0x05
    21be:	42 17       	cp	r20, r18
    21c0:	53 07       	cpc	r21, r19
    21c2:	44 f4       	brge	.+16     	; 0x21d4 <fputc+0x38>
    21c4:	a0 81       	ld	r26, Z
    21c6:	b1 81       	ldd	r27, Z+1	; 0x01
    21c8:	9d 01       	movw	r18, r26
    21ca:	2f 5f       	subi	r18, 0xFF	; 255
    21cc:	3f 4f       	sbci	r19, 0xFF	; 255
    21ce:	31 83       	std	Z+1, r19	; 0x01
    21d0:	20 83       	st	Z, r18
    21d2:	8c 93       	st	X, r24
    21d4:	26 81       	ldd	r18, Z+6	; 0x06
    21d6:	37 81       	ldd	r19, Z+7	; 0x07
    21d8:	2f 5f       	subi	r18, 0xFF	; 255
    21da:	3f 4f       	sbci	r19, 0xFF	; 255
    21dc:	37 83       	std	Z+7, r19	; 0x07
    21de:	26 83       	std	Z+6, r18	; 0x06
    21e0:	14 c0       	rjmp	.+40     	; 0x220a <fputc+0x6e>
    21e2:	8b 01       	movw	r16, r22
    21e4:	ec 01       	movw	r28, r24
    21e6:	fb 01       	movw	r30, r22
    21e8:	00 84       	ldd	r0, Z+8	; 0x08
    21ea:	f1 85       	ldd	r31, Z+9	; 0x09
    21ec:	e0 2d       	mov	r30, r0
    21ee:	09 95       	icall
    21f0:	89 2b       	or	r24, r25
    21f2:	e1 f6       	brne	.-72     	; 0x21ac <fputc+0x10>
    21f4:	d8 01       	movw	r26, r16
    21f6:	16 96       	adiw	r26, 0x06	; 6
    21f8:	8d 91       	ld	r24, X+
    21fa:	9c 91       	ld	r25, X
    21fc:	17 97       	sbiw	r26, 0x07	; 7
    21fe:	01 96       	adiw	r24, 0x01	; 1
    2200:	17 96       	adiw	r26, 0x07	; 7
    2202:	9c 93       	st	X, r25
    2204:	8e 93       	st	-X, r24
    2206:	16 97       	sbiw	r26, 0x06	; 6
    2208:	ce 01       	movw	r24, r28
    220a:	df 91       	pop	r29
    220c:	cf 91       	pop	r28
    220e:	1f 91       	pop	r17
    2210:	0f 91       	pop	r16
    2212:	08 95       	ret

00002214 <sprintf>:
    2214:	ae e0       	ldi	r26, 0x0E	; 14
    2216:	b0 e0       	ldi	r27, 0x00	; 0
    2218:	e0 e1       	ldi	r30, 0x10	; 16
    221a:	f1 e1       	ldi	r31, 0x11	; 17
    221c:	0c 94 a5 0f 	jmp	0x1f4a	; 0x1f4a <__prologue_saves__+0x1c>
    2220:	0d 89       	ldd	r16, Y+21	; 0x15
    2222:	1e 89       	ldd	r17, Y+22	; 0x16
    2224:	86 e0       	ldi	r24, 0x06	; 6
    2226:	8c 83       	std	Y+4, r24	; 0x04
    2228:	1a 83       	std	Y+2, r17	; 0x02
    222a:	09 83       	std	Y+1, r16	; 0x01
    222c:	8f ef       	ldi	r24, 0xFF	; 255
    222e:	9f e7       	ldi	r25, 0x7F	; 127
    2230:	9e 83       	std	Y+6, r25	; 0x06
    2232:	8d 83       	std	Y+5, r24	; 0x05
    2234:	ae 01       	movw	r20, r28
    2236:	47 5e       	subi	r20, 0xE7	; 231
    2238:	5f 4f       	sbci	r21, 0xFF	; 255
    223a:	6f 89       	ldd	r22, Y+23	; 0x17
    223c:	78 8d       	ldd	r23, Y+24	; 0x18
    223e:	ce 01       	movw	r24, r28
    2240:	01 96       	adiw	r24, 0x01	; 1
    2242:	0e 94 1a 0c 	call	0x1834	; 0x1834 <vfprintf>
    2246:	ef 81       	ldd	r30, Y+7	; 0x07
    2248:	f8 85       	ldd	r31, Y+8	; 0x08
    224a:	e0 0f       	add	r30, r16
    224c:	f1 1f       	adc	r31, r17
    224e:	10 82       	st	Z, r1
    2250:	2e 96       	adiw	r28, 0x0e	; 14
    2252:	e4 e0       	ldi	r30, 0x04	; 4
    2254:	0c 94 c1 0f 	jmp	0x1f82	; 0x1f82 <__epilogue_restores__+0x1c>

00002258 <sscanf>:
    2258:	ae e0       	ldi	r26, 0x0E	; 14
    225a:	b0 e0       	ldi	r27, 0x00	; 0
    225c:	e2 e3       	ldi	r30, 0x32	; 50
    225e:	f1 e1       	ldi	r31, 0x11	; 17
    2260:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__prologue_saves__+0x20>
    2264:	85 e0       	ldi	r24, 0x05	; 5
    2266:	8c 83       	std	Y+4, r24	; 0x04
    2268:	8b 89       	ldd	r24, Y+19	; 0x13
    226a:	9c 89       	ldd	r25, Y+20	; 0x14
    226c:	9a 83       	std	Y+2, r25	; 0x02
    226e:	89 83       	std	Y+1, r24	; 0x01
    2270:	ae 01       	movw	r20, r28
    2272:	49 5e       	subi	r20, 0xE9	; 233
    2274:	5f 4f       	sbci	r21, 0xFF	; 255
    2276:	6d 89       	ldd	r22, Y+21	; 0x15
    2278:	7e 89       	ldd	r23, Y+22	; 0x16
    227a:	ce 01       	movw	r24, r28
    227c:	01 96       	adiw	r24, 0x01	; 1
    227e:	0e 94 3f 13 	call	0x267e	; 0x267e <vfscanf>
    2282:	2e 96       	adiw	r28, 0x0e	; 14
    2284:	e2 e0       	ldi	r30, 0x02	; 2
    2286:	0c 94 c3 0f 	jmp	0x1f86	; 0x1f86 <__epilogue_restores__+0x20>

0000228a <__ultoa_invert>:
    228a:	fa 01       	movw	r30, r20
    228c:	aa 27       	eor	r26, r26
    228e:	28 30       	cpi	r18, 0x08	; 8
    2290:	51 f1       	breq	.+84     	; 0x22e6 <__ultoa_invert+0x5c>
    2292:	20 31       	cpi	r18, 0x10	; 16
    2294:	81 f1       	breq	.+96     	; 0x22f6 <__ultoa_invert+0x6c>
    2296:	e8 94       	clt
    2298:	6f 93       	push	r22
    229a:	6e 7f       	andi	r22, 0xFE	; 254
    229c:	6e 5f       	subi	r22, 0xFE	; 254
    229e:	7f 4f       	sbci	r23, 0xFF	; 255
    22a0:	8f 4f       	sbci	r24, 0xFF	; 255
    22a2:	9f 4f       	sbci	r25, 0xFF	; 255
    22a4:	af 4f       	sbci	r26, 0xFF	; 255
    22a6:	b1 e0       	ldi	r27, 0x01	; 1
    22a8:	3e d0       	rcall	.+124    	; 0x2326 <__ultoa_invert+0x9c>
    22aa:	b4 e0       	ldi	r27, 0x04	; 4
    22ac:	3c d0       	rcall	.+120    	; 0x2326 <__ultoa_invert+0x9c>
    22ae:	67 0f       	add	r22, r23
    22b0:	78 1f       	adc	r23, r24
    22b2:	89 1f       	adc	r24, r25
    22b4:	9a 1f       	adc	r25, r26
    22b6:	a1 1d       	adc	r26, r1
    22b8:	68 0f       	add	r22, r24
    22ba:	79 1f       	adc	r23, r25
    22bc:	8a 1f       	adc	r24, r26
    22be:	91 1d       	adc	r25, r1
    22c0:	a1 1d       	adc	r26, r1
    22c2:	6a 0f       	add	r22, r26
    22c4:	71 1d       	adc	r23, r1
    22c6:	81 1d       	adc	r24, r1
    22c8:	91 1d       	adc	r25, r1
    22ca:	a1 1d       	adc	r26, r1
    22cc:	20 d0       	rcall	.+64     	; 0x230e <__ultoa_invert+0x84>
    22ce:	09 f4       	brne	.+2      	; 0x22d2 <__ultoa_invert+0x48>
    22d0:	68 94       	set
    22d2:	3f 91       	pop	r19
    22d4:	2a e0       	ldi	r18, 0x0A	; 10
    22d6:	26 9f       	mul	r18, r22
    22d8:	11 24       	eor	r1, r1
    22da:	30 19       	sub	r19, r0
    22dc:	30 5d       	subi	r19, 0xD0	; 208
    22de:	31 93       	st	Z+, r19
    22e0:	de f6       	brtc	.-74     	; 0x2298 <__ultoa_invert+0xe>
    22e2:	cf 01       	movw	r24, r30
    22e4:	08 95       	ret
    22e6:	46 2f       	mov	r20, r22
    22e8:	47 70       	andi	r20, 0x07	; 7
    22ea:	40 5d       	subi	r20, 0xD0	; 208
    22ec:	41 93       	st	Z+, r20
    22ee:	b3 e0       	ldi	r27, 0x03	; 3
    22f0:	0f d0       	rcall	.+30     	; 0x2310 <__ultoa_invert+0x86>
    22f2:	c9 f7       	brne	.-14     	; 0x22e6 <__ultoa_invert+0x5c>
    22f4:	f6 cf       	rjmp	.-20     	; 0x22e2 <__ultoa_invert+0x58>
    22f6:	46 2f       	mov	r20, r22
    22f8:	4f 70       	andi	r20, 0x0F	; 15
    22fa:	40 5d       	subi	r20, 0xD0	; 208
    22fc:	4a 33       	cpi	r20, 0x3A	; 58
    22fe:	18 f0       	brcs	.+6      	; 0x2306 <__ultoa_invert+0x7c>
    2300:	49 5d       	subi	r20, 0xD9	; 217
    2302:	31 fd       	sbrc	r19, 1
    2304:	40 52       	subi	r20, 0x20	; 32
    2306:	41 93       	st	Z+, r20
    2308:	02 d0       	rcall	.+4      	; 0x230e <__ultoa_invert+0x84>
    230a:	a9 f7       	brne	.-22     	; 0x22f6 <__ultoa_invert+0x6c>
    230c:	ea cf       	rjmp	.-44     	; 0x22e2 <__ultoa_invert+0x58>
    230e:	b4 e0       	ldi	r27, 0x04	; 4
    2310:	a6 95       	lsr	r26
    2312:	97 95       	ror	r25
    2314:	87 95       	ror	r24
    2316:	77 95       	ror	r23
    2318:	67 95       	ror	r22
    231a:	ba 95       	dec	r27
    231c:	c9 f7       	brne	.-14     	; 0x2310 <__ultoa_invert+0x86>
    231e:	00 97       	sbiw	r24, 0x00	; 0
    2320:	61 05       	cpc	r22, r1
    2322:	71 05       	cpc	r23, r1
    2324:	08 95       	ret
    2326:	9b 01       	movw	r18, r22
    2328:	ac 01       	movw	r20, r24
    232a:	0a 2e       	mov	r0, r26
    232c:	06 94       	lsr	r0
    232e:	57 95       	ror	r21
    2330:	47 95       	ror	r20
    2332:	37 95       	ror	r19
    2334:	27 95       	ror	r18
    2336:	ba 95       	dec	r27
    2338:	c9 f7       	brne	.-14     	; 0x232c <__ultoa_invert+0xa2>
    233a:	62 0f       	add	r22, r18
    233c:	73 1f       	adc	r23, r19
    233e:	84 1f       	adc	r24, r20
    2340:	95 1f       	adc	r25, r21
    2342:	a0 1d       	adc	r26, r0
    2344:	08 95       	ret

00002346 <putval>:
    2346:	20 fd       	sbrc	r18, 0
    2348:	09 c0       	rjmp	.+18     	; 0x235c <putval+0x16>
    234a:	fc 01       	movw	r30, r24
    234c:	23 fd       	sbrc	r18, 3
    234e:	05 c0       	rjmp	.+10     	; 0x235a <putval+0x14>
    2350:	22 ff       	sbrs	r18, 2
    2352:	02 c0       	rjmp	.+4      	; 0x2358 <putval+0x12>
    2354:	73 83       	std	Z+3, r23	; 0x03
    2356:	62 83       	std	Z+2, r22	; 0x02
    2358:	51 83       	std	Z+1, r21	; 0x01
    235a:	40 83       	st	Z, r20
    235c:	08 95       	ret

0000235e <mulacc>:
    235e:	44 fd       	sbrc	r20, 4
    2360:	17 c0       	rjmp	.+46     	; 0x2390 <mulacc+0x32>
    2362:	46 fd       	sbrc	r20, 6
    2364:	17 c0       	rjmp	.+46     	; 0x2394 <mulacc+0x36>
    2366:	ab 01       	movw	r20, r22
    2368:	bc 01       	movw	r22, r24
    236a:	da 01       	movw	r26, r20
    236c:	fb 01       	movw	r30, r22
    236e:	aa 0f       	add	r26, r26
    2370:	bb 1f       	adc	r27, r27
    2372:	ee 1f       	adc	r30, r30
    2374:	ff 1f       	adc	r31, r31
    2376:	10 94       	com	r1
    2378:	d1 f7       	brne	.-12     	; 0x236e <mulacc+0x10>
    237a:	4a 0f       	add	r20, r26
    237c:	5b 1f       	adc	r21, r27
    237e:	6e 1f       	adc	r22, r30
    2380:	7f 1f       	adc	r23, r31
    2382:	cb 01       	movw	r24, r22
    2384:	ba 01       	movw	r22, r20
    2386:	66 0f       	add	r22, r22
    2388:	77 1f       	adc	r23, r23
    238a:	88 1f       	adc	r24, r24
    238c:	99 1f       	adc	r25, r25
    238e:	09 c0       	rjmp	.+18     	; 0x23a2 <mulacc+0x44>
    2390:	33 e0       	ldi	r19, 0x03	; 3
    2392:	01 c0       	rjmp	.+2      	; 0x2396 <mulacc+0x38>
    2394:	34 e0       	ldi	r19, 0x04	; 4
    2396:	66 0f       	add	r22, r22
    2398:	77 1f       	adc	r23, r23
    239a:	88 1f       	adc	r24, r24
    239c:	99 1f       	adc	r25, r25
    239e:	31 50       	subi	r19, 0x01	; 1
    23a0:	d1 f7       	brne	.-12     	; 0x2396 <mulacc+0x38>
    23a2:	62 0f       	add	r22, r18
    23a4:	71 1d       	adc	r23, r1
    23a6:	81 1d       	adc	r24, r1
    23a8:	91 1d       	adc	r25, r1
    23aa:	08 95       	ret

000023ac <skip_spaces>:
    23ac:	0f 93       	push	r16
    23ae:	1f 93       	push	r17
    23b0:	cf 93       	push	r28
    23b2:	df 93       	push	r29
    23b4:	8c 01       	movw	r16, r24
    23b6:	c8 01       	movw	r24, r16
    23b8:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    23bc:	ec 01       	movw	r28, r24
    23be:	97 fd       	sbrc	r25, 7
    23c0:	08 c0       	rjmp	.+16     	; 0x23d2 <skip_spaces+0x26>
    23c2:	0e 94 50 14 	call	0x28a0	; 0x28a0 <isspace>
    23c6:	89 2b       	or	r24, r25
    23c8:	b1 f7       	brne	.-20     	; 0x23b6 <skip_spaces+0xa>
    23ca:	b8 01       	movw	r22, r16
    23cc:	ce 01       	movw	r24, r28
    23ce:	0e 94 a2 14 	call	0x2944	; 0x2944 <ungetc>
    23d2:	ce 01       	movw	r24, r28
    23d4:	df 91       	pop	r29
    23d6:	cf 91       	pop	r28
    23d8:	1f 91       	pop	r17
    23da:	0f 91       	pop	r16
    23dc:	08 95       	ret

000023de <conv_int>:
    23de:	8f 92       	push	r8
    23e0:	9f 92       	push	r9
    23e2:	af 92       	push	r10
    23e4:	bf 92       	push	r11
    23e6:	ef 92       	push	r14
    23e8:	ff 92       	push	r15
    23ea:	0f 93       	push	r16
    23ec:	1f 93       	push	r17
    23ee:	cf 93       	push	r28
    23f0:	df 93       	push	r29
    23f2:	8c 01       	movw	r16, r24
    23f4:	d6 2f       	mov	r29, r22
    23f6:	7a 01       	movw	r14, r20
    23f8:	b2 2e       	mov	r11, r18
    23fa:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    23fe:	9c 01       	movw	r18, r24
    2400:	33 27       	eor	r19, r19
    2402:	2b 32       	cpi	r18, 0x2B	; 43
    2404:	31 05       	cpc	r19, r1
    2406:	31 f0       	breq	.+12     	; 0x2414 <conv_int+0x36>
    2408:	2d 32       	cpi	r18, 0x2D	; 45
    240a:	31 05       	cpc	r19, r1
    240c:	61 f4       	brne	.+24     	; 0x2426 <conv_int+0x48>
    240e:	8b 2d       	mov	r24, r11
    2410:	80 68       	ori	r24, 0x80	; 128
    2412:	b8 2e       	mov	r11, r24
    2414:	d1 50       	subi	r29, 0x01	; 1
    2416:	11 f4       	brne	.+4      	; 0x241c <conv_int+0x3e>
    2418:	80 e0       	ldi	r24, 0x00	; 0
    241a:	68 c0       	rjmp	.+208    	; 0x24ec <conv_int+0x10e>
    241c:	c8 01       	movw	r24, r16
    241e:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    2422:	97 fd       	sbrc	r25, 7
    2424:	f9 cf       	rjmp	.-14     	; 0x2418 <conv_int+0x3a>
    2426:	cb 2d       	mov	r28, r11
    2428:	cd 7f       	andi	r28, 0xFD	; 253
    242a:	2b 2d       	mov	r18, r11
    242c:	20 73       	andi	r18, 0x30	; 48
    242e:	09 f5       	brne	.+66     	; 0x2472 <conv_int+0x94>
    2430:	80 33       	cpi	r24, 0x30	; 48
    2432:	f9 f4       	brne	.+62     	; 0x2472 <conv_int+0x94>
    2434:	aa 24       	eor	r10, r10
    2436:	aa 94       	dec	r10
    2438:	ad 0e       	add	r10, r29
    243a:	09 f4       	brne	.+2      	; 0x243e <conv_int+0x60>
    243c:	43 c0       	rjmp	.+134    	; 0x24c4 <conv_int+0xe6>
    243e:	c8 01       	movw	r24, r16
    2440:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    2444:	97 fd       	sbrc	r25, 7
    2446:	3e c0       	rjmp	.+124    	; 0x24c4 <conv_int+0xe6>
    2448:	9c 01       	movw	r18, r24
    244a:	2f 7d       	andi	r18, 0xDF	; 223
    244c:	33 27       	eor	r19, r19
    244e:	28 35       	cpi	r18, 0x58	; 88
    2450:	31 05       	cpc	r19, r1
    2452:	49 f4       	brne	.+18     	; 0x2466 <conv_int+0x88>
    2454:	c2 64       	ori	r28, 0x42	; 66
    2456:	d2 50       	subi	r29, 0x02	; 2
    2458:	a9 f1       	breq	.+106    	; 0x24c4 <conv_int+0xe6>
    245a:	c8 01       	movw	r24, r16
    245c:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    2460:	97 ff       	sbrs	r25, 7
    2462:	07 c0       	rjmp	.+14     	; 0x2472 <conv_int+0x94>
    2464:	2f c0       	rjmp	.+94     	; 0x24c4 <conv_int+0xe6>
    2466:	b6 fe       	sbrs	r11, 6
    2468:	02 c0       	rjmp	.+4      	; 0x246e <conv_int+0x90>
    246a:	c2 60       	ori	r28, 0x02	; 2
    246c:	01 c0       	rjmp	.+2      	; 0x2470 <conv_int+0x92>
    246e:	c2 61       	ori	r28, 0x12	; 18
    2470:	da 2d       	mov	r29, r10
    2472:	81 2c       	mov	r8, r1
    2474:	91 2c       	mov	r9, r1
    2476:	54 01       	movw	r10, r8
    2478:	20 ed       	ldi	r18, 0xD0	; 208
    247a:	28 0f       	add	r18, r24
    247c:	28 30       	cpi	r18, 0x08	; 8
    247e:	80 f0       	brcs	.+32     	; 0x24a0 <conv_int+0xc2>
    2480:	c4 ff       	sbrs	r28, 4
    2482:	04 c0       	rjmp	.+8      	; 0x248c <conv_int+0xae>
    2484:	b8 01       	movw	r22, r16
    2486:	0e 94 a2 14 	call	0x2944	; 0x2944 <ungetc>
    248a:	19 c0       	rjmp	.+50     	; 0x24be <conv_int+0xe0>
    248c:	2a 30       	cpi	r18, 0x0A	; 10
    248e:	40 f0       	brcs	.+16     	; 0x24a0 <conv_int+0xc2>
    2490:	c6 ff       	sbrs	r28, 6
    2492:	f8 cf       	rjmp	.-16     	; 0x2484 <conv_int+0xa6>
    2494:	2f 7d       	andi	r18, 0xDF	; 223
    2496:	3f ee       	ldi	r19, 0xEF	; 239
    2498:	32 0f       	add	r19, r18
    249a:	36 30       	cpi	r19, 0x06	; 6
    249c:	98 f7       	brcc	.-26     	; 0x2484 <conv_int+0xa6>
    249e:	27 50       	subi	r18, 0x07	; 7
    24a0:	4c 2f       	mov	r20, r28
    24a2:	c5 01       	movw	r24, r10
    24a4:	b4 01       	movw	r22, r8
    24a6:	0e 94 af 11 	call	0x235e	; 0x235e <mulacc>
    24aa:	4b 01       	movw	r8, r22
    24ac:	5c 01       	movw	r10, r24
    24ae:	c2 60       	ori	r28, 0x02	; 2
    24b0:	d1 50       	subi	r29, 0x01	; 1
    24b2:	59 f0       	breq	.+22     	; 0x24ca <conv_int+0xec>
    24b4:	c8 01       	movw	r24, r16
    24b6:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    24ba:	97 ff       	sbrs	r25, 7
    24bc:	dd cf       	rjmp	.-70     	; 0x2478 <conv_int+0x9a>
    24be:	c1 fd       	sbrc	r28, 1
    24c0:	04 c0       	rjmp	.+8      	; 0x24ca <conv_int+0xec>
    24c2:	aa cf       	rjmp	.-172    	; 0x2418 <conv_int+0x3a>
    24c4:	81 2c       	mov	r8, r1
    24c6:	91 2c       	mov	r9, r1
    24c8:	54 01       	movw	r10, r8
    24ca:	c7 ff       	sbrs	r28, 7
    24cc:	08 c0       	rjmp	.+16     	; 0x24de <conv_int+0x100>
    24ce:	b0 94       	com	r11
    24d0:	a0 94       	com	r10
    24d2:	90 94       	com	r9
    24d4:	80 94       	com	r8
    24d6:	81 1c       	adc	r8, r1
    24d8:	91 1c       	adc	r9, r1
    24da:	a1 1c       	adc	r10, r1
    24dc:	b1 1c       	adc	r11, r1
    24de:	2c 2f       	mov	r18, r28
    24e0:	b5 01       	movw	r22, r10
    24e2:	a4 01       	movw	r20, r8
    24e4:	c7 01       	movw	r24, r14
    24e6:	0e 94 a3 11 	call	0x2346	; 0x2346 <putval>
    24ea:	81 e0       	ldi	r24, 0x01	; 1
    24ec:	df 91       	pop	r29
    24ee:	cf 91       	pop	r28
    24f0:	1f 91       	pop	r17
    24f2:	0f 91       	pop	r16
    24f4:	ff 90       	pop	r15
    24f6:	ef 90       	pop	r14
    24f8:	bf 90       	pop	r11
    24fa:	af 90       	pop	r10
    24fc:	9f 90       	pop	r9
    24fe:	8f 90       	pop	r8
    2500:	08 95       	ret

00002502 <conv_brk>:
    2502:	a0 e2       	ldi	r26, 0x20	; 32
    2504:	b0 e0       	ldi	r27, 0x00	; 0
    2506:	e7 e8       	ldi	r30, 0x87	; 135
    2508:	f2 e1       	ldi	r31, 0x12	; 18
    250a:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <__prologue_saves__+0x6>
    250e:	5c 01       	movw	r10, r24
    2510:	96 2e       	mov	r9, r22
    2512:	7a 01       	movw	r14, r20
    2514:	f9 01       	movw	r30, r18
    2516:	8e 01       	movw	r16, r28
    2518:	0f 5f       	subi	r16, 0xFF	; 255
    251a:	1f 4f       	sbci	r17, 0xFF	; 255
    251c:	68 01       	movw	r12, r16
    251e:	80 e2       	ldi	r24, 0x20	; 32
    2520:	d8 01       	movw	r26, r16
    2522:	1d 92       	st	X+, r1
    2524:	8a 95       	dec	r24
    2526:	e9 f7       	brne	.-6      	; 0x2522 <conv_brk+0x20>
    2528:	d5 01       	movw	r26, r10
    252a:	13 96       	adiw	r26, 0x03	; 3
    252c:	8c 90       	ld	r8, X
    252e:	80 e0       	ldi	r24, 0x00	; 0
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	61 2c       	mov	r6, r1
    2534:	71 2c       	mov	r7, r1
    2536:	30 e0       	ldi	r19, 0x00	; 0
    2538:	61 e0       	ldi	r22, 0x01	; 1
    253a:	70 e0       	ldi	r23, 0x00	; 0
    253c:	83 fc       	sbrc	r8, 3
    253e:	25 91       	lpm	r18, Z+
    2540:	83 fe       	sbrs	r8, 3
    2542:	21 91       	ld	r18, Z+
    2544:	8f 01       	movw	r16, r30
    2546:	52 2e       	mov	r5, r18
    2548:	21 11       	cpse	r18, r1
    254a:	03 c0       	rjmp	.+6      	; 0x2552 <conv_brk+0x50>
    254c:	80 e0       	ldi	r24, 0x00	; 0
    254e:	90 e0       	ldi	r25, 0x00	; 0
    2550:	92 c0       	rjmp	.+292    	; 0x2676 <conv_brk+0x174>
    2552:	2e 35       	cpi	r18, 0x5E	; 94
    2554:	11 f4       	brne	.+4      	; 0x255a <conv_brk+0x58>
    2556:	00 97       	sbiw	r24, 0x00	; 0
    2558:	51 f1       	breq	.+84     	; 0x25ae <conv_brk+0xac>
    255a:	43 2f       	mov	r20, r19
    255c:	50 e0       	ldi	r21, 0x00	; 0
    255e:	48 17       	cp	r20, r24
    2560:	59 07       	cpc	r21, r25
    2562:	3c f4       	brge	.+14     	; 0x2572 <conv_brk+0x70>
    2564:	2d 35       	cpi	r18, 0x5D	; 93
    2566:	59 f1       	breq	.+86     	; 0x25be <conv_brk+0xbc>
    2568:	2d 32       	cpi	r18, 0x2D	; 45
    256a:	19 f4       	brne	.+6      	; 0x2572 <conv_brk+0x70>
    256c:	77 20       	and	r7, r7
    256e:	09 f1       	breq	.+66     	; 0x25b2 <conv_brk+0xb0>
    2570:	03 c0       	rjmp	.+6      	; 0x2578 <conv_brk+0x76>
    2572:	77 20       	and	r7, r7
    2574:	09 f4       	brne	.+2      	; 0x2578 <conv_brk+0x76>
    2576:	6a c0       	rjmp	.+212    	; 0x264c <conv_brk+0x14a>
    2578:	45 2d       	mov	r20, r5
    257a:	46 95       	lsr	r20
    257c:	46 95       	lsr	r20
    257e:	46 95       	lsr	r20
    2580:	d6 01       	movw	r26, r12
    2582:	a4 0f       	add	r26, r20
    2584:	b1 1d       	adc	r27, r1
    2586:	45 2d       	mov	r20, r5
    2588:	47 70       	andi	r20, 0x07	; 7
    258a:	8b 01       	movw	r16, r22
    258c:	02 c0       	rjmp	.+4      	; 0x2592 <conv_brk+0x90>
    258e:	00 0f       	add	r16, r16
    2590:	11 1f       	adc	r17, r17
    2592:	4a 95       	dec	r20
    2594:	e2 f7       	brpl	.-8      	; 0x258e <conv_brk+0x8c>
    2596:	a8 01       	movw	r20, r16
    2598:	5c 91       	ld	r21, X
    259a:	45 2b       	or	r20, r21
    259c:	4c 93       	st	X, r20
    259e:	65 14       	cp	r6, r5
    25a0:	59 f0       	breq	.+22     	; 0x25b8 <conv_brk+0xb6>
    25a2:	56 14       	cp	r5, r6
    25a4:	10 f4       	brcc	.+4      	; 0x25aa <conv_brk+0xa8>
    25a6:	53 94       	inc	r5
    25a8:	e7 cf       	rjmp	.-50     	; 0x2578 <conv_brk+0x76>
    25aa:	5a 94       	dec	r5
    25ac:	e5 cf       	rjmp	.-54     	; 0x2578 <conv_brk+0x76>
    25ae:	31 e0       	ldi	r19, 0x01	; 1
    25b0:	04 c0       	rjmp	.+8      	; 0x25ba <conv_brk+0xb8>
    25b2:	77 24       	eor	r7, r7
    25b4:	73 94       	inc	r7
    25b6:	01 c0       	rjmp	.+2      	; 0x25ba <conv_brk+0xb8>
    25b8:	71 2c       	mov	r7, r1
    25ba:	01 96       	adiw	r24, 0x01	; 1
    25bc:	bf cf       	rjmp	.-130    	; 0x253c <conv_brk+0x3a>
    25be:	77 20       	and	r7, r7
    25c0:	19 f0       	breq	.+6      	; 0x25c8 <conv_brk+0xc6>
    25c2:	8e 81       	ldd	r24, Y+6	; 0x06
    25c4:	80 62       	ori	r24, 0x20	; 32
    25c6:	8e 83       	std	Y+6, r24	; 0x06
    25c8:	31 11       	cpse	r19, r1
    25ca:	03 c0       	rjmp	.+6      	; 0x25d2 <conv_brk+0xd0>
    25cc:	88 24       	eor	r8, r8
    25ce:	83 94       	inc	r8
    25d0:	17 c0       	rjmp	.+46     	; 0x2600 <conv_brk+0xfe>
    25d2:	f6 01       	movw	r30, r12
    25d4:	9e 01       	movw	r18, r28
    25d6:	2f 5d       	subi	r18, 0xDF	; 223
    25d8:	3f 4f       	sbci	r19, 0xFF	; 255
    25da:	80 81       	ld	r24, Z
    25dc:	80 95       	com	r24
    25de:	81 93       	st	Z+, r24
    25e0:	2e 17       	cp	r18, r30
    25e2:	3f 07       	cpc	r19, r31
    25e4:	d1 f7       	brne	.-12     	; 0x25da <conv_brk+0xd8>
    25e6:	f2 cf       	rjmp	.-28     	; 0x25cc <conv_brk+0xca>
    25e8:	e1 14       	cp	r14, r1
    25ea:	f1 04       	cpc	r15, r1
    25ec:	29 f0       	breq	.+10     	; 0x25f8 <conv_brk+0xf6>
    25ee:	d7 01       	movw	r26, r14
    25f0:	8c 93       	st	X, r24
    25f2:	f7 01       	movw	r30, r14
    25f4:	31 96       	adiw	r30, 0x01	; 1
    25f6:	7f 01       	movw	r14, r30
    25f8:	9a 94       	dec	r9
    25fa:	81 2c       	mov	r8, r1
    25fc:	99 20       	and	r9, r9
    25fe:	f9 f0       	breq	.+62     	; 0x263e <conv_brk+0x13c>
    2600:	c5 01       	movw	r24, r10
    2602:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    2606:	97 fd       	sbrc	r25, 7
    2608:	18 c0       	rjmp	.+48     	; 0x263a <conv_brk+0x138>
    260a:	fc 01       	movw	r30, r24
    260c:	ff 27       	eor	r31, r31
    260e:	23 e0       	ldi	r18, 0x03	; 3
    2610:	f5 95       	asr	r31
    2612:	e7 95       	ror	r30
    2614:	2a 95       	dec	r18
    2616:	e1 f7       	brne	.-8      	; 0x2610 <conv_brk+0x10e>
    2618:	ec 0d       	add	r30, r12
    261a:	fd 1d       	adc	r31, r13
    261c:	20 81       	ld	r18, Z
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	ac 01       	movw	r20, r24
    2622:	47 70       	andi	r20, 0x07	; 7
    2624:	55 27       	eor	r21, r21
    2626:	02 c0       	rjmp	.+4      	; 0x262c <conv_brk+0x12a>
    2628:	35 95       	asr	r19
    262a:	27 95       	ror	r18
    262c:	4a 95       	dec	r20
    262e:	e2 f7       	brpl	.-8      	; 0x2628 <conv_brk+0x126>
    2630:	20 fd       	sbrc	r18, 0
    2632:	da cf       	rjmp	.-76     	; 0x25e8 <conv_brk+0xe6>
    2634:	b5 01       	movw	r22, r10
    2636:	0e 94 a2 14 	call	0x2944	; 0x2944 <ungetc>
    263a:	81 10       	cpse	r8, r1
    263c:	87 cf       	rjmp	.-242    	; 0x254c <conv_brk+0x4a>
    263e:	e1 14       	cp	r14, r1
    2640:	f1 04       	cpc	r15, r1
    2642:	11 f0       	breq	.+4      	; 0x2648 <conv_brk+0x146>
    2644:	d7 01       	movw	r26, r14
    2646:	1c 92       	st	X, r1
    2648:	c8 01       	movw	r24, r16
    264a:	15 c0       	rjmp	.+42     	; 0x2676 <conv_brk+0x174>
    264c:	42 2f       	mov	r20, r18
    264e:	46 95       	lsr	r20
    2650:	46 95       	lsr	r20
    2652:	46 95       	lsr	r20
    2654:	d6 01       	movw	r26, r12
    2656:	a4 0f       	add	r26, r20
    2658:	b1 1d       	adc	r27, r1
    265a:	42 2f       	mov	r20, r18
    265c:	47 70       	andi	r20, 0x07	; 7
    265e:	8b 01       	movw	r16, r22
    2660:	02 c0       	rjmp	.+4      	; 0x2666 <conv_brk+0x164>
    2662:	00 0f       	add	r16, r16
    2664:	11 1f       	adc	r17, r17
    2666:	4a 95       	dec	r20
    2668:	e2 f7       	brpl	.-8      	; 0x2662 <conv_brk+0x160>
    266a:	a8 01       	movw	r20, r16
    266c:	5c 91       	ld	r21, X
    266e:	45 2b       	or	r20, r21
    2670:	4c 93       	st	X, r20
    2672:	62 2e       	mov	r6, r18
    2674:	a2 cf       	rjmp	.-188    	; 0x25ba <conv_brk+0xb8>
    2676:	a0 96       	adiw	r28, 0x20	; 32
    2678:	ef e0       	ldi	r30, 0x0F	; 15
    267a:	0c 94 b6 0f 	jmp	0x1f6c	; 0x1f6c <__epilogue_restores__+0x6>

0000267e <vfscanf>:
    267e:	a0 e0       	ldi	r26, 0x00	; 0
    2680:	b0 e0       	ldi	r27, 0x00	; 0
    2682:	e5 e4       	ldi	r30, 0x45	; 69
    2684:	f3 e1       	ldi	r31, 0x13	; 19
    2686:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <__prologue_saves__+0x6>
    268a:	6c 01       	movw	r12, r24
    268c:	eb 01       	movw	r28, r22
    268e:	5a 01       	movw	r10, r20
    2690:	fc 01       	movw	r30, r24
    2692:	17 82       	std	Z+7, r1	; 0x07
    2694:	16 82       	std	Z+6, r1	; 0x06
    2696:	51 2c       	mov	r5, r1
    2698:	f6 01       	movw	r30, r12
    269a:	e3 80       	ldd	r14, Z+3	; 0x03
    269c:	fe 01       	movw	r30, r28
    269e:	e3 fc       	sbrc	r14, 3
    26a0:	85 91       	lpm	r24, Z+
    26a2:	e3 fe       	sbrs	r14, 3
    26a4:	81 91       	ld	r24, Z+
    26a6:	18 2f       	mov	r17, r24
    26a8:	ef 01       	movw	r28, r30
    26aa:	88 23       	and	r24, r24
    26ac:	09 f4       	brne	.+2      	; 0x26b0 <vfscanf+0x32>
    26ae:	ee c0       	rjmp	.+476    	; 0x288c <vfscanf+0x20e>
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	0e 94 50 14 	call	0x28a0	; 0x28a0 <isspace>
    26b6:	89 2b       	or	r24, r25
    26b8:	21 f0       	breq	.+8      	; 0x26c2 <vfscanf+0x44>
    26ba:	c6 01       	movw	r24, r12
    26bc:	0e 94 d6 11 	call	0x23ac	; 0x23ac <skip_spaces>
    26c0:	eb cf       	rjmp	.-42     	; 0x2698 <vfscanf+0x1a>
    26c2:	15 32       	cpi	r17, 0x25	; 37
    26c4:	41 f4       	brne	.+16     	; 0x26d6 <vfscanf+0x58>
    26c6:	fe 01       	movw	r30, r28
    26c8:	e3 fc       	sbrc	r14, 3
    26ca:	15 91       	lpm	r17, Z+
    26cc:	e3 fe       	sbrs	r14, 3
    26ce:	11 91       	ld	r17, Z+
    26d0:	ef 01       	movw	r28, r30
    26d2:	15 32       	cpi	r17, 0x25	; 37
    26d4:	81 f4       	brne	.+32     	; 0x26f6 <vfscanf+0x78>
    26d6:	c6 01       	movw	r24, r12
    26d8:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    26dc:	97 fd       	sbrc	r25, 7
    26de:	d4 c0       	rjmp	.+424    	; 0x2888 <vfscanf+0x20a>
    26e0:	41 2f       	mov	r20, r17
    26e2:	50 e0       	ldi	r21, 0x00	; 0
    26e4:	9c 01       	movw	r18, r24
    26e6:	33 27       	eor	r19, r19
    26e8:	24 17       	cp	r18, r20
    26ea:	35 07       	cpc	r19, r21
    26ec:	a9 f2       	breq	.-86     	; 0x2698 <vfscanf+0x1a>
    26ee:	b6 01       	movw	r22, r12
    26f0:	0e 94 a2 14 	call	0x2944	; 0x2944 <ungetc>
    26f4:	cb c0       	rjmp	.+406    	; 0x288c <vfscanf+0x20e>
    26f6:	1a 32       	cpi	r17, 0x2A	; 42
    26f8:	39 f4       	brne	.+14     	; 0x2708 <vfscanf+0x8a>
    26fa:	e3 fc       	sbrc	r14, 3
    26fc:	15 91       	lpm	r17, Z+
    26fe:	e3 fe       	sbrs	r14, 3
    2700:	11 91       	ld	r17, Z+
    2702:	ef 01       	movw	r28, r30
    2704:	01 e0       	ldi	r16, 0x01	; 1
    2706:	01 c0       	rjmp	.+2      	; 0x270a <vfscanf+0x8c>
    2708:	00 e0       	ldi	r16, 0x00	; 0
    270a:	f1 2c       	mov	r15, r1
    270c:	20 ed       	ldi	r18, 0xD0	; 208
    270e:	21 0f       	add	r18, r17
    2710:	2a 30       	cpi	r18, 0x0A	; 10
    2712:	80 f4       	brcc	.+32     	; 0x2734 <vfscanf+0xb6>
    2714:	02 60       	ori	r16, 0x02	; 2
    2716:	6f 2d       	mov	r22, r15
    2718:	70 e0       	ldi	r23, 0x00	; 0
    271a:	80 e0       	ldi	r24, 0x00	; 0
    271c:	90 e0       	ldi	r25, 0x00	; 0
    271e:	40 e2       	ldi	r20, 0x20	; 32
    2720:	0e 94 af 11 	call	0x235e	; 0x235e <mulacc>
    2724:	f6 2e       	mov	r15, r22
    2726:	fe 01       	movw	r30, r28
    2728:	e3 fc       	sbrc	r14, 3
    272a:	15 91       	lpm	r17, Z+
    272c:	e3 fe       	sbrs	r14, 3
    272e:	11 91       	ld	r17, Z+
    2730:	ef 01       	movw	r28, r30
    2732:	ec cf       	rjmp	.-40     	; 0x270c <vfscanf+0x8e>
    2734:	01 ff       	sbrs	r16, 1
    2736:	03 c0       	rjmp	.+6      	; 0x273e <vfscanf+0xc0>
    2738:	f1 10       	cpse	r15, r1
    273a:	03 c0       	rjmp	.+6      	; 0x2742 <vfscanf+0xc4>
    273c:	a7 c0       	rjmp	.+334    	; 0x288c <vfscanf+0x20e>
    273e:	ff 24       	eor	r15, r15
    2740:	fa 94       	dec	r15
    2742:	18 36       	cpi	r17, 0x68	; 104
    2744:	19 f0       	breq	.+6      	; 0x274c <vfscanf+0xce>
    2746:	1c 36       	cpi	r17, 0x6C	; 108
    2748:	51 f0       	breq	.+20     	; 0x275e <vfscanf+0xe0>
    274a:	10 c0       	rjmp	.+32     	; 0x276c <vfscanf+0xee>
    274c:	fe 01       	movw	r30, r28
    274e:	e3 fc       	sbrc	r14, 3
    2750:	15 91       	lpm	r17, Z+
    2752:	e3 fe       	sbrs	r14, 3
    2754:	11 91       	ld	r17, Z+
    2756:	ef 01       	movw	r28, r30
    2758:	18 36       	cpi	r17, 0x68	; 104
    275a:	41 f4       	brne	.+16     	; 0x276c <vfscanf+0xee>
    275c:	08 60       	ori	r16, 0x08	; 8
    275e:	04 60       	ori	r16, 0x04	; 4
    2760:	fe 01       	movw	r30, r28
    2762:	e3 fc       	sbrc	r14, 3
    2764:	15 91       	lpm	r17, Z+
    2766:	e3 fe       	sbrs	r14, 3
    2768:	11 91       	ld	r17, Z+
    276a:	ef 01       	movw	r28, r30
    276c:	11 23       	and	r17, r17
    276e:	09 f4       	brne	.+2      	; 0x2772 <vfscanf+0xf4>
    2770:	8d c0       	rjmp	.+282    	; 0x288c <vfscanf+0x20e>
    2772:	61 2f       	mov	r22, r17
    2774:	70 e0       	ldi	r23, 0x00	; 0
    2776:	8a e6       	ldi	r24, 0x6A	; 106
    2778:	91 e0       	ldi	r25, 0x01	; 1
    277a:	0e 94 59 14 	call	0x28b2	; 0x28b2 <strchr_P>
    277e:	89 2b       	or	r24, r25
    2780:	09 f4       	brne	.+2      	; 0x2784 <vfscanf+0x106>
    2782:	84 c0       	rjmp	.+264    	; 0x288c <vfscanf+0x20e>
    2784:	00 fd       	sbrc	r16, 0
    2786:	07 c0       	rjmp	.+14     	; 0x2796 <vfscanf+0x118>
    2788:	f5 01       	movw	r30, r10
    278a:	80 80       	ld	r8, Z
    278c:	91 80       	ldd	r9, Z+1	; 0x01
    278e:	c5 01       	movw	r24, r10
    2790:	02 96       	adiw	r24, 0x02	; 2
    2792:	5c 01       	movw	r10, r24
    2794:	02 c0       	rjmp	.+4      	; 0x279a <vfscanf+0x11c>
    2796:	81 2c       	mov	r8, r1
    2798:	91 2c       	mov	r9, r1
    279a:	1e 36       	cpi	r17, 0x6E	; 110
    279c:	51 f4       	brne	.+20     	; 0x27b2 <vfscanf+0x134>
    279e:	f6 01       	movw	r30, r12
    27a0:	46 81       	ldd	r20, Z+6	; 0x06
    27a2:	57 81       	ldd	r21, Z+7	; 0x07
    27a4:	60 e0       	ldi	r22, 0x00	; 0
    27a6:	70 e0       	ldi	r23, 0x00	; 0
    27a8:	20 2f       	mov	r18, r16
    27aa:	c4 01       	movw	r24, r8
    27ac:	0e 94 a3 11 	call	0x2346	; 0x2346 <putval>
    27b0:	73 cf       	rjmp	.-282    	; 0x2698 <vfscanf+0x1a>
    27b2:	13 36       	cpi	r17, 0x63	; 99
    27b4:	a9 f4       	brne	.+42     	; 0x27e0 <vfscanf+0x162>
    27b6:	01 fd       	sbrc	r16, 1
    27b8:	02 c0       	rjmp	.+4      	; 0x27be <vfscanf+0x140>
    27ba:	ff 24       	eor	r15, r15
    27bc:	f3 94       	inc	r15
    27be:	c6 01       	movw	r24, r12
    27c0:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    27c4:	97 fd       	sbrc	r25, 7
    27c6:	60 c0       	rjmp	.+192    	; 0x2888 <vfscanf+0x20a>
    27c8:	81 14       	cp	r8, r1
    27ca:	91 04       	cpc	r9, r1
    27cc:	29 f0       	breq	.+10     	; 0x27d8 <vfscanf+0x15a>
    27ce:	f4 01       	movw	r30, r8
    27d0:	80 83       	st	Z, r24
    27d2:	c4 01       	movw	r24, r8
    27d4:	01 96       	adiw	r24, 0x01	; 1
    27d6:	4c 01       	movw	r8, r24
    27d8:	fa 94       	dec	r15
    27da:	f1 10       	cpse	r15, r1
    27dc:	f0 cf       	rjmp	.-32     	; 0x27be <vfscanf+0x140>
    27de:	50 c0       	rjmp	.+160    	; 0x2880 <vfscanf+0x202>
    27e0:	1b 35       	cpi	r17, 0x5B	; 91
    27e2:	59 f4       	brne	.+22     	; 0x27fa <vfscanf+0x17c>
    27e4:	9e 01       	movw	r18, r28
    27e6:	a4 01       	movw	r20, r8
    27e8:	6f 2d       	mov	r22, r15
    27ea:	c6 01       	movw	r24, r12
    27ec:	0e 94 81 12 	call	0x2502	; 0x2502 <conv_brk>
    27f0:	ec 01       	movw	r28, r24
    27f2:	89 2b       	or	r24, r25
    27f4:	09 f0       	breq	.+2      	; 0x27f8 <vfscanf+0x17a>
    27f6:	44 c0       	rjmp	.+136    	; 0x2880 <vfscanf+0x202>
    27f8:	3e c0       	rjmp	.+124    	; 0x2876 <vfscanf+0x1f8>
    27fa:	c6 01       	movw	r24, r12
    27fc:	0e 94 d6 11 	call	0x23ac	; 0x23ac <skip_spaces>
    2800:	97 fd       	sbrc	r25, 7
    2802:	42 c0       	rjmp	.+132    	; 0x2888 <vfscanf+0x20a>
    2804:	1f 36       	cpi	r17, 0x6F	; 111
    2806:	61 f1       	breq	.+88     	; 0x2860 <vfscanf+0x1e2>
    2808:	28 f4       	brcc	.+10     	; 0x2814 <vfscanf+0x196>
    280a:	14 36       	cpi	r17, 0x64	; 100
    280c:	39 f1       	breq	.+78     	; 0x285c <vfscanf+0x1de>
    280e:	19 36       	cpi	r17, 0x69	; 105
    2810:	51 f1       	breq	.+84     	; 0x2866 <vfscanf+0x1e8>
    2812:	28 c0       	rjmp	.+80     	; 0x2864 <vfscanf+0x1e6>
    2814:	13 37       	cpi	r17, 0x73	; 115
    2816:	71 f0       	breq	.+28     	; 0x2834 <vfscanf+0x1b6>
    2818:	15 37       	cpi	r17, 0x75	; 117
    281a:	01 f1       	breq	.+64     	; 0x285c <vfscanf+0x1de>
    281c:	23 c0       	rjmp	.+70     	; 0x2864 <vfscanf+0x1e6>
    281e:	81 14       	cp	r8, r1
    2820:	91 04       	cpc	r9, r1
    2822:	29 f0       	breq	.+10     	; 0x282e <vfscanf+0x1b0>
    2824:	f4 01       	movw	r30, r8
    2826:	60 82       	st	Z, r6
    2828:	c4 01       	movw	r24, r8
    282a:	01 96       	adiw	r24, 0x01	; 1
    282c:	4c 01       	movw	r8, r24
    282e:	fa 94       	dec	r15
    2830:	ff 20       	and	r15, r15
    2832:	71 f0       	breq	.+28     	; 0x2850 <vfscanf+0x1d2>
    2834:	c6 01       	movw	r24, r12
    2836:	0e 94 64 14 	call	0x28c8	; 0x28c8 <fgetc>
    283a:	3c 01       	movw	r6, r24
    283c:	97 fd       	sbrc	r25, 7
    283e:	08 c0       	rjmp	.+16     	; 0x2850 <vfscanf+0x1d2>
    2840:	0e 94 50 14 	call	0x28a0	; 0x28a0 <isspace>
    2844:	89 2b       	or	r24, r25
    2846:	59 f3       	breq	.-42     	; 0x281e <vfscanf+0x1a0>
    2848:	b6 01       	movw	r22, r12
    284a:	c3 01       	movw	r24, r6
    284c:	0e 94 a2 14 	call	0x2944	; 0x2944 <ungetc>
    2850:	81 14       	cp	r8, r1
    2852:	91 04       	cpc	r9, r1
    2854:	a9 f0       	breq	.+42     	; 0x2880 <vfscanf+0x202>
    2856:	f4 01       	movw	r30, r8
    2858:	10 82       	st	Z, r1
    285a:	12 c0       	rjmp	.+36     	; 0x2880 <vfscanf+0x202>
    285c:	00 62       	ori	r16, 0x20	; 32
    285e:	03 c0       	rjmp	.+6      	; 0x2866 <vfscanf+0x1e8>
    2860:	00 61       	ori	r16, 0x10	; 16
    2862:	01 c0       	rjmp	.+2      	; 0x2866 <vfscanf+0x1e8>
    2864:	00 64       	ori	r16, 0x40	; 64
    2866:	20 2f       	mov	r18, r16
    2868:	a4 01       	movw	r20, r8
    286a:	6f 2d       	mov	r22, r15
    286c:	c6 01       	movw	r24, r12
    286e:	0e 94 ef 11 	call	0x23de	; 0x23de <conv_int>
    2872:	81 11       	cpse	r24, r1
    2874:	05 c0       	rjmp	.+10     	; 0x2880 <vfscanf+0x202>
    2876:	f6 01       	movw	r30, r12
    2878:	83 81       	ldd	r24, Z+3	; 0x03
    287a:	80 73       	andi	r24, 0x30	; 48
    287c:	29 f4       	brne	.+10     	; 0x2888 <vfscanf+0x20a>
    287e:	06 c0       	rjmp	.+12     	; 0x288c <vfscanf+0x20e>
    2880:	00 fd       	sbrc	r16, 0
    2882:	0a cf       	rjmp	.-492    	; 0x2698 <vfscanf+0x1a>
    2884:	53 94       	inc	r5
    2886:	08 cf       	rjmp	.-496    	; 0x2698 <vfscanf+0x1a>
    2888:	55 20       	and	r5, r5
    288a:	19 f0       	breq	.+6      	; 0x2892 <vfscanf+0x214>
    288c:	85 2d       	mov	r24, r5
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	02 c0       	rjmp	.+4      	; 0x2896 <vfscanf+0x218>
    2892:	8f ef       	ldi	r24, 0xFF	; 255
    2894:	9f ef       	ldi	r25, 0xFF	; 255
    2896:	cd b7       	in	r28, 0x3d	; 61
    2898:	de b7       	in	r29, 0x3e	; 62
    289a:	ef e0       	ldi	r30, 0x0F	; 15
    289c:	0c 94 b6 0f 	jmp	0x1f6c	; 0x1f6c <__epilogue_restores__+0x6>

000028a0 <isspace>:
    28a0:	91 11       	cpse	r25, r1
    28a2:	0c 94 bb 14 	jmp	0x2976	; 0x2976 <__ctype_isfalse>
    28a6:	80 32       	cpi	r24, 0x20	; 32
    28a8:	19 f0       	breq	.+6      	; 0x28b0 <isspace+0x10>
    28aa:	89 50       	subi	r24, 0x09	; 9
    28ac:	85 50       	subi	r24, 0x05	; 5
    28ae:	c8 f7       	brcc	.-14     	; 0x28a2 <isspace+0x2>
    28b0:	08 95       	ret

000028b2 <strchr_P>:
    28b2:	fc 01       	movw	r30, r24
    28b4:	05 90       	lpm	r0, Z+
    28b6:	06 16       	cp	r0, r22
    28b8:	21 f0       	breq	.+8      	; 0x28c2 <strchr_P+0x10>
    28ba:	00 20       	and	r0, r0
    28bc:	d9 f7       	brne	.-10     	; 0x28b4 <strchr_P+0x2>
    28be:	c0 01       	movw	r24, r0
    28c0:	08 95       	ret
    28c2:	31 97       	sbiw	r30, 0x01	; 1
    28c4:	cf 01       	movw	r24, r30
    28c6:	08 95       	ret

000028c8 <fgetc>:
    28c8:	cf 93       	push	r28
    28ca:	df 93       	push	r29
    28cc:	ec 01       	movw	r28, r24
    28ce:	2b 81       	ldd	r18, Y+3	; 0x03
    28d0:	20 ff       	sbrs	r18, 0
    28d2:	33 c0       	rjmp	.+102    	; 0x293a <fgetc+0x72>
    28d4:	26 ff       	sbrs	r18, 6
    28d6:	0a c0       	rjmp	.+20     	; 0x28ec <fgetc+0x24>
    28d8:	2f 7b       	andi	r18, 0xBF	; 191
    28da:	2b 83       	std	Y+3, r18	; 0x03
    28dc:	8e 81       	ldd	r24, Y+6	; 0x06
    28de:	9f 81       	ldd	r25, Y+7	; 0x07
    28e0:	01 96       	adiw	r24, 0x01	; 1
    28e2:	9f 83       	std	Y+7, r25	; 0x07
    28e4:	8e 83       	std	Y+6, r24	; 0x06
    28e6:	8a 81       	ldd	r24, Y+2	; 0x02
    28e8:	90 e0       	ldi	r25, 0x00	; 0
    28ea:	29 c0       	rjmp	.+82     	; 0x293e <fgetc+0x76>
    28ec:	22 ff       	sbrs	r18, 2
    28ee:	0f c0       	rjmp	.+30     	; 0x290e <fgetc+0x46>
    28f0:	e8 81       	ld	r30, Y
    28f2:	f9 81       	ldd	r31, Y+1	; 0x01
    28f4:	80 81       	ld	r24, Z
    28f6:	08 2e       	mov	r0, r24
    28f8:	00 0c       	add	r0, r0
    28fa:	99 0b       	sbc	r25, r25
    28fc:	00 97       	sbiw	r24, 0x00	; 0
    28fe:	19 f4       	brne	.+6      	; 0x2906 <fgetc+0x3e>
    2900:	20 62       	ori	r18, 0x20	; 32
    2902:	2b 83       	std	Y+3, r18	; 0x03
    2904:	1a c0       	rjmp	.+52     	; 0x293a <fgetc+0x72>
    2906:	31 96       	adiw	r30, 0x01	; 1
    2908:	f9 83       	std	Y+1, r31	; 0x01
    290a:	e8 83       	st	Y, r30
    290c:	0e c0       	rjmp	.+28     	; 0x292a <fgetc+0x62>
    290e:	ea 85       	ldd	r30, Y+10	; 0x0a
    2910:	fb 85       	ldd	r31, Y+11	; 0x0b
    2912:	09 95       	icall
    2914:	97 ff       	sbrs	r25, 7
    2916:	09 c0       	rjmp	.+18     	; 0x292a <fgetc+0x62>
    2918:	2b 81       	ldd	r18, Y+3	; 0x03
    291a:	01 96       	adiw	r24, 0x01	; 1
    291c:	11 f0       	breq	.+4      	; 0x2922 <fgetc+0x5a>
    291e:	80 e2       	ldi	r24, 0x20	; 32
    2920:	01 c0       	rjmp	.+2      	; 0x2924 <fgetc+0x5c>
    2922:	80 e1       	ldi	r24, 0x10	; 16
    2924:	82 2b       	or	r24, r18
    2926:	8b 83       	std	Y+3, r24	; 0x03
    2928:	08 c0       	rjmp	.+16     	; 0x293a <fgetc+0x72>
    292a:	2e 81       	ldd	r18, Y+6	; 0x06
    292c:	3f 81       	ldd	r19, Y+7	; 0x07
    292e:	2f 5f       	subi	r18, 0xFF	; 255
    2930:	3f 4f       	sbci	r19, 0xFF	; 255
    2932:	3f 83       	std	Y+7, r19	; 0x07
    2934:	2e 83       	std	Y+6, r18	; 0x06
    2936:	99 27       	eor	r25, r25
    2938:	02 c0       	rjmp	.+4      	; 0x293e <fgetc+0x76>
    293a:	8f ef       	ldi	r24, 0xFF	; 255
    293c:	9f ef       	ldi	r25, 0xFF	; 255
    293e:	df 91       	pop	r29
    2940:	cf 91       	pop	r28
    2942:	08 95       	ret

00002944 <ungetc>:
    2944:	fb 01       	movw	r30, r22
    2946:	23 81       	ldd	r18, Z+3	; 0x03
    2948:	20 ff       	sbrs	r18, 0
    294a:	12 c0       	rjmp	.+36     	; 0x2970 <ungetc+0x2c>
    294c:	26 fd       	sbrc	r18, 6
    294e:	10 c0       	rjmp	.+32     	; 0x2970 <ungetc+0x2c>
    2950:	8f 3f       	cpi	r24, 0xFF	; 255
    2952:	3f ef       	ldi	r19, 0xFF	; 255
    2954:	93 07       	cpc	r25, r19
    2956:	61 f0       	breq	.+24     	; 0x2970 <ungetc+0x2c>
    2958:	82 83       	std	Z+2, r24	; 0x02
    295a:	2f 7d       	andi	r18, 0xDF	; 223
    295c:	20 64       	ori	r18, 0x40	; 64
    295e:	23 83       	std	Z+3, r18	; 0x03
    2960:	26 81       	ldd	r18, Z+6	; 0x06
    2962:	37 81       	ldd	r19, Z+7	; 0x07
    2964:	21 50       	subi	r18, 0x01	; 1
    2966:	31 09       	sbc	r19, r1
    2968:	37 83       	std	Z+7, r19	; 0x07
    296a:	26 83       	std	Z+6, r18	; 0x06
    296c:	99 27       	eor	r25, r25
    296e:	08 95       	ret
    2970:	8f ef       	ldi	r24, 0xFF	; 255
    2972:	9f ef       	ldi	r25, 0xFF	; 255
    2974:	08 95       	ret

00002976 <__ctype_isfalse>:
    2976:	99 27       	eor	r25, r25
    2978:	88 27       	eor	r24, r24

0000297a <__ctype_istrue>:
    297a:	08 95       	ret

0000297c <_exit>:
    297c:	f8 94       	cli

0000297e <__stop_program>:
    297e:	ff cf       	rjmp	.-2      	; 0x297e <__stop_program>
