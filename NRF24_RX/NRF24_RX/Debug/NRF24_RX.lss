
NRF24_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  00003de0  00003e74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003de0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000049f  00800164  00800164  00003ed8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003ed8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003f34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000338  00000000  00000000  00003f74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004651  00000000  00000000  000042ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014e8  00000000  00000000  000088fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002965  00000000  00000000  00009de5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c60  00000000  00000000  0000c74c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b95  00000000  00000000  0000d3ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000043c0  00000000  00000000  0000df41  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002a8  00000000  00000000  00012301  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__vector_1>
       8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      28:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      2c:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <__vector_11>
      30:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      34:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      4c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      50:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      54:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      58:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      5c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      60:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      64:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2474>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf ef       	ldi	r28, 0xFF	; 255
     17c:	d8 e0       	ldi	r29, 0x08	; 8
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	11 e0       	ldi	r17, 0x01	; 1
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	e0 ee       	ldi	r30, 0xE0	; 224
     18a:	fd e3       	ldi	r31, 0x3D	; 61
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	a4 36       	cpi	r26, 0x64	; 100
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	26 e0       	ldi	r18, 0x06	; 6
     19a:	a4 e6       	ldi	r26, 0x64	; 100
     19c:	b1 e0       	ldi	r27, 0x01	; 1
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	a3 30       	cpi	r26, 0x03	; 3
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 1c 06 	call	0xc38	; 0xc38 <main>
     1ac:	0c 94 ee 1e 	jmp	0x3ddc	; 0x3ddc <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <LCD_1286_Draw_pixel>:
	/// \param x_start - начальная точка по х от 0 до 1024
	/// \param x_end - конечная точка по y от 0 до 1024
	for (; x_start < x_end; x_start++) {
		Frame_buffer[x_start] = ~(Frame_buffer[x_start]);
	}
}
     1b4:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1b8:	69 17       	cp	r22, r25
     1ba:	e0 f4       	brcc	.+56     	; 0x1f4 <LCD_1286_Draw_pixel+0x40>
     1bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     1c0:	89 17       	cp	r24, r25
     1c2:	c0 f4       	brcc	.+48     	; 0x1f4 <LCD_1286_Draw_pixel+0x40>
     1c4:	96 2f       	mov	r25, r22
     1c6:	96 95       	lsr	r25
     1c8:	96 95       	lsr	r25
     1ca:	96 95       	lsr	r25
     1cc:	e8 2f       	mov	r30, r24
     1ce:	f0 e0       	ldi	r31, 0x00	; 0
     1d0:	80 e8       	ldi	r24, 0x80	; 128
     1d2:	98 9f       	mul	r25, r24
     1d4:	e0 0d       	add	r30, r0
     1d6:	f1 1d       	adc	r31, r1
     1d8:	11 24       	eor	r1, r1
     1da:	67 70       	andi	r22, 0x07	; 7
     1dc:	81 e0       	ldi	r24, 0x01	; 1
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <LCD_1286_Draw_pixel+0x32>
     1e2:	88 0f       	add	r24, r24
     1e4:	99 1f       	adc	r25, r25
     1e6:	6a 95       	dec	r22
     1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <LCD_1286_Draw_pixel+0x2e>
     1ea:	e8 50       	subi	r30, 0x08	; 8
     1ec:	fe 4f       	sbci	r31, 0xFE	; 254
     1ee:	90 81       	ld	r25, Z
     1f0:	89 2b       	or	r24, r25
     1f2:	80 83       	st	Z, r24
     1f4:	08 95       	ret

000001f6 <strob>:
     1f6:	85 e0       	ldi	r24, 0x05	; 5
     1f8:	8a 95       	dec	r24
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <strob+0x2>
     1fc:	00 00       	nop
     1fe:	8b b1       	in	r24, 0x0b	; 11
     200:	80 62       	ori	r24, 0x20	; 32
     202:	8b b9       	out	0x0b, r24	; 11
     204:	85 e0       	ldi	r24, 0x05	; 5
     206:	8a 95       	dec	r24
     208:	f1 f7       	brne	.-4      	; 0x206 <strob+0x10>
     20a:	00 00       	nop
     20c:	8b b1       	in	r24, 0x0b	; 11
     20e:	8f 7d       	andi	r24, 0xDF	; 223
     210:	8b b9       	out	0x0b, r24	; 11
     212:	85 e0       	ldi	r24, 0x05	; 5
     214:	8a 95       	dec	r24
     216:	f1 f7       	brne	.-4      	; 0x214 <strob+0x1e>
     218:	00 00       	nop
     21a:	08 95       	ret

0000021c <LCD_12864_send_data>:
     21c:	1f 93       	push	r17
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	18 2f       	mov	r17, r24
     224:	8b b1       	in	r24, 0x0b	; 11
     226:	80 68       	ori	r24, 0x80	; 128
     228:	8b b9       	out	0x0b, r24	; 11
     22a:	8b b1       	in	r24, 0x0b	; 11
     22c:	80 64       	ori	r24, 0x40	; 64
     22e:	8b b9       	out	0x0b, r24	; 11
     230:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     234:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     238:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     23c:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     240:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     244:	8b b1       	in	r24, 0x0b	; 11
     246:	8f 7b       	andi	r24, 0xBF	; 191
     248:	8b b9       	out	0x0b, r24	; 11
     24a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     24e:	8b b1       	in	r24, 0x0b	; 11
     250:	80 64       	ori	r24, 0x40	; 64
     252:	8b b9       	out	0x0b, r24	; 11
     254:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     258:	8b b1       	in	r24, 0x0b	; 11
     25a:	8f 7b       	andi	r24, 0xBF	; 191
     25c:	8b b9       	out	0x0b, r24	; 11
     25e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     262:	c0 e0       	ldi	r28, 0x00	; 0
     264:	d0 e0       	ldi	r29, 0x00	; 0
     266:	1c c0       	rjmp	.+56     	; 0x2a0 <LCD_12864_send_data+0x84>
     268:	ce 01       	movw	r24, r28
     26a:	04 97       	sbiw	r24, 0x04	; 4
     26c:	04 97       	sbiw	r24, 0x04	; 4
     26e:	30 f4       	brcc	.+12     	; 0x27c <LCD_12864_send_data+0x60>
     270:	8b b1       	in	r24, 0x0b	; 11
     272:	8f 7b       	andi	r24, 0xBF	; 191
     274:	8b b9       	out	0x0b, r24	; 11
     276:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     27a:	11 c0       	rjmp	.+34     	; 0x29e <LCD_12864_send_data+0x82>
     27c:	81 2f       	mov	r24, r17
     27e:	80 78       	andi	r24, 0x80	; 128
     280:	41 f0       	breq	.+16     	; 0x292 <LCD_12864_send_data+0x76>
     282:	80 38       	cpi	r24, 0x80	; 128
     284:	59 f4       	brne	.+22     	; 0x29c <LCD_12864_send_data+0x80>
     286:	8b b1       	in	r24, 0x0b	; 11
     288:	80 64       	ori	r24, 0x40	; 64
     28a:	8b b9       	out	0x0b, r24	; 11
     28c:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     290:	05 c0       	rjmp	.+10     	; 0x29c <LCD_12864_send_data+0x80>
     292:	8b b1       	in	r24, 0x0b	; 11
     294:	8f 7b       	andi	r24, 0xBF	; 191
     296:	8b b9       	out	0x0b, r24	; 11
     298:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     29c:	11 0f       	add	r17, r17
     29e:	21 96       	adiw	r28, 0x01	; 1
     2a0:	cc 30       	cpi	r28, 0x0C	; 12
     2a2:	d1 05       	cpc	r29, r1
     2a4:	0c f3       	brlt	.-62     	; 0x268 <LCD_12864_send_data+0x4c>
     2a6:	8b b1       	in	r24, 0x0b	; 11
     2a8:	8f 7b       	andi	r24, 0xBF	; 191
     2aa:	8b b9       	out	0x0b, r24	; 11
     2ac:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2b0:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2b4:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2b8:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2bc:	8b b1       	in	r24, 0x0b	; 11
     2be:	8f 77       	andi	r24, 0x7F	; 127
     2c0:	8b b9       	out	0x0b, r24	; 11
     2c2:	df 91       	pop	r29
     2c4:	cf 91       	pop	r28
     2c6:	1f 91       	pop	r17
     2c8:	08 95       	ret

000002ca <str_LCD_12864>:
     2ca:	0f 93       	push	r16
     2cc:	1f 93       	push	r17
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
     2d2:	8c 01       	movw	r16, r24
     2d4:	c0 e0       	ldi	r28, 0x00	; 0
     2d6:	d0 e0       	ldi	r29, 0x00	; 0
     2d8:	03 c0       	rjmp	.+6      	; 0x2e0 <str_LCD_12864+0x16>
     2da:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
     2de:	21 96       	adiw	r28, 0x01	; 1
     2e0:	f8 01       	movw	r30, r16
     2e2:	ec 0f       	add	r30, r28
     2e4:	fd 1f       	adc	r31, r29
     2e6:	80 81       	ld	r24, Z
     2e8:	81 11       	cpse	r24, r1
     2ea:	f7 cf       	rjmp	.-18     	; 0x2da <str_LCD_12864+0x10>
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	0f 91       	pop	r16
     2f4:	08 95       	ret

000002f6 <LCD_12864_send_command>:
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	18 2f       	mov	r17, r24
     2fe:	8b b1       	in	r24, 0x0b	; 11
     300:	80 68       	ori	r24, 0x80	; 128
     302:	8b b9       	out	0x0b, r24	; 11
     304:	8b b1       	in	r24, 0x0b	; 11
     306:	80 64       	ori	r24, 0x40	; 64
     308:	8b b9       	out	0x0b, r24	; 11
     30a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     30e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     312:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     316:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     31a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     31e:	8b b1       	in	r24, 0x0b	; 11
     320:	8f 7b       	andi	r24, 0xBF	; 191
     322:	8b b9       	out	0x0b, r24	; 11
     324:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     328:	8b b1       	in	r24, 0x0b	; 11
     32a:	8f 7b       	andi	r24, 0xBF	; 191
     32c:	8b b9       	out	0x0b, r24	; 11
     32e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     332:	8b b1       	in	r24, 0x0b	; 11
     334:	8f 7b       	andi	r24, 0xBF	; 191
     336:	8b b9       	out	0x0b, r24	; 11
     338:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     33c:	c0 e0       	ldi	r28, 0x00	; 0
     33e:	d0 e0       	ldi	r29, 0x00	; 0
     340:	1c c0       	rjmp	.+56     	; 0x37a <LCD_12864_send_command+0x84>
     342:	ce 01       	movw	r24, r28
     344:	04 97       	sbiw	r24, 0x04	; 4
     346:	04 97       	sbiw	r24, 0x04	; 4
     348:	30 f4       	brcc	.+12     	; 0x356 <LCD_12864_send_command+0x60>
     34a:	8b b1       	in	r24, 0x0b	; 11
     34c:	8f 7b       	andi	r24, 0xBF	; 191
     34e:	8b b9       	out	0x0b, r24	; 11
     350:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     354:	11 c0       	rjmp	.+34     	; 0x378 <LCD_12864_send_command+0x82>
     356:	81 2f       	mov	r24, r17
     358:	80 78       	andi	r24, 0x80	; 128
     35a:	41 f0       	breq	.+16     	; 0x36c <LCD_12864_send_command+0x76>
     35c:	80 38       	cpi	r24, 0x80	; 128
     35e:	59 f4       	brne	.+22     	; 0x376 <LCD_12864_send_command+0x80>
     360:	8b b1       	in	r24, 0x0b	; 11
     362:	80 64       	ori	r24, 0x40	; 64
     364:	8b b9       	out	0x0b, r24	; 11
     366:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     36a:	05 c0       	rjmp	.+10     	; 0x376 <LCD_12864_send_command+0x80>
     36c:	8b b1       	in	r24, 0x0b	; 11
     36e:	8f 7b       	andi	r24, 0xBF	; 191
     370:	8b b9       	out	0x0b, r24	; 11
     372:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     376:	11 0f       	add	r17, r17
     378:	21 96       	adiw	r28, 0x01	; 1
     37a:	cc 30       	cpi	r28, 0x0C	; 12
     37c:	d1 05       	cpc	r29, r1
     37e:	0c f3       	brlt	.-62     	; 0x342 <LCD_12864_send_command+0x4c>
     380:	8b b1       	in	r24, 0x0b	; 11
     382:	8f 7b       	andi	r24, 0xBF	; 191
     384:	8b b9       	out	0x0b, r24	; 11
     386:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     38a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     38e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     392:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     396:	8b b1       	in	r24, 0x0b	; 11
     398:	8f 77       	andi	r24, 0x7F	; 127
     39a:	8b b9       	out	0x0b, r24	; 11
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	1f 91       	pop	r17
     3a2:	08 95       	ret

000003a4 <LCD_12864_GrapnicMode>:
     3a4:	88 23       	and	r24, r24
     3a6:	99 f0       	breq	.+38     	; 0x3ce <LCD_12864_GrapnicMode+0x2a>
     3a8:	84 e3       	ldi	r24, 0x34	; 52
     3aa:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     3ae:	8f e9       	ldi	r24, 0x9F	; 159
     3b0:	9f e0       	ldi	r25, 0x0F	; 15
     3b2:	01 97       	sbiw	r24, 0x01	; 1
     3b4:	f1 f7       	brne	.-4      	; 0x3b2 <LCD_12864_GrapnicMode+0xe>
     3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <LCD_12864_GrapnicMode+0x14>
     3b8:	00 00       	nop
     3ba:	86 e3       	ldi	r24, 0x36	; 54
     3bc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     3c0:	8f e9       	ldi	r24, 0x9F	; 159
     3c2:	9f e0       	ldi	r25, 0x0F	; 15
     3c4:	01 97       	sbiw	r24, 0x01	; 1
     3c6:	f1 f7       	brne	.-4      	; 0x3c4 <LCD_12864_GrapnicMode+0x20>
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <LCD_12864_GrapnicMode+0x26>
     3ca:	00 00       	nop
     3cc:	08 95       	ret
     3ce:	80 e3       	ldi	r24, 0x30	; 48
     3d0:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     3d4:	8f e9       	ldi	r24, 0x9F	; 159
     3d6:	9f e0       	ldi	r25, 0x0F	; 15
     3d8:	01 97       	sbiw	r24, 0x01	; 1
     3da:	f1 f7       	brne	.-4      	; 0x3d8 <LCD_12864_GrapnicMode+0x34>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <LCD_12864_GrapnicMode+0x3a>
     3de:	00 00       	nop
     3e0:	08 95       	ret

000003e2 <LCD_12864_Draw_bitmap>:
     3e2:	8f 92       	push	r8
     3e4:	9f 92       	push	r9
     3e6:	af 92       	push	r10
     3e8:	bf 92       	push	r11
     3ea:	df 92       	push	r13
     3ec:	ef 92       	push	r14
     3ee:	ff 92       	push	r15
     3f0:	0f 93       	push	r16
     3f2:	1f 93       	push	r17
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	7c 01       	movw	r14, r24
     3fa:	d1 2c       	mov	r13, r1
     3fc:	31 c1       	rjmp	.+610    	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
     3fe:	8f e1       	ldi	r24, 0x1F	; 31
     400:	8d 15       	cp	r24, r13
     402:	48 f0       	brcs	.+18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     404:	8d 2d       	mov	r24, r13
     406:	80 68       	ori	r24, 0x80	; 128
     408:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     40c:	80 2f       	mov	r24, r16
     40e:	80 68       	ori	r24, 0x80	; 128
     410:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     414:	09 c0       	rjmp	.+18     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     416:	80 ee       	ldi	r24, 0xE0	; 224
     418:	8d 0d       	add	r24, r13
     41a:	80 68       	ori	r24, 0x80	; 128
     41c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     420:	80 2f       	mov	r24, r16
     422:	88 68       	ori	r24, 0x88	; 136
     424:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     428:	cd 2d       	mov	r28, r13
     42a:	c6 95       	lsr	r28
     42c:	c6 95       	lsr	r28
     42e:	c6 95       	lsr	r28
     430:	d0 e0       	ldi	r29, 0x00	; 0
     432:	cc 0f       	add	r28, r28
     434:	dd 1f       	adc	r29, r29
     436:	cc 0f       	add	r28, r28
     438:	dd 1f       	adc	r29, r29
     43a:	cc 0f       	add	r28, r28
     43c:	dd 1f       	adc	r29, r29
     43e:	c0 0f       	add	r28, r16
     440:	d1 1d       	adc	r29, r1
     442:	c2 95       	swap	r28
     444:	d2 95       	swap	r29
     446:	d0 7f       	andi	r29, 0xF0	; 240
     448:	dc 27       	eor	r29, r28
     44a:	c0 7f       	andi	r28, 0xF0	; 240
     44c:	dc 27       	eor	r29, r28
     44e:	ce 0d       	add	r28, r14
     450:	df 1d       	adc	r29, r15
     452:	88 80       	ld	r8, Y
     454:	91 2c       	mov	r9, r1
     456:	1d 2d       	mov	r17, r13
     458:	17 70       	andi	r17, 0x07	; 7
     45a:	01 2e       	mov	r0, r17
     45c:	02 c0       	rjmp	.+4      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     45e:	95 94       	asr	r9
     460:	87 94       	ror	r8
     462:	0a 94       	dec	r0
     464:	e2 f7       	brpl	.-8      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     466:	96 94       	lsr	r9
     468:	98 2c       	mov	r9, r8
     46a:	88 24       	eor	r8, r8
     46c:	97 94       	ror	r9
     46e:	87 94       	ror	r8
     470:	a9 80       	ldd	r10, Y+1	; 0x01
     472:	b1 2c       	mov	r11, r1
     474:	01 2e       	mov	r0, r17
     476:	02 c0       	rjmp	.+4      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     478:	b5 94       	asr	r11
     47a:	a7 94       	ror	r10
     47c:	0a 94       	dec	r0
     47e:	e2 f7       	brpl	.-8      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	a8 22       	and	r10, r24
     484:	bb 24       	eor	r11, r11
     486:	00 24       	eor	r0, r0
     488:	b6 94       	lsr	r11
     48a:	a7 94       	ror	r10
     48c:	07 94       	ror	r0
     48e:	b6 94       	lsr	r11
     490:	a7 94       	ror	r10
     492:	07 94       	ror	r0
     494:	ba 2c       	mov	r11, r10
     496:	a0 2c       	mov	r10, r0
     498:	aa 81       	ldd	r26, Y+2	; 0x02
     49a:	b0 e0       	ldi	r27, 0x00	; 0
     49c:	01 2e       	mov	r0, r17
     49e:	02 c0       	rjmp	.+4      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     4a0:	b5 95       	asr	r27
     4a2:	a7 95       	ror	r26
     4a4:	0a 94       	dec	r0
     4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
     4a8:	a1 70       	andi	r26, 0x01	; 1
     4aa:	bb 27       	eor	r27, r27
     4ac:	aa 0f       	add	r26, r26
     4ae:	bb 1f       	adc	r27, r27
     4b0:	a2 95       	swap	r26
     4b2:	b2 95       	swap	r27
     4b4:	b0 7f       	andi	r27, 0xF0	; 240
     4b6:	ba 27       	eor	r27, r26
     4b8:	a0 7f       	andi	r26, 0xF0	; 240
     4ba:	ba 27       	eor	r27, r26
     4bc:	eb 81       	ldd	r30, Y+3	; 0x03
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	01 2e       	mov	r0, r17
     4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c4:	f5 95       	asr	r31
     4c6:	e7 95       	ror	r30
     4c8:	0a 94       	dec	r0
     4ca:	e2 f7       	brpl	.-8      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     4cc:	e1 70       	andi	r30, 0x01	; 1
     4ce:	ff 27       	eor	r31, r31
     4d0:	e2 95       	swap	r30
     4d2:	f2 95       	swap	r31
     4d4:	f0 7f       	andi	r31, 0xF0	; 240
     4d6:	fe 27       	eor	r31, r30
     4d8:	e0 7f       	andi	r30, 0xF0	; 240
     4da:	fe 27       	eor	r31, r30
     4dc:	6c 81       	ldd	r22, Y+4	; 0x04
     4de:	70 e0       	ldi	r23, 0x00	; 0
     4e0:	01 2e       	mov	r0, r17
     4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
     4e4:	75 95       	asr	r23
     4e6:	67 95       	ror	r22
     4e8:	0a 94       	dec	r0
     4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
     4ec:	61 70       	andi	r22, 0x01	; 1
     4ee:	77 27       	eor	r23, r23
     4f0:	66 0f       	add	r22, r22
     4f2:	77 1f       	adc	r23, r23
     4f4:	66 0f       	add	r22, r22
     4f6:	77 1f       	adc	r23, r23
     4f8:	66 0f       	add	r22, r22
     4fa:	77 1f       	adc	r23, r23
     4fc:	4d 81       	ldd	r20, Y+5	; 0x05
     4fe:	50 e0       	ldi	r21, 0x00	; 0
     500:	01 2e       	mov	r0, r17
     502:	02 c0       	rjmp	.+4      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
     504:	55 95       	asr	r21
     506:	47 95       	ror	r20
     508:	0a 94       	dec	r0
     50a:	e2 f7       	brpl	.-8      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     50c:	41 70       	andi	r20, 0x01	; 1
     50e:	55 27       	eor	r21, r21
     510:	44 0f       	add	r20, r20
     512:	55 1f       	adc	r21, r21
     514:	44 0f       	add	r20, r20
     516:	55 1f       	adc	r21, r21
     518:	2e 81       	ldd	r18, Y+6	; 0x06
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	01 2e       	mov	r0, r17
     51e:	02 c0       	rjmp	.+4      	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
     520:	35 95       	asr	r19
     522:	27 95       	ror	r18
     524:	0a 94       	dec	r0
     526:	e2 f7       	brpl	.-8      	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
     528:	21 70       	andi	r18, 0x01	; 1
     52a:	33 27       	eor	r19, r19
     52c:	22 0f       	add	r18, r18
     52e:	33 1f       	adc	r19, r19
     530:	8f 81       	ldd	r24, Y+7	; 0x07
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	01 2e       	mov	r0, r17
     536:	02 c0       	rjmp	.+4      	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
     538:	95 95       	asr	r25
     53a:	87 95       	ror	r24
     53c:	0a 94       	dec	r0
     53e:	e2 f7       	brpl	.-8      	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
     540:	a8 28       	or	r10, r8
     542:	aa 29       	or	r26, r10
     544:	ea 2b       	or	r30, r26
     546:	6e 2b       	or	r22, r30
     548:	46 2b       	or	r20, r22
     54a:	24 2b       	or	r18, r20
     54c:	81 70       	andi	r24, 0x01	; 1
     54e:	82 2b       	or	r24, r18
     550:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
     554:	88 84       	ldd	r8, Y+8	; 0x08
     556:	91 2c       	mov	r9, r1
     558:	01 2e       	mov	r0, r17
     55a:	02 c0       	rjmp	.+4      	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
     55c:	95 94       	asr	r9
     55e:	87 94       	ror	r8
     560:	0a 94       	dec	r0
     562:	e2 f7       	brpl	.-8      	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
     564:	96 94       	lsr	r9
     566:	98 2c       	mov	r9, r8
     568:	88 24       	eor	r8, r8
     56a:	97 94       	ror	r9
     56c:	87 94       	ror	r8
     56e:	a9 84       	ldd	r10, Y+9	; 0x09
     570:	b1 2c       	mov	r11, r1
     572:	01 2e       	mov	r0, r17
     574:	02 c0       	rjmp	.+4      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
     576:	b5 94       	asr	r11
     578:	a7 94       	ror	r10
     57a:	0a 94       	dec	r0
     57c:	e2 f7       	brpl	.-8      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	a8 22       	and	r10, r24
     582:	bb 24       	eor	r11, r11
     584:	00 24       	eor	r0, r0
     586:	b6 94       	lsr	r11
     588:	a7 94       	ror	r10
     58a:	07 94       	ror	r0
     58c:	b6 94       	lsr	r11
     58e:	a7 94       	ror	r10
     590:	07 94       	ror	r0
     592:	ba 2c       	mov	r11, r10
     594:	a0 2c       	mov	r10, r0
     596:	aa 85       	ldd	r26, Y+10	; 0x0a
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	01 2e       	mov	r0, r17
     59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
     59e:	b5 95       	asr	r27
     5a0:	a7 95       	ror	r26
     5a2:	0a 94       	dec	r0
     5a4:	e2 f7       	brpl	.-8      	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
     5a6:	a1 70       	andi	r26, 0x01	; 1
     5a8:	bb 27       	eor	r27, r27
     5aa:	aa 0f       	add	r26, r26
     5ac:	bb 1f       	adc	r27, r27
     5ae:	a2 95       	swap	r26
     5b0:	b2 95       	swap	r27
     5b2:	b0 7f       	andi	r27, 0xF0	; 240
     5b4:	ba 27       	eor	r27, r26
     5b6:	a0 7f       	andi	r26, 0xF0	; 240
     5b8:	ba 27       	eor	r27, r26
     5ba:	eb 85       	ldd	r30, Y+11	; 0x0b
     5bc:	f0 e0       	ldi	r31, 0x00	; 0
     5be:	01 2e       	mov	r0, r17
     5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
     5c2:	f5 95       	asr	r31
     5c4:	e7 95       	ror	r30
     5c6:	0a 94       	dec	r0
     5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
     5ca:	e1 70       	andi	r30, 0x01	; 1
     5cc:	ff 27       	eor	r31, r31
     5ce:	e2 95       	swap	r30
     5d0:	f2 95       	swap	r31
     5d2:	f0 7f       	andi	r31, 0xF0	; 240
     5d4:	fe 27       	eor	r31, r30
     5d6:	e0 7f       	andi	r30, 0xF0	; 240
     5d8:	fe 27       	eor	r31, r30
     5da:	6c 85       	ldd	r22, Y+12	; 0x0c
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	01 2e       	mov	r0, r17
     5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
     5e2:	75 95       	asr	r23
     5e4:	67 95       	ror	r22
     5e6:	0a 94       	dec	r0
     5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
     5ea:	61 70       	andi	r22, 0x01	; 1
     5ec:	77 27       	eor	r23, r23
     5ee:	66 0f       	add	r22, r22
     5f0:	77 1f       	adc	r23, r23
     5f2:	66 0f       	add	r22, r22
     5f4:	77 1f       	adc	r23, r23
     5f6:	66 0f       	add	r22, r22
     5f8:	77 1f       	adc	r23, r23
     5fa:	4d 85       	ldd	r20, Y+13	; 0x0d
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	01 2e       	mov	r0, r17
     600:	02 c0       	rjmp	.+4      	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
     602:	55 95       	asr	r21
     604:	47 95       	ror	r20
     606:	0a 94       	dec	r0
     608:	e2 f7       	brpl	.-8      	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
     60a:	41 70       	andi	r20, 0x01	; 1
     60c:	55 27       	eor	r21, r21
     60e:	44 0f       	add	r20, r20
     610:	55 1f       	adc	r21, r21
     612:	44 0f       	add	r20, r20
     614:	55 1f       	adc	r21, r21
     616:	2e 85       	ldd	r18, Y+14	; 0x0e
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	01 2e       	mov	r0, r17
     61c:	02 c0       	rjmp	.+4      	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
     61e:	35 95       	asr	r19
     620:	27 95       	ror	r18
     622:	0a 94       	dec	r0
     624:	e2 f7       	brpl	.-8      	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
     626:	21 70       	andi	r18, 0x01	; 1
     628:	33 27       	eor	r19, r19
     62a:	22 0f       	add	r18, r18
     62c:	33 1f       	adc	r19, r19
     62e:	cf 85       	ldd	r28, Y+15	; 0x0f
     630:	d0 e0       	ldi	r29, 0x00	; 0
     632:	02 c0       	rjmp	.+4      	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
     634:	d5 95       	asr	r29
     636:	c7 95       	ror	r28
     638:	1a 95       	dec	r17
     63a:	e2 f7       	brpl	.-8      	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
     63c:	88 2d       	mov	r24, r8
     63e:	8a 29       	or	r24, r10
     640:	8a 2b       	or	r24, r26
     642:	8e 2b       	or	r24, r30
     644:	86 2b       	or	r24, r22
     646:	84 2b       	or	r24, r20
     648:	82 2b       	or	r24, r18
     64a:	c1 70       	andi	r28, 0x01	; 1
     64c:	8c 2b       	or	r24, r28
     64e:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
     652:	0f 5f       	subi	r16, 0xFF	; 255
     654:	01 c0       	rjmp	.+2      	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
     656:	00 e0       	ldi	r16, 0x00	; 0
     658:	08 30       	cpi	r16, 0x08	; 8
     65a:	08 f4       	brcc	.+2      	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
     65c:	d0 ce       	rjmp	.-608    	; 0x3fe <LCD_12864_Draw_bitmap+0x1c>
     65e:	d3 94       	inc	r13
     660:	8f e3       	ldi	r24, 0x3F	; 63
     662:	8d 15       	cp	r24, r13
     664:	c0 f7       	brcc	.-16     	; 0x656 <__EEPROM_REGION_LENGTH__+0x256>
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	1f 91       	pop	r17
     66c:	0f 91       	pop	r16
     66e:	ff 90       	pop	r15
     670:	ef 90       	pop	r14
     672:	df 90       	pop	r13
     674:	bf 90       	pop	r11
     676:	af 90       	pop	r10
     678:	9f 90       	pop	r9
     67a:	8f 90       	pop	r8
     67c:	08 95       	ret

0000067e <clear_LCD_12864>:
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     684:	8f e3       	ldi	r24, 0x3F	; 63
     686:	9c e9       	ldi	r25, 0x9C	; 156
     688:	01 97       	sbiw	r24, 0x01	; 1
     68a:	f1 f7       	brne	.-4      	; 0x688 <clear_LCD_12864+0xa>
     68c:	00 c0       	rjmp	.+0      	; 0x68e <clear_LCD_12864+0x10>
     68e:	00 00       	nop
     690:	08 95       	ret

00000692 <LCD_12864_ini>:
     692:	2f ef       	ldi	r18, 0xFF	; 255
     694:	83 ef       	ldi	r24, 0xF3	; 243
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	21 50       	subi	r18, 0x01	; 1
     69a:	80 40       	sbci	r24, 0x00	; 0
     69c:	90 40       	sbci	r25, 0x00	; 0
     69e:	e1 f7       	brne	.-8      	; 0x698 <LCD_12864_ini+0x6>
     6a0:	00 c0       	rjmp	.+0      	; 0x6a2 <LCD_12864_ini+0x10>
     6a2:	00 00       	nop
     6a4:	8c e0       	ldi	r24, 0x0C	; 12
     6a6:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     6aa:	8f e8       	ldi	r24, 0x8F	; 143
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	01 97       	sbiw	r24, 0x01	; 1
     6b0:	f1 f7       	brne	.-4      	; 0x6ae <LCD_12864_ini+0x1c>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <LCD_12864_ini+0x22>
     6b4:	00 00       	nop
     6b6:	0e 94 3f 03 	call	0x67e	; 0x67e <clear_LCD_12864>
     6ba:	86 e0       	ldi	r24, 0x06	; 6
     6bc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     6c0:	8f e3       	ldi	r24, 0x3F	; 63
     6c2:	9c e9       	ldi	r25, 0x9C	; 156
     6c4:	01 97       	sbiw	r24, 0x01	; 1
     6c6:	f1 f7       	brne	.-4      	; 0x6c4 <LCD_12864_ini+0x32>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <LCD_12864_ini+0x38>
     6ca:	00 00       	nop
     6cc:	08 95       	ret

000006ce <setpos_LCD_12864>:
     6ce:	61 30       	cpi	r22, 0x01	; 1
     6d0:	71 05       	cpc	r23, r1
     6d2:	41 f0       	breq	.+16     	; 0x6e4 <setpos_LCD_12864+0x16>
     6d4:	68 f0       	brcs	.+26     	; 0x6f0 <setpos_LCD_12864+0x22>
     6d6:	62 30       	cpi	r22, 0x02	; 2
     6d8:	71 05       	cpc	r23, r1
     6da:	31 f0       	breq	.+12     	; 0x6e8 <setpos_LCD_12864+0x1a>
     6dc:	63 30       	cpi	r22, 0x03	; 3
     6de:	71 05       	cpc	r23, r1
     6e0:	29 f0       	breq	.+10     	; 0x6ec <setpos_LCD_12864+0x1e>
     6e2:	07 c0       	rjmp	.+14     	; 0x6f2 <setpos_LCD_12864+0x24>
     6e4:	90 e9       	ldi	r25, 0x90	; 144
     6e6:	05 c0       	rjmp	.+10     	; 0x6f2 <setpos_LCD_12864+0x24>
     6e8:	98 e8       	ldi	r25, 0x88	; 136
     6ea:	03 c0       	rjmp	.+6      	; 0x6f2 <setpos_LCD_12864+0x24>
     6ec:	98 e9       	ldi	r25, 0x98	; 152
     6ee:	01 c0       	rjmp	.+2      	; 0x6f2 <setpos_LCD_12864+0x24>
     6f0:	90 e8       	ldi	r25, 0x80	; 128
     6f2:	89 2b       	or	r24, r25
     6f4:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     6f8:	08 95       	ret

000006fa <LCD_12864_print_symbol>:
     6fa:	bf 92       	push	r11
     6fc:	cf 92       	push	r12
     6fe:	df 92       	push	r13
     700:	ef 92       	push	r14
     702:	ff 92       	push	r15
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	6c 01       	movw	r12, r24
     70e:	7b 01       	movw	r14, r22
     710:	b4 2e       	mov	r11, r20
     712:	c0 e0       	ldi	r28, 0x00	; 0
     714:	d0 e0       	ldi	r29, 0x00	; 0
     716:	2d c0       	rjmp	.+90     	; 0x772 <LCD_12864_print_symbol+0x78>
     718:	bb 20       	and	r11, r11
     71a:	b1 f0       	breq	.+44     	; 0x748 <LCD_12864_print_symbol+0x4e>
     71c:	8e 01       	movw	r16, r28
     71e:	0c 0d       	add	r16, r12
     720:	1d 1d       	adc	r17, r13
     722:	01 50       	subi	r16, 0x01	; 1
     724:	11 09       	sbc	r17, r1
     726:	c7 01       	movw	r24, r14
     728:	88 0f       	add	r24, r24
     72a:	99 1f       	adc	r25, r25
     72c:	8e 0d       	add	r24, r14
     72e:	9f 1d       	adc	r25, r15
     730:	88 0f       	add	r24, r24
     732:	99 1f       	adc	r25, r25
     734:	8c 0f       	add	r24, r28
     736:	9d 1f       	adc	r25, r29
     738:	0e 94 15 13 	call	0x262a	; 0x262a <read_symbol_from_SD>
     73c:	f8 01       	movw	r30, r16
     73e:	e8 50       	subi	r30, 0x08	; 8
     740:	fe 4f       	sbci	r31, 0xFE	; 254
     742:	80 95       	com	r24
     744:	80 83       	st	Z, r24
     746:	14 c0       	rjmp	.+40     	; 0x770 <LCD_12864_print_symbol+0x76>
     748:	86 01       	movw	r16, r12
     74a:	0c 0f       	add	r16, r28
     74c:	1d 1f       	adc	r17, r29
     74e:	01 50       	subi	r16, 0x01	; 1
     750:	11 09       	sbc	r17, r1
     752:	c7 01       	movw	r24, r14
     754:	88 0f       	add	r24, r24
     756:	99 1f       	adc	r25, r25
     758:	8e 0d       	add	r24, r14
     75a:	9f 1d       	adc	r25, r15
     75c:	88 0f       	add	r24, r24
     75e:	99 1f       	adc	r25, r25
     760:	8c 0f       	add	r24, r28
     762:	9d 1f       	adc	r25, r29
     764:	0e 94 15 13 	call	0x262a	; 0x262a <read_symbol_from_SD>
     768:	f8 01       	movw	r30, r16
     76a:	e8 50       	subi	r30, 0x08	; 8
     76c:	fe 4f       	sbci	r31, 0xFE	; 254
     76e:	80 83       	st	Z, r24
     770:	21 96       	adiw	r28, 0x01	; 1
     772:	c7 30       	cpi	r28, 0x07	; 7
     774:	d1 05       	cpc	r29, r1
     776:	84 f2       	brlt	.-96     	; 0x718 <LCD_12864_print_symbol+0x1e>
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	1f 91       	pop	r17
     77e:	0f 91       	pop	r16
     780:	ff 90       	pop	r15
     782:	ef 90       	pop	r14
     784:	df 90       	pop	r13
     786:	cf 90       	pop	r12
     788:	bf 90       	pop	r11
     78a:	08 95       	ret

0000078c <LCD_12864_Decode_UTF8>:
     78c:	9f 92       	push	r9
     78e:	af 92       	push	r10
     790:	bf 92       	push	r11
     792:	cf 92       	push	r12
     794:	df 92       	push	r13
     796:	ef 92       	push	r14
     798:	ff 92       	push	r15
     79a:	0f 93       	push	r16
     79c:	1f 93       	push	r17
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	cd b7       	in	r28, 0x3d	; 61
     7a4:	de b7       	in	r29, 0x3e	; 62
     7a6:	ac 97       	sbiw	r28, 0x2c	; 44
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	f8 94       	cli
     7ac:	de bf       	out	0x3e, r29	; 62
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	cd bf       	out	0x3d, r28	; 61
     7b2:	6c 01       	movw	r12, r24
     7b4:	16 2f       	mov	r17, r22
     7b6:	94 2e       	mov	r9, r20
     7b8:	59 01       	movw	r10, r18
     7ba:	00 00       	nop
     7bc:	ce 01       	movw	r24, r28
     7be:	01 96       	adiw	r24, 0x01	; 1
     7c0:	0e 94 63 0f 	call	0x1ec6	; 0x1ec6 <pf_mount>
     7c4:	85 e0       	ldi	r24, 0x05	; 5
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 9b 10 	call	0x2136	; 0x2136 <pf_open>
     7cc:	80 e8       	ldi	r24, 0x80	; 128
     7ce:	18 9f       	mul	r17, r24
     7d0:	c0 0c       	add	r12, r0
     7d2:	d1 1c       	adc	r13, r1
     7d4:	11 24       	eor	r1, r1
     7d6:	e1 2c       	mov	r14, r1
     7d8:	f1 2c       	mov	r15, r1
     7da:	7e c0       	rjmp	.+252    	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     7dc:	f5 01       	movw	r30, r10
     7de:	ee 0d       	add	r30, r14
     7e0:	ff 1d       	adc	r31, r15
     7e2:	00 81       	ld	r16, Z
     7e4:	00 3c       	cpi	r16, 0xC0	; 192
     7e6:	d8 f4       	brcc	.+54     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7e8:	08 3a       	cpi	r16, 0xA8	; 168
     7ea:	c9 f0       	breq	.+50     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7ec:	08 3b       	cpi	r16, 0xB8	; 184
     7ee:	b9 f0       	breq	.+46     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7f0:	07 3b       	cpi	r16, 0xB7	; 183
     7f2:	a9 f0       	breq	.+42     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7f4:	60 2f       	mov	r22, r16
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	99 20       	and	r9, r9
     7fa:	39 f0       	breq	.+14     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7fc:	60 52       	subi	r22, 0x20	; 32
     7fe:	71 09       	sbc	r23, r1
     800:	41 e0       	ldi	r20, 0x01	; 1
     802:	c6 01       	movw	r24, r12
     804:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     808:	06 c0       	rjmp	.+12     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     80a:	60 52       	subi	r22, 0x20	; 32
     80c:	71 09       	sbc	r23, r1
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	c6 01       	movw	r24, r12
     812:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     816:	86 e0       	ldi	r24, 0x06	; 6
     818:	c8 0e       	add	r12, r24
     81a:	d1 1c       	adc	r13, r1
     81c:	5a c0       	rjmp	.+180    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     81e:	10 e0       	ldi	r17, 0x00	; 0
     820:	c8 01       	movw	r24, r16
     822:	80 5c       	subi	r24, 0xC0	; 192
     824:	91 09       	sbc	r25, r1
     826:	80 34       	cpi	r24, 0x40	; 64
     828:	91 05       	cpc	r25, r1
     82a:	a0 f4       	brcc	.+40     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     82c:	99 20       	and	r9, r9
     82e:	41 f0       	breq	.+16     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     830:	41 e0       	ldi	r20, 0x01	; 1
     832:	b8 01       	movw	r22, r16
     834:	61 56       	subi	r22, 0x61	; 97
     836:	71 09       	sbc	r23, r1
     838:	c6 01       	movw	r24, r12
     83a:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     83e:	07 c0       	rjmp	.+14     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     840:	40 e0       	ldi	r20, 0x00	; 0
     842:	b8 01       	movw	r22, r16
     844:	61 56       	subi	r22, 0x61	; 97
     846:	71 09       	sbc	r23, r1
     848:	c6 01       	movw	r24, r12
     84a:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     84e:	86 e0       	ldi	r24, 0x06	; 6
     850:	c8 0e       	add	r12, r24
     852:	d1 1c       	adc	r13, r1
     854:	08 3a       	cpi	r16, 0xA8	; 168
     856:	11 05       	cpc	r17, r1
     858:	91 f4       	brne	.+36     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
     85a:	99 20       	and	r9, r9
     85c:	39 f0       	breq	.+14     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
     85e:	41 e0       	ldi	r20, 0x01	; 1
     860:	6f e9       	ldi	r22, 0x9F	; 159
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	c6 01       	movw	r24, r12
     866:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     86a:	06 c0       	rjmp	.+12     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
     86c:	40 e0       	ldi	r20, 0x00	; 0
     86e:	6f e9       	ldi	r22, 0x9F	; 159
     870:	70 e0       	ldi	r23, 0x00	; 0
     872:	c6 01       	movw	r24, r12
     874:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     878:	86 e0       	ldi	r24, 0x06	; 6
     87a:	c8 0e       	add	r12, r24
     87c:	d1 1c       	adc	r13, r1
     87e:	08 3b       	cpi	r16, 0xB8	; 184
     880:	11 05       	cpc	r17, r1
     882:	91 f4       	brne	.+36     	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
     884:	99 20       	and	r9, r9
     886:	39 f0       	breq	.+14     	; 0x896 <__DATA_REGION_LENGTH__+0x96>
     888:	41 e0       	ldi	r20, 0x01	; 1
     88a:	60 ea       	ldi	r22, 0xA0	; 160
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	c6 01       	movw	r24, r12
     890:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     894:	06 c0       	rjmp	.+12     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	60 ea       	ldi	r22, 0xA0	; 160
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	c6 01       	movw	r24, r12
     89e:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     8a2:	86 e0       	ldi	r24, 0x06	; 6
     8a4:	c8 0e       	add	r12, r24
     8a6:	d1 1c       	adc	r13, r1
     8a8:	07 3b       	cpi	r16, 0xB7	; 183
     8aa:	11 05       	cpc	r17, r1
     8ac:	91 f4       	brne	.+36     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     8ae:	99 20       	and	r9, r9
     8b0:	39 f0       	breq	.+14     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     8b2:	41 e0       	ldi	r20, 0x01	; 1
     8b4:	61 ea       	ldi	r22, 0xA1	; 161
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	c6 01       	movw	r24, r12
     8ba:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     8be:	06 c0       	rjmp	.+12     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
     8c0:	40 e0       	ldi	r20, 0x00	; 0
     8c2:	61 ea       	ldi	r22, 0xA1	; 161
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	c6 01       	movw	r24, r12
     8c8:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     8cc:	86 e0       	ldi	r24, 0x06	; 6
     8ce:	c8 0e       	add	r12, r24
     8d0:	d1 1c       	adc	r13, r1
     8d2:	8f ef       	ldi	r24, 0xFF	; 255
     8d4:	e8 1a       	sub	r14, r24
     8d6:	f8 0a       	sbc	r15, r24
     8d8:	f5 01       	movw	r30, r10
     8da:	01 90       	ld	r0, Z+
     8dc:	00 20       	and	r0, r0
     8de:	e9 f7       	brne	.-6      	; 0x8da <__DATA_REGION_LENGTH__+0xda>
     8e0:	31 97       	sbiw	r30, 0x01	; 1
     8e2:	ea 19       	sub	r30, r10
     8e4:	fb 09       	sbc	r31, r11
     8e6:	ee 16       	cp	r14, r30
     8e8:	ff 06       	cpc	r15, r31
     8ea:	08 f4       	brcc	.+2      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
     8ec:	77 cf       	rjmp	.-274    	; 0x7dc <LCD_12864_Decode_UTF8+0x50>
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	0e 94 63 0f 	call	0x1ec6	; 0x1ec6 <pf_mount>
     8f6:	ac 96       	adiw	r28, 0x2c	; 44
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	f8 94       	cli
     8fc:	de bf       	out	0x3e, r29	; 62
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	cd bf       	out	0x3d, r28	; 61
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	1f 91       	pop	r17
     908:	0f 91       	pop	r16
     90a:	ff 90       	pop	r15
     90c:	ef 90       	pop	r14
     90e:	df 90       	pop	r13
     910:	cf 90       	pop	r12
     912:	bf 90       	pop	r11
     914:	af 90       	pop	r10
     916:	9f 90       	pop	r9
     918:	08 95       	ret

0000091a <LCD_12864_Clean_Frame_buffer>:
	LCD_12864_Clean_Frame_buffer();
}
/*------------------------Функция очистки буфера кадра-------------------------*/
void LCD_12864_Clean_Frame_buffer(void) {
	/// Функция очистки буфера кадра
	memset(Frame_buffer, 0x00, sizeof(Frame_buffer));
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	94 e0       	ldi	r25, 0x04	; 4
     91e:	e8 ef       	ldi	r30, 0xF8	; 248
     920:	f1 e0       	ldi	r31, 0x01	; 1
     922:	df 01       	movw	r26, r30
     924:	9c 01       	movw	r18, r24
     926:	1d 92       	st	X+, r1
     928:	21 50       	subi	r18, 0x01	; 1
     92a:	30 40       	sbci	r19, 0x00	; 0
     92c:	e1 f7       	brne	.-8      	; 0x926 <LCD_12864_Clean_Frame_buffer+0xc>
     92e:	08 95       	ret

00000930 <LCD_12864_Clean>:
	for (; x_start < x_end; x_start++) {
		Frame_buffer[x_start] = ~(Frame_buffer[x_start]);
	}
}
/*---------------Функция очистки дисплея в графическом режиме--------------------*/
void LCD_12864_Clean() {
     930:	cf 93       	push	r28
     932:	df 93       	push	r29
	/// Функция очистки дисплея в графическом режиме
	uint8_t x, y;
	for (y = 0; y < 64; y++) {
     934:	d0 e0       	ldi	r29, 0x00	; 0
     936:	1e c0       	rjmp	.+60     	; 0x974 <LCD_12864_Clean+0x44>
		if (y < 32) {
     938:	d0 32       	cpi	r29, 0x20	; 32
     93a:	48 f4       	brcc	.+18     	; 0x94e <LCD_12864_Clean+0x1e>
			LCD_12864_send_command(0x80 | y);
     93c:	8d 2f       	mov	r24, r29
     93e:	80 68       	ori	r24, 0x80	; 128
     940:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
			LCD_12864_send_command(0x80);
     944:	80 e8       	ldi	r24, 0x80	; 128
     946:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
	for (; x_start < x_end; x_start++) {
		Frame_buffer[x_start] = ~(Frame_buffer[x_start]);
	}
}
/*---------------Функция очистки дисплея в графическом режиме--------------------*/
void LCD_12864_Clean() {
     94a:	c0 e0       	ldi	r28, 0x00	; 0
     94c:	10 c0       	rjmp	.+32     	; 0x96e <LCD_12864_Clean+0x3e>
	for (y = 0; y < 64; y++) {
		if (y < 32) {
			LCD_12864_send_command(0x80 | y);
			LCD_12864_send_command(0x80);
			} else {
			LCD_12864_send_command(0x80 | (y - 32));
     94e:	80 ee       	ldi	r24, 0xE0	; 224
     950:	8d 0f       	add	r24, r29
     952:	80 68       	ori	r24, 0x80	; 128
     954:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
			LCD_12864_send_command(0x88);
     958:	88 e8       	ldi	r24, 0x88	; 136
     95a:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     95e:	f5 cf       	rjmp	.-22     	; 0x94a <LCD_12864_Clean+0x1a>
		}
		for (x = 0; x < 8; x++) {
			LCD_12864_send_data(0x00);
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
			LCD_12864_send_data(0x00);
     966:	80 e0       	ldi	r24, 0x00	; 0
     968:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
			LCD_12864_send_command(0x80);
			} else {
			LCD_12864_send_command(0x80 | (y - 32));
			LCD_12864_send_command(0x88);
		}
		for (x = 0; x < 8; x++) {
     96c:	cf 5f       	subi	r28, 0xFF	; 255
     96e:	c8 30       	cpi	r28, 0x08	; 8
     970:	b8 f3       	brcs	.-18     	; 0x960 <LCD_12864_Clean+0x30>
}
/*---------------Функция очистки дисплея в графическом режиме--------------------*/
void LCD_12864_Clean() {
	/// Функция очистки дисплея в графическом режиме
	uint8_t x, y;
	for (y = 0; y < 64; y++) {
     972:	df 5f       	subi	r29, 0xFF	; 255
     974:	d0 34       	cpi	r29, 0x40	; 64
     976:	00 f3       	brcs	.-64     	; 0x938 <LCD_12864_Clean+0x8>
		for (x = 0; x < 8; x++) {
			LCD_12864_send_data(0x00);
			LCD_12864_send_data(0x00);
		}
	}
	LCD_12864_Clean_Frame_buffer();
     978:	0e 94 8d 04 	call	0x91a	; 0x91a <LCD_12864_Clean_Frame_buffer>
}
     97c:	df 91       	pop	r29
     97e:	cf 91       	pop	r28
     980:	08 95       	ret

00000982 <LCD_12864_Draw_line>:
	memset(Frame_buffer, 0x00, sizeof(Frame_buffer));
}
/*----------Различная графика--------------------*/
/*-----------------------------------------------*/
/*----------Линия--------------------*/
void LCD_12864_Draw_line(uint8_t x_start, uint8_t y_start, uint8_t x_end, uint8_t y_end) {
     982:	8f 92       	push	r8
     984:	9f 92       	push	r9
     986:	af 92       	push	r10
     988:	bf 92       	push	r11
     98a:	cf 92       	push	r12
     98c:	df 92       	push	r13
     98e:	ef 92       	push	r14
     990:	ff 92       	push	r15
     992:	0f 93       	push	r16
     994:	1f 93       	push	r17
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	c8 2f       	mov	r28, r24
     99c:	d6 2f       	mov	r29, r22
     99e:	b4 2e       	mov	r11, r20
     9a0:	82 2e       	mov	r8, r18
	int dx = (x_end >= x_start) ? x_end - x_start : x_start - x_end;
     9a2:	48 17       	cp	r20, r24
     9a4:	28 f0       	brcs	.+10     	; 0x9b0 <LCD_12864_Draw_line+0x2e>
     9a6:	c4 2e       	mov	r12, r20
     9a8:	d1 2c       	mov	r13, r1
     9aa:	c8 1a       	sub	r12, r24
     9ac:	d1 08       	sbc	r13, r1
     9ae:	04 c0       	rjmp	.+8      	; 0x9b8 <LCD_12864_Draw_line+0x36>
     9b0:	c8 2e       	mov	r12, r24
     9b2:	d1 2c       	mov	r13, r1
     9b4:	c4 1a       	sub	r12, r20
     9b6:	d1 08       	sbc	r13, r1
	int dy = (y_end >= y_start) ? y_end - y_start : y_start - y_end;
     9b8:	8d 16       	cp	r8, r29
     9ba:	28 f0       	brcs	.+10     	; 0x9c6 <LCD_12864_Draw_line+0x44>
     9bc:	e8 2c       	mov	r14, r8
     9be:	f1 2c       	mov	r15, r1
     9c0:	ed 1a       	sub	r14, r29
     9c2:	f1 08       	sbc	r15, r1
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <LCD_12864_Draw_line+0x4c>
     9c6:	ed 2e       	mov	r14, r29
     9c8:	f1 2c       	mov	r15, r1
     9ca:	e8 18       	sub	r14, r8
     9cc:	f1 08       	sbc	r15, r1
	int sx = (x_start < x_end) ? 1 : -1;
     9ce:	cb 15       	cp	r28, r11
     9d0:	18 f4       	brcc	.+6      	; 0x9d8 <LCD_12864_Draw_line+0x56>
     9d2:	aa 24       	eor	r10, r10
     9d4:	a3 94       	inc	r10
     9d6:	02 c0       	rjmp	.+4      	; 0x9dc <LCD_12864_Draw_line+0x5a>
     9d8:	aa 24       	eor	r10, r10
     9da:	aa 94       	dec	r10
	int sy = (y_start < y_end) ? 1 : -1;
     9dc:	d8 15       	cp	r29, r8
     9de:	18 f4       	brcc	.+6      	; 0x9e6 <LCD_12864_Draw_line+0x64>
     9e0:	99 24       	eor	r9, r9
     9e2:	93 94       	inc	r9
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <LCD_12864_Draw_line+0x68>
     9e6:	99 24       	eor	r9, r9
     9e8:	9a 94       	dec	r9
	int err = dx - dy;
     9ea:	86 01       	movw	r16, r12
     9ec:	0e 19       	sub	r16, r14
     9ee:	1f 09       	sbc	r17, r15

	for (;;) {
		LCD_1286_Draw_pixel(x_start, y_start);
     9f0:	6d 2f       	mov	r22, r29
     9f2:	8c 2f       	mov	r24, r28
     9f4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <LCD_1286_Draw_pixel>
		if (x_start == x_end && y_start == y_end)
     9f8:	cb 11       	cpse	r28, r11
     9fa:	02 c0       	rjmp	.+4      	; 0xa00 <LCD_12864_Draw_line+0x7e>
     9fc:	d8 15       	cp	r29, r8
     9fe:	a1 f0       	breq	.+40     	; 0xa28 <LCD_12864_Draw_line+0xa6>
		break;
		int e2 = err + err;
     a00:	c8 01       	movw	r24, r16
     a02:	88 0f       	add	r24, r24
     a04:	99 1f       	adc	r25, r25
		if (e2 > -dy) {
     a06:	22 27       	eor	r18, r18
     a08:	33 27       	eor	r19, r19
     a0a:	2e 19       	sub	r18, r14
     a0c:	3f 09       	sbc	r19, r15
     a0e:	28 17       	cp	r18, r24
     a10:	39 07       	cpc	r19, r25
     a12:	1c f4       	brge	.+6      	; 0xa1a <LCD_12864_Draw_line+0x98>
			err -= dy;
     a14:	0e 19       	sub	r16, r14
     a16:	1f 09       	sbc	r17, r15
			x_start += sx;
     a18:	ca 0d       	add	r28, r10
		}
		if (e2 < dx) {
     a1a:	8c 15       	cp	r24, r12
     a1c:	9d 05       	cpc	r25, r13
     a1e:	44 f7       	brge	.-48     	; 0x9f0 <LCD_12864_Draw_line+0x6e>
			err += dx;
     a20:	0c 0d       	add	r16, r12
     a22:	1d 1d       	adc	r17, r13
			y_start += sy;
     a24:	d9 0d       	add	r29, r9
     a26:	e4 cf       	rjmp	.-56     	; 0x9f0 <LCD_12864_Draw_line+0x6e>
		}
	}
}
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	ff 90       	pop	r15
     a32:	ef 90       	pop	r14
     a34:	df 90       	pop	r13
     a36:	cf 90       	pop	r12
     a38:	bf 90       	pop	r11
     a3a:	af 90       	pop	r10
     a3c:	9f 90       	pop	r9
     a3e:	8f 90       	pop	r8
     a40:	08 95       	ret

00000a42 <LCD_12864_Draw_rectangle>:
/*----------Пустотелый прямоугольник--------------------*/
void LCD_12864_Draw_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
     a42:	ef 92       	push	r14
     a44:	ff 92       	push	r15
     a46:	0f 93       	push	r16
     a48:	1f 93       	push	r17
     a4a:	cf 93       	push	r28
     a4c:	df 93       	push	r29
     a4e:	7c 01       	movw	r14, r24
     a50:	8b 01       	movw	r16, r22
     a52:	e9 01       	movw	r28, r18
	/// \param y - начальная точка по оси "y"
	/// \param width - ширина прямоугольника
	/// \param height - высота прямоугольника

	/*Проверка ширины и высоты*/
	if ((x + width) >= ST7920_width) {
     a54:	9c 01       	movw	r18, r24
     a56:	24 0f       	add	r18, r20
     a58:	35 1f       	adc	r19, r21
     a5a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ST7920_width>
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	28 17       	cp	r18, r24
     a62:	39 07       	cpc	r19, r25
     a64:	18 f0       	brcs	.+6      	; 0xa6c <LCD_12864_Draw_rectangle+0x2a>
		width = ST7920_width - x;
     a66:	ac 01       	movw	r20, r24
     a68:	4e 19       	sub	r20, r14
     a6a:	5f 09       	sbc	r21, r15
	}
	if ((y + height) >= ST7920_height) {
     a6c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	98 01       	movw	r18, r16
     a74:	2c 0f       	add	r18, r28
     a76:	3d 1f       	adc	r19, r29
     a78:	28 17       	cp	r18, r24
     a7a:	39 07       	cpc	r19, r25
     a7c:	18 f0       	brcs	.+6      	; 0xa84 <LCD_12864_Draw_rectangle+0x42>
		height = ST7920_height - y;
     a7e:	ec 01       	movw	r28, r24
     a80:	c0 1b       	sub	r28, r16
     a82:	d1 0b       	sbc	r29, r17
	}

	/*Рисуем линии*/
	LCD_12864_Draw_line(x, y, x + width, y); /*Верх прямоугольника*/
     a84:	de 2d       	mov	r29, r14
     a86:	d4 0f       	add	r29, r20
     a88:	20 2f       	mov	r18, r16
     a8a:	4d 2f       	mov	r20, r29
     a8c:	60 2f       	mov	r22, r16
     a8e:	8e 2d       	mov	r24, r14
     a90:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y + height, x + width, y + height); /*Низ прямоугольника*/
     a94:	c0 0f       	add	r28, r16
     a96:	2c 2f       	mov	r18, r28
     a98:	4d 2f       	mov	r20, r29
     a9a:	6c 2f       	mov	r22, r28
     a9c:	8e 2d       	mov	r24, r14
     a9e:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y, x, y + height); /*Левая сторона прямоугольника*/
     aa2:	2c 2f       	mov	r18, r28
     aa4:	4e 2d       	mov	r20, r14
     aa6:	60 2f       	mov	r22, r16
     aa8:	8e 2d       	mov	r24, r14
     aaa:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x + width, y, x + width, y + height); /*Правая сторона прямоугольника*/
     aae:	2c 2f       	mov	r18, r28
     ab0:	4d 2f       	mov	r20, r29
     ab2:	60 2f       	mov	r22, r16
     ab4:	8d 2f       	mov	r24, r29
     ab6:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	1f 91       	pop	r17
     ac0:	0f 91       	pop	r16
     ac2:	ff 90       	pop	r15
     ac4:	ef 90       	pop	r14
     ac6:	08 95       	ret

00000ac8 <timer_ini>:
uint8_t flag_irq = 1;


void timer_ini(void)//период 4сек
{
	TCCR1B |= (1<<WGM12); // устанавливаем режим СТС (сброс по совпадению)
     ac8:	e1 e8       	ldi	r30, 0x81	; 129
     aca:	f0 e0       	ldi	r31, 0x00	; 0
     acc:	80 81       	ld	r24, Z
     ace:	88 60       	ori	r24, 0x08	; 8
     ad0:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); //устанавливаем бит разрешения прерывания 1ого счетчика по совпадению с OCR1A(H и L)
     ad2:	af e6       	ldi	r26, 0x6F	; 111
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	8c 91       	ld	r24, X
     ad8:	82 60       	ori	r24, 0x02	; 2
     ada:	8c 93       	st	X, r24
	OCR1AH = 0b11110100; //записываем в регистр число для сравнения
     adc:	84 ef       	ldi	r24, 0xF4	; 244
     ade:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0b00100100;
     ae2:	84 e2       	ldi	r24, 0x24	; 36
     ae4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1B |= (1<<CS12)|(1<<CS10);//установим делитель 256.
     ae8:	80 81       	ld	r24, Z
     aea:	85 60       	ori	r24, 0x05	; 5
     aec:	80 83       	st	Z, r24
     aee:	08 95       	ret

00000af0 <__vector_11>:
}
//——————————————–
ISR (TIMER1_COMPA_vect)
{
     af0:	1f 92       	push	r1
     af2:	0f 92       	push	r0
     af4:	0f b6       	in	r0, 0x3f	; 63
     af6:	0f 92       	push	r0
     af8:	11 24       	eor	r1, r1
     afa:	2f 93       	push	r18
     afc:	3f 93       	push	r19
     afe:	4f 93       	push	r20
     b00:	5f 93       	push	r21
     b02:	6f 93       	push	r22
     b04:	7f 93       	push	r23
     b06:	8f 93       	push	r24
     b08:	9f 93       	push	r25
     b0a:	af 93       	push	r26
     b0c:	bf 93       	push	r27
     b0e:	ef 93       	push	r30
     b10:	ff 93       	push	r31
	if((strlen(temp_street)!=0)&&(strlen(hum_street)!=0)&&(strlen(WIND_speed)!=0)&&(strlen(Rain)!=0)&&(strlen(Vbat)!=0)&&(strlen(wind_direction)!=0))
     b12:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <temp_street>
     b16:	88 23       	and	r24, r24
     b18:	09 f4       	brne	.+2      	; 0xb1c <__vector_11+0x2c>
     b1a:	4c c0       	rjmp	.+152    	; 0xbb4 <__vector_11+0xc4>
     b1c:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <hum_street>
     b20:	88 23       	and	r24, r24
     b22:	09 f4       	brne	.+2      	; 0xb26 <__vector_11+0x36>
     b24:	47 c0       	rjmp	.+142    	; 0xbb4 <__vector_11+0xc4>
     b26:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <WIND_speed>
     b2a:	88 23       	and	r24, r24
     b2c:	09 f4       	brne	.+2      	; 0xb30 <__vector_11+0x40>
     b2e:	42 c0       	rjmp	.+132    	; 0xbb4 <__vector_11+0xc4>
     b30:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <Rain>
     b34:	88 23       	and	r24, r24
     b36:	f1 f1       	breq	.+124    	; 0xbb4 <__vector_11+0xc4>
     b38:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <Vbat>
     b3c:	88 23       	and	r24, r24
     b3e:	d1 f1       	breq	.+116    	; 0xbb4 <__vector_11+0xc4>
     b40:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <wind_direction>
     b44:	88 23       	and	r24, r24
     b46:	b1 f1       	breq	.+108    	; 0xbb4 <__vector_11+0xc4>
	{
		//отправка строки по UART в формате: ул.темп./скор.ветра/осадки/ул.влажность/заряд АКБ/направл.ветра
	    sprintf(DATA_TO_UART,"%s ",temp_street);
     b48:	8e ee       	ldi	r24, 0xEE	; 238
     b4a:	91 e0       	ldi	r25, 0x01	; 1
     b4c:	9f 93       	push	r25
     b4e:	8f 93       	push	r24
     b50:	8f e0       	ldi	r24, 0x0F	; 15
     b52:	91 e0       	ldi	r25, 0x01	; 1
     b54:	9f 93       	push	r25
     b56:	8f 93       	push	r24
     b58:	8c e6       	ldi	r24, 0x6C	; 108
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	9f 93       	push	r25
     b5e:	8f 93       	push	r24
     b60:	0e 94 3a 1b 	call	0x3674	; 0x3674 <sprintf>
		strcat(DATA_TO_UART,WIND_speed);
     b64:	60 ed       	ldi	r22, 0xD0	; 208
     b66:	71 e0       	ldi	r23, 0x01	; 1
     b68:	8c e6       	ldi	r24, 0x6C	; 108
     b6a:	91 e0       	ldi	r25, 0x01	; 1
     b6c:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <strcat>
		strcat(DATA_TO_UART,Rain);
     b70:	6e e9       	ldi	r22, 0x9E	; 158
     b72:	71 e0       	ldi	r23, 0x01	; 1
     b74:	8c e6       	ldi	r24, 0x6C	; 108
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <strcat>
		strcat(DATA_TO_UART,hum_street);
     b7c:	64 ee       	ldi	r22, 0xE4	; 228
     b7e:	71 e0       	ldi	r23, 0x01	; 1
     b80:	8c e6       	ldi	r24, 0x6C	; 108
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <strcat>
		strcat(DATA_TO_UART,Vbat);
     b88:	68 ea       	ldi	r22, 0xA8	; 168
     b8a:	71 e0       	ldi	r23, 0x01	; 1
     b8c:	8c e6       	ldi	r24, 0x6C	; 108
     b8e:	91 e0       	ldi	r25, 0x01	; 1
     b90:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <strcat>
		strcat(DATA_TO_UART,wind_direction);
     b94:	66 ec       	ldi	r22, 0xC6	; 198
     b96:	71 e0       	ldi	r23, 0x01	; 1
     b98:	8c e6       	ldi	r24, 0x6C	; 108
     b9a:	91 e0       	ldi	r25, 0x01	; 1
     b9c:	0e 94 e8 1a 	call	0x35d0	; 0x35d0 <strcat>
		USART_Transmit(DATA_TO_UART);
     ba0:	8c e6       	ldi	r24, 0x6C	; 108
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	0e 94 74 13 	call	0x26e8	; 0x26e8 <USART_Transmit>
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	0f 90       	pop	r0
     bae:	0f 90       	pop	r0
     bb0:	0f 90       	pop	r0
     bb2:	0f 90       	pop	r0
	}

}
     bb4:	ff 91       	pop	r31
     bb6:	ef 91       	pop	r30
     bb8:	bf 91       	pop	r27
     bba:	af 91       	pop	r26
     bbc:	9f 91       	pop	r25
     bbe:	8f 91       	pop	r24
     bc0:	7f 91       	pop	r23
     bc2:	6f 91       	pop	r22
     bc4:	5f 91       	pop	r21
     bc6:	4f 91       	pop	r20
     bc8:	3f 91       	pop	r19
     bca:	2f 91       	pop	r18
     bcc:	0f 90       	pop	r0
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	0f 90       	pop	r0
     bd2:	1f 90       	pop	r1
     bd4:	18 95       	reti

00000bd6 <SPI_init>:

void SPI_init(void) //инициализация SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //ножки SPI на выход
     bd6:	84 b1       	in	r24, 0x04	; 4
     bd8:	8e 62       	ori	r24, 0x2E	; 46
     bda:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //низкий уровень
     bdc:	85 b1       	in	r24, 0x05	; 5
     bde:	83 7d       	andi	r24, 0xD3	; 211
     be0:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<IRQ);
     be2:	8a b1       	in	r24, 0x0a	; 10
     be4:	8b 7f       	andi	r24, 0xFB	; 251
     be6:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<IRQ);
     be8:	8b b1       	in	r24, 0x0b	; 11
     bea:	84 60       	ori	r24, 0x04	; 4
     bec:	8b b9       	out	0x0b, r24	; 11
	HIGH_CSN;
     bee:	85 b1       	in	r24, 0x05	; 5
     bf0:	84 60       	ori	r24, 0x04	; 4
     bf2:	85 b9       	out	0x05, r24	; 5
	SPCR = ((1<<SPE)|(1<<MSTR));//включим шину, объявим ведущим
     bf4:	80 e5       	ldi	r24, 0x50	; 80
     bf6:	8c bd       	out	0x2c, r24	; 44
     bf8:	08 95       	ret

00000bfa <port_init>:
}
//-------------------------------------------------------------
void port_init(void)
{
	//инициализация портов для светодиода
	DDRD |= (1 << LED);//led
     bfa:	8a b1       	in	r24, 0x0a	; 10
     bfc:	80 61       	ori	r24, 0x10	; 16
     bfe:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~ (1 << LED);
     c00:	8b b1       	in	r24, 0x0b	; 11
     c02:	8f 7e       	andi	r24, 0xEF	; 239
     c04:	8b b9       	out	0x0b, r24	; 11
	
	//инициализация портов для LCD12864
	DDRD |= (1<<RS);//ножка RS на выход для LCD12864
     c06:	8a b1       	in	r24, 0x0a	; 10
     c08:	80 68       	ori	r24, 0x80	; 128
     c0a:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RS);
     c0c:	8b b1       	in	r24, 0x0b	; 11
     c0e:	8f 77       	andi	r24, 0x7F	; 127
     c10:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<E);
     c12:	8a b1       	in	r24, 0x0a	; 10
     c14:	80 62       	ori	r24, 0x20	; 32
     c16:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<E);
     c18:	8b b1       	in	r24, 0x0b	; 11
     c1a:	8f 7d       	andi	r24, 0xDF	; 223
     c1c:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<RW);
     c1e:	8a b1       	in	r24, 0x0a	; 10
     c20:	80 64       	ori	r24, 0x40	; 64
     c22:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RW);
     c24:	8b b1       	in	r24, 0x0b	; 11
     c26:	8f 7b       	andi	r24, 0xBF	; 191
     c28:	8b b9       	out	0x0b, r24	; 11
     c2a:	08 95       	ret

00000c2c <spi_send_recv>:
	 DDRC|=(1<<MOSI_SD)|(1<<SCK_SD);*/
} 
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // Передаёт и принимает 1 байт по SPI, возвращает полученное значение
{
	SPDR = data;
     c2c:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
     c2e:	0d b4       	in	r0, 0x2d	; 45
     c30:	07 fe       	sbrs	r0, 7
     c32:	fd cf       	rjmp	.-6      	; 0xc2e <spi_send_recv+0x2>
	return SPDR;
     c34:	8e b5       	in	r24, 0x2e	; 46
}
     c36:	08 95       	ret

00000c38 <main>:
void main(void)
{	
	port_init();
     c38:	0e 94 fd 05 	call	0xbfa	; 0xbfa <port_init>
	PORTD |= (1<<LED);
     c3c:	8b b1       	in	r24, 0x0b	; 11
     c3e:	80 61       	ori	r24, 0x10	; 16
     c40:	8b b9       	out	0x0b, r24	; 11
    SPI_init();
     c42:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <SPI_init>
	timer_ini();
     c46:	0e 94 64 05 	call	0xac8	; 0xac8 <timer_ini>
	I2C_Init();
     c4a:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <I2C_Init>
	LCD_12864_ini();
     c4e:	0e 94 49 03 	call	0x692	; 0x692 <LCD_12864_ini>
	Print_Hello_World(Frame_buffer);
     c52:	88 ef       	ldi	r24, 0xF8	; 248
     c54:	91 e0       	ldi	r25, 0x01	; 1
     c56:	0e 94 8f 13 	call	0x271e	; 0x271e <Print_Hello_World>
	USART_Init(16);    //Инициализация модуля USART скорость 115200
     c5a:	80 e1       	ldi	r24, 0x10	; 16
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	0e 94 5e 13 	call	0x26bc	; 0x26bc <USART_Init>
    NRF24_ini();
     c62:	0e 94 83 0b 	call	0x1706	; 0x1706 <NRF24_ini>
	// настраиваем параметры прерывания
	EICRA = (1<<ISC01) | (0<<ISC00);
     c66:	82 e0       	ldi	r24, 0x02	; 2
     c68:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT0);
     c6c:	81 e0       	ldi	r24, 0x01	; 1
     c6e:	8d bb       	out	0x1d, r24	; 29
	// и разрешаем его глобально
	sei();
     c70:	78 94       	sei
	//Вывод приветствия
	LCD_12864_GrapnicMode(1);
     c72:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	LCD_12864_Decode_UTF8(3, 3, 0, "Пожалуйста подождите.");
     c76:	23 e1       	ldi	r18, 0x13	; 19
     c78:	31 e0       	ldi	r19, 0x01	; 1
     c7a:	40 e0       	ldi	r20, 0x00	; 0
     c7c:	63 e0       	ldi	r22, 0x03	; 3
     c7e:	83 e0       	ldi	r24, 0x03	; 3
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(9, 4, 0, "Идёт загрузка...");
     c86:	29 e2       	ldi	r18, 0x29	; 41
     c88:	31 e0       	ldi	r19, 0x01	; 1
     c8a:	40 e0       	ldi	r20, 0x00	; 0
     c8c:	64 e0       	ldi	r22, 0x04	; 4
     c8e:	89 e0       	ldi	r24, 0x09	; 9
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_bitmap(Frame_buffer);
     c96:	88 ef       	ldi	r24, 0xF8	; 248
     c98:	91 e0       	ldi	r25, 0x01	; 1
     c9a:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
     c9e:	80 e0       	ldi	r24, 0x00	; 0
     ca0:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ca4:	2f ef       	ldi	r18, 0xFF	; 255
     ca6:	83 e2       	ldi	r24, 0x23	; 35
     ca8:	94 ef       	ldi	r25, 0xF4	; 244
     caa:	21 50       	subi	r18, 0x01	; 1
     cac:	80 40       	sbci	r24, 0x00	; 0
     cae:	90 40       	sbci	r25, 0x00	; 0
     cb0:	e1 f7       	brne	.-8      	; 0xcaa <main+0x72>
     cb2:	00 c0       	rjmp	.+0      	; 0xcb4 <main+0x7c>
     cb4:	00 00       	nop
	_delay_ms(5000);
	PORTD &= ~(1<<LED);
     cb6:	8b b1       	in	r24, 0x0b	; 11
     cb8:	8f 7e       	andi	r24, 0xEF	; 239
     cba:	8b b9       	out	0x0b, r24	; 11
	clear_LCD_12864();
     cbc:	0e 94 3f 03 	call	0x67e	; 0x67e <clear_LCD_12864>
    while (1) 
    {
		setpos_LCD_12864(0,0);
     cc0:	60 e0       	ldi	r22, 0x00	; 0
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
		NRF24L01_Receive();
     cca:	0e 94 05 09 	call	0x120a	; 0x120a <NRF24L01_Receive>
		str_LCD_12864 (temp_street);
     cce:	8e ee       	ldi	r24, 0xEE	; 238
     cd0:	91 e0       	ldi	r25, 0x01	; 1
     cd2:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(3,0);
     cd6:	60 e0       	ldi	r22, 0x00	; 0
     cd8:	70 e0       	ldi	r23, 0x00	; 0
     cda:	83 e0       	ldi	r24, 0x03	; 3
     cdc:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	    sprintf(WIND_speed,"%.2f ", wind_speed (HALL_counter));
     ce0:	8a ed       	ldi	r24, 0xDA	; 218
     ce2:	91 e0       	ldi	r25, 0x01	; 1
     ce4:	0e 94 69 14 	call	0x28d2	; 0x28d2 <wind_speed>
     ce8:	9f 93       	push	r25
     cea:	8f 93       	push	r24
     cec:	7f 93       	push	r23
     cee:	6f 93       	push	r22
     cf0:	ca e3       	ldi	r28, 0x3A	; 58
     cf2:	d1 e0       	ldi	r29, 0x01	; 1
     cf4:	df 93       	push	r29
     cf6:	cf 93       	push	r28
     cf8:	80 ed       	ldi	r24, 0xD0	; 208
     cfa:	91 e0       	ldi	r25, 0x01	; 1
     cfc:	9f 93       	push	r25
     cfe:	8f 93       	push	r24
     d00:	0e 94 3a 1b 	call	0x3674	; 0x3674 <sprintf>
		str_LCD_12864 (WIND_speed);
     d04:	80 ed       	ldi	r24, 0xD0	; 208
     d06:	91 e0       	ldi	r25, 0x01	; 1
     d08:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(6,0);
     d0c:	60 e0       	ldi	r22, 0x00	; 0
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	86 e0       	ldi	r24, 0x06	; 6
     d12:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	    sprintf(Rain,"%.2f ",RAIN_AMOUNT(adc_value2));
     d16:	82 eb       	ldi	r24, 0xB2	; 178
     d18:	91 e0       	ldi	r25, 0x01	; 1
     d1a:	0e 94 ee 13 	call	0x27dc	; 0x27dc <RAIN_AMOUNT>
     d1e:	9f 93       	push	r25
     d20:	8f 93       	push	r24
     d22:	7f 93       	push	r23
     d24:	6f 93       	push	r22
     d26:	df 93       	push	r29
     d28:	cf 93       	push	r28
     d2a:	8e e9       	ldi	r24, 0x9E	; 158
     d2c:	91 e0       	ldi	r25, 0x01	; 1
     d2e:	9f 93       	push	r25
     d30:	8f 93       	push	r24
     d32:	0e 94 3a 1b 	call	0x3674	; 0x3674 <sprintf>
		str_LCD_12864 (Rain);
     d36:	8e e9       	ldi	r24, 0x9E	; 158
     d38:	91 e0       	ldi	r25, 0x01	; 1
     d3a:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(0,1);
     d3e:	61 e0       	ldi	r22, 0x01	; 1
     d40:	70 e0       	ldi	r23, 0x00	; 0
     d42:	80 e0       	ldi	r24, 0x00	; 0
     d44:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
		str_LCD_12864 (hum_street);
     d48:	84 ee       	ldi	r24, 0xE4	; 228
     d4a:	91 e0       	ldi	r25, 0x01	; 1
     d4c:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(3,1);
     d50:	61 e0       	ldi	r22, 0x01	; 1
     d52:	70 e0       	ldi	r23, 0x00	; 0
     d54:	83 e0       	ldi	r24, 0x03	; 3
     d56:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
		str_LCD_12864 (wind_direction);
     d5a:	86 ec       	ldi	r24, 0xC6	; 198
     d5c:	91 e0       	ldi	r25, 0x01	; 1
     d5e:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(6,1);
     d62:	61 e0       	ldi	r22, 0x01	; 1
     d64:	70 e0       	ldi	r23, 0x00	; 0
     d66:	86 e0       	ldi	r24, 0x06	; 6
     d68:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	    sprintf(Vbat,"%.2f ",V_BAT(adc_value1));
     d6c:	8c eb       	ldi	r24, 0xBC	; 188
     d6e:	91 e0       	ldi	r25, 0x01	; 1
     d70:	0e 94 2b 14 	call	0x2856	; 0x2856 <V_BAT>
     d74:	9f 93       	push	r25
     d76:	8f 93       	push	r24
     d78:	7f 93       	push	r23
     d7a:	6f 93       	push	r22
     d7c:	df 93       	push	r29
     d7e:	cf 93       	push	r28
     d80:	88 ea       	ldi	r24, 0xA8	; 168
     d82:	91 e0       	ldi	r25, 0x01	; 1
     d84:	9f 93       	push	r25
     d86:	8f 93       	push	r24
     d88:	0e 94 3a 1b 	call	0x3674	; 0x3674 <sprintf>
		str_LCD_12864 (Vbat);
     d8c:	88 ea       	ldi	r24, 0xA8	; 168
     d8e:	91 e0       	ldi	r25, 0x01	; 1
     d90:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
     d94:	2f ef       	ldi	r18, 0xFF	; 255
     d96:	81 ee       	ldi	r24, 0xE1	; 225
     d98:	94 e0       	ldi	r25, 0x04	; 4
     d9a:	21 50       	subi	r18, 0x01	; 1
     d9c:	80 40       	sbci	r24, 0x00	; 0
     d9e:	90 40       	sbci	r25, 0x00	; 0
     da0:	e1 f7       	brne	.-8      	; 0xd9a <main+0x162>
     da2:	00 c0       	rjmp	.+0      	; 0xda4 <main+0x16c>
     da4:	00 00       	nop
     da6:	8d b7       	in	r24, 0x3d	; 61
     da8:	9e b7       	in	r25, 0x3e	; 62
     daa:	48 96       	adiw	r24, 0x18	; 24
     dac:	0f b6       	in	r0, 0x3f	; 63
     dae:	f8 94       	cli
     db0:	9e bf       	out	0x3e, r25	; 62
     db2:	0f be       	out	0x3f, r0	; 63
     db4:	8d bf       	out	0x3d, r24	; 61
     db6:	84 cf       	rjmp	.-248    	; 0xcc0 <main+0x88>

00000db8 <xmit_spi>:
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	12 c0       	rjmp	.+36     	; 0xde0 <xmit_spi+0x28>
  {
   if ((data&0x80)==0x00) PORTC&=~_BV(SD_DI);
     dbc:	88 23       	and	r24, r24
     dbe:	24 f0       	brlt	.+8      	; 0xdc8 <xmit_spi+0x10>
     dc0:	98 b1       	in	r25, 0x08	; 8
     dc2:	9b 7f       	andi	r25, 0xFB	; 251
     dc4:	98 b9       	out	0x08, r25	; 8
     dc6:	03 c0       	rjmp	.+6      	; 0xdce <xmit_spi+0x16>
                     else PORTC|=_BV(SD_DI);
     dc8:	98 b1       	in	r25, 0x08	; 8
     dca:	94 60       	ori	r25, 0x04	; 4
     dcc:	98 b9       	out	0x08, r25	; 8
   data=data<<1; 
     dce:	88 0f       	add	r24, r24
   PORTC|=_BV(SD_CLK);
     dd0:	98 b1       	in	r25, 0x08	; 8
     dd2:	98 60       	ori	r25, 0x08	; 8
     dd4:	98 b9       	out	0x08, r25	; 8
   asm("nop"); 
     dd6:	00 00       	nop
   PORTC&=~_BV(SD_CLK);
     dd8:	98 b1       	in	r25, 0x08	; 8
     dda:	97 7f       	andi	r25, 0xF7	; 247
     ddc:	98 b9       	out	0x08, r25	; 8
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
     dde:	2f 5f       	subi	r18, 0xFF	; 255
     de0:	28 30       	cpi	r18, 0x08	; 8
     de2:	60 f3       	brcs	.-40     	; 0xdbc <xmit_spi+0x4>
   data=data<<1; 
   PORTC|=_BV(SD_CLK);
   asm("nop"); 
   PORTC&=~_BV(SD_CLK);
  }
}
     de4:	08 95       	ret

00000de6 <rcv_spi>:

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);
     de6:	88 b1       	in	r24, 0x08	; 8
     de8:	84 60       	ori	r24, 0x04	; 4
     dea:	88 b9       	out	0x08, r24	; 8
   PORTC&=~_BV(SD_CLK);
  }
}

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;
     dec:	80 e0       	ldi	r24, 0x00	; 0

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	0b c0       	rjmp	.+22     	; 0xe08 <rcv_spi+0x22>
  {
   PORTC|=_BV(SD_CLK);
     df2:	98 b1       	in	r25, 0x08	; 8
     df4:	98 60       	ori	r25, 0x08	; 8
     df6:	98 b9       	out	0x08, r25	; 8
   res=res<<1;
     df8:	88 0f       	add	r24, r24
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
     dfa:	31 99       	sbic	0x06, 1	; 6
     dfc:	81 60       	ori	r24, 0x01	; 1
   PORTC&=~_BV(SD_CLK);
     dfe:	98 b1       	in	r25, 0x08	; 8
     e00:	97 7f       	andi	r25, 0xF7	; 247
     e02:	98 b9       	out	0x08, r25	; 8
   asm("nop");
     e04:	00 00       	nop
BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
     e06:	2f 5f       	subi	r18, 0xFF	; 255
     e08:	28 30       	cpi	r18, 0x08	; 8
     e0a:	98 f3       	brcs	.-26     	; 0xdf2 <rcv_spi+0xc>
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
   PORTC&=~_BV(SD_CLK);
   asm("nop");
  }
 return res;
}	/* Send 0xFF and receive a byte */
     e0c:	08 95       	ret

00000e0e <send_cmd>:
static
BYTE send_cmd (
	BYTE cmd,		// Command byte 
	DWORD arg		// Argument 
)
{
     e0e:	ff 92       	push	r15
     e10:	0f 93       	push	r16
     e12:	1f 93       	push	r17
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	c8 2f       	mov	r28, r24
     e1a:	d4 2f       	mov	r29, r20
     e1c:	15 2f       	mov	r17, r21
     e1e:	06 2f       	mov	r16, r22
     e20:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	// ACMD<n> is the command sequense of CMD55-CMD<n> 
     e22:	88 23       	and	r24, r24
     e24:	4c f4       	brge	.+18     	; 0xe38 <send_cmd+0x2a>
		cmd &= 0x7F;
     e26:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
     e28:	40 e0       	ldi	r20, 0x00	; 0
     e2a:	50 e0       	ldi	r21, 0x00	; 0
     e2c:	ba 01       	movw	r22, r20
     e2e:	87 e7       	ldi	r24, 0x77	; 119
     e30:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
		if (res > 1) return res;
     e34:	82 30       	cpi	r24, 0x02	; 2
     e36:	50 f5       	brcc	.+84     	; 0xe8c <send_cmd+0x7e>
	}

	// Select the card 
	DESELECT();
     e38:	85 b1       	in	r24, 0x05	; 5
     e3a:	81 60       	ori	r24, 0x01	; 1
     e3c:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
     e3e:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
	SELECT();
     e42:	85 b1       	in	r24, 0x05	; 5
     e44:	8e 7f       	andi	r24, 0xFE	; 254
     e46:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
     e48:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>

	// Send a command packet 
	xmit_spi(cmd);						// Start + Command index 
     e4c:	8c 2f       	mov	r24, r28
     e4e:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
     e52:	8f 2d       	mov	r24, r15
     e54:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
     e58:	80 2f       	mov	r24, r16
     e5a:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
     e5e:	81 2f       	mov	r24, r17
     e60:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
	xmit_spi((BYTE)arg);				// Argument[7..0] 
     e64:	8d 2f       	mov	r24, r29
     e66:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
	n = 0x01;							// Dummy CRC + Stop 
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
     e6a:	c0 34       	cpi	r28, 0x40	; 64
     e6c:	11 f0       	breq	.+4      	; 0xe72 <send_cmd+0x64>
	xmit_spi(cmd);						// Start + Command index 
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
	xmit_spi((BYTE)arg);				// Argument[7..0] 
	n = 0x01;							// Dummy CRC + Stop 
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	01 c0       	rjmp	.+2      	; 0xe74 <send_cmd+0x66>
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
     e72:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;			// Valid CRC for CMD8(0x1AA) 
     e74:	c8 34       	cpi	r28, 0x48	; 72
     e76:	09 f4       	brne	.+2      	; 0xe7a <send_cmd+0x6c>
     e78:	87 e8       	ldi	r24, 0x87	; 135
	xmit_spi(n);
     e7a:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>

	// Receive a command response 
	n = 10;								// Wait for a valid response in timeout of 10 attempts 
     e7e:	ca e0       	ldi	r28, 0x0A	; 10
	do {
		res = rcv_spi();
     e80:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
	} while ((res & 0x80) && --n);
     e84:	88 23       	and	r24, r24
     e86:	14 f4       	brge	.+4      	; 0xe8c <send_cmd+0x7e>
     e88:	c1 50       	subi	r28, 0x01	; 1
     e8a:	d1 f7       	brne	.-12     	; 0xe80 <send_cmd+0x72>

	return res;			// Return with the response value 
}
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
     e90:	1f 91       	pop	r17
     e92:	0f 91       	pop	r16
     e94:	ff 90       	pop	r15
     e96:	08 95       	ret

00000e98 <release_spi>:
// Deselect the card and release SPI bus                                 
//-----------------------------------------------------------------------
static
void release_spi (void)
{
	rcv_spi();
     e98:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
     e9c:	08 95       	ret

00000e9e <disk_readp>:
	BYTE *buff,		// Pointer to the read buffer (NULL:Read bytes are forwarded to the stream) 
	DWORD lba,		// Sector number (LBA) 
	WORD ofs,		// Byte offset to read from (0..511) 
	WORD cnt		// Number of bytes to read (ofs + cnt mus be <= 512) 
)
{
     e9e:	cf 92       	push	r12
     ea0:	df 92       	push	r13
     ea2:	ef 92       	push	r14
     ea4:	ff 92       	push	r15
     ea6:	0f 93       	push	r16
     ea8:	1f 93       	push	r17
     eaa:	cf 93       	push	r28
     eac:	df 93       	push	r29
     eae:	7c 01       	movw	r14, r24
     eb0:	69 01       	movw	r12, r18
	BYTE rc;
	WORD bc;

//	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;

	if (!(CardType & CT_BLOCK))
     eb2:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <CardType>
     eb6:	83 fd       	sbrc	r24, 3
     eb8:	09 c0       	rjmp	.+18     	; 0xecc <disk_readp+0x2e>
	{
		lba *= 512;		// Convert to byte address if needed 
     eba:	03 2e       	mov	r0, r19
     ebc:	39 e0       	ldi	r19, 0x09	; 9
     ebe:	44 0f       	add	r20, r20
     ec0:	55 1f       	adc	r21, r21
     ec2:	66 1f       	adc	r22, r22
     ec4:	77 1f       	adc	r23, r23
     ec6:	3a 95       	dec	r19
     ec8:	d1 f7       	brne	.-12     	; 0xebe <disk_readp+0x20>
     eca:	30 2d       	mov	r19, r0
	}
	res = RES_ERROR;
	if (send_cmd(CMD17, lba) == 0) {		// READ_SINGLE_BLOCK 
     ecc:	81 e5       	ldi	r24, 0x51	; 81
     ece:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
     ed2:	81 11       	cpse	r24, r1
     ed4:	34 c0       	rjmp	.+104    	; 0xf3e <disk_readp+0xa0>
     ed6:	c0 e3       	ldi	r28, 0x30	; 48
     ed8:	d5 e7       	ldi	r29, 0x75	; 117
		bc = 30000;
		do {							// Wait for data packet in timeout of 100ms 
			rc = rcv_spi();
     eda:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
		} while (rc == 0xFF && --bc);
     ede:	8f 3f       	cpi	r24, 0xFF	; 255
     ee0:	11 f4       	brne	.+4      	; 0xee6 <disk_readp+0x48>
     ee2:	21 97       	sbiw	r28, 0x01	; 1
     ee4:	d1 f7       	brne	.-12     	; 0xeda <disk_readp+0x3c>

		if (rc == 0xFE) {				// A data packet arrived 
     ee6:	8e 3f       	cpi	r24, 0xFE	; 254
     ee8:	61 f5       	brne	.+88     	; 0xf42 <disk_readp+0xa4>
			bc = 514 - ofs - cnt;
     eea:	cc 27       	eor	r28, r28
     eec:	dd 27       	eor	r29, r29
     eee:	cc 19       	sub	r28, r12
     ef0:	dd 09       	sbc	r29, r13
     ef2:	c0 1b       	sub	r28, r16
     ef4:	d1 0b       	sbc	r29, r17
     ef6:	ce 5f       	subi	r28, 0xFE	; 254
     ef8:	dd 4f       	sbci	r29, 0xFD	; 253

			// Skip leading bytes 
			if (ofs) {
     efa:	c1 14       	cp	r12, r1
     efc:	d1 04       	cpc	r13, r1
     efe:	31 f0       	breq	.+12     	; 0xf0c <disk_readp+0x6e>
				do rcv_spi(); while (--ofs);
     f00:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	c8 1a       	sub	r12, r24
     f08:	d1 08       	sbc	r13, r1
     f0a:	d1 f7       	brne	.-12     	; 0xf00 <disk_readp+0x62>
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
     f0c:	e1 14       	cp	r14, r1
     f0e:	f1 04       	cpc	r15, r1
     f10:	69 f0       	breq	.+26     	; 0xf2c <disk_readp+0x8e>
				do
					*buff++ = rcv_spi();
     f12:	67 01       	movw	r12, r14
     f14:	ef ef       	ldi	r30, 0xFF	; 255
     f16:	ce 1a       	sub	r12, r30
     f18:	de 0a       	sbc	r13, r30
     f1a:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
     f1e:	f7 01       	movw	r30, r14
     f20:	80 83       	st	Z, r24
				while (--cnt);
     f22:	01 50       	subi	r16, 0x01	; 1
     f24:	11 09       	sbc	r17, r1
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
				do
					*buff++ = rcv_spi();
     f26:	76 01       	movw	r14, r12
				while (--cnt);
     f28:	a1 f7       	brne	.-24     	; 0xf12 <disk_readp+0x74>
     f2a:	03 c0       	rjmp	.+6      	; 0xf32 <disk_readp+0x94>
			} else {	// Forward data to the outgoing stream (depends on the project) 
				do 
                ;//uart_transmit(rcv_spi());		// (Console output) 
				while (--cnt);
     f2c:	01 50       	subi	r16, 0x01	; 1
     f2e:	11 09       	sbc	r17, r1
     f30:	e9 f7       	brne	.-6      	; 0xf2c <disk_readp+0x8e>
			}

			// Skip trailing bytes and CRC 
			do rcv_spi(); while (--bc);
     f32:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
     f36:	21 97       	sbiw	r28, 0x01	; 1
     f38:	e1 f7       	brne	.-8      	; 0xf32 <disk_readp+0x94>

			res = RES_OK;
     f3a:	c0 e0       	ldi	r28, 0x00	; 0
     f3c:	03 c0       	rjmp	.+6      	; 0xf44 <disk_readp+0xa6>

	if (!(CardType & CT_BLOCK))
	{
		lba *= 512;		// Convert to byte address if needed 
	}
	res = RES_ERROR;
     f3e:	c1 e0       	ldi	r28, 0x01	; 1
     f40:	01 c0       	rjmp	.+2      	; 0xf44 <disk_readp+0xa6>
     f42:	c1 e0       	ldi	r28, 0x01	; 1

			res = RES_OK;
		}
	}

	release_spi();
     f44:	0e 94 4c 07 	call	0xe98	; 0xe98 <release_spi>

	return res;
}
     f48:	8c 2f       	mov	r24, r28
     f4a:	df 91       	pop	r29
     f4c:	cf 91       	pop	r28
     f4e:	1f 91       	pop	r17
     f50:	0f 91       	pop	r16
     f52:	ff 90       	pop	r15
     f54:	ef 90       	pop	r14
     f56:	df 90       	pop	r13
     f58:	cf 90       	pop	r12
     f5a:	08 95       	ret

00000f5c <disk_writep>:

DRESULT disk_writep (
	const BYTE *buff,	// Pointer to the bytes to be written (NULL:Initiate/Finalize sector write) 
	DWORD sa			// Number of bytes to send, Sector number (LBA) or zero 
)
{
     f5c:	0f 93       	push	r16
     f5e:	1f 93       	push	r17
     f60:	cf 93       	push	r28
     f62:	df 93       	push	r29
     f64:	fc 01       	movw	r30, r24
// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
     f66:	89 2b       	or	r24, r25
     f68:	f1 f0       	breq	.+60     	; 0xfa6 <disk_writep+0x4a>
		bc = (WORD)sa;
     f6a:	ea 01       	movw	r28, r20
		while (bc && wc) {		// Send data bytes to the card 
     f6c:	11 c0       	rjmp	.+34     	; 0xf90 <disk_writep+0x34>
			xmit_spi(*buff++);
     f6e:	8f 01       	movw	r16, r30
     f70:	0f 5f       	subi	r16, 0xFF	; 255
     f72:	1f 4f       	sbci	r17, 0xFF	; 255
     f74:	80 81       	ld	r24, Z
     f76:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
			wc--; bc--;
     f7a:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <wc.1710>
     f7e:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <wc.1710+0x1>
     f82:	01 97       	sbiw	r24, 0x01	; 1
     f84:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <wc.1710+0x1>
     f88:	80 93 f8 05 	sts	0x05F8, r24	; 0x8005f8 <wc.1710>
     f8c:	21 97       	sbiw	r28, 0x01	; 1
	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
     f8e:	f8 01       	movw	r30, r16

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
     f90:	20 97       	sbiw	r28, 0x00	; 0
     f92:	09 f4       	brne	.+2      	; 0xf96 <disk_writep+0x3a>
     f94:	54 c0       	rjmp	.+168    	; 0x103e <disk_writep+0xe2>
     f96:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <wc.1710>
     f9a:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <wc.1710+0x1>
     f9e:	89 2b       	or	r24, r25
     fa0:	31 f7       	brne	.-52     	; 0xf6e <disk_writep+0x12>
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
     fa2:	c0 e0       	ldi	r28, 0x00	; 0
     fa4:	4f c0       	rjmp	.+158    	; 0x1044 <disk_writep+0xe8>
	} else {
		if (sa) {	// Initiate sector write process 
     fa6:	41 15       	cp	r20, r1
     fa8:	51 05       	cpc	r21, r1
     faa:	61 05       	cpc	r22, r1
     fac:	71 05       	cpc	r23, r1
     fae:	01 f1       	breq	.+64     	; 0xff0 <disk_writep+0x94>
			if (!(CardType & CT_BLOCK)) sa *= 512;	// Convert to byte address if needed 
     fb0:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <CardType>
     fb4:	83 fd       	sbrc	r24, 3
     fb6:	09 c0       	rjmp	.+18     	; 0xfca <disk_writep+0x6e>
     fb8:	03 2e       	mov	r0, r19
     fba:	39 e0       	ldi	r19, 0x09	; 9
     fbc:	44 0f       	add	r20, r20
     fbe:	55 1f       	adc	r21, r21
     fc0:	66 1f       	adc	r22, r22
     fc2:	77 1f       	adc	r23, r23
     fc4:	3a 95       	dec	r19
     fc6:	d1 f7       	brne	.-12     	; 0xfbc <disk_writep+0x60>
     fc8:	30 2d       	mov	r19, r0
			if (send_cmd(CMD24, sa) == 0) {			// WRITE_SINGLE_BLOCK 
     fca:	88 e5       	ldi	r24, 0x58	; 88
     fcc:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
     fd0:	81 11       	cpse	r24, r1
     fd2:	37 c0       	rjmp	.+110    	; 0x1042 <disk_writep+0xe6>
				xmit_spi(0xFF); xmit_spi(0xFE);		// Data block header 
     fd4:	8f ef       	ldi	r24, 0xFF	; 255
     fd6:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
     fda:	8e ef       	ldi	r24, 0xFE	; 254
     fdc:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
				wc = 512;							// Set byte counter 
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	92 e0       	ldi	r25, 0x02	; 2
     fe4:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <wc.1710+0x1>
     fe8:	80 93 f8 05 	sts	0x05F8, r24	; 0x8005f8 <wc.1710>
				res = RES_OK;
     fec:	c0 e0       	ldi	r28, 0x00	; 0
     fee:	2a c0       	rjmp	.+84     	; 0x1044 <disk_writep+0xe8>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
     ff0:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <wc.1710>
     ff4:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <wc.1710+0x1>
     ff8:	02 96       	adiw	r24, 0x02	; 2
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
     ffa:	04 c0       	rjmp	.+8      	; 0x1004 <disk_writep+0xa8>
     ffc:	80 e0       	ldi	r24, 0x00	; 0
     ffe:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <xmit_spi>
    1002:	ce 01       	movw	r24, r28
    1004:	ec 01       	movw	r28, r24
    1006:	21 97       	sbiw	r28, 0x01	; 1
    1008:	89 2b       	or	r24, r25
    100a:	c1 f7       	brne	.-16     	; 0xffc <disk_writep+0xa0>
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
    100c:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
    1010:	8f 71       	andi	r24, 0x1F	; 31
    1012:	85 30       	cpi	r24, 0x05	; 5
    1014:	21 f0       	breq	.+8      	; 0x101e <disk_writep+0xc2>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1016:	c1 e0       	ldi	r28, 0x01	; 1
    1018:	0f c0       	rjmp	.+30     	; 0x1038 <disk_writep+0xdc>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
    101a:	21 97       	sbiw	r28, 0x01	; 1
    101c:	02 c0       	rjmp	.+4      	; 0x1022 <disk_writep+0xc6>
    101e:	c8 ee       	ldi	r28, 0xE8	; 232
    1020:	dd ef       	ldi	r29, 0xFD	; 253
    1022:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
    1026:	8f 3f       	cpi	r24, 0xFF	; 255
    1028:	11 f0       	breq	.+4      	; 0x102e <disk_writep+0xd2>
    102a:	20 97       	sbiw	r28, 0x00	; 0
    102c:	b1 f7       	brne	.-20     	; 0x101a <disk_writep+0xbe>
				if (bc) res = RES_OK;
    102e:	cd 2b       	or	r28, r29
    1030:	11 f4       	brne	.+4      	; 0x1036 <disk_writep+0xda>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1032:	c1 e0       	ldi	r28, 0x01	; 1
    1034:	01 c0       	rjmp	.+2      	; 0x1038 <disk_writep+0xdc>
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
				if (bc) res = RES_OK;
    1036:	c0 e0       	ldi	r28, 0x00	; 0
			}
			release_spi();
    1038:	0e 94 4c 07 	call	0xe98	; 0xe98 <release_spi>
    103c:	03 c0       	rjmp	.+6      	; 0x1044 <disk_writep+0xe8>
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    103e:	c0 e0       	ldi	r28, 0x00	; 0
    1040:	01 c0       	rjmp	.+2      	; 0x1044 <disk_writep+0xe8>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1042:	c1 e0       	ldi	r28, 0x01	; 1
			release_spi();
		}
	}

	return res;
}
    1044:	8c 2f       	mov	r24, r28
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	1f 91       	pop	r17
    104c:	0f 91       	pop	r16
    104e:	08 95       	ret

00001050 <disk_initialize>:

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    1050:	ef 92       	push	r14
    1052:	ff 92       	push	r15
    1054:	0f 93       	push	r16
    1056:	1f 93       	push	r17
    1058:	cf 93       	push	r28
    105a:	df 93       	push	r29
    105c:	00 d0       	rcall	.+0      	; 0x105e <disk_initialize+0xe>
    105e:	00 d0       	rcall	.+0      	; 0x1060 <disk_initialize+0x10>
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];
	WORD tmr;


	INIT_SPI();
    1064:	85 b1       	in	r24, 0x05	; 5
    1066:	81 60       	ori	r24, 0x01	; 1
    1068:	85 b9       	out	0x05, r24	; 5
    106a:	88 b1       	in	r24, 0x08	; 8
    106c:	86 60       	ori	r24, 0x06	; 6
    106e:	88 b9       	out	0x08, r24	; 8
    1070:	84 b1       	in	r24, 0x04	; 4
    1072:	81 60       	ori	r24, 0x01	; 1
    1074:	84 b9       	out	0x04, r24	; 4
    1076:	87 b1       	in	r24, 0x07	; 7
    1078:	8c 60       	ori	r24, 0x0C	; 12
    107a:	87 b9       	out	0x07, r24	; 7

//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
    107c:	28 99       	sbic	0x05, 0	; 5
    107e:	07 c0       	rjmp	.+14     	; 0x108e <disk_initialize+0x3e>
    1080:	40 e0       	ldi	r20, 0x00	; 0
    1082:	50 e0       	ldi	r21, 0x00	; 0
    1084:	ba 01       	movw	r22, r20
    1086:	80 e0       	ldi	r24, 0x00	; 0
    1088:	90 e0       	ldi	r25, 0x00	; 0
    108a:	0e 94 ae 07 	call	0xf5c	; 0xf5c <disk_writep>

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    108e:	14 e6       	ldi	r17, 0x64	; 100
    1090:	03 c0       	rjmp	.+6      	; 0x1098 <disk_initialize+0x48>
//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 
    1092:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
    1096:	11 50       	subi	r17, 0x01	; 1
    1098:	11 11       	cpse	r17, r1
    109a:	fb cf       	rjmp	.-10     	; 0x1092 <disk_initialize+0x42>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			// Enter Idle state 
    109c:	40 e0       	ldi	r20, 0x00	; 0
    109e:	50 e0       	ldi	r21, 0x00	; 0
    10a0:	ba 01       	movw	r22, r20
    10a2:	80 e4       	ldi	r24, 0x40	; 64
    10a4:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
    10a8:	81 30       	cpi	r24, 0x01	; 1
    10aa:	09 f0       	breq	.+2      	; 0x10ae <disk_initialize+0x5e>
    10ac:	8f c0       	rjmp	.+286    	; 0x11cc <disk_initialize+0x17c>
		if (send_cmd(CMD8, 0x1AA) == 1) {	// SDv2 
    10ae:	4a ea       	ldi	r20, 0xAA	; 170
    10b0:	51 e0       	ldi	r21, 0x01	; 1
    10b2:	60 e0       	ldi	r22, 0x00	; 0
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	88 e4       	ldi	r24, 0x48	; 72
    10b8:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
    10bc:	81 30       	cpi	r24, 0x01	; 1
    10be:	09 f0       	breq	.+2      	; 0x10c2 <disk_initialize+0x72>
    10c0:	53 c0       	rjmp	.+166    	; 0x1168 <disk_initialize+0x118>
    10c2:	0d c0       	rjmp	.+26     	; 0x10de <disk_initialize+0x8e>

// 	  		setpos(0,3);
// 	  		str_lcd("SDv2");

			for (n = 0; n < 4; n++) ocr[n] = rcv_spi();		// Get trailing return value of R7 resp 
    10c4:	e0 2e       	mov	r14, r16
    10c6:	f1 2c       	mov	r15, r1
    10c8:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
    10cc:	e1 e0       	ldi	r30, 0x01	; 1
    10ce:	f0 e0       	ldi	r31, 0x00	; 0
    10d0:	ec 0f       	add	r30, r28
    10d2:	fd 1f       	adc	r31, r29
    10d4:	ee 0d       	add	r30, r14
    10d6:	ff 1d       	adc	r31, r15
    10d8:	80 83       	st	Z, r24
    10da:	0f 5f       	subi	r16, 0xFF	; 255
    10dc:	01 c0       	rjmp	.+2      	; 0x10e0 <disk_initialize+0x90>
    10de:	01 2f       	mov	r16, r17
    10e0:	04 30       	cpi	r16, 0x04	; 4
    10e2:	80 f3       	brcs	.-32     	; 0x10c4 <disk_initialize+0x74>
//  			sprintf(str,"%02X",ocr[1]);
//  			str_lcd(str);
//  			setpos(17,0);
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
    10e4:	8b 81       	ldd	r24, Y+3	; 0x03
    10e6:	81 30       	cpi	r24, 0x01	; 1
    10e8:	09 f0       	breq	.+2      	; 0x10ec <disk_initialize+0x9c>
    10ea:	72 c0       	rjmp	.+228    	; 0x11d0 <disk_initialize+0x180>
    10ec:	8c 81       	ldd	r24, Y+4	; 0x04
    10ee:	8a 3a       	cpi	r24, 0xAA	; 170
    10f0:	31 f0       	breq	.+12     	; 0x10fe <disk_initialize+0xae>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    10f2:	f1 2c       	mov	r15, r1
    10f4:	78 c0       	rjmp	.+240    	; 0x11e6 <disk_initialize+0x196>
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
// 	  		setpos(5,3);
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	e8 1a       	sub	r14, r24
    10fa:	f1 08       	sbc	r15, r1
    10fc:	06 c0       	rjmp	.+12     	; 0x110a <disk_initialize+0xba>
    10fe:	0f 2e       	mov	r0, r31
    1100:	f0 ee       	ldi	r31, 0xE0	; 224
    1102:	ef 2e       	mov	r14, r31
    1104:	fe e2       	ldi	r31, 0x2E	; 46
    1106:	ff 2e       	mov	r15, r31
    1108:	f0 2d       	mov	r31, r0
    110a:	e1 14       	cp	r14, r1
    110c:	f1 04       	cpc	r15, r1
    110e:	49 f0       	breq	.+18     	; 0x1122 <disk_initialize+0xd2>
    1110:	40 e0       	ldi	r20, 0x00	; 0
    1112:	50 e0       	ldi	r21, 0x00	; 0
    1114:	60 e0       	ldi	r22, 0x00	; 0
    1116:	70 e4       	ldi	r23, 0x40	; 64
    1118:	89 ee       	ldi	r24, 0xE9	; 233
    111a:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
    111e:	81 11       	cpse	r24, r1
    1120:	ea cf       	rjmp	.-44     	; 0x10f6 <disk_initialize+0xa6>
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
    1122:	ef 28       	or	r14, r15
    1124:	09 f4       	brne	.+2      	; 0x1128 <disk_initialize+0xd8>
    1126:	56 c0       	rjmp	.+172    	; 0x11d4 <disk_initialize+0x184>
    1128:	40 e0       	ldi	r20, 0x00	; 0
    112a:	50 e0       	ldi	r21, 0x00	; 0
    112c:	ba 01       	movw	r22, r20
    112e:	8a e7       	ldi	r24, 0x7A	; 122
    1130:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
    1134:	88 23       	and	r24, r24
    1136:	71 f0       	breq	.+28     	; 0x1154 <disk_initialize+0x104>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1138:	f1 2c       	mov	r15, r1
    113a:	55 c0       	rjmp	.+170    	; 0x11e6 <disk_initialize+0x196>
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
// 			  		setpos(10,3);
// 					str_lcd("CCS");
					for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
    113c:	e1 2e       	mov	r14, r17
    113e:	f1 2c       	mov	r15, r1
    1140:	0e 94 f3 06 	call	0xde6	; 0xde6 <rcv_spi>
    1144:	e1 e0       	ldi	r30, 0x01	; 1
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	ec 0f       	add	r30, r28
    114a:	fd 1f       	adc	r31, r29
    114c:	ee 0d       	add	r30, r14
    114e:	ff 1d       	adc	r31, r15
    1150:	80 83       	st	Z, r24
    1152:	1f 5f       	subi	r17, 0xFF	; 255
    1154:	14 30       	cpi	r17, 0x04	; 4
    1156:	90 f3       	brcs	.-28     	; 0x113c <disk_initialize+0xec>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1158:	89 81       	ldd	r24, Y+1	; 0x01
    115a:	86 ff       	sbrs	r24, 6
    115c:	3d c0       	rjmp	.+122    	; 0x11d8 <disk_initialize+0x188>
    115e:	0f 2e       	mov	r0, r31
    1160:	fc e0       	ldi	r31, 0x0C	; 12
    1162:	ff 2e       	mov	r15, r31
    1164:	f0 2d       	mov	r31, r0
    1166:	3f c0       	rjmp	.+126    	; 0x11e6 <disk_initialize+0x196>
				}
			}
		} else {							// SDv1 or MMCv3 
			if (send_cmd(ACMD41, 0) <= 1) 	{
    1168:	40 e0       	ldi	r20, 0x00	; 0
    116a:	50 e0       	ldi	r21, 0x00	; 0
    116c:	ba 01       	movw	r22, r20
    116e:	89 ee       	ldi	r24, 0xE9	; 233
    1170:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
    1174:	82 30       	cpi	r24, 0x02	; 2
    1176:	40 f4       	brcc	.+16     	; 0x1188 <disk_initialize+0x138>
				ty = CT_SD1; cmd = ACMD41;	// SDv1 
    1178:	68 94       	set
    117a:	ff 24       	eor	r15, r15
    117c:	f1 f8       	bld	r15, 1
    117e:	0f 2e       	mov	r0, r31
    1180:	f9 ee       	ldi	r31, 0xE9	; 233
    1182:	ef 2e       	mov	r14, r31
    1184:	f0 2d       	mov	r31, r0
    1186:	06 c0       	rjmp	.+12     	; 0x1194 <disk_initialize+0x144>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
    1188:	ff 24       	eor	r15, r15
    118a:	f3 94       	inc	r15
    118c:	0f 2e       	mov	r0, r31
    118e:	f1 e4       	ldi	r31, 0x41	; 65
    1190:	ef 2e       	mov	r14, r31
    1192:	f0 2d       	mov	r31, r0
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
    1194:	08 ea       	ldi	r16, 0xA8	; 168
    1196:	11 e6       	ldi	r17, 0x61	; 97
    1198:	02 c0       	rjmp	.+4      	; 0x119e <disk_initialize+0x14e>
    119a:	01 50       	subi	r16, 0x01	; 1
    119c:	11 09       	sbc	r17, r1
    119e:	01 15       	cp	r16, r1
    11a0:	11 05       	cpc	r17, r1
    11a2:	41 f0       	breq	.+16     	; 0x11b4 <disk_initialize+0x164>
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	50 e0       	ldi	r21, 0x00	; 0
    11a8:	ba 01       	movw	r22, r20
    11aa:	8e 2d       	mov	r24, r14
    11ac:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
    11b0:	81 11       	cpse	r24, r1
    11b2:	f3 cf       	rjmp	.-26     	; 0x119a <disk_initialize+0x14a>
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
    11b4:	01 2b       	or	r16, r17
    11b6:	a1 f0       	breq	.+40     	; 0x11e0 <disk_initialize+0x190>
    11b8:	40 e0       	ldi	r20, 0x00	; 0
    11ba:	52 e0       	ldi	r21, 0x02	; 2
    11bc:	60 e0       	ldi	r22, 0x00	; 0
    11be:	70 e0       	ldi	r23, 0x00	; 0
    11c0:	80 e5       	ldi	r24, 0x50	; 80
    11c2:	0e 94 07 07 	call	0xe0e	; 0xe0e <send_cmd>
    11c6:	81 11       	cpse	r24, r1
    11c8:	0d c0       	rjmp	.+26     	; 0x11e4 <disk_initialize+0x194>
    11ca:	0d c0       	rjmp	.+26     	; 0x11e6 <disk_initialize+0x196>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    11cc:	f1 2c       	mov	r15, r1
    11ce:	0b c0       	rjmp	.+22     	; 0x11e6 <disk_initialize+0x196>
    11d0:	f1 2c       	mov	r15, r1
    11d2:	09 c0       	rjmp	.+18     	; 0x11e6 <disk_initialize+0x196>
    11d4:	f1 2c       	mov	r15, r1
    11d6:	07 c0       	rjmp	.+14     	; 0x11e6 <disk_initialize+0x196>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    11d8:	68 94       	set
    11da:	ff 24       	eor	r15, r15
    11dc:	f2 f8       	bld	r15, 2
    11de:	03 c0       	rjmp	.+6      	; 0x11e6 <disk_initialize+0x196>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
				ty = 0;
    11e0:	f1 2c       	mov	r15, r1
    11e2:	01 c0       	rjmp	.+2      	; 0x11e6 <disk_initialize+0x196>
    11e4:	f1 2c       	mov	r15, r1
		}
	}
	CardType = ty;
    11e6:	f0 92 fa 05 	sts	0x05FA, r15	; 0x8005fa <CardType>
//   	sprintf(str,"%d",CardType);
//   	setpos(0,1);
//   	str_lcd(str);
	release_spi();
    11ea:	0e 94 4c 07 	call	0xe98	; 0xe98 <release_spi>

	return ty ? 0 : STA_NOINIT;
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	f1 10       	cpse	r15, r1
    11f2:	80 e0       	ldi	r24, 0x00	; 0
}
    11f4:	0f 90       	pop	r0
    11f6:	0f 90       	pop	r0
    11f8:	0f 90       	pop	r0
    11fa:	0f 90       	pop	r0
    11fc:	df 91       	pop	r29
    11fe:	cf 91       	pop	r28
    1200:	1f 91       	pop	r17
    1202:	0f 91       	pop	r16
    1204:	ff 90       	pop	r15
    1206:	ef 90       	pop	r14
    1208:	08 95       	ret

0000120a <NRF24L01_Receive>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
    120a:	cf 93       	push	r28
    120c:	df 93       	push	r29
    120e:	80 91 fb 05 	lds	r24, 0x05FB	; 0x8005fb <rx_flag>
    1212:	81 30       	cpi	r24, 0x01	; 1
    1214:	09 f0       	breq	.+2      	; 0x1218 <NRF24L01_Receive+0xe>
    1216:	6b c1       	rjmp	.+726    	; 0x14ee <NRF24L01_Receive+0x2e4>
    1218:	80 91 fc 05 	lds	r24, 0x05FC	; 0x8005fc <RX_BUF>
    121c:	81 30       	cpi	r24, 0x01	; 1
    121e:	09 f0       	breq	.+2      	; 0x1222 <NRF24L01_Receive+0x18>
    1220:	59 c0       	rjmp	.+178    	; 0x12d4 <NRF24L01_Receive+0xca>
    1222:	ee ee       	ldi	r30, 0xEE	; 238
    1224:	f1 e0       	ldi	r31, 0x01	; 1
    1226:	01 90       	ld	r0, Z+
    1228:	00 20       	and	r0, r0
    122a:	e9 f7       	brne	.-6      	; 0x1226 <NRF24L01_Receive+0x1c>
    122c:	31 97       	sbiw	r30, 0x01	; 1
    122e:	af 01       	movw	r20, r30
    1230:	4e 5e       	subi	r20, 0xEE	; 238
    1232:	51 40       	sbci	r21, 0x01	; 1
    1234:	44 0f       	add	r20, r20
    1236:	55 1f       	adc	r21, r21
    1238:	60 e0       	ldi	r22, 0x00	; 0
    123a:	70 e0       	ldi	r23, 0x00	; 0
    123c:	8e ee       	ldi	r24, 0xEE	; 238
    123e:	91 e0       	ldi	r25, 0x01	; 1
    1240:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <memset>
    1244:	ec ef       	ldi	r30, 0xFC	; 252
    1246:	f5 e0       	ldi	r31, 0x05	; 5
    1248:	81 81       	ldd	r24, Z+1	; 0x01
    124a:	c2 81       	ldd	r28, Z+2	; 0x02
    124c:	d0 e0       	ldi	r29, 0x00	; 0
    124e:	dc 2f       	mov	r29, r28
    1250:	cc 27       	eor	r28, r28
    1252:	c8 2b       	or	r28, r24
    1254:	be 01       	movw	r22, r28
    1256:	0d 2e       	mov	r0, r29
    1258:	00 0c       	add	r0, r0
    125a:	88 0b       	sbc	r24, r24
    125c:	99 0b       	sbc	r25, r25
    125e:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__floatsisf>
    1262:	20 e0       	ldi	r18, 0x00	; 0
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	40 e2       	ldi	r20, 0x20	; 32
    1268:	51 e4       	ldi	r21, 0x41	; 65
    126a:	0e 94 a1 14 	call	0x2942	; 0x2942 <__divsf3>
    126e:	60 93 68 01 	sts	0x0168, r22	; 0x800168 <temp>
    1272:	70 93 69 01 	sts	0x0169, r23	; 0x800169 <temp+0x1>
    1276:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <temp+0x2>
    127a:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <temp+0x3>
    127e:	dd 23       	and	r29, r29
    1280:	5c f4       	brge	.+22     	; 0x1298 <NRF24L01_Receive+0x8e>
    1282:	dc 01       	movw	r26, r24
    1284:	cb 01       	movw	r24, r22
    1286:	b0 58       	subi	r27, 0x80	; 128
    1288:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <temp>
    128c:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <temp+0x1>
    1290:	a0 93 6a 01 	sts	0x016A, r26	; 0x80016a <temp+0x2>
    1294:	b0 93 6b 01 	sts	0x016B, r27	; 0x80016b <temp+0x3>
    1298:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <temp+0x3>
    129c:	8f 93       	push	r24
    129e:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <temp+0x2>
    12a2:	8f 93       	push	r24
    12a4:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <temp+0x1>
    12a8:	8f 93       	push	r24
    12aa:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <temp>
    12ae:	8f 93       	push	r24
    12b0:	80 e4       	ldi	r24, 0x40	; 64
    12b2:	91 e0       	ldi	r25, 0x01	; 1
    12b4:	9f 93       	push	r25
    12b6:	8f 93       	push	r24
    12b8:	8e ee       	ldi	r24, 0xEE	; 238
    12ba:	91 e0       	ldi	r25, 0x01	; 1
    12bc:	9f 93       	push	r25
    12be:	8f 93       	push	r24
    12c0:	0e 94 3a 1b 	call	0x3674	; 0x3674 <sprintf>
    12c4:	8d b7       	in	r24, 0x3d	; 61
    12c6:	9e b7       	in	r25, 0x3e	; 62
    12c8:	08 96       	adiw	r24, 0x08	; 8
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	9e bf       	out	0x3e, r25	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	8d bf       	out	0x3d, r24	; 61
    12d4:	80 91 fc 05 	lds	r24, 0x05FC	; 0x8005fc <RX_BUF>
    12d8:	85 30       	cpi	r24, 0x05	; 5
    12da:	09 f0       	breq	.+2      	; 0x12de <NRF24L01_Receive+0xd4>
    12dc:	47 c0       	rjmp	.+142    	; 0x136c <NRF24L01_Receive+0x162>
    12de:	c4 ee       	ldi	r28, 0xE4	; 228
    12e0:	d1 e0       	ldi	r29, 0x01	; 1
    12e2:	fe 01       	movw	r30, r28
    12e4:	01 90       	ld	r0, Z+
    12e6:	00 20       	and	r0, r0
    12e8:	e9 f7       	brne	.-6      	; 0x12e4 <NRF24L01_Receive+0xda>
    12ea:	31 97       	sbiw	r30, 0x01	; 1
    12ec:	af 01       	movw	r20, r30
    12ee:	44 5e       	subi	r20, 0xE4	; 228
    12f0:	51 40       	sbci	r21, 0x01	; 1
    12f2:	44 0f       	add	r20, r20
    12f4:	55 1f       	adc	r21, r21
    12f6:	60 e0       	ldi	r22, 0x00	; 0
    12f8:	70 e0       	ldi	r23, 0x00	; 0
    12fa:	ce 01       	movw	r24, r28
    12fc:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <memset>
    1300:	ec ef       	ldi	r30, 0xFC	; 252
    1302:	f5 e0       	ldi	r31, 0x05	; 5
    1304:	81 81       	ldd	r24, Z+1	; 0x01
    1306:	62 81       	ldd	r22, Z+2	; 0x02
    1308:	70 e0       	ldi	r23, 0x00	; 0
    130a:	76 2f       	mov	r23, r22
    130c:	66 27       	eor	r22, r22
    130e:	68 2b       	or	r22, r24
    1310:	07 2e       	mov	r0, r23
    1312:	00 0c       	add	r0, r0
    1314:	88 0b       	sbc	r24, r24
    1316:	99 0b       	sbc	r25, r25
    1318:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__floatsisf>
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	40 e2       	ldi	r20, 0x20	; 32
    1322:	51 e4       	ldi	r21, 0x41	; 65
    1324:	0e 94 a1 14 	call	0x2942	; 0x2942 <__divsf3>
    1328:	26 2f       	mov	r18, r22
    132a:	37 2f       	mov	r19, r23
    132c:	46 2f       	mov	r20, r22
    132e:	57 2f       	mov	r21, r23
    1330:	68 2f       	mov	r22, r24
    1332:	79 2f       	mov	r23, r25
    1334:	40 93 64 01 	sts	0x0164, r20	; 0x800164 <__data_end>
    1338:	50 93 65 01 	sts	0x0165, r21	; 0x800165 <__data_end+0x1>
    133c:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <__data_end+0x2>
    1340:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <__data_end+0x3>
    1344:	9f 93       	push	r25
    1346:	8f 93       	push	r24
    1348:	3f 93       	push	r19
    134a:	2f 93       	push	r18
    134c:	85 e4       	ldi	r24, 0x45	; 69
    134e:	91 e0       	ldi	r25, 0x01	; 1
    1350:	9f 93       	push	r25
    1352:	8f 93       	push	r24
    1354:	df 93       	push	r29
    1356:	cf 93       	push	r28
    1358:	0e 94 3a 1b 	call	0x3674	; 0x3674 <sprintf>
    135c:	8d b7       	in	r24, 0x3d	; 61
    135e:	9e b7       	in	r25, 0x3e	; 62
    1360:	08 96       	adiw	r24, 0x08	; 8
    1362:	0f b6       	in	r0, 0x3f	; 63
    1364:	f8 94       	cli
    1366:	9e bf       	out	0x3e, r25	; 62
    1368:	0f be       	out	0x3f, r0	; 63
    136a:	8d bf       	out	0x3d, r24	; 61
    136c:	c0 91 fc 05 	lds	r28, 0x05FC	; 0x8005fc <RX_BUF>
    1370:	c2 30       	cpi	r28, 0x02	; 2
    1372:	61 f5       	brne	.+88     	; 0x13cc <NRF24L01_Receive+0x1c2>
    1374:	ea ed       	ldi	r30, 0xDA	; 218
    1376:	f1 e0       	ldi	r31, 0x01	; 1
    1378:	01 90       	ld	r0, Z+
    137a:	00 20       	and	r0, r0
    137c:	e9 f7       	brne	.-6      	; 0x1378 <NRF24L01_Receive+0x16e>
    137e:	31 97       	sbiw	r30, 0x01	; 1
    1380:	af 01       	movw	r20, r30
    1382:	4a 5d       	subi	r20, 0xDA	; 218
    1384:	51 40       	sbci	r21, 0x01	; 1
    1386:	44 0f       	add	r20, r20
    1388:	55 1f       	adc	r21, r21
    138a:	60 e0       	ldi	r22, 0x00	; 0
    138c:	70 e0       	ldi	r23, 0x00	; 0
    138e:	8a ed       	ldi	r24, 0xDA	; 218
    1390:	91 e0       	ldi	r25, 0x01	; 1
    1392:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <memset>
    1396:	20 e0       	ldi	r18, 0x00	; 0
    1398:	0b c0       	rjmp	.+22     	; 0x13b0 <NRF24L01_Receive+0x1a6>
    139a:	82 2f       	mov	r24, r18
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	fc 01       	movw	r30, r24
    13a0:	e3 50       	subi	r30, 0x03	; 3
    13a2:	fa 4f       	sbci	r31, 0xFA	; 250
    13a4:	30 81       	ld	r19, Z
    13a6:	fc 01       	movw	r30, r24
    13a8:	e6 52       	subi	r30, 0x26	; 38
    13aa:	fe 4f       	sbci	r31, 0xFE	; 254
    13ac:	30 83       	st	Z, r19
    13ae:	2f 5f       	subi	r18, 0xFF	; 255
    13b0:	82 2f       	mov	r24, r18
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	ec ef       	ldi	r30, 0xFC	; 252
    13b6:	f5 e0       	ldi	r31, 0x05	; 5
    13b8:	01 90       	ld	r0, Z+
    13ba:	00 20       	and	r0, r0
    13bc:	e9 f7       	brne	.-6      	; 0x13b8 <NRF24L01_Receive+0x1ae>
    13be:	31 97       	sbiw	r30, 0x01	; 1
    13c0:	ec 5f       	subi	r30, 0xFC	; 252
    13c2:	f5 40       	sbci	r31, 0x05	; 5
    13c4:	31 97       	sbiw	r30, 0x01	; 1
    13c6:	8e 17       	cp	r24, r30
    13c8:	9f 07       	cpc	r25, r31
    13ca:	38 f3       	brcs	.-50     	; 0x139a <NRF24L01_Receive+0x190>
    13cc:	c3 30       	cpi	r28, 0x03	; 3
    13ce:	89 f5       	brne	.+98     	; 0x1432 <NRF24L01_Receive+0x228>
    13d0:	e6 ec       	ldi	r30, 0xC6	; 198
    13d2:	f1 e0       	ldi	r31, 0x01	; 1
    13d4:	01 90       	ld	r0, Z+
    13d6:	00 20       	and	r0, r0
    13d8:	e9 f7       	brne	.-6      	; 0x13d4 <NRF24L01_Receive+0x1ca>
    13da:	31 97       	sbiw	r30, 0x01	; 1
    13dc:	af 01       	movw	r20, r30
    13de:	46 5c       	subi	r20, 0xC6	; 198
    13e0:	51 40       	sbci	r21, 0x01	; 1
    13e2:	44 0f       	add	r20, r20
    13e4:	55 1f       	adc	r21, r21
    13e6:	60 e0       	ldi	r22, 0x00	; 0
    13e8:	70 e0       	ldi	r23, 0x00	; 0
    13ea:	86 ec       	ldi	r24, 0xC6	; 198
    13ec:	91 e0       	ldi	r25, 0x01	; 1
    13ee:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <memset>
    13f2:	20 e0       	ldi	r18, 0x00	; 0
    13f4:	0b c0       	rjmp	.+22     	; 0x140c <NRF24L01_Receive+0x202>
    13f6:	82 2f       	mov	r24, r18
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	fc 01       	movw	r30, r24
    13fc:	e3 50       	subi	r30, 0x03	; 3
    13fe:	fa 4f       	sbci	r31, 0xFA	; 250
    1400:	30 81       	ld	r19, Z
    1402:	fc 01       	movw	r30, r24
    1404:	ea 53       	subi	r30, 0x3A	; 58
    1406:	fe 4f       	sbci	r31, 0xFE	; 254
    1408:	30 83       	st	Z, r19
    140a:	2f 5f       	subi	r18, 0xFF	; 255
    140c:	82 2f       	mov	r24, r18
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	ec ef       	ldi	r30, 0xFC	; 252
    1412:	f5 e0       	ldi	r31, 0x05	; 5
    1414:	01 90       	ld	r0, Z+
    1416:	00 20       	and	r0, r0
    1418:	e9 f7       	brne	.-6      	; 0x1414 <NRF24L01_Receive+0x20a>
    141a:	31 97       	sbiw	r30, 0x01	; 1
    141c:	ec 5f       	subi	r30, 0xFC	; 252
    141e:	f5 40       	sbci	r31, 0x05	; 5
    1420:	31 97       	sbiw	r30, 0x01	; 1
    1422:	8e 17       	cp	r24, r30
    1424:	9f 07       	cpc	r25, r31
    1426:	38 f3       	brcs	.-50     	; 0x13f6 <NRF24L01_Receive+0x1ec>
    1428:	fc 01       	movw	r30, r24
    142a:	e9 53       	subi	r30, 0x39	; 57
    142c:	fe 4f       	sbci	r31, 0xFE	; 254
    142e:	80 e2       	ldi	r24, 0x20	; 32
    1430:	80 83       	st	Z, r24
    1432:	c4 30       	cpi	r28, 0x04	; 4
    1434:	61 f5       	brne	.+88     	; 0x148e <NRF24L01_Receive+0x284>
    1436:	ec eb       	ldi	r30, 0xBC	; 188
    1438:	f1 e0       	ldi	r31, 0x01	; 1
    143a:	01 90       	ld	r0, Z+
    143c:	00 20       	and	r0, r0
    143e:	e9 f7       	brne	.-6      	; 0x143a <NRF24L01_Receive+0x230>
    1440:	31 97       	sbiw	r30, 0x01	; 1
    1442:	af 01       	movw	r20, r30
    1444:	4c 5b       	subi	r20, 0xBC	; 188
    1446:	51 40       	sbci	r21, 0x01	; 1
    1448:	44 0f       	add	r20, r20
    144a:	55 1f       	adc	r21, r21
    144c:	60 e0       	ldi	r22, 0x00	; 0
    144e:	70 e0       	ldi	r23, 0x00	; 0
    1450:	8c eb       	ldi	r24, 0xBC	; 188
    1452:	91 e0       	ldi	r25, 0x01	; 1
    1454:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <memset>
    1458:	20 e0       	ldi	r18, 0x00	; 0
    145a:	0b c0       	rjmp	.+22     	; 0x1472 <NRF24L01_Receive+0x268>
    145c:	82 2f       	mov	r24, r18
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	fc 01       	movw	r30, r24
    1462:	e3 50       	subi	r30, 0x03	; 3
    1464:	fa 4f       	sbci	r31, 0xFA	; 250
    1466:	30 81       	ld	r19, Z
    1468:	fc 01       	movw	r30, r24
    146a:	e4 54       	subi	r30, 0x44	; 68
    146c:	fe 4f       	sbci	r31, 0xFE	; 254
    146e:	30 83       	st	Z, r19
    1470:	2f 5f       	subi	r18, 0xFF	; 255
    1472:	82 2f       	mov	r24, r18
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	ec ef       	ldi	r30, 0xFC	; 252
    1478:	f5 e0       	ldi	r31, 0x05	; 5
    147a:	01 90       	ld	r0, Z+
    147c:	00 20       	and	r0, r0
    147e:	e9 f7       	brne	.-6      	; 0x147a <NRF24L01_Receive+0x270>
    1480:	31 97       	sbiw	r30, 0x01	; 1
    1482:	ec 5f       	subi	r30, 0xFC	; 252
    1484:	f5 40       	sbci	r31, 0x05	; 5
    1486:	31 97       	sbiw	r30, 0x01	; 1
    1488:	8e 17       	cp	r24, r30
    148a:	9f 07       	cpc	r25, r31
    148c:	38 f3       	brcs	.-50     	; 0x145c <NRF24L01_Receive+0x252>
    148e:	c6 30       	cpi	r28, 0x06	; 6
    1490:	61 f5       	brne	.+88     	; 0x14ea <NRF24L01_Receive+0x2e0>
    1492:	e2 eb       	ldi	r30, 0xB2	; 178
    1494:	f1 e0       	ldi	r31, 0x01	; 1
    1496:	01 90       	ld	r0, Z+
    1498:	00 20       	and	r0, r0
    149a:	e9 f7       	brne	.-6      	; 0x1496 <NRF24L01_Receive+0x28c>
    149c:	31 97       	sbiw	r30, 0x01	; 1
    149e:	af 01       	movw	r20, r30
    14a0:	42 5b       	subi	r20, 0xB2	; 178
    14a2:	51 40       	sbci	r21, 0x01	; 1
    14a4:	44 0f       	add	r20, r20
    14a6:	55 1f       	adc	r21, r21
    14a8:	60 e0       	ldi	r22, 0x00	; 0
    14aa:	70 e0       	ldi	r23, 0x00	; 0
    14ac:	82 eb       	ldi	r24, 0xB2	; 178
    14ae:	91 e0       	ldi	r25, 0x01	; 1
    14b0:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <memset>
    14b4:	20 e0       	ldi	r18, 0x00	; 0
    14b6:	0b c0       	rjmp	.+22     	; 0x14ce <NRF24L01_Receive+0x2c4>
    14b8:	82 2f       	mov	r24, r18
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	fc 01       	movw	r30, r24
    14be:	e3 50       	subi	r30, 0x03	; 3
    14c0:	fa 4f       	sbci	r31, 0xFA	; 250
    14c2:	30 81       	ld	r19, Z
    14c4:	fc 01       	movw	r30, r24
    14c6:	ee 54       	subi	r30, 0x4E	; 78
    14c8:	fe 4f       	sbci	r31, 0xFE	; 254
    14ca:	30 83       	st	Z, r19
    14cc:	2f 5f       	subi	r18, 0xFF	; 255
    14ce:	82 2f       	mov	r24, r18
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	ec ef       	ldi	r30, 0xFC	; 252
    14d4:	f5 e0       	ldi	r31, 0x05	; 5
    14d6:	01 90       	ld	r0, Z+
    14d8:	00 20       	and	r0, r0
    14da:	e9 f7       	brne	.-6      	; 0x14d6 <NRF24L01_Receive+0x2cc>
    14dc:	31 97       	sbiw	r30, 0x01	; 1
    14de:	ec 5f       	subi	r30, 0xFC	; 252
    14e0:	f5 40       	sbci	r31, 0x05	; 5
    14e2:	31 97       	sbiw	r30, 0x01	; 1
    14e4:	8e 17       	cp	r24, r30
    14e6:	9f 07       	cpc	r25, r31
    14e8:	38 f3       	brcs	.-50     	; 0x14b8 <NRF24L01_Receive+0x2ae>
    14ea:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <rx_flag>
    14ee:	df 91       	pop	r29
    14f0:	cf 91       	pop	r28
    14f2:	08 95       	ret

000014f4 <NRF24_FlushRX>:
    14f4:	85 b1       	in	r24, 0x05	; 5
    14f6:	8b 7f       	andi	r24, 0xFB	; 251
    14f8:	85 b9       	out	0x05, r24	; 5
    14fa:	82 ee       	ldi	r24, 0xE2	; 226
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    1502:	85 e0       	ldi	r24, 0x05	; 5
    1504:	8a 95       	dec	r24
    1506:	f1 f7       	brne	.-4      	; 0x1504 <NRF24_FlushRX+0x10>
    1508:	00 00       	nop
    150a:	85 b1       	in	r24, 0x05	; 5
    150c:	84 60       	ori	r24, 0x04	; 4
    150e:	85 b9       	out	0x05, r24	; 5
    1510:	08 95       	ret

00001512 <NRF24_FlushTX>:
    1512:	85 b1       	in	r24, 0x05	; 5
    1514:	8b 7f       	andi	r24, 0xFB	; 251
    1516:	85 b9       	out	0x05, r24	; 5
    1518:	81 ee       	ldi	r24, 0xE1	; 225
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    1520:	85 e0       	ldi	r24, 0x05	; 5
    1522:	8a 95       	dec	r24
    1524:	f1 f7       	brne	.-4      	; 0x1522 <NRF24_FlushTX+0x10>
    1526:	00 00       	nop
    1528:	85 b1       	in	r24, 0x05	; 5
    152a:	84 60       	ori	r24, 0x04	; 4
    152c:	85 b9       	out	0x05, r24	; 5
    152e:	08 95       	ret

00001530 <NRF24_ToggleFeatures>:
    1530:	85 b1       	in	r24, 0x05	; 5
    1532:	8b 7f       	andi	r24, 0xFB	; 251
    1534:	85 b9       	out	0x05, r24	; 5
    1536:	80 e5       	ldi	r24, 0x50	; 80
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    153e:	85 e0       	ldi	r24, 0x05	; 5
    1540:	8a 95       	dec	r24
    1542:	f1 f7       	brne	.-4      	; 0x1540 <NRF24_ToggleFeatures+0x10>
    1544:	00 00       	nop
    1546:	83 e7       	ldi	r24, 0x73	; 115
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    154e:	85 b1       	in	r24, 0x05	; 5
    1550:	84 60       	ori	r24, 0x04	; 4
    1552:	85 b9       	out	0x05, r24	; 5
    1554:	08 95       	ret

00001556 <NRF24_Read_Buf>:
    1556:	ef 92       	push	r14
    1558:	ff 92       	push	r15
    155a:	0f 93       	push	r16
    155c:	1f 93       	push	r17
    155e:	cf 93       	push	r28
    1560:	df 93       	push	r29
    1562:	8b 01       	movw	r16, r22
    1564:	c4 2f       	mov	r28, r20
    1566:	95 b1       	in	r25, 0x05	; 5
    1568:	9b 7f       	andi	r25, 0xFB	; 251
    156a:	95 b9       	out	0x05, r25	; 5
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    1572:	0c c0       	rjmp	.+24     	; 0x158c <NRF24_Read_Buf+0x36>
    1574:	78 01       	movw	r14, r16
    1576:	8f ef       	ldi	r24, 0xFF	; 255
    1578:	e8 1a       	sub	r14, r24
    157a:	f8 0a       	sbc	r15, r24
    157c:	8f ef       	ldi	r24, 0xFF	; 255
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    1584:	f8 01       	movw	r30, r16
    1586:	80 83       	st	Z, r24
    1588:	cd 2f       	mov	r28, r29
    158a:	87 01       	movw	r16, r14
    158c:	df ef       	ldi	r29, 0xFF	; 255
    158e:	dc 0f       	add	r29, r28
    1590:	c1 11       	cpse	r28, r1
    1592:	f0 cf       	rjmp	.-32     	; 0x1574 <NRF24_Read_Buf+0x1e>
    1594:	85 b1       	in	r24, 0x05	; 5
    1596:	84 60       	ori	r24, 0x04	; 4
    1598:	85 b9       	out	0x05, r24	; 5
    159a:	df 91       	pop	r29
    159c:	cf 91       	pop	r28
    159e:	1f 91       	pop	r17
    15a0:	0f 91       	pop	r16
    15a2:	ff 90       	pop	r15
    15a4:	ef 90       	pop	r14
    15a6:	08 95       	ret

000015a8 <NRF24_Write_Buf>:
    15a8:	ef 92       	push	r14
    15aa:	ff 92       	push	r15
    15ac:	0f 93       	push	r16
    15ae:	1f 93       	push	r17
    15b0:	cf 93       	push	r28
    15b2:	df 93       	push	r29
    15b4:	8b 01       	movw	r16, r22
    15b6:	c4 2f       	mov	r28, r20
    15b8:	80 62       	ori	r24, 0x20	; 32
    15ba:	95 b1       	in	r25, 0x05	; 5
    15bc:	9b 7f       	andi	r25, 0xFB	; 251
    15be:	95 b9       	out	0x05, r25	; 5
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    15c6:	85 e0       	ldi	r24, 0x05	; 5
    15c8:	8a 95       	dec	r24
    15ca:	f1 f7       	brne	.-4      	; 0x15c8 <NRF24_Write_Buf+0x20>
    15cc:	00 00       	nop
    15ce:	0b c0       	rjmp	.+22     	; 0x15e6 <NRF24_Write_Buf+0x3e>
    15d0:	78 01       	movw	r14, r16
    15d2:	ef ef       	ldi	r30, 0xFF	; 255
    15d4:	ee 1a       	sub	r14, r30
    15d6:	fe 0a       	sbc	r15, r30
    15d8:	f8 01       	movw	r30, r16
    15da:	80 81       	ld	r24, Z
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
    15e2:	cd 2f       	mov	r28, r29
    15e4:	87 01       	movw	r16, r14
    15e6:	df ef       	ldi	r29, 0xFF	; 255
    15e8:	dc 0f       	add	r29, r28
    15ea:	c1 11       	cpse	r28, r1
    15ec:	f1 cf       	rjmp	.-30     	; 0x15d0 <NRF24_Write_Buf+0x28>
    15ee:	85 b1       	in	r24, 0x05	; 5
    15f0:	84 60       	ori	r24, 0x04	; 4
    15f2:	85 b9       	out	0x05, r24	; 5
    15f4:	df 91       	pop	r29
    15f6:	cf 91       	pop	r28
    15f8:	1f 91       	pop	r17
    15fa:	0f 91       	pop	r16
    15fc:	ff 90       	pop	r15
    15fe:	ef 90       	pop	r14
    1600:	08 95       	ret

00001602 <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
    1602:	cf 93       	push	r28
    1604:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
    1606:	80 62       	ori	r24, 0x20	; 32
	LOW_CSN;
    1608:	95 b1       	in	r25, 0x05	; 5
    160a:	9b 7f       	andi	r25, 0xFB	; 251
    160c:	95 b9       	out	0x05, r25	; 5
	spi_send_recv(reg);
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
	spi_send_recv(data_out);
    1614:	8c 2f       	mov	r24, r28
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
	HIGH_CSN;
    161c:	85 b1       	in	r24, 0x05	; 5
    161e:	84 60       	ori	r24, 0x04	; 4
    1620:	85 b9       	out	0x05, r24	; 5
}
    1622:	cf 91       	pop	r28
    1624:	08 95       	ret

00001626 <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
    1626:	cf 93       	push	r28
    1628:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
    162a:	85 b1       	in	r24, 0x05	; 5
    162c:	8b 7f       	andi	r24, 0xFB	; 251
    162e:	85 b9       	out	0x05, r24	; 5
	data_in = spi_send_recv(reg);
    1630:	8c 2f       	mov	r24, r28
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
	if(reg != STATUS)
    1638:	c7 30       	cpi	r28, 0x07	; 7
    163a:	21 f0       	breq	.+8      	; 0x1644 <nRF_read_register+0x1e>
	{
		data_in = spi_send_recv(NOP);
    163c:	8f ef       	ldi	r24, 0xFF	; 255
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	0e 94 16 06 	call	0xc2c	; 0xc2c <spi_send_recv>
	}
	HIGH_CSN;
    1644:	95 b1       	in	r25, 0x05	; 5
    1646:	94 60       	ori	r25, 0x04	; 4
    1648:	95 b9       	out	0x05, r25	; 5
	return data_in;
}
    164a:	cf 91       	pop	r28
    164c:	08 95       	ret

0000164e <__vector_1>:
		//memset(RX_BUF, 0, sizeof(int) * strlen(RX_BUF));//очистка массива
		rx_flag = 0;
	}
}
ISR(INT0_vect)
{
    164e:	1f 92       	push	r1
    1650:	0f 92       	push	r0
    1652:	0f b6       	in	r0, 0x3f	; 63
    1654:	0f 92       	push	r0
    1656:	11 24       	eor	r1, r1
    1658:	2f 93       	push	r18
    165a:	3f 93       	push	r19
    165c:	4f 93       	push	r20
    165e:	5f 93       	push	r21
    1660:	6f 93       	push	r22
    1662:	7f 93       	push	r23
    1664:	8f 93       	push	r24
    1666:	9f 93       	push	r25
    1668:	af 93       	push	r26
    166a:	bf 93       	push	r27
    166c:	ef 93       	push	r30
    166e:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1670:	8f ea       	ldi	r24, 0xAF	; 175
    1672:	94 e0       	ldi	r25, 0x04	; 4
    1674:	01 97       	sbiw	r24, 0x01	; 1
    1676:	f1 f7       	brne	.-4      	; 0x1674 <__vector_1+0x26>
    1678:	00 c0       	rjmp	.+0      	; 0x167a <__vector_1+0x2c>
    167a:	00 00       	nop
	uint8_t status=0x01;
	uint8_t pipe;
	_delay_us(300);
	PORTD |= (1<<LED);
    167c:	8b b1       	in	r24, 0x0b	; 11
    167e:	80 61       	ori	r24, 0x10	; 16
    1680:	8b b9       	out	0x0b, r24	; 11
    1682:	8f ea       	ldi	r24, 0xAF	; 175
    1684:	94 e0       	ldi	r25, 0x04	; 4
    1686:	01 97       	sbiw	r24, 0x01	; 1
    1688:	f1 f7       	brne	.-4      	; 0x1686 <__vector_1+0x38>
    168a:	00 c0       	rjmp	.+0      	; 0x168c <__vector_1+0x3e>
    168c:	00 00       	nop
	_delay_us(300);
	PORTD &= ~(1<<LED);
    168e:	8b b1       	in	r24, 0x0b	; 11
    1690:	8f 7e       	andi	r24, 0xEF	; 239
    1692:	8b b9       	out	0x0b, r24	; 11
	status = nRF_read_register(STATUS);
    1694:	87 e0       	ldi	r24, 0x07	; 7
    1696:	0e 94 13 0b 	call	0x1626	; 0x1626 <nRF_read_register>
	if(status & 0x40)
    169a:	86 ff       	sbrs	r24, 6
    169c:	0a c0       	rjmp	.+20     	; 0x16b2 <__vector_1+0x64>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    169e:	45 e0       	ldi	r20, 0x05	; 5
    16a0:	6c ef       	ldi	r22, 0xFC	; 252
    16a2:	75 e0       	ldi	r23, 0x05	; 5
    16a4:	81 e6       	ldi	r24, 0x61	; 97
    16a6:	0e 94 ab 0a 	call	0x1556	; 0x1556 <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    16aa:	60 e4       	ldi	r22, 0x40	; 64
    16ac:	87 e0       	ldi	r24, 0x07	; 7
    16ae:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	}
	 rx_flag = 1;
    16b2:	81 e0       	ldi	r24, 0x01	; 1
    16b4:	80 93 fb 05 	sts	0x05FB, r24	; 0x8005fb <rx_flag>
}
    16b8:	ff 91       	pop	r31
    16ba:	ef 91       	pop	r30
    16bc:	bf 91       	pop	r27
    16be:	af 91       	pop	r26
    16c0:	9f 91       	pop	r25
    16c2:	8f 91       	pop	r24
    16c4:	7f 91       	pop	r23
    16c6:	6f 91       	pop	r22
    16c8:	5f 91       	pop	r21
    16ca:	4f 91       	pop	r20
    16cc:	3f 91       	pop	r19
    16ce:	2f 91       	pop	r18
    16d0:	0f 90       	pop	r0
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	0f 90       	pop	r0
    16d6:	1f 90       	pop	r1
    16d8:	18 95       	reti

000016da <NRF24L01_RX_Mode>:
}
//-------------------------------------------------------------
void NRF24L01_RX_Mode(void) // включение режима приема
{
	uint8_t regval = 0x00;
	regval = nRF_read_register(CONFIG);
    16da:	80 e0       	ldi	r24, 0x00	; 0
    16dc:	0e 94 13 0b 	call	0x1626	; 0x1626 <nRF_read_register>
	//разбудим модуль и переведём его в режим приёмника, включив биты PWR_UP и PRIM_RX
	regval |= (1<<PWR_UP)|(1<<PRIM_RX);
    16e0:	68 2f       	mov	r22, r24
    16e2:	63 60       	ori	r22, 0x03	; 3
	nRF_write_register(CONFIG,regval);
    16e4:	80 e0       	ldi	r24, 0x00	; 0
    16e6:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	HIGH_CE;
    16ea:	85 b1       	in	r24, 0x05	; 5
    16ec:	82 60       	ori	r24, 0x02	; 2
    16ee:	85 b9       	out	0x05, r24	; 5
    16f0:	87 e5       	ldi	r24, 0x57	; 87
    16f2:	92 e0       	ldi	r25, 0x02	; 2
    16f4:	01 97       	sbiw	r24, 0x01	; 1
    16f6:	f1 f7       	brne	.-4      	; 0x16f4 <NRF24L01_RX_Mode+0x1a>
    16f8:	00 c0       	rjmp	.+0      	; 0x16fa <NRF24L01_RX_Mode+0x20>
    16fa:	00 00       	nop
	_delay_us(150); //Задержка минимум 130 мкс
	// Flush buffers
	NRF24_FlushRX();
    16fc:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <NRF24_FlushRX>
	NRF24_FlushTX();
    1700:	0e 94 89 0a 	call	0x1512	; 0x1512 <NRF24_FlushTX>
    1704:	08 95       	ret

00001706 <NRF24_ini>:
extern uint8_t flag_irq;
volatile uint8_t rx_flag = 0;
//-------------------------------------------------------------
void NRF24_ini(void)
{
	LOW_CE;
    1706:	85 b1       	in	r24, 0x05	; 5
    1708:	8d 7f       	andi	r24, 0xFD	; 253
    170a:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    170c:	8f e1       	ldi	r24, 0x1F	; 31
    170e:	9e e4       	ldi	r25, 0x4E	; 78
    1710:	01 97       	sbiw	r24, 0x01	; 1
    1712:	f1 f7       	brne	.-4      	; 0x1710 <NRF24_ini+0xa>
    1714:	00 c0       	rjmp	.+0      	; 0x1716 <NRF24_ini+0x10>
    1716:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(CONFIG, 0x0a); // Set PWR_UP bit, enable CRC(1 byte) &Prim_RX:0 (Transmitter)
    1718:	6a e0       	ldi	r22, 0x0A	; 10
    171a:	80 e0       	ldi	r24, 0x00	; 0
    171c:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
    1720:	8f e1       	ldi	r24, 0x1F	; 31
    1722:	9e e4       	ldi	r25, 0x4E	; 78
    1724:	01 97       	sbiw	r24, 0x01	; 1
    1726:	f1 f7       	brne	.-4      	; 0x1724 <NRF24_ini+0x1e>
    1728:	00 c0       	rjmp	.+0      	; 0x172a <NRF24_ini+0x24>
    172a:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(EN_AA, 0x02); // Enable Pipe1
    172c:	62 e0       	ldi	r22, 0x02	; 2
    172e:	81 e0       	ldi	r24, 0x01	; 1
    1730:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	nRF_write_register(EN_RXADDR, 0x02); // Enable Pipe1
    1734:	62 e0       	ldi	r22, 0x02	; 2
    1736:	82 e0       	ldi	r24, 0x02	; 2
    1738:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	nRF_write_register(SETUP_AW, 0x01); // Setup address width=3 bytes
    173c:	61 e0       	ldi	r22, 0x01	; 1
    173e:	83 e0       	ldi	r24, 0x03	; 3
    1740:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	nRF_write_register(SETUP_RETR, 0x5F); // // 1500us, 15 retrans
    1744:	6f e5       	ldi	r22, 0x5F	; 95
    1746:	84 e0       	ldi	r24, 0x04	; 4
    1748:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	NRF24_ToggleFeatures();
    174c:	0e 94 98 0a 	call	0x1530	; 0x1530 <NRF24_ToggleFeatures>
	nRF_write_register(FEATURE, 0);
    1750:	60 e0       	ldi	r22, 0x00	; 0
    1752:	8d e1       	ldi	r24, 0x1D	; 29
    1754:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	nRF_write_register(DYNPD, 0);
    1758:	60 e0       	ldi	r22, 0x00	; 0
    175a:	8c e1       	ldi	r24, 0x1C	; 28
    175c:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	nRF_write_register(STATUS, 0x70);//Reset flags for IRQ
    1760:	60 e7       	ldi	r22, 0x70	; 112
    1762:	87 e0       	ldi	r24, 0x07	; 7
    1764:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	nRF_write_register(RF_CH, 76); // частота 2476 MHz
    1768:	6c e4       	ldi	r22, 0x4C	; 76
    176a:	85 e0       	ldi	r24, 0x05	; 5
    176c:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	nRF_write_register(RF_SETUP, 0x06); //TX_PWR:0dBm, Datarate:1Mbps
    1770:	66 e0       	ldi	r22, 0x06	; 6
    1772:	86 e0       	ldi	r24, 0x06	; 6
    1774:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	NRF24_Write_Buf(TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);
    1778:	43 e0       	ldi	r20, 0x03	; 3
    177a:	62 e0       	ldi	r22, 0x02	; 2
    177c:	71 e0       	ldi	r23, 0x01	; 1
    177e:	80 e1       	ldi	r24, 0x10	; 16
    1780:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <NRF24_Write_Buf>
	NRF24_Write_Buf(RX_ADDR_P1, TX_ADDRESS, TX_ADR_WIDTH);
    1784:	43 e0       	ldi	r20, 0x03	; 3
    1786:	62 e0       	ldi	r22, 0x02	; 2
    1788:	71 e0       	ldi	r23, 0x01	; 1
    178a:	8b e0       	ldi	r24, 0x0B	; 11
    178c:	0e 94 d4 0a 	call	0x15a8	; 0x15a8 <NRF24_Write_Buf>
	nRF_write_register(RX_PW_P1, TX_PLOAD_WIDTH); //Number of bytes in RX payload in data pipe 1
    1790:	65 e0       	ldi	r22, 0x05	; 5
    1792:	82 e1       	ldi	r24, 0x12	; 18
    1794:	0e 94 01 0b 	call	0x1602	; 0x1602 <nRF_write_register>
	//пока уходим в режим приёмника
	NRF24L01_RX_Mode();
    1798:	0e 94 6d 0b 	call	0x16da	; 0x16da <NRF24L01_RX_Mode>
    179c:	08 95       	ret

0000179e <mem_set>:
	return FR_OK;

fw_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    179e:	fc 01       	movw	r30, r24
    17a0:	03 c0       	rjmp	.+6      	; 0x17a8 <mem_set+0xa>
    17a2:	60 83       	st	Z, r22
    17a4:	ac 01       	movw	r20, r24
    17a6:	31 96       	adiw	r30, 0x01	; 1
    17a8:	ca 01       	movw	r24, r20
    17aa:	01 97       	sbiw	r24, 0x01	; 1
    17ac:	45 2b       	or	r20, r21
    17ae:	c9 f7       	brne	.-14     	; 0x17a2 <mem_set+0x4>
    17b0:	08 95       	ret

000017b2 <mem_cmp>:
    17b2:	cf 93       	push	r28
    17b4:	df 93       	push	r29
    17b6:	dc 01       	movw	r26, r24
    17b8:	fb 01       	movw	r30, r22
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	02 c0       	rjmp	.+4      	; 0x17c4 <mem_cmp+0x12>
    17c0:	fb 01       	movw	r30, r22
    17c2:	de 01       	movw	r26, r28
    17c4:	9a 01       	movw	r18, r20
    17c6:	21 50       	subi	r18, 0x01	; 1
    17c8:	31 09       	sbc	r19, r1
    17ca:	45 2b       	or	r20, r21
    17cc:	61 f0       	breq	.+24     	; 0x17e6 <mem_cmp+0x34>
    17ce:	ed 01       	movw	r28, r26
    17d0:	21 96       	adiw	r28, 0x01	; 1
    17d2:	8c 91       	ld	r24, X
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	bf 01       	movw	r22, r30
    17d8:	6f 5f       	subi	r22, 0xFF	; 255
    17da:	7f 4f       	sbci	r23, 0xFF	; 255
    17dc:	40 81       	ld	r20, Z
    17de:	84 1b       	sub	r24, r20
    17e0:	91 09       	sbc	r25, r1
    17e2:	a9 01       	movw	r20, r18
    17e4:	69 f3       	breq	.-38     	; 0x17c0 <mem_cmp+0xe>
    17e6:	df 91       	pop	r29
    17e8:	cf 91       	pop	r28
    17ea:	08 95       	ret

000017ec <clust2sect>:
    17ec:	0f 93       	push	r16
    17ee:	1f 93       	push	r17
    17f0:	e0 91 01 06 	lds	r30, 0x0601	; 0x800601 <FatFs>
    17f4:	f0 91 02 06 	lds	r31, 0x0602	; 0x800602 <FatFs+0x1>
    17f8:	9b 01       	movw	r18, r22
    17fa:	ac 01       	movw	r20, r24
    17fc:	22 50       	subi	r18, 0x02	; 2
    17fe:	31 09       	sbc	r19, r1
    1800:	41 09       	sbc	r20, r1
    1802:	51 09       	sbc	r21, r1
    1804:	80 85       	ldd	r24, Z+8	; 0x08
    1806:	91 85       	ldd	r25, Z+9	; 0x09
    1808:	a2 85       	ldd	r26, Z+10	; 0x0a
    180a:	b3 85       	ldd	r27, Z+11	; 0x0b
    180c:	02 97       	sbiw	r24, 0x02	; 2
    180e:	a1 09       	sbc	r26, r1
    1810:	b1 09       	sbc	r27, r1
    1812:	28 17       	cp	r18, r24
    1814:	39 07       	cpc	r19, r25
    1816:	4a 07       	cpc	r20, r26
    1818:	5b 07       	cpc	r21, r27
    181a:	68 f4       	brcc	.+26     	; 0x1836 <clust2sect+0x4a>
    181c:	a1 81       	ldd	r26, Z+1	; 0x01
    181e:	b0 e0       	ldi	r27, 0x00	; 0
    1820:	0e 94 ad 19 	call	0x335a	; 0x335a <__muluhisi3>
    1824:	04 89       	ldd	r16, Z+20	; 0x14
    1826:	15 89       	ldd	r17, Z+21	; 0x15
    1828:	26 89       	ldd	r18, Z+22	; 0x16
    182a:	37 89       	ldd	r19, Z+23	; 0x17
    182c:	60 0f       	add	r22, r16
    182e:	71 1f       	adc	r23, r17
    1830:	82 1f       	adc	r24, r18
    1832:	93 1f       	adc	r25, r19
    1834:	03 c0       	rjmp	.+6      	; 0x183c <clust2sect+0x50>
    1836:	60 e0       	ldi	r22, 0x00	; 0
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	cb 01       	movw	r24, r22
    183c:	1f 91       	pop	r17
    183e:	0f 91       	pop	r16
    1840:	08 95       	ret

00001842 <dir_rewind>:
    1842:	0f 93       	push	r16
    1844:	1f 93       	push	r17
    1846:	cf 93       	push	r28
    1848:	df 93       	push	r29
    184a:	fc 01       	movw	r30, r24
    184c:	a0 91 01 06 	lds	r26, 0x0601	; 0x800601 <FatFs>
    1850:	b0 91 02 06 	lds	r27, 0x0602	; 0x800602 <FatFs+0x1>
    1854:	11 82       	std	Z+1, r1	; 0x01
    1856:	10 82       	st	Z, r1
    1858:	64 81       	ldd	r22, Z+4	; 0x04
    185a:	75 81       	ldd	r23, Z+5	; 0x05
    185c:	86 81       	ldd	r24, Z+6	; 0x06
    185e:	97 81       	ldd	r25, Z+7	; 0x07
    1860:	61 30       	cpi	r22, 0x01	; 1
    1862:	71 05       	cpc	r23, r1
    1864:	81 05       	cpc	r24, r1
    1866:	91 05       	cpc	r25, r1
    1868:	91 f1       	breq	.+100    	; 0x18ce <dir_rewind+0x8c>
    186a:	18 96       	adiw	r26, 0x08	; 8
    186c:	0d 91       	ld	r16, X+
    186e:	1d 91       	ld	r17, X+
    1870:	2d 91       	ld	r18, X+
    1872:	3c 91       	ld	r19, X
    1874:	1b 97       	sbiw	r26, 0x0b	; 11
    1876:	60 17       	cp	r22, r16
    1878:	71 07       	cpc	r23, r17
    187a:	82 07       	cpc	r24, r18
    187c:	93 07       	cpc	r25, r19
    187e:	48 f5       	brcc	.+82     	; 0x18d2 <dir_rewind+0x90>
    1880:	61 15       	cp	r22, r1
    1882:	71 05       	cpc	r23, r1
    1884:	81 05       	cpc	r24, r1
    1886:	91 05       	cpc	r25, r1
    1888:	49 f4       	brne	.+18     	; 0x189c <dir_rewind+0x5a>
    188a:	2c 91       	ld	r18, X
    188c:	23 30       	cpi	r18, 0x03	; 3
    188e:	31 f4       	brne	.+12     	; 0x189c <dir_rewind+0x5a>
    1890:	50 96       	adiw	r26, 0x10	; 16
    1892:	6d 91       	ld	r22, X+
    1894:	7d 91       	ld	r23, X+
    1896:	8d 91       	ld	r24, X+
    1898:	9c 91       	ld	r25, X
    189a:	53 97       	sbiw	r26, 0x13	; 19
    189c:	ef 01       	movw	r28, r30
    189e:	60 87       	std	Z+8, r22	; 0x08
    18a0:	71 87       	std	Z+9, r23	; 0x09
    18a2:	82 87       	std	Z+10, r24	; 0x0a
    18a4:	93 87       	std	Z+11, r25	; 0x0b
    18a6:	61 15       	cp	r22, r1
    18a8:	71 05       	cpc	r23, r1
    18aa:	81 05       	cpc	r24, r1
    18ac:	91 05       	cpc	r25, r1
    18ae:	19 f0       	breq	.+6      	; 0x18b6 <dir_rewind+0x74>
    18b0:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <clust2sect>
    18b4:	06 c0       	rjmp	.+12     	; 0x18c2 <dir_rewind+0x80>
    18b6:	50 96       	adiw	r26, 0x10	; 16
    18b8:	6d 91       	ld	r22, X+
    18ba:	7d 91       	ld	r23, X+
    18bc:	8d 91       	ld	r24, X+
    18be:	9c 91       	ld	r25, X
    18c0:	53 97       	sbiw	r26, 0x13	; 19
    18c2:	6c 87       	std	Y+12, r22	; 0x0c
    18c4:	7d 87       	std	Y+13, r23	; 0x0d
    18c6:	8e 87       	std	Y+14, r24	; 0x0e
    18c8:	9f 87       	std	Y+15, r25	; 0x0f
    18ca:	80 e0       	ldi	r24, 0x00	; 0
    18cc:	03 c0       	rjmp	.+6      	; 0x18d4 <dir_rewind+0x92>
    18ce:	81 e0       	ldi	r24, 0x01	; 1
    18d0:	01 c0       	rjmp	.+2      	; 0x18d4 <dir_rewind+0x92>
    18d2:	81 e0       	ldi	r24, 0x01	; 1
    18d4:	df 91       	pop	r29
    18d6:	cf 91       	pop	r28
    18d8:	1f 91       	pop	r17
    18da:	0f 91       	pop	r16
    18dc:	08 95       	ret

000018de <create_name>:
    18de:	0f 93       	push	r16
    18e0:	1f 93       	push	r17
    18e2:	cf 93       	push	r28
    18e4:	df 93       	push	r29
    18e6:	eb 01       	movw	r28, r22
    18e8:	fc 01       	movw	r30, r24
    18ea:	02 81       	ldd	r16, Z+2	; 0x02
    18ec:	13 81       	ldd	r17, Z+3	; 0x03
    18ee:	4b e0       	ldi	r20, 0x0B	; 11
    18f0:	50 e0       	ldi	r21, 0x00	; 0
    18f2:	60 e2       	ldi	r22, 0x20	; 32
    18f4:	70 e0       	ldi	r23, 0x00	; 0
    18f6:	c8 01       	movw	r24, r16
    18f8:	0e 94 cf 0b 	call	0x179e	; 0x179e <mem_set>
    18fc:	28 81       	ld	r18, Y
    18fe:	39 81       	ldd	r19, Y+1	; 0x01
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	58 e0       	ldi	r21, 0x08	; 8
    1906:	01 c0       	rjmp	.+2      	; 0x190a <create_name+0x2c>
    1908:	84 2f       	mov	r24, r20
    190a:	41 e0       	ldi	r20, 0x01	; 1
    190c:	48 0f       	add	r20, r24
    190e:	f9 01       	movw	r30, r18
    1910:	e8 0f       	add	r30, r24
    1912:	f1 1d       	adc	r31, r1
    1914:	80 81       	ld	r24, Z
    1916:	81 32       	cpi	r24, 0x21	; 33
    1918:	c0 f0       	brcs	.+48     	; 0x194a <create_name+0x6c>
    191a:	8f 32       	cpi	r24, 0x2F	; 47
    191c:	b1 f0       	breq	.+44     	; 0x194a <create_name+0x6c>
    191e:	8e 32       	cpi	r24, 0x2E	; 46
    1920:	11 f0       	breq	.+4      	; 0x1926 <create_name+0x48>
    1922:	95 17       	cp	r25, r21
    1924:	38 f0       	brcs	.+14     	; 0x1934 <create_name+0x56>
    1926:	58 30       	cpi	r21, 0x08	; 8
    1928:	81 f4       	brne	.+32     	; 0x194a <create_name+0x6c>
    192a:	8e 32       	cpi	r24, 0x2E	; 46
    192c:	71 f4       	brne	.+28     	; 0x194a <create_name+0x6c>
    192e:	98 e0       	ldi	r25, 0x08	; 8
    1930:	5b e0       	ldi	r21, 0x0B	; 11
    1932:	ea cf       	rjmp	.-44     	; 0x1908 <create_name+0x2a>
    1934:	6f e9       	ldi	r22, 0x9F	; 159
    1936:	68 0f       	add	r22, r24
    1938:	6a 31       	cpi	r22, 0x1A	; 26
    193a:	08 f4       	brcc	.+2      	; 0x193e <create_name+0x60>
    193c:	80 52       	subi	r24, 0x20	; 32
    193e:	f8 01       	movw	r30, r16
    1940:	e9 0f       	add	r30, r25
    1942:	f1 1d       	adc	r31, r1
    1944:	80 83       	st	Z, r24
    1946:	9f 5f       	subi	r25, 0xFF	; 255
    1948:	df cf       	rjmp	.-66     	; 0x1908 <create_name+0x2a>
    194a:	24 0f       	add	r18, r20
    194c:	31 1d       	adc	r19, r1
    194e:	39 83       	std	Y+1, r19	; 0x01
    1950:	28 83       	st	Y, r18
    1952:	91 e0       	ldi	r25, 0x01	; 1
    1954:	81 32       	cpi	r24, 0x21	; 33
    1956:	08 f0       	brcs	.+2      	; 0x195a <create_name+0x7c>
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	f8 01       	movw	r30, r16
    195c:	93 87       	std	Z+11, r25	; 0x0b
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	df 91       	pop	r29
    1962:	cf 91       	pop	r28
    1964:	1f 91       	pop	r17
    1966:	0f 91       	pop	r16
    1968:	08 95       	ret

0000196a <check_fs>:
    196a:	cf 92       	push	r12
    196c:	df 92       	push	r13
    196e:	ef 92       	push	r14
    1970:	ff 92       	push	r15
    1972:	0f 93       	push	r16
    1974:	1f 93       	push	r17
    1976:	cf 93       	push	r28
    1978:	df 93       	push	r29
    197a:	ec 01       	movw	r28, r24
    197c:	6a 01       	movw	r12, r20
    197e:	7b 01       	movw	r14, r22
    1980:	02 e0       	ldi	r16, 0x02	; 2
    1982:	10 e0       	ldi	r17, 0x00	; 0
    1984:	2e ef       	ldi	r18, 0xFE	; 254
    1986:	31 e0       	ldi	r19, 0x01	; 1
    1988:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    198c:	81 11       	cpse	r24, r1
    198e:	25 c0       	rjmp	.+74     	; 0x19da <check_fs+0x70>
    1990:	88 81       	ld	r24, Y
    1992:	99 81       	ldd	r25, Y+1	; 0x01
    1994:	85 35       	cpi	r24, 0x55	; 85
    1996:	9a 4a       	sbci	r25, 0xAA	; 170
    1998:	11 f5       	brne	.+68     	; 0x19de <check_fs+0x74>
    199a:	26 e3       	ldi	r18, 0x36	; 54
    199c:	30 e0       	ldi	r19, 0x00	; 0
    199e:	b7 01       	movw	r22, r14
    19a0:	a6 01       	movw	r20, r12
    19a2:	ce 01       	movw	r24, r28
    19a4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    19a8:	81 11       	cpse	r24, r1
    19aa:	05 c0       	rjmp	.+10     	; 0x19b6 <check_fs+0x4c>
    19ac:	88 81       	ld	r24, Y
    19ae:	99 81       	ldd	r25, Y+1	; 0x01
    19b0:	86 34       	cpi	r24, 0x46	; 70
    19b2:	91 44       	sbci	r25, 0x41	; 65
    19b4:	b1 f0       	breq	.+44     	; 0x19e2 <check_fs+0x78>
    19b6:	02 e0       	ldi	r16, 0x02	; 2
    19b8:	10 e0       	ldi	r17, 0x00	; 0
    19ba:	22 e5       	ldi	r18, 0x52	; 82
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	b7 01       	movw	r22, r14
    19c0:	a6 01       	movw	r20, r12
    19c2:	ce 01       	movw	r24, r28
    19c4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    19c8:	81 11       	cpse	r24, r1
    19ca:	0d c0       	rjmp	.+26     	; 0x19e6 <check_fs+0x7c>
    19cc:	88 81       	ld	r24, Y
    19ce:	99 81       	ldd	r25, Y+1	; 0x01
    19d0:	86 34       	cpi	r24, 0x46	; 70
    19d2:	91 44       	sbci	r25, 0x41	; 65
    19d4:	51 f0       	breq	.+20     	; 0x19ea <check_fs+0x80>
    19d6:	81 e0       	ldi	r24, 0x01	; 1
    19d8:	09 c0       	rjmp	.+18     	; 0x19ec <check_fs+0x82>
    19da:	83 e0       	ldi	r24, 0x03	; 3
    19dc:	07 c0       	rjmp	.+14     	; 0x19ec <check_fs+0x82>
    19de:	82 e0       	ldi	r24, 0x02	; 2
    19e0:	05 c0       	rjmp	.+10     	; 0x19ec <check_fs+0x82>
    19e2:	80 e0       	ldi	r24, 0x00	; 0
    19e4:	03 c0       	rjmp	.+6      	; 0x19ec <check_fs+0x82>
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	01 c0       	rjmp	.+2      	; 0x19ec <check_fs+0x82>
    19ea:	80 e0       	ldi	r24, 0x00	; 0
    19ec:	df 91       	pop	r29
    19ee:	cf 91       	pop	r28
    19f0:	1f 91       	pop	r17
    19f2:	0f 91       	pop	r16
    19f4:	ff 90       	pop	r15
    19f6:	ef 90       	pop	r14
    19f8:	df 90       	pop	r13
    19fa:	cf 90       	pop	r12
    19fc:	08 95       	ret

000019fe <get_fat>:
    19fe:	4f 92       	push	r4
    1a00:	5f 92       	push	r5
    1a02:	6f 92       	push	r6
    1a04:	7f 92       	push	r7
    1a06:	8f 92       	push	r8
    1a08:	9f 92       	push	r9
    1a0a:	af 92       	push	r10
    1a0c:	bf 92       	push	r11
    1a0e:	cf 92       	push	r12
    1a10:	df 92       	push	r13
    1a12:	ef 92       	push	r14
    1a14:	ff 92       	push	r15
    1a16:	0f 93       	push	r16
    1a18:	1f 93       	push	r17
    1a1a:	cf 93       	push	r28
    1a1c:	df 93       	push	r29
    1a1e:	00 d0       	rcall	.+0      	; 0x1a20 <get_fat+0x22>
    1a20:	00 d0       	rcall	.+0      	; 0x1a22 <get_fat+0x24>
    1a22:	cd b7       	in	r28, 0x3d	; 61
    1a24:	de b7       	in	r29, 0x3e	; 62
    1a26:	e0 90 01 06 	lds	r14, 0x0601	; 0x800601 <FatFs>
    1a2a:	f0 90 02 06 	lds	r15, 0x0602	; 0x800602 <FatFs+0x1>
    1a2e:	62 30       	cpi	r22, 0x02	; 2
    1a30:	71 05       	cpc	r23, r1
    1a32:	81 05       	cpc	r24, r1
    1a34:	91 05       	cpc	r25, r1
    1a36:	08 f4       	brcc	.+2      	; 0x1a3a <get_fat+0x3c>
    1a38:	bf c0       	rjmp	.+382    	; 0x1bb8 <get_fat+0x1ba>
    1a3a:	f7 01       	movw	r30, r14
    1a3c:	80 84       	ldd	r8, Z+8	; 0x08
    1a3e:	91 84       	ldd	r9, Z+9	; 0x09
    1a40:	a2 84       	ldd	r10, Z+10	; 0x0a
    1a42:	b3 84       	ldd	r11, Z+11	; 0x0b
    1a44:	68 15       	cp	r22, r8
    1a46:	79 05       	cpc	r23, r9
    1a48:	8a 05       	cpc	r24, r10
    1a4a:	9b 05       	cpc	r25, r11
    1a4c:	08 f0       	brcs	.+2      	; 0x1a50 <get_fat+0x52>
    1a4e:	b9 c0       	rjmp	.+370    	; 0x1bc2 <get_fat+0x1c4>
    1a50:	4b 01       	movw	r8, r22
    1a52:	5c 01       	movw	r10, r24
    1a54:	80 81       	ld	r24, Z
    1a56:	82 30       	cpi	r24, 0x02	; 2
    1a58:	09 f4       	brne	.+2      	; 0x1a5c <get_fat+0x5e>
    1a5a:	62 c0       	rjmp	.+196    	; 0x1b20 <get_fat+0x122>
    1a5c:	83 30       	cpi	r24, 0x03	; 3
    1a5e:	09 f4       	brne	.+2      	; 0x1a62 <get_fat+0x64>
    1a60:	7f c0       	rjmp	.+254    	; 0x1b60 <get_fat+0x162>
    1a62:	81 30       	cpi	r24, 0x01	; 1
    1a64:	09 f0       	breq	.+2      	; 0x1a68 <get_fat+0x6a>
    1a66:	b2 c0       	rjmp	.+356    	; 0x1bcc <get_fat+0x1ce>
    1a68:	c4 01       	movw	r24, r8
    1a6a:	96 95       	lsr	r25
    1a6c:	87 95       	ror	r24
    1a6e:	88 0d       	add	r24, r8
    1a70:	99 1d       	adc	r25, r9
    1a72:	9c 01       	movw	r18, r24
    1a74:	31 70       	andi	r19, 0x01	; 1
    1a76:	89 2f       	mov	r24, r25
    1a78:	99 27       	eor	r25, r25
    1a7a:	86 95       	lsr	r24
    1a7c:	2f 3f       	cpi	r18, 0xFF	; 255
    1a7e:	f1 e0       	ldi	r31, 0x01	; 1
    1a80:	3f 07       	cpc	r19, r31
    1a82:	91 f0       	breq	.+36     	; 0x1aa8 <get_fat+0xaa>
    1a84:	f7 01       	movw	r30, r14
    1a86:	44 85       	ldd	r20, Z+12	; 0x0c
    1a88:	55 85       	ldd	r21, Z+13	; 0x0d
    1a8a:	66 85       	ldd	r22, Z+14	; 0x0e
    1a8c:	77 85       	ldd	r23, Z+15	; 0x0f
    1a8e:	48 0f       	add	r20, r24
    1a90:	59 1f       	adc	r21, r25
    1a92:	61 1d       	adc	r22, r1
    1a94:	71 1d       	adc	r23, r1
    1a96:	02 e0       	ldi	r16, 0x02	; 2
    1a98:	10 e0       	ldi	r17, 0x00	; 0
    1a9a:	ce 01       	movw	r24, r28
    1a9c:	01 96       	adiw	r24, 0x01	; 1
    1a9e:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1aa2:	88 23       	and	r24, r24
    1aa4:	61 f1       	breq	.+88     	; 0x1afe <get_fat+0x100>
    1aa6:	97 c0       	rjmp	.+302    	; 0x1bd6 <get_fat+0x1d8>
    1aa8:	f7 01       	movw	r30, r14
    1aaa:	44 85       	ldd	r20, Z+12	; 0x0c
    1aac:	55 85       	ldd	r21, Z+13	; 0x0d
    1aae:	66 85       	ldd	r22, Z+14	; 0x0e
    1ab0:	77 85       	ldd	r23, Z+15	; 0x0f
    1ab2:	2c 01       	movw	r4, r24
    1ab4:	61 2c       	mov	r6, r1
    1ab6:	71 2c       	mov	r7, r1
    1ab8:	44 0d       	add	r20, r4
    1aba:	55 1d       	adc	r21, r5
    1abc:	66 1d       	adc	r22, r6
    1abe:	77 1d       	adc	r23, r7
    1ac0:	01 e0       	ldi	r16, 0x01	; 1
    1ac2:	10 e0       	ldi	r17, 0x00	; 0
    1ac4:	2f ef       	ldi	r18, 0xFF	; 255
    1ac6:	31 e0       	ldi	r19, 0x01	; 1
    1ac8:	ce 01       	movw	r24, r28
    1aca:	01 96       	adiw	r24, 0x01	; 1
    1acc:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1ad0:	81 11       	cpse	r24, r1
    1ad2:	86 c0       	rjmp	.+268    	; 0x1be0 <get_fat+0x1e2>
    1ad4:	f7 01       	movw	r30, r14
    1ad6:	44 85       	ldd	r20, Z+12	; 0x0c
    1ad8:	55 85       	ldd	r21, Z+13	; 0x0d
    1ada:	66 85       	ldd	r22, Z+14	; 0x0e
    1adc:	77 85       	ldd	r23, Z+15	; 0x0f
    1ade:	44 0d       	add	r20, r4
    1ae0:	55 1d       	adc	r21, r5
    1ae2:	66 1d       	adc	r22, r6
    1ae4:	77 1d       	adc	r23, r7
    1ae6:	4f 5f       	subi	r20, 0xFF	; 255
    1ae8:	5f 4f       	sbci	r21, 0xFF	; 255
    1aea:	6f 4f       	sbci	r22, 0xFF	; 255
    1aec:	7f 4f       	sbci	r23, 0xFF	; 255
    1aee:	20 e0       	ldi	r18, 0x00	; 0
    1af0:	30 e0       	ldi	r19, 0x00	; 0
    1af2:	ce 01       	movw	r24, r28
    1af4:	02 96       	adiw	r24, 0x02	; 2
    1af6:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1afa:	81 11       	cpse	r24, r1
    1afc:	76 c0       	rjmp	.+236    	; 0x1bea <get_fat+0x1ec>
    1afe:	69 81       	ldd	r22, Y+1	; 0x01
    1b00:	7a 81       	ldd	r23, Y+2	; 0x02
    1b02:	80 fe       	sbrs	r8, 0
    1b04:	09 c0       	rjmp	.+18     	; 0x1b18 <get_fat+0x11a>
    1b06:	72 95       	swap	r23
    1b08:	62 95       	swap	r22
    1b0a:	6f 70       	andi	r22, 0x0F	; 15
    1b0c:	67 27       	eor	r22, r23
    1b0e:	7f 70       	andi	r23, 0x0F	; 15
    1b10:	67 27       	eor	r22, r23
    1b12:	80 e0       	ldi	r24, 0x00	; 0
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	77 c0       	rjmp	.+238    	; 0x1c06 <get_fat+0x208>
    1b18:	7f 70       	andi	r23, 0x0F	; 15
    1b1a:	80 e0       	ldi	r24, 0x00	; 0
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	73 c0       	rjmp	.+230    	; 0x1c06 <get_fat+0x208>
    1b20:	94 01       	movw	r18, r8
    1b22:	33 27       	eor	r19, r19
    1b24:	22 0f       	add	r18, r18
    1b26:	33 1f       	adc	r19, r19
    1b28:	f7 01       	movw	r30, r14
    1b2a:	c4 84       	ldd	r12, Z+12	; 0x0c
    1b2c:	d5 84       	ldd	r13, Z+13	; 0x0d
    1b2e:	e6 84       	ldd	r14, Z+14	; 0x0e
    1b30:	f7 84       	ldd	r15, Z+15	; 0x0f
    1b32:	bb 27       	eor	r27, r27
    1b34:	ab 2d       	mov	r26, r11
    1b36:	9a 2d       	mov	r25, r10
    1b38:	89 2d       	mov	r24, r9
    1b3a:	b7 01       	movw	r22, r14
    1b3c:	a6 01       	movw	r20, r12
    1b3e:	48 0f       	add	r20, r24
    1b40:	59 1f       	adc	r21, r25
    1b42:	6a 1f       	adc	r22, r26
    1b44:	7b 1f       	adc	r23, r27
    1b46:	02 e0       	ldi	r16, 0x02	; 2
    1b48:	10 e0       	ldi	r17, 0x00	; 0
    1b4a:	ce 01       	movw	r24, r28
    1b4c:	01 96       	adiw	r24, 0x01	; 1
    1b4e:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1b52:	81 11       	cpse	r24, r1
    1b54:	4f c0       	rjmp	.+158    	; 0x1bf4 <get_fat+0x1f6>
    1b56:	69 81       	ldd	r22, Y+1	; 0x01
    1b58:	7a 81       	ldd	r23, Y+2	; 0x02
    1b5a:	80 e0       	ldi	r24, 0x00	; 0
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	53 c0       	rjmp	.+166    	; 0x1c06 <get_fat+0x208>
    1b60:	94 01       	movw	r18, r8
    1b62:	2f 77       	andi	r18, 0x7F	; 127
    1b64:	33 27       	eor	r19, r19
    1b66:	22 0f       	add	r18, r18
    1b68:	33 1f       	adc	r19, r19
    1b6a:	22 0f       	add	r18, r18
    1b6c:	33 1f       	adc	r19, r19
    1b6e:	f7 01       	movw	r30, r14
    1b70:	c4 84       	ldd	r12, Z+12	; 0x0c
    1b72:	d5 84       	ldd	r13, Z+13	; 0x0d
    1b74:	e6 84       	ldd	r14, Z+14	; 0x0e
    1b76:	f7 84       	ldd	r15, Z+15	; 0x0f
    1b78:	d5 01       	movw	r26, r10
    1b7a:	c4 01       	movw	r24, r8
    1b7c:	68 94       	set
    1b7e:	16 f8       	bld	r1, 6
    1b80:	b6 95       	lsr	r27
    1b82:	a7 95       	ror	r26
    1b84:	97 95       	ror	r25
    1b86:	87 95       	ror	r24
    1b88:	16 94       	lsr	r1
    1b8a:	d1 f7       	brne	.-12     	; 0x1b80 <get_fat+0x182>
    1b8c:	b7 01       	movw	r22, r14
    1b8e:	a6 01       	movw	r20, r12
    1b90:	48 0f       	add	r20, r24
    1b92:	59 1f       	adc	r21, r25
    1b94:	6a 1f       	adc	r22, r26
    1b96:	7b 1f       	adc	r23, r27
    1b98:	04 e0       	ldi	r16, 0x04	; 4
    1b9a:	10 e0       	ldi	r17, 0x00	; 0
    1b9c:	ce 01       	movw	r24, r28
    1b9e:	01 96       	adiw	r24, 0x01	; 1
    1ba0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1ba4:	81 11       	cpse	r24, r1
    1ba6:	2b c0       	rjmp	.+86     	; 0x1bfe <get_fat+0x200>
    1ba8:	89 81       	ldd	r24, Y+1	; 0x01
    1baa:	9a 81       	ldd	r25, Y+2	; 0x02
    1bac:	ab 81       	ldd	r26, Y+3	; 0x03
    1bae:	bc 81       	ldd	r27, Y+4	; 0x04
    1bb0:	bc 01       	movw	r22, r24
    1bb2:	cd 01       	movw	r24, r26
    1bb4:	9f 70       	andi	r25, 0x0F	; 15
    1bb6:	27 c0       	rjmp	.+78     	; 0x1c06 <get_fat+0x208>
    1bb8:	61 e0       	ldi	r22, 0x01	; 1
    1bba:	70 e0       	ldi	r23, 0x00	; 0
    1bbc:	80 e0       	ldi	r24, 0x00	; 0
    1bbe:	90 e0       	ldi	r25, 0x00	; 0
    1bc0:	22 c0       	rjmp	.+68     	; 0x1c06 <get_fat+0x208>
    1bc2:	61 e0       	ldi	r22, 0x01	; 1
    1bc4:	70 e0       	ldi	r23, 0x00	; 0
    1bc6:	80 e0       	ldi	r24, 0x00	; 0
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	1d c0       	rjmp	.+58     	; 0x1c06 <get_fat+0x208>
    1bcc:	61 e0       	ldi	r22, 0x01	; 1
    1bce:	70 e0       	ldi	r23, 0x00	; 0
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	18 c0       	rjmp	.+48     	; 0x1c06 <get_fat+0x208>
    1bd6:	61 e0       	ldi	r22, 0x01	; 1
    1bd8:	70 e0       	ldi	r23, 0x00	; 0
    1bda:	80 e0       	ldi	r24, 0x00	; 0
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	13 c0       	rjmp	.+38     	; 0x1c06 <get_fat+0x208>
    1be0:	61 e0       	ldi	r22, 0x01	; 1
    1be2:	70 e0       	ldi	r23, 0x00	; 0
    1be4:	80 e0       	ldi	r24, 0x00	; 0
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	0e c0       	rjmp	.+28     	; 0x1c06 <get_fat+0x208>
    1bea:	61 e0       	ldi	r22, 0x01	; 1
    1bec:	70 e0       	ldi	r23, 0x00	; 0
    1bee:	80 e0       	ldi	r24, 0x00	; 0
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	09 c0       	rjmp	.+18     	; 0x1c06 <get_fat+0x208>
    1bf4:	61 e0       	ldi	r22, 0x01	; 1
    1bf6:	70 e0       	ldi	r23, 0x00	; 0
    1bf8:	80 e0       	ldi	r24, 0x00	; 0
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	04 c0       	rjmp	.+8      	; 0x1c06 <get_fat+0x208>
    1bfe:	61 e0       	ldi	r22, 0x01	; 1
    1c00:	70 e0       	ldi	r23, 0x00	; 0
    1c02:	80 e0       	ldi	r24, 0x00	; 0
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	0f 90       	pop	r0
    1c08:	0f 90       	pop	r0
    1c0a:	0f 90       	pop	r0
    1c0c:	0f 90       	pop	r0
    1c0e:	df 91       	pop	r29
    1c10:	cf 91       	pop	r28
    1c12:	1f 91       	pop	r17
    1c14:	0f 91       	pop	r16
    1c16:	ff 90       	pop	r15
    1c18:	ef 90       	pop	r14
    1c1a:	df 90       	pop	r13
    1c1c:	cf 90       	pop	r12
    1c1e:	bf 90       	pop	r11
    1c20:	af 90       	pop	r10
    1c22:	9f 90       	pop	r9
    1c24:	8f 90       	pop	r8
    1c26:	7f 90       	pop	r7
    1c28:	6f 90       	pop	r6
    1c2a:	5f 90       	pop	r5
    1c2c:	4f 90       	pop	r4
    1c2e:	08 95       	ret

00001c30 <dir_next>:
    1c30:	cf 92       	push	r12
    1c32:	df 92       	push	r13
    1c34:	ef 92       	push	r14
    1c36:	ff 92       	push	r15
    1c38:	0f 93       	push	r16
    1c3a:	1f 93       	push	r17
    1c3c:	cf 93       	push	r28
    1c3e:	df 93       	push	r29
    1c40:	e0 90 01 06 	lds	r14, 0x0601	; 0x800601 <FatFs>
    1c44:	f0 90 02 06 	lds	r15, 0x0602	; 0x800602 <FatFs+0x1>
    1c48:	fc 01       	movw	r30, r24
    1c4a:	c0 81       	ld	r28, Z
    1c4c:	d1 81       	ldd	r29, Z+1	; 0x01
    1c4e:	21 96       	adiw	r28, 0x01	; 1
    1c50:	09 f4       	brne	.+2      	; 0x1c54 <dir_next+0x24>
    1c52:	5c c0       	rjmp	.+184    	; 0x1d0c <dir_next+0xdc>
    1c54:	44 85       	ldd	r20, Z+12	; 0x0c
    1c56:	55 85       	ldd	r21, Z+13	; 0x0d
    1c58:	66 85       	ldd	r22, Z+14	; 0x0e
    1c5a:	77 85       	ldd	r23, Z+15	; 0x0f
    1c5c:	41 15       	cp	r20, r1
    1c5e:	51 05       	cpc	r21, r1
    1c60:	61 05       	cpc	r22, r1
    1c62:	71 05       	cpc	r23, r1
    1c64:	09 f4       	brne	.+2      	; 0x1c68 <dir_next+0x38>
    1c66:	54 c0       	rjmp	.+168    	; 0x1d10 <dir_next+0xe0>
    1c68:	8c 01       	movw	r16, r24
    1c6a:	ce 01       	movw	r24, r28
    1c6c:	8f 70       	andi	r24, 0x0F	; 15
    1c6e:	99 27       	eor	r25, r25
    1c70:	89 2b       	or	r24, r25
    1c72:	09 f0       	breq	.+2      	; 0x1c76 <dir_next+0x46>
    1c74:	46 c0       	rjmp	.+140    	; 0x1d02 <dir_next+0xd2>
    1c76:	4f 5f       	subi	r20, 0xFF	; 255
    1c78:	5f 4f       	sbci	r21, 0xFF	; 255
    1c7a:	6f 4f       	sbci	r22, 0xFF	; 255
    1c7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c7e:	44 87       	std	Z+12, r20	; 0x0c
    1c80:	55 87       	std	Z+13, r21	; 0x0d
    1c82:	66 87       	std	Z+14, r22	; 0x0e
    1c84:	77 87       	std	Z+15, r23	; 0x0f
    1c86:	40 85       	ldd	r20, Z+8	; 0x08
    1c88:	51 85       	ldd	r21, Z+9	; 0x09
    1c8a:	62 85       	ldd	r22, Z+10	; 0x0a
    1c8c:	73 85       	ldd	r23, Z+11	; 0x0b
    1c8e:	41 15       	cp	r20, r1
    1c90:	51 05       	cpc	r21, r1
    1c92:	61 05       	cpc	r22, r1
    1c94:	71 05       	cpc	r23, r1
    1c96:	39 f4       	brne	.+14     	; 0x1ca6 <dir_next+0x76>
    1c98:	f7 01       	movw	r30, r14
    1c9a:	84 81       	ldd	r24, Z+4	; 0x04
    1c9c:	95 81       	ldd	r25, Z+5	; 0x05
    1c9e:	c8 17       	cp	r28, r24
    1ca0:	d9 07       	cpc	r29, r25
    1ca2:	c0 f5       	brcc	.+112    	; 0x1d14 <dir_next+0xe4>
    1ca4:	2e c0       	rjmp	.+92     	; 0x1d02 <dir_next+0xd2>
    1ca6:	f7 01       	movw	r30, r14
    1ca8:	81 81       	ldd	r24, Z+1	; 0x01
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	01 97       	sbiw	r24, 0x01	; 1
    1cae:	9e 01       	movw	r18, r28
    1cb0:	32 95       	swap	r19
    1cb2:	22 95       	swap	r18
    1cb4:	2f 70       	andi	r18, 0x0F	; 15
    1cb6:	23 27       	eor	r18, r19
    1cb8:	3f 70       	andi	r19, 0x0F	; 15
    1cba:	23 27       	eor	r18, r19
    1cbc:	82 23       	and	r24, r18
    1cbe:	93 23       	and	r25, r19
    1cc0:	89 2b       	or	r24, r25
    1cc2:	f9 f4       	brne	.+62     	; 0x1d02 <dir_next+0xd2>
    1cc4:	cb 01       	movw	r24, r22
    1cc6:	ba 01       	movw	r22, r20
    1cc8:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <get_fat>
    1ccc:	62 30       	cpi	r22, 0x02	; 2
    1cce:	71 05       	cpc	r23, r1
    1cd0:	81 05       	cpc	r24, r1
    1cd2:	91 05       	cpc	r25, r1
    1cd4:	08 f1       	brcs	.+66     	; 0x1d18 <dir_next+0xe8>
    1cd6:	f7 01       	movw	r30, r14
    1cd8:	c0 84       	ldd	r12, Z+8	; 0x08
    1cda:	d1 84       	ldd	r13, Z+9	; 0x09
    1cdc:	e2 84       	ldd	r14, Z+10	; 0x0a
    1cde:	f3 84       	ldd	r15, Z+11	; 0x0b
    1ce0:	6c 15       	cp	r22, r12
    1ce2:	7d 05       	cpc	r23, r13
    1ce4:	8e 05       	cpc	r24, r14
    1ce6:	9f 05       	cpc	r25, r15
    1ce8:	c8 f4       	brcc	.+50     	; 0x1d1c <dir_next+0xec>
    1cea:	f8 01       	movw	r30, r16
    1cec:	60 87       	std	Z+8, r22	; 0x08
    1cee:	71 87       	std	Z+9, r23	; 0x09
    1cf0:	82 87       	std	Z+10, r24	; 0x0a
    1cf2:	93 87       	std	Z+11, r25	; 0x0b
    1cf4:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <clust2sect>
    1cf8:	f8 01       	movw	r30, r16
    1cfa:	64 87       	std	Z+12, r22	; 0x0c
    1cfc:	75 87       	std	Z+13, r23	; 0x0d
    1cfe:	86 87       	std	Z+14, r24	; 0x0e
    1d00:	97 87       	std	Z+15, r25	; 0x0f
    1d02:	f8 01       	movw	r30, r16
    1d04:	d1 83       	std	Z+1, r29	; 0x01
    1d06:	c0 83       	st	Z, r28
    1d08:	80 e0       	ldi	r24, 0x00	; 0
    1d0a:	09 c0       	rjmp	.+18     	; 0x1d1e <dir_next+0xee>
    1d0c:	83 e0       	ldi	r24, 0x03	; 3
    1d0e:	07 c0       	rjmp	.+14     	; 0x1d1e <dir_next+0xee>
    1d10:	83 e0       	ldi	r24, 0x03	; 3
    1d12:	05 c0       	rjmp	.+10     	; 0x1d1e <dir_next+0xee>
    1d14:	83 e0       	ldi	r24, 0x03	; 3
    1d16:	03 c0       	rjmp	.+6      	; 0x1d1e <dir_next+0xee>
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	01 c0       	rjmp	.+2      	; 0x1d1e <dir_next+0xee>
    1d1c:	83 e0       	ldi	r24, 0x03	; 3
    1d1e:	df 91       	pop	r29
    1d20:	cf 91       	pop	r28
    1d22:	1f 91       	pop	r17
    1d24:	0f 91       	pop	r16
    1d26:	ff 90       	pop	r15
    1d28:	ef 90       	pop	r14
    1d2a:	df 90       	pop	r13
    1d2c:	cf 90       	pop	r12
    1d2e:	08 95       	ret

00001d30 <dir_find>:
    1d30:	df 92       	push	r13
    1d32:	ef 92       	push	r14
    1d34:	ff 92       	push	r15
    1d36:	0f 93       	push	r16
    1d38:	1f 93       	push	r17
    1d3a:	cf 93       	push	r28
    1d3c:	df 93       	push	r29
    1d3e:	7c 01       	movw	r14, r24
    1d40:	0e 94 21 0c 	call	0x1842	; 0x1842 <dir_rewind>
    1d44:	81 11       	cpse	r24, r1
    1d46:	3e c0       	rjmp	.+124    	; 0x1dc4 <dir_find+0x94>
    1d48:	e0 91 01 06 	lds	r30, 0x0601	; 0x800601 <FatFs>
    1d4c:	f0 91 02 06 	lds	r31, 0x0602	; 0x800602 <FatFs+0x1>
    1d50:	c6 81       	ldd	r28, Z+6	; 0x06
    1d52:	d7 81       	ldd	r29, Z+7	; 0x07
    1d54:	f7 01       	movw	r30, r14
    1d56:	20 81       	ld	r18, Z
    1d58:	31 81       	ldd	r19, Z+1	; 0x01
    1d5a:	2f 70       	andi	r18, 0x0F	; 15
    1d5c:	33 27       	eor	r19, r19
    1d5e:	22 0f       	add	r18, r18
    1d60:	33 1f       	adc	r19, r19
    1d62:	22 95       	swap	r18
    1d64:	32 95       	swap	r19
    1d66:	30 7f       	andi	r19, 0xF0	; 240
    1d68:	32 27       	eor	r19, r18
    1d6a:	20 7f       	andi	r18, 0xF0	; 240
    1d6c:	32 27       	eor	r19, r18
    1d6e:	44 85       	ldd	r20, Z+12	; 0x0c
    1d70:	55 85       	ldd	r21, Z+13	; 0x0d
    1d72:	66 85       	ldd	r22, Z+14	; 0x0e
    1d74:	77 85       	ldd	r23, Z+15	; 0x0f
    1d76:	00 e2       	ldi	r16, 0x20	; 32
    1d78:	10 e0       	ldi	r17, 0x00	; 0
    1d7a:	ce 01       	movw	r24, r28
    1d7c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1d80:	91 e0       	ldi	r25, 0x01	; 1
    1d82:	81 11       	cpse	r24, r1
    1d84:	01 c0       	rjmp	.+2      	; 0x1d88 <dir_find+0x58>
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	d9 2e       	mov	r13, r25
    1d8a:	91 11       	cpse	r25, r1
    1d8c:	16 c0       	rjmp	.+44     	; 0x1dba <dir_find+0x8a>
    1d8e:	88 81       	ld	r24, Y
    1d90:	88 23       	and	r24, r24
    1d92:	a9 f0       	breq	.+42     	; 0x1dbe <dir_find+0x8e>
    1d94:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d96:	83 fd       	sbrc	r24, 3
    1d98:	0a c0       	rjmp	.+20     	; 0x1dae <dir_find+0x7e>
    1d9a:	f7 01       	movw	r30, r14
    1d9c:	62 81       	ldd	r22, Z+2	; 0x02
    1d9e:	73 81       	ldd	r23, Z+3	; 0x03
    1da0:	4b e0       	ldi	r20, 0x0B	; 11
    1da2:	50 e0       	ldi	r21, 0x00	; 0
    1da4:	ce 01       	movw	r24, r28
    1da6:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <mem_cmp>
    1daa:	89 2b       	or	r24, r25
    1dac:	51 f0       	breq	.+20     	; 0x1dc2 <dir_find+0x92>
    1dae:	c7 01       	movw	r24, r14
    1db0:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <dir_next>
    1db4:	88 23       	and	r24, r24
    1db6:	71 f2       	breq	.-100    	; 0x1d54 <dir_find+0x24>
    1db8:	05 c0       	rjmp	.+10     	; 0x1dc4 <dir_find+0x94>
    1dba:	89 2f       	mov	r24, r25
    1dbc:	03 c0       	rjmp	.+6      	; 0x1dc4 <dir_find+0x94>
    1dbe:	83 e0       	ldi	r24, 0x03	; 3
    1dc0:	01 c0       	rjmp	.+2      	; 0x1dc4 <dir_find+0x94>
    1dc2:	8d 2d       	mov	r24, r13
    1dc4:	df 91       	pop	r29
    1dc6:	cf 91       	pop	r28
    1dc8:	1f 91       	pop	r17
    1dca:	0f 91       	pop	r16
    1dcc:	ff 90       	pop	r15
    1dce:	ef 90       	pop	r14
    1dd0:	df 90       	pop	r13
    1dd2:	08 95       	ret

00001dd4 <follow_path>:
    1dd4:	0f 93       	push	r16
    1dd6:	1f 93       	push	r17
    1dd8:	cf 93       	push	r28
    1dda:	df 93       	push	r29
    1ddc:	00 d0       	rcall	.+0      	; 0x1dde <follow_path+0xa>
    1dde:	cd b7       	in	r28, 0x3d	; 61
    1de0:	de b7       	in	r29, 0x3e	; 62
    1de2:	8c 01       	movw	r16, r24
    1de4:	7a 83       	std	Y+2, r23	; 0x02
    1de6:	69 83       	std	Y+1, r22	; 0x01
    1de8:	03 c0       	rjmp	.+6      	; 0x1df0 <follow_path+0x1c>
    1dea:	31 96       	adiw	r30, 0x01	; 1
    1dec:	fa 83       	std	Y+2, r31	; 0x02
    1dee:	e9 83       	std	Y+1, r30	; 0x01
    1df0:	e9 81       	ldd	r30, Y+1	; 0x01
    1df2:	fa 81       	ldd	r31, Y+2	; 0x02
    1df4:	80 81       	ld	r24, Z
    1df6:	80 32       	cpi	r24, 0x20	; 32
    1df8:	c1 f3       	breq	.-16     	; 0x1dea <follow_path+0x16>
    1dfa:	8f 32       	cpi	r24, 0x2F	; 47
    1dfc:	19 f4       	brne	.+6      	; 0x1e04 <follow_path+0x30>
    1dfe:	31 96       	adiw	r30, 0x01	; 1
    1e00:	fa 83       	std	Y+2, r31	; 0x02
    1e02:	e9 83       	std	Y+1, r30	; 0x01
    1e04:	d8 01       	movw	r26, r16
    1e06:	14 96       	adiw	r26, 0x04	; 4
    1e08:	1d 92       	st	X+, r1
    1e0a:	1d 92       	st	X+, r1
    1e0c:	1d 92       	st	X+, r1
    1e0e:	1c 92       	st	X, r1
    1e10:	17 97       	sbiw	r26, 0x07	; 7
    1e12:	e9 81       	ldd	r30, Y+1	; 0x01
    1e14:	fa 81       	ldd	r31, Y+2	; 0x02
    1e16:	80 81       	ld	r24, Z
    1e18:	81 32       	cpi	r24, 0x21	; 33
    1e1a:	60 f4       	brcc	.+24     	; 0x1e34 <follow_path+0x60>
    1e1c:	c8 01       	movw	r24, r16
    1e1e:	0e 94 21 0c 	call	0x1842	; 0x1842 <dir_rewind>
    1e22:	e0 91 01 06 	lds	r30, 0x0601	; 0x800601 <FatFs>
    1e26:	f0 91 02 06 	lds	r31, 0x0602	; 0x800602 <FatFs+0x1>
    1e2a:	06 80       	ldd	r0, Z+6	; 0x06
    1e2c:	f7 81       	ldd	r31, Z+7	; 0x07
    1e2e:	e0 2d       	mov	r30, r0
    1e30:	10 82       	st	Z, r1
    1e32:	42 c0       	rjmp	.+132    	; 0x1eb8 <follow_path+0xe4>
    1e34:	be 01       	movw	r22, r28
    1e36:	6f 5f       	subi	r22, 0xFF	; 255
    1e38:	7f 4f       	sbci	r23, 0xFF	; 255
    1e3a:	c8 01       	movw	r24, r16
    1e3c:	0e 94 6f 0c 	call	0x18de	; 0x18de <create_name>
    1e40:	81 11       	cpse	r24, r1
    1e42:	3a c0       	rjmp	.+116    	; 0x1eb8 <follow_path+0xe4>
    1e44:	c8 01       	movw	r24, r16
    1e46:	0e 94 98 0e 	call	0x1d30	; 0x1d30 <dir_find>
    1e4a:	88 23       	and	r24, r24
    1e4c:	59 f0       	breq	.+22     	; 0x1e64 <follow_path+0x90>
    1e4e:	83 30       	cpi	r24, 0x03	; 3
    1e50:	99 f5       	brne	.+102    	; 0x1eb8 <follow_path+0xe4>
    1e52:	d8 01       	movw	r26, r16
    1e54:	12 96       	adiw	r26, 0x02	; 2
    1e56:	ed 91       	ld	r30, X+
    1e58:	fc 91       	ld	r31, X
    1e5a:	13 97       	sbiw	r26, 0x03	; 3
    1e5c:	93 85       	ldd	r25, Z+11	; 0x0b
    1e5e:	99 23       	and	r25, r25
    1e60:	41 f1       	breq	.+80     	; 0x1eb2 <follow_path+0xde>
    1e62:	2a c0       	rjmp	.+84     	; 0x1eb8 <follow_path+0xe4>
    1e64:	d8 01       	movw	r26, r16
    1e66:	12 96       	adiw	r26, 0x02	; 2
    1e68:	ed 91       	ld	r30, X+
    1e6a:	fc 91       	ld	r31, X
    1e6c:	13 97       	sbiw	r26, 0x03	; 3
    1e6e:	93 85       	ldd	r25, Z+11	; 0x0b
    1e70:	91 11       	cpse	r25, r1
    1e72:	22 c0       	rjmp	.+68     	; 0x1eb8 <follow_path+0xe4>
    1e74:	e0 91 01 06 	lds	r30, 0x0601	; 0x800601 <FatFs>
    1e78:	f0 91 02 06 	lds	r31, 0x0602	; 0x800602 <FatFs+0x1>
    1e7c:	06 80       	ldd	r0, Z+6	; 0x06
    1e7e:	f7 81       	ldd	r31, Z+7	; 0x07
    1e80:	e0 2d       	mov	r30, r0
    1e82:	83 85       	ldd	r24, Z+11	; 0x0b
    1e84:	84 ff       	sbrs	r24, 4
    1e86:	17 c0       	rjmp	.+46     	; 0x1eb6 <follow_path+0xe2>
    1e88:	84 89       	ldd	r24, Z+20	; 0x14
    1e8a:	95 89       	ldd	r25, Z+21	; 0x15
    1e8c:	a0 e0       	ldi	r26, 0x00	; 0
    1e8e:	b0 e0       	ldi	r27, 0x00	; 0
    1e90:	bc 01       	movw	r22, r24
    1e92:	55 27       	eor	r21, r21
    1e94:	44 27       	eor	r20, r20
    1e96:	82 8d       	ldd	r24, Z+26	; 0x1a
    1e98:	93 8d       	ldd	r25, Z+27	; 0x1b
    1e9a:	a0 e0       	ldi	r26, 0x00	; 0
    1e9c:	b0 e0       	ldi	r27, 0x00	; 0
    1e9e:	84 2b       	or	r24, r20
    1ea0:	95 2b       	or	r25, r21
    1ea2:	a6 2b       	or	r26, r22
    1ea4:	b7 2b       	or	r27, r23
    1ea6:	f8 01       	movw	r30, r16
    1ea8:	84 83       	std	Z+4, r24	; 0x04
    1eaa:	95 83       	std	Z+5, r25	; 0x05
    1eac:	a6 83       	std	Z+6, r26	; 0x06
    1eae:	b7 83       	std	Z+7, r27	; 0x07
    1eb0:	c1 cf       	rjmp	.-126    	; 0x1e34 <follow_path+0x60>
    1eb2:	84 e0       	ldi	r24, 0x04	; 4
    1eb4:	01 c0       	rjmp	.+2      	; 0x1eb8 <follow_path+0xe4>
    1eb6:	84 e0       	ldi	r24, 0x04	; 4
    1eb8:	0f 90       	pop	r0
    1eba:	0f 90       	pop	r0
    1ebc:	df 91       	pop	r29
    1ebe:	cf 91       	pop	r28
    1ec0:	1f 91       	pop	r17
    1ec2:	0f 91       	pop	r16
    1ec4:	08 95       	ret

00001ec6 <pf_mount>:
    1ec6:	4f 92       	push	r4
    1ec8:	5f 92       	push	r5
    1eca:	6f 92       	push	r6
    1ecc:	7f 92       	push	r7
    1ece:	8f 92       	push	r8
    1ed0:	9f 92       	push	r9
    1ed2:	af 92       	push	r10
    1ed4:	bf 92       	push	r11
    1ed6:	df 92       	push	r13
    1ed8:	ef 92       	push	r14
    1eda:	ff 92       	push	r15
    1edc:	0f 93       	push	r16
    1ede:	1f 93       	push	r17
    1ee0:	cf 93       	push	r28
    1ee2:	df 93       	push	r29
    1ee4:	cd b7       	in	r28, 0x3d	; 61
    1ee6:	de b7       	in	r29, 0x3e	; 62
    1ee8:	a8 97       	sbiw	r28, 0x28	; 40
    1eea:	0f b6       	in	r0, 0x3f	; 63
    1eec:	f8 94       	cli
    1eee:	de bf       	out	0x3e, r29	; 62
    1ef0:	0f be       	out	0x3f, r0	; 63
    1ef2:	cd bf       	out	0x3d, r28	; 61
    1ef4:	10 92 02 06 	sts	0x0602, r1	; 0x800602 <FatFs+0x1>
    1ef8:	10 92 01 06 	sts	0x0601, r1	; 0x800601 <FatFs>
    1efc:	00 97       	sbiw	r24, 0x00	; 0
    1efe:	09 f4       	brne	.+2      	; 0x1f02 <pf_mount+0x3c>
    1f00:	fb c0       	rjmp	.+502    	; 0x20f8 <pf_mount+0x232>
    1f02:	7c 01       	movw	r14, r24
    1f04:	0e 94 28 08 	call	0x1050	; 0x1050 <disk_initialize>
    1f08:	80 fd       	sbrc	r24, 0
    1f0a:	f8 c0       	rjmp	.+496    	; 0x20fc <pf_mount+0x236>
    1f0c:	40 e0       	ldi	r20, 0x00	; 0
    1f0e:	50 e0       	ldi	r21, 0x00	; 0
    1f10:	ba 01       	movw	r22, r20
    1f12:	ce 01       	movw	r24, r28
    1f14:	01 96       	adiw	r24, 0x01	; 1
    1f16:	0e 94 b5 0c 	call	0x196a	; 0x196a <check_fs>
    1f1a:	d8 2e       	mov	r13, r24
    1f1c:	41 e0       	ldi	r20, 0x01	; 1
    1f1e:	84 13       	cpse	r24, r20
    1f20:	1c c0       	rjmp	.+56     	; 0x1f5a <pf_mount+0x94>
    1f22:	00 e1       	ldi	r16, 0x10	; 16
    1f24:	10 e0       	ldi	r17, 0x00	; 0
    1f26:	2e eb       	ldi	r18, 0xBE	; 190
    1f28:	31 e0       	ldi	r19, 0x01	; 1
    1f2a:	40 e0       	ldi	r20, 0x00	; 0
    1f2c:	50 e0       	ldi	r21, 0x00	; 0
    1f2e:	ba 01       	movw	r22, r20
    1f30:	ce 01       	movw	r24, r28
    1f32:	01 96       	adiw	r24, 0x01	; 1
    1f34:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1f38:	81 11       	cpse	r24, r1
    1f3a:	13 c0       	rjmp	.+38     	; 0x1f62 <pf_mount+0x9c>
    1f3c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f3e:	88 23       	and	r24, r24
    1f40:	c1 f0       	breq	.+48     	; 0x1f72 <pf_mount+0xac>
    1f42:	89 84       	ldd	r8, Y+9	; 0x09
    1f44:	9a 84       	ldd	r9, Y+10	; 0x0a
    1f46:	ab 84       	ldd	r10, Y+11	; 0x0b
    1f48:	bc 84       	ldd	r11, Y+12	; 0x0c
    1f4a:	b5 01       	movw	r22, r10
    1f4c:	a4 01       	movw	r20, r8
    1f4e:	ce 01       	movw	r24, r28
    1f50:	01 96       	adiw	r24, 0x01	; 1
    1f52:	0e 94 b5 0c 	call	0x196a	; 0x196a <check_fs>
    1f56:	d8 2e       	mov	r13, r24
    1f58:	0f c0       	rjmp	.+30     	; 0x1f78 <pf_mount+0xb2>
    1f5a:	81 2c       	mov	r8, r1
    1f5c:	91 2c       	mov	r9, r1
    1f5e:	54 01       	movw	r10, r8
    1f60:	0b c0       	rjmp	.+22     	; 0x1f78 <pf_mount+0xb2>
    1f62:	81 2c       	mov	r8, r1
    1f64:	91 2c       	mov	r9, r1
    1f66:	54 01       	movw	r10, r8
    1f68:	0f 2e       	mov	r0, r31
    1f6a:	f3 e0       	ldi	r31, 0x03	; 3
    1f6c:	df 2e       	mov	r13, r31
    1f6e:	f0 2d       	mov	r31, r0
    1f70:	03 c0       	rjmp	.+6      	; 0x1f78 <pf_mount+0xb2>
    1f72:	81 2c       	mov	r8, r1
    1f74:	91 2c       	mov	r9, r1
    1f76:	54 01       	movw	r10, r8
    1f78:	53 e0       	ldi	r21, 0x03	; 3
    1f7a:	d5 16       	cp	r13, r21
    1f7c:	09 f4       	brne	.+2      	; 0x1f80 <pf_mount+0xba>
    1f7e:	c0 c0       	rjmp	.+384    	; 0x2100 <pf_mount+0x23a>
    1f80:	d1 10       	cpse	r13, r1
    1f82:	c0 c0       	rjmp	.+384    	; 0x2104 <pf_mount+0x23e>
    1f84:	04 e2       	ldi	r16, 0x24	; 36
    1f86:	10 e0       	ldi	r17, 0x00	; 0
    1f88:	2d e0       	ldi	r18, 0x0D	; 13
    1f8a:	30 e0       	ldi	r19, 0x00	; 0
    1f8c:	b5 01       	movw	r22, r10
    1f8e:	a4 01       	movw	r20, r8
    1f90:	ce 01       	movw	r24, r28
    1f92:	01 96       	adiw	r24, 0x01	; 1
    1f94:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    1f98:	81 11       	cpse	r24, r1
    1f9a:	b6 c0       	rjmp	.+364    	; 0x2108 <pf_mount+0x242>
    1f9c:	2a 85       	ldd	r18, Y+10	; 0x0a
    1f9e:	3b 85       	ldd	r19, Y+11	; 0x0b
    1fa0:	40 e0       	ldi	r20, 0x00	; 0
    1fa2:	50 e0       	ldi	r21, 0x00	; 0
    1fa4:	21 15       	cp	r18, r1
    1fa6:	31 05       	cpc	r19, r1
    1fa8:	41 05       	cpc	r20, r1
    1faa:	51 05       	cpc	r21, r1
    1fac:	21 f4       	brne	.+8      	; 0x1fb6 <pf_mount+0xf0>
    1fae:	28 8d       	ldd	r18, Y+24	; 0x18
    1fb0:	39 8d       	ldd	r19, Y+25	; 0x19
    1fb2:	4a 8d       	ldd	r20, Y+26	; 0x1a
    1fb4:	5b 8d       	ldd	r21, Y+27	; 0x1b
    1fb6:	ac 81       	ldd	r26, Y+4	; 0x04
    1fb8:	b0 e0       	ldi	r27, 0x00	; 0
    1fba:	0e 94 ad 19 	call	0x335a	; 0x335a <__muluhisi3>
    1fbe:	6d a3       	std	Y+37, r22	; 0x25
    1fc0:	7e a3       	std	Y+38, r23	; 0x26
    1fc2:	8f a3       	std	Y+39, r24	; 0x27
    1fc4:	98 a7       	std	Y+40, r25	; 0x28
    1fc6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc8:	9b 81       	ldd	r25, Y+3	; 0x03
    1fca:	88 0e       	add	r8, r24
    1fcc:	99 1e       	adc	r9, r25
    1fce:	a1 1c       	adc	r10, r1
    1fd0:	b1 1c       	adc	r11, r1
    1fd2:	d7 01       	movw	r26, r14
    1fd4:	1c 96       	adiw	r26, 0x0c	; 12
    1fd6:	8d 92       	st	X+, r8
    1fd8:	9d 92       	st	X+, r9
    1fda:	ad 92       	st	X+, r10
    1fdc:	bc 92       	st	X, r11
    1fde:	1f 97       	sbiw	r26, 0x0f	; 15
    1fe0:	e9 81       	ldd	r30, Y+1	; 0x01
    1fe2:	11 96       	adiw	r26, 0x01	; 1
    1fe4:	ec 93       	st	X, r30
    1fe6:	11 97       	sbiw	r26, 0x01	; 1
    1fe8:	8d 81       	ldd	r24, Y+5	; 0x05
    1fea:	9e 81       	ldd	r25, Y+6	; 0x06
    1fec:	15 96       	adiw	r26, 0x05	; 5
    1fee:	9c 93       	st	X, r25
    1ff0:	8e 93       	st	-X, r24
    1ff2:	14 97       	sbiw	r26, 0x04	; 4
    1ff4:	0f 81       	ldd	r16, Y+7	; 0x07
    1ff6:	18 85       	ldd	r17, Y+8	; 0x08
    1ff8:	20 e0       	ldi	r18, 0x00	; 0
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	01 15       	cp	r16, r1
    1ffe:	11 05       	cpc	r17, r1
    2000:	21 05       	cpc	r18, r1
    2002:	31 05       	cpc	r19, r1
    2004:	21 f4       	brne	.+8      	; 0x200e <pf_mount+0x148>
    2006:	0c 89       	ldd	r16, Y+20	; 0x14
    2008:	1d 89       	ldd	r17, Y+21	; 0x15
    200a:	2e 89       	ldd	r18, Y+22	; 0x16
    200c:	3f 89       	ldd	r19, Y+23	; 0x17
    200e:	4a 81       	ldd	r20, Y+2	; 0x02
    2010:	5b 81       	ldd	r21, Y+3	; 0x03
    2012:	04 1b       	sub	r16, r20
    2014:	15 0b       	sbc	r17, r21
    2016:	21 09       	sbc	r18, r1
    2018:	31 09       	sbc	r19, r1
    201a:	4d a1       	ldd	r20, Y+37	; 0x25
    201c:	5e a1       	ldd	r21, Y+38	; 0x26
    201e:	6f a1       	ldd	r22, Y+39	; 0x27
    2020:	78 a5       	ldd	r23, Y+40	; 0x28
    2022:	04 1b       	sub	r16, r20
    2024:	15 0b       	sbc	r17, r21
    2026:	26 0b       	sbc	r18, r22
    2028:	37 0b       	sbc	r19, r23
    202a:	92 95       	swap	r25
    202c:	82 95       	swap	r24
    202e:	8f 70       	andi	r24, 0x0F	; 15
    2030:	89 27       	eor	r24, r25
    2032:	9f 70       	andi	r25, 0x0F	; 15
    2034:	89 27       	eor	r24, r25
    2036:	2c 01       	movw	r4, r24
    2038:	61 2c       	mov	r6, r1
    203a:	71 2c       	mov	r7, r1
    203c:	c9 01       	movw	r24, r18
    203e:	b8 01       	movw	r22, r16
    2040:	64 19       	sub	r22, r4
    2042:	75 09       	sbc	r23, r5
    2044:	86 09       	sbc	r24, r6
    2046:	97 09       	sbc	r25, r7
    2048:	2e 2f       	mov	r18, r30
    204a:	30 e0       	ldi	r19, 0x00	; 0
    204c:	40 e0       	ldi	r20, 0x00	; 0
    204e:	50 e0       	ldi	r21, 0x00	; 0
    2050:	0e 94 8b 19 	call	0x3316	; 0x3316 <__udivmodsi4>
    2054:	ba 01       	movw	r22, r20
    2056:	a9 01       	movw	r20, r18
    2058:	4e 5f       	subi	r20, 0xFE	; 254
    205a:	5f 4f       	sbci	r21, 0xFF	; 255
    205c:	6f 4f       	sbci	r22, 0xFF	; 255
    205e:	7f 4f       	sbci	r23, 0xFF	; 255
    2060:	d7 01       	movw	r26, r14
    2062:	18 96       	adiw	r26, 0x08	; 8
    2064:	4d 93       	st	X+, r20
    2066:	5d 93       	st	X+, r21
    2068:	6d 93       	st	X+, r22
    206a:	7c 93       	st	X, r23
    206c:	1b 97       	sbiw	r26, 0x0b	; 11
    206e:	47 3f       	cpi	r20, 0xF7	; 247
    2070:	bf e0       	ldi	r27, 0x0F	; 15
    2072:	5b 07       	cpc	r21, r27
    2074:	61 05       	cpc	r22, r1
    2076:	71 05       	cpc	r23, r1
    2078:	10 f4       	brcc	.+4      	; 0x207e <pf_mount+0x1b8>
    207a:	81 e0       	ldi	r24, 0x01	; 1
    207c:	01 c0       	rjmp	.+2      	; 0x2080 <pf_mount+0x1ba>
    207e:	82 e0       	ldi	r24, 0x02	; 2
    2080:	47 3f       	cpi	r20, 0xF7	; 247
    2082:	5f 4f       	sbci	r21, 0xFF	; 255
    2084:	61 05       	cpc	r22, r1
    2086:	71 05       	cpc	r23, r1
    2088:	08 f0       	brcs	.+2      	; 0x208c <pf_mount+0x1c6>
    208a:	83 e0       	ldi	r24, 0x03	; 3
    208c:	d7 01       	movw	r26, r14
    208e:	8c 93       	st	X, r24
    2090:	83 30       	cpi	r24, 0x03	; 3
    2092:	51 f4       	brne	.+20     	; 0x20a8 <pf_mount+0x1e2>
    2094:	88 a1       	ldd	r24, Y+32	; 0x20
    2096:	99 a1       	ldd	r25, Y+33	; 0x21
    2098:	aa a1       	ldd	r26, Y+34	; 0x22
    209a:	bb a1       	ldd	r27, Y+35	; 0x23
    209c:	f7 01       	movw	r30, r14
    209e:	80 8b       	std	Z+16, r24	; 0x10
    20a0:	91 8b       	std	Z+17, r25	; 0x11
    20a2:	a2 8b       	std	Z+18, r26	; 0x12
    20a4:	b3 8b       	std	Z+19, r27	; 0x13
    20a6:	0d c0       	rjmp	.+26     	; 0x20c2 <pf_mount+0x1fc>
    20a8:	8d a1       	ldd	r24, Y+37	; 0x25
    20aa:	9e a1       	ldd	r25, Y+38	; 0x26
    20ac:	af a1       	ldd	r26, Y+39	; 0x27
    20ae:	b8 a5       	ldd	r27, Y+40	; 0x28
    20b0:	88 0d       	add	r24, r8
    20b2:	99 1d       	adc	r25, r9
    20b4:	aa 1d       	adc	r26, r10
    20b6:	bb 1d       	adc	r27, r11
    20b8:	f7 01       	movw	r30, r14
    20ba:	80 8b       	std	Z+16, r24	; 0x10
    20bc:	91 8b       	std	Z+17, r25	; 0x11
    20be:	a2 8b       	std	Z+18, r26	; 0x12
    20c0:	b3 8b       	std	Z+19, r27	; 0x13
    20c2:	4d a1       	ldd	r20, Y+37	; 0x25
    20c4:	5e a1       	ldd	r21, Y+38	; 0x26
    20c6:	6f a1       	ldd	r22, Y+39	; 0x27
    20c8:	78 a5       	ldd	r23, Y+40	; 0x28
    20ca:	84 0e       	add	r8, r20
    20cc:	95 1e       	adc	r9, r21
    20ce:	a6 1e       	adc	r10, r22
    20d0:	b7 1e       	adc	r11, r23
    20d2:	84 0c       	add	r8, r4
    20d4:	95 1c       	adc	r9, r5
    20d6:	a6 1c       	adc	r10, r6
    20d8:	b7 1c       	adc	r11, r7
    20da:	d7 01       	movw	r26, r14
    20dc:	54 96       	adiw	r26, 0x14	; 20
    20de:	8d 92       	st	X+, r8
    20e0:	9d 92       	st	X+, r9
    20e2:	ad 92       	st	X+, r10
    20e4:	bc 92       	st	X, r11
    20e6:	57 97       	sbiw	r26, 0x17	; 23
    20e8:	12 96       	adiw	r26, 0x02	; 2
    20ea:	1c 92       	st	X, r1
    20ec:	f0 92 02 06 	sts	0x0602, r15	; 0x800602 <FatFs+0x1>
    20f0:	e0 92 01 06 	sts	0x0601, r14	; 0x800601 <FatFs>
    20f4:	80 e0       	ldi	r24, 0x00	; 0
    20f6:	09 c0       	rjmp	.+18     	; 0x210a <pf_mount+0x244>
    20f8:	80 e0       	ldi	r24, 0x00	; 0
    20fa:	07 c0       	rjmp	.+14     	; 0x210a <pf_mount+0x244>
    20fc:	82 e0       	ldi	r24, 0x02	; 2
    20fe:	05 c0       	rjmp	.+10     	; 0x210a <pf_mount+0x244>
    2100:	81 e0       	ldi	r24, 0x01	; 1
    2102:	03 c0       	rjmp	.+6      	; 0x210a <pf_mount+0x244>
    2104:	87 e0       	ldi	r24, 0x07	; 7
    2106:	01 c0       	rjmp	.+2      	; 0x210a <pf_mount+0x244>
    2108:	81 e0       	ldi	r24, 0x01	; 1
    210a:	a8 96       	adiw	r28, 0x28	; 40
    210c:	0f b6       	in	r0, 0x3f	; 63
    210e:	f8 94       	cli
    2110:	de bf       	out	0x3e, r29	; 62
    2112:	0f be       	out	0x3f, r0	; 63
    2114:	cd bf       	out	0x3d, r28	; 61
    2116:	df 91       	pop	r29
    2118:	cf 91       	pop	r28
    211a:	1f 91       	pop	r17
    211c:	0f 91       	pop	r16
    211e:	ff 90       	pop	r15
    2120:	ef 90       	pop	r14
    2122:	df 90       	pop	r13
    2124:	bf 90       	pop	r11
    2126:	af 90       	pop	r10
    2128:	9f 90       	pop	r9
    212a:	8f 90       	pop	r8
    212c:	7f 90       	pop	r7
    212e:	6f 90       	pop	r6
    2130:	5f 90       	pop	r5
    2132:	4f 90       	pop	r4
    2134:	08 95       	ret

00002136 <pf_open>:
    2136:	0f 93       	push	r16
    2138:	1f 93       	push	r17
    213a:	cf 93       	push	r28
    213c:	df 93       	push	r29
    213e:	cd b7       	in	r28, 0x3d	; 61
    2140:	de b7       	in	r29, 0x3e	; 62
    2142:	ec 97       	sbiw	r28, 0x3c	; 60
    2144:	0f b6       	in	r0, 0x3f	; 63
    2146:	f8 94       	cli
    2148:	de bf       	out	0x3e, r29	; 62
    214a:	0f be       	out	0x3f, r0	; 63
    214c:	cd bf       	out	0x3d, r28	; 61
    214e:	00 91 01 06 	lds	r16, 0x0601	; 0x800601 <FatFs>
    2152:	10 91 02 06 	lds	r17, 0x0602	; 0x800602 <FatFs+0x1>
    2156:	01 15       	cp	r16, r1
    2158:	11 05       	cpc	r17, r1
    215a:	c9 f1       	breq	.+114    	; 0x21ce <pf_open+0x98>
    215c:	bc 01       	movw	r22, r24
    215e:	f8 01       	movw	r30, r16
    2160:	12 82       	std	Z+2, r1	; 0x02
    2162:	ce 01       	movw	r24, r28
    2164:	4d 96       	adiw	r24, 0x1d	; 29
    2166:	97 83       	std	Z+7, r25	; 0x07
    2168:	86 83       	std	Z+6, r24	; 0x06
    216a:	0c 97       	sbiw	r24, 0x0c	; 12
    216c:	9c 83       	std	Y+4, r25	; 0x04
    216e:	8b 83       	std	Y+3, r24	; 0x03
    2170:	40 97       	sbiw	r24, 0x10	; 16
    2172:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <follow_path>
    2176:	81 11       	cpse	r24, r1
    2178:	2f c0       	rjmp	.+94     	; 0x21d8 <pf_open+0xa2>
    217a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    217c:	88 23       	and	r24, r24
    217e:	49 f1       	breq	.+82     	; 0x21d2 <pf_open+0x9c>
    2180:	88 a5       	ldd	r24, Y+40	; 0x28
    2182:	84 fd       	sbrc	r24, 4
    2184:	28 c0       	rjmp	.+80     	; 0x21d6 <pf_open+0xa0>
    2186:	89 a9       	ldd	r24, Y+49	; 0x31
    2188:	9a a9       	ldd	r25, Y+50	; 0x32
    218a:	a0 e0       	ldi	r26, 0x00	; 0
    218c:	b0 e0       	ldi	r27, 0x00	; 0
    218e:	bc 01       	movw	r22, r24
    2190:	55 27       	eor	r21, r21
    2192:	44 27       	eor	r20, r20
    2194:	8f a9       	ldd	r24, Y+55	; 0x37
    2196:	98 ad       	ldd	r25, Y+56	; 0x38
    2198:	a0 e0       	ldi	r26, 0x00	; 0
    219a:	b0 e0       	ldi	r27, 0x00	; 0
    219c:	84 2b       	or	r24, r20
    219e:	95 2b       	or	r25, r21
    21a0:	a6 2b       	or	r26, r22
    21a2:	b7 2b       	or	r27, r23
    21a4:	f8 01       	movw	r30, r16
    21a6:	80 a3       	std	Z+32, r24	; 0x20
    21a8:	91 a3       	std	Z+33, r25	; 0x21
    21aa:	a2 a3       	std	Z+34, r26	; 0x22
    21ac:	b3 a3       	std	Z+35, r27	; 0x23
    21ae:	89 ad       	ldd	r24, Y+57	; 0x39
    21b0:	9a ad       	ldd	r25, Y+58	; 0x3a
    21b2:	ab ad       	ldd	r26, Y+59	; 0x3b
    21b4:	bc ad       	ldd	r27, Y+60	; 0x3c
    21b6:	84 8f       	std	Z+28, r24	; 0x1c
    21b8:	95 8f       	std	Z+29, r25	; 0x1d
    21ba:	a6 8f       	std	Z+30, r26	; 0x1e
    21bc:	b7 8f       	std	Z+31, r27	; 0x1f
    21be:	10 8e       	std	Z+24, r1	; 0x18
    21c0:	11 8e       	std	Z+25, r1	; 0x19
    21c2:	12 8e       	std	Z+26, r1	; 0x1a
    21c4:	13 8e       	std	Z+27, r1	; 0x1b
    21c6:	81 e0       	ldi	r24, 0x01	; 1
    21c8:	82 83       	std	Z+2, r24	; 0x02
    21ca:	80 e0       	ldi	r24, 0x00	; 0
    21cc:	05 c0       	rjmp	.+10     	; 0x21d8 <pf_open+0xa2>
    21ce:	86 e0       	ldi	r24, 0x06	; 6
    21d0:	03 c0       	rjmp	.+6      	; 0x21d8 <pf_open+0xa2>
    21d2:	83 e0       	ldi	r24, 0x03	; 3
    21d4:	01 c0       	rjmp	.+2      	; 0x21d8 <pf_open+0xa2>
    21d6:	83 e0       	ldi	r24, 0x03	; 3
    21d8:	ec 96       	adiw	r28, 0x3c	; 60
    21da:	0f b6       	in	r0, 0x3f	; 63
    21dc:	f8 94       	cli
    21de:	de bf       	out	0x3e, r29	; 62
    21e0:	0f be       	out	0x3f, r0	; 63
    21e2:	cd bf       	out	0x3d, r28	; 61
    21e4:	df 91       	pop	r29
    21e6:	cf 91       	pop	r28
    21e8:	1f 91       	pop	r17
    21ea:	0f 91       	pop	r16
    21ec:	08 95       	ret

000021ee <pf_read>:
    21ee:	2f 92       	push	r2
    21f0:	3f 92       	push	r3
    21f2:	4f 92       	push	r4
    21f4:	5f 92       	push	r5
    21f6:	6f 92       	push	r6
    21f8:	7f 92       	push	r7
    21fa:	8f 92       	push	r8
    21fc:	9f 92       	push	r9
    21fe:	af 92       	push	r10
    2200:	bf 92       	push	r11
    2202:	cf 92       	push	r12
    2204:	df 92       	push	r13
    2206:	ef 92       	push	r14
    2208:	ff 92       	push	r15
    220a:	0f 93       	push	r16
    220c:	1f 93       	push	r17
    220e:	cf 93       	push	r28
    2210:	df 93       	push	r29
    2212:	3c 01       	movw	r6, r24
    2214:	6b 01       	movw	r12, r22
    2216:	4a 01       	movw	r8, r20
    2218:	e0 90 01 06 	lds	r14, 0x0601	; 0x800601 <FatFs>
    221c:	f0 90 02 06 	lds	r15, 0x0602	; 0x800602 <FatFs+0x1>
    2220:	fa 01       	movw	r30, r20
    2222:	11 82       	std	Z+1, r1	; 0x01
    2224:	10 82       	st	Z, r1
    2226:	e1 14       	cp	r14, r1
    2228:	f1 04       	cpc	r15, r1
    222a:	09 f4       	brne	.+2      	; 0x222e <pf_read+0x40>
    222c:	bb c0       	rjmp	.+374    	; 0x23a4 <pf_read+0x1b6>
    222e:	f7 01       	movw	r30, r14
    2230:	82 81       	ldd	r24, Z+2	; 0x02
    2232:	80 ff       	sbrs	r24, 0
    2234:	b9 c0       	rjmp	.+370    	; 0x23a8 <pf_read+0x1ba>
    2236:	84 8d       	ldd	r24, Z+28	; 0x1c
    2238:	95 8d       	ldd	r25, Z+29	; 0x1d
    223a:	a6 8d       	ldd	r26, Z+30	; 0x1e
    223c:	b7 8d       	ldd	r27, Z+31	; 0x1f
    223e:	40 8d       	ldd	r20, Z+24	; 0x18
    2240:	51 8d       	ldd	r21, Z+25	; 0x19
    2242:	62 8d       	ldd	r22, Z+26	; 0x1a
    2244:	73 8d       	ldd	r23, Z+27	; 0x1b
    2246:	84 1b       	sub	r24, r20
    2248:	95 0b       	sbc	r25, r21
    224a:	a6 0b       	sbc	r26, r22
    224c:	b7 0b       	sbc	r27, r23
    224e:	a6 01       	movw	r20, r12
    2250:	60 e0       	ldi	r22, 0x00	; 0
    2252:	70 e0       	ldi	r23, 0x00	; 0
    2254:	84 17       	cp	r24, r20
    2256:	95 07       	cpc	r25, r21
    2258:	a6 07       	cpc	r26, r22
    225a:	b7 07       	cpc	r27, r23
    225c:	08 f4       	brcc	.+2      	; 0x2260 <pf_read+0x72>
    225e:	6c 01       	movw	r12, r24
    2260:	53 01       	movw	r10, r6
    2262:	96 c0       	rjmp	.+300    	; 0x2390 <pf_read+0x1a2>
    2264:	f7 01       	movw	r30, r14
    2266:	20 8c       	ldd	r2, Z+24	; 0x18
    2268:	31 8c       	ldd	r3, Z+25	; 0x19
    226a:	42 8c       	ldd	r4, Z+26	; 0x1a
    226c:	53 8c       	ldd	r5, Z+27	; 0x1b
    226e:	d2 01       	movw	r26, r4
    2270:	c1 01       	movw	r24, r2
    2272:	91 70       	andi	r25, 0x01	; 1
    2274:	aa 27       	eor	r26, r26
    2276:	bb 27       	eor	r27, r27
    2278:	89 2b       	or	r24, r25
    227a:	8a 2b       	or	r24, r26
    227c:	8b 2b       	or	r24, r27
    227e:	09 f0       	breq	.+2      	; 0x2282 <pf_read+0x94>
    2280:	4e c0       	rjmp	.+156    	; 0x231e <pf_read+0x130>
    2282:	21 81       	ldd	r18, Z+1	; 0x01
    2284:	30 e0       	ldi	r19, 0x00	; 0
    2286:	40 e0       	ldi	r20, 0x00	; 0
    2288:	50 e0       	ldi	r21, 0x00	; 0
    228a:	c2 01       	movw	r24, r4
    228c:	b1 01       	movw	r22, r2
    228e:	05 2e       	mov	r0, r21
    2290:	59 e0       	ldi	r21, 0x09	; 9
    2292:	96 95       	lsr	r25
    2294:	87 95       	ror	r24
    2296:	77 95       	ror	r23
    2298:	67 95       	ror	r22
    229a:	5a 95       	dec	r21
    229c:	d1 f7       	brne	.-12     	; 0x2292 <pf_read+0xa4>
    229e:	50 2d       	mov	r21, r0
    22a0:	0e 94 8b 19 	call	0x3316	; 0x3316 <__udivmodsi4>
    22a4:	67 2b       	or	r22, r23
    22a6:	68 2b       	or	r22, r24
    22a8:	69 2b       	or	r22, r25
    22aa:	e9 f4       	brne	.+58     	; 0x22e6 <pf_read+0xf8>
    22ac:	23 28       	or	r2, r3
    22ae:	24 28       	or	r2, r4
    22b0:	25 28       	or	r2, r5
    22b2:	31 f4       	brne	.+12     	; 0x22c0 <pf_read+0xd2>
    22b4:	f7 01       	movw	r30, r14
    22b6:	60 a1       	ldd	r22, Z+32	; 0x20
    22b8:	71 a1       	ldd	r23, Z+33	; 0x21
    22ba:	82 a1       	ldd	r24, Z+34	; 0x22
    22bc:	93 a1       	ldd	r25, Z+35	; 0x23
    22be:	07 c0       	rjmp	.+14     	; 0x22ce <pf_read+0xe0>
    22c0:	f7 01       	movw	r30, r14
    22c2:	64 a1       	ldd	r22, Z+36	; 0x24
    22c4:	75 a1       	ldd	r23, Z+37	; 0x25
    22c6:	86 a1       	ldd	r24, Z+38	; 0x26
    22c8:	97 a1       	ldd	r25, Z+39	; 0x27
    22ca:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <get_fat>
    22ce:	62 30       	cpi	r22, 0x02	; 2
    22d0:	71 05       	cpc	r23, r1
    22d2:	81 05       	cpc	r24, r1
    22d4:	91 05       	cpc	r25, r1
    22d6:	08 f4       	brcc	.+2      	; 0x22da <pf_read+0xec>
    22d8:	61 c0       	rjmp	.+194    	; 0x239c <pf_read+0x1ae>
    22da:	f7 01       	movw	r30, r14
    22dc:	64 a3       	std	Z+36, r22	; 0x24
    22de:	75 a3       	std	Z+37, r23	; 0x25
    22e0:	86 a3       	std	Z+38, r24	; 0x26
    22e2:	97 a3       	std	Z+39, r25	; 0x27
    22e4:	13 82       	std	Z+3, r1	; 0x03
    22e6:	f7 01       	movw	r30, r14
    22e8:	64 a1       	ldd	r22, Z+36	; 0x24
    22ea:	75 a1       	ldd	r23, Z+37	; 0x25
    22ec:	86 a1       	ldd	r24, Z+38	; 0x26
    22ee:	97 a1       	ldd	r25, Z+39	; 0x27
    22f0:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <clust2sect>
    22f4:	61 15       	cp	r22, r1
    22f6:	71 05       	cpc	r23, r1
    22f8:	81 05       	cpc	r24, r1
    22fa:	91 05       	cpc	r25, r1
    22fc:	09 f4       	brne	.+2      	; 0x2300 <pf_read+0x112>
    22fe:	4e c0       	rjmp	.+156    	; 0x239c <pf_read+0x1ae>
    2300:	f7 01       	movw	r30, r14
    2302:	23 81       	ldd	r18, Z+3	; 0x03
    2304:	31 e0       	ldi	r19, 0x01	; 1
    2306:	32 0f       	add	r19, r18
    2308:	33 83       	std	Z+3, r19	; 0x03
    230a:	dc 01       	movw	r26, r24
    230c:	cb 01       	movw	r24, r22
    230e:	82 0f       	add	r24, r18
    2310:	91 1d       	adc	r25, r1
    2312:	a1 1d       	adc	r26, r1
    2314:	b1 1d       	adc	r27, r1
    2316:	80 a7       	std	Z+40, r24	; 0x28
    2318:	91 a7       	std	Z+41, r25	; 0x29
    231a:	a2 a7       	std	Z+42, r26	; 0x2a
    231c:	b3 a7       	std	Z+43, r27	; 0x2b
    231e:	f7 01       	movw	r30, r14
    2320:	80 8d       	ldd	r24, Z+24	; 0x18
    2322:	91 8d       	ldd	r25, Z+25	; 0x19
    2324:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2326:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2328:	9c 01       	movw	r18, r24
    232a:	31 70       	andi	r19, 0x01	; 1
    232c:	c0 e0       	ldi	r28, 0x00	; 0
    232e:	d2 e0       	ldi	r29, 0x02	; 2
    2330:	c2 1b       	sub	r28, r18
    2332:	d3 0b       	sbc	r29, r19
    2334:	cc 16       	cp	r12, r28
    2336:	dd 06       	cpc	r13, r29
    2338:	08 f4       	brcc	.+2      	; 0x233c <pf_read+0x14e>
    233a:	e6 01       	movw	r28, r12
    233c:	f7 01       	movw	r30, r14
    233e:	40 a5       	ldd	r20, Z+40	; 0x28
    2340:	51 a5       	ldd	r21, Z+41	; 0x29
    2342:	62 a5       	ldd	r22, Z+42	; 0x2a
    2344:	73 a5       	ldd	r23, Z+43	; 0x2b
    2346:	61 14       	cp	r6, r1
    2348:	71 04       	cpc	r7, r1
    234a:	19 f4       	brne	.+6      	; 0x2352 <pf_read+0x164>
    234c:	80 e0       	ldi	r24, 0x00	; 0
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	02 c0       	rjmp	.+4      	; 0x2356 <pf_read+0x168>
    2352:	8a 2d       	mov	r24, r10
    2354:	9b 2d       	mov	r25, r11
    2356:	8e 01       	movw	r16, r28
    2358:	0e 94 4f 07 	call	0xe9e	; 0xe9e <disk_readp>
    235c:	81 11       	cpse	r24, r1
    235e:	1e c0       	rjmp	.+60     	; 0x239c <pf_read+0x1ae>
    2360:	f7 01       	movw	r30, r14
    2362:	80 8d       	ldd	r24, Z+24	; 0x18
    2364:	91 8d       	ldd	r25, Z+25	; 0x19
    2366:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2368:	b3 8d       	ldd	r27, Z+27	; 0x1b
    236a:	8c 0f       	add	r24, r28
    236c:	9d 1f       	adc	r25, r29
    236e:	a1 1d       	adc	r26, r1
    2370:	b1 1d       	adc	r27, r1
    2372:	80 8f       	std	Z+24, r24	; 0x18
    2374:	91 8f       	std	Z+25, r25	; 0x19
    2376:	a2 8f       	std	Z+26, r26	; 0x1a
    2378:	b3 8f       	std	Z+27, r27	; 0x1b
    237a:	ac 0e       	add	r10, r28
    237c:	bd 1e       	adc	r11, r29
    237e:	cc 1a       	sub	r12, r28
    2380:	dd 0a       	sbc	r13, r29
    2382:	f4 01       	movw	r30, r8
    2384:	80 81       	ld	r24, Z
    2386:	91 81       	ldd	r25, Z+1	; 0x01
    2388:	c8 0f       	add	r28, r24
    238a:	d9 1f       	adc	r29, r25
    238c:	d1 83       	std	Z+1, r29	; 0x01
    238e:	c0 83       	st	Z, r28
    2390:	c1 14       	cp	r12, r1
    2392:	d1 04       	cpc	r13, r1
    2394:	09 f0       	breq	.+2      	; 0x2398 <pf_read+0x1aa>
    2396:	66 cf       	rjmp	.-308    	; 0x2264 <pf_read+0x76>
    2398:	80 e0       	ldi	r24, 0x00	; 0
    239a:	07 c0       	rjmp	.+14     	; 0x23aa <pf_read+0x1bc>
    239c:	f7 01       	movw	r30, r14
    239e:	12 82       	std	Z+2, r1	; 0x02
    23a0:	81 e0       	ldi	r24, 0x01	; 1
    23a2:	03 c0       	rjmp	.+6      	; 0x23aa <pf_read+0x1bc>
    23a4:	86 e0       	ldi	r24, 0x06	; 6
    23a6:	01 c0       	rjmp	.+2      	; 0x23aa <pf_read+0x1bc>
    23a8:	85 e0       	ldi	r24, 0x05	; 5
    23aa:	df 91       	pop	r29
    23ac:	cf 91       	pop	r28
    23ae:	1f 91       	pop	r17
    23b0:	0f 91       	pop	r16
    23b2:	ff 90       	pop	r15
    23b4:	ef 90       	pop	r14
    23b6:	df 90       	pop	r13
    23b8:	cf 90       	pop	r12
    23ba:	bf 90       	pop	r11
    23bc:	af 90       	pop	r10
    23be:	9f 90       	pop	r9
    23c0:	8f 90       	pop	r8
    23c2:	7f 90       	pop	r7
    23c4:	6f 90       	pop	r6
    23c6:	5f 90       	pop	r5
    23c8:	4f 90       	pop	r4
    23ca:	3f 90       	pop	r3
    23cc:	2f 90       	pop	r2
    23ce:	08 95       	ret

000023d0 <pf_lseek>:
#if _USE_LSEEK

FRESULT pf_lseek (
	DWORD ofs		/* File pointer from top of file */
)
{
    23d0:	4f 92       	push	r4
    23d2:	5f 92       	push	r5
    23d4:	6f 92       	push	r6
    23d6:	7f 92       	push	r7
    23d8:	8f 92       	push	r8
    23da:	9f 92       	push	r9
    23dc:	af 92       	push	r10
    23de:	bf 92       	push	r11
    23e0:	cf 92       	push	r12
    23e2:	df 92       	push	r13
    23e4:	ef 92       	push	r14
    23e6:	ff 92       	push	r15
    23e8:	cf 93       	push	r28
    23ea:	df 93       	push	r29
    23ec:	00 d0       	rcall	.+0      	; 0x23ee <pf_lseek+0x1e>
    23ee:	00 d0       	rcall	.+0      	; 0x23f0 <pf_lseek+0x20>
    23f0:	00 d0       	rcall	.+0      	; 0x23f2 <pf_lseek+0x22>
    23f2:	cd b7       	in	r28, 0x3d	; 61
    23f4:	de b7       	in	r29, 0x3e	; 62
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;
    23f6:	20 91 01 06 	lds	r18, 0x0601	; 0x800601 <FatFs>
    23fa:	30 91 02 06 	lds	r19, 0x0602	; 0x800602 <FatFs+0x1>
    23fe:	3e 83       	std	Y+6, r19	; 0x06
    2400:	2d 83       	std	Y+5, r18	; 0x05


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    2402:	21 15       	cp	r18, r1
    2404:	31 05       	cpc	r19, r1
    2406:	09 f4       	brne	.+2      	; 0x240a <pf_lseek+0x3a>
    2408:	f4 c0       	rjmp	.+488    	; 0x25f2 <pf_lseek+0x222>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
    240a:	d9 01       	movw	r26, r18
    240c:	12 96       	adiw	r26, 0x02	; 2
    240e:	2c 91       	ld	r18, X
    2410:	12 97       	sbiw	r26, 0x02	; 2
    2412:	20 ff       	sbrs	r18, 0
    2414:	f0 c0       	rjmp	.+480    	; 0x25f6 <pf_lseek+0x226>
			return FR_NOT_OPENED;

	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
    2416:	5c 96       	adiw	r26, 0x1c	; 28
    2418:	cd 90       	ld	r12, X+
    241a:	dd 90       	ld	r13, X+
    241c:	ed 90       	ld	r14, X+
    241e:	fc 90       	ld	r15, X
    2420:	5f 97       	sbiw	r26, 0x1f	; 31
    2422:	c6 16       	cp	r12, r22
    2424:	d7 06       	cpc	r13, r23
    2426:	e8 06       	cpc	r14, r24
    2428:	f9 06       	cpc	r15, r25
    242a:	10 f0       	brcs	.+4      	; 0x2430 <pf_lseek+0x60>
    242c:	6b 01       	movw	r12, r22
    242e:	7c 01       	movw	r14, r24
	ifptr = fs->fptr;
    2430:	ed 81       	ldd	r30, Y+5	; 0x05
    2432:	fe 81       	ldd	r31, Y+6	; 0x06
    2434:	40 8c       	ldd	r4, Z+24	; 0x18
    2436:	51 8c       	ldd	r5, Z+25	; 0x19
    2438:	62 8c       	ldd	r6, Z+26	; 0x1a
    243a:	73 8c       	ldd	r7, Z+27	; 0x1b
	fs->fptr = 0;
    243c:	10 8e       	std	Z+24, r1	; 0x18
    243e:	11 8e       	std	Z+25, r1	; 0x19
    2440:	12 8e       	std	Z+26, r1	; 0x1a
    2442:	13 8e       	std	Z+27, r1	; 0x1b
	if (ofs > 0) {
    2444:	c1 14       	cp	r12, r1
    2446:	d1 04       	cpc	r13, r1
    2448:	e1 04       	cpc	r14, r1
    244a:	f1 04       	cpc	r15, r1
    244c:	09 f4       	brne	.+2      	; 0x2450 <pf_lseek+0x80>
    244e:	d5 c0       	rjmp	.+426    	; 0x25fa <pf_lseek+0x22a>
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
    2450:	81 80       	ldd	r8, Z+1	; 0x01
    2452:	91 2c       	mov	r9, r1
    2454:	a1 2c       	mov	r10, r1
    2456:	b1 2c       	mov	r11, r1
    2458:	07 2e       	mov	r0, r23
    245a:	79 e0       	ldi	r23, 0x09	; 9
    245c:	88 0c       	add	r8, r8
    245e:	99 1c       	adc	r9, r9
    2460:	aa 1c       	adc	r10, r10
    2462:	bb 1c       	adc	r11, r11
    2464:	7a 95       	dec	r23
    2466:	d1 f7       	brne	.-12     	; 0x245c <pf_lseek+0x8c>
    2468:	70 2d       	mov	r23, r0
		if (ifptr > 0 &&
    246a:	41 14       	cp	r4, r1
    246c:	51 04       	cpc	r5, r1
    246e:	61 04       	cpc	r6, r1
    2470:	71 04       	cpc	r7, r1
    2472:	09 f4       	brne	.+2      	; 0x2476 <pf_lseek+0xa6>
    2474:	40 c0       	rjmp	.+128    	; 0x24f6 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    2476:	c7 01       	movw	r24, r14
    2478:	b6 01       	movw	r22, r12
    247a:	61 50       	subi	r22, 0x01	; 1
    247c:	71 09       	sbc	r23, r1
    247e:	81 09       	sbc	r24, r1
    2480:	91 09       	sbc	r25, r1
    2482:	a5 01       	movw	r20, r10
    2484:	94 01       	movw	r18, r8
    2486:	0e 94 8b 19 	call	0x3316	; 0x3316 <__udivmodsi4>
    248a:	29 83       	std	Y+1, r18	; 0x01
    248c:	3a 83       	std	Y+2, r19	; 0x02
    248e:	4b 83       	std	Y+3, r20	; 0x03
    2490:	5c 83       	std	Y+4, r21	; 0x04
    2492:	b1 e0       	ldi	r27, 0x01	; 1
    2494:	4b 1a       	sub	r4, r27
    2496:	51 08       	sbc	r5, r1
    2498:	61 08       	sbc	r6, r1
    249a:	71 08       	sbc	r7, r1
    249c:	c3 01       	movw	r24, r6
    249e:	b2 01       	movw	r22, r4
    24a0:	a5 01       	movw	r20, r10
    24a2:	94 01       	movw	r18, r8
    24a4:	0e 94 8b 19 	call	0x3316	; 0x3316 <__udivmodsi4>
	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
	ifptr = fs->fptr;
	fs->fptr = 0;
	if (ofs > 0) {
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
		if (ifptr > 0 &&
    24a8:	89 81       	ldd	r24, Y+1	; 0x01
    24aa:	9a 81       	ldd	r25, Y+2	; 0x02
    24ac:	ab 81       	ldd	r26, Y+3	; 0x03
    24ae:	bc 81       	ldd	r27, Y+4	; 0x04
    24b0:	82 17       	cp	r24, r18
    24b2:	93 07       	cpc	r25, r19
    24b4:	a4 07       	cpc	r26, r20
    24b6:	b5 07       	cpc	r27, r21
    24b8:	f0 f0       	brcs	.+60     	; 0x24f6 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
			fs->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    24ba:	88 27       	eor	r24, r24
    24bc:	99 27       	eor	r25, r25
    24be:	dc 01       	movw	r26, r24
    24c0:	88 19       	sub	r24, r8
    24c2:	99 09       	sbc	r25, r9
    24c4:	aa 09       	sbc	r26, r10
    24c6:	bb 09       	sbc	r27, r11
    24c8:	48 22       	and	r4, r24
    24ca:	59 22       	and	r5, r25
    24cc:	6a 22       	and	r6, r26
    24ce:	7b 22       	and	r7, r27
    24d0:	ad 81       	ldd	r26, Y+5	; 0x05
    24d2:	be 81       	ldd	r27, Y+6	; 0x06
    24d4:	58 96       	adiw	r26, 0x18	; 24
    24d6:	4d 92       	st	X+, r4
    24d8:	5d 92       	st	X+, r5
    24da:	6d 92       	st	X+, r6
    24dc:	7c 92       	st	X, r7
    24de:	5b 97       	sbiw	r26, 0x1b	; 27
			ofs -= fs->fptr;
    24e0:	c4 18       	sub	r12, r4
    24e2:	d5 08       	sbc	r13, r5
    24e4:	e6 08       	sbc	r14, r6
    24e6:	f7 08       	sbc	r15, r7
			clst = fs->curr_clust;
    24e8:	94 96       	adiw	r26, 0x24	; 36
    24ea:	6d 91       	ld	r22, X+
    24ec:	7d 91       	ld	r23, X+
    24ee:	8d 91       	ld	r24, X+
    24f0:	9c 91       	ld	r25, X
    24f2:	97 97       	sbiw	r26, 0x27	; 39
    24f4:	33 c0       	rjmp	.+102    	; 0x255c <pf_lseek+0x18c>
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
    24f6:	ed 81       	ldd	r30, Y+5	; 0x05
    24f8:	fe 81       	ldd	r31, Y+6	; 0x06
    24fa:	60 a1       	ldd	r22, Z+32	; 0x20
    24fc:	71 a1       	ldd	r23, Z+33	; 0x21
    24fe:	82 a1       	ldd	r24, Z+34	; 0x22
    2500:	93 a1       	ldd	r25, Z+35	; 0x23
			fs->curr_clust = clst;
    2502:	64 a3       	std	Z+36, r22	; 0x24
    2504:	75 a3       	std	Z+37, r23	; 0x25
    2506:	86 a3       	std	Z+38, r24	; 0x26
    2508:	97 a3       	std	Z+39, r25	; 0x27
    250a:	28 c0       	rjmp	.+80     	; 0x255c <pf_lseek+0x18c>
		}
		while (ofs > bcs) {				/* Cluster following loop */
			clst = get_fat(clst);		/* Follow cluster chain */
    250c:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <get_fat>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
    2510:	62 30       	cpi	r22, 0x02	; 2
    2512:	71 05       	cpc	r23, r1
    2514:	81 05       	cpc	r24, r1
    2516:	91 05       	cpc	r25, r1
    2518:	08 f4       	brcc	.+2      	; 0x251c <pf_lseek+0x14c>
    251a:	65 c0       	rjmp	.+202    	; 0x25e6 <pf_lseek+0x216>
    251c:	ed 81       	ldd	r30, Y+5	; 0x05
    251e:	fe 81       	ldd	r31, Y+6	; 0x06
    2520:	40 84       	ldd	r4, Z+8	; 0x08
    2522:	51 84       	ldd	r5, Z+9	; 0x09
    2524:	62 84       	ldd	r6, Z+10	; 0x0a
    2526:	73 84       	ldd	r7, Z+11	; 0x0b
    2528:	64 15       	cp	r22, r4
    252a:	75 05       	cpc	r23, r5
    252c:	86 05       	cpc	r24, r6
    252e:	97 05       	cpc	r25, r7
    2530:	08 f0       	brcs	.+2      	; 0x2534 <pf_lseek+0x164>
    2532:	59 c0       	rjmp	.+178    	; 0x25e6 <pf_lseek+0x216>
			fs->curr_clust = clst;
    2534:	64 a3       	std	Z+36, r22	; 0x24
    2536:	75 a3       	std	Z+37, r23	; 0x25
    2538:	86 a3       	std	Z+38, r24	; 0x26
    253a:	97 a3       	std	Z+39, r25	; 0x27
			fs->fptr += bcs;
    253c:	40 8c       	ldd	r4, Z+24	; 0x18
    253e:	51 8c       	ldd	r5, Z+25	; 0x19
    2540:	62 8c       	ldd	r6, Z+26	; 0x1a
    2542:	73 8c       	ldd	r7, Z+27	; 0x1b
    2544:	48 0c       	add	r4, r8
    2546:	59 1c       	adc	r5, r9
    2548:	6a 1c       	adc	r6, r10
    254a:	7b 1c       	adc	r7, r11
    254c:	40 8e       	std	Z+24, r4	; 0x18
    254e:	51 8e       	std	Z+25, r5	; 0x19
    2550:	62 8e       	std	Z+26, r6	; 0x1a
    2552:	73 8e       	std	Z+27, r7	; 0x1b
			ofs -= bcs;
    2554:	c8 18       	sub	r12, r8
    2556:	d9 08       	sbc	r13, r9
    2558:	ea 08       	sbc	r14, r10
    255a:	fb 08       	sbc	r15, r11
			clst = fs->curr_clust;
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
			fs->curr_clust = clst;
		}
		while (ofs > bcs) {				/* Cluster following loop */
    255c:	8c 14       	cp	r8, r12
    255e:	9d 04       	cpc	r9, r13
    2560:	ae 04       	cpc	r10, r14
    2562:	bf 04       	cpc	r11, r15
    2564:	98 f2       	brcs	.-90     	; 0x250c <pf_lseek+0x13c>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
			fs->curr_clust = clst;
			fs->fptr += bcs;
			ofs -= bcs;
		}
		fs->fptr += ofs;
    2566:	ad 81       	ldd	r26, Y+5	; 0x05
    2568:	be 81       	ldd	r27, Y+6	; 0x06
    256a:	58 96       	adiw	r26, 0x18	; 24
    256c:	8d 90       	ld	r8, X+
    256e:	9d 90       	ld	r9, X+
    2570:	ad 90       	ld	r10, X+
    2572:	bc 90       	ld	r11, X
    2574:	5b 97       	sbiw	r26, 0x1b	; 27
    2576:	8c 0c       	add	r8, r12
    2578:	9d 1c       	adc	r9, r13
    257a:	ae 1c       	adc	r10, r14
    257c:	bf 1c       	adc	r11, r15
    257e:	fd 01       	movw	r30, r26
    2580:	80 8e       	std	Z+24, r8	; 0x18
    2582:	91 8e       	std	Z+25, r9	; 0x19
    2584:	a2 8e       	std	Z+26, r10	; 0x1a
    2586:	b3 8e       	std	Z+27, r11	; 0x1b
		sect = clust2sect(clst);		/* Current sector */
    2588:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <clust2sect>
		if (!sect) goto fe_abort;
    258c:	61 15       	cp	r22, r1
    258e:	71 05       	cpc	r23, r1
    2590:	81 05       	cpc	r24, r1
    2592:	91 05       	cpc	r25, r1
    2594:	41 f1       	breq	.+80     	; 0x25e6 <pf_lseek+0x216>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
    2596:	46 01       	movw	r8, r12
    2598:	57 01       	movw	r10, r14
    259a:	07 2e       	mov	r0, r23
    259c:	79 e0       	ldi	r23, 0x09	; 9
    259e:	b6 94       	lsr	r11
    25a0:	a7 94       	ror	r10
    25a2:	97 94       	ror	r9
    25a4:	87 94       	ror	r8
    25a6:	7a 95       	dec	r23
    25a8:	d1 f7       	brne	.-12     	; 0x259e <pf_lseek+0x1ce>
    25aa:	70 2d       	mov	r23, r0
    25ac:	ad 81       	ldd	r26, Y+5	; 0x05
    25ae:	be 81       	ldd	r27, Y+6	; 0x06
    25b0:	13 96       	adiw	r26, 0x03	; 3
    25b2:	8c 92       	st	X, r8
		if (ofs % 512)
    25b4:	b1 e0       	ldi	r27, 0x01	; 1
    25b6:	db 22       	and	r13, r27
    25b8:	ee 24       	eor	r14, r14
    25ba:	ff 24       	eor	r15, r15
    25bc:	cd 28       	or	r12, r13
    25be:	ce 28       	or	r12, r14
    25c0:	cf 28       	or	r12, r15
    25c2:	e9 f0       	breq	.+58     	; 0x25fe <pf_lseek+0x22e>
			fs->dsect = sect + fs->csect++;
    25c4:	21 e0       	ldi	r18, 0x01	; 1
    25c6:	28 0d       	add	r18, r8
    25c8:	ed 81       	ldd	r30, Y+5	; 0x05
    25ca:	fe 81       	ldd	r31, Y+6	; 0x06
    25cc:	23 83       	std	Z+3, r18	; 0x03
    25ce:	dc 01       	movw	r26, r24
    25d0:	cb 01       	movw	r24, r22
    25d2:	88 0d       	add	r24, r8
    25d4:	91 1d       	adc	r25, r1
    25d6:	a1 1d       	adc	r26, r1
    25d8:	b1 1d       	adc	r27, r1
    25da:	80 a7       	std	Z+40, r24	; 0x28
    25dc:	91 a7       	std	Z+41, r25	; 0x29
    25de:	a2 a7       	std	Z+42, r26	; 0x2a
    25e0:	b3 a7       	std	Z+43, r27	; 0x2b
	}

	return FR_OK;
    25e2:	80 e0       	ldi	r24, 0x00	; 0
    25e4:	0d c0       	rjmp	.+26     	; 0x2600 <pf_lseek+0x230>

fe_abort:
	fs->flag = 0;
    25e6:	ad 81       	ldd	r26, Y+5	; 0x05
    25e8:	be 81       	ldd	r27, Y+6	; 0x06
    25ea:	12 96       	adiw	r26, 0x02	; 2
    25ec:	1c 92       	st	X, r1
	return FR_DISK_ERR;
    25ee:	81 e0       	ldi	r24, 0x01	; 1
    25f0:	07 c0       	rjmp	.+14     	; 0x2600 <pf_lseek+0x230>
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    25f2:	86 e0       	ldi	r24, 0x06	; 6
    25f4:	05 c0       	rjmp	.+10     	; 0x2600 <pf_lseek+0x230>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
			return FR_NOT_OPENED;
    25f6:	85 e0       	ldi	r24, 0x05	; 5
    25f8:	03 c0       	rjmp	.+6      	; 0x2600 <pf_lseek+0x230>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
		if (ofs % 512)
			fs->dsect = sect + fs->csect++;
	}

	return FR_OK;
    25fa:	80 e0       	ldi	r24, 0x00	; 0
    25fc:	01 c0       	rjmp	.+2      	; 0x2600 <pf_lseek+0x230>
    25fe:	80 e0       	ldi	r24, 0x00	; 0

fe_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    2600:	26 96       	adiw	r28, 0x06	; 6
    2602:	0f b6       	in	r0, 0x3f	; 63
    2604:	f8 94       	cli
    2606:	de bf       	out	0x3e, r29	; 62
    2608:	0f be       	out	0x3f, r0	; 63
    260a:	cd bf       	out	0x3d, r28	; 61
    260c:	df 91       	pop	r29
    260e:	cf 91       	pop	r28
    2610:	ff 90       	pop	r15
    2612:	ef 90       	pop	r14
    2614:	df 90       	pop	r13
    2616:	cf 90       	pop	r12
    2618:	bf 90       	pop	r11
    261a:	af 90       	pop	r10
    261c:	9f 90       	pop	r9
    261e:	8f 90       	pop	r8
    2620:	7f 90       	pop	r7
    2622:	6f 90       	pop	r6
    2624:	5f 90       	pop	r5
    2626:	4f 90       	pop	r4
    2628:	08 95       	ret

0000262a <read_symbol_from_SD>:
}
//—————————————-
*/

uint8_t read_symbol_from_SD (uint16_t symbol)
{
    262a:	0f 93       	push	r16
    262c:	1f 93       	push	r17
    262e:	cf 93       	push	r28
    2630:	df 93       	push	r29
    2632:	cd b7       	in	r28, 0x3d	; 61
    2634:	de b7       	in	r29, 0x3e	; 62
    2636:	2d 97       	sbiw	r28, 0x0d	; 13
    2638:	0f b6       	in	r0, 0x3f	; 63
    263a:	f8 94       	cli
    263c:	de bf       	out	0x3e, r29	; 62
    263e:	0f be       	out	0x3f, r0	; 63
    2640:	cd bf       	out	0x3d, r28	; 61
	WORD s1;
	uint8_t result;
	char buffer[10] = {};
    2642:	8e 01       	movw	r16, r28
    2644:	0c 5f       	subi	r16, 0xFC	; 252
    2646:	1f 4f       	sbci	r17, 0xFF	; 255
    2648:	2a e0       	ldi	r18, 0x0A	; 10
    264a:	f8 01       	movw	r30, r16
    264c:	11 92       	st	Z+, r1
    264e:	2a 95       	dec	r18
    2650:	e9 f7       	brne	.-6      	; 0x264c <read_symbol_from_SD+0x22>

	pf_lseek(6*symbol); //Установим курсор чтения на 0 в 123.txt
    2652:	bc 01       	movw	r22, r24
    2654:	66 0f       	add	r22, r22
    2656:	77 1f       	adc	r23, r23
    2658:	68 0f       	add	r22, r24
    265a:	79 1f       	adc	r23, r25
    265c:	66 0f       	add	r22, r22
    265e:	77 1f       	adc	r23, r23
    2660:	80 e0       	ldi	r24, 0x00	; 0
    2662:	90 e0       	ldi	r25, 0x00	; 0
    2664:	0e 94 e8 11 	call	0x23d0	; 0x23d0 <pf_lseek>
	pf_read(buffer,4,&s1);
    2668:	ae 01       	movw	r20, r28
    266a:	4f 5f       	subi	r20, 0xFF	; 255
    266c:	5f 4f       	sbci	r21, 0xFF	; 255
    266e:	64 e0       	ldi	r22, 0x04	; 4
    2670:	70 e0       	ldi	r23, 0x00	; 0
    2672:	c8 01       	movw	r24, r16
    2674:	0e 94 f7 10 	call	0x21ee	; 0x21ee <pf_read>
	sscanf(buffer, "%x", &result);
    2678:	ce 01       	movw	r24, r28
    267a:	03 96       	adiw	r24, 0x03	; 3
    267c:	9f 93       	push	r25
    267e:	8f 93       	push	r24
    2680:	8b e4       	ldi	r24, 0x4B	; 75
    2682:	91 e0       	ldi	r25, 0x01	; 1
    2684:	9f 93       	push	r25
    2686:	8f 93       	push	r24
    2688:	1f 93       	push	r17
    268a:	0f 93       	push	r16
    268c:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <sscanf>

	return result;
    2690:	0f 90       	pop	r0
    2692:	0f 90       	pop	r0
    2694:	0f 90       	pop	r0
    2696:	0f 90       	pop	r0
    2698:	0f 90       	pop	r0
    269a:	0f 90       	pop	r0
    269c:	8b 81       	ldd	r24, Y+3	; 0x03
    269e:	2d 96       	adiw	r28, 0x0d	; 13
    26a0:	0f b6       	in	r0, 0x3f	; 63
    26a2:	f8 94       	cli
    26a4:	de bf       	out	0x3e, r29	; 62
    26a6:	0f be       	out	0x3f, r0	; 63
    26a8:	cd bf       	out	0x3d, r28	; 61
    26aa:	df 91       	pop	r29
    26ac:	cf 91       	pop	r28
    26ae:	1f 91       	pop	r17
    26b0:	0f 91       	pop	r16
    26b2:	08 95       	ret

000026b4 <I2C_Init>:
 */ 
#include "TWI.h"

void I2C_Init(void)
{
	TWBR=0x48; //скорость передачи (при 8 мГц получается 100 кГц)
    26b4:	88 e4       	ldi	r24, 0x48	; 72
    26b6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    26ba:	08 95       	ret

000026bc <USART_Init>:
 */ 
#include "usart.h"

void USART_Init( unsigned int speed)//Инициализация модуля USART
{	
  UBRR0H = (unsigned char)(speed>>8);
    26bc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  UBRR0L = (unsigned char)speed;
    26c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  UCSR0B=(1<<RXEN0)|( 1<<TXEN0); //Включаем прием и передачу по USART
    26c4:	e1 ec       	ldi	r30, 0xC1	; 193
    26c6:	f0 e0       	ldi	r31, 0x00	; 0
    26c8:	88 e1       	ldi	r24, 0x18	; 24
    26ca:	80 83       	st	Z, r24
  UCSR0B |= (1<<RXCIE0); //Разрешаем прерывание при приеме
    26cc:	80 81       	ld	r24, Z
    26ce:	80 68       	ori	r24, 0x80	; 128
    26d0:	80 83       	st	Z, r24
  UCSR0A |= (1<<U2X0); // Для 8 мгц, удвоение скорости
    26d2:	e0 ec       	ldi	r30, 0xC0	; 192
    26d4:	f0 e0       	ldi	r31, 0x00	; 0
    26d6:	80 81       	ld	r24, Z
    26d8:	82 60       	ori	r24, 0x02	; 2
    26da:	80 83       	st	Z, r24
  UCSR0C |= (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);// Обращаемся именно к регистру UCSRC (URSEL=1),
    26dc:	e2 ec       	ldi	r30, 0xC2	; 194
    26de:	f0 e0       	ldi	r31, 0x00	; 0
    26e0:	80 81       	ld	r24, Z
    26e2:	8e 60       	ori	r24, 0x0E	; 14
    26e4:	80 83       	st	Z, r24
    26e6:	08 95       	ret

000026e8 <USART_Transmit>:
  //ассинхронный режим (UMSEL=0), без контроля четности (UPM1=0 и UPM0=0),
  //2 стоп-бит (USBS=1), 8-бит посылка (UCSZ1=1 и UCSZ0=1)
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
    26e8:	dc 01       	movw	r26, r24
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    26ea:	80 e0       	ldi	r24, 0x00	; 0
    26ec:	0b c0       	rjmp	.+22     	; 0x2704 <USART_Transmit+0x1c>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
    26ee:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    26f2:	95 ff       	sbrs	r25, 5
    26f4:	fc cf       	rjmp	.-8      	; 0x26ee <USART_Transmit+0x6>
	  UDR0 = data[i]; //Начало передачи данных
    26f6:	fd 01       	movw	r30, r26
    26f8:	e2 0f       	add	r30, r18
    26fa:	f3 1f       	adc	r31, r19
    26fc:	90 81       	ld	r25, Z
    26fe:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    2702:	8f 5f       	subi	r24, 0xFF	; 255
    2704:	28 2f       	mov	r18, r24
    2706:	30 e0       	ldi	r19, 0x00	; 0
    2708:	fd 01       	movw	r30, r26
    270a:	01 90       	ld	r0, Z+
    270c:	00 20       	and	r0, r0
    270e:	e9 f7       	brne	.-6      	; 0x270a <USART_Transmit+0x22>
    2710:	31 97       	sbiw	r30, 0x01	; 1
    2712:	ea 1b       	sub	r30, r26
    2714:	fb 0b       	sbc	r31, r27
    2716:	2e 17       	cp	r18, r30
    2718:	3f 07       	cpc	r19, r31
    271a:	48 f3       	brcs	.-46     	; 0x26ee <USART_Transmit+0x6>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
	  UDR0 = data[i]; //Начало передачи данных
  }

}
    271c:	08 95       	ret

0000271e <Print_Hello_World>:
 */ 
#include "WeatherStation.h"

//Окно приветсвия на экране дисплея
void Print_Hello_World(uint8_t *Frame_buffer)
{
    271e:	cf 93       	push	r28
    2720:	df 93       	push	r29
    2722:	ec 01       	movw	r28, r24
		
	LCD_12864_GrapnicMode(1);
    2724:	81 e0       	ldi	r24, 0x01	; 1
    2726:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	LCD_12864_Draw_rectangle(0, 0, 127, 63);
    272a:	2f e3       	ldi	r18, 0x3F	; 63
    272c:	30 e0       	ldi	r19, 0x00	; 0
    272e:	4f e7       	ldi	r20, 0x7F	; 127
    2730:	50 e0       	ldi	r21, 0x00	; 0
    2732:	60 e0       	ldi	r22, 0x00	; 0
    2734:	70 e0       	ldi	r23, 0x00	; 0
    2736:	80 e0       	ldi	r24, 0x00	; 0
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_rectangle(1, 1, 125, 61);
    273e:	2d e3       	ldi	r18, 0x3D	; 61
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	4d e7       	ldi	r20, 0x7D	; 125
    2744:	50 e0       	ldi	r21, 0x00	; 0
    2746:	61 e0       	ldi	r22, 0x01	; 1
    2748:	70 e0       	ldi	r23, 0x00	; 0
    274a:	81 e0       	ldi	r24, 0x01	; 1
    274c:	90 e0       	ldi	r25, 0x00	; 0
    274e:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_rectangle(2, 2, 123, 59);
    2752:	2b e3       	ldi	r18, 0x3B	; 59
    2754:	30 e0       	ldi	r19, 0x00	; 0
    2756:	4b e7       	ldi	r20, 0x7B	; 123
    2758:	50 e0       	ldi	r21, 0x00	; 0
    275a:	62 e0       	ldi	r22, 0x02	; 2
    275c:	70 e0       	ldi	r23, 0x00	; 0
    275e:	82 e0       	ldi	r24, 0x02	; 2
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_rectangle(3, 3, 121, 57);
    2766:	29 e3       	ldi	r18, 0x39	; 57
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	49 e7       	ldi	r20, 0x79	; 121
    276c:	50 e0       	ldi	r21, 0x00	; 0
    276e:	63 e0       	ldi	r22, 0x03	; 3
    2770:	70 e0       	ldi	r23, 0x00	; 0
    2772:	83 e0       	ldi	r24, 0x03	; 3
    2774:	90 e0       	ldi	r25, 0x00	; 0
    2776:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_bitmap(Frame_buffer);
    277a:	ce 01       	movw	r24, r28
    277c:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
    2780:	80 e0       	ldi	r24, 0x00	; 0
    2782:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	setpos_LCD_12864(3, 1);
    2786:	61 e0       	ldi	r22, 0x01	; 1
    2788:	70 e0       	ldi	r23, 0x00	; 0
    278a:	83 e0       	ldi	r24, 0x03	; 3
    278c:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	str_LCD_12864 ("HOME");
    2790:	8e e4       	ldi	r24, 0x4E	; 78
    2792:	91 e0       	ldi	r25, 0x01	; 1
    2794:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
	setpos_LCD_12864(1, 2);
    2798:	62 e0       	ldi	r22, 0x02	; 2
    279a:	70 e0       	ldi	r23, 0x00	; 0
    279c:	81 e0       	ldi	r24, 0x01	; 1
    279e:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	str_LCD_12864 ("METEOSTATION");
    27a2:	83 e5       	ldi	r24, 0x53	; 83
    27a4:	91 e0       	ldi	r25, 0x01	; 1
    27a6:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
    27aa:	2f ef       	ldi	r18, 0xFF	; 255
    27ac:	8b e7       	ldi	r24, 0x7B	; 123
    27ae:	92 e9       	ldi	r25, 0x92	; 146
    27b0:	21 50       	subi	r18, 0x01	; 1
    27b2:	80 40       	sbci	r24, 0x00	; 0
    27b4:	90 40       	sbci	r25, 0x00	; 0
    27b6:	e1 f7       	brne	.-8      	; 0x27b0 <Print_Hello_World+0x92>
    27b8:	00 c0       	rjmp	.+0      	; 0x27ba <Print_Hello_World+0x9c>
    27ba:	00 00       	nop
	_delay_ms(3000);
	clear_LCD_12864();
    27bc:	0e 94 3f 03 	call	0x67e	; 0x67e <clear_LCD_12864>
	LCD_12864_GrapnicMode(1);
    27c0:	81 e0       	ldi	r24, 0x01	; 1
    27c2:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	LCD_12864_Draw_bitmap(Frame_buffer);
    27c6:	ce 01       	movw	r24, r28
    27c8:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <LCD_12864_Draw_bitmap>
	LCD_12864_Clean();
    27cc:	0e 94 98 04 	call	0x930	; 0x930 <LCD_12864_Clean>
	LCD_12864_GrapnicMode(0);
    27d0:	80 e0       	ldi	r24, 0x00	; 0
    27d2:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	
}
    27d6:	df 91       	pop	r29
    27d8:	cf 91       	pop	r28
    27da:	08 95       	ret

000027dc <RAIN_AMOUNT>:
//Вычисление кол-ва осадков
float RAIN_AMOUNT(char *adc_value)
{
    27dc:	cf 93       	push	r28
    27de:	df 93       	push	r29
    27e0:	00 d0       	rcall	.+0      	; 0x27e2 <RAIN_AMOUNT+0x6>
    27e2:	cd b7       	in	r28, 0x3d	; 61
    27e4:	de b7       	in	r29, 0x3e	; 62
	float RAIN;
	int R;
	if (strlen(adc_value) != 0)
    27e6:	fc 01       	movw	r30, r24
    27e8:	20 81       	ld	r18, Z
    27ea:	22 23       	and	r18, r18
    27ec:	a1 f0       	breq	.+40     	; 0x2816 <RAIN_AMOUNT+0x3a>
	{
		sscanf(adc_value, "%d", &R);
    27ee:	9e 01       	movw	r18, r28
    27f0:	2f 5f       	subi	r18, 0xFF	; 255
    27f2:	3f 4f       	sbci	r19, 0xFF	; 255
    27f4:	3f 93       	push	r19
    27f6:	2f 93       	push	r18
    27f8:	20 e6       	ldi	r18, 0x60	; 96
    27fa:	31 e0       	ldi	r19, 0x01	; 1
    27fc:	3f 93       	push	r19
    27fe:	2f 93       	push	r18
    2800:	9f 93       	push	r25
    2802:	8f 93       	push	r24
    2804:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <sscanf>
    2808:	0f 90       	pop	r0
    280a:	0f 90       	pop	r0
    280c:	0f 90       	pop	r0
    280e:	0f 90       	pop	r0
    2810:	0f 90       	pop	r0
    2812:	0f 90       	pop	r0
    2814:	02 c0       	rjmp	.+4      	; 0x281a <RAIN_AMOUNT+0x3e>
	}
	else
	{
		R = 0;
    2816:	1a 82       	std	Y+2, r1	; 0x02
    2818:	19 82       	std	Y+1, r1	; 0x01
	}
	RAIN = 3*R*2.45/5120;
    281a:	69 81       	ldd	r22, Y+1	; 0x01
    281c:	7a 81       	ldd	r23, Y+2	; 0x02
    281e:	cb 01       	movw	r24, r22
    2820:	88 0f       	add	r24, r24
    2822:	99 1f       	adc	r25, r25
    2824:	68 0f       	add	r22, r24
    2826:	79 1f       	adc	r23, r25
    2828:	07 2e       	mov	r0, r23
    282a:	00 0c       	add	r0, r0
    282c:	88 0b       	sbc	r24, r24
    282e:	99 0b       	sbc	r25, r25
    2830:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__floatsisf>
    2834:	2d ec       	ldi	r18, 0xCD	; 205
    2836:	3c ec       	ldi	r19, 0xCC	; 204
    2838:	4c e1       	ldi	r20, 0x1C	; 28
    283a:	50 e4       	ldi	r21, 0x40	; 64
    283c:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <__mulsf3>
    2840:	20 e0       	ldi	r18, 0x00	; 0
    2842:	30 e0       	ldi	r19, 0x00	; 0
    2844:	40 ea       	ldi	r20, 0xA0	; 160
    2846:	55 e4       	ldi	r21, 0x45	; 69
    2848:	0e 94 a1 14 	call	0x2942	; 0x2942 <__divsf3>
	
	return RAIN;
}
    284c:	0f 90       	pop	r0
    284e:	0f 90       	pop	r0
    2850:	df 91       	pop	r29
    2852:	cf 91       	pop	r28
    2854:	08 95       	ret

00002856 <V_BAT>:
//Вычисление уровня заряда АКБ
float V_BAT (char *adc_value)
{
    2856:	cf 93       	push	r28
    2858:	df 93       	push	r29
    285a:	00 d0       	rcall	.+0      	; 0x285c <V_BAT+0x6>
    285c:	cd b7       	in	r28, 0x3d	; 61
    285e:	de b7       	in	r29, 0x3e	; 62
	float VBAT;
	int V;
	if (strlen(adc_value) != 0)
    2860:	fc 01       	movw	r30, r24
    2862:	20 81       	ld	r18, Z
    2864:	22 23       	and	r18, r18
    2866:	a1 f0       	breq	.+40     	; 0x2890 <V_BAT+0x3a>
	{
		sscanf(adc_value, "%d", &V);
    2868:	9e 01       	movw	r18, r28
    286a:	2f 5f       	subi	r18, 0xFF	; 255
    286c:	3f 4f       	sbci	r19, 0xFF	; 255
    286e:	3f 93       	push	r19
    2870:	2f 93       	push	r18
    2872:	20 e6       	ldi	r18, 0x60	; 96
    2874:	31 e0       	ldi	r19, 0x01	; 1
    2876:	3f 93       	push	r19
    2878:	2f 93       	push	r18
    287a:	9f 93       	push	r25
    287c:	8f 93       	push	r24
    287e:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <sscanf>
    2882:	0f 90       	pop	r0
    2884:	0f 90       	pop	r0
    2886:	0f 90       	pop	r0
    2888:	0f 90       	pop	r0
    288a:	0f 90       	pop	r0
    288c:	0f 90       	pop	r0
    288e:	02 c0       	rjmp	.+4      	; 0x2894 <V_BAT+0x3e>
	}
	else
	{
		V = 0;
    2890:	1a 82       	std	Y+2, r1	; 0x02
    2892:	19 82       	std	Y+1, r1	; 0x01
	}
	VBAT = V*2.45*3/1024;
    2894:	69 81       	ldd	r22, Y+1	; 0x01
    2896:	7a 81       	ldd	r23, Y+2	; 0x02
    2898:	07 2e       	mov	r0, r23
    289a:	00 0c       	add	r0, r0
    289c:	88 0b       	sbc	r24, r24
    289e:	99 0b       	sbc	r25, r25
    28a0:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__floatsisf>
    28a4:	2d ec       	ldi	r18, 0xCD	; 205
    28a6:	3c ec       	ldi	r19, 0xCC	; 204
    28a8:	4c e1       	ldi	r20, 0x1C	; 28
    28aa:	50 e4       	ldi	r21, 0x40	; 64
    28ac:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <__mulsf3>
    28b0:	20 e0       	ldi	r18, 0x00	; 0
    28b2:	30 e0       	ldi	r19, 0x00	; 0
    28b4:	40 e4       	ldi	r20, 0x40	; 64
    28b6:	50 e4       	ldi	r21, 0x40	; 64
    28b8:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <__mulsf3>
    28bc:	20 e0       	ldi	r18, 0x00	; 0
    28be:	30 e0       	ldi	r19, 0x00	; 0
    28c0:	40 e8       	ldi	r20, 0x80	; 128
    28c2:	5a e3       	ldi	r21, 0x3A	; 58
    28c4:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <__mulsf3>
	
	return VBAT;
}
    28c8:	0f 90       	pop	r0
    28ca:	0f 90       	pop	r0
    28cc:	df 91       	pop	r29
    28ce:	cf 91       	pop	r28
    28d0:	08 95       	ret

000028d2 <wind_speed>:
//Вычисление скорости ветра
float wind_speed (char *counter)
{
    28d2:	cf 93       	push	r28
    28d4:	df 93       	push	r29
    28d6:	00 d0       	rcall	.+0      	; 0x28d8 <wind_speed+0x6>
    28d8:	cd b7       	in	r28, 0x3d	; 61
    28da:	de b7       	in	r29, 0x3e	; 62
	float RADIUS = 0.09;
	float speed = 0;
	int n;
	if (strlen(counter) != 0)
    28dc:	fc 01       	movw	r30, r24
    28de:	20 81       	ld	r18, Z
    28e0:	22 23       	and	r18, r18
    28e2:	a1 f0       	breq	.+40     	; 0x290c <wind_speed+0x3a>
	{
		sscanf(counter, "%d", &n);
    28e4:	9e 01       	movw	r18, r28
    28e6:	2f 5f       	subi	r18, 0xFF	; 255
    28e8:	3f 4f       	sbci	r19, 0xFF	; 255
    28ea:	3f 93       	push	r19
    28ec:	2f 93       	push	r18
    28ee:	20 e6       	ldi	r18, 0x60	; 96
    28f0:	31 e0       	ldi	r19, 0x01	; 1
    28f2:	3f 93       	push	r19
    28f4:	2f 93       	push	r18
    28f6:	9f 93       	push	r25
    28f8:	8f 93       	push	r24
    28fa:	0e 94 5c 1b 	call	0x36b8	; 0x36b8 <sscanf>
    28fe:	0f 90       	pop	r0
    2900:	0f 90       	pop	r0
    2902:	0f 90       	pop	r0
    2904:	0f 90       	pop	r0
    2906:	0f 90       	pop	r0
    2908:	0f 90       	pop	r0
    290a:	02 c0       	rjmp	.+4      	; 0x2910 <wind_speed+0x3e>
	}
	else
	{
		n = 0;
    290c:	1a 82       	std	Y+2, r1	; 0x02
    290e:	19 82       	std	Y+1, r1	; 0x01
	}
	speed = 2*3.14*RADIUS*n/4; //период 2 сек+2 магнита
    2910:	69 81       	ldd	r22, Y+1	; 0x01
    2912:	7a 81       	ldd	r23, Y+2	; 0x02
    2914:	07 2e       	mov	r0, r23
    2916:	00 0c       	add	r0, r0
    2918:	88 0b       	sbc	r24, r24
    291a:	99 0b       	sbc	r25, r25
    291c:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__floatsisf>
    2920:	23 ef       	ldi	r18, 0xF3	; 243
    2922:	30 eb       	ldi	r19, 0xB0	; 176
    2924:	40 e1       	ldi	r20, 0x10	; 16
    2926:	5f e3       	ldi	r21, 0x3F	; 63
    2928:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <__mulsf3>
    292c:	20 e0       	ldi	r18, 0x00	; 0
    292e:	30 e0       	ldi	r19, 0x00	; 0
    2930:	40 e8       	ldi	r20, 0x80	; 128
    2932:	5e e3       	ldi	r21, 0x3E	; 62
    2934:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <__mulsf3>
	
	return speed;
    2938:	0f 90       	pop	r0
    293a:	0f 90       	pop	r0
    293c:	df 91       	pop	r29
    293e:	cf 91       	pop	r28
    2940:	08 95       	ret

00002942 <__divsf3>:
    2942:	0e 94 b5 14 	call	0x296a	; 0x296a <__divsf3x>
    2946:	0c 94 67 15 	jmp	0x2ace	; 0x2ace <__fp_round>
    294a:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <__fp_pscB>
    294e:	58 f0       	brcs	.+22     	; 0x2966 <__divsf3+0x24>
    2950:	0e 94 59 15 	call	0x2ab2	; 0x2ab2 <__fp_pscA>
    2954:	40 f0       	brcs	.+16     	; 0x2966 <__divsf3+0x24>
    2956:	29 f4       	brne	.+10     	; 0x2962 <__divsf3+0x20>
    2958:	5f 3f       	cpi	r21, 0xFF	; 255
    295a:	29 f0       	breq	.+10     	; 0x2966 <__divsf3+0x24>
    295c:	0c 94 50 15 	jmp	0x2aa0	; 0x2aa0 <__fp_inf>
    2960:	51 11       	cpse	r21, r1
    2962:	0c 94 9b 15 	jmp	0x2b36	; 0x2b36 <__fp_szero>
    2966:	0c 94 56 15 	jmp	0x2aac	; 0x2aac <__fp_nan>

0000296a <__divsf3x>:
    296a:	0e 94 78 15 	call	0x2af0	; 0x2af0 <__fp_split3>
    296e:	68 f3       	brcs	.-38     	; 0x294a <__divsf3+0x8>

00002970 <__divsf3_pse>:
    2970:	99 23       	and	r25, r25
    2972:	b1 f3       	breq	.-20     	; 0x2960 <__divsf3+0x1e>
    2974:	55 23       	and	r21, r21
    2976:	91 f3       	breq	.-28     	; 0x295c <__divsf3+0x1a>
    2978:	95 1b       	sub	r25, r21
    297a:	55 0b       	sbc	r21, r21
    297c:	bb 27       	eor	r27, r27
    297e:	aa 27       	eor	r26, r26
    2980:	62 17       	cp	r22, r18
    2982:	73 07       	cpc	r23, r19
    2984:	84 07       	cpc	r24, r20
    2986:	38 f0       	brcs	.+14     	; 0x2996 <__divsf3_pse+0x26>
    2988:	9f 5f       	subi	r25, 0xFF	; 255
    298a:	5f 4f       	sbci	r21, 0xFF	; 255
    298c:	22 0f       	add	r18, r18
    298e:	33 1f       	adc	r19, r19
    2990:	44 1f       	adc	r20, r20
    2992:	aa 1f       	adc	r26, r26
    2994:	a9 f3       	breq	.-22     	; 0x2980 <__divsf3_pse+0x10>
    2996:	35 d0       	rcall	.+106    	; 0x2a02 <__divsf3_pse+0x92>
    2998:	0e 2e       	mov	r0, r30
    299a:	3a f0       	brmi	.+14     	; 0x29aa <__divsf3_pse+0x3a>
    299c:	e0 e8       	ldi	r30, 0x80	; 128
    299e:	32 d0       	rcall	.+100    	; 0x2a04 <__divsf3_pse+0x94>
    29a0:	91 50       	subi	r25, 0x01	; 1
    29a2:	50 40       	sbci	r21, 0x00	; 0
    29a4:	e6 95       	lsr	r30
    29a6:	00 1c       	adc	r0, r0
    29a8:	ca f7       	brpl	.-14     	; 0x299c <__divsf3_pse+0x2c>
    29aa:	2b d0       	rcall	.+86     	; 0x2a02 <__divsf3_pse+0x92>
    29ac:	fe 2f       	mov	r31, r30
    29ae:	29 d0       	rcall	.+82     	; 0x2a02 <__divsf3_pse+0x92>
    29b0:	66 0f       	add	r22, r22
    29b2:	77 1f       	adc	r23, r23
    29b4:	88 1f       	adc	r24, r24
    29b6:	bb 1f       	adc	r27, r27
    29b8:	26 17       	cp	r18, r22
    29ba:	37 07       	cpc	r19, r23
    29bc:	48 07       	cpc	r20, r24
    29be:	ab 07       	cpc	r26, r27
    29c0:	b0 e8       	ldi	r27, 0x80	; 128
    29c2:	09 f0       	breq	.+2      	; 0x29c6 <__divsf3_pse+0x56>
    29c4:	bb 0b       	sbc	r27, r27
    29c6:	80 2d       	mov	r24, r0
    29c8:	bf 01       	movw	r22, r30
    29ca:	ff 27       	eor	r31, r31
    29cc:	93 58       	subi	r25, 0x83	; 131
    29ce:	5f 4f       	sbci	r21, 0xFF	; 255
    29d0:	3a f0       	brmi	.+14     	; 0x29e0 <__divsf3_pse+0x70>
    29d2:	9e 3f       	cpi	r25, 0xFE	; 254
    29d4:	51 05       	cpc	r21, r1
    29d6:	78 f0       	brcs	.+30     	; 0x29f6 <__divsf3_pse+0x86>
    29d8:	0c 94 50 15 	jmp	0x2aa0	; 0x2aa0 <__fp_inf>
    29dc:	0c 94 9b 15 	jmp	0x2b36	; 0x2b36 <__fp_szero>
    29e0:	5f 3f       	cpi	r21, 0xFF	; 255
    29e2:	e4 f3       	brlt	.-8      	; 0x29dc <__divsf3_pse+0x6c>
    29e4:	98 3e       	cpi	r25, 0xE8	; 232
    29e6:	d4 f3       	brlt	.-12     	; 0x29dc <__divsf3_pse+0x6c>
    29e8:	86 95       	lsr	r24
    29ea:	77 95       	ror	r23
    29ec:	67 95       	ror	r22
    29ee:	b7 95       	ror	r27
    29f0:	f7 95       	ror	r31
    29f2:	9f 5f       	subi	r25, 0xFF	; 255
    29f4:	c9 f7       	brne	.-14     	; 0x29e8 <__divsf3_pse+0x78>
    29f6:	88 0f       	add	r24, r24
    29f8:	91 1d       	adc	r25, r1
    29fa:	96 95       	lsr	r25
    29fc:	87 95       	ror	r24
    29fe:	97 f9       	bld	r25, 7
    2a00:	08 95       	ret
    2a02:	e1 e0       	ldi	r30, 0x01	; 1
    2a04:	66 0f       	add	r22, r22
    2a06:	77 1f       	adc	r23, r23
    2a08:	88 1f       	adc	r24, r24
    2a0a:	bb 1f       	adc	r27, r27
    2a0c:	62 17       	cp	r22, r18
    2a0e:	73 07       	cpc	r23, r19
    2a10:	84 07       	cpc	r24, r20
    2a12:	ba 07       	cpc	r27, r26
    2a14:	20 f0       	brcs	.+8      	; 0x2a1e <__divsf3_pse+0xae>
    2a16:	62 1b       	sub	r22, r18
    2a18:	73 0b       	sbc	r23, r19
    2a1a:	84 0b       	sbc	r24, r20
    2a1c:	ba 0b       	sbc	r27, r26
    2a1e:	ee 1f       	adc	r30, r30
    2a20:	88 f7       	brcc	.-30     	; 0x2a04 <__divsf3_pse+0x94>
    2a22:	e0 95       	com	r30
    2a24:	08 95       	ret

00002a26 <__floatunsisf>:
    2a26:	e8 94       	clt
    2a28:	09 c0       	rjmp	.+18     	; 0x2a3c <__floatsisf+0x12>

00002a2a <__floatsisf>:
    2a2a:	97 fb       	bst	r25, 7
    2a2c:	3e f4       	brtc	.+14     	; 0x2a3c <__floatsisf+0x12>
    2a2e:	90 95       	com	r25
    2a30:	80 95       	com	r24
    2a32:	70 95       	com	r23
    2a34:	61 95       	neg	r22
    2a36:	7f 4f       	sbci	r23, 0xFF	; 255
    2a38:	8f 4f       	sbci	r24, 0xFF	; 255
    2a3a:	9f 4f       	sbci	r25, 0xFF	; 255
    2a3c:	99 23       	and	r25, r25
    2a3e:	a9 f0       	breq	.+42     	; 0x2a6a <__floatsisf+0x40>
    2a40:	f9 2f       	mov	r31, r25
    2a42:	96 e9       	ldi	r25, 0x96	; 150
    2a44:	bb 27       	eor	r27, r27
    2a46:	93 95       	inc	r25
    2a48:	f6 95       	lsr	r31
    2a4a:	87 95       	ror	r24
    2a4c:	77 95       	ror	r23
    2a4e:	67 95       	ror	r22
    2a50:	b7 95       	ror	r27
    2a52:	f1 11       	cpse	r31, r1
    2a54:	f8 cf       	rjmp	.-16     	; 0x2a46 <__floatsisf+0x1c>
    2a56:	fa f4       	brpl	.+62     	; 0x2a96 <__floatsisf+0x6c>
    2a58:	bb 0f       	add	r27, r27
    2a5a:	11 f4       	brne	.+4      	; 0x2a60 <__floatsisf+0x36>
    2a5c:	60 ff       	sbrs	r22, 0
    2a5e:	1b c0       	rjmp	.+54     	; 0x2a96 <__floatsisf+0x6c>
    2a60:	6f 5f       	subi	r22, 0xFF	; 255
    2a62:	7f 4f       	sbci	r23, 0xFF	; 255
    2a64:	8f 4f       	sbci	r24, 0xFF	; 255
    2a66:	9f 4f       	sbci	r25, 0xFF	; 255
    2a68:	16 c0       	rjmp	.+44     	; 0x2a96 <__floatsisf+0x6c>
    2a6a:	88 23       	and	r24, r24
    2a6c:	11 f0       	breq	.+4      	; 0x2a72 <__floatsisf+0x48>
    2a6e:	96 e9       	ldi	r25, 0x96	; 150
    2a70:	11 c0       	rjmp	.+34     	; 0x2a94 <__floatsisf+0x6a>
    2a72:	77 23       	and	r23, r23
    2a74:	21 f0       	breq	.+8      	; 0x2a7e <__floatsisf+0x54>
    2a76:	9e e8       	ldi	r25, 0x8E	; 142
    2a78:	87 2f       	mov	r24, r23
    2a7a:	76 2f       	mov	r23, r22
    2a7c:	05 c0       	rjmp	.+10     	; 0x2a88 <__floatsisf+0x5e>
    2a7e:	66 23       	and	r22, r22
    2a80:	71 f0       	breq	.+28     	; 0x2a9e <__floatsisf+0x74>
    2a82:	96 e8       	ldi	r25, 0x86	; 134
    2a84:	86 2f       	mov	r24, r22
    2a86:	70 e0       	ldi	r23, 0x00	; 0
    2a88:	60 e0       	ldi	r22, 0x00	; 0
    2a8a:	2a f0       	brmi	.+10     	; 0x2a96 <__floatsisf+0x6c>
    2a8c:	9a 95       	dec	r25
    2a8e:	66 0f       	add	r22, r22
    2a90:	77 1f       	adc	r23, r23
    2a92:	88 1f       	adc	r24, r24
    2a94:	da f7       	brpl	.-10     	; 0x2a8c <__floatsisf+0x62>
    2a96:	88 0f       	add	r24, r24
    2a98:	96 95       	lsr	r25
    2a9a:	87 95       	ror	r24
    2a9c:	97 f9       	bld	r25, 7
    2a9e:	08 95       	ret

00002aa0 <__fp_inf>:
    2aa0:	97 f9       	bld	r25, 7
    2aa2:	9f 67       	ori	r25, 0x7F	; 127
    2aa4:	80 e8       	ldi	r24, 0x80	; 128
    2aa6:	70 e0       	ldi	r23, 0x00	; 0
    2aa8:	60 e0       	ldi	r22, 0x00	; 0
    2aaa:	08 95       	ret

00002aac <__fp_nan>:
    2aac:	9f ef       	ldi	r25, 0xFF	; 255
    2aae:	80 ec       	ldi	r24, 0xC0	; 192
    2ab0:	08 95       	ret

00002ab2 <__fp_pscA>:
    2ab2:	00 24       	eor	r0, r0
    2ab4:	0a 94       	dec	r0
    2ab6:	16 16       	cp	r1, r22
    2ab8:	17 06       	cpc	r1, r23
    2aba:	18 06       	cpc	r1, r24
    2abc:	09 06       	cpc	r0, r25
    2abe:	08 95       	ret

00002ac0 <__fp_pscB>:
    2ac0:	00 24       	eor	r0, r0
    2ac2:	0a 94       	dec	r0
    2ac4:	12 16       	cp	r1, r18
    2ac6:	13 06       	cpc	r1, r19
    2ac8:	14 06       	cpc	r1, r20
    2aca:	05 06       	cpc	r0, r21
    2acc:	08 95       	ret

00002ace <__fp_round>:
    2ace:	09 2e       	mov	r0, r25
    2ad0:	03 94       	inc	r0
    2ad2:	00 0c       	add	r0, r0
    2ad4:	11 f4       	brne	.+4      	; 0x2ada <__fp_round+0xc>
    2ad6:	88 23       	and	r24, r24
    2ad8:	52 f0       	brmi	.+20     	; 0x2aee <__fp_round+0x20>
    2ada:	bb 0f       	add	r27, r27
    2adc:	40 f4       	brcc	.+16     	; 0x2aee <__fp_round+0x20>
    2ade:	bf 2b       	or	r27, r31
    2ae0:	11 f4       	brne	.+4      	; 0x2ae6 <__fp_round+0x18>
    2ae2:	60 ff       	sbrs	r22, 0
    2ae4:	04 c0       	rjmp	.+8      	; 0x2aee <__fp_round+0x20>
    2ae6:	6f 5f       	subi	r22, 0xFF	; 255
    2ae8:	7f 4f       	sbci	r23, 0xFF	; 255
    2aea:	8f 4f       	sbci	r24, 0xFF	; 255
    2aec:	9f 4f       	sbci	r25, 0xFF	; 255
    2aee:	08 95       	ret

00002af0 <__fp_split3>:
    2af0:	57 fd       	sbrc	r21, 7
    2af2:	90 58       	subi	r25, 0x80	; 128
    2af4:	44 0f       	add	r20, r20
    2af6:	55 1f       	adc	r21, r21
    2af8:	59 f0       	breq	.+22     	; 0x2b10 <__fp_splitA+0x10>
    2afa:	5f 3f       	cpi	r21, 0xFF	; 255
    2afc:	71 f0       	breq	.+28     	; 0x2b1a <__fp_splitA+0x1a>
    2afe:	47 95       	ror	r20

00002b00 <__fp_splitA>:
    2b00:	88 0f       	add	r24, r24
    2b02:	97 fb       	bst	r25, 7
    2b04:	99 1f       	adc	r25, r25
    2b06:	61 f0       	breq	.+24     	; 0x2b20 <__fp_splitA+0x20>
    2b08:	9f 3f       	cpi	r25, 0xFF	; 255
    2b0a:	79 f0       	breq	.+30     	; 0x2b2a <__fp_splitA+0x2a>
    2b0c:	87 95       	ror	r24
    2b0e:	08 95       	ret
    2b10:	12 16       	cp	r1, r18
    2b12:	13 06       	cpc	r1, r19
    2b14:	14 06       	cpc	r1, r20
    2b16:	55 1f       	adc	r21, r21
    2b18:	f2 cf       	rjmp	.-28     	; 0x2afe <__fp_split3+0xe>
    2b1a:	46 95       	lsr	r20
    2b1c:	f1 df       	rcall	.-30     	; 0x2b00 <__fp_splitA>
    2b1e:	08 c0       	rjmp	.+16     	; 0x2b30 <__fp_splitA+0x30>
    2b20:	16 16       	cp	r1, r22
    2b22:	17 06       	cpc	r1, r23
    2b24:	18 06       	cpc	r1, r24
    2b26:	99 1f       	adc	r25, r25
    2b28:	f1 cf       	rjmp	.-30     	; 0x2b0c <__fp_splitA+0xc>
    2b2a:	86 95       	lsr	r24
    2b2c:	71 05       	cpc	r23, r1
    2b2e:	61 05       	cpc	r22, r1
    2b30:	08 94       	sec
    2b32:	08 95       	ret

00002b34 <__fp_zero>:
    2b34:	e8 94       	clt

00002b36 <__fp_szero>:
    2b36:	bb 27       	eor	r27, r27
    2b38:	66 27       	eor	r22, r22
    2b3a:	77 27       	eor	r23, r23
    2b3c:	cb 01       	movw	r24, r22
    2b3e:	97 f9       	bld	r25, 7
    2b40:	08 95       	ret

00002b42 <__mulsf3>:
    2b42:	0e 94 b4 15 	call	0x2b68	; 0x2b68 <__mulsf3x>
    2b46:	0c 94 67 15 	jmp	0x2ace	; 0x2ace <__fp_round>
    2b4a:	0e 94 59 15 	call	0x2ab2	; 0x2ab2 <__fp_pscA>
    2b4e:	38 f0       	brcs	.+14     	; 0x2b5e <__mulsf3+0x1c>
    2b50:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <__fp_pscB>
    2b54:	20 f0       	brcs	.+8      	; 0x2b5e <__mulsf3+0x1c>
    2b56:	95 23       	and	r25, r21
    2b58:	11 f0       	breq	.+4      	; 0x2b5e <__mulsf3+0x1c>
    2b5a:	0c 94 50 15 	jmp	0x2aa0	; 0x2aa0 <__fp_inf>
    2b5e:	0c 94 56 15 	jmp	0x2aac	; 0x2aac <__fp_nan>
    2b62:	11 24       	eor	r1, r1
    2b64:	0c 94 9b 15 	jmp	0x2b36	; 0x2b36 <__fp_szero>

00002b68 <__mulsf3x>:
    2b68:	0e 94 78 15 	call	0x2af0	; 0x2af0 <__fp_split3>
    2b6c:	70 f3       	brcs	.-36     	; 0x2b4a <__mulsf3+0x8>

00002b6e <__mulsf3_pse>:
    2b6e:	95 9f       	mul	r25, r21
    2b70:	c1 f3       	breq	.-16     	; 0x2b62 <__mulsf3+0x20>
    2b72:	95 0f       	add	r25, r21
    2b74:	50 e0       	ldi	r21, 0x00	; 0
    2b76:	55 1f       	adc	r21, r21
    2b78:	62 9f       	mul	r22, r18
    2b7a:	f0 01       	movw	r30, r0
    2b7c:	72 9f       	mul	r23, r18
    2b7e:	bb 27       	eor	r27, r27
    2b80:	f0 0d       	add	r31, r0
    2b82:	b1 1d       	adc	r27, r1
    2b84:	63 9f       	mul	r22, r19
    2b86:	aa 27       	eor	r26, r26
    2b88:	f0 0d       	add	r31, r0
    2b8a:	b1 1d       	adc	r27, r1
    2b8c:	aa 1f       	adc	r26, r26
    2b8e:	64 9f       	mul	r22, r20
    2b90:	66 27       	eor	r22, r22
    2b92:	b0 0d       	add	r27, r0
    2b94:	a1 1d       	adc	r26, r1
    2b96:	66 1f       	adc	r22, r22
    2b98:	82 9f       	mul	r24, r18
    2b9a:	22 27       	eor	r18, r18
    2b9c:	b0 0d       	add	r27, r0
    2b9e:	a1 1d       	adc	r26, r1
    2ba0:	62 1f       	adc	r22, r18
    2ba2:	73 9f       	mul	r23, r19
    2ba4:	b0 0d       	add	r27, r0
    2ba6:	a1 1d       	adc	r26, r1
    2ba8:	62 1f       	adc	r22, r18
    2baa:	83 9f       	mul	r24, r19
    2bac:	a0 0d       	add	r26, r0
    2bae:	61 1d       	adc	r22, r1
    2bb0:	22 1f       	adc	r18, r18
    2bb2:	74 9f       	mul	r23, r20
    2bb4:	33 27       	eor	r19, r19
    2bb6:	a0 0d       	add	r26, r0
    2bb8:	61 1d       	adc	r22, r1
    2bba:	23 1f       	adc	r18, r19
    2bbc:	84 9f       	mul	r24, r20
    2bbe:	60 0d       	add	r22, r0
    2bc0:	21 1d       	adc	r18, r1
    2bc2:	82 2f       	mov	r24, r18
    2bc4:	76 2f       	mov	r23, r22
    2bc6:	6a 2f       	mov	r22, r26
    2bc8:	11 24       	eor	r1, r1
    2bca:	9f 57       	subi	r25, 0x7F	; 127
    2bcc:	50 40       	sbci	r21, 0x00	; 0
    2bce:	9a f0       	brmi	.+38     	; 0x2bf6 <__mulsf3_pse+0x88>
    2bd0:	f1 f0       	breq	.+60     	; 0x2c0e <__mulsf3_pse+0xa0>
    2bd2:	88 23       	and	r24, r24
    2bd4:	4a f0       	brmi	.+18     	; 0x2be8 <__mulsf3_pse+0x7a>
    2bd6:	ee 0f       	add	r30, r30
    2bd8:	ff 1f       	adc	r31, r31
    2bda:	bb 1f       	adc	r27, r27
    2bdc:	66 1f       	adc	r22, r22
    2bde:	77 1f       	adc	r23, r23
    2be0:	88 1f       	adc	r24, r24
    2be2:	91 50       	subi	r25, 0x01	; 1
    2be4:	50 40       	sbci	r21, 0x00	; 0
    2be6:	a9 f7       	brne	.-22     	; 0x2bd2 <__mulsf3_pse+0x64>
    2be8:	9e 3f       	cpi	r25, 0xFE	; 254
    2bea:	51 05       	cpc	r21, r1
    2bec:	80 f0       	brcs	.+32     	; 0x2c0e <__mulsf3_pse+0xa0>
    2bee:	0c 94 50 15 	jmp	0x2aa0	; 0x2aa0 <__fp_inf>
    2bf2:	0c 94 9b 15 	jmp	0x2b36	; 0x2b36 <__fp_szero>
    2bf6:	5f 3f       	cpi	r21, 0xFF	; 255
    2bf8:	e4 f3       	brlt	.-8      	; 0x2bf2 <__mulsf3_pse+0x84>
    2bfa:	98 3e       	cpi	r25, 0xE8	; 232
    2bfc:	d4 f3       	brlt	.-12     	; 0x2bf2 <__mulsf3_pse+0x84>
    2bfe:	86 95       	lsr	r24
    2c00:	77 95       	ror	r23
    2c02:	67 95       	ror	r22
    2c04:	b7 95       	ror	r27
    2c06:	f7 95       	ror	r31
    2c08:	e7 95       	ror	r30
    2c0a:	9f 5f       	subi	r25, 0xFF	; 255
    2c0c:	c1 f7       	brne	.-16     	; 0x2bfe <__mulsf3_pse+0x90>
    2c0e:	fe 2b       	or	r31, r30
    2c10:	88 0f       	add	r24, r24
    2c12:	91 1d       	adc	r25, r1
    2c14:	96 95       	lsr	r25
    2c16:	87 95       	ror	r24
    2c18:	97 f9       	bld	r25, 7
    2c1a:	08 95       	ret

00002c1c <vfprintf>:
    2c1c:	a0 e1       	ldi	r26, 0x10	; 16
    2c1e:	b0 e0       	ldi	r27, 0x00	; 0
    2c20:	e4 e1       	ldi	r30, 0x14	; 20
    2c22:	f6 e1       	ldi	r31, 0x16	; 22
    2c24:	0c 94 b8 19 	jmp	0x3370	; 0x3370 <__prologue_saves__>
    2c28:	7c 01       	movw	r14, r24
    2c2a:	1b 01       	movw	r2, r22
    2c2c:	6a 01       	movw	r12, r20
    2c2e:	fc 01       	movw	r30, r24
    2c30:	17 82       	std	Z+7, r1	; 0x07
    2c32:	16 82       	std	Z+6, r1	; 0x06
    2c34:	83 81       	ldd	r24, Z+3	; 0x03
    2c36:	81 ff       	sbrs	r24, 1
    2c38:	44 c3       	rjmp	.+1672   	; 0x32c2 <vfprintf+0x6a6>
    2c3a:	9e 01       	movw	r18, r28
    2c3c:	2f 5f       	subi	r18, 0xFF	; 255
    2c3e:	3f 4f       	sbci	r19, 0xFF	; 255
    2c40:	39 01       	movw	r6, r18
    2c42:	f7 01       	movw	r30, r14
    2c44:	93 81       	ldd	r25, Z+3	; 0x03
    2c46:	f1 01       	movw	r30, r2
    2c48:	93 fd       	sbrc	r25, 3
    2c4a:	85 91       	lpm	r24, Z+
    2c4c:	93 ff       	sbrs	r25, 3
    2c4e:	81 91       	ld	r24, Z+
    2c50:	1f 01       	movw	r2, r30
    2c52:	88 23       	and	r24, r24
    2c54:	09 f4       	brne	.+2      	; 0x2c58 <vfprintf+0x3c>
    2c56:	31 c3       	rjmp	.+1634   	; 0x32ba <vfprintf+0x69e>
    2c58:	85 32       	cpi	r24, 0x25	; 37
    2c5a:	39 f4       	brne	.+14     	; 0x2c6a <vfprintf+0x4e>
    2c5c:	93 fd       	sbrc	r25, 3
    2c5e:	85 91       	lpm	r24, Z+
    2c60:	93 ff       	sbrs	r25, 3
    2c62:	81 91       	ld	r24, Z+
    2c64:	1f 01       	movw	r2, r30
    2c66:	85 32       	cpi	r24, 0x25	; 37
    2c68:	39 f4       	brne	.+14     	; 0x2c78 <vfprintf+0x5c>
    2c6a:	b7 01       	movw	r22, r14
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2c72:	56 01       	movw	r10, r12
    2c74:	65 01       	movw	r12, r10
    2c76:	e5 cf       	rjmp	.-54     	; 0x2c42 <vfprintf+0x26>
    2c78:	10 e0       	ldi	r17, 0x00	; 0
    2c7a:	51 2c       	mov	r5, r1
    2c7c:	91 2c       	mov	r9, r1
    2c7e:	ff e1       	ldi	r31, 0x1F	; 31
    2c80:	f9 15       	cp	r31, r9
    2c82:	d8 f0       	brcs	.+54     	; 0x2cba <vfprintf+0x9e>
    2c84:	8b 32       	cpi	r24, 0x2B	; 43
    2c86:	79 f0       	breq	.+30     	; 0x2ca6 <vfprintf+0x8a>
    2c88:	38 f4       	brcc	.+14     	; 0x2c98 <vfprintf+0x7c>
    2c8a:	80 32       	cpi	r24, 0x20	; 32
    2c8c:	79 f0       	breq	.+30     	; 0x2cac <vfprintf+0x90>
    2c8e:	83 32       	cpi	r24, 0x23	; 35
    2c90:	a1 f4       	brne	.+40     	; 0x2cba <vfprintf+0x9e>
    2c92:	f9 2d       	mov	r31, r9
    2c94:	f0 61       	ori	r31, 0x10	; 16
    2c96:	2e c0       	rjmp	.+92     	; 0x2cf4 <vfprintf+0xd8>
    2c98:	8d 32       	cpi	r24, 0x2D	; 45
    2c9a:	61 f0       	breq	.+24     	; 0x2cb4 <vfprintf+0x98>
    2c9c:	80 33       	cpi	r24, 0x30	; 48
    2c9e:	69 f4       	brne	.+26     	; 0x2cba <vfprintf+0x9e>
    2ca0:	29 2d       	mov	r18, r9
    2ca2:	21 60       	ori	r18, 0x01	; 1
    2ca4:	2d c0       	rjmp	.+90     	; 0x2d00 <vfprintf+0xe4>
    2ca6:	39 2d       	mov	r19, r9
    2ca8:	32 60       	ori	r19, 0x02	; 2
    2caa:	93 2e       	mov	r9, r19
    2cac:	89 2d       	mov	r24, r9
    2cae:	84 60       	ori	r24, 0x04	; 4
    2cb0:	98 2e       	mov	r9, r24
    2cb2:	2a c0       	rjmp	.+84     	; 0x2d08 <vfprintf+0xec>
    2cb4:	e9 2d       	mov	r30, r9
    2cb6:	e8 60       	ori	r30, 0x08	; 8
    2cb8:	15 c0       	rjmp	.+42     	; 0x2ce4 <vfprintf+0xc8>
    2cba:	97 fc       	sbrc	r9, 7
    2cbc:	2d c0       	rjmp	.+90     	; 0x2d18 <vfprintf+0xfc>
    2cbe:	20 ed       	ldi	r18, 0xD0	; 208
    2cc0:	28 0f       	add	r18, r24
    2cc2:	2a 30       	cpi	r18, 0x0A	; 10
    2cc4:	88 f4       	brcc	.+34     	; 0x2ce8 <vfprintf+0xcc>
    2cc6:	96 fe       	sbrs	r9, 6
    2cc8:	06 c0       	rjmp	.+12     	; 0x2cd6 <vfprintf+0xba>
    2cca:	3a e0       	ldi	r19, 0x0A	; 10
    2ccc:	13 9f       	mul	r17, r19
    2cce:	20 0d       	add	r18, r0
    2cd0:	11 24       	eor	r1, r1
    2cd2:	12 2f       	mov	r17, r18
    2cd4:	19 c0       	rjmp	.+50     	; 0x2d08 <vfprintf+0xec>
    2cd6:	8a e0       	ldi	r24, 0x0A	; 10
    2cd8:	58 9e       	mul	r5, r24
    2cda:	20 0d       	add	r18, r0
    2cdc:	11 24       	eor	r1, r1
    2cde:	52 2e       	mov	r5, r18
    2ce0:	e9 2d       	mov	r30, r9
    2ce2:	e0 62       	ori	r30, 0x20	; 32
    2ce4:	9e 2e       	mov	r9, r30
    2ce6:	10 c0       	rjmp	.+32     	; 0x2d08 <vfprintf+0xec>
    2ce8:	8e 32       	cpi	r24, 0x2E	; 46
    2cea:	31 f4       	brne	.+12     	; 0x2cf8 <vfprintf+0xdc>
    2cec:	96 fc       	sbrc	r9, 6
    2cee:	e5 c2       	rjmp	.+1482   	; 0x32ba <vfprintf+0x69e>
    2cf0:	f9 2d       	mov	r31, r9
    2cf2:	f0 64       	ori	r31, 0x40	; 64
    2cf4:	9f 2e       	mov	r9, r31
    2cf6:	08 c0       	rjmp	.+16     	; 0x2d08 <vfprintf+0xec>
    2cf8:	8c 36       	cpi	r24, 0x6C	; 108
    2cfa:	21 f4       	brne	.+8      	; 0x2d04 <vfprintf+0xe8>
    2cfc:	29 2d       	mov	r18, r9
    2cfe:	20 68       	ori	r18, 0x80	; 128
    2d00:	92 2e       	mov	r9, r18
    2d02:	02 c0       	rjmp	.+4      	; 0x2d08 <vfprintf+0xec>
    2d04:	88 36       	cpi	r24, 0x68	; 104
    2d06:	41 f4       	brne	.+16     	; 0x2d18 <vfprintf+0xfc>
    2d08:	f1 01       	movw	r30, r2
    2d0a:	93 fd       	sbrc	r25, 3
    2d0c:	85 91       	lpm	r24, Z+
    2d0e:	93 ff       	sbrs	r25, 3
    2d10:	81 91       	ld	r24, Z+
    2d12:	1f 01       	movw	r2, r30
    2d14:	81 11       	cpse	r24, r1
    2d16:	b3 cf       	rjmp	.-154    	; 0x2c7e <vfprintf+0x62>
    2d18:	9b eb       	ldi	r25, 0xBB	; 187
    2d1a:	98 0f       	add	r25, r24
    2d1c:	93 30       	cpi	r25, 0x03	; 3
    2d1e:	20 f4       	brcc	.+8      	; 0x2d28 <vfprintf+0x10c>
    2d20:	99 2d       	mov	r25, r9
    2d22:	90 61       	ori	r25, 0x10	; 16
    2d24:	80 5e       	subi	r24, 0xE0	; 224
    2d26:	07 c0       	rjmp	.+14     	; 0x2d36 <vfprintf+0x11a>
    2d28:	9b e9       	ldi	r25, 0x9B	; 155
    2d2a:	98 0f       	add	r25, r24
    2d2c:	93 30       	cpi	r25, 0x03	; 3
    2d2e:	08 f0       	brcs	.+2      	; 0x2d32 <vfprintf+0x116>
    2d30:	66 c1       	rjmp	.+716    	; 0x2ffe <vfprintf+0x3e2>
    2d32:	99 2d       	mov	r25, r9
    2d34:	9f 7e       	andi	r25, 0xEF	; 239
    2d36:	96 ff       	sbrs	r25, 6
    2d38:	16 e0       	ldi	r17, 0x06	; 6
    2d3a:	9f 73       	andi	r25, 0x3F	; 63
    2d3c:	99 2e       	mov	r9, r25
    2d3e:	85 36       	cpi	r24, 0x65	; 101
    2d40:	19 f4       	brne	.+6      	; 0x2d48 <vfprintf+0x12c>
    2d42:	90 64       	ori	r25, 0x40	; 64
    2d44:	99 2e       	mov	r9, r25
    2d46:	08 c0       	rjmp	.+16     	; 0x2d58 <vfprintf+0x13c>
    2d48:	86 36       	cpi	r24, 0x66	; 102
    2d4a:	21 f4       	brne	.+8      	; 0x2d54 <vfprintf+0x138>
    2d4c:	39 2f       	mov	r19, r25
    2d4e:	30 68       	ori	r19, 0x80	; 128
    2d50:	93 2e       	mov	r9, r19
    2d52:	02 c0       	rjmp	.+4      	; 0x2d58 <vfprintf+0x13c>
    2d54:	11 11       	cpse	r17, r1
    2d56:	11 50       	subi	r17, 0x01	; 1
    2d58:	97 fe       	sbrs	r9, 7
    2d5a:	07 c0       	rjmp	.+14     	; 0x2d6a <vfprintf+0x14e>
    2d5c:	1c 33       	cpi	r17, 0x3C	; 60
    2d5e:	50 f4       	brcc	.+20     	; 0x2d74 <vfprintf+0x158>
    2d60:	44 24       	eor	r4, r4
    2d62:	43 94       	inc	r4
    2d64:	41 0e       	add	r4, r17
    2d66:	27 e0       	ldi	r18, 0x07	; 7
    2d68:	0b c0       	rjmp	.+22     	; 0x2d80 <vfprintf+0x164>
    2d6a:	18 30       	cpi	r17, 0x08	; 8
    2d6c:	38 f0       	brcs	.+14     	; 0x2d7c <vfprintf+0x160>
    2d6e:	27 e0       	ldi	r18, 0x07	; 7
    2d70:	17 e0       	ldi	r17, 0x07	; 7
    2d72:	05 c0       	rjmp	.+10     	; 0x2d7e <vfprintf+0x162>
    2d74:	27 e0       	ldi	r18, 0x07	; 7
    2d76:	9c e3       	ldi	r25, 0x3C	; 60
    2d78:	49 2e       	mov	r4, r25
    2d7a:	02 c0       	rjmp	.+4      	; 0x2d80 <vfprintf+0x164>
    2d7c:	21 2f       	mov	r18, r17
    2d7e:	41 2c       	mov	r4, r1
    2d80:	56 01       	movw	r10, r12
    2d82:	84 e0       	ldi	r24, 0x04	; 4
    2d84:	a8 0e       	add	r10, r24
    2d86:	b1 1c       	adc	r11, r1
    2d88:	f6 01       	movw	r30, r12
    2d8a:	60 81       	ld	r22, Z
    2d8c:	71 81       	ldd	r23, Z+1	; 0x01
    2d8e:	82 81       	ldd	r24, Z+2	; 0x02
    2d90:	93 81       	ldd	r25, Z+3	; 0x03
    2d92:	04 2d       	mov	r16, r4
    2d94:	a3 01       	movw	r20, r6
    2d96:	0e 94 fe 19 	call	0x33fc	; 0x33fc <__ftoa_engine>
    2d9a:	6c 01       	movw	r12, r24
    2d9c:	f9 81       	ldd	r31, Y+1	; 0x01
    2d9e:	fc 87       	std	Y+12, r31	; 0x0c
    2da0:	f0 ff       	sbrs	r31, 0
    2da2:	02 c0       	rjmp	.+4      	; 0x2da8 <vfprintf+0x18c>
    2da4:	f3 ff       	sbrs	r31, 3
    2da6:	06 c0       	rjmp	.+12     	; 0x2db4 <vfprintf+0x198>
    2da8:	91 fc       	sbrc	r9, 1
    2daa:	06 c0       	rjmp	.+12     	; 0x2db8 <vfprintf+0x19c>
    2dac:	92 fe       	sbrs	r9, 2
    2dae:	06 c0       	rjmp	.+12     	; 0x2dbc <vfprintf+0x1a0>
    2db0:	00 e2       	ldi	r16, 0x20	; 32
    2db2:	05 c0       	rjmp	.+10     	; 0x2dbe <vfprintf+0x1a2>
    2db4:	0d e2       	ldi	r16, 0x2D	; 45
    2db6:	03 c0       	rjmp	.+6      	; 0x2dbe <vfprintf+0x1a2>
    2db8:	0b e2       	ldi	r16, 0x2B	; 43
    2dba:	01 c0       	rjmp	.+2      	; 0x2dbe <vfprintf+0x1a2>
    2dbc:	00 e0       	ldi	r16, 0x00	; 0
    2dbe:	8c 85       	ldd	r24, Y+12	; 0x0c
    2dc0:	8c 70       	andi	r24, 0x0C	; 12
    2dc2:	19 f0       	breq	.+6      	; 0x2dca <vfprintf+0x1ae>
    2dc4:	01 11       	cpse	r16, r1
    2dc6:	5a c2       	rjmp	.+1204   	; 0x327c <vfprintf+0x660>
    2dc8:	9b c2       	rjmp	.+1334   	; 0x3300 <vfprintf+0x6e4>
    2dca:	97 fe       	sbrs	r9, 7
    2dcc:	10 c0       	rjmp	.+32     	; 0x2dee <vfprintf+0x1d2>
    2dce:	4c 0c       	add	r4, r12
    2dd0:	fc 85       	ldd	r31, Y+12	; 0x0c
    2dd2:	f4 ff       	sbrs	r31, 4
    2dd4:	04 c0       	rjmp	.+8      	; 0x2dde <vfprintf+0x1c2>
    2dd6:	8a 81       	ldd	r24, Y+2	; 0x02
    2dd8:	81 33       	cpi	r24, 0x31	; 49
    2dda:	09 f4       	brne	.+2      	; 0x2dde <vfprintf+0x1c2>
    2ddc:	4a 94       	dec	r4
    2dde:	14 14       	cp	r1, r4
    2de0:	74 f5       	brge	.+92     	; 0x2e3e <vfprintf+0x222>
    2de2:	28 e0       	ldi	r18, 0x08	; 8
    2de4:	24 15       	cp	r18, r4
    2de6:	78 f5       	brcc	.+94     	; 0x2e46 <vfprintf+0x22a>
    2de8:	88 e0       	ldi	r24, 0x08	; 8
    2dea:	48 2e       	mov	r4, r24
    2dec:	2c c0       	rjmp	.+88     	; 0x2e46 <vfprintf+0x22a>
    2dee:	96 fc       	sbrc	r9, 6
    2df0:	2a c0       	rjmp	.+84     	; 0x2e46 <vfprintf+0x22a>
    2df2:	81 2f       	mov	r24, r17
    2df4:	90 e0       	ldi	r25, 0x00	; 0
    2df6:	8c 15       	cp	r24, r12
    2df8:	9d 05       	cpc	r25, r13
    2dfa:	9c f0       	brlt	.+38     	; 0x2e22 <vfprintf+0x206>
    2dfc:	3c ef       	ldi	r19, 0xFC	; 252
    2dfe:	c3 16       	cp	r12, r19
    2e00:	3f ef       	ldi	r19, 0xFF	; 255
    2e02:	d3 06       	cpc	r13, r19
    2e04:	74 f0       	brlt	.+28     	; 0x2e22 <vfprintf+0x206>
    2e06:	89 2d       	mov	r24, r9
    2e08:	80 68       	ori	r24, 0x80	; 128
    2e0a:	98 2e       	mov	r9, r24
    2e0c:	0a c0       	rjmp	.+20     	; 0x2e22 <vfprintf+0x206>
    2e0e:	e2 e0       	ldi	r30, 0x02	; 2
    2e10:	f0 e0       	ldi	r31, 0x00	; 0
    2e12:	ec 0f       	add	r30, r28
    2e14:	fd 1f       	adc	r31, r29
    2e16:	e1 0f       	add	r30, r17
    2e18:	f1 1d       	adc	r31, r1
    2e1a:	80 81       	ld	r24, Z
    2e1c:	80 33       	cpi	r24, 0x30	; 48
    2e1e:	19 f4       	brne	.+6      	; 0x2e26 <vfprintf+0x20a>
    2e20:	11 50       	subi	r17, 0x01	; 1
    2e22:	11 11       	cpse	r17, r1
    2e24:	f4 cf       	rjmp	.-24     	; 0x2e0e <vfprintf+0x1f2>
    2e26:	97 fe       	sbrs	r9, 7
    2e28:	0e c0       	rjmp	.+28     	; 0x2e46 <vfprintf+0x22a>
    2e2a:	44 24       	eor	r4, r4
    2e2c:	43 94       	inc	r4
    2e2e:	41 0e       	add	r4, r17
    2e30:	81 2f       	mov	r24, r17
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	c8 16       	cp	r12, r24
    2e36:	d9 06       	cpc	r13, r25
    2e38:	2c f4       	brge	.+10     	; 0x2e44 <vfprintf+0x228>
    2e3a:	1c 19       	sub	r17, r12
    2e3c:	04 c0       	rjmp	.+8      	; 0x2e46 <vfprintf+0x22a>
    2e3e:	44 24       	eor	r4, r4
    2e40:	43 94       	inc	r4
    2e42:	01 c0       	rjmp	.+2      	; 0x2e46 <vfprintf+0x22a>
    2e44:	10 e0       	ldi	r17, 0x00	; 0
    2e46:	97 fe       	sbrs	r9, 7
    2e48:	06 c0       	rjmp	.+12     	; 0x2e56 <vfprintf+0x23a>
    2e4a:	1c 14       	cp	r1, r12
    2e4c:	1d 04       	cpc	r1, r13
    2e4e:	34 f4       	brge	.+12     	; 0x2e5c <vfprintf+0x240>
    2e50:	c6 01       	movw	r24, r12
    2e52:	01 96       	adiw	r24, 0x01	; 1
    2e54:	05 c0       	rjmp	.+10     	; 0x2e60 <vfprintf+0x244>
    2e56:	85 e0       	ldi	r24, 0x05	; 5
    2e58:	90 e0       	ldi	r25, 0x00	; 0
    2e5a:	02 c0       	rjmp	.+4      	; 0x2e60 <vfprintf+0x244>
    2e5c:	81 e0       	ldi	r24, 0x01	; 1
    2e5e:	90 e0       	ldi	r25, 0x00	; 0
    2e60:	01 11       	cpse	r16, r1
    2e62:	01 96       	adiw	r24, 0x01	; 1
    2e64:	11 23       	and	r17, r17
    2e66:	31 f0       	breq	.+12     	; 0x2e74 <vfprintf+0x258>
    2e68:	21 2f       	mov	r18, r17
    2e6a:	30 e0       	ldi	r19, 0x00	; 0
    2e6c:	2f 5f       	subi	r18, 0xFF	; 255
    2e6e:	3f 4f       	sbci	r19, 0xFF	; 255
    2e70:	82 0f       	add	r24, r18
    2e72:	93 1f       	adc	r25, r19
    2e74:	25 2d       	mov	r18, r5
    2e76:	30 e0       	ldi	r19, 0x00	; 0
    2e78:	82 17       	cp	r24, r18
    2e7a:	93 07       	cpc	r25, r19
    2e7c:	14 f4       	brge	.+4      	; 0x2e82 <vfprintf+0x266>
    2e7e:	58 1a       	sub	r5, r24
    2e80:	01 c0       	rjmp	.+2      	; 0x2e84 <vfprintf+0x268>
    2e82:	51 2c       	mov	r5, r1
    2e84:	89 2d       	mov	r24, r9
    2e86:	89 70       	andi	r24, 0x09	; 9
    2e88:	49 f4       	brne	.+18     	; 0x2e9c <vfprintf+0x280>
    2e8a:	55 20       	and	r5, r5
    2e8c:	39 f0       	breq	.+14     	; 0x2e9c <vfprintf+0x280>
    2e8e:	b7 01       	movw	r22, r14
    2e90:	80 e2       	ldi	r24, 0x20	; 32
    2e92:	90 e0       	ldi	r25, 0x00	; 0
    2e94:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2e98:	5a 94       	dec	r5
    2e9a:	f7 cf       	rjmp	.-18     	; 0x2e8a <vfprintf+0x26e>
    2e9c:	00 23       	and	r16, r16
    2e9e:	29 f0       	breq	.+10     	; 0x2eaa <vfprintf+0x28e>
    2ea0:	b7 01       	movw	r22, r14
    2ea2:	80 2f       	mov	r24, r16
    2ea4:	90 e0       	ldi	r25, 0x00	; 0
    2ea6:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2eaa:	93 fc       	sbrc	r9, 3
    2eac:	09 c0       	rjmp	.+18     	; 0x2ec0 <vfprintf+0x2a4>
    2eae:	55 20       	and	r5, r5
    2eb0:	39 f0       	breq	.+14     	; 0x2ec0 <vfprintf+0x2a4>
    2eb2:	b7 01       	movw	r22, r14
    2eb4:	80 e3       	ldi	r24, 0x30	; 48
    2eb6:	90 e0       	ldi	r25, 0x00	; 0
    2eb8:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2ebc:	5a 94       	dec	r5
    2ebe:	f7 cf       	rjmp	.-18     	; 0x2eae <vfprintf+0x292>
    2ec0:	97 fe       	sbrs	r9, 7
    2ec2:	4c c0       	rjmp	.+152    	; 0x2f5c <vfprintf+0x340>
    2ec4:	46 01       	movw	r8, r12
    2ec6:	d7 fe       	sbrs	r13, 7
    2ec8:	02 c0       	rjmp	.+4      	; 0x2ece <vfprintf+0x2b2>
    2eca:	81 2c       	mov	r8, r1
    2ecc:	91 2c       	mov	r9, r1
    2ece:	c6 01       	movw	r24, r12
    2ed0:	88 19       	sub	r24, r8
    2ed2:	99 09       	sbc	r25, r9
    2ed4:	f3 01       	movw	r30, r6
    2ed6:	e8 0f       	add	r30, r24
    2ed8:	f9 1f       	adc	r31, r25
    2eda:	fe 87       	std	Y+14, r31	; 0x0e
    2edc:	ed 87       	std	Y+13, r30	; 0x0d
    2ede:	96 01       	movw	r18, r12
    2ee0:	24 19       	sub	r18, r4
    2ee2:	31 09       	sbc	r19, r1
    2ee4:	38 8b       	std	Y+16, r19	; 0x10
    2ee6:	2f 87       	std	Y+15, r18	; 0x0f
    2ee8:	01 2f       	mov	r16, r17
    2eea:	10 e0       	ldi	r17, 0x00	; 0
    2eec:	11 95       	neg	r17
    2eee:	01 95       	neg	r16
    2ef0:	11 09       	sbc	r17, r1
    2ef2:	3f ef       	ldi	r19, 0xFF	; 255
    2ef4:	83 16       	cp	r8, r19
    2ef6:	93 06       	cpc	r9, r19
    2ef8:	29 f4       	brne	.+10     	; 0x2f04 <vfprintf+0x2e8>
    2efa:	b7 01       	movw	r22, r14
    2efc:	8e e2       	ldi	r24, 0x2E	; 46
    2efe:	90 e0       	ldi	r25, 0x00	; 0
    2f00:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2f04:	c8 14       	cp	r12, r8
    2f06:	d9 04       	cpc	r13, r9
    2f08:	4c f0       	brlt	.+18     	; 0x2f1c <vfprintf+0x300>
    2f0a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f0c:	98 89       	ldd	r25, Y+16	; 0x10
    2f0e:	88 15       	cp	r24, r8
    2f10:	99 05       	cpc	r25, r9
    2f12:	24 f4       	brge	.+8      	; 0x2f1c <vfprintf+0x300>
    2f14:	ed 85       	ldd	r30, Y+13	; 0x0d
    2f16:	fe 85       	ldd	r31, Y+14	; 0x0e
    2f18:	81 81       	ldd	r24, Z+1	; 0x01
    2f1a:	01 c0       	rjmp	.+2      	; 0x2f1e <vfprintf+0x302>
    2f1c:	80 e3       	ldi	r24, 0x30	; 48
    2f1e:	f1 e0       	ldi	r31, 0x01	; 1
    2f20:	8f 1a       	sub	r8, r31
    2f22:	91 08       	sbc	r9, r1
    2f24:	2d 85       	ldd	r18, Y+13	; 0x0d
    2f26:	3e 85       	ldd	r19, Y+14	; 0x0e
    2f28:	2f 5f       	subi	r18, 0xFF	; 255
    2f2a:	3f 4f       	sbci	r19, 0xFF	; 255
    2f2c:	3e 87       	std	Y+14, r19	; 0x0e
    2f2e:	2d 87       	std	Y+13, r18	; 0x0d
    2f30:	80 16       	cp	r8, r16
    2f32:	91 06       	cpc	r9, r17
    2f34:	2c f0       	brlt	.+10     	; 0x2f40 <vfprintf+0x324>
    2f36:	b7 01       	movw	r22, r14
    2f38:	90 e0       	ldi	r25, 0x00	; 0
    2f3a:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2f3e:	d9 cf       	rjmp	.-78     	; 0x2ef2 <vfprintf+0x2d6>
    2f40:	c8 14       	cp	r12, r8
    2f42:	d9 04       	cpc	r13, r9
    2f44:	41 f4       	brne	.+16     	; 0x2f56 <vfprintf+0x33a>
    2f46:	9a 81       	ldd	r25, Y+2	; 0x02
    2f48:	96 33       	cpi	r25, 0x36	; 54
    2f4a:	20 f4       	brcc	.+8      	; 0x2f54 <vfprintf+0x338>
    2f4c:	95 33       	cpi	r25, 0x35	; 53
    2f4e:	19 f4       	brne	.+6      	; 0x2f56 <vfprintf+0x33a>
    2f50:	3c 85       	ldd	r19, Y+12	; 0x0c
    2f52:	34 ff       	sbrs	r19, 4
    2f54:	81 e3       	ldi	r24, 0x31	; 49
    2f56:	b7 01       	movw	r22, r14
    2f58:	90 e0       	ldi	r25, 0x00	; 0
    2f5a:	4e c0       	rjmp	.+156    	; 0x2ff8 <vfprintf+0x3dc>
    2f5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f5e:	81 33       	cpi	r24, 0x31	; 49
    2f60:	19 f0       	breq	.+6      	; 0x2f68 <vfprintf+0x34c>
    2f62:	9c 85       	ldd	r25, Y+12	; 0x0c
    2f64:	9f 7e       	andi	r25, 0xEF	; 239
    2f66:	9c 87       	std	Y+12, r25	; 0x0c
    2f68:	b7 01       	movw	r22, r14
    2f6a:	90 e0       	ldi	r25, 0x00	; 0
    2f6c:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2f70:	11 11       	cpse	r17, r1
    2f72:	05 c0       	rjmp	.+10     	; 0x2f7e <vfprintf+0x362>
    2f74:	94 fc       	sbrc	r9, 4
    2f76:	18 c0       	rjmp	.+48     	; 0x2fa8 <vfprintf+0x38c>
    2f78:	85 e6       	ldi	r24, 0x65	; 101
    2f7a:	90 e0       	ldi	r25, 0x00	; 0
    2f7c:	17 c0       	rjmp	.+46     	; 0x2fac <vfprintf+0x390>
    2f7e:	b7 01       	movw	r22, r14
    2f80:	8e e2       	ldi	r24, 0x2E	; 46
    2f82:	90 e0       	ldi	r25, 0x00	; 0
    2f84:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2f88:	1e 5f       	subi	r17, 0xFE	; 254
    2f8a:	82 e0       	ldi	r24, 0x02	; 2
    2f8c:	01 e0       	ldi	r16, 0x01	; 1
    2f8e:	08 0f       	add	r16, r24
    2f90:	f3 01       	movw	r30, r6
    2f92:	e8 0f       	add	r30, r24
    2f94:	f1 1d       	adc	r31, r1
    2f96:	80 81       	ld	r24, Z
    2f98:	b7 01       	movw	r22, r14
    2f9a:	90 e0       	ldi	r25, 0x00	; 0
    2f9c:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2fa0:	80 2f       	mov	r24, r16
    2fa2:	01 13       	cpse	r16, r17
    2fa4:	f3 cf       	rjmp	.-26     	; 0x2f8c <vfprintf+0x370>
    2fa6:	e6 cf       	rjmp	.-52     	; 0x2f74 <vfprintf+0x358>
    2fa8:	85 e4       	ldi	r24, 0x45	; 69
    2faa:	90 e0       	ldi	r25, 0x00	; 0
    2fac:	b7 01       	movw	r22, r14
    2fae:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2fb2:	d7 fc       	sbrc	r13, 7
    2fb4:	06 c0       	rjmp	.+12     	; 0x2fc2 <vfprintf+0x3a6>
    2fb6:	c1 14       	cp	r12, r1
    2fb8:	d1 04       	cpc	r13, r1
    2fba:	41 f4       	brne	.+16     	; 0x2fcc <vfprintf+0x3b0>
    2fbc:	ec 85       	ldd	r30, Y+12	; 0x0c
    2fbe:	e4 ff       	sbrs	r30, 4
    2fc0:	05 c0       	rjmp	.+10     	; 0x2fcc <vfprintf+0x3b0>
    2fc2:	d1 94       	neg	r13
    2fc4:	c1 94       	neg	r12
    2fc6:	d1 08       	sbc	r13, r1
    2fc8:	8d e2       	ldi	r24, 0x2D	; 45
    2fca:	01 c0       	rjmp	.+2      	; 0x2fce <vfprintf+0x3b2>
    2fcc:	8b e2       	ldi	r24, 0x2B	; 43
    2fce:	b7 01       	movw	r22, r14
    2fd0:	90 e0       	ldi	r25, 0x00	; 0
    2fd2:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2fd6:	80 e3       	ldi	r24, 0x30	; 48
    2fd8:	2a e0       	ldi	r18, 0x0A	; 10
    2fda:	c2 16       	cp	r12, r18
    2fdc:	d1 04       	cpc	r13, r1
    2fde:	2c f0       	brlt	.+10     	; 0x2fea <vfprintf+0x3ce>
    2fe0:	8f 5f       	subi	r24, 0xFF	; 255
    2fe2:	fa e0       	ldi	r31, 0x0A	; 10
    2fe4:	cf 1a       	sub	r12, r31
    2fe6:	d1 08       	sbc	r13, r1
    2fe8:	f7 cf       	rjmp	.-18     	; 0x2fd8 <vfprintf+0x3bc>
    2fea:	b7 01       	movw	r22, r14
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2ff2:	b7 01       	movw	r22, r14
    2ff4:	c6 01       	movw	r24, r12
    2ff6:	c0 96       	adiw	r24, 0x30	; 48
    2ff8:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    2ffc:	54 c1       	rjmp	.+680    	; 0x32a6 <vfprintf+0x68a>
    2ffe:	83 36       	cpi	r24, 0x63	; 99
    3000:	31 f0       	breq	.+12     	; 0x300e <vfprintf+0x3f2>
    3002:	83 37       	cpi	r24, 0x73	; 115
    3004:	79 f0       	breq	.+30     	; 0x3024 <vfprintf+0x408>
    3006:	83 35       	cpi	r24, 0x53	; 83
    3008:	09 f0       	breq	.+2      	; 0x300c <vfprintf+0x3f0>
    300a:	56 c0       	rjmp	.+172    	; 0x30b8 <vfprintf+0x49c>
    300c:	20 c0       	rjmp	.+64     	; 0x304e <vfprintf+0x432>
    300e:	56 01       	movw	r10, r12
    3010:	32 e0       	ldi	r19, 0x02	; 2
    3012:	a3 0e       	add	r10, r19
    3014:	b1 1c       	adc	r11, r1
    3016:	f6 01       	movw	r30, r12
    3018:	80 81       	ld	r24, Z
    301a:	89 83       	std	Y+1, r24	; 0x01
    301c:	01 e0       	ldi	r16, 0x01	; 1
    301e:	10 e0       	ldi	r17, 0x00	; 0
    3020:	63 01       	movw	r12, r6
    3022:	12 c0       	rjmp	.+36     	; 0x3048 <vfprintf+0x42c>
    3024:	56 01       	movw	r10, r12
    3026:	f2 e0       	ldi	r31, 0x02	; 2
    3028:	af 0e       	add	r10, r31
    302a:	b1 1c       	adc	r11, r1
    302c:	f6 01       	movw	r30, r12
    302e:	c0 80       	ld	r12, Z
    3030:	d1 80       	ldd	r13, Z+1	; 0x01
    3032:	96 fe       	sbrs	r9, 6
    3034:	03 c0       	rjmp	.+6      	; 0x303c <vfprintf+0x420>
    3036:	61 2f       	mov	r22, r17
    3038:	70 e0       	ldi	r23, 0x00	; 0
    303a:	02 c0       	rjmp	.+4      	; 0x3040 <vfprintf+0x424>
    303c:	6f ef       	ldi	r22, 0xFF	; 255
    303e:	7f ef       	ldi	r23, 0xFF	; 255
    3040:	c6 01       	movw	r24, r12
    3042:	0e 94 f3 1a 	call	0x35e6	; 0x35e6 <strnlen>
    3046:	8c 01       	movw	r16, r24
    3048:	f9 2d       	mov	r31, r9
    304a:	ff 77       	andi	r31, 0x7F	; 127
    304c:	14 c0       	rjmp	.+40     	; 0x3076 <vfprintf+0x45a>
    304e:	56 01       	movw	r10, r12
    3050:	22 e0       	ldi	r18, 0x02	; 2
    3052:	a2 0e       	add	r10, r18
    3054:	b1 1c       	adc	r11, r1
    3056:	f6 01       	movw	r30, r12
    3058:	c0 80       	ld	r12, Z
    305a:	d1 80       	ldd	r13, Z+1	; 0x01
    305c:	96 fe       	sbrs	r9, 6
    305e:	03 c0       	rjmp	.+6      	; 0x3066 <vfprintf+0x44a>
    3060:	61 2f       	mov	r22, r17
    3062:	70 e0       	ldi	r23, 0x00	; 0
    3064:	02 c0       	rjmp	.+4      	; 0x306a <vfprintf+0x44e>
    3066:	6f ef       	ldi	r22, 0xFF	; 255
    3068:	7f ef       	ldi	r23, 0xFF	; 255
    306a:	c6 01       	movw	r24, r12
    306c:	0e 94 d6 1a 	call	0x35ac	; 0x35ac <strnlen_P>
    3070:	8c 01       	movw	r16, r24
    3072:	f9 2d       	mov	r31, r9
    3074:	f0 68       	ori	r31, 0x80	; 128
    3076:	9f 2e       	mov	r9, r31
    3078:	f3 fd       	sbrc	r31, 3
    307a:	1a c0       	rjmp	.+52     	; 0x30b0 <vfprintf+0x494>
    307c:	85 2d       	mov	r24, r5
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	08 17       	cp	r16, r24
    3082:	19 07       	cpc	r17, r25
    3084:	a8 f4       	brcc	.+42     	; 0x30b0 <vfprintf+0x494>
    3086:	b7 01       	movw	r22, r14
    3088:	80 e2       	ldi	r24, 0x20	; 32
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    3090:	5a 94       	dec	r5
    3092:	f4 cf       	rjmp	.-24     	; 0x307c <vfprintf+0x460>
    3094:	f6 01       	movw	r30, r12
    3096:	97 fc       	sbrc	r9, 7
    3098:	85 91       	lpm	r24, Z+
    309a:	97 fe       	sbrs	r9, 7
    309c:	81 91       	ld	r24, Z+
    309e:	6f 01       	movw	r12, r30
    30a0:	b7 01       	movw	r22, r14
    30a2:	90 e0       	ldi	r25, 0x00	; 0
    30a4:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    30a8:	51 10       	cpse	r5, r1
    30aa:	5a 94       	dec	r5
    30ac:	01 50       	subi	r16, 0x01	; 1
    30ae:	11 09       	sbc	r17, r1
    30b0:	01 15       	cp	r16, r1
    30b2:	11 05       	cpc	r17, r1
    30b4:	79 f7       	brne	.-34     	; 0x3094 <vfprintf+0x478>
    30b6:	f7 c0       	rjmp	.+494    	; 0x32a6 <vfprintf+0x68a>
    30b8:	84 36       	cpi	r24, 0x64	; 100
    30ba:	11 f0       	breq	.+4      	; 0x30c0 <vfprintf+0x4a4>
    30bc:	89 36       	cpi	r24, 0x69	; 105
    30be:	61 f5       	brne	.+88     	; 0x3118 <vfprintf+0x4fc>
    30c0:	56 01       	movw	r10, r12
    30c2:	97 fe       	sbrs	r9, 7
    30c4:	09 c0       	rjmp	.+18     	; 0x30d8 <vfprintf+0x4bc>
    30c6:	24 e0       	ldi	r18, 0x04	; 4
    30c8:	a2 0e       	add	r10, r18
    30ca:	b1 1c       	adc	r11, r1
    30cc:	f6 01       	movw	r30, r12
    30ce:	60 81       	ld	r22, Z
    30d0:	71 81       	ldd	r23, Z+1	; 0x01
    30d2:	82 81       	ldd	r24, Z+2	; 0x02
    30d4:	93 81       	ldd	r25, Z+3	; 0x03
    30d6:	0a c0       	rjmp	.+20     	; 0x30ec <vfprintf+0x4d0>
    30d8:	f2 e0       	ldi	r31, 0x02	; 2
    30da:	af 0e       	add	r10, r31
    30dc:	b1 1c       	adc	r11, r1
    30de:	f6 01       	movw	r30, r12
    30e0:	60 81       	ld	r22, Z
    30e2:	71 81       	ldd	r23, Z+1	; 0x01
    30e4:	07 2e       	mov	r0, r23
    30e6:	00 0c       	add	r0, r0
    30e8:	88 0b       	sbc	r24, r24
    30ea:	99 0b       	sbc	r25, r25
    30ec:	f9 2d       	mov	r31, r9
    30ee:	ff 76       	andi	r31, 0x6F	; 111
    30f0:	9f 2e       	mov	r9, r31
    30f2:	97 ff       	sbrs	r25, 7
    30f4:	09 c0       	rjmp	.+18     	; 0x3108 <vfprintf+0x4ec>
    30f6:	90 95       	com	r25
    30f8:	80 95       	com	r24
    30fa:	70 95       	com	r23
    30fc:	61 95       	neg	r22
    30fe:	7f 4f       	sbci	r23, 0xFF	; 255
    3100:	8f 4f       	sbci	r24, 0xFF	; 255
    3102:	9f 4f       	sbci	r25, 0xFF	; 255
    3104:	f0 68       	ori	r31, 0x80	; 128
    3106:	9f 2e       	mov	r9, r31
    3108:	2a e0       	ldi	r18, 0x0A	; 10
    310a:	30 e0       	ldi	r19, 0x00	; 0
    310c:	a3 01       	movw	r20, r6
    310e:	0e 94 75 1b 	call	0x36ea	; 0x36ea <__ultoa_invert>
    3112:	c8 2e       	mov	r12, r24
    3114:	c6 18       	sub	r12, r6
    3116:	3f c0       	rjmp	.+126    	; 0x3196 <vfprintf+0x57a>
    3118:	09 2d       	mov	r16, r9
    311a:	85 37       	cpi	r24, 0x75	; 117
    311c:	21 f4       	brne	.+8      	; 0x3126 <vfprintf+0x50a>
    311e:	0f 7e       	andi	r16, 0xEF	; 239
    3120:	2a e0       	ldi	r18, 0x0A	; 10
    3122:	30 e0       	ldi	r19, 0x00	; 0
    3124:	1d c0       	rjmp	.+58     	; 0x3160 <vfprintf+0x544>
    3126:	09 7f       	andi	r16, 0xF9	; 249
    3128:	8f 36       	cpi	r24, 0x6F	; 111
    312a:	91 f0       	breq	.+36     	; 0x3150 <vfprintf+0x534>
    312c:	18 f4       	brcc	.+6      	; 0x3134 <vfprintf+0x518>
    312e:	88 35       	cpi	r24, 0x58	; 88
    3130:	59 f0       	breq	.+22     	; 0x3148 <vfprintf+0x52c>
    3132:	c3 c0       	rjmp	.+390    	; 0x32ba <vfprintf+0x69e>
    3134:	80 37       	cpi	r24, 0x70	; 112
    3136:	19 f0       	breq	.+6      	; 0x313e <vfprintf+0x522>
    3138:	88 37       	cpi	r24, 0x78	; 120
    313a:	11 f0       	breq	.+4      	; 0x3140 <vfprintf+0x524>
    313c:	be c0       	rjmp	.+380    	; 0x32ba <vfprintf+0x69e>
    313e:	00 61       	ori	r16, 0x10	; 16
    3140:	04 ff       	sbrs	r16, 4
    3142:	09 c0       	rjmp	.+18     	; 0x3156 <vfprintf+0x53a>
    3144:	04 60       	ori	r16, 0x04	; 4
    3146:	07 c0       	rjmp	.+14     	; 0x3156 <vfprintf+0x53a>
    3148:	94 fe       	sbrs	r9, 4
    314a:	08 c0       	rjmp	.+16     	; 0x315c <vfprintf+0x540>
    314c:	06 60       	ori	r16, 0x06	; 6
    314e:	06 c0       	rjmp	.+12     	; 0x315c <vfprintf+0x540>
    3150:	28 e0       	ldi	r18, 0x08	; 8
    3152:	30 e0       	ldi	r19, 0x00	; 0
    3154:	05 c0       	rjmp	.+10     	; 0x3160 <vfprintf+0x544>
    3156:	20 e1       	ldi	r18, 0x10	; 16
    3158:	30 e0       	ldi	r19, 0x00	; 0
    315a:	02 c0       	rjmp	.+4      	; 0x3160 <vfprintf+0x544>
    315c:	20 e1       	ldi	r18, 0x10	; 16
    315e:	32 e0       	ldi	r19, 0x02	; 2
    3160:	56 01       	movw	r10, r12
    3162:	07 ff       	sbrs	r16, 7
    3164:	09 c0       	rjmp	.+18     	; 0x3178 <vfprintf+0x55c>
    3166:	84 e0       	ldi	r24, 0x04	; 4
    3168:	a8 0e       	add	r10, r24
    316a:	b1 1c       	adc	r11, r1
    316c:	f6 01       	movw	r30, r12
    316e:	60 81       	ld	r22, Z
    3170:	71 81       	ldd	r23, Z+1	; 0x01
    3172:	82 81       	ldd	r24, Z+2	; 0x02
    3174:	93 81       	ldd	r25, Z+3	; 0x03
    3176:	08 c0       	rjmp	.+16     	; 0x3188 <vfprintf+0x56c>
    3178:	f2 e0       	ldi	r31, 0x02	; 2
    317a:	af 0e       	add	r10, r31
    317c:	b1 1c       	adc	r11, r1
    317e:	f6 01       	movw	r30, r12
    3180:	60 81       	ld	r22, Z
    3182:	71 81       	ldd	r23, Z+1	; 0x01
    3184:	80 e0       	ldi	r24, 0x00	; 0
    3186:	90 e0       	ldi	r25, 0x00	; 0
    3188:	a3 01       	movw	r20, r6
    318a:	0e 94 75 1b 	call	0x36ea	; 0x36ea <__ultoa_invert>
    318e:	c8 2e       	mov	r12, r24
    3190:	c6 18       	sub	r12, r6
    3192:	0f 77       	andi	r16, 0x7F	; 127
    3194:	90 2e       	mov	r9, r16
    3196:	96 fe       	sbrs	r9, 6
    3198:	0b c0       	rjmp	.+22     	; 0x31b0 <vfprintf+0x594>
    319a:	09 2d       	mov	r16, r9
    319c:	0e 7f       	andi	r16, 0xFE	; 254
    319e:	c1 16       	cp	r12, r17
    31a0:	50 f4       	brcc	.+20     	; 0x31b6 <vfprintf+0x59a>
    31a2:	94 fe       	sbrs	r9, 4
    31a4:	0a c0       	rjmp	.+20     	; 0x31ba <vfprintf+0x59e>
    31a6:	92 fc       	sbrc	r9, 2
    31a8:	08 c0       	rjmp	.+16     	; 0x31ba <vfprintf+0x59e>
    31aa:	09 2d       	mov	r16, r9
    31ac:	0e 7e       	andi	r16, 0xEE	; 238
    31ae:	05 c0       	rjmp	.+10     	; 0x31ba <vfprintf+0x59e>
    31b0:	dc 2c       	mov	r13, r12
    31b2:	09 2d       	mov	r16, r9
    31b4:	03 c0       	rjmp	.+6      	; 0x31bc <vfprintf+0x5a0>
    31b6:	dc 2c       	mov	r13, r12
    31b8:	01 c0       	rjmp	.+2      	; 0x31bc <vfprintf+0x5a0>
    31ba:	d1 2e       	mov	r13, r17
    31bc:	04 ff       	sbrs	r16, 4
    31be:	0d c0       	rjmp	.+26     	; 0x31da <vfprintf+0x5be>
    31c0:	fe 01       	movw	r30, r28
    31c2:	ec 0d       	add	r30, r12
    31c4:	f1 1d       	adc	r31, r1
    31c6:	80 81       	ld	r24, Z
    31c8:	80 33       	cpi	r24, 0x30	; 48
    31ca:	11 f4       	brne	.+4      	; 0x31d0 <vfprintf+0x5b4>
    31cc:	09 7e       	andi	r16, 0xE9	; 233
    31ce:	09 c0       	rjmp	.+18     	; 0x31e2 <vfprintf+0x5c6>
    31d0:	02 ff       	sbrs	r16, 2
    31d2:	06 c0       	rjmp	.+12     	; 0x31e0 <vfprintf+0x5c4>
    31d4:	d3 94       	inc	r13
    31d6:	d3 94       	inc	r13
    31d8:	04 c0       	rjmp	.+8      	; 0x31e2 <vfprintf+0x5c6>
    31da:	80 2f       	mov	r24, r16
    31dc:	86 78       	andi	r24, 0x86	; 134
    31de:	09 f0       	breq	.+2      	; 0x31e2 <vfprintf+0x5c6>
    31e0:	d3 94       	inc	r13
    31e2:	03 fd       	sbrc	r16, 3
    31e4:	11 c0       	rjmp	.+34     	; 0x3208 <vfprintf+0x5ec>
    31e6:	00 ff       	sbrs	r16, 0
    31e8:	06 c0       	rjmp	.+12     	; 0x31f6 <vfprintf+0x5da>
    31ea:	1c 2d       	mov	r17, r12
    31ec:	d5 14       	cp	r13, r5
    31ee:	80 f4       	brcc	.+32     	; 0x3210 <vfprintf+0x5f4>
    31f0:	15 0d       	add	r17, r5
    31f2:	1d 19       	sub	r17, r13
    31f4:	0d c0       	rjmp	.+26     	; 0x3210 <vfprintf+0x5f4>
    31f6:	d5 14       	cp	r13, r5
    31f8:	58 f4       	brcc	.+22     	; 0x3210 <vfprintf+0x5f4>
    31fa:	b7 01       	movw	r22, r14
    31fc:	80 e2       	ldi	r24, 0x20	; 32
    31fe:	90 e0       	ldi	r25, 0x00	; 0
    3200:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    3204:	d3 94       	inc	r13
    3206:	f7 cf       	rjmp	.-18     	; 0x31f6 <vfprintf+0x5da>
    3208:	d5 14       	cp	r13, r5
    320a:	10 f4       	brcc	.+4      	; 0x3210 <vfprintf+0x5f4>
    320c:	5d 18       	sub	r5, r13
    320e:	01 c0       	rjmp	.+2      	; 0x3212 <vfprintf+0x5f6>
    3210:	51 2c       	mov	r5, r1
    3212:	04 ff       	sbrs	r16, 4
    3214:	10 c0       	rjmp	.+32     	; 0x3236 <vfprintf+0x61a>
    3216:	b7 01       	movw	r22, r14
    3218:	80 e3       	ldi	r24, 0x30	; 48
    321a:	90 e0       	ldi	r25, 0x00	; 0
    321c:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    3220:	02 ff       	sbrs	r16, 2
    3222:	17 c0       	rjmp	.+46     	; 0x3252 <vfprintf+0x636>
    3224:	01 fd       	sbrc	r16, 1
    3226:	03 c0       	rjmp	.+6      	; 0x322e <vfprintf+0x612>
    3228:	88 e7       	ldi	r24, 0x78	; 120
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	02 c0       	rjmp	.+4      	; 0x3232 <vfprintf+0x616>
    322e:	88 e5       	ldi	r24, 0x58	; 88
    3230:	90 e0       	ldi	r25, 0x00	; 0
    3232:	b7 01       	movw	r22, r14
    3234:	0c c0       	rjmp	.+24     	; 0x324e <vfprintf+0x632>
    3236:	80 2f       	mov	r24, r16
    3238:	86 78       	andi	r24, 0x86	; 134
    323a:	59 f0       	breq	.+22     	; 0x3252 <vfprintf+0x636>
    323c:	01 ff       	sbrs	r16, 1
    323e:	02 c0       	rjmp	.+4      	; 0x3244 <vfprintf+0x628>
    3240:	8b e2       	ldi	r24, 0x2B	; 43
    3242:	01 c0       	rjmp	.+2      	; 0x3246 <vfprintf+0x62a>
    3244:	80 e2       	ldi	r24, 0x20	; 32
    3246:	07 fd       	sbrc	r16, 7
    3248:	8d e2       	ldi	r24, 0x2D	; 45
    324a:	b7 01       	movw	r22, r14
    324c:	90 e0       	ldi	r25, 0x00	; 0
    324e:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    3252:	c1 16       	cp	r12, r17
    3254:	38 f4       	brcc	.+14     	; 0x3264 <vfprintf+0x648>
    3256:	b7 01       	movw	r22, r14
    3258:	80 e3       	ldi	r24, 0x30	; 48
    325a:	90 e0       	ldi	r25, 0x00	; 0
    325c:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    3260:	11 50       	subi	r17, 0x01	; 1
    3262:	f7 cf       	rjmp	.-18     	; 0x3252 <vfprintf+0x636>
    3264:	ca 94       	dec	r12
    3266:	f3 01       	movw	r30, r6
    3268:	ec 0d       	add	r30, r12
    326a:	f1 1d       	adc	r31, r1
    326c:	80 81       	ld	r24, Z
    326e:	b7 01       	movw	r22, r14
    3270:	90 e0       	ldi	r25, 0x00	; 0
    3272:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    3276:	c1 10       	cpse	r12, r1
    3278:	f5 cf       	rjmp	.-22     	; 0x3264 <vfprintf+0x648>
    327a:	15 c0       	rjmp	.+42     	; 0x32a6 <vfprintf+0x68a>
    327c:	f4 e0       	ldi	r31, 0x04	; 4
    327e:	f5 15       	cp	r31, r5
    3280:	60 f5       	brcc	.+88     	; 0x32da <vfprintf+0x6be>
    3282:	84 e0       	ldi	r24, 0x04	; 4
    3284:	58 1a       	sub	r5, r24
    3286:	93 fe       	sbrs	r9, 3
    3288:	1f c0       	rjmp	.+62     	; 0x32c8 <vfprintf+0x6ac>
    328a:	01 11       	cpse	r16, r1
    328c:	27 c0       	rjmp	.+78     	; 0x32dc <vfprintf+0x6c0>
    328e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3290:	23 ff       	sbrs	r18, 3
    3292:	2a c0       	rjmp	.+84     	; 0x32e8 <vfprintf+0x6cc>
    3294:	08 e6       	ldi	r16, 0x68	; 104
    3296:	10 e0       	ldi	r17, 0x00	; 0
    3298:	39 2d       	mov	r19, r9
    329a:	30 71       	andi	r19, 0x10	; 16
    329c:	93 2e       	mov	r9, r19
    329e:	f8 01       	movw	r30, r16
    32a0:	84 91       	lpm	r24, Z
    32a2:	81 11       	cpse	r24, r1
    32a4:	24 c0       	rjmp	.+72     	; 0x32ee <vfprintf+0x6d2>
    32a6:	55 20       	and	r5, r5
    32a8:	09 f4       	brne	.+2      	; 0x32ac <vfprintf+0x690>
    32aa:	e4 cc       	rjmp	.-1592   	; 0x2c74 <vfprintf+0x58>
    32ac:	b7 01       	movw	r22, r14
    32ae:	80 e2       	ldi	r24, 0x20	; 32
    32b0:	90 e0       	ldi	r25, 0x00	; 0
    32b2:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    32b6:	5a 94       	dec	r5
    32b8:	f6 cf       	rjmp	.-20     	; 0x32a6 <vfprintf+0x68a>
    32ba:	f7 01       	movw	r30, r14
    32bc:	86 81       	ldd	r24, Z+6	; 0x06
    32be:	97 81       	ldd	r25, Z+7	; 0x07
    32c0:	26 c0       	rjmp	.+76     	; 0x330e <vfprintf+0x6f2>
    32c2:	8f ef       	ldi	r24, 0xFF	; 255
    32c4:	9f ef       	ldi	r25, 0xFF	; 255
    32c6:	23 c0       	rjmp	.+70     	; 0x330e <vfprintf+0x6f2>
    32c8:	b7 01       	movw	r22, r14
    32ca:	80 e2       	ldi	r24, 0x20	; 32
    32cc:	90 e0       	ldi	r25, 0x00	; 0
    32ce:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    32d2:	5a 94       	dec	r5
    32d4:	51 10       	cpse	r5, r1
    32d6:	f8 cf       	rjmp	.-16     	; 0x32c8 <vfprintf+0x6ac>
    32d8:	d8 cf       	rjmp	.-80     	; 0x328a <vfprintf+0x66e>
    32da:	51 2c       	mov	r5, r1
    32dc:	b7 01       	movw	r22, r14
    32de:	80 2f       	mov	r24, r16
    32e0:	90 e0       	ldi	r25, 0x00	; 0
    32e2:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    32e6:	d3 cf       	rjmp	.-90     	; 0x328e <vfprintf+0x672>
    32e8:	0c e6       	ldi	r16, 0x6C	; 108
    32ea:	10 e0       	ldi	r17, 0x00	; 0
    32ec:	d5 cf       	rjmp	.-86     	; 0x3298 <vfprintf+0x67c>
    32ee:	91 10       	cpse	r9, r1
    32f0:	80 52       	subi	r24, 0x20	; 32
    32f2:	b7 01       	movw	r22, r14
    32f4:	90 e0       	ldi	r25, 0x00	; 0
    32f6:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <fputc>
    32fa:	0f 5f       	subi	r16, 0xFF	; 255
    32fc:	1f 4f       	sbci	r17, 0xFF	; 255
    32fe:	cf cf       	rjmp	.-98     	; 0x329e <vfprintf+0x682>
    3300:	23 e0       	ldi	r18, 0x03	; 3
    3302:	25 15       	cp	r18, r5
    3304:	10 f4       	brcc	.+4      	; 0x330a <vfprintf+0x6ee>
    3306:	83 e0       	ldi	r24, 0x03	; 3
    3308:	bd cf       	rjmp	.-134    	; 0x3284 <vfprintf+0x668>
    330a:	51 2c       	mov	r5, r1
    330c:	c0 cf       	rjmp	.-128    	; 0x328e <vfprintf+0x672>
    330e:	60 96       	adiw	r28, 0x10	; 16
    3310:	e2 e1       	ldi	r30, 0x12	; 18
    3312:	0c 94 d4 19 	jmp	0x33a8	; 0x33a8 <__epilogue_restores__>

00003316 <__udivmodsi4>:
    3316:	a1 e2       	ldi	r26, 0x21	; 33
    3318:	1a 2e       	mov	r1, r26
    331a:	aa 1b       	sub	r26, r26
    331c:	bb 1b       	sub	r27, r27
    331e:	fd 01       	movw	r30, r26
    3320:	0d c0       	rjmp	.+26     	; 0x333c <__udivmodsi4_ep>

00003322 <__udivmodsi4_loop>:
    3322:	aa 1f       	adc	r26, r26
    3324:	bb 1f       	adc	r27, r27
    3326:	ee 1f       	adc	r30, r30
    3328:	ff 1f       	adc	r31, r31
    332a:	a2 17       	cp	r26, r18
    332c:	b3 07       	cpc	r27, r19
    332e:	e4 07       	cpc	r30, r20
    3330:	f5 07       	cpc	r31, r21
    3332:	20 f0       	brcs	.+8      	; 0x333c <__udivmodsi4_ep>
    3334:	a2 1b       	sub	r26, r18
    3336:	b3 0b       	sbc	r27, r19
    3338:	e4 0b       	sbc	r30, r20
    333a:	f5 0b       	sbc	r31, r21

0000333c <__udivmodsi4_ep>:
    333c:	66 1f       	adc	r22, r22
    333e:	77 1f       	adc	r23, r23
    3340:	88 1f       	adc	r24, r24
    3342:	99 1f       	adc	r25, r25
    3344:	1a 94       	dec	r1
    3346:	69 f7       	brne	.-38     	; 0x3322 <__udivmodsi4_loop>
    3348:	60 95       	com	r22
    334a:	70 95       	com	r23
    334c:	80 95       	com	r24
    334e:	90 95       	com	r25
    3350:	9b 01       	movw	r18, r22
    3352:	ac 01       	movw	r20, r24
    3354:	bd 01       	movw	r22, r26
    3356:	cf 01       	movw	r24, r30
    3358:	08 95       	ret

0000335a <__muluhisi3>:
    335a:	0e 94 ef 19 	call	0x33de	; 0x33de <__umulhisi3>
    335e:	a5 9f       	mul	r26, r21
    3360:	90 0d       	add	r25, r0
    3362:	b4 9f       	mul	r27, r20
    3364:	90 0d       	add	r25, r0
    3366:	a4 9f       	mul	r26, r20
    3368:	80 0d       	add	r24, r0
    336a:	91 1d       	adc	r25, r1
    336c:	11 24       	eor	r1, r1
    336e:	08 95       	ret

00003370 <__prologue_saves__>:
    3370:	2f 92       	push	r2
    3372:	3f 92       	push	r3
    3374:	4f 92       	push	r4
    3376:	5f 92       	push	r5
    3378:	6f 92       	push	r6
    337a:	7f 92       	push	r7
    337c:	8f 92       	push	r8
    337e:	9f 92       	push	r9
    3380:	af 92       	push	r10
    3382:	bf 92       	push	r11
    3384:	cf 92       	push	r12
    3386:	df 92       	push	r13
    3388:	ef 92       	push	r14
    338a:	ff 92       	push	r15
    338c:	0f 93       	push	r16
    338e:	1f 93       	push	r17
    3390:	cf 93       	push	r28
    3392:	df 93       	push	r29
    3394:	cd b7       	in	r28, 0x3d	; 61
    3396:	de b7       	in	r29, 0x3e	; 62
    3398:	ca 1b       	sub	r28, r26
    339a:	db 0b       	sbc	r29, r27
    339c:	0f b6       	in	r0, 0x3f	; 63
    339e:	f8 94       	cli
    33a0:	de bf       	out	0x3e, r29	; 62
    33a2:	0f be       	out	0x3f, r0	; 63
    33a4:	cd bf       	out	0x3d, r28	; 61
    33a6:	09 94       	ijmp

000033a8 <__epilogue_restores__>:
    33a8:	2a 88       	ldd	r2, Y+18	; 0x12
    33aa:	39 88       	ldd	r3, Y+17	; 0x11
    33ac:	48 88       	ldd	r4, Y+16	; 0x10
    33ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    33b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    33b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    33b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    33b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    33b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    33ba:	b9 84       	ldd	r11, Y+9	; 0x09
    33bc:	c8 84       	ldd	r12, Y+8	; 0x08
    33be:	df 80       	ldd	r13, Y+7	; 0x07
    33c0:	ee 80       	ldd	r14, Y+6	; 0x06
    33c2:	fd 80       	ldd	r15, Y+5	; 0x05
    33c4:	0c 81       	ldd	r16, Y+4	; 0x04
    33c6:	1b 81       	ldd	r17, Y+3	; 0x03
    33c8:	aa 81       	ldd	r26, Y+2	; 0x02
    33ca:	b9 81       	ldd	r27, Y+1	; 0x01
    33cc:	ce 0f       	add	r28, r30
    33ce:	d1 1d       	adc	r29, r1
    33d0:	0f b6       	in	r0, 0x3f	; 63
    33d2:	f8 94       	cli
    33d4:	de bf       	out	0x3e, r29	; 62
    33d6:	0f be       	out	0x3f, r0	; 63
    33d8:	cd bf       	out	0x3d, r28	; 61
    33da:	ed 01       	movw	r28, r26
    33dc:	08 95       	ret

000033de <__umulhisi3>:
    33de:	a2 9f       	mul	r26, r18
    33e0:	b0 01       	movw	r22, r0
    33e2:	b3 9f       	mul	r27, r19
    33e4:	c0 01       	movw	r24, r0
    33e6:	a3 9f       	mul	r26, r19
    33e8:	70 0d       	add	r23, r0
    33ea:	81 1d       	adc	r24, r1
    33ec:	11 24       	eor	r1, r1
    33ee:	91 1d       	adc	r25, r1
    33f0:	b2 9f       	mul	r27, r18
    33f2:	70 0d       	add	r23, r0
    33f4:	81 1d       	adc	r24, r1
    33f6:	11 24       	eor	r1, r1
    33f8:	91 1d       	adc	r25, r1
    33fa:	08 95       	ret

000033fc <__ftoa_engine>:
    33fc:	28 30       	cpi	r18, 0x08	; 8
    33fe:	08 f0       	brcs	.+2      	; 0x3402 <__ftoa_engine+0x6>
    3400:	27 e0       	ldi	r18, 0x07	; 7
    3402:	33 27       	eor	r19, r19
    3404:	da 01       	movw	r26, r20
    3406:	99 0f       	add	r25, r25
    3408:	31 1d       	adc	r19, r1
    340a:	87 fd       	sbrc	r24, 7
    340c:	91 60       	ori	r25, 0x01	; 1
    340e:	00 96       	adiw	r24, 0x00	; 0
    3410:	61 05       	cpc	r22, r1
    3412:	71 05       	cpc	r23, r1
    3414:	39 f4       	brne	.+14     	; 0x3424 <__ftoa_engine+0x28>
    3416:	32 60       	ori	r19, 0x02	; 2
    3418:	2e 5f       	subi	r18, 0xFE	; 254
    341a:	3d 93       	st	X+, r19
    341c:	30 e3       	ldi	r19, 0x30	; 48
    341e:	2a 95       	dec	r18
    3420:	e1 f7       	brne	.-8      	; 0x341a <__ftoa_engine+0x1e>
    3422:	08 95       	ret
    3424:	9f 3f       	cpi	r25, 0xFF	; 255
    3426:	30 f0       	brcs	.+12     	; 0x3434 <__ftoa_engine+0x38>
    3428:	80 38       	cpi	r24, 0x80	; 128
    342a:	71 05       	cpc	r23, r1
    342c:	61 05       	cpc	r22, r1
    342e:	09 f0       	breq	.+2      	; 0x3432 <__ftoa_engine+0x36>
    3430:	3c 5f       	subi	r19, 0xFC	; 252
    3432:	3c 5f       	subi	r19, 0xFC	; 252
    3434:	3d 93       	st	X+, r19
    3436:	91 30       	cpi	r25, 0x01	; 1
    3438:	08 f0       	brcs	.+2      	; 0x343c <__ftoa_engine+0x40>
    343a:	80 68       	ori	r24, 0x80	; 128
    343c:	91 1d       	adc	r25, r1
    343e:	df 93       	push	r29
    3440:	cf 93       	push	r28
    3442:	1f 93       	push	r17
    3444:	0f 93       	push	r16
    3446:	ff 92       	push	r15
    3448:	ef 92       	push	r14
    344a:	19 2f       	mov	r17, r25
    344c:	98 7f       	andi	r25, 0xF8	; 248
    344e:	96 95       	lsr	r25
    3450:	e9 2f       	mov	r30, r25
    3452:	96 95       	lsr	r25
    3454:	96 95       	lsr	r25
    3456:	e9 0f       	add	r30, r25
    3458:	ff 27       	eor	r31, r31
    345a:	e6 53       	subi	r30, 0x36	; 54
    345c:	ff 4f       	sbci	r31, 0xFF	; 255
    345e:	99 27       	eor	r25, r25
    3460:	33 27       	eor	r19, r19
    3462:	ee 24       	eor	r14, r14
    3464:	ff 24       	eor	r15, r15
    3466:	a7 01       	movw	r20, r14
    3468:	e7 01       	movw	r28, r14
    346a:	05 90       	lpm	r0, Z+
    346c:	08 94       	sec
    346e:	07 94       	ror	r0
    3470:	28 f4       	brcc	.+10     	; 0x347c <__ftoa_engine+0x80>
    3472:	36 0f       	add	r19, r22
    3474:	e7 1e       	adc	r14, r23
    3476:	f8 1e       	adc	r15, r24
    3478:	49 1f       	adc	r20, r25
    347a:	51 1d       	adc	r21, r1
    347c:	66 0f       	add	r22, r22
    347e:	77 1f       	adc	r23, r23
    3480:	88 1f       	adc	r24, r24
    3482:	99 1f       	adc	r25, r25
    3484:	06 94       	lsr	r0
    3486:	a1 f7       	brne	.-24     	; 0x3470 <__ftoa_engine+0x74>
    3488:	05 90       	lpm	r0, Z+
    348a:	07 94       	ror	r0
    348c:	28 f4       	brcc	.+10     	; 0x3498 <__ftoa_engine+0x9c>
    348e:	e7 0e       	add	r14, r23
    3490:	f8 1e       	adc	r15, r24
    3492:	49 1f       	adc	r20, r25
    3494:	56 1f       	adc	r21, r22
    3496:	c1 1d       	adc	r28, r1
    3498:	77 0f       	add	r23, r23
    349a:	88 1f       	adc	r24, r24
    349c:	99 1f       	adc	r25, r25
    349e:	66 1f       	adc	r22, r22
    34a0:	06 94       	lsr	r0
    34a2:	a1 f7       	brne	.-24     	; 0x348c <__ftoa_engine+0x90>
    34a4:	05 90       	lpm	r0, Z+
    34a6:	07 94       	ror	r0
    34a8:	28 f4       	brcc	.+10     	; 0x34b4 <__ftoa_engine+0xb8>
    34aa:	f8 0e       	add	r15, r24
    34ac:	49 1f       	adc	r20, r25
    34ae:	56 1f       	adc	r21, r22
    34b0:	c7 1f       	adc	r28, r23
    34b2:	d1 1d       	adc	r29, r1
    34b4:	88 0f       	add	r24, r24
    34b6:	99 1f       	adc	r25, r25
    34b8:	66 1f       	adc	r22, r22
    34ba:	77 1f       	adc	r23, r23
    34bc:	06 94       	lsr	r0
    34be:	a1 f7       	brne	.-24     	; 0x34a8 <__ftoa_engine+0xac>
    34c0:	05 90       	lpm	r0, Z+
    34c2:	07 94       	ror	r0
    34c4:	20 f4       	brcc	.+8      	; 0x34ce <__ftoa_engine+0xd2>
    34c6:	49 0f       	add	r20, r25
    34c8:	56 1f       	adc	r21, r22
    34ca:	c7 1f       	adc	r28, r23
    34cc:	d8 1f       	adc	r29, r24
    34ce:	99 0f       	add	r25, r25
    34d0:	66 1f       	adc	r22, r22
    34d2:	77 1f       	adc	r23, r23
    34d4:	88 1f       	adc	r24, r24
    34d6:	06 94       	lsr	r0
    34d8:	a9 f7       	brne	.-22     	; 0x34c4 <__ftoa_engine+0xc8>
    34da:	84 91       	lpm	r24, Z
    34dc:	10 95       	com	r17
    34de:	17 70       	andi	r17, 0x07	; 7
    34e0:	41 f0       	breq	.+16     	; 0x34f2 <__ftoa_engine+0xf6>
    34e2:	d6 95       	lsr	r29
    34e4:	c7 95       	ror	r28
    34e6:	57 95       	ror	r21
    34e8:	47 95       	ror	r20
    34ea:	f7 94       	ror	r15
    34ec:	e7 94       	ror	r14
    34ee:	1a 95       	dec	r17
    34f0:	c1 f7       	brne	.-16     	; 0x34e2 <__ftoa_engine+0xe6>
    34f2:	e0 e7       	ldi	r30, 0x70	; 112
    34f4:	f0 e0       	ldi	r31, 0x00	; 0
    34f6:	68 94       	set
    34f8:	15 90       	lpm	r1, Z+
    34fa:	15 91       	lpm	r17, Z+
    34fc:	35 91       	lpm	r19, Z+
    34fe:	65 91       	lpm	r22, Z+
    3500:	95 91       	lpm	r25, Z+
    3502:	05 90       	lpm	r0, Z+
    3504:	7f e2       	ldi	r23, 0x2F	; 47
    3506:	73 95       	inc	r23
    3508:	e1 18       	sub	r14, r1
    350a:	f1 0a       	sbc	r15, r17
    350c:	43 0b       	sbc	r20, r19
    350e:	56 0b       	sbc	r21, r22
    3510:	c9 0b       	sbc	r28, r25
    3512:	d0 09       	sbc	r29, r0
    3514:	c0 f7       	brcc	.-16     	; 0x3506 <__ftoa_engine+0x10a>
    3516:	e1 0c       	add	r14, r1
    3518:	f1 1e       	adc	r15, r17
    351a:	43 1f       	adc	r20, r19
    351c:	56 1f       	adc	r21, r22
    351e:	c9 1f       	adc	r28, r25
    3520:	d0 1d       	adc	r29, r0
    3522:	7e f4       	brtc	.+30     	; 0x3542 <__ftoa_engine+0x146>
    3524:	70 33       	cpi	r23, 0x30	; 48
    3526:	11 f4       	brne	.+4      	; 0x352c <__ftoa_engine+0x130>
    3528:	8a 95       	dec	r24
    352a:	e6 cf       	rjmp	.-52     	; 0x34f8 <__ftoa_engine+0xfc>
    352c:	e8 94       	clt
    352e:	01 50       	subi	r16, 0x01	; 1
    3530:	30 f0       	brcs	.+12     	; 0x353e <__ftoa_engine+0x142>
    3532:	08 0f       	add	r16, r24
    3534:	0a f4       	brpl	.+2      	; 0x3538 <__ftoa_engine+0x13c>
    3536:	00 27       	eor	r16, r16
    3538:	02 17       	cp	r16, r18
    353a:	08 f4       	brcc	.+2      	; 0x353e <__ftoa_engine+0x142>
    353c:	20 2f       	mov	r18, r16
    353e:	23 95       	inc	r18
    3540:	02 2f       	mov	r16, r18
    3542:	7a 33       	cpi	r23, 0x3A	; 58
    3544:	28 f0       	brcs	.+10     	; 0x3550 <__ftoa_engine+0x154>
    3546:	79 e3       	ldi	r23, 0x39	; 57
    3548:	7d 93       	st	X+, r23
    354a:	2a 95       	dec	r18
    354c:	e9 f7       	brne	.-6      	; 0x3548 <__ftoa_engine+0x14c>
    354e:	10 c0       	rjmp	.+32     	; 0x3570 <__ftoa_engine+0x174>
    3550:	7d 93       	st	X+, r23
    3552:	2a 95       	dec	r18
    3554:	89 f6       	brne	.-94     	; 0x34f8 <__ftoa_engine+0xfc>
    3556:	06 94       	lsr	r0
    3558:	97 95       	ror	r25
    355a:	67 95       	ror	r22
    355c:	37 95       	ror	r19
    355e:	17 95       	ror	r17
    3560:	17 94       	ror	r1
    3562:	e1 18       	sub	r14, r1
    3564:	f1 0a       	sbc	r15, r17
    3566:	43 0b       	sbc	r20, r19
    3568:	56 0b       	sbc	r21, r22
    356a:	c9 0b       	sbc	r28, r25
    356c:	d0 09       	sbc	r29, r0
    356e:	98 f0       	brcs	.+38     	; 0x3596 <__ftoa_engine+0x19a>
    3570:	23 95       	inc	r18
    3572:	7e 91       	ld	r23, -X
    3574:	73 95       	inc	r23
    3576:	7a 33       	cpi	r23, 0x3A	; 58
    3578:	08 f0       	brcs	.+2      	; 0x357c <__ftoa_engine+0x180>
    357a:	70 e3       	ldi	r23, 0x30	; 48
    357c:	7c 93       	st	X, r23
    357e:	20 13       	cpse	r18, r16
    3580:	b8 f7       	brcc	.-18     	; 0x3570 <__ftoa_engine+0x174>
    3582:	7e 91       	ld	r23, -X
    3584:	70 61       	ori	r23, 0x10	; 16
    3586:	7d 93       	st	X+, r23
    3588:	30 f0       	brcs	.+12     	; 0x3596 <__ftoa_engine+0x19a>
    358a:	83 95       	inc	r24
    358c:	71 e3       	ldi	r23, 0x31	; 49
    358e:	7d 93       	st	X+, r23
    3590:	70 e3       	ldi	r23, 0x30	; 48
    3592:	2a 95       	dec	r18
    3594:	e1 f7       	brne	.-8      	; 0x358e <__ftoa_engine+0x192>
    3596:	11 24       	eor	r1, r1
    3598:	ef 90       	pop	r14
    359a:	ff 90       	pop	r15
    359c:	0f 91       	pop	r16
    359e:	1f 91       	pop	r17
    35a0:	cf 91       	pop	r28
    35a2:	df 91       	pop	r29
    35a4:	99 27       	eor	r25, r25
    35a6:	87 fd       	sbrc	r24, 7
    35a8:	90 95       	com	r25
    35aa:	08 95       	ret

000035ac <strnlen_P>:
    35ac:	fc 01       	movw	r30, r24
    35ae:	05 90       	lpm	r0, Z+
    35b0:	61 50       	subi	r22, 0x01	; 1
    35b2:	70 40       	sbci	r23, 0x00	; 0
    35b4:	01 10       	cpse	r0, r1
    35b6:	d8 f7       	brcc	.-10     	; 0x35ae <strnlen_P+0x2>
    35b8:	80 95       	com	r24
    35ba:	90 95       	com	r25
    35bc:	8e 0f       	add	r24, r30
    35be:	9f 1f       	adc	r25, r31
    35c0:	08 95       	ret

000035c2 <memset>:
    35c2:	dc 01       	movw	r26, r24
    35c4:	01 c0       	rjmp	.+2      	; 0x35c8 <memset+0x6>
    35c6:	6d 93       	st	X+, r22
    35c8:	41 50       	subi	r20, 0x01	; 1
    35ca:	50 40       	sbci	r21, 0x00	; 0
    35cc:	e0 f7       	brcc	.-8      	; 0x35c6 <memset+0x4>
    35ce:	08 95       	ret

000035d0 <strcat>:
    35d0:	fb 01       	movw	r30, r22
    35d2:	dc 01       	movw	r26, r24
    35d4:	0d 90       	ld	r0, X+
    35d6:	00 20       	and	r0, r0
    35d8:	e9 f7       	brne	.-6      	; 0x35d4 <strcat+0x4>
    35da:	11 97       	sbiw	r26, 0x01	; 1
    35dc:	01 90       	ld	r0, Z+
    35de:	0d 92       	st	X+, r0
    35e0:	00 20       	and	r0, r0
    35e2:	e1 f7       	brne	.-8      	; 0x35dc <strcat+0xc>
    35e4:	08 95       	ret

000035e6 <strnlen>:
    35e6:	fc 01       	movw	r30, r24
    35e8:	61 50       	subi	r22, 0x01	; 1
    35ea:	70 40       	sbci	r23, 0x00	; 0
    35ec:	01 90       	ld	r0, Z+
    35ee:	01 10       	cpse	r0, r1
    35f0:	d8 f7       	brcc	.-10     	; 0x35e8 <strnlen+0x2>
    35f2:	80 95       	com	r24
    35f4:	90 95       	com	r25
    35f6:	8e 0f       	add	r24, r30
    35f8:	9f 1f       	adc	r25, r31
    35fa:	08 95       	ret

000035fc <fputc>:
    35fc:	0f 93       	push	r16
    35fe:	1f 93       	push	r17
    3600:	cf 93       	push	r28
    3602:	df 93       	push	r29
    3604:	fb 01       	movw	r30, r22
    3606:	23 81       	ldd	r18, Z+3	; 0x03
    3608:	21 fd       	sbrc	r18, 1
    360a:	03 c0       	rjmp	.+6      	; 0x3612 <fputc+0x16>
    360c:	8f ef       	ldi	r24, 0xFF	; 255
    360e:	9f ef       	ldi	r25, 0xFF	; 255
    3610:	2c c0       	rjmp	.+88     	; 0x366a <fputc+0x6e>
    3612:	22 ff       	sbrs	r18, 2
    3614:	16 c0       	rjmp	.+44     	; 0x3642 <fputc+0x46>
    3616:	46 81       	ldd	r20, Z+6	; 0x06
    3618:	57 81       	ldd	r21, Z+7	; 0x07
    361a:	24 81       	ldd	r18, Z+4	; 0x04
    361c:	35 81       	ldd	r19, Z+5	; 0x05
    361e:	42 17       	cp	r20, r18
    3620:	53 07       	cpc	r21, r19
    3622:	44 f4       	brge	.+16     	; 0x3634 <fputc+0x38>
    3624:	a0 81       	ld	r26, Z
    3626:	b1 81       	ldd	r27, Z+1	; 0x01
    3628:	9d 01       	movw	r18, r26
    362a:	2f 5f       	subi	r18, 0xFF	; 255
    362c:	3f 4f       	sbci	r19, 0xFF	; 255
    362e:	31 83       	std	Z+1, r19	; 0x01
    3630:	20 83       	st	Z, r18
    3632:	8c 93       	st	X, r24
    3634:	26 81       	ldd	r18, Z+6	; 0x06
    3636:	37 81       	ldd	r19, Z+7	; 0x07
    3638:	2f 5f       	subi	r18, 0xFF	; 255
    363a:	3f 4f       	sbci	r19, 0xFF	; 255
    363c:	37 83       	std	Z+7, r19	; 0x07
    363e:	26 83       	std	Z+6, r18	; 0x06
    3640:	14 c0       	rjmp	.+40     	; 0x366a <fputc+0x6e>
    3642:	8b 01       	movw	r16, r22
    3644:	ec 01       	movw	r28, r24
    3646:	fb 01       	movw	r30, r22
    3648:	00 84       	ldd	r0, Z+8	; 0x08
    364a:	f1 85       	ldd	r31, Z+9	; 0x09
    364c:	e0 2d       	mov	r30, r0
    364e:	09 95       	icall
    3650:	89 2b       	or	r24, r25
    3652:	e1 f6       	brne	.-72     	; 0x360c <fputc+0x10>
    3654:	d8 01       	movw	r26, r16
    3656:	16 96       	adiw	r26, 0x06	; 6
    3658:	8d 91       	ld	r24, X+
    365a:	9c 91       	ld	r25, X
    365c:	17 97       	sbiw	r26, 0x07	; 7
    365e:	01 96       	adiw	r24, 0x01	; 1
    3660:	17 96       	adiw	r26, 0x07	; 7
    3662:	9c 93       	st	X, r25
    3664:	8e 93       	st	-X, r24
    3666:	16 97       	sbiw	r26, 0x06	; 6
    3668:	ce 01       	movw	r24, r28
    366a:	df 91       	pop	r29
    366c:	cf 91       	pop	r28
    366e:	1f 91       	pop	r17
    3670:	0f 91       	pop	r16
    3672:	08 95       	ret

00003674 <sprintf>:
    3674:	ae e0       	ldi	r26, 0x0E	; 14
    3676:	b0 e0       	ldi	r27, 0x00	; 0
    3678:	e0 e4       	ldi	r30, 0x40	; 64
    367a:	fb e1       	ldi	r31, 0x1B	; 27
    367c:	0c 94 c6 19 	jmp	0x338c	; 0x338c <__prologue_saves__+0x1c>
    3680:	0d 89       	ldd	r16, Y+21	; 0x15
    3682:	1e 89       	ldd	r17, Y+22	; 0x16
    3684:	86 e0       	ldi	r24, 0x06	; 6
    3686:	8c 83       	std	Y+4, r24	; 0x04
    3688:	1a 83       	std	Y+2, r17	; 0x02
    368a:	09 83       	std	Y+1, r16	; 0x01
    368c:	8f ef       	ldi	r24, 0xFF	; 255
    368e:	9f e7       	ldi	r25, 0x7F	; 127
    3690:	9e 83       	std	Y+6, r25	; 0x06
    3692:	8d 83       	std	Y+5, r24	; 0x05
    3694:	ae 01       	movw	r20, r28
    3696:	47 5e       	subi	r20, 0xE7	; 231
    3698:	5f 4f       	sbci	r21, 0xFF	; 255
    369a:	6f 89       	ldd	r22, Y+23	; 0x17
    369c:	78 8d       	ldd	r23, Y+24	; 0x18
    369e:	ce 01       	movw	r24, r28
    36a0:	01 96       	adiw	r24, 0x01	; 1
    36a2:	0e 94 0e 16 	call	0x2c1c	; 0x2c1c <vfprintf>
    36a6:	ef 81       	ldd	r30, Y+7	; 0x07
    36a8:	f8 85       	ldd	r31, Y+8	; 0x08
    36aa:	e0 0f       	add	r30, r16
    36ac:	f1 1f       	adc	r31, r17
    36ae:	10 82       	st	Z, r1
    36b0:	2e 96       	adiw	r28, 0x0e	; 14
    36b2:	e4 e0       	ldi	r30, 0x04	; 4
    36b4:	0c 94 e2 19 	jmp	0x33c4	; 0x33c4 <__epilogue_restores__+0x1c>

000036b8 <sscanf>:
    36b8:	ae e0       	ldi	r26, 0x0E	; 14
    36ba:	b0 e0       	ldi	r27, 0x00	; 0
    36bc:	e2 e6       	ldi	r30, 0x62	; 98
    36be:	fb e1       	ldi	r31, 0x1B	; 27
    36c0:	0c 94 c8 19 	jmp	0x3390	; 0x3390 <__prologue_saves__+0x20>
    36c4:	85 e0       	ldi	r24, 0x05	; 5
    36c6:	8c 83       	std	Y+4, r24	; 0x04
    36c8:	8b 89       	ldd	r24, Y+19	; 0x13
    36ca:	9c 89       	ldd	r25, Y+20	; 0x14
    36cc:	9a 83       	std	Y+2, r25	; 0x02
    36ce:	89 83       	std	Y+1, r24	; 0x01
    36d0:	ae 01       	movw	r20, r28
    36d2:	49 5e       	subi	r20, 0xE9	; 233
    36d4:	5f 4f       	sbci	r21, 0xFF	; 255
    36d6:	6d 89       	ldd	r22, Y+21	; 0x15
    36d8:	7e 89       	ldd	r23, Y+22	; 0x16
    36da:	ce 01       	movw	r24, r28
    36dc:	01 96       	adiw	r24, 0x01	; 1
    36de:	0e 94 6f 1d 	call	0x3ade	; 0x3ade <vfscanf>
    36e2:	2e 96       	adiw	r28, 0x0e	; 14
    36e4:	e2 e0       	ldi	r30, 0x02	; 2
    36e6:	0c 94 e4 19 	jmp	0x33c8	; 0x33c8 <__epilogue_restores__+0x20>

000036ea <__ultoa_invert>:
    36ea:	fa 01       	movw	r30, r20
    36ec:	aa 27       	eor	r26, r26
    36ee:	28 30       	cpi	r18, 0x08	; 8
    36f0:	51 f1       	breq	.+84     	; 0x3746 <__ultoa_invert+0x5c>
    36f2:	20 31       	cpi	r18, 0x10	; 16
    36f4:	81 f1       	breq	.+96     	; 0x3756 <__ultoa_invert+0x6c>
    36f6:	e8 94       	clt
    36f8:	6f 93       	push	r22
    36fa:	6e 7f       	andi	r22, 0xFE	; 254
    36fc:	6e 5f       	subi	r22, 0xFE	; 254
    36fe:	7f 4f       	sbci	r23, 0xFF	; 255
    3700:	8f 4f       	sbci	r24, 0xFF	; 255
    3702:	9f 4f       	sbci	r25, 0xFF	; 255
    3704:	af 4f       	sbci	r26, 0xFF	; 255
    3706:	b1 e0       	ldi	r27, 0x01	; 1
    3708:	3e d0       	rcall	.+124    	; 0x3786 <__ultoa_invert+0x9c>
    370a:	b4 e0       	ldi	r27, 0x04	; 4
    370c:	3c d0       	rcall	.+120    	; 0x3786 <__ultoa_invert+0x9c>
    370e:	67 0f       	add	r22, r23
    3710:	78 1f       	adc	r23, r24
    3712:	89 1f       	adc	r24, r25
    3714:	9a 1f       	adc	r25, r26
    3716:	a1 1d       	adc	r26, r1
    3718:	68 0f       	add	r22, r24
    371a:	79 1f       	adc	r23, r25
    371c:	8a 1f       	adc	r24, r26
    371e:	91 1d       	adc	r25, r1
    3720:	a1 1d       	adc	r26, r1
    3722:	6a 0f       	add	r22, r26
    3724:	71 1d       	adc	r23, r1
    3726:	81 1d       	adc	r24, r1
    3728:	91 1d       	adc	r25, r1
    372a:	a1 1d       	adc	r26, r1
    372c:	20 d0       	rcall	.+64     	; 0x376e <__ultoa_invert+0x84>
    372e:	09 f4       	brne	.+2      	; 0x3732 <__ultoa_invert+0x48>
    3730:	68 94       	set
    3732:	3f 91       	pop	r19
    3734:	2a e0       	ldi	r18, 0x0A	; 10
    3736:	26 9f       	mul	r18, r22
    3738:	11 24       	eor	r1, r1
    373a:	30 19       	sub	r19, r0
    373c:	30 5d       	subi	r19, 0xD0	; 208
    373e:	31 93       	st	Z+, r19
    3740:	de f6       	brtc	.-74     	; 0x36f8 <__ultoa_invert+0xe>
    3742:	cf 01       	movw	r24, r30
    3744:	08 95       	ret
    3746:	46 2f       	mov	r20, r22
    3748:	47 70       	andi	r20, 0x07	; 7
    374a:	40 5d       	subi	r20, 0xD0	; 208
    374c:	41 93       	st	Z+, r20
    374e:	b3 e0       	ldi	r27, 0x03	; 3
    3750:	0f d0       	rcall	.+30     	; 0x3770 <__ultoa_invert+0x86>
    3752:	c9 f7       	brne	.-14     	; 0x3746 <__ultoa_invert+0x5c>
    3754:	f6 cf       	rjmp	.-20     	; 0x3742 <__ultoa_invert+0x58>
    3756:	46 2f       	mov	r20, r22
    3758:	4f 70       	andi	r20, 0x0F	; 15
    375a:	40 5d       	subi	r20, 0xD0	; 208
    375c:	4a 33       	cpi	r20, 0x3A	; 58
    375e:	18 f0       	brcs	.+6      	; 0x3766 <__ultoa_invert+0x7c>
    3760:	49 5d       	subi	r20, 0xD9	; 217
    3762:	31 fd       	sbrc	r19, 1
    3764:	40 52       	subi	r20, 0x20	; 32
    3766:	41 93       	st	Z+, r20
    3768:	02 d0       	rcall	.+4      	; 0x376e <__ultoa_invert+0x84>
    376a:	a9 f7       	brne	.-22     	; 0x3756 <__ultoa_invert+0x6c>
    376c:	ea cf       	rjmp	.-44     	; 0x3742 <__ultoa_invert+0x58>
    376e:	b4 e0       	ldi	r27, 0x04	; 4
    3770:	a6 95       	lsr	r26
    3772:	97 95       	ror	r25
    3774:	87 95       	ror	r24
    3776:	77 95       	ror	r23
    3778:	67 95       	ror	r22
    377a:	ba 95       	dec	r27
    377c:	c9 f7       	brne	.-14     	; 0x3770 <__ultoa_invert+0x86>
    377e:	00 97       	sbiw	r24, 0x00	; 0
    3780:	61 05       	cpc	r22, r1
    3782:	71 05       	cpc	r23, r1
    3784:	08 95       	ret
    3786:	9b 01       	movw	r18, r22
    3788:	ac 01       	movw	r20, r24
    378a:	0a 2e       	mov	r0, r26
    378c:	06 94       	lsr	r0
    378e:	57 95       	ror	r21
    3790:	47 95       	ror	r20
    3792:	37 95       	ror	r19
    3794:	27 95       	ror	r18
    3796:	ba 95       	dec	r27
    3798:	c9 f7       	brne	.-14     	; 0x378c <__ultoa_invert+0xa2>
    379a:	62 0f       	add	r22, r18
    379c:	73 1f       	adc	r23, r19
    379e:	84 1f       	adc	r24, r20
    37a0:	95 1f       	adc	r25, r21
    37a2:	a0 1d       	adc	r26, r0
    37a4:	08 95       	ret

000037a6 <putval>:
    37a6:	20 fd       	sbrc	r18, 0
    37a8:	09 c0       	rjmp	.+18     	; 0x37bc <putval+0x16>
    37aa:	fc 01       	movw	r30, r24
    37ac:	23 fd       	sbrc	r18, 3
    37ae:	05 c0       	rjmp	.+10     	; 0x37ba <putval+0x14>
    37b0:	22 ff       	sbrs	r18, 2
    37b2:	02 c0       	rjmp	.+4      	; 0x37b8 <putval+0x12>
    37b4:	73 83       	std	Z+3, r23	; 0x03
    37b6:	62 83       	std	Z+2, r22	; 0x02
    37b8:	51 83       	std	Z+1, r21	; 0x01
    37ba:	40 83       	st	Z, r20
    37bc:	08 95       	ret

000037be <mulacc>:
    37be:	44 fd       	sbrc	r20, 4
    37c0:	17 c0       	rjmp	.+46     	; 0x37f0 <mulacc+0x32>
    37c2:	46 fd       	sbrc	r20, 6
    37c4:	17 c0       	rjmp	.+46     	; 0x37f4 <mulacc+0x36>
    37c6:	ab 01       	movw	r20, r22
    37c8:	bc 01       	movw	r22, r24
    37ca:	da 01       	movw	r26, r20
    37cc:	fb 01       	movw	r30, r22
    37ce:	aa 0f       	add	r26, r26
    37d0:	bb 1f       	adc	r27, r27
    37d2:	ee 1f       	adc	r30, r30
    37d4:	ff 1f       	adc	r31, r31
    37d6:	10 94       	com	r1
    37d8:	d1 f7       	brne	.-12     	; 0x37ce <mulacc+0x10>
    37da:	4a 0f       	add	r20, r26
    37dc:	5b 1f       	adc	r21, r27
    37de:	6e 1f       	adc	r22, r30
    37e0:	7f 1f       	adc	r23, r31
    37e2:	cb 01       	movw	r24, r22
    37e4:	ba 01       	movw	r22, r20
    37e6:	66 0f       	add	r22, r22
    37e8:	77 1f       	adc	r23, r23
    37ea:	88 1f       	adc	r24, r24
    37ec:	99 1f       	adc	r25, r25
    37ee:	09 c0       	rjmp	.+18     	; 0x3802 <mulacc+0x44>
    37f0:	33 e0       	ldi	r19, 0x03	; 3
    37f2:	01 c0       	rjmp	.+2      	; 0x37f6 <mulacc+0x38>
    37f4:	34 e0       	ldi	r19, 0x04	; 4
    37f6:	66 0f       	add	r22, r22
    37f8:	77 1f       	adc	r23, r23
    37fa:	88 1f       	adc	r24, r24
    37fc:	99 1f       	adc	r25, r25
    37fe:	31 50       	subi	r19, 0x01	; 1
    3800:	d1 f7       	brne	.-12     	; 0x37f6 <mulacc+0x38>
    3802:	62 0f       	add	r22, r18
    3804:	71 1d       	adc	r23, r1
    3806:	81 1d       	adc	r24, r1
    3808:	91 1d       	adc	r25, r1
    380a:	08 95       	ret

0000380c <skip_spaces>:
    380c:	0f 93       	push	r16
    380e:	1f 93       	push	r17
    3810:	cf 93       	push	r28
    3812:	df 93       	push	r29
    3814:	8c 01       	movw	r16, r24
    3816:	c8 01       	movw	r24, r16
    3818:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    381c:	ec 01       	movw	r28, r24
    381e:	97 fd       	sbrc	r25, 7
    3820:	08 c0       	rjmp	.+16     	; 0x3832 <skip_spaces+0x26>
    3822:	0e 94 80 1e 	call	0x3d00	; 0x3d00 <isspace>
    3826:	89 2b       	or	r24, r25
    3828:	b1 f7       	brne	.-20     	; 0x3816 <skip_spaces+0xa>
    382a:	b8 01       	movw	r22, r16
    382c:	ce 01       	movw	r24, r28
    382e:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <ungetc>
    3832:	ce 01       	movw	r24, r28
    3834:	df 91       	pop	r29
    3836:	cf 91       	pop	r28
    3838:	1f 91       	pop	r17
    383a:	0f 91       	pop	r16
    383c:	08 95       	ret

0000383e <conv_int>:
    383e:	8f 92       	push	r8
    3840:	9f 92       	push	r9
    3842:	af 92       	push	r10
    3844:	bf 92       	push	r11
    3846:	ef 92       	push	r14
    3848:	ff 92       	push	r15
    384a:	0f 93       	push	r16
    384c:	1f 93       	push	r17
    384e:	cf 93       	push	r28
    3850:	df 93       	push	r29
    3852:	8c 01       	movw	r16, r24
    3854:	d6 2f       	mov	r29, r22
    3856:	7a 01       	movw	r14, r20
    3858:	b2 2e       	mov	r11, r18
    385a:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    385e:	9c 01       	movw	r18, r24
    3860:	33 27       	eor	r19, r19
    3862:	2b 32       	cpi	r18, 0x2B	; 43
    3864:	31 05       	cpc	r19, r1
    3866:	31 f0       	breq	.+12     	; 0x3874 <conv_int+0x36>
    3868:	2d 32       	cpi	r18, 0x2D	; 45
    386a:	31 05       	cpc	r19, r1
    386c:	61 f4       	brne	.+24     	; 0x3886 <conv_int+0x48>
    386e:	8b 2d       	mov	r24, r11
    3870:	80 68       	ori	r24, 0x80	; 128
    3872:	b8 2e       	mov	r11, r24
    3874:	d1 50       	subi	r29, 0x01	; 1
    3876:	11 f4       	brne	.+4      	; 0x387c <conv_int+0x3e>
    3878:	80 e0       	ldi	r24, 0x00	; 0
    387a:	68 c0       	rjmp	.+208    	; 0x394c <conv_int+0x10e>
    387c:	c8 01       	movw	r24, r16
    387e:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    3882:	97 fd       	sbrc	r25, 7
    3884:	f9 cf       	rjmp	.-14     	; 0x3878 <conv_int+0x3a>
    3886:	cb 2d       	mov	r28, r11
    3888:	cd 7f       	andi	r28, 0xFD	; 253
    388a:	2b 2d       	mov	r18, r11
    388c:	20 73       	andi	r18, 0x30	; 48
    388e:	09 f5       	brne	.+66     	; 0x38d2 <conv_int+0x94>
    3890:	80 33       	cpi	r24, 0x30	; 48
    3892:	f9 f4       	brne	.+62     	; 0x38d2 <conv_int+0x94>
    3894:	aa 24       	eor	r10, r10
    3896:	aa 94       	dec	r10
    3898:	ad 0e       	add	r10, r29
    389a:	09 f4       	brne	.+2      	; 0x389e <conv_int+0x60>
    389c:	43 c0       	rjmp	.+134    	; 0x3924 <conv_int+0xe6>
    389e:	c8 01       	movw	r24, r16
    38a0:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    38a4:	97 fd       	sbrc	r25, 7
    38a6:	3e c0       	rjmp	.+124    	; 0x3924 <conv_int+0xe6>
    38a8:	9c 01       	movw	r18, r24
    38aa:	2f 7d       	andi	r18, 0xDF	; 223
    38ac:	33 27       	eor	r19, r19
    38ae:	28 35       	cpi	r18, 0x58	; 88
    38b0:	31 05       	cpc	r19, r1
    38b2:	49 f4       	brne	.+18     	; 0x38c6 <conv_int+0x88>
    38b4:	c2 64       	ori	r28, 0x42	; 66
    38b6:	d2 50       	subi	r29, 0x02	; 2
    38b8:	a9 f1       	breq	.+106    	; 0x3924 <conv_int+0xe6>
    38ba:	c8 01       	movw	r24, r16
    38bc:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    38c0:	97 ff       	sbrs	r25, 7
    38c2:	07 c0       	rjmp	.+14     	; 0x38d2 <conv_int+0x94>
    38c4:	2f c0       	rjmp	.+94     	; 0x3924 <conv_int+0xe6>
    38c6:	b6 fe       	sbrs	r11, 6
    38c8:	02 c0       	rjmp	.+4      	; 0x38ce <conv_int+0x90>
    38ca:	c2 60       	ori	r28, 0x02	; 2
    38cc:	01 c0       	rjmp	.+2      	; 0x38d0 <conv_int+0x92>
    38ce:	c2 61       	ori	r28, 0x12	; 18
    38d0:	da 2d       	mov	r29, r10
    38d2:	81 2c       	mov	r8, r1
    38d4:	91 2c       	mov	r9, r1
    38d6:	54 01       	movw	r10, r8
    38d8:	20 ed       	ldi	r18, 0xD0	; 208
    38da:	28 0f       	add	r18, r24
    38dc:	28 30       	cpi	r18, 0x08	; 8
    38de:	80 f0       	brcs	.+32     	; 0x3900 <conv_int+0xc2>
    38e0:	c4 ff       	sbrs	r28, 4
    38e2:	04 c0       	rjmp	.+8      	; 0x38ec <conv_int+0xae>
    38e4:	b8 01       	movw	r22, r16
    38e6:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <ungetc>
    38ea:	19 c0       	rjmp	.+50     	; 0x391e <conv_int+0xe0>
    38ec:	2a 30       	cpi	r18, 0x0A	; 10
    38ee:	40 f0       	brcs	.+16     	; 0x3900 <conv_int+0xc2>
    38f0:	c6 ff       	sbrs	r28, 6
    38f2:	f8 cf       	rjmp	.-16     	; 0x38e4 <conv_int+0xa6>
    38f4:	2f 7d       	andi	r18, 0xDF	; 223
    38f6:	3f ee       	ldi	r19, 0xEF	; 239
    38f8:	32 0f       	add	r19, r18
    38fa:	36 30       	cpi	r19, 0x06	; 6
    38fc:	98 f7       	brcc	.-26     	; 0x38e4 <conv_int+0xa6>
    38fe:	27 50       	subi	r18, 0x07	; 7
    3900:	4c 2f       	mov	r20, r28
    3902:	c5 01       	movw	r24, r10
    3904:	b4 01       	movw	r22, r8
    3906:	0e 94 df 1b 	call	0x37be	; 0x37be <mulacc>
    390a:	4b 01       	movw	r8, r22
    390c:	5c 01       	movw	r10, r24
    390e:	c2 60       	ori	r28, 0x02	; 2
    3910:	d1 50       	subi	r29, 0x01	; 1
    3912:	59 f0       	breq	.+22     	; 0x392a <conv_int+0xec>
    3914:	c8 01       	movw	r24, r16
    3916:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    391a:	97 ff       	sbrs	r25, 7
    391c:	dd cf       	rjmp	.-70     	; 0x38d8 <conv_int+0x9a>
    391e:	c1 fd       	sbrc	r28, 1
    3920:	04 c0       	rjmp	.+8      	; 0x392a <conv_int+0xec>
    3922:	aa cf       	rjmp	.-172    	; 0x3878 <conv_int+0x3a>
    3924:	81 2c       	mov	r8, r1
    3926:	91 2c       	mov	r9, r1
    3928:	54 01       	movw	r10, r8
    392a:	c7 ff       	sbrs	r28, 7
    392c:	08 c0       	rjmp	.+16     	; 0x393e <conv_int+0x100>
    392e:	b0 94       	com	r11
    3930:	a0 94       	com	r10
    3932:	90 94       	com	r9
    3934:	80 94       	com	r8
    3936:	81 1c       	adc	r8, r1
    3938:	91 1c       	adc	r9, r1
    393a:	a1 1c       	adc	r10, r1
    393c:	b1 1c       	adc	r11, r1
    393e:	2c 2f       	mov	r18, r28
    3940:	b5 01       	movw	r22, r10
    3942:	a4 01       	movw	r20, r8
    3944:	c7 01       	movw	r24, r14
    3946:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <putval>
    394a:	81 e0       	ldi	r24, 0x01	; 1
    394c:	df 91       	pop	r29
    394e:	cf 91       	pop	r28
    3950:	1f 91       	pop	r17
    3952:	0f 91       	pop	r16
    3954:	ff 90       	pop	r15
    3956:	ef 90       	pop	r14
    3958:	bf 90       	pop	r11
    395a:	af 90       	pop	r10
    395c:	9f 90       	pop	r9
    395e:	8f 90       	pop	r8
    3960:	08 95       	ret

00003962 <conv_brk>:
    3962:	a0 e2       	ldi	r26, 0x20	; 32
    3964:	b0 e0       	ldi	r27, 0x00	; 0
    3966:	e7 eb       	ldi	r30, 0xB7	; 183
    3968:	fc e1       	ldi	r31, 0x1C	; 28
    396a:	0c 94 bb 19 	jmp	0x3376	; 0x3376 <__prologue_saves__+0x6>
    396e:	5c 01       	movw	r10, r24
    3970:	96 2e       	mov	r9, r22
    3972:	7a 01       	movw	r14, r20
    3974:	f9 01       	movw	r30, r18
    3976:	8e 01       	movw	r16, r28
    3978:	0f 5f       	subi	r16, 0xFF	; 255
    397a:	1f 4f       	sbci	r17, 0xFF	; 255
    397c:	68 01       	movw	r12, r16
    397e:	80 e2       	ldi	r24, 0x20	; 32
    3980:	d8 01       	movw	r26, r16
    3982:	1d 92       	st	X+, r1
    3984:	8a 95       	dec	r24
    3986:	e9 f7       	brne	.-6      	; 0x3982 <conv_brk+0x20>
    3988:	d5 01       	movw	r26, r10
    398a:	13 96       	adiw	r26, 0x03	; 3
    398c:	8c 90       	ld	r8, X
    398e:	80 e0       	ldi	r24, 0x00	; 0
    3990:	90 e0       	ldi	r25, 0x00	; 0
    3992:	61 2c       	mov	r6, r1
    3994:	71 2c       	mov	r7, r1
    3996:	30 e0       	ldi	r19, 0x00	; 0
    3998:	61 e0       	ldi	r22, 0x01	; 1
    399a:	70 e0       	ldi	r23, 0x00	; 0
    399c:	83 fc       	sbrc	r8, 3
    399e:	25 91       	lpm	r18, Z+
    39a0:	83 fe       	sbrs	r8, 3
    39a2:	21 91       	ld	r18, Z+
    39a4:	8f 01       	movw	r16, r30
    39a6:	52 2e       	mov	r5, r18
    39a8:	21 11       	cpse	r18, r1
    39aa:	03 c0       	rjmp	.+6      	; 0x39b2 <conv_brk+0x50>
    39ac:	80 e0       	ldi	r24, 0x00	; 0
    39ae:	90 e0       	ldi	r25, 0x00	; 0
    39b0:	92 c0       	rjmp	.+292    	; 0x3ad6 <conv_brk+0x174>
    39b2:	2e 35       	cpi	r18, 0x5E	; 94
    39b4:	11 f4       	brne	.+4      	; 0x39ba <conv_brk+0x58>
    39b6:	00 97       	sbiw	r24, 0x00	; 0
    39b8:	51 f1       	breq	.+84     	; 0x3a0e <conv_brk+0xac>
    39ba:	43 2f       	mov	r20, r19
    39bc:	50 e0       	ldi	r21, 0x00	; 0
    39be:	48 17       	cp	r20, r24
    39c0:	59 07       	cpc	r21, r25
    39c2:	3c f4       	brge	.+14     	; 0x39d2 <conv_brk+0x70>
    39c4:	2d 35       	cpi	r18, 0x5D	; 93
    39c6:	59 f1       	breq	.+86     	; 0x3a1e <conv_brk+0xbc>
    39c8:	2d 32       	cpi	r18, 0x2D	; 45
    39ca:	19 f4       	brne	.+6      	; 0x39d2 <conv_brk+0x70>
    39cc:	77 20       	and	r7, r7
    39ce:	09 f1       	breq	.+66     	; 0x3a12 <conv_brk+0xb0>
    39d0:	03 c0       	rjmp	.+6      	; 0x39d8 <conv_brk+0x76>
    39d2:	77 20       	and	r7, r7
    39d4:	09 f4       	brne	.+2      	; 0x39d8 <conv_brk+0x76>
    39d6:	6a c0       	rjmp	.+212    	; 0x3aac <conv_brk+0x14a>
    39d8:	45 2d       	mov	r20, r5
    39da:	46 95       	lsr	r20
    39dc:	46 95       	lsr	r20
    39de:	46 95       	lsr	r20
    39e0:	d6 01       	movw	r26, r12
    39e2:	a4 0f       	add	r26, r20
    39e4:	b1 1d       	adc	r27, r1
    39e6:	45 2d       	mov	r20, r5
    39e8:	47 70       	andi	r20, 0x07	; 7
    39ea:	8b 01       	movw	r16, r22
    39ec:	02 c0       	rjmp	.+4      	; 0x39f2 <conv_brk+0x90>
    39ee:	00 0f       	add	r16, r16
    39f0:	11 1f       	adc	r17, r17
    39f2:	4a 95       	dec	r20
    39f4:	e2 f7       	brpl	.-8      	; 0x39ee <conv_brk+0x8c>
    39f6:	a8 01       	movw	r20, r16
    39f8:	5c 91       	ld	r21, X
    39fa:	45 2b       	or	r20, r21
    39fc:	4c 93       	st	X, r20
    39fe:	65 14       	cp	r6, r5
    3a00:	59 f0       	breq	.+22     	; 0x3a18 <conv_brk+0xb6>
    3a02:	56 14       	cp	r5, r6
    3a04:	10 f4       	brcc	.+4      	; 0x3a0a <conv_brk+0xa8>
    3a06:	53 94       	inc	r5
    3a08:	e7 cf       	rjmp	.-50     	; 0x39d8 <conv_brk+0x76>
    3a0a:	5a 94       	dec	r5
    3a0c:	e5 cf       	rjmp	.-54     	; 0x39d8 <conv_brk+0x76>
    3a0e:	31 e0       	ldi	r19, 0x01	; 1
    3a10:	04 c0       	rjmp	.+8      	; 0x3a1a <conv_brk+0xb8>
    3a12:	77 24       	eor	r7, r7
    3a14:	73 94       	inc	r7
    3a16:	01 c0       	rjmp	.+2      	; 0x3a1a <conv_brk+0xb8>
    3a18:	71 2c       	mov	r7, r1
    3a1a:	01 96       	adiw	r24, 0x01	; 1
    3a1c:	bf cf       	rjmp	.-130    	; 0x399c <conv_brk+0x3a>
    3a1e:	77 20       	and	r7, r7
    3a20:	19 f0       	breq	.+6      	; 0x3a28 <conv_brk+0xc6>
    3a22:	8e 81       	ldd	r24, Y+6	; 0x06
    3a24:	80 62       	ori	r24, 0x20	; 32
    3a26:	8e 83       	std	Y+6, r24	; 0x06
    3a28:	31 11       	cpse	r19, r1
    3a2a:	03 c0       	rjmp	.+6      	; 0x3a32 <conv_brk+0xd0>
    3a2c:	88 24       	eor	r8, r8
    3a2e:	83 94       	inc	r8
    3a30:	17 c0       	rjmp	.+46     	; 0x3a60 <conv_brk+0xfe>
    3a32:	f6 01       	movw	r30, r12
    3a34:	9e 01       	movw	r18, r28
    3a36:	2f 5d       	subi	r18, 0xDF	; 223
    3a38:	3f 4f       	sbci	r19, 0xFF	; 255
    3a3a:	80 81       	ld	r24, Z
    3a3c:	80 95       	com	r24
    3a3e:	81 93       	st	Z+, r24
    3a40:	2e 17       	cp	r18, r30
    3a42:	3f 07       	cpc	r19, r31
    3a44:	d1 f7       	brne	.-12     	; 0x3a3a <conv_brk+0xd8>
    3a46:	f2 cf       	rjmp	.-28     	; 0x3a2c <conv_brk+0xca>
    3a48:	e1 14       	cp	r14, r1
    3a4a:	f1 04       	cpc	r15, r1
    3a4c:	29 f0       	breq	.+10     	; 0x3a58 <conv_brk+0xf6>
    3a4e:	d7 01       	movw	r26, r14
    3a50:	8c 93       	st	X, r24
    3a52:	f7 01       	movw	r30, r14
    3a54:	31 96       	adiw	r30, 0x01	; 1
    3a56:	7f 01       	movw	r14, r30
    3a58:	9a 94       	dec	r9
    3a5a:	81 2c       	mov	r8, r1
    3a5c:	99 20       	and	r9, r9
    3a5e:	f9 f0       	breq	.+62     	; 0x3a9e <conv_brk+0x13c>
    3a60:	c5 01       	movw	r24, r10
    3a62:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    3a66:	97 fd       	sbrc	r25, 7
    3a68:	18 c0       	rjmp	.+48     	; 0x3a9a <conv_brk+0x138>
    3a6a:	fc 01       	movw	r30, r24
    3a6c:	ff 27       	eor	r31, r31
    3a6e:	23 e0       	ldi	r18, 0x03	; 3
    3a70:	f5 95       	asr	r31
    3a72:	e7 95       	ror	r30
    3a74:	2a 95       	dec	r18
    3a76:	e1 f7       	brne	.-8      	; 0x3a70 <conv_brk+0x10e>
    3a78:	ec 0d       	add	r30, r12
    3a7a:	fd 1d       	adc	r31, r13
    3a7c:	20 81       	ld	r18, Z
    3a7e:	30 e0       	ldi	r19, 0x00	; 0
    3a80:	ac 01       	movw	r20, r24
    3a82:	47 70       	andi	r20, 0x07	; 7
    3a84:	55 27       	eor	r21, r21
    3a86:	02 c0       	rjmp	.+4      	; 0x3a8c <conv_brk+0x12a>
    3a88:	35 95       	asr	r19
    3a8a:	27 95       	ror	r18
    3a8c:	4a 95       	dec	r20
    3a8e:	e2 f7       	brpl	.-8      	; 0x3a88 <conv_brk+0x126>
    3a90:	20 fd       	sbrc	r18, 0
    3a92:	da cf       	rjmp	.-76     	; 0x3a48 <conv_brk+0xe6>
    3a94:	b5 01       	movw	r22, r10
    3a96:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <ungetc>
    3a9a:	81 10       	cpse	r8, r1
    3a9c:	87 cf       	rjmp	.-242    	; 0x39ac <conv_brk+0x4a>
    3a9e:	e1 14       	cp	r14, r1
    3aa0:	f1 04       	cpc	r15, r1
    3aa2:	11 f0       	breq	.+4      	; 0x3aa8 <conv_brk+0x146>
    3aa4:	d7 01       	movw	r26, r14
    3aa6:	1c 92       	st	X, r1
    3aa8:	c8 01       	movw	r24, r16
    3aaa:	15 c0       	rjmp	.+42     	; 0x3ad6 <conv_brk+0x174>
    3aac:	42 2f       	mov	r20, r18
    3aae:	46 95       	lsr	r20
    3ab0:	46 95       	lsr	r20
    3ab2:	46 95       	lsr	r20
    3ab4:	d6 01       	movw	r26, r12
    3ab6:	a4 0f       	add	r26, r20
    3ab8:	b1 1d       	adc	r27, r1
    3aba:	42 2f       	mov	r20, r18
    3abc:	47 70       	andi	r20, 0x07	; 7
    3abe:	8b 01       	movw	r16, r22
    3ac0:	02 c0       	rjmp	.+4      	; 0x3ac6 <conv_brk+0x164>
    3ac2:	00 0f       	add	r16, r16
    3ac4:	11 1f       	adc	r17, r17
    3ac6:	4a 95       	dec	r20
    3ac8:	e2 f7       	brpl	.-8      	; 0x3ac2 <conv_brk+0x160>
    3aca:	a8 01       	movw	r20, r16
    3acc:	5c 91       	ld	r21, X
    3ace:	45 2b       	or	r20, r21
    3ad0:	4c 93       	st	X, r20
    3ad2:	62 2e       	mov	r6, r18
    3ad4:	a2 cf       	rjmp	.-188    	; 0x3a1a <conv_brk+0xb8>
    3ad6:	a0 96       	adiw	r28, 0x20	; 32
    3ad8:	ef e0       	ldi	r30, 0x0F	; 15
    3ada:	0c 94 d7 19 	jmp	0x33ae	; 0x33ae <__epilogue_restores__+0x6>

00003ade <vfscanf>:
    3ade:	a0 e0       	ldi	r26, 0x00	; 0
    3ae0:	b0 e0       	ldi	r27, 0x00	; 0
    3ae2:	e5 e7       	ldi	r30, 0x75	; 117
    3ae4:	fd e1       	ldi	r31, 0x1D	; 29
    3ae6:	0c 94 bb 19 	jmp	0x3376	; 0x3376 <__prologue_saves__+0x6>
    3aea:	6c 01       	movw	r12, r24
    3aec:	eb 01       	movw	r28, r22
    3aee:	5a 01       	movw	r10, r20
    3af0:	fc 01       	movw	r30, r24
    3af2:	17 82       	std	Z+7, r1	; 0x07
    3af4:	16 82       	std	Z+6, r1	; 0x06
    3af6:	51 2c       	mov	r5, r1
    3af8:	f6 01       	movw	r30, r12
    3afa:	e3 80       	ldd	r14, Z+3	; 0x03
    3afc:	fe 01       	movw	r30, r28
    3afe:	e3 fc       	sbrc	r14, 3
    3b00:	85 91       	lpm	r24, Z+
    3b02:	e3 fe       	sbrs	r14, 3
    3b04:	81 91       	ld	r24, Z+
    3b06:	18 2f       	mov	r17, r24
    3b08:	ef 01       	movw	r28, r30
    3b0a:	88 23       	and	r24, r24
    3b0c:	09 f4       	brne	.+2      	; 0x3b10 <vfscanf+0x32>
    3b0e:	ee c0       	rjmp	.+476    	; 0x3cec <vfscanf+0x20e>
    3b10:	90 e0       	ldi	r25, 0x00	; 0
    3b12:	0e 94 80 1e 	call	0x3d00	; 0x3d00 <isspace>
    3b16:	89 2b       	or	r24, r25
    3b18:	21 f0       	breq	.+8      	; 0x3b22 <vfscanf+0x44>
    3b1a:	c6 01       	movw	r24, r12
    3b1c:	0e 94 06 1c 	call	0x380c	; 0x380c <skip_spaces>
    3b20:	eb cf       	rjmp	.-42     	; 0x3af8 <vfscanf+0x1a>
    3b22:	15 32       	cpi	r17, 0x25	; 37
    3b24:	41 f4       	brne	.+16     	; 0x3b36 <vfscanf+0x58>
    3b26:	fe 01       	movw	r30, r28
    3b28:	e3 fc       	sbrc	r14, 3
    3b2a:	15 91       	lpm	r17, Z+
    3b2c:	e3 fe       	sbrs	r14, 3
    3b2e:	11 91       	ld	r17, Z+
    3b30:	ef 01       	movw	r28, r30
    3b32:	15 32       	cpi	r17, 0x25	; 37
    3b34:	81 f4       	brne	.+32     	; 0x3b56 <vfscanf+0x78>
    3b36:	c6 01       	movw	r24, r12
    3b38:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    3b3c:	97 fd       	sbrc	r25, 7
    3b3e:	d4 c0       	rjmp	.+424    	; 0x3ce8 <vfscanf+0x20a>
    3b40:	41 2f       	mov	r20, r17
    3b42:	50 e0       	ldi	r21, 0x00	; 0
    3b44:	9c 01       	movw	r18, r24
    3b46:	33 27       	eor	r19, r19
    3b48:	24 17       	cp	r18, r20
    3b4a:	35 07       	cpc	r19, r21
    3b4c:	a9 f2       	breq	.-86     	; 0x3af8 <vfscanf+0x1a>
    3b4e:	b6 01       	movw	r22, r12
    3b50:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <ungetc>
    3b54:	cb c0       	rjmp	.+406    	; 0x3cec <vfscanf+0x20e>
    3b56:	1a 32       	cpi	r17, 0x2A	; 42
    3b58:	39 f4       	brne	.+14     	; 0x3b68 <vfscanf+0x8a>
    3b5a:	e3 fc       	sbrc	r14, 3
    3b5c:	15 91       	lpm	r17, Z+
    3b5e:	e3 fe       	sbrs	r14, 3
    3b60:	11 91       	ld	r17, Z+
    3b62:	ef 01       	movw	r28, r30
    3b64:	01 e0       	ldi	r16, 0x01	; 1
    3b66:	01 c0       	rjmp	.+2      	; 0x3b6a <vfscanf+0x8c>
    3b68:	00 e0       	ldi	r16, 0x00	; 0
    3b6a:	f1 2c       	mov	r15, r1
    3b6c:	20 ed       	ldi	r18, 0xD0	; 208
    3b6e:	21 0f       	add	r18, r17
    3b70:	2a 30       	cpi	r18, 0x0A	; 10
    3b72:	80 f4       	brcc	.+32     	; 0x3b94 <vfscanf+0xb6>
    3b74:	02 60       	ori	r16, 0x02	; 2
    3b76:	6f 2d       	mov	r22, r15
    3b78:	70 e0       	ldi	r23, 0x00	; 0
    3b7a:	80 e0       	ldi	r24, 0x00	; 0
    3b7c:	90 e0       	ldi	r25, 0x00	; 0
    3b7e:	40 e2       	ldi	r20, 0x20	; 32
    3b80:	0e 94 df 1b 	call	0x37be	; 0x37be <mulacc>
    3b84:	f6 2e       	mov	r15, r22
    3b86:	fe 01       	movw	r30, r28
    3b88:	e3 fc       	sbrc	r14, 3
    3b8a:	15 91       	lpm	r17, Z+
    3b8c:	e3 fe       	sbrs	r14, 3
    3b8e:	11 91       	ld	r17, Z+
    3b90:	ef 01       	movw	r28, r30
    3b92:	ec cf       	rjmp	.-40     	; 0x3b6c <vfscanf+0x8e>
    3b94:	01 ff       	sbrs	r16, 1
    3b96:	03 c0       	rjmp	.+6      	; 0x3b9e <vfscanf+0xc0>
    3b98:	f1 10       	cpse	r15, r1
    3b9a:	03 c0       	rjmp	.+6      	; 0x3ba2 <vfscanf+0xc4>
    3b9c:	a7 c0       	rjmp	.+334    	; 0x3cec <vfscanf+0x20e>
    3b9e:	ff 24       	eor	r15, r15
    3ba0:	fa 94       	dec	r15
    3ba2:	18 36       	cpi	r17, 0x68	; 104
    3ba4:	19 f0       	breq	.+6      	; 0x3bac <vfscanf+0xce>
    3ba6:	1c 36       	cpi	r17, 0x6C	; 108
    3ba8:	51 f0       	breq	.+20     	; 0x3bbe <vfscanf+0xe0>
    3baa:	10 c0       	rjmp	.+32     	; 0x3bcc <vfscanf+0xee>
    3bac:	fe 01       	movw	r30, r28
    3bae:	e3 fc       	sbrc	r14, 3
    3bb0:	15 91       	lpm	r17, Z+
    3bb2:	e3 fe       	sbrs	r14, 3
    3bb4:	11 91       	ld	r17, Z+
    3bb6:	ef 01       	movw	r28, r30
    3bb8:	18 36       	cpi	r17, 0x68	; 104
    3bba:	41 f4       	brne	.+16     	; 0x3bcc <vfscanf+0xee>
    3bbc:	08 60       	ori	r16, 0x08	; 8
    3bbe:	04 60       	ori	r16, 0x04	; 4
    3bc0:	fe 01       	movw	r30, r28
    3bc2:	e3 fc       	sbrc	r14, 3
    3bc4:	15 91       	lpm	r17, Z+
    3bc6:	e3 fe       	sbrs	r14, 3
    3bc8:	11 91       	ld	r17, Z+
    3bca:	ef 01       	movw	r28, r30
    3bcc:	11 23       	and	r17, r17
    3bce:	09 f4       	brne	.+2      	; 0x3bd2 <vfscanf+0xf4>
    3bd0:	8d c0       	rjmp	.+282    	; 0x3cec <vfscanf+0x20e>
    3bd2:	61 2f       	mov	r22, r17
    3bd4:	70 e0       	ldi	r23, 0x00	; 0
    3bd6:	8a e6       	ldi	r24, 0x6A	; 106
    3bd8:	91 e0       	ldi	r25, 0x01	; 1
    3bda:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <strchr_P>
    3bde:	89 2b       	or	r24, r25
    3be0:	09 f4       	brne	.+2      	; 0x3be4 <vfscanf+0x106>
    3be2:	84 c0       	rjmp	.+264    	; 0x3cec <vfscanf+0x20e>
    3be4:	00 fd       	sbrc	r16, 0
    3be6:	07 c0       	rjmp	.+14     	; 0x3bf6 <vfscanf+0x118>
    3be8:	f5 01       	movw	r30, r10
    3bea:	80 80       	ld	r8, Z
    3bec:	91 80       	ldd	r9, Z+1	; 0x01
    3bee:	c5 01       	movw	r24, r10
    3bf0:	02 96       	adiw	r24, 0x02	; 2
    3bf2:	5c 01       	movw	r10, r24
    3bf4:	02 c0       	rjmp	.+4      	; 0x3bfa <vfscanf+0x11c>
    3bf6:	81 2c       	mov	r8, r1
    3bf8:	91 2c       	mov	r9, r1
    3bfa:	1e 36       	cpi	r17, 0x6E	; 110
    3bfc:	51 f4       	brne	.+20     	; 0x3c12 <vfscanf+0x134>
    3bfe:	f6 01       	movw	r30, r12
    3c00:	46 81       	ldd	r20, Z+6	; 0x06
    3c02:	57 81       	ldd	r21, Z+7	; 0x07
    3c04:	60 e0       	ldi	r22, 0x00	; 0
    3c06:	70 e0       	ldi	r23, 0x00	; 0
    3c08:	20 2f       	mov	r18, r16
    3c0a:	c4 01       	movw	r24, r8
    3c0c:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <putval>
    3c10:	73 cf       	rjmp	.-282    	; 0x3af8 <vfscanf+0x1a>
    3c12:	13 36       	cpi	r17, 0x63	; 99
    3c14:	a9 f4       	brne	.+42     	; 0x3c40 <vfscanf+0x162>
    3c16:	01 fd       	sbrc	r16, 1
    3c18:	02 c0       	rjmp	.+4      	; 0x3c1e <vfscanf+0x140>
    3c1a:	ff 24       	eor	r15, r15
    3c1c:	f3 94       	inc	r15
    3c1e:	c6 01       	movw	r24, r12
    3c20:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    3c24:	97 fd       	sbrc	r25, 7
    3c26:	60 c0       	rjmp	.+192    	; 0x3ce8 <vfscanf+0x20a>
    3c28:	81 14       	cp	r8, r1
    3c2a:	91 04       	cpc	r9, r1
    3c2c:	29 f0       	breq	.+10     	; 0x3c38 <vfscanf+0x15a>
    3c2e:	f4 01       	movw	r30, r8
    3c30:	80 83       	st	Z, r24
    3c32:	c4 01       	movw	r24, r8
    3c34:	01 96       	adiw	r24, 0x01	; 1
    3c36:	4c 01       	movw	r8, r24
    3c38:	fa 94       	dec	r15
    3c3a:	f1 10       	cpse	r15, r1
    3c3c:	f0 cf       	rjmp	.-32     	; 0x3c1e <vfscanf+0x140>
    3c3e:	50 c0       	rjmp	.+160    	; 0x3ce0 <vfscanf+0x202>
    3c40:	1b 35       	cpi	r17, 0x5B	; 91
    3c42:	59 f4       	brne	.+22     	; 0x3c5a <vfscanf+0x17c>
    3c44:	9e 01       	movw	r18, r28
    3c46:	a4 01       	movw	r20, r8
    3c48:	6f 2d       	mov	r22, r15
    3c4a:	c6 01       	movw	r24, r12
    3c4c:	0e 94 b1 1c 	call	0x3962	; 0x3962 <conv_brk>
    3c50:	ec 01       	movw	r28, r24
    3c52:	89 2b       	or	r24, r25
    3c54:	09 f0       	breq	.+2      	; 0x3c58 <vfscanf+0x17a>
    3c56:	44 c0       	rjmp	.+136    	; 0x3ce0 <vfscanf+0x202>
    3c58:	3e c0       	rjmp	.+124    	; 0x3cd6 <vfscanf+0x1f8>
    3c5a:	c6 01       	movw	r24, r12
    3c5c:	0e 94 06 1c 	call	0x380c	; 0x380c <skip_spaces>
    3c60:	97 fd       	sbrc	r25, 7
    3c62:	42 c0       	rjmp	.+132    	; 0x3ce8 <vfscanf+0x20a>
    3c64:	1f 36       	cpi	r17, 0x6F	; 111
    3c66:	61 f1       	breq	.+88     	; 0x3cc0 <vfscanf+0x1e2>
    3c68:	28 f4       	brcc	.+10     	; 0x3c74 <vfscanf+0x196>
    3c6a:	14 36       	cpi	r17, 0x64	; 100
    3c6c:	39 f1       	breq	.+78     	; 0x3cbc <vfscanf+0x1de>
    3c6e:	19 36       	cpi	r17, 0x69	; 105
    3c70:	51 f1       	breq	.+84     	; 0x3cc6 <vfscanf+0x1e8>
    3c72:	28 c0       	rjmp	.+80     	; 0x3cc4 <vfscanf+0x1e6>
    3c74:	13 37       	cpi	r17, 0x73	; 115
    3c76:	71 f0       	breq	.+28     	; 0x3c94 <vfscanf+0x1b6>
    3c78:	15 37       	cpi	r17, 0x75	; 117
    3c7a:	01 f1       	breq	.+64     	; 0x3cbc <vfscanf+0x1de>
    3c7c:	23 c0       	rjmp	.+70     	; 0x3cc4 <vfscanf+0x1e6>
    3c7e:	81 14       	cp	r8, r1
    3c80:	91 04       	cpc	r9, r1
    3c82:	29 f0       	breq	.+10     	; 0x3c8e <vfscanf+0x1b0>
    3c84:	f4 01       	movw	r30, r8
    3c86:	60 82       	st	Z, r6
    3c88:	c4 01       	movw	r24, r8
    3c8a:	01 96       	adiw	r24, 0x01	; 1
    3c8c:	4c 01       	movw	r8, r24
    3c8e:	fa 94       	dec	r15
    3c90:	ff 20       	and	r15, r15
    3c92:	71 f0       	breq	.+28     	; 0x3cb0 <vfscanf+0x1d2>
    3c94:	c6 01       	movw	r24, r12
    3c96:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <fgetc>
    3c9a:	3c 01       	movw	r6, r24
    3c9c:	97 fd       	sbrc	r25, 7
    3c9e:	08 c0       	rjmp	.+16     	; 0x3cb0 <vfscanf+0x1d2>
    3ca0:	0e 94 80 1e 	call	0x3d00	; 0x3d00 <isspace>
    3ca4:	89 2b       	or	r24, r25
    3ca6:	59 f3       	breq	.-42     	; 0x3c7e <vfscanf+0x1a0>
    3ca8:	b6 01       	movw	r22, r12
    3caa:	c3 01       	movw	r24, r6
    3cac:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <ungetc>
    3cb0:	81 14       	cp	r8, r1
    3cb2:	91 04       	cpc	r9, r1
    3cb4:	a9 f0       	breq	.+42     	; 0x3ce0 <vfscanf+0x202>
    3cb6:	f4 01       	movw	r30, r8
    3cb8:	10 82       	st	Z, r1
    3cba:	12 c0       	rjmp	.+36     	; 0x3ce0 <vfscanf+0x202>
    3cbc:	00 62       	ori	r16, 0x20	; 32
    3cbe:	03 c0       	rjmp	.+6      	; 0x3cc6 <vfscanf+0x1e8>
    3cc0:	00 61       	ori	r16, 0x10	; 16
    3cc2:	01 c0       	rjmp	.+2      	; 0x3cc6 <vfscanf+0x1e8>
    3cc4:	00 64       	ori	r16, 0x40	; 64
    3cc6:	20 2f       	mov	r18, r16
    3cc8:	a4 01       	movw	r20, r8
    3cca:	6f 2d       	mov	r22, r15
    3ccc:	c6 01       	movw	r24, r12
    3cce:	0e 94 1f 1c 	call	0x383e	; 0x383e <conv_int>
    3cd2:	81 11       	cpse	r24, r1
    3cd4:	05 c0       	rjmp	.+10     	; 0x3ce0 <vfscanf+0x202>
    3cd6:	f6 01       	movw	r30, r12
    3cd8:	83 81       	ldd	r24, Z+3	; 0x03
    3cda:	80 73       	andi	r24, 0x30	; 48
    3cdc:	29 f4       	brne	.+10     	; 0x3ce8 <vfscanf+0x20a>
    3cde:	06 c0       	rjmp	.+12     	; 0x3cec <vfscanf+0x20e>
    3ce0:	00 fd       	sbrc	r16, 0
    3ce2:	0a cf       	rjmp	.-492    	; 0x3af8 <vfscanf+0x1a>
    3ce4:	53 94       	inc	r5
    3ce6:	08 cf       	rjmp	.-496    	; 0x3af8 <vfscanf+0x1a>
    3ce8:	55 20       	and	r5, r5
    3cea:	19 f0       	breq	.+6      	; 0x3cf2 <vfscanf+0x214>
    3cec:	85 2d       	mov	r24, r5
    3cee:	90 e0       	ldi	r25, 0x00	; 0
    3cf0:	02 c0       	rjmp	.+4      	; 0x3cf6 <vfscanf+0x218>
    3cf2:	8f ef       	ldi	r24, 0xFF	; 255
    3cf4:	9f ef       	ldi	r25, 0xFF	; 255
    3cf6:	cd b7       	in	r28, 0x3d	; 61
    3cf8:	de b7       	in	r29, 0x3e	; 62
    3cfa:	ef e0       	ldi	r30, 0x0F	; 15
    3cfc:	0c 94 d7 19 	jmp	0x33ae	; 0x33ae <__epilogue_restores__+0x6>

00003d00 <isspace>:
    3d00:	91 11       	cpse	r25, r1
    3d02:	0c 94 eb 1e 	jmp	0x3dd6	; 0x3dd6 <__ctype_isfalse>
    3d06:	80 32       	cpi	r24, 0x20	; 32
    3d08:	19 f0       	breq	.+6      	; 0x3d10 <isspace+0x10>
    3d0a:	89 50       	subi	r24, 0x09	; 9
    3d0c:	85 50       	subi	r24, 0x05	; 5
    3d0e:	c8 f7       	brcc	.-14     	; 0x3d02 <isspace+0x2>
    3d10:	08 95       	ret

00003d12 <strchr_P>:
    3d12:	fc 01       	movw	r30, r24
    3d14:	05 90       	lpm	r0, Z+
    3d16:	06 16       	cp	r0, r22
    3d18:	21 f0       	breq	.+8      	; 0x3d22 <strchr_P+0x10>
    3d1a:	00 20       	and	r0, r0
    3d1c:	d9 f7       	brne	.-10     	; 0x3d14 <strchr_P+0x2>
    3d1e:	c0 01       	movw	r24, r0
    3d20:	08 95       	ret
    3d22:	31 97       	sbiw	r30, 0x01	; 1
    3d24:	cf 01       	movw	r24, r30
    3d26:	08 95       	ret

00003d28 <fgetc>:
    3d28:	cf 93       	push	r28
    3d2a:	df 93       	push	r29
    3d2c:	ec 01       	movw	r28, r24
    3d2e:	2b 81       	ldd	r18, Y+3	; 0x03
    3d30:	20 ff       	sbrs	r18, 0
    3d32:	33 c0       	rjmp	.+102    	; 0x3d9a <fgetc+0x72>
    3d34:	26 ff       	sbrs	r18, 6
    3d36:	0a c0       	rjmp	.+20     	; 0x3d4c <fgetc+0x24>
    3d38:	2f 7b       	andi	r18, 0xBF	; 191
    3d3a:	2b 83       	std	Y+3, r18	; 0x03
    3d3c:	8e 81       	ldd	r24, Y+6	; 0x06
    3d3e:	9f 81       	ldd	r25, Y+7	; 0x07
    3d40:	01 96       	adiw	r24, 0x01	; 1
    3d42:	9f 83       	std	Y+7, r25	; 0x07
    3d44:	8e 83       	std	Y+6, r24	; 0x06
    3d46:	8a 81       	ldd	r24, Y+2	; 0x02
    3d48:	90 e0       	ldi	r25, 0x00	; 0
    3d4a:	29 c0       	rjmp	.+82     	; 0x3d9e <fgetc+0x76>
    3d4c:	22 ff       	sbrs	r18, 2
    3d4e:	0f c0       	rjmp	.+30     	; 0x3d6e <fgetc+0x46>
    3d50:	e8 81       	ld	r30, Y
    3d52:	f9 81       	ldd	r31, Y+1	; 0x01
    3d54:	80 81       	ld	r24, Z
    3d56:	08 2e       	mov	r0, r24
    3d58:	00 0c       	add	r0, r0
    3d5a:	99 0b       	sbc	r25, r25
    3d5c:	00 97       	sbiw	r24, 0x00	; 0
    3d5e:	19 f4       	brne	.+6      	; 0x3d66 <fgetc+0x3e>
    3d60:	20 62       	ori	r18, 0x20	; 32
    3d62:	2b 83       	std	Y+3, r18	; 0x03
    3d64:	1a c0       	rjmp	.+52     	; 0x3d9a <fgetc+0x72>
    3d66:	31 96       	adiw	r30, 0x01	; 1
    3d68:	f9 83       	std	Y+1, r31	; 0x01
    3d6a:	e8 83       	st	Y, r30
    3d6c:	0e c0       	rjmp	.+28     	; 0x3d8a <fgetc+0x62>
    3d6e:	ea 85       	ldd	r30, Y+10	; 0x0a
    3d70:	fb 85       	ldd	r31, Y+11	; 0x0b
    3d72:	09 95       	icall
    3d74:	97 ff       	sbrs	r25, 7
    3d76:	09 c0       	rjmp	.+18     	; 0x3d8a <fgetc+0x62>
    3d78:	2b 81       	ldd	r18, Y+3	; 0x03
    3d7a:	01 96       	adiw	r24, 0x01	; 1
    3d7c:	11 f0       	breq	.+4      	; 0x3d82 <fgetc+0x5a>
    3d7e:	80 e2       	ldi	r24, 0x20	; 32
    3d80:	01 c0       	rjmp	.+2      	; 0x3d84 <fgetc+0x5c>
    3d82:	80 e1       	ldi	r24, 0x10	; 16
    3d84:	82 2b       	or	r24, r18
    3d86:	8b 83       	std	Y+3, r24	; 0x03
    3d88:	08 c0       	rjmp	.+16     	; 0x3d9a <fgetc+0x72>
    3d8a:	2e 81       	ldd	r18, Y+6	; 0x06
    3d8c:	3f 81       	ldd	r19, Y+7	; 0x07
    3d8e:	2f 5f       	subi	r18, 0xFF	; 255
    3d90:	3f 4f       	sbci	r19, 0xFF	; 255
    3d92:	3f 83       	std	Y+7, r19	; 0x07
    3d94:	2e 83       	std	Y+6, r18	; 0x06
    3d96:	99 27       	eor	r25, r25
    3d98:	02 c0       	rjmp	.+4      	; 0x3d9e <fgetc+0x76>
    3d9a:	8f ef       	ldi	r24, 0xFF	; 255
    3d9c:	9f ef       	ldi	r25, 0xFF	; 255
    3d9e:	df 91       	pop	r29
    3da0:	cf 91       	pop	r28
    3da2:	08 95       	ret

00003da4 <ungetc>:
    3da4:	fb 01       	movw	r30, r22
    3da6:	23 81       	ldd	r18, Z+3	; 0x03
    3da8:	20 ff       	sbrs	r18, 0
    3daa:	12 c0       	rjmp	.+36     	; 0x3dd0 <ungetc+0x2c>
    3dac:	26 fd       	sbrc	r18, 6
    3dae:	10 c0       	rjmp	.+32     	; 0x3dd0 <ungetc+0x2c>
    3db0:	8f 3f       	cpi	r24, 0xFF	; 255
    3db2:	3f ef       	ldi	r19, 0xFF	; 255
    3db4:	93 07       	cpc	r25, r19
    3db6:	61 f0       	breq	.+24     	; 0x3dd0 <ungetc+0x2c>
    3db8:	82 83       	std	Z+2, r24	; 0x02
    3dba:	2f 7d       	andi	r18, 0xDF	; 223
    3dbc:	20 64       	ori	r18, 0x40	; 64
    3dbe:	23 83       	std	Z+3, r18	; 0x03
    3dc0:	26 81       	ldd	r18, Z+6	; 0x06
    3dc2:	37 81       	ldd	r19, Z+7	; 0x07
    3dc4:	21 50       	subi	r18, 0x01	; 1
    3dc6:	31 09       	sbc	r19, r1
    3dc8:	37 83       	std	Z+7, r19	; 0x07
    3dca:	26 83       	std	Z+6, r18	; 0x06
    3dcc:	99 27       	eor	r25, r25
    3dce:	08 95       	ret
    3dd0:	8f ef       	ldi	r24, 0xFF	; 255
    3dd2:	9f ef       	ldi	r25, 0xFF	; 255
    3dd4:	08 95       	ret

00003dd6 <__ctype_isfalse>:
    3dd6:	99 27       	eor	r25, r25
    3dd8:	88 27       	eor	r24, r24

00003dda <__ctype_istrue>:
    3dda:	08 95       	ret

00003ddc <_exit>:
    3ddc:	f8 94       	cli

00003dde <__stop_program>:
    3dde:	ff cf       	rjmp	.-2      	; 0x3dde <__stop_program>
