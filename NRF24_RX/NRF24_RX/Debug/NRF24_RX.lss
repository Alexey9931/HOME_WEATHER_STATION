
NRF24_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006e  00800100  00003ff2  00004086  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003ff2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000004c0  0080016e  0080016e  000040f4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000040f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004150  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003a8  00000000  00000000  00004190  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000051b2  00000000  00000000  00004538  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000163c  00000000  00000000  000096ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002e0f  00000000  00000000  0000ad26  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000da8  00000000  00000000  0000db38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cb3  00000000  00000000  0000e8e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000048ee  00000000  00000000  0000f593  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000308  00000000  00000000  00013e81  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 a4 0b 	jmp	0x1748	; 0x1748 <__vector_1>
       8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      28:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      2c:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__vector_11>
      30:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      34:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      4c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      50:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      54:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      58:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      5c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      60:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      64:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2474>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf ef       	ldi	r28, 0xFF	; 255
     17c:	d8 e0       	ldi	r29, 0x08	; 8
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	11 e0       	ldi	r17, 0x01	; 1
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	e2 ef       	ldi	r30, 0xF2	; 242
     18a:	ff e3       	ldi	r31, 0x3F	; 63
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	ae 36       	cpi	r26, 0x6E	; 110
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	26 e0       	ldi	r18, 0x06	; 6
     19a:	ae e6       	ldi	r26, 0x6E	; 110
     19c:	b1 e0       	ldi	r27, 0x01	; 1
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	ae 32       	cpi	r26, 0x2E	; 46
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <main>
     1ac:	0c 94 f7 1f 	jmp	0x3fee	; 0x3fee <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <LCD_1286_Draw_pixel>:
	/// \param x_start - начальная точка по х от 0 до 1024
	/// \param x_end - конечная точка по y от 0 до 1024
	for (; x_start < x_end; x_start++) {
		Frame_buffer[x_start] = ~(Frame_buffer[x_start]);
	}
}
     1b4:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1b8:	69 17       	cp	r22, r25
     1ba:	e0 f4       	brcc	.+56     	; 0x1f4 <LCD_1286_Draw_pixel+0x40>
     1bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     1c0:	89 17       	cp	r24, r25
     1c2:	c0 f4       	brcc	.+48     	; 0x1f4 <LCD_1286_Draw_pixel+0x40>
     1c4:	96 2f       	mov	r25, r22
     1c6:	96 95       	lsr	r25
     1c8:	96 95       	lsr	r25
     1ca:	96 95       	lsr	r25
     1cc:	e8 2f       	mov	r30, r24
     1ce:	f0 e0       	ldi	r31, 0x00	; 0
     1d0:	80 e8       	ldi	r24, 0x80	; 128
     1d2:	98 9f       	mul	r25, r24
     1d4:	e0 0d       	add	r30, r0
     1d6:	f1 1d       	adc	r31, r1
     1d8:	11 24       	eor	r1, r1
     1da:	67 70       	andi	r22, 0x07	; 7
     1dc:	81 e0       	ldi	r24, 0x01	; 1
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <LCD_1286_Draw_pixel+0x32>
     1e2:	88 0f       	add	r24, r24
     1e4:	99 1f       	adc	r25, r25
     1e6:	6a 95       	dec	r22
     1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <LCD_1286_Draw_pixel+0x2e>
     1ea:	ea 5e       	subi	r30, 0xEA	; 234
     1ec:	fd 4f       	sbci	r31, 0xFD	; 253
     1ee:	90 81       	ld	r25, Z
     1f0:	89 2b       	or	r24, r25
     1f2:	80 83       	st	Z, r24
     1f4:	08 95       	ret

000001f6 <strob>:
     1f6:	85 e0       	ldi	r24, 0x05	; 5
     1f8:	8a 95       	dec	r24
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <strob+0x2>
     1fc:	00 00       	nop
     1fe:	8b b1       	in	r24, 0x0b	; 11
     200:	80 62       	ori	r24, 0x20	; 32
     202:	8b b9       	out	0x0b, r24	; 11
     204:	85 e0       	ldi	r24, 0x05	; 5
     206:	8a 95       	dec	r24
     208:	f1 f7       	brne	.-4      	; 0x206 <strob+0x10>
     20a:	00 00       	nop
     20c:	8b b1       	in	r24, 0x0b	; 11
     20e:	8f 7d       	andi	r24, 0xDF	; 223
     210:	8b b9       	out	0x0b, r24	; 11
     212:	85 e0       	ldi	r24, 0x05	; 5
     214:	8a 95       	dec	r24
     216:	f1 f7       	brne	.-4      	; 0x214 <strob+0x1e>
     218:	00 00       	nop
     21a:	08 95       	ret

0000021c <LCD_12864_send_data>:
     21c:	1f 93       	push	r17
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	18 2f       	mov	r17, r24
     224:	8b b1       	in	r24, 0x0b	; 11
     226:	80 68       	ori	r24, 0x80	; 128
     228:	8b b9       	out	0x0b, r24	; 11
     22a:	8b b1       	in	r24, 0x0b	; 11
     22c:	80 64       	ori	r24, 0x40	; 64
     22e:	8b b9       	out	0x0b, r24	; 11
     230:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     234:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     238:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     23c:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     240:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     244:	8b b1       	in	r24, 0x0b	; 11
     246:	8f 7b       	andi	r24, 0xBF	; 191
     248:	8b b9       	out	0x0b, r24	; 11
     24a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     24e:	8b b1       	in	r24, 0x0b	; 11
     250:	80 64       	ori	r24, 0x40	; 64
     252:	8b b9       	out	0x0b, r24	; 11
     254:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     258:	8b b1       	in	r24, 0x0b	; 11
     25a:	8f 7b       	andi	r24, 0xBF	; 191
     25c:	8b b9       	out	0x0b, r24	; 11
     25e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     262:	c0 e0       	ldi	r28, 0x00	; 0
     264:	d0 e0       	ldi	r29, 0x00	; 0
     266:	1c c0       	rjmp	.+56     	; 0x2a0 <LCD_12864_send_data+0x84>
     268:	ce 01       	movw	r24, r28
     26a:	04 97       	sbiw	r24, 0x04	; 4
     26c:	04 97       	sbiw	r24, 0x04	; 4
     26e:	30 f4       	brcc	.+12     	; 0x27c <LCD_12864_send_data+0x60>
     270:	8b b1       	in	r24, 0x0b	; 11
     272:	8f 7b       	andi	r24, 0xBF	; 191
     274:	8b b9       	out	0x0b, r24	; 11
     276:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     27a:	11 c0       	rjmp	.+34     	; 0x29e <LCD_12864_send_data+0x82>
     27c:	81 2f       	mov	r24, r17
     27e:	80 78       	andi	r24, 0x80	; 128
     280:	41 f0       	breq	.+16     	; 0x292 <LCD_12864_send_data+0x76>
     282:	80 38       	cpi	r24, 0x80	; 128
     284:	59 f4       	brne	.+22     	; 0x29c <LCD_12864_send_data+0x80>
     286:	8b b1       	in	r24, 0x0b	; 11
     288:	80 64       	ori	r24, 0x40	; 64
     28a:	8b b9       	out	0x0b, r24	; 11
     28c:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     290:	05 c0       	rjmp	.+10     	; 0x29c <LCD_12864_send_data+0x80>
     292:	8b b1       	in	r24, 0x0b	; 11
     294:	8f 7b       	andi	r24, 0xBF	; 191
     296:	8b b9       	out	0x0b, r24	; 11
     298:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     29c:	11 0f       	add	r17, r17
     29e:	21 96       	adiw	r28, 0x01	; 1
     2a0:	cc 30       	cpi	r28, 0x0C	; 12
     2a2:	d1 05       	cpc	r29, r1
     2a4:	0c f3       	brlt	.-62     	; 0x268 <LCD_12864_send_data+0x4c>
     2a6:	8b b1       	in	r24, 0x0b	; 11
     2a8:	8f 7b       	andi	r24, 0xBF	; 191
     2aa:	8b b9       	out	0x0b, r24	; 11
     2ac:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2b0:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2b4:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2b8:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     2bc:	8b b1       	in	r24, 0x0b	; 11
     2be:	8f 77       	andi	r24, 0x7F	; 127
     2c0:	8b b9       	out	0x0b, r24	; 11
     2c2:	df 91       	pop	r29
     2c4:	cf 91       	pop	r28
     2c6:	1f 91       	pop	r17
     2c8:	08 95       	ret

000002ca <str_LCD_12864>:
     2ca:	0f 93       	push	r16
     2cc:	1f 93       	push	r17
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
     2d2:	8c 01       	movw	r16, r24
     2d4:	c0 e0       	ldi	r28, 0x00	; 0
     2d6:	d0 e0       	ldi	r29, 0x00	; 0
     2d8:	03 c0       	rjmp	.+6      	; 0x2e0 <str_LCD_12864+0x16>
     2da:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
     2de:	21 96       	adiw	r28, 0x01	; 1
     2e0:	f8 01       	movw	r30, r16
     2e2:	ec 0f       	add	r30, r28
     2e4:	fd 1f       	adc	r31, r29
     2e6:	80 81       	ld	r24, Z
     2e8:	81 11       	cpse	r24, r1
     2ea:	f7 cf       	rjmp	.-18     	; 0x2da <str_LCD_12864+0x10>
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	0f 91       	pop	r16
     2f4:	08 95       	ret

000002f6 <LCD_12864_send_command>:
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	18 2f       	mov	r17, r24
     2fe:	8b b1       	in	r24, 0x0b	; 11
     300:	80 68       	ori	r24, 0x80	; 128
     302:	8b b9       	out	0x0b, r24	; 11
     304:	8b b1       	in	r24, 0x0b	; 11
     306:	80 64       	ori	r24, 0x40	; 64
     308:	8b b9       	out	0x0b, r24	; 11
     30a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     30e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     312:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     316:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     31a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     31e:	8b b1       	in	r24, 0x0b	; 11
     320:	8f 7b       	andi	r24, 0xBF	; 191
     322:	8b b9       	out	0x0b, r24	; 11
     324:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     328:	8b b1       	in	r24, 0x0b	; 11
     32a:	8f 7b       	andi	r24, 0xBF	; 191
     32c:	8b b9       	out	0x0b, r24	; 11
     32e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     332:	8b b1       	in	r24, 0x0b	; 11
     334:	8f 7b       	andi	r24, 0xBF	; 191
     336:	8b b9       	out	0x0b, r24	; 11
     338:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     33c:	c0 e0       	ldi	r28, 0x00	; 0
     33e:	d0 e0       	ldi	r29, 0x00	; 0
     340:	1c c0       	rjmp	.+56     	; 0x37a <LCD_12864_send_command+0x84>
     342:	ce 01       	movw	r24, r28
     344:	04 97       	sbiw	r24, 0x04	; 4
     346:	04 97       	sbiw	r24, 0x04	; 4
     348:	30 f4       	brcc	.+12     	; 0x356 <LCD_12864_send_command+0x60>
     34a:	8b b1       	in	r24, 0x0b	; 11
     34c:	8f 7b       	andi	r24, 0xBF	; 191
     34e:	8b b9       	out	0x0b, r24	; 11
     350:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     354:	11 c0       	rjmp	.+34     	; 0x378 <LCD_12864_send_command+0x82>
     356:	81 2f       	mov	r24, r17
     358:	80 78       	andi	r24, 0x80	; 128
     35a:	41 f0       	breq	.+16     	; 0x36c <LCD_12864_send_command+0x76>
     35c:	80 38       	cpi	r24, 0x80	; 128
     35e:	59 f4       	brne	.+22     	; 0x376 <LCD_12864_send_command+0x80>
     360:	8b b1       	in	r24, 0x0b	; 11
     362:	80 64       	ori	r24, 0x40	; 64
     364:	8b b9       	out	0x0b, r24	; 11
     366:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     36a:	05 c0       	rjmp	.+10     	; 0x376 <LCD_12864_send_command+0x80>
     36c:	8b b1       	in	r24, 0x0b	; 11
     36e:	8f 7b       	andi	r24, 0xBF	; 191
     370:	8b b9       	out	0x0b, r24	; 11
     372:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     376:	11 0f       	add	r17, r17
     378:	21 96       	adiw	r28, 0x01	; 1
     37a:	cc 30       	cpi	r28, 0x0C	; 12
     37c:	d1 05       	cpc	r29, r1
     37e:	0c f3       	brlt	.-62     	; 0x342 <LCD_12864_send_command+0x4c>
     380:	8b b1       	in	r24, 0x0b	; 11
     382:	8f 7b       	andi	r24, 0xBF	; 191
     384:	8b b9       	out	0x0b, r24	; 11
     386:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     38a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     38e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     392:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <strob>
     396:	8b b1       	in	r24, 0x0b	; 11
     398:	8f 77       	andi	r24, 0x7F	; 127
     39a:	8b b9       	out	0x0b, r24	; 11
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	1f 91       	pop	r17
     3a2:	08 95       	ret

000003a4 <LCD_12864_GrapnicMode>:
     3a4:	88 23       	and	r24, r24
     3a6:	99 f0       	breq	.+38     	; 0x3ce <LCD_12864_GrapnicMode+0x2a>
     3a8:	84 e3       	ldi	r24, 0x34	; 52
     3aa:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     3ae:	8f e9       	ldi	r24, 0x9F	; 159
     3b0:	9f e0       	ldi	r25, 0x0F	; 15
     3b2:	01 97       	sbiw	r24, 0x01	; 1
     3b4:	f1 f7       	brne	.-4      	; 0x3b2 <LCD_12864_GrapnicMode+0xe>
     3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <LCD_12864_GrapnicMode+0x14>
     3b8:	00 00       	nop
     3ba:	86 e3       	ldi	r24, 0x36	; 54
     3bc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     3c0:	8f e9       	ldi	r24, 0x9F	; 159
     3c2:	9f e0       	ldi	r25, 0x0F	; 15
     3c4:	01 97       	sbiw	r24, 0x01	; 1
     3c6:	f1 f7       	brne	.-4      	; 0x3c4 <LCD_12864_GrapnicMode+0x20>
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <LCD_12864_GrapnicMode+0x26>
     3ca:	00 00       	nop
     3cc:	08 95       	ret
     3ce:	80 e3       	ldi	r24, 0x30	; 48
     3d0:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     3d4:	8f e9       	ldi	r24, 0x9F	; 159
     3d6:	9f e0       	ldi	r25, 0x0F	; 15
     3d8:	01 97       	sbiw	r24, 0x01	; 1
     3da:	f1 f7       	brne	.-4      	; 0x3d8 <LCD_12864_GrapnicMode+0x34>
     3dc:	00 c0       	rjmp	.+0      	; 0x3de <LCD_12864_GrapnicMode+0x3a>
     3de:	00 00       	nop
     3e0:	08 95       	ret

000003e2 <LCD_12864_Draw_bitmap>:
     3e2:	8f 92       	push	r8
     3e4:	9f 92       	push	r9
     3e6:	af 92       	push	r10
     3e8:	bf 92       	push	r11
     3ea:	df 92       	push	r13
     3ec:	ef 92       	push	r14
     3ee:	ff 92       	push	r15
     3f0:	0f 93       	push	r16
     3f2:	1f 93       	push	r17
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	7c 01       	movw	r14, r24
     3fa:	d1 2c       	mov	r13, r1
     3fc:	31 c1       	rjmp	.+610    	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
     3fe:	8f e1       	ldi	r24, 0x1F	; 31
     400:	8d 15       	cp	r24, r13
     402:	48 f0       	brcs	.+18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     404:	8d 2d       	mov	r24, r13
     406:	80 68       	ori	r24, 0x80	; 128
     408:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     40c:	80 2f       	mov	r24, r16
     40e:	80 68       	ori	r24, 0x80	; 128
     410:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     414:	09 c0       	rjmp	.+18     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     416:	80 ee       	ldi	r24, 0xE0	; 224
     418:	8d 0d       	add	r24, r13
     41a:	80 68       	ori	r24, 0x80	; 128
     41c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     420:	80 2f       	mov	r24, r16
     422:	88 68       	ori	r24, 0x88	; 136
     424:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     428:	cd 2d       	mov	r28, r13
     42a:	c6 95       	lsr	r28
     42c:	c6 95       	lsr	r28
     42e:	c6 95       	lsr	r28
     430:	d0 e0       	ldi	r29, 0x00	; 0
     432:	cc 0f       	add	r28, r28
     434:	dd 1f       	adc	r29, r29
     436:	cc 0f       	add	r28, r28
     438:	dd 1f       	adc	r29, r29
     43a:	cc 0f       	add	r28, r28
     43c:	dd 1f       	adc	r29, r29
     43e:	c0 0f       	add	r28, r16
     440:	d1 1d       	adc	r29, r1
     442:	c2 95       	swap	r28
     444:	d2 95       	swap	r29
     446:	d0 7f       	andi	r29, 0xF0	; 240
     448:	dc 27       	eor	r29, r28
     44a:	c0 7f       	andi	r28, 0xF0	; 240
     44c:	dc 27       	eor	r29, r28
     44e:	ce 0d       	add	r28, r14
     450:	df 1d       	adc	r29, r15
     452:	88 80       	ld	r8, Y
     454:	91 2c       	mov	r9, r1
     456:	1d 2d       	mov	r17, r13
     458:	17 70       	andi	r17, 0x07	; 7
     45a:	01 2e       	mov	r0, r17
     45c:	02 c0       	rjmp	.+4      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     45e:	95 94       	asr	r9
     460:	87 94       	ror	r8
     462:	0a 94       	dec	r0
     464:	e2 f7       	brpl	.-8      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     466:	96 94       	lsr	r9
     468:	98 2c       	mov	r9, r8
     46a:	88 24       	eor	r8, r8
     46c:	97 94       	ror	r9
     46e:	87 94       	ror	r8
     470:	a9 80       	ldd	r10, Y+1	; 0x01
     472:	b1 2c       	mov	r11, r1
     474:	01 2e       	mov	r0, r17
     476:	02 c0       	rjmp	.+4      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     478:	b5 94       	asr	r11
     47a:	a7 94       	ror	r10
     47c:	0a 94       	dec	r0
     47e:	e2 f7       	brpl	.-8      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	a8 22       	and	r10, r24
     484:	bb 24       	eor	r11, r11
     486:	00 24       	eor	r0, r0
     488:	b6 94       	lsr	r11
     48a:	a7 94       	ror	r10
     48c:	07 94       	ror	r0
     48e:	b6 94       	lsr	r11
     490:	a7 94       	ror	r10
     492:	07 94       	ror	r0
     494:	ba 2c       	mov	r11, r10
     496:	a0 2c       	mov	r10, r0
     498:	aa 81       	ldd	r26, Y+2	; 0x02
     49a:	b0 e0       	ldi	r27, 0x00	; 0
     49c:	01 2e       	mov	r0, r17
     49e:	02 c0       	rjmp	.+4      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     4a0:	b5 95       	asr	r27
     4a2:	a7 95       	ror	r26
     4a4:	0a 94       	dec	r0
     4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
     4a8:	a1 70       	andi	r26, 0x01	; 1
     4aa:	bb 27       	eor	r27, r27
     4ac:	aa 0f       	add	r26, r26
     4ae:	bb 1f       	adc	r27, r27
     4b0:	a2 95       	swap	r26
     4b2:	b2 95       	swap	r27
     4b4:	b0 7f       	andi	r27, 0xF0	; 240
     4b6:	ba 27       	eor	r27, r26
     4b8:	a0 7f       	andi	r26, 0xF0	; 240
     4ba:	ba 27       	eor	r27, r26
     4bc:	eb 81       	ldd	r30, Y+3	; 0x03
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	01 2e       	mov	r0, r17
     4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c4:	f5 95       	asr	r31
     4c6:	e7 95       	ror	r30
     4c8:	0a 94       	dec	r0
     4ca:	e2 f7       	brpl	.-8      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     4cc:	e1 70       	andi	r30, 0x01	; 1
     4ce:	ff 27       	eor	r31, r31
     4d0:	e2 95       	swap	r30
     4d2:	f2 95       	swap	r31
     4d4:	f0 7f       	andi	r31, 0xF0	; 240
     4d6:	fe 27       	eor	r31, r30
     4d8:	e0 7f       	andi	r30, 0xF0	; 240
     4da:	fe 27       	eor	r31, r30
     4dc:	6c 81       	ldd	r22, Y+4	; 0x04
     4de:	70 e0       	ldi	r23, 0x00	; 0
     4e0:	01 2e       	mov	r0, r17
     4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
     4e4:	75 95       	asr	r23
     4e6:	67 95       	ror	r22
     4e8:	0a 94       	dec	r0
     4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
     4ec:	61 70       	andi	r22, 0x01	; 1
     4ee:	77 27       	eor	r23, r23
     4f0:	66 0f       	add	r22, r22
     4f2:	77 1f       	adc	r23, r23
     4f4:	66 0f       	add	r22, r22
     4f6:	77 1f       	adc	r23, r23
     4f8:	66 0f       	add	r22, r22
     4fa:	77 1f       	adc	r23, r23
     4fc:	4d 81       	ldd	r20, Y+5	; 0x05
     4fe:	50 e0       	ldi	r21, 0x00	; 0
     500:	01 2e       	mov	r0, r17
     502:	02 c0       	rjmp	.+4      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
     504:	55 95       	asr	r21
     506:	47 95       	ror	r20
     508:	0a 94       	dec	r0
     50a:	e2 f7       	brpl	.-8      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     50c:	41 70       	andi	r20, 0x01	; 1
     50e:	55 27       	eor	r21, r21
     510:	44 0f       	add	r20, r20
     512:	55 1f       	adc	r21, r21
     514:	44 0f       	add	r20, r20
     516:	55 1f       	adc	r21, r21
     518:	2e 81       	ldd	r18, Y+6	; 0x06
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	01 2e       	mov	r0, r17
     51e:	02 c0       	rjmp	.+4      	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
     520:	35 95       	asr	r19
     522:	27 95       	ror	r18
     524:	0a 94       	dec	r0
     526:	e2 f7       	brpl	.-8      	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
     528:	21 70       	andi	r18, 0x01	; 1
     52a:	33 27       	eor	r19, r19
     52c:	22 0f       	add	r18, r18
     52e:	33 1f       	adc	r19, r19
     530:	8f 81       	ldd	r24, Y+7	; 0x07
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	01 2e       	mov	r0, r17
     536:	02 c0       	rjmp	.+4      	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
     538:	95 95       	asr	r25
     53a:	87 95       	ror	r24
     53c:	0a 94       	dec	r0
     53e:	e2 f7       	brpl	.-8      	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
     540:	a8 28       	or	r10, r8
     542:	aa 29       	or	r26, r10
     544:	ea 2b       	or	r30, r26
     546:	6e 2b       	or	r22, r30
     548:	46 2b       	or	r20, r22
     54a:	24 2b       	or	r18, r20
     54c:	81 70       	andi	r24, 0x01	; 1
     54e:	82 2b       	or	r24, r18
     550:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
     554:	88 84       	ldd	r8, Y+8	; 0x08
     556:	91 2c       	mov	r9, r1
     558:	01 2e       	mov	r0, r17
     55a:	02 c0       	rjmp	.+4      	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
     55c:	95 94       	asr	r9
     55e:	87 94       	ror	r8
     560:	0a 94       	dec	r0
     562:	e2 f7       	brpl	.-8      	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
     564:	96 94       	lsr	r9
     566:	98 2c       	mov	r9, r8
     568:	88 24       	eor	r8, r8
     56a:	97 94       	ror	r9
     56c:	87 94       	ror	r8
     56e:	a9 84       	ldd	r10, Y+9	; 0x09
     570:	b1 2c       	mov	r11, r1
     572:	01 2e       	mov	r0, r17
     574:	02 c0       	rjmp	.+4      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
     576:	b5 94       	asr	r11
     578:	a7 94       	ror	r10
     57a:	0a 94       	dec	r0
     57c:	e2 f7       	brpl	.-8      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	a8 22       	and	r10, r24
     582:	bb 24       	eor	r11, r11
     584:	00 24       	eor	r0, r0
     586:	b6 94       	lsr	r11
     588:	a7 94       	ror	r10
     58a:	07 94       	ror	r0
     58c:	b6 94       	lsr	r11
     58e:	a7 94       	ror	r10
     590:	07 94       	ror	r0
     592:	ba 2c       	mov	r11, r10
     594:	a0 2c       	mov	r10, r0
     596:	aa 85       	ldd	r26, Y+10	; 0x0a
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	01 2e       	mov	r0, r17
     59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
     59e:	b5 95       	asr	r27
     5a0:	a7 95       	ror	r26
     5a2:	0a 94       	dec	r0
     5a4:	e2 f7       	brpl	.-8      	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
     5a6:	a1 70       	andi	r26, 0x01	; 1
     5a8:	bb 27       	eor	r27, r27
     5aa:	aa 0f       	add	r26, r26
     5ac:	bb 1f       	adc	r27, r27
     5ae:	a2 95       	swap	r26
     5b0:	b2 95       	swap	r27
     5b2:	b0 7f       	andi	r27, 0xF0	; 240
     5b4:	ba 27       	eor	r27, r26
     5b6:	a0 7f       	andi	r26, 0xF0	; 240
     5b8:	ba 27       	eor	r27, r26
     5ba:	eb 85       	ldd	r30, Y+11	; 0x0b
     5bc:	f0 e0       	ldi	r31, 0x00	; 0
     5be:	01 2e       	mov	r0, r17
     5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
     5c2:	f5 95       	asr	r31
     5c4:	e7 95       	ror	r30
     5c6:	0a 94       	dec	r0
     5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
     5ca:	e1 70       	andi	r30, 0x01	; 1
     5cc:	ff 27       	eor	r31, r31
     5ce:	e2 95       	swap	r30
     5d0:	f2 95       	swap	r31
     5d2:	f0 7f       	andi	r31, 0xF0	; 240
     5d4:	fe 27       	eor	r31, r30
     5d6:	e0 7f       	andi	r30, 0xF0	; 240
     5d8:	fe 27       	eor	r31, r30
     5da:	6c 85       	ldd	r22, Y+12	; 0x0c
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	01 2e       	mov	r0, r17
     5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
     5e2:	75 95       	asr	r23
     5e4:	67 95       	ror	r22
     5e6:	0a 94       	dec	r0
     5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
     5ea:	61 70       	andi	r22, 0x01	; 1
     5ec:	77 27       	eor	r23, r23
     5ee:	66 0f       	add	r22, r22
     5f0:	77 1f       	adc	r23, r23
     5f2:	66 0f       	add	r22, r22
     5f4:	77 1f       	adc	r23, r23
     5f6:	66 0f       	add	r22, r22
     5f8:	77 1f       	adc	r23, r23
     5fa:	4d 85       	ldd	r20, Y+13	; 0x0d
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	01 2e       	mov	r0, r17
     600:	02 c0       	rjmp	.+4      	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
     602:	55 95       	asr	r21
     604:	47 95       	ror	r20
     606:	0a 94       	dec	r0
     608:	e2 f7       	brpl	.-8      	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
     60a:	41 70       	andi	r20, 0x01	; 1
     60c:	55 27       	eor	r21, r21
     60e:	44 0f       	add	r20, r20
     610:	55 1f       	adc	r21, r21
     612:	44 0f       	add	r20, r20
     614:	55 1f       	adc	r21, r21
     616:	2e 85       	ldd	r18, Y+14	; 0x0e
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	01 2e       	mov	r0, r17
     61c:	02 c0       	rjmp	.+4      	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
     61e:	35 95       	asr	r19
     620:	27 95       	ror	r18
     622:	0a 94       	dec	r0
     624:	e2 f7       	brpl	.-8      	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
     626:	21 70       	andi	r18, 0x01	; 1
     628:	33 27       	eor	r19, r19
     62a:	22 0f       	add	r18, r18
     62c:	33 1f       	adc	r19, r19
     62e:	cf 85       	ldd	r28, Y+15	; 0x0f
     630:	d0 e0       	ldi	r29, 0x00	; 0
     632:	02 c0       	rjmp	.+4      	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
     634:	d5 95       	asr	r29
     636:	c7 95       	ror	r28
     638:	1a 95       	dec	r17
     63a:	e2 f7       	brpl	.-8      	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
     63c:	88 2d       	mov	r24, r8
     63e:	8a 29       	or	r24, r10
     640:	8a 2b       	or	r24, r26
     642:	8e 2b       	or	r24, r30
     644:	86 2b       	or	r24, r22
     646:	84 2b       	or	r24, r20
     648:	82 2b       	or	r24, r18
     64a:	c1 70       	andi	r28, 0x01	; 1
     64c:	8c 2b       	or	r24, r28
     64e:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
     652:	0f 5f       	subi	r16, 0xFF	; 255
     654:	01 c0       	rjmp	.+2      	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
     656:	00 e0       	ldi	r16, 0x00	; 0
     658:	08 30       	cpi	r16, 0x08	; 8
     65a:	08 f4       	brcc	.+2      	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
     65c:	d0 ce       	rjmp	.-608    	; 0x3fe <LCD_12864_Draw_bitmap+0x1c>
     65e:	d3 94       	inc	r13
     660:	8f e3       	ldi	r24, 0x3F	; 63
     662:	8d 15       	cp	r24, r13
     664:	c0 f7       	brcc	.-16     	; 0x656 <__EEPROM_REGION_LENGTH__+0x256>
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	1f 91       	pop	r17
     66c:	0f 91       	pop	r16
     66e:	ff 90       	pop	r15
     670:	ef 90       	pop	r14
     672:	df 90       	pop	r13
     674:	bf 90       	pop	r11
     676:	af 90       	pop	r10
     678:	9f 90       	pop	r9
     67a:	8f 90       	pop	r8
     67c:	08 95       	ret

0000067e <clear_LCD_12864>:
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     684:	8f e3       	ldi	r24, 0x3F	; 63
     686:	9c e9       	ldi	r25, 0x9C	; 156
     688:	01 97       	sbiw	r24, 0x01	; 1
     68a:	f1 f7       	brne	.-4      	; 0x688 <clear_LCD_12864+0xa>
     68c:	00 c0       	rjmp	.+0      	; 0x68e <clear_LCD_12864+0x10>
     68e:	00 00       	nop
     690:	08 95       	ret

00000692 <LCD_12864_ini>:
     692:	2f ef       	ldi	r18, 0xFF	; 255
     694:	83 ef       	ldi	r24, 0xF3	; 243
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	21 50       	subi	r18, 0x01	; 1
     69a:	80 40       	sbci	r24, 0x00	; 0
     69c:	90 40       	sbci	r25, 0x00	; 0
     69e:	e1 f7       	brne	.-8      	; 0x698 <LCD_12864_ini+0x6>
     6a0:	00 c0       	rjmp	.+0      	; 0x6a2 <LCD_12864_ini+0x10>
     6a2:	00 00       	nop
     6a4:	8c e0       	ldi	r24, 0x0C	; 12
     6a6:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     6aa:	8f e8       	ldi	r24, 0x8F	; 143
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	01 97       	sbiw	r24, 0x01	; 1
     6b0:	f1 f7       	brne	.-4      	; 0x6ae <LCD_12864_ini+0x1c>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <LCD_12864_ini+0x22>
     6b4:	00 00       	nop
     6b6:	0e 94 3f 03 	call	0x67e	; 0x67e <clear_LCD_12864>
     6ba:	86 e0       	ldi	r24, 0x06	; 6
     6bc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     6c0:	8f e3       	ldi	r24, 0x3F	; 63
     6c2:	9c e9       	ldi	r25, 0x9C	; 156
     6c4:	01 97       	sbiw	r24, 0x01	; 1
     6c6:	f1 f7       	brne	.-4      	; 0x6c4 <LCD_12864_ini+0x32>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <LCD_12864_ini+0x38>
     6ca:	00 00       	nop
     6cc:	08 95       	ret

000006ce <setpos_LCD_12864>:
     6ce:	61 30       	cpi	r22, 0x01	; 1
     6d0:	71 05       	cpc	r23, r1
     6d2:	41 f0       	breq	.+16     	; 0x6e4 <setpos_LCD_12864+0x16>
     6d4:	68 f0       	brcs	.+26     	; 0x6f0 <setpos_LCD_12864+0x22>
     6d6:	62 30       	cpi	r22, 0x02	; 2
     6d8:	71 05       	cpc	r23, r1
     6da:	31 f0       	breq	.+12     	; 0x6e8 <setpos_LCD_12864+0x1a>
     6dc:	63 30       	cpi	r22, 0x03	; 3
     6de:	71 05       	cpc	r23, r1
     6e0:	29 f0       	breq	.+10     	; 0x6ec <setpos_LCD_12864+0x1e>
     6e2:	07 c0       	rjmp	.+14     	; 0x6f2 <setpos_LCD_12864+0x24>
     6e4:	90 e9       	ldi	r25, 0x90	; 144
     6e6:	05 c0       	rjmp	.+10     	; 0x6f2 <setpos_LCD_12864+0x24>
     6e8:	98 e8       	ldi	r25, 0x88	; 136
     6ea:	03 c0       	rjmp	.+6      	; 0x6f2 <setpos_LCD_12864+0x24>
     6ec:	98 e9       	ldi	r25, 0x98	; 152
     6ee:	01 c0       	rjmp	.+2      	; 0x6f2 <setpos_LCD_12864+0x24>
     6f0:	90 e8       	ldi	r25, 0x80	; 128
     6f2:	89 2b       	or	r24, r25
     6f4:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     6f8:	08 95       	ret

000006fa <LCD_12864_print_symbol>:
     6fa:	bf 92       	push	r11
     6fc:	cf 92       	push	r12
     6fe:	df 92       	push	r13
     700:	ef 92       	push	r14
     702:	ff 92       	push	r15
     704:	0f 93       	push	r16
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	6c 01       	movw	r12, r24
     70e:	7b 01       	movw	r14, r22
     710:	b4 2e       	mov	r11, r20
     712:	c0 e0       	ldi	r28, 0x00	; 0
     714:	d0 e0       	ldi	r29, 0x00	; 0
     716:	2d c0       	rjmp	.+90     	; 0x772 <LCD_12864_print_symbol+0x78>
     718:	bb 20       	and	r11, r11
     71a:	b1 f0       	breq	.+44     	; 0x748 <LCD_12864_print_symbol+0x4e>
     71c:	8e 01       	movw	r16, r28
     71e:	0c 0d       	add	r16, r12
     720:	1d 1d       	adc	r17, r13
     722:	01 50       	subi	r16, 0x01	; 1
     724:	11 09       	sbc	r17, r1
     726:	c7 01       	movw	r24, r14
     728:	88 0f       	add	r24, r24
     72a:	99 1f       	adc	r25, r25
     72c:	8e 0d       	add	r24, r14
     72e:	9f 1d       	adc	r25, r15
     730:	88 0f       	add	r24, r24
     732:	99 1f       	adc	r25, r25
     734:	8c 0f       	add	r24, r28
     736:	9d 1f       	adc	r25, r29
     738:	0e 94 ae 13 	call	0x275c	; 0x275c <read_symbol_from_SD>
     73c:	f8 01       	movw	r30, r16
     73e:	ea 5e       	subi	r30, 0xEA	; 234
     740:	fd 4f       	sbci	r31, 0xFD	; 253
     742:	80 95       	com	r24
     744:	80 83       	st	Z, r24
     746:	14 c0       	rjmp	.+40     	; 0x770 <LCD_12864_print_symbol+0x76>
     748:	86 01       	movw	r16, r12
     74a:	0c 0f       	add	r16, r28
     74c:	1d 1f       	adc	r17, r29
     74e:	01 50       	subi	r16, 0x01	; 1
     750:	11 09       	sbc	r17, r1
     752:	c7 01       	movw	r24, r14
     754:	88 0f       	add	r24, r24
     756:	99 1f       	adc	r25, r25
     758:	8e 0d       	add	r24, r14
     75a:	9f 1d       	adc	r25, r15
     75c:	88 0f       	add	r24, r24
     75e:	99 1f       	adc	r25, r25
     760:	8c 0f       	add	r24, r28
     762:	9d 1f       	adc	r25, r29
     764:	0e 94 ae 13 	call	0x275c	; 0x275c <read_symbol_from_SD>
     768:	f8 01       	movw	r30, r16
     76a:	ea 5e       	subi	r30, 0xEA	; 234
     76c:	fd 4f       	sbci	r31, 0xFD	; 253
     76e:	80 83       	st	Z, r24
     770:	21 96       	adiw	r28, 0x01	; 1
     772:	c7 30       	cpi	r28, 0x07	; 7
     774:	d1 05       	cpc	r29, r1
     776:	84 f2       	brlt	.-96     	; 0x718 <LCD_12864_print_symbol+0x1e>
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	1f 91       	pop	r17
     77e:	0f 91       	pop	r16
     780:	ff 90       	pop	r15
     782:	ef 90       	pop	r14
     784:	df 90       	pop	r13
     786:	cf 90       	pop	r12
     788:	bf 90       	pop	r11
     78a:	08 95       	ret

0000078c <LCD_12864_Decode_UTF8>:
     78c:	9f 92       	push	r9
     78e:	af 92       	push	r10
     790:	bf 92       	push	r11
     792:	cf 92       	push	r12
     794:	df 92       	push	r13
     796:	ef 92       	push	r14
     798:	ff 92       	push	r15
     79a:	0f 93       	push	r16
     79c:	1f 93       	push	r17
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	cd b7       	in	r28, 0x3d	; 61
     7a4:	de b7       	in	r29, 0x3e	; 62
     7a6:	ac 97       	sbiw	r28, 0x2c	; 44
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	f8 94       	cli
     7ac:	de bf       	out	0x3e, r29	; 62
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	cd bf       	out	0x3d, r28	; 61
     7b2:	6c 01       	movw	r12, r24
     7b4:	16 2f       	mov	r17, r22
     7b6:	94 2e       	mov	r9, r20
     7b8:	59 01       	movw	r10, r18
     7ba:	00 00       	nop
     7bc:	ce 01       	movw	r24, r28
     7be:	01 96       	adiw	r24, 0x01	; 1
     7c0:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <pf_mount>
     7c4:	85 e0       	ldi	r24, 0x05	; 5
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 18 11 	call	0x2230	; 0x2230 <pf_open>
     7cc:	80 e8       	ldi	r24, 0x80	; 128
     7ce:	18 9f       	mul	r17, r24
     7d0:	c0 0c       	add	r12, r0
     7d2:	d1 1c       	adc	r13, r1
     7d4:	11 24       	eor	r1, r1
     7d6:	e1 2c       	mov	r14, r1
     7d8:	f1 2c       	mov	r15, r1
     7da:	7e c0       	rjmp	.+252    	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     7dc:	f5 01       	movw	r30, r10
     7de:	ee 0d       	add	r30, r14
     7e0:	ff 1d       	adc	r31, r15
     7e2:	00 81       	ld	r16, Z
     7e4:	00 3c       	cpi	r16, 0xC0	; 192
     7e6:	d8 f4       	brcc	.+54     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7e8:	08 3a       	cpi	r16, 0xA8	; 168
     7ea:	c9 f0       	breq	.+50     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7ec:	08 3b       	cpi	r16, 0xB8	; 184
     7ee:	b9 f0       	breq	.+46     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7f0:	07 3b       	cpi	r16, 0xB7	; 183
     7f2:	a9 f0       	breq	.+42     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7f4:	60 2f       	mov	r22, r16
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	99 20       	and	r9, r9
     7fa:	39 f0       	breq	.+14     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7fc:	60 52       	subi	r22, 0x20	; 32
     7fe:	71 09       	sbc	r23, r1
     800:	41 e0       	ldi	r20, 0x01	; 1
     802:	c6 01       	movw	r24, r12
     804:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     808:	06 c0       	rjmp	.+12     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     80a:	60 52       	subi	r22, 0x20	; 32
     80c:	71 09       	sbc	r23, r1
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	c6 01       	movw	r24, r12
     812:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     816:	86 e0       	ldi	r24, 0x06	; 6
     818:	c8 0e       	add	r12, r24
     81a:	d1 1c       	adc	r13, r1
     81c:	5a c0       	rjmp	.+180    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     81e:	10 e0       	ldi	r17, 0x00	; 0
     820:	c8 01       	movw	r24, r16
     822:	80 5c       	subi	r24, 0xC0	; 192
     824:	91 09       	sbc	r25, r1
     826:	80 34       	cpi	r24, 0x40	; 64
     828:	91 05       	cpc	r25, r1
     82a:	a0 f4       	brcc	.+40     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     82c:	99 20       	and	r9, r9
     82e:	41 f0       	breq	.+16     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     830:	41 e0       	ldi	r20, 0x01	; 1
     832:	b8 01       	movw	r22, r16
     834:	61 56       	subi	r22, 0x61	; 97
     836:	71 09       	sbc	r23, r1
     838:	c6 01       	movw	r24, r12
     83a:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     83e:	07 c0       	rjmp	.+14     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     840:	40 e0       	ldi	r20, 0x00	; 0
     842:	b8 01       	movw	r22, r16
     844:	61 56       	subi	r22, 0x61	; 97
     846:	71 09       	sbc	r23, r1
     848:	c6 01       	movw	r24, r12
     84a:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     84e:	86 e0       	ldi	r24, 0x06	; 6
     850:	c8 0e       	add	r12, r24
     852:	d1 1c       	adc	r13, r1
     854:	08 3a       	cpi	r16, 0xA8	; 168
     856:	11 05       	cpc	r17, r1
     858:	91 f4       	brne	.+36     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
     85a:	99 20       	and	r9, r9
     85c:	39 f0       	breq	.+14     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
     85e:	41 e0       	ldi	r20, 0x01	; 1
     860:	6f e9       	ldi	r22, 0x9F	; 159
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	c6 01       	movw	r24, r12
     866:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     86a:	06 c0       	rjmp	.+12     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
     86c:	40 e0       	ldi	r20, 0x00	; 0
     86e:	6f e9       	ldi	r22, 0x9F	; 159
     870:	70 e0       	ldi	r23, 0x00	; 0
     872:	c6 01       	movw	r24, r12
     874:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     878:	86 e0       	ldi	r24, 0x06	; 6
     87a:	c8 0e       	add	r12, r24
     87c:	d1 1c       	adc	r13, r1
     87e:	08 3b       	cpi	r16, 0xB8	; 184
     880:	11 05       	cpc	r17, r1
     882:	91 f4       	brne	.+36     	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
     884:	99 20       	and	r9, r9
     886:	39 f0       	breq	.+14     	; 0x896 <__DATA_REGION_LENGTH__+0x96>
     888:	41 e0       	ldi	r20, 0x01	; 1
     88a:	60 ea       	ldi	r22, 0xA0	; 160
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	c6 01       	movw	r24, r12
     890:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     894:	06 c0       	rjmp	.+12     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	60 ea       	ldi	r22, 0xA0	; 160
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	c6 01       	movw	r24, r12
     89e:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     8a2:	86 e0       	ldi	r24, 0x06	; 6
     8a4:	c8 0e       	add	r12, r24
     8a6:	d1 1c       	adc	r13, r1
     8a8:	07 3b       	cpi	r16, 0xB7	; 183
     8aa:	11 05       	cpc	r17, r1
     8ac:	91 f4       	brne	.+36     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     8ae:	99 20       	and	r9, r9
     8b0:	39 f0       	breq	.+14     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     8b2:	41 e0       	ldi	r20, 0x01	; 1
     8b4:	61 ea       	ldi	r22, 0xA1	; 161
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	c6 01       	movw	r24, r12
     8ba:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     8be:	06 c0       	rjmp	.+12     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
     8c0:	40 e0       	ldi	r20, 0x00	; 0
     8c2:	61 ea       	ldi	r22, 0xA1	; 161
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	c6 01       	movw	r24, r12
     8c8:	0e 94 7d 03 	call	0x6fa	; 0x6fa <LCD_12864_print_symbol>
     8cc:	86 e0       	ldi	r24, 0x06	; 6
     8ce:	c8 0e       	add	r12, r24
     8d0:	d1 1c       	adc	r13, r1
     8d2:	8f ef       	ldi	r24, 0xFF	; 255
     8d4:	e8 1a       	sub	r14, r24
     8d6:	f8 0a       	sbc	r15, r24
     8d8:	f5 01       	movw	r30, r10
     8da:	01 90       	ld	r0, Z+
     8dc:	00 20       	and	r0, r0
     8de:	e9 f7       	brne	.-6      	; 0x8da <__DATA_REGION_LENGTH__+0xda>
     8e0:	31 97       	sbiw	r30, 0x01	; 1
     8e2:	ea 19       	sub	r30, r10
     8e4:	fb 09       	sbc	r31, r11
     8e6:	ee 16       	cp	r14, r30
     8e8:	ff 06       	cpc	r15, r31
     8ea:	08 f4       	brcc	.+2      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
     8ec:	77 cf       	rjmp	.-274    	; 0x7dc <LCD_12864_Decode_UTF8+0x50>
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <pf_mount>
     8f6:	ac 96       	adiw	r28, 0x2c	; 44
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	f8 94       	cli
     8fc:	de bf       	out	0x3e, r29	; 62
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	cd bf       	out	0x3d, r28	; 61
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	1f 91       	pop	r17
     908:	0f 91       	pop	r16
     90a:	ff 90       	pop	r15
     90c:	ef 90       	pop	r14
     90e:	df 90       	pop	r13
     910:	cf 90       	pop	r12
     912:	bf 90       	pop	r11
     914:	af 90       	pop	r10
     916:	9f 90       	pop	r9
     918:	08 95       	ret

0000091a <LCD_12864_Clean_Frame_buffer>:
	LCD_12864_Clean_Frame_buffer();
}
/*------------------------Функция очистки буфера кадра-------------------------*/
void LCD_12864_Clean_Frame_buffer(void) {
	/// Функция очистки буфера кадра
	memset(Frame_buffer, 0x00, sizeof(Frame_buffer));
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	94 e0       	ldi	r25, 0x04	; 4
     91e:	e6 e1       	ldi	r30, 0x16	; 22
     920:	f2 e0       	ldi	r31, 0x02	; 2
     922:	df 01       	movw	r26, r30
     924:	9c 01       	movw	r18, r24
     926:	1d 92       	st	X+, r1
     928:	21 50       	subi	r18, 0x01	; 1
     92a:	30 40       	sbci	r19, 0x00	; 0
     92c:	e1 f7       	brne	.-8      	; 0x926 <LCD_12864_Clean_Frame_buffer+0xc>
     92e:	08 95       	ret

00000930 <LCD_12864_Clean>:
	for (; x_start < x_end; x_start++) {
		Frame_buffer[x_start] = ~(Frame_buffer[x_start]);
	}
}
/*---------------Функция очистки дисплея в графическом режиме--------------------*/
void LCD_12864_Clean() {
     930:	cf 93       	push	r28
     932:	df 93       	push	r29
	/// Функция очистки дисплея в графическом режиме
	uint8_t x, y;
	for (y = 0; y < 64; y++) {
     934:	d0 e0       	ldi	r29, 0x00	; 0
     936:	1e c0       	rjmp	.+60     	; 0x974 <LCD_12864_Clean+0x44>
		if (y < 32) {
     938:	d0 32       	cpi	r29, 0x20	; 32
     93a:	48 f4       	brcc	.+18     	; 0x94e <LCD_12864_Clean+0x1e>
			LCD_12864_send_command(0x80 | y);
     93c:	8d 2f       	mov	r24, r29
     93e:	80 68       	ori	r24, 0x80	; 128
     940:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
			LCD_12864_send_command(0x80);
     944:	80 e8       	ldi	r24, 0x80	; 128
     946:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
	for (; x_start < x_end; x_start++) {
		Frame_buffer[x_start] = ~(Frame_buffer[x_start]);
	}
}
/*---------------Функция очистки дисплея в графическом режиме--------------------*/
void LCD_12864_Clean() {
     94a:	c0 e0       	ldi	r28, 0x00	; 0
     94c:	10 c0       	rjmp	.+32     	; 0x96e <LCD_12864_Clean+0x3e>
	for (y = 0; y < 64; y++) {
		if (y < 32) {
			LCD_12864_send_command(0x80 | y);
			LCD_12864_send_command(0x80);
			} else {
			LCD_12864_send_command(0x80 | (y - 32));
     94e:	80 ee       	ldi	r24, 0xE0	; 224
     950:	8d 0f       	add	r24, r29
     952:	80 68       	ori	r24, 0x80	; 128
     954:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
			LCD_12864_send_command(0x88);
     958:	88 e8       	ldi	r24, 0x88	; 136
     95a:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_12864_send_command>
     95e:	f5 cf       	rjmp	.-22     	; 0x94a <LCD_12864_Clean+0x1a>
		}
		for (x = 0; x < 8; x++) {
			LCD_12864_send_data(0x00);
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
			LCD_12864_send_data(0x00);
     966:	80 e0       	ldi	r24, 0x00	; 0
     968:	0e 94 0e 01 	call	0x21c	; 0x21c <LCD_12864_send_data>
			LCD_12864_send_command(0x80);
			} else {
			LCD_12864_send_command(0x80 | (y - 32));
			LCD_12864_send_command(0x88);
		}
		for (x = 0; x < 8; x++) {
     96c:	cf 5f       	subi	r28, 0xFF	; 255
     96e:	c8 30       	cpi	r28, 0x08	; 8
     970:	b8 f3       	brcs	.-18     	; 0x960 <LCD_12864_Clean+0x30>
}
/*---------------Функция очистки дисплея в графическом режиме--------------------*/
void LCD_12864_Clean() {
	/// Функция очистки дисплея в графическом режиме
	uint8_t x, y;
	for (y = 0; y < 64; y++) {
     972:	df 5f       	subi	r29, 0xFF	; 255
     974:	d0 34       	cpi	r29, 0x40	; 64
     976:	00 f3       	brcs	.-64     	; 0x938 <LCD_12864_Clean+0x8>
		for (x = 0; x < 8; x++) {
			LCD_12864_send_data(0x00);
			LCD_12864_send_data(0x00);
		}
	}
	LCD_12864_Clean_Frame_buffer();
     978:	0e 94 8d 04 	call	0x91a	; 0x91a <LCD_12864_Clean_Frame_buffer>
}
     97c:	df 91       	pop	r29
     97e:	cf 91       	pop	r28
     980:	08 95       	ret

00000982 <LCD_12864_Draw_line>:
	memset(Frame_buffer, 0x00, sizeof(Frame_buffer));
}
/*----------Различная графика--------------------*/
/*-----------------------------------------------*/
/*----------Линия--------------------*/
void LCD_12864_Draw_line(uint8_t x_start, uint8_t y_start, uint8_t x_end, uint8_t y_end) {
     982:	8f 92       	push	r8
     984:	9f 92       	push	r9
     986:	af 92       	push	r10
     988:	bf 92       	push	r11
     98a:	cf 92       	push	r12
     98c:	df 92       	push	r13
     98e:	ef 92       	push	r14
     990:	ff 92       	push	r15
     992:	0f 93       	push	r16
     994:	1f 93       	push	r17
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	c8 2f       	mov	r28, r24
     99c:	d6 2f       	mov	r29, r22
     99e:	b4 2e       	mov	r11, r20
     9a0:	82 2e       	mov	r8, r18
	int dx = (x_end >= x_start) ? x_end - x_start : x_start - x_end;
     9a2:	48 17       	cp	r20, r24
     9a4:	28 f0       	brcs	.+10     	; 0x9b0 <LCD_12864_Draw_line+0x2e>
     9a6:	c4 2e       	mov	r12, r20
     9a8:	d1 2c       	mov	r13, r1
     9aa:	c8 1a       	sub	r12, r24
     9ac:	d1 08       	sbc	r13, r1
     9ae:	04 c0       	rjmp	.+8      	; 0x9b8 <LCD_12864_Draw_line+0x36>
     9b0:	c8 2e       	mov	r12, r24
     9b2:	d1 2c       	mov	r13, r1
     9b4:	c4 1a       	sub	r12, r20
     9b6:	d1 08       	sbc	r13, r1
	int dy = (y_end >= y_start) ? y_end - y_start : y_start - y_end;
     9b8:	8d 16       	cp	r8, r29
     9ba:	28 f0       	brcs	.+10     	; 0x9c6 <LCD_12864_Draw_line+0x44>
     9bc:	e8 2c       	mov	r14, r8
     9be:	f1 2c       	mov	r15, r1
     9c0:	ed 1a       	sub	r14, r29
     9c2:	f1 08       	sbc	r15, r1
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <LCD_12864_Draw_line+0x4c>
     9c6:	ed 2e       	mov	r14, r29
     9c8:	f1 2c       	mov	r15, r1
     9ca:	e8 18       	sub	r14, r8
     9cc:	f1 08       	sbc	r15, r1
	int sx = (x_start < x_end) ? 1 : -1;
     9ce:	cb 15       	cp	r28, r11
     9d0:	18 f4       	brcc	.+6      	; 0x9d8 <LCD_12864_Draw_line+0x56>
     9d2:	aa 24       	eor	r10, r10
     9d4:	a3 94       	inc	r10
     9d6:	02 c0       	rjmp	.+4      	; 0x9dc <LCD_12864_Draw_line+0x5a>
     9d8:	aa 24       	eor	r10, r10
     9da:	aa 94       	dec	r10
	int sy = (y_start < y_end) ? 1 : -1;
     9dc:	d8 15       	cp	r29, r8
     9de:	18 f4       	brcc	.+6      	; 0x9e6 <LCD_12864_Draw_line+0x64>
     9e0:	99 24       	eor	r9, r9
     9e2:	93 94       	inc	r9
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <LCD_12864_Draw_line+0x68>
     9e6:	99 24       	eor	r9, r9
     9e8:	9a 94       	dec	r9
	int err = dx - dy;
     9ea:	86 01       	movw	r16, r12
     9ec:	0e 19       	sub	r16, r14
     9ee:	1f 09       	sbc	r17, r15

	for (;;) {
		LCD_1286_Draw_pixel(x_start, y_start);
     9f0:	6d 2f       	mov	r22, r29
     9f2:	8c 2f       	mov	r24, r28
     9f4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <LCD_1286_Draw_pixel>
		if (x_start == x_end && y_start == y_end)
     9f8:	cb 11       	cpse	r28, r11
     9fa:	02 c0       	rjmp	.+4      	; 0xa00 <LCD_12864_Draw_line+0x7e>
     9fc:	d8 15       	cp	r29, r8
     9fe:	a1 f0       	breq	.+40     	; 0xa28 <LCD_12864_Draw_line+0xa6>
		break;
		int e2 = err + err;
     a00:	c8 01       	movw	r24, r16
     a02:	88 0f       	add	r24, r24
     a04:	99 1f       	adc	r25, r25
		if (e2 > -dy) {
     a06:	22 27       	eor	r18, r18
     a08:	33 27       	eor	r19, r19
     a0a:	2e 19       	sub	r18, r14
     a0c:	3f 09       	sbc	r19, r15
     a0e:	28 17       	cp	r18, r24
     a10:	39 07       	cpc	r19, r25
     a12:	1c f4       	brge	.+6      	; 0xa1a <LCD_12864_Draw_line+0x98>
			err -= dy;
     a14:	0e 19       	sub	r16, r14
     a16:	1f 09       	sbc	r17, r15
			x_start += sx;
     a18:	ca 0d       	add	r28, r10
		}
		if (e2 < dx) {
     a1a:	8c 15       	cp	r24, r12
     a1c:	9d 05       	cpc	r25, r13
     a1e:	44 f7       	brge	.-48     	; 0x9f0 <LCD_12864_Draw_line+0x6e>
			err += dx;
     a20:	0c 0d       	add	r16, r12
     a22:	1d 1d       	adc	r17, r13
			y_start += sy;
     a24:	d9 0d       	add	r29, r9
     a26:	e4 cf       	rjmp	.-56     	; 0x9f0 <LCD_12864_Draw_line+0x6e>
		}
	}
}
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	ff 90       	pop	r15
     a32:	ef 90       	pop	r14
     a34:	df 90       	pop	r13
     a36:	cf 90       	pop	r12
     a38:	bf 90       	pop	r11
     a3a:	af 90       	pop	r10
     a3c:	9f 90       	pop	r9
     a3e:	8f 90       	pop	r8
     a40:	08 95       	ret

00000a42 <LCD_12864_Draw_rectangle>:
/*----------Пустотелый прямоугольник--------------------*/
void LCD_12864_Draw_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
     a42:	ef 92       	push	r14
     a44:	ff 92       	push	r15
     a46:	0f 93       	push	r16
     a48:	1f 93       	push	r17
     a4a:	cf 93       	push	r28
     a4c:	df 93       	push	r29
     a4e:	7c 01       	movw	r14, r24
     a50:	8b 01       	movw	r16, r22
     a52:	e9 01       	movw	r28, r18
	/// \param y - начальная точка по оси "y"
	/// \param width - ширина прямоугольника
	/// \param height - высота прямоугольника

	/*Проверка ширины и высоты*/
	if ((x + width) >= ST7920_width) {
     a54:	9c 01       	movw	r18, r24
     a56:	24 0f       	add	r18, r20
     a58:	35 1f       	adc	r19, r21
     a5a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ST7920_width>
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	28 17       	cp	r18, r24
     a62:	39 07       	cpc	r19, r25
     a64:	18 f0       	brcs	.+6      	; 0xa6c <LCD_12864_Draw_rectangle+0x2a>
		width = ST7920_width - x;
     a66:	ac 01       	movw	r20, r24
     a68:	4e 19       	sub	r20, r14
     a6a:	5f 09       	sbc	r21, r15
	}
	if ((y + height) >= ST7920_height) {
     a6c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	98 01       	movw	r18, r16
     a74:	2c 0f       	add	r18, r28
     a76:	3d 1f       	adc	r19, r29
     a78:	28 17       	cp	r18, r24
     a7a:	39 07       	cpc	r19, r25
     a7c:	18 f0       	brcs	.+6      	; 0xa84 <LCD_12864_Draw_rectangle+0x42>
		height = ST7920_height - y;
     a7e:	ec 01       	movw	r28, r24
     a80:	c0 1b       	sub	r28, r16
     a82:	d1 0b       	sbc	r29, r17
	}

	/*Рисуем линии*/
	LCD_12864_Draw_line(x, y, x + width, y); /*Верх прямоугольника*/
     a84:	de 2d       	mov	r29, r14
     a86:	d4 0f       	add	r29, r20
     a88:	20 2f       	mov	r18, r16
     a8a:	4d 2f       	mov	r20, r29
     a8c:	60 2f       	mov	r22, r16
     a8e:	8e 2d       	mov	r24, r14
     a90:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y + height, x + width, y + height); /*Низ прямоугольника*/
     a94:	c0 0f       	add	r28, r16
     a96:	2c 2f       	mov	r18, r28
     a98:	4d 2f       	mov	r20, r29
     a9a:	6c 2f       	mov	r22, r28
     a9c:	8e 2d       	mov	r24, r14
     a9e:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y, x, y + height); /*Левая сторона прямоугольника*/
     aa2:	2c 2f       	mov	r18, r28
     aa4:	4e 2d       	mov	r20, r14
     aa6:	60 2f       	mov	r22, r16
     aa8:	8e 2d       	mov	r24, r14
     aaa:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x + width, y, x + width, y + height); /*Правая сторона прямоугольника*/
     aae:	2c 2f       	mov	r18, r28
     ab0:	4d 2f       	mov	r20, r29
     ab2:	60 2f       	mov	r22, r16
     ab4:	8d 2f       	mov	r24, r29
     ab6:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
}
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	1f 91       	pop	r17
     ac0:	0f 91       	pop	r16
     ac2:	ff 90       	pop	r15
     ac4:	ef 90       	pop	r14
     ac6:	08 95       	ret

00000ac8 <LCD_12864_Draw_rectangle_filled>:
/*-------------------------------Вывести закрашенный прямоугольник---------------------------------*/
void LCD_12864_Draw_rectangle_filled(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
     ac8:	af 92       	push	r10
     aca:	bf 92       	push	r11
     acc:	cf 92       	push	r12
     ace:	df 92       	push	r13
     ad0:	ef 92       	push	r14
     ad2:	ff 92       	push	r15
     ad4:	0f 93       	push	r16
     ad6:	1f 93       	push	r17
     ad8:	cf 93       	push	r28
     ada:	8c 01       	movw	r16, r24
     adc:	6b 01       	movw	r12, r22
     ade:	5a 01       	movw	r10, r20
     ae0:	79 01       	movw	r14, r18
	/// \param y - начальная точка по оси "y"
	/// \param width - ширина прямоугольника
	/// \param height - высота прямоугольника

	/*Проверка ширины и высоты*/
	if ((x + width) >= ST7920_width) {
     ae2:	9c 01       	movw	r18, r24
     ae4:	24 0f       	add	r18, r20
     ae6:	35 1f       	adc	r19, r21
     ae8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ST7920_width>
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	28 17       	cp	r18, r24
     af0:	39 07       	cpc	r19, r25
     af2:	18 f0       	brcs	.+6      	; 0xafa <LCD_12864_Draw_rectangle_filled+0x32>
		width = ST7920_width - x;
     af4:	5c 01       	movw	r10, r24
     af6:	a0 1a       	sub	r10, r16
     af8:	b1 0a       	sbc	r11, r17
	}
	if ((y + height) >= ST7920_height) {
     afa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	96 01       	movw	r18, r12
     b02:	2e 0d       	add	r18, r14
     b04:	3f 1d       	adc	r19, r15
     b06:	28 17       	cp	r18, r24
     b08:	39 07       	cpc	r19, r25
     b0a:	18 f0       	brcs	.+6      	; 0xb12 <LCD_12864_Draw_rectangle_filled+0x4a>
		height = ST7920_height - y;
     b0c:	7c 01       	movw	r14, r24
     b0e:	ec 18       	sub	r14, r12
     b10:	fd 08       	sbc	r15, r13
	}

	/*Рисуем линии*/
	for (uint8_t i = 0; i <= height; i++) {
     b12:	c0 e0       	ldi	r28, 0x00	; 0
     b14:	09 c0       	rjmp	.+18     	; 0xb28 <LCD_12864_Draw_rectangle_filled+0x60>
		LCD_12864_Draw_line(x, y + i, x + width, y + i);
     b16:	6c 2f       	mov	r22, r28
     b18:	6c 0d       	add	r22, r12
     b1a:	26 2f       	mov	r18, r22
     b1c:	40 2f       	mov	r20, r16
     b1e:	4a 0d       	add	r20, r10
     b20:	80 2f       	mov	r24, r16
     b22:	0e 94 c1 04 	call	0x982	; 0x982 <LCD_12864_Draw_line>
	if ((y + height) >= ST7920_height) {
		height = ST7920_height - y;
	}

	/*Рисуем линии*/
	for (uint8_t i = 0; i <= height; i++) {
     b26:	cf 5f       	subi	r28, 0xFF	; 255
     b28:	8c 2f       	mov	r24, r28
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	e8 16       	cp	r14, r24
     b2e:	f9 06       	cpc	r15, r25
     b30:	90 f7       	brcc	.-28     	; 0xb16 <LCD_12864_Draw_rectangle_filled+0x4e>
		LCD_12864_Draw_line(x, y + i, x + width, y + i);
	}
     b32:	cf 91       	pop	r28
     b34:	1f 91       	pop	r17
     b36:	0f 91       	pop	r16
     b38:	ff 90       	pop	r15
     b3a:	ef 90       	pop	r14
     b3c:	df 90       	pop	r13
     b3e:	cf 90       	pop	r12
     b40:	bf 90       	pop	r11
     b42:	af 90       	pop	r10
     b44:	08 95       	ret

00000b46 <timer_ini>:
uint8_t flag_irq = 1;


void timer_ini(void)//период 4сек
{
	TCCR1B |= (1<<WGM12); // устанавливаем режим СТС (сброс по совпадению)
     b46:	e1 e8       	ldi	r30, 0x81	; 129
     b48:	f0 e0       	ldi	r31, 0x00	; 0
     b4a:	80 81       	ld	r24, Z
     b4c:	88 60       	ori	r24, 0x08	; 8
     b4e:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); //устанавливаем бит разрешения прерывания 1ого счетчика по совпадению с OCR1A(H и L)
     b50:	af e6       	ldi	r26, 0x6F	; 111
     b52:	b0 e0       	ldi	r27, 0x00	; 0
     b54:	8c 91       	ld	r24, X
     b56:	82 60       	ori	r24, 0x02	; 2
     b58:	8c 93       	st	X, r24
	OCR1AH = 0b11110100; //записываем в регистр число для сравнения
     b5a:	84 ef       	ldi	r24, 0xF4	; 244
     b5c:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0b00100100;
     b60:	84 e2       	ldi	r24, 0x24	; 36
     b62:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1B |= (1<<CS12)|(1<<CS10);//установим делитель 256.
     b66:	80 81       	ld	r24, Z
     b68:	85 60       	ori	r24, 0x05	; 5
     b6a:	80 83       	st	Z, r24
     b6c:	08 95       	ret

00000b6e <__vector_11>:
}
//——————————————–
ISR (TIMER1_COMPA_vect)
{
     b6e:	1f 92       	push	r1
     b70:	0f 92       	push	r0
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	0f 92       	push	r0
     b76:	11 24       	eor	r1, r1
     b78:	2f 93       	push	r18
     b7a:	3f 93       	push	r19
     b7c:	4f 93       	push	r20
     b7e:	5f 93       	push	r21
     b80:	6f 93       	push	r22
     b82:	7f 93       	push	r23
     b84:	8f 93       	push	r24
     b86:	9f 93       	push	r25
     b88:	af 93       	push	r26
     b8a:	bf 93       	push	r27
     b8c:	ef 93       	push	r30
     b8e:	ff 93       	push	r31
	if((strlen(temp_street)!=0)&&(strlen(hum_street)!=0)&&(strlen(WIND_speed)!=0)&&(strlen(Rain)!=0)&&(strlen(Vbat)!=0)&&(strlen(wind_direction)!=0))
     b90:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <temp_street>
     b94:	88 23       	and	r24, r24
     b96:	09 f4       	brne	.+2      	; 0xb9a <__vector_11+0x2c>
     b98:	4c c0       	rjmp	.+152    	; 0xc32 <__vector_11+0xc4>
     b9a:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <hum_street>
     b9e:	88 23       	and	r24, r24
     ba0:	09 f4       	brne	.+2      	; 0xba4 <__vector_11+0x36>
     ba2:	47 c0       	rjmp	.+142    	; 0xc32 <__vector_11+0xc4>
     ba4:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <WIND_speed>
     ba8:	88 23       	and	r24, r24
     baa:	09 f4       	brne	.+2      	; 0xbae <__vector_11+0x40>
     bac:	42 c0       	rjmp	.+132    	; 0xc32 <__vector_11+0xc4>
     bae:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <Rain>
     bb2:	88 23       	and	r24, r24
     bb4:	f1 f1       	breq	.+124    	; 0xc32 <__vector_11+0xc4>
     bb6:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <Vbat>
     bba:	88 23       	and	r24, r24
     bbc:	d1 f1       	breq	.+116    	; 0xc32 <__vector_11+0xc4>
     bbe:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <wind_direction>
     bc2:	88 23       	and	r24, r24
     bc4:	b1 f1       	breq	.+108    	; 0xc32 <__vector_11+0xc4>
	{
		//отправка строки по UART в формате: ул.темп./скор.ветра/осадки/ул.влажность/заряд АКБ/направл.ветра
	    sprintf(DATA_TO_UART,"%s ",temp_street);
     bc6:	88 ef       	ldi	r24, 0xF8	; 248
     bc8:	91 e0       	ldi	r25, 0x01	; 1
     bca:	9f 93       	push	r25
     bcc:	8f 93       	push	r24
     bce:	8f e0       	ldi	r24, 0x0F	; 15
     bd0:	91 e0       	ldi	r25, 0x01	; 1
     bd2:	9f 93       	push	r25
     bd4:	8f 93       	push	r24
     bd6:	86 e7       	ldi	r24, 0x76	; 118
     bd8:	91 e0       	ldi	r25, 0x01	; 1
     bda:	9f 93       	push	r25
     bdc:	8f 93       	push	r24
     bde:	0e 94 43 1c 	call	0x3886	; 0x3886 <sprintf>
		strcat(DATA_TO_UART,WIND_speed);
     be2:	6a ed       	ldi	r22, 0xDA	; 218
     be4:	71 e0       	ldi	r23, 0x01	; 1
     be6:	86 e7       	ldi	r24, 0x76	; 118
     be8:	91 e0       	ldi	r25, 0x01	; 1
     bea:	0e 94 f1 1b 	call	0x37e2	; 0x37e2 <strcat>
		strcat(DATA_TO_UART,Rain);
     bee:	68 ea       	ldi	r22, 0xA8	; 168
     bf0:	71 e0       	ldi	r23, 0x01	; 1
     bf2:	86 e7       	ldi	r24, 0x76	; 118
     bf4:	91 e0       	ldi	r25, 0x01	; 1
     bf6:	0e 94 f1 1b 	call	0x37e2	; 0x37e2 <strcat>
		strcat(DATA_TO_UART,hum_street);
     bfa:	6e ee       	ldi	r22, 0xEE	; 238
     bfc:	71 e0       	ldi	r23, 0x01	; 1
     bfe:	86 e7       	ldi	r24, 0x76	; 118
     c00:	91 e0       	ldi	r25, 0x01	; 1
     c02:	0e 94 f1 1b 	call	0x37e2	; 0x37e2 <strcat>
		strcat(DATA_TO_UART,Vbat);
     c06:	62 eb       	ldi	r22, 0xB2	; 178
     c08:	71 e0       	ldi	r23, 0x01	; 1
     c0a:	86 e7       	ldi	r24, 0x76	; 118
     c0c:	91 e0       	ldi	r25, 0x01	; 1
     c0e:	0e 94 f1 1b 	call	0x37e2	; 0x37e2 <strcat>
		strcat(DATA_TO_UART,wind_direction);
     c12:	60 ed       	ldi	r22, 0xD0	; 208
     c14:	71 e0       	ldi	r23, 0x01	; 1
     c16:	86 e7       	ldi	r24, 0x76	; 118
     c18:	91 e0       	ldi	r25, 0x01	; 1
     c1a:	0e 94 f1 1b 	call	0x37e2	; 0x37e2 <strcat>
		USART_Transmit(DATA_TO_UART);
     c1e:	86 e7       	ldi	r24, 0x76	; 118
     c20:	91 e0       	ldi	r25, 0x01	; 1
     c22:	0e 94 37 14 	call	0x286e	; 0x286e <USART_Transmit>
     c26:	0f 90       	pop	r0
     c28:	0f 90       	pop	r0
     c2a:	0f 90       	pop	r0
     c2c:	0f 90       	pop	r0
     c2e:	0f 90       	pop	r0
     c30:	0f 90       	pop	r0
	}

}
     c32:	ff 91       	pop	r31
     c34:	ef 91       	pop	r30
     c36:	bf 91       	pop	r27
     c38:	af 91       	pop	r26
     c3a:	9f 91       	pop	r25
     c3c:	8f 91       	pop	r24
     c3e:	7f 91       	pop	r23
     c40:	6f 91       	pop	r22
     c42:	5f 91       	pop	r21
     c44:	4f 91       	pop	r20
     c46:	3f 91       	pop	r19
     c48:	2f 91       	pop	r18
     c4a:	0f 90       	pop	r0
     c4c:	0f be       	out	0x3f, r0	; 63
     c4e:	0f 90       	pop	r0
     c50:	1f 90       	pop	r1
     c52:	18 95       	reti

00000c54 <SPI_init>:

void SPI_init(void) //инициализация SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //ножки SPI на выход
     c54:	84 b1       	in	r24, 0x04	; 4
     c56:	8e 62       	ori	r24, 0x2E	; 46
     c58:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //низкий уровень
     c5a:	85 b1       	in	r24, 0x05	; 5
     c5c:	83 7d       	andi	r24, 0xD3	; 211
     c5e:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<IRQ);
     c60:	8a b1       	in	r24, 0x0a	; 10
     c62:	8b 7f       	andi	r24, 0xFB	; 251
     c64:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<IRQ);
     c66:	8b b1       	in	r24, 0x0b	; 11
     c68:	84 60       	ori	r24, 0x04	; 4
     c6a:	8b b9       	out	0x0b, r24	; 11
	HIGH_CSN;
     c6c:	85 b1       	in	r24, 0x05	; 5
     c6e:	84 60       	ori	r24, 0x04	; 4
     c70:	85 b9       	out	0x05, r24	; 5
	SPCR = ((1<<SPE)|(1<<MSTR));//включим шину, объявим ведущим
     c72:	80 e5       	ldi	r24, 0x50	; 80
     c74:	8c bd       	out	0x2c, r24	; 44
     c76:	08 95       	ret

00000c78 <port_init>:
}
//-------------------------------------------------------------
void port_init(void)
{
	//инициализация портов для светодиода
	DDRD |= (1 << LED);//led
     c78:	8a b1       	in	r24, 0x0a	; 10
     c7a:	80 61       	ori	r24, 0x10	; 16
     c7c:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~ (1 << LED);
     c7e:	8b b1       	in	r24, 0x0b	; 11
     c80:	8f 7e       	andi	r24, 0xEF	; 239
     c82:	8b b9       	out	0x0b, r24	; 11
	
	//инициализация портов для LCD12864
	DDRD |= (1<<RS);//ножка RS на выход для LCD12864
     c84:	8a b1       	in	r24, 0x0a	; 10
     c86:	80 68       	ori	r24, 0x80	; 128
     c88:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RS);
     c8a:	8b b1       	in	r24, 0x0b	; 11
     c8c:	8f 77       	andi	r24, 0x7F	; 127
     c8e:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<E);
     c90:	8a b1       	in	r24, 0x0a	; 10
     c92:	80 62       	ori	r24, 0x20	; 32
     c94:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<E);
     c96:	8b b1       	in	r24, 0x0b	; 11
     c98:	8f 7d       	andi	r24, 0xDF	; 223
     c9a:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<RW);
     c9c:	8a b1       	in	r24, 0x0a	; 10
     c9e:	80 64       	ori	r24, 0x40	; 64
     ca0:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RW);
     ca2:	8b b1       	in	r24, 0x0b	; 11
     ca4:	8f 7b       	andi	r24, 0xBF	; 191
     ca6:	8b b9       	out	0x0b, r24	; 11
     ca8:	08 95       	ret

00000caa <spi_send_recv>:
	 DDRC|=(1<<MOSI_SD)|(1<<SCK_SD);*/
} 
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // Передаёт и принимает 1 байт по SPI, возвращает полученное значение
{
	SPDR = data;
     caa:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
     cac:	0d b4       	in	r0, 0x2d	; 45
     cae:	07 fe       	sbrs	r0, 7
     cb0:	fd cf       	rjmp	.-6      	; 0xcac <spi_send_recv+0x2>
	return SPDR;
     cb2:	8e b5       	in	r24, 0x2e	; 46
}
     cb4:	08 95       	ret

00000cb6 <main>:
void main(void)
{	
	port_init();
     cb6:	0e 94 3c 06 	call	0xc78	; 0xc78 <port_init>
	PORTD |= (1<<LED);
     cba:	8b b1       	in	r24, 0x0b	; 11
     cbc:	80 61       	ori	r24, 0x10	; 16
     cbe:	8b b9       	out	0x0b, r24	; 11
    SPI_init();
     cc0:	0e 94 2a 06 	call	0xc54	; 0xc54 <SPI_init>
	timer_ini();
     cc4:	0e 94 a3 05 	call	0xb46	; 0xb46 <timer_ini>
	I2C_Init();
     cc8:	0e 94 f3 13 	call	0x27e6	; 0x27e6 <I2C_Init>
	RTC_init();
     ccc:	0e 94 9d 13 	call	0x273a	; 0x273a <RTC_init>
	// Установка времени для DS3231(делается 1 раз)
	//RTC_write_time(17, 37, 0);
	//RTC_write_date(7, 5, 6, 22);
	LCD_12864_ini();
     cd0:	0e 94 49 03 	call	0x692	; 0x692 <LCD_12864_ini>
	Print_Hello_World(Frame_buffer);
     cd4:	86 e1       	ldi	r24, 0x16	; 22
     cd6:	92 e0       	ldi	r25, 0x02	; 2
     cd8:	0e 94 52 14 	call	0x28a4	; 0x28a4 <Print_Hello_World>
	USART_Init(16);    //Инициализация модуля USART скорость 115200
     cdc:	80 e1       	ldi	r24, 0x10	; 16
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	0e 94 21 14 	call	0x2842	; 0x2842 <USART_Init>
    NRF24_ini();
     ce4:	0e 94 00 0c 	call	0x1800	; 0x1800 <NRF24_ini>
	// настраиваем параметры прерывания
	EICRA = (1<<ISC01) | (0<<ISC00);
     ce8:	82 e0       	ldi	r24, 0x02	; 2
     cea:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT0);
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	8d bb       	out	0x1d, r24	; 29
	// и разрешаем его глобально
	sei();
     cf2:	78 94       	sei
	//Вывод приветствия
	Print_Download(Frame_buffer);
     cf4:	86 e1       	ldi	r24, 0x16	; 22
     cf6:	92 e0       	ldi	r25, 0x02	; 2
     cf8:	0e 94 b1 14 	call	0x2962	; 0x2962 <Print_Download>
	PORTD &= ~(1<<LED);
     cfc:	8b b1       	in	r24, 0x0b	; 11
     cfe:	8f 7e       	andi	r24, 0xEF	; 239
     d00:	8b b9       	out	0x0b, r24	; 11
	clear_LCD_12864();
     d02:	0e 94 3f 03 	call	0x67e	; 0x67e <clear_LCD_12864>
	
    while (1) 
    {
		//Читаем время (для DS3231) - по сути функция RTC_read_time
		I2C_StartCondition();               // запуск i2c
     d06:	0e 94 f7 13 	call	0x27ee	; 0x27ee <I2C_StartCondition>
		I2C_SendByte(0b11010000);			// передача адреса устройства, режим записи
     d0a:	80 ed       	ldi	r24, 0xD0	; 208
     d0c:	0e 94 03 14 	call	0x2806	; 0x2806 <I2C_SendByte>
		I2C_SendByte(0x00);				    // передача адреса памяти
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	0e 94 03 14 	call	0x2806	; 0x2806 <I2C_SendByte>
		I2C_StopCondition();                // остановка i2c
     d16:	0e 94 ff 13 	call	0x27fe	; 0x27fe <I2C_StopCondition>
		
		I2C_StartCondition();               // запуск i2c
     d1a:	0e 94 f7 13 	call	0x27ee	; 0x27ee <I2C_StartCondition>
		I2C_SendByte(0b11010001);			// передача адреса устройства, режим чтения
     d1e:	81 ed       	ldi	r24, 0xD1	; 209
     d20:	0e 94 03 14 	call	0x2806	; 0x2806 <I2C_SendByte>
		sec = RTC_ConvertFromDec(I2C_ReadByte());     // чтение секунд, ACK
     d24:	0e 94 0d 14 	call	0x281a	; 0x281a <I2C_ReadByte>
     d28:	0e 94 92 13 	call	0x2724	; 0x2724 <RTC_ConvertFromDec>
     d2c:	80 93 28 06 	sts	0x0628, r24	; 0x800628 <sec>
		min = RTC_ConvertFromDec(I2C_ReadByte());     // чтение минут, ACK
     d30:	0e 94 0d 14 	call	0x281a	; 0x281a <I2C_ReadByte>
     d34:	0e 94 92 13 	call	0x2724	; 0x2724 <RTC_ConvertFromDec>
     d38:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <min>
		hour = RTC_ConvertFromDec(I2C_ReadByte());    // чтение часов, ACK
     d3c:	0e 94 0d 14 	call	0x281a	; 0x281a <I2C_ReadByte>
     d40:	0e 94 92 13 	call	0x2724	; 0x2724 <RTC_ConvertFromDec>
     d44:	80 93 25 06 	sts	0x0625, r24	; 0x800625 <hour>
		day = RTC_ConvertFromDec(I2C_ReadByte());     // чтение день недели, ACK
     d48:	0e 94 0d 14 	call	0x281a	; 0x281a <I2C_ReadByte>
     d4c:	0e 94 92 13 	call	0x2724	; 0x2724 <RTC_ConvertFromDec>
     d50:	80 93 29 06 	sts	0x0629, r24	; 0x800629 <day>
		date = RTC_ConvertFromDec(I2C_ReadByte());    // чтение число, ACK
     d54:	0e 94 0d 14 	call	0x281a	; 0x281a <I2C_ReadByte>
     d58:	0e 94 92 13 	call	0x2724	; 0x2724 <RTC_ConvertFromDec>
     d5c:	80 93 2b 06 	sts	0x062B, r24	; 0x80062b <date>
		month = RTC_ConvertFromDec(I2C_ReadByte());   // чтение месяц, ACK
     d60:	0e 94 0d 14 	call	0x281a	; 0x281a <I2C_ReadByte>
     d64:	0e 94 92 13 	call	0x2724	; 0x2724 <RTC_ConvertFromDec>
     d68:	80 93 21 06 	sts	0x0621, r24	; 0x800621 <month>
		year = RTC_ConvertFromDec(I2C_ReadLastByte());// чтение год, NACK
     d6c:	0e 94 17 14 	call	0x282e	; 0x282e <I2C_ReadLastByte>
     d70:	0e 94 92 13 	call	0x2724	; 0x2724 <RTC_ConvertFromDec>
     d74:	80 93 27 06 	sts	0x0627, r24	; 0x800627 <year>
		I2C_StopCondition();                // остановка i2c
     d78:	0e 94 ff 13 	call	0x27fe	; 0x27fe <I2C_StopCondition>
		//------------------------------------------------------
		setpos_LCD_12864(1,2);
     d7c:	62 e0       	ldi	r22, 0x02	; 2
     d7e:	70 e0       	ldi	r23, 0x00	; 0
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
		sprintf(TIME,"%d:%d:%d ", hour, min, sec );
     d86:	80 91 28 06 	lds	r24, 0x0628	; 0x800628 <sec>
     d8a:	1f 92       	push	r1
     d8c:	8f 93       	push	r24
     d8e:	80 91 26 06 	lds	r24, 0x0626	; 0x800626 <min>
     d92:	1f 92       	push	r1
     d94:	8f 93       	push	r24
     d96:	80 91 25 06 	lds	r24, 0x0625	; 0x800625 <hour>
     d9a:	1f 92       	push	r1
     d9c:	8f 93       	push	r24
     d9e:	83 e1       	ldi	r24, 0x13	; 19
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	9f 93       	push	r25
     da4:	8f 93       	push	r24
     da6:	82 e0       	ldi	r24, 0x02	; 2
     da8:	92 e0       	ldi	r25, 0x02	; 2
     daa:	9f 93       	push	r25
     dac:	8f 93       	push	r24
     dae:	0e 94 43 1c 	call	0x3886	; 0x3886 <sprintf>
		str_LCD_12864 (TIME);
     db2:	82 e0       	ldi	r24, 0x02	; 2
     db4:	92 e0       	ldi	r25, 0x02	; 2
     db6:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(0,0);
     dba:	60 e0       	ldi	r22, 0x00	; 0
     dbc:	70 e0       	ldi	r23, 0x00	; 0
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
		NRF24L01_Receive();
     dc4:	0e 94 82 09 	call	0x1304	; 0x1304 <NRF24L01_Receive>
		str_LCD_12864 (temp_street);
     dc8:	88 ef       	ldi	r24, 0xF8	; 248
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(3,0);
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	83 e0       	ldi	r24, 0x03	; 3
     dd6:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	    sprintf(WIND_speed,"%.2f ", wind_speed (HALL_counter));
     dda:	84 ee       	ldi	r24, 0xE4	; 228
     ddc:	91 e0       	ldi	r25, 0x01	; 1
     dde:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <wind_speed>
     de2:	9f 93       	push	r25
     de4:	8f 93       	push	r24
     de6:	7f 93       	push	r23
     de8:	6f 93       	push	r22
     dea:	cd e1       	ldi	r28, 0x1D	; 29
     dec:	d1 e0       	ldi	r29, 0x01	; 1
     dee:	df 93       	push	r29
     df0:	cf 93       	push	r28
     df2:	8a ed       	ldi	r24, 0xDA	; 218
     df4:	91 e0       	ldi	r25, 0x01	; 1
     df6:	9f 93       	push	r25
     df8:	8f 93       	push	r24
     dfa:	0e 94 43 1c 	call	0x3886	; 0x3886 <sprintf>
		str_LCD_12864 (WIND_speed);
     dfe:	8a ed       	ldi	r24, 0xDA	; 218
     e00:	91 e0       	ldi	r25, 0x01	; 1
     e02:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(6,0);
     e06:	60 e0       	ldi	r22, 0x00	; 0
     e08:	70 e0       	ldi	r23, 0x00	; 0
     e0a:	86 e0       	ldi	r24, 0x06	; 6
     e0c:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	    sprintf(Rain,"%.2f ",RAIN_AMOUNT(adc_value2));
     e10:	8c eb       	ldi	r24, 0xBC	; 188
     e12:	91 e0       	ldi	r25, 0x01	; 1
     e14:	0e 94 f7 14 	call	0x29ee	; 0x29ee <RAIN_AMOUNT>
     e18:	9f 93       	push	r25
     e1a:	8f 93       	push	r24
     e1c:	7f 93       	push	r23
     e1e:	6f 93       	push	r22
     e20:	df 93       	push	r29
     e22:	cf 93       	push	r28
     e24:	88 ea       	ldi	r24, 0xA8	; 168
     e26:	91 e0       	ldi	r25, 0x01	; 1
     e28:	9f 93       	push	r25
     e2a:	8f 93       	push	r24
     e2c:	0e 94 43 1c 	call	0x3886	; 0x3886 <sprintf>
		str_LCD_12864 (Rain);
     e30:	88 ea       	ldi	r24, 0xA8	; 168
     e32:	91 e0       	ldi	r25, 0x01	; 1
     e34:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(0,1);
     e38:	61 e0       	ldi	r22, 0x01	; 1
     e3a:	70 e0       	ldi	r23, 0x00	; 0
     e3c:	80 e0       	ldi	r24, 0x00	; 0
     e3e:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
		str_LCD_12864 (hum_street);
     e42:	8e ee       	ldi	r24, 0xEE	; 238
     e44:	91 e0       	ldi	r25, 0x01	; 1
     e46:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(3,1);
     e4a:	61 e0       	ldi	r22, 0x01	; 1
     e4c:	70 e0       	ldi	r23, 0x00	; 0
     e4e:	83 e0       	ldi	r24, 0x03	; 3
     e50:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
		str_LCD_12864 (wind_direction);
     e54:	80 ed       	ldi	r24, 0xD0	; 208
     e56:	91 e0       	ldi	r25, 0x01	; 1
     e58:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
		setpos_LCD_12864(6,1);
     e5c:	61 e0       	ldi	r22, 0x01	; 1
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	86 e0       	ldi	r24, 0x06	; 6
     e62:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	    sprintf(Vbat,"%.2f ",V_BAT(adc_value1));
     e66:	86 ec       	ldi	r24, 0xC6	; 198
     e68:	91 e0       	ldi	r25, 0x01	; 1
     e6a:	0e 94 34 15 	call	0x2a68	; 0x2a68 <V_BAT>
     e6e:	9f 93       	push	r25
     e70:	8f 93       	push	r24
     e72:	7f 93       	push	r23
     e74:	6f 93       	push	r22
     e76:	df 93       	push	r29
     e78:	cf 93       	push	r28
     e7a:	82 eb       	ldi	r24, 0xB2	; 178
     e7c:	91 e0       	ldi	r25, 0x01	; 1
     e7e:	9f 93       	push	r25
     e80:	8f 93       	push	r24
     e82:	0e 94 43 1c 	call	0x3886	; 0x3886 <sprintf>
		str_LCD_12864 (Vbat);
     e86:	8d b7       	in	r24, 0x3d	; 61
     e88:	9e b7       	in	r25, 0x3e	; 62
     e8a:	82 96       	adiw	r24, 0x22	; 34
     e8c:	0f b6       	in	r0, 0x3f	; 63
     e8e:	f8 94       	cli
     e90:	9e bf       	out	0x3e, r25	; 62
     e92:	0f be       	out	0x3f, r0	; 63
     e94:	8d bf       	out	0x3d, r24	; 61
     e96:	82 eb       	ldi	r24, 0xB2	; 178
     e98:	91 e0       	ldi	r25, 0x01	; 1
     e9a:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e9e:	9f ef       	ldi	r25, 0xFF	; 255
     ea0:	21 ee       	ldi	r18, 0xE1	; 225
     ea2:	84 e0       	ldi	r24, 0x04	; 4
     ea4:	91 50       	subi	r25, 0x01	; 1
     ea6:	20 40       	sbci	r18, 0x00	; 0
     ea8:	80 40       	sbci	r24, 0x00	; 0
     eaa:	e1 f7       	brne	.-8      	; 0xea4 <main+0x1ee>
     eac:	00 c0       	rjmp	.+0      	; 0xeae <main+0x1f8>
     eae:	00 00       	nop
     eb0:	2a cf       	rjmp	.-428    	; 0xd06 <main+0x50>

00000eb2 <xmit_spi>:
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	12 c0       	rjmp	.+36     	; 0xeda <xmit_spi+0x28>
  {
   if ((data&0x80)==0x00) PORTC&=~_BV(SD_DI);
     eb6:	88 23       	and	r24, r24
     eb8:	24 f0       	brlt	.+8      	; 0xec2 <xmit_spi+0x10>
     eba:	98 b1       	in	r25, 0x08	; 8
     ebc:	9b 7f       	andi	r25, 0xFB	; 251
     ebe:	98 b9       	out	0x08, r25	; 8
     ec0:	03 c0       	rjmp	.+6      	; 0xec8 <xmit_spi+0x16>
                     else PORTC|=_BV(SD_DI);
     ec2:	98 b1       	in	r25, 0x08	; 8
     ec4:	94 60       	ori	r25, 0x04	; 4
     ec6:	98 b9       	out	0x08, r25	; 8
   data=data<<1; 
     ec8:	88 0f       	add	r24, r24
   PORTC|=_BV(SD_CLK);
     eca:	98 b1       	in	r25, 0x08	; 8
     ecc:	98 60       	ori	r25, 0x08	; 8
     ece:	98 b9       	out	0x08, r25	; 8
   asm("nop"); 
     ed0:	00 00       	nop
   PORTC&=~_BV(SD_CLK);
     ed2:	98 b1       	in	r25, 0x08	; 8
     ed4:	97 7f       	andi	r25, 0xF7	; 247
     ed6:	98 b9       	out	0x08, r25	; 8
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
     ed8:	2f 5f       	subi	r18, 0xFF	; 255
     eda:	28 30       	cpi	r18, 0x08	; 8
     edc:	60 f3       	brcs	.-40     	; 0xeb6 <xmit_spi+0x4>
   data=data<<1; 
   PORTC|=_BV(SD_CLK);
   asm("nop"); 
   PORTC&=~_BV(SD_CLK);
  }
}
     ede:	08 95       	ret

00000ee0 <rcv_spi>:

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);
     ee0:	88 b1       	in	r24, 0x08	; 8
     ee2:	84 60       	ori	r24, 0x04	; 4
     ee4:	88 b9       	out	0x08, r24	; 8
   PORTC&=~_BV(SD_CLK);
  }
}

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;
     ee6:	80 e0       	ldi	r24, 0x00	; 0

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	0b c0       	rjmp	.+22     	; 0xf02 <rcv_spi+0x22>
  {
   PORTC|=_BV(SD_CLK);
     eec:	98 b1       	in	r25, 0x08	; 8
     eee:	98 60       	ori	r25, 0x08	; 8
     ef0:	98 b9       	out	0x08, r25	; 8
   res=res<<1;
     ef2:	88 0f       	add	r24, r24
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
     ef4:	31 99       	sbic	0x06, 1	; 6
     ef6:	81 60       	ori	r24, 0x01	; 1
   PORTC&=~_BV(SD_CLK);
     ef8:	98 b1       	in	r25, 0x08	; 8
     efa:	97 7f       	andi	r25, 0xF7	; 247
     efc:	98 b9       	out	0x08, r25	; 8
   asm("nop");
     efe:	00 00       	nop
BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
     f00:	2f 5f       	subi	r18, 0xFF	; 255
     f02:	28 30       	cpi	r18, 0x08	; 8
     f04:	98 f3       	brcs	.-26     	; 0xeec <rcv_spi+0xc>
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
   PORTC&=~_BV(SD_CLK);
   asm("nop");
  }
 return res;
}	/* Send 0xFF and receive a byte */
     f06:	08 95       	ret

00000f08 <send_cmd>:
static
BYTE send_cmd (
	BYTE cmd,		// Command byte 
	DWORD arg		// Argument 
)
{
     f08:	ff 92       	push	r15
     f0a:	0f 93       	push	r16
     f0c:	1f 93       	push	r17
     f0e:	cf 93       	push	r28
     f10:	df 93       	push	r29
     f12:	c8 2f       	mov	r28, r24
     f14:	d4 2f       	mov	r29, r20
     f16:	15 2f       	mov	r17, r21
     f18:	06 2f       	mov	r16, r22
     f1a:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	// ACMD<n> is the command sequense of CMD55-CMD<n> 
     f1c:	88 23       	and	r24, r24
     f1e:	4c f4       	brge	.+18     	; 0xf32 <send_cmd+0x2a>
		cmd &= 0x7F;
     f20:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
     f22:	40 e0       	ldi	r20, 0x00	; 0
     f24:	50 e0       	ldi	r21, 0x00	; 0
     f26:	ba 01       	movw	r22, r20
     f28:	87 e7       	ldi	r24, 0x77	; 119
     f2a:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
		if (res > 1) return res;
     f2e:	82 30       	cpi	r24, 0x02	; 2
     f30:	50 f5       	brcc	.+84     	; 0xf86 <send_cmd+0x7e>
	}

	// Select the card 
	DESELECT();
     f32:	85 b1       	in	r24, 0x05	; 5
     f34:	81 60       	ori	r24, 0x01	; 1
     f36:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
     f38:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
	SELECT();
     f3c:	85 b1       	in	r24, 0x05	; 5
     f3e:	8e 7f       	andi	r24, 0xFE	; 254
     f40:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
     f42:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>

	// Send a command packet 
	xmit_spi(cmd);						// Start + Command index 
     f46:	8c 2f       	mov	r24, r28
     f48:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
     f4c:	8f 2d       	mov	r24, r15
     f4e:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
     f52:	80 2f       	mov	r24, r16
     f54:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
     f58:	81 2f       	mov	r24, r17
     f5a:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
	xmit_spi((BYTE)arg);				// Argument[7..0] 
     f5e:	8d 2f       	mov	r24, r29
     f60:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
	n = 0x01;							// Dummy CRC + Stop 
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
     f64:	c0 34       	cpi	r28, 0x40	; 64
     f66:	11 f0       	breq	.+4      	; 0xf6c <send_cmd+0x64>
	xmit_spi(cmd);						// Start + Command index 
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
	xmit_spi((BYTE)arg);				// Argument[7..0] 
	n = 0x01;							// Dummy CRC + Stop 
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	01 c0       	rjmp	.+2      	; 0xf6e <send_cmd+0x66>
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
     f6c:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;			// Valid CRC for CMD8(0x1AA) 
     f6e:	c8 34       	cpi	r28, 0x48	; 72
     f70:	09 f4       	brne	.+2      	; 0xf74 <send_cmd+0x6c>
     f72:	87 e8       	ldi	r24, 0x87	; 135
	xmit_spi(n);
     f74:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>

	// Receive a command response 
	n = 10;								// Wait for a valid response in timeout of 10 attempts 
     f78:	ca e0       	ldi	r28, 0x0A	; 10
	do {
		res = rcv_spi();
     f7a:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
	} while ((res & 0x80) && --n);
     f7e:	88 23       	and	r24, r24
     f80:	14 f4       	brge	.+4      	; 0xf86 <send_cmd+0x7e>
     f82:	c1 50       	subi	r28, 0x01	; 1
     f84:	d1 f7       	brne	.-12     	; 0xf7a <send_cmd+0x72>

	return res;			// Return with the response value 
}
     f86:	df 91       	pop	r29
     f88:	cf 91       	pop	r28
     f8a:	1f 91       	pop	r17
     f8c:	0f 91       	pop	r16
     f8e:	ff 90       	pop	r15
     f90:	08 95       	ret

00000f92 <release_spi>:
// Deselect the card and release SPI bus                                 
//-----------------------------------------------------------------------
static
void release_spi (void)
{
	rcv_spi();
     f92:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
     f96:	08 95       	ret

00000f98 <disk_readp>:
	BYTE *buff,		// Pointer to the read buffer (NULL:Read bytes are forwarded to the stream) 
	DWORD lba,		// Sector number (LBA) 
	WORD ofs,		// Byte offset to read from (0..511) 
	WORD cnt		// Number of bytes to read (ofs + cnt mus be <= 512) 
)
{
     f98:	cf 92       	push	r12
     f9a:	df 92       	push	r13
     f9c:	ef 92       	push	r14
     f9e:	ff 92       	push	r15
     fa0:	0f 93       	push	r16
     fa2:	1f 93       	push	r17
     fa4:	cf 93       	push	r28
     fa6:	df 93       	push	r29
     fa8:	7c 01       	movw	r14, r24
     faa:	69 01       	movw	r12, r18
	BYTE rc;
	WORD bc;

//	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;

	if (!(CardType & CT_BLOCK))
     fac:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <CardType>
     fb0:	83 fd       	sbrc	r24, 3
     fb2:	09 c0       	rjmp	.+18     	; 0xfc6 <disk_readp+0x2e>
	{
		lba *= 512;		// Convert to byte address if needed 
     fb4:	03 2e       	mov	r0, r19
     fb6:	39 e0       	ldi	r19, 0x09	; 9
     fb8:	44 0f       	add	r20, r20
     fba:	55 1f       	adc	r21, r21
     fbc:	66 1f       	adc	r22, r22
     fbe:	77 1f       	adc	r23, r23
     fc0:	3a 95       	dec	r19
     fc2:	d1 f7       	brne	.-12     	; 0xfb8 <disk_readp+0x20>
     fc4:	30 2d       	mov	r19, r0
	}
	res = RES_ERROR;
	if (send_cmd(CMD17, lba) == 0) {		// READ_SINGLE_BLOCK 
     fc6:	81 e5       	ldi	r24, 0x51	; 81
     fc8:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
     fcc:	81 11       	cpse	r24, r1
     fce:	34 c0       	rjmp	.+104    	; 0x1038 <disk_readp+0xa0>
     fd0:	c0 e3       	ldi	r28, 0x30	; 48
     fd2:	d5 e7       	ldi	r29, 0x75	; 117
		bc = 30000;
		do {							// Wait for data packet in timeout of 100ms 
			rc = rcv_spi();
     fd4:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
		} while (rc == 0xFF && --bc);
     fd8:	8f 3f       	cpi	r24, 0xFF	; 255
     fda:	11 f4       	brne	.+4      	; 0xfe0 <disk_readp+0x48>
     fdc:	21 97       	sbiw	r28, 0x01	; 1
     fde:	d1 f7       	brne	.-12     	; 0xfd4 <disk_readp+0x3c>

		if (rc == 0xFE) {				// A data packet arrived 
     fe0:	8e 3f       	cpi	r24, 0xFE	; 254
     fe2:	61 f5       	brne	.+88     	; 0x103c <disk_readp+0xa4>
			bc = 514 - ofs - cnt;
     fe4:	cc 27       	eor	r28, r28
     fe6:	dd 27       	eor	r29, r29
     fe8:	cc 19       	sub	r28, r12
     fea:	dd 09       	sbc	r29, r13
     fec:	c0 1b       	sub	r28, r16
     fee:	d1 0b       	sbc	r29, r17
     ff0:	ce 5f       	subi	r28, 0xFE	; 254
     ff2:	dd 4f       	sbci	r29, 0xFD	; 253

			// Skip leading bytes 
			if (ofs) {
     ff4:	c1 14       	cp	r12, r1
     ff6:	d1 04       	cpc	r13, r1
     ff8:	31 f0       	breq	.+12     	; 0x1006 <disk_readp+0x6e>
				do rcv_spi(); while (--ofs);
     ffa:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
     ffe:	81 e0       	ldi	r24, 0x01	; 1
    1000:	c8 1a       	sub	r12, r24
    1002:	d1 08       	sbc	r13, r1
    1004:	d1 f7       	brne	.-12     	; 0xffa <disk_readp+0x62>
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
    1006:	e1 14       	cp	r14, r1
    1008:	f1 04       	cpc	r15, r1
    100a:	69 f0       	breq	.+26     	; 0x1026 <disk_readp+0x8e>
				do
					*buff++ = rcv_spi();
    100c:	67 01       	movw	r12, r14
    100e:	ef ef       	ldi	r30, 0xFF	; 255
    1010:	ce 1a       	sub	r12, r30
    1012:	de 0a       	sbc	r13, r30
    1014:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
    1018:	f7 01       	movw	r30, r14
    101a:	80 83       	st	Z, r24
				while (--cnt);
    101c:	01 50       	subi	r16, 0x01	; 1
    101e:	11 09       	sbc	r17, r1
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
				do
					*buff++ = rcv_spi();
    1020:	76 01       	movw	r14, r12
				while (--cnt);
    1022:	a1 f7       	brne	.-24     	; 0x100c <disk_readp+0x74>
    1024:	03 c0       	rjmp	.+6      	; 0x102c <disk_readp+0x94>
			} else {	// Forward data to the outgoing stream (depends on the project) 
				do 
                ;//uart_transmit(rcv_spi());		// (Console output) 
				while (--cnt);
    1026:	01 50       	subi	r16, 0x01	; 1
    1028:	11 09       	sbc	r17, r1
    102a:	e9 f7       	brne	.-6      	; 0x1026 <disk_readp+0x8e>
			}

			// Skip trailing bytes and CRC 
			do rcv_spi(); while (--bc);
    102c:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
    1030:	21 97       	sbiw	r28, 0x01	; 1
    1032:	e1 f7       	brne	.-8      	; 0x102c <disk_readp+0x94>

			res = RES_OK;
    1034:	c0 e0       	ldi	r28, 0x00	; 0
    1036:	03 c0       	rjmp	.+6      	; 0x103e <disk_readp+0xa6>

	if (!(CardType & CT_BLOCK))
	{
		lba *= 512;		// Convert to byte address if needed 
	}
	res = RES_ERROR;
    1038:	c1 e0       	ldi	r28, 0x01	; 1
    103a:	01 c0       	rjmp	.+2      	; 0x103e <disk_readp+0xa6>
    103c:	c1 e0       	ldi	r28, 0x01	; 1

			res = RES_OK;
		}
	}

	release_spi();
    103e:	0e 94 c9 07 	call	0xf92	; 0xf92 <release_spi>

	return res;
}
    1042:	8c 2f       	mov	r24, r28
    1044:	df 91       	pop	r29
    1046:	cf 91       	pop	r28
    1048:	1f 91       	pop	r17
    104a:	0f 91       	pop	r16
    104c:	ff 90       	pop	r15
    104e:	ef 90       	pop	r14
    1050:	df 90       	pop	r13
    1052:	cf 90       	pop	r12
    1054:	08 95       	ret

00001056 <disk_writep>:

DRESULT disk_writep (
	const BYTE *buff,	// Pointer to the bytes to be written (NULL:Initiate/Finalize sector write) 
	DWORD sa			// Number of bytes to send, Sector number (LBA) or zero 
)
{
    1056:	0f 93       	push	r16
    1058:	1f 93       	push	r17
    105a:	cf 93       	push	r28
    105c:	df 93       	push	r29
    105e:	fc 01       	movw	r30, r24
// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
    1060:	89 2b       	or	r24, r25
    1062:	f1 f0       	breq	.+60     	; 0x10a0 <disk_writep+0x4a>
		bc = (WORD)sa;
    1064:	ea 01       	movw	r28, r20
		while (bc && wc) {		// Send data bytes to the card 
    1066:	11 c0       	rjmp	.+34     	; 0x108a <disk_writep+0x34>
			xmit_spi(*buff++);
    1068:	8f 01       	movw	r16, r30
    106a:	0f 5f       	subi	r16, 0xFF	; 255
    106c:	1f 4f       	sbci	r17, 0xFF	; 255
    106e:	80 81       	ld	r24, Z
    1070:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
			wc--; bc--;
    1074:	80 91 16 06 	lds	r24, 0x0616	; 0x800616 <wc.1710>
    1078:	90 91 17 06 	lds	r25, 0x0617	; 0x800617 <wc.1710+0x1>
    107c:	01 97       	sbiw	r24, 0x01	; 1
    107e:	90 93 17 06 	sts	0x0617, r25	; 0x800617 <wc.1710+0x1>
    1082:	80 93 16 06 	sts	0x0616, r24	; 0x800616 <wc.1710>
    1086:	21 97       	sbiw	r28, 0x01	; 1
	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
    1088:	f8 01       	movw	r30, r16

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
    108a:	20 97       	sbiw	r28, 0x00	; 0
    108c:	09 f4       	brne	.+2      	; 0x1090 <disk_writep+0x3a>
    108e:	54 c0       	rjmp	.+168    	; 0x1138 <disk_writep+0xe2>
    1090:	80 91 16 06 	lds	r24, 0x0616	; 0x800616 <wc.1710>
    1094:	90 91 17 06 	lds	r25, 0x0617	; 0x800617 <wc.1710+0x1>
    1098:	89 2b       	or	r24, r25
    109a:	31 f7       	brne	.-52     	; 0x1068 <disk_writep+0x12>
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    109c:	c0 e0       	ldi	r28, 0x00	; 0
    109e:	4f c0       	rjmp	.+158    	; 0x113e <disk_writep+0xe8>
	} else {
		if (sa) {	// Initiate sector write process 
    10a0:	41 15       	cp	r20, r1
    10a2:	51 05       	cpc	r21, r1
    10a4:	61 05       	cpc	r22, r1
    10a6:	71 05       	cpc	r23, r1
    10a8:	01 f1       	breq	.+64     	; 0x10ea <disk_writep+0x94>
			if (!(CardType & CT_BLOCK)) sa *= 512;	// Convert to byte address if needed 
    10aa:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <CardType>
    10ae:	83 fd       	sbrc	r24, 3
    10b0:	09 c0       	rjmp	.+18     	; 0x10c4 <disk_writep+0x6e>
    10b2:	03 2e       	mov	r0, r19
    10b4:	39 e0       	ldi	r19, 0x09	; 9
    10b6:	44 0f       	add	r20, r20
    10b8:	55 1f       	adc	r21, r21
    10ba:	66 1f       	adc	r22, r22
    10bc:	77 1f       	adc	r23, r23
    10be:	3a 95       	dec	r19
    10c0:	d1 f7       	brne	.-12     	; 0x10b6 <disk_writep+0x60>
    10c2:	30 2d       	mov	r19, r0
			if (send_cmd(CMD24, sa) == 0) {			// WRITE_SINGLE_BLOCK 
    10c4:	88 e5       	ldi	r24, 0x58	; 88
    10c6:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    10ca:	81 11       	cpse	r24, r1
    10cc:	37 c0       	rjmp	.+110    	; 0x113c <disk_writep+0xe6>
				xmit_spi(0xFF); xmit_spi(0xFE);		// Data block header 
    10ce:	8f ef       	ldi	r24, 0xFF	; 255
    10d0:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
    10d4:	8e ef       	ldi	r24, 0xFE	; 254
    10d6:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
				wc = 512;							// Set byte counter 
    10da:	80 e0       	ldi	r24, 0x00	; 0
    10dc:	92 e0       	ldi	r25, 0x02	; 2
    10de:	90 93 17 06 	sts	0x0617, r25	; 0x800617 <wc.1710+0x1>
    10e2:	80 93 16 06 	sts	0x0616, r24	; 0x800616 <wc.1710>
				res = RES_OK;
    10e6:	c0 e0       	ldi	r28, 0x00	; 0
    10e8:	2a c0       	rjmp	.+84     	; 0x113e <disk_writep+0xe8>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
    10ea:	80 91 16 06 	lds	r24, 0x0616	; 0x800616 <wc.1710>
    10ee:	90 91 17 06 	lds	r25, 0x0617	; 0x800617 <wc.1710+0x1>
    10f2:	02 96       	adiw	r24, 0x02	; 2
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
    10f4:	04 c0       	rjmp	.+8      	; 0x10fe <disk_writep+0xa8>
    10f6:	80 e0       	ldi	r24, 0x00	; 0
    10f8:	0e 94 59 07 	call	0xeb2	; 0xeb2 <xmit_spi>
    10fc:	ce 01       	movw	r24, r28
    10fe:	ec 01       	movw	r28, r24
    1100:	21 97       	sbiw	r28, 0x01	; 1
    1102:	89 2b       	or	r24, r25
    1104:	c1 f7       	brne	.-16     	; 0x10f6 <disk_writep+0xa0>
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
    1106:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
    110a:	8f 71       	andi	r24, 0x1F	; 31
    110c:	85 30       	cpi	r24, 0x05	; 5
    110e:	21 f0       	breq	.+8      	; 0x1118 <disk_writep+0xc2>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1110:	c1 e0       	ldi	r28, 0x01	; 1
    1112:	0f c0       	rjmp	.+30     	; 0x1132 <disk_writep+0xdc>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
    1114:	21 97       	sbiw	r28, 0x01	; 1
    1116:	02 c0       	rjmp	.+4      	; 0x111c <disk_writep+0xc6>
    1118:	c8 ee       	ldi	r28, 0xE8	; 232
    111a:	dd ef       	ldi	r29, 0xFD	; 253
    111c:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
    1120:	8f 3f       	cpi	r24, 0xFF	; 255
    1122:	11 f0       	breq	.+4      	; 0x1128 <disk_writep+0xd2>
    1124:	20 97       	sbiw	r28, 0x00	; 0
    1126:	b1 f7       	brne	.-20     	; 0x1114 <disk_writep+0xbe>
				if (bc) res = RES_OK;
    1128:	cd 2b       	or	r28, r29
    112a:	11 f4       	brne	.+4      	; 0x1130 <disk_writep+0xda>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    112c:	c1 e0       	ldi	r28, 0x01	; 1
    112e:	01 c0       	rjmp	.+2      	; 0x1132 <disk_writep+0xdc>
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
				if (bc) res = RES_OK;
    1130:	c0 e0       	ldi	r28, 0x00	; 0
			}
			release_spi();
    1132:	0e 94 c9 07 	call	0xf92	; 0xf92 <release_spi>
    1136:	03 c0       	rjmp	.+6      	; 0x113e <disk_writep+0xe8>
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    1138:	c0 e0       	ldi	r28, 0x00	; 0
    113a:	01 c0       	rjmp	.+2      	; 0x113e <disk_writep+0xe8>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    113c:	c1 e0       	ldi	r28, 0x01	; 1
			release_spi();
		}
	}

	return res;
}
    113e:	8c 2f       	mov	r24, r28
    1140:	df 91       	pop	r29
    1142:	cf 91       	pop	r28
    1144:	1f 91       	pop	r17
    1146:	0f 91       	pop	r16
    1148:	08 95       	ret

0000114a <disk_initialize>:

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    114a:	ef 92       	push	r14
    114c:	ff 92       	push	r15
    114e:	0f 93       	push	r16
    1150:	1f 93       	push	r17
    1152:	cf 93       	push	r28
    1154:	df 93       	push	r29
    1156:	00 d0       	rcall	.+0      	; 0x1158 <disk_initialize+0xe>
    1158:	00 d0       	rcall	.+0      	; 0x115a <disk_initialize+0x10>
    115a:	cd b7       	in	r28, 0x3d	; 61
    115c:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];
	WORD tmr;


	INIT_SPI();
    115e:	85 b1       	in	r24, 0x05	; 5
    1160:	81 60       	ori	r24, 0x01	; 1
    1162:	85 b9       	out	0x05, r24	; 5
    1164:	88 b1       	in	r24, 0x08	; 8
    1166:	86 60       	ori	r24, 0x06	; 6
    1168:	88 b9       	out	0x08, r24	; 8
    116a:	84 b1       	in	r24, 0x04	; 4
    116c:	81 60       	ori	r24, 0x01	; 1
    116e:	84 b9       	out	0x04, r24	; 4
    1170:	87 b1       	in	r24, 0x07	; 7
    1172:	8c 60       	ori	r24, 0x0C	; 12
    1174:	87 b9       	out	0x07, r24	; 7

//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
    1176:	28 99       	sbic	0x05, 0	; 5
    1178:	07 c0       	rjmp	.+14     	; 0x1188 <disk_initialize+0x3e>
    117a:	40 e0       	ldi	r20, 0x00	; 0
    117c:	50 e0       	ldi	r21, 0x00	; 0
    117e:	ba 01       	movw	r22, r20
    1180:	80 e0       	ldi	r24, 0x00	; 0
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	0e 94 2b 08 	call	0x1056	; 0x1056 <disk_writep>

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    1188:	14 e6       	ldi	r17, 0x64	; 100
    118a:	03 c0       	rjmp	.+6      	; 0x1192 <disk_initialize+0x48>
//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 
    118c:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
    1190:	11 50       	subi	r17, 0x01	; 1
    1192:	11 11       	cpse	r17, r1
    1194:	fb cf       	rjmp	.-10     	; 0x118c <disk_initialize+0x42>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			// Enter Idle state 
    1196:	40 e0       	ldi	r20, 0x00	; 0
    1198:	50 e0       	ldi	r21, 0x00	; 0
    119a:	ba 01       	movw	r22, r20
    119c:	80 e4       	ldi	r24, 0x40	; 64
    119e:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    11a2:	81 30       	cpi	r24, 0x01	; 1
    11a4:	09 f0       	breq	.+2      	; 0x11a8 <disk_initialize+0x5e>
    11a6:	8f c0       	rjmp	.+286    	; 0x12c6 <disk_initialize+0x17c>
		if (send_cmd(CMD8, 0x1AA) == 1) {	// SDv2 
    11a8:	4a ea       	ldi	r20, 0xAA	; 170
    11aa:	51 e0       	ldi	r21, 0x01	; 1
    11ac:	60 e0       	ldi	r22, 0x00	; 0
    11ae:	70 e0       	ldi	r23, 0x00	; 0
    11b0:	88 e4       	ldi	r24, 0x48	; 72
    11b2:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    11b6:	81 30       	cpi	r24, 0x01	; 1
    11b8:	09 f0       	breq	.+2      	; 0x11bc <disk_initialize+0x72>
    11ba:	53 c0       	rjmp	.+166    	; 0x1262 <disk_initialize+0x118>
    11bc:	0d c0       	rjmp	.+26     	; 0x11d8 <disk_initialize+0x8e>

// 	  		setpos(0,3);
// 	  		str_lcd("SDv2");

			for (n = 0; n < 4; n++) ocr[n] = rcv_spi();		// Get trailing return value of R7 resp 
    11be:	e0 2e       	mov	r14, r16
    11c0:	f1 2c       	mov	r15, r1
    11c2:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
    11c6:	e1 e0       	ldi	r30, 0x01	; 1
    11c8:	f0 e0       	ldi	r31, 0x00	; 0
    11ca:	ec 0f       	add	r30, r28
    11cc:	fd 1f       	adc	r31, r29
    11ce:	ee 0d       	add	r30, r14
    11d0:	ff 1d       	adc	r31, r15
    11d2:	80 83       	st	Z, r24
    11d4:	0f 5f       	subi	r16, 0xFF	; 255
    11d6:	01 c0       	rjmp	.+2      	; 0x11da <disk_initialize+0x90>
    11d8:	01 2f       	mov	r16, r17
    11da:	04 30       	cpi	r16, 0x04	; 4
    11dc:	80 f3       	brcs	.-32     	; 0x11be <disk_initialize+0x74>
//  			sprintf(str,"%02X",ocr[1]);
//  			str_lcd(str);
//  			setpos(17,0);
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
    11de:	8b 81       	ldd	r24, Y+3	; 0x03
    11e0:	81 30       	cpi	r24, 0x01	; 1
    11e2:	09 f0       	breq	.+2      	; 0x11e6 <disk_initialize+0x9c>
    11e4:	72 c0       	rjmp	.+228    	; 0x12ca <disk_initialize+0x180>
    11e6:	8c 81       	ldd	r24, Y+4	; 0x04
    11e8:	8a 3a       	cpi	r24, 0xAA	; 170
    11ea:	31 f0       	breq	.+12     	; 0x11f8 <disk_initialize+0xae>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    11ec:	f1 2c       	mov	r15, r1
    11ee:	78 c0       	rjmp	.+240    	; 0x12e0 <disk_initialize+0x196>
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
// 	  		setpos(5,3);
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	e8 1a       	sub	r14, r24
    11f4:	f1 08       	sbc	r15, r1
    11f6:	06 c0       	rjmp	.+12     	; 0x1204 <disk_initialize+0xba>
    11f8:	0f 2e       	mov	r0, r31
    11fa:	f0 ee       	ldi	r31, 0xE0	; 224
    11fc:	ef 2e       	mov	r14, r31
    11fe:	fe e2       	ldi	r31, 0x2E	; 46
    1200:	ff 2e       	mov	r15, r31
    1202:	f0 2d       	mov	r31, r0
    1204:	e1 14       	cp	r14, r1
    1206:	f1 04       	cpc	r15, r1
    1208:	49 f0       	breq	.+18     	; 0x121c <disk_initialize+0xd2>
    120a:	40 e0       	ldi	r20, 0x00	; 0
    120c:	50 e0       	ldi	r21, 0x00	; 0
    120e:	60 e0       	ldi	r22, 0x00	; 0
    1210:	70 e4       	ldi	r23, 0x40	; 64
    1212:	89 ee       	ldi	r24, 0xE9	; 233
    1214:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    1218:	81 11       	cpse	r24, r1
    121a:	ea cf       	rjmp	.-44     	; 0x11f0 <disk_initialize+0xa6>
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
    121c:	ef 28       	or	r14, r15
    121e:	09 f4       	brne	.+2      	; 0x1222 <disk_initialize+0xd8>
    1220:	56 c0       	rjmp	.+172    	; 0x12ce <disk_initialize+0x184>
    1222:	40 e0       	ldi	r20, 0x00	; 0
    1224:	50 e0       	ldi	r21, 0x00	; 0
    1226:	ba 01       	movw	r22, r20
    1228:	8a e7       	ldi	r24, 0x7A	; 122
    122a:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    122e:	88 23       	and	r24, r24
    1230:	71 f0       	breq	.+28     	; 0x124e <disk_initialize+0x104>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1232:	f1 2c       	mov	r15, r1
    1234:	55 c0       	rjmp	.+170    	; 0x12e0 <disk_initialize+0x196>
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
// 			  		setpos(10,3);
// 					str_lcd("CCS");
					for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
    1236:	e1 2e       	mov	r14, r17
    1238:	f1 2c       	mov	r15, r1
    123a:	0e 94 70 07 	call	0xee0	; 0xee0 <rcv_spi>
    123e:	e1 e0       	ldi	r30, 0x01	; 1
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	ec 0f       	add	r30, r28
    1244:	fd 1f       	adc	r31, r29
    1246:	ee 0d       	add	r30, r14
    1248:	ff 1d       	adc	r31, r15
    124a:	80 83       	st	Z, r24
    124c:	1f 5f       	subi	r17, 0xFF	; 255
    124e:	14 30       	cpi	r17, 0x04	; 4
    1250:	90 f3       	brcs	.-28     	; 0x1236 <disk_initialize+0xec>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1252:	89 81       	ldd	r24, Y+1	; 0x01
    1254:	86 ff       	sbrs	r24, 6
    1256:	3d c0       	rjmp	.+122    	; 0x12d2 <disk_initialize+0x188>
    1258:	0f 2e       	mov	r0, r31
    125a:	fc e0       	ldi	r31, 0x0C	; 12
    125c:	ff 2e       	mov	r15, r31
    125e:	f0 2d       	mov	r31, r0
    1260:	3f c0       	rjmp	.+126    	; 0x12e0 <disk_initialize+0x196>
				}
			}
		} else {							// SDv1 or MMCv3 
			if (send_cmd(ACMD41, 0) <= 1) 	{
    1262:	40 e0       	ldi	r20, 0x00	; 0
    1264:	50 e0       	ldi	r21, 0x00	; 0
    1266:	ba 01       	movw	r22, r20
    1268:	89 ee       	ldi	r24, 0xE9	; 233
    126a:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    126e:	82 30       	cpi	r24, 0x02	; 2
    1270:	40 f4       	brcc	.+16     	; 0x1282 <disk_initialize+0x138>
				ty = CT_SD1; cmd = ACMD41;	// SDv1 
    1272:	68 94       	set
    1274:	ff 24       	eor	r15, r15
    1276:	f1 f8       	bld	r15, 1
    1278:	0f 2e       	mov	r0, r31
    127a:	f9 ee       	ldi	r31, 0xE9	; 233
    127c:	ef 2e       	mov	r14, r31
    127e:	f0 2d       	mov	r31, r0
    1280:	06 c0       	rjmp	.+12     	; 0x128e <disk_initialize+0x144>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
    1282:	ff 24       	eor	r15, r15
    1284:	f3 94       	inc	r15
    1286:	0f 2e       	mov	r0, r31
    1288:	f1 e4       	ldi	r31, 0x41	; 65
    128a:	ef 2e       	mov	r14, r31
    128c:	f0 2d       	mov	r31, r0
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
    128e:	08 ea       	ldi	r16, 0xA8	; 168
    1290:	11 e6       	ldi	r17, 0x61	; 97
    1292:	02 c0       	rjmp	.+4      	; 0x1298 <disk_initialize+0x14e>
    1294:	01 50       	subi	r16, 0x01	; 1
    1296:	11 09       	sbc	r17, r1
    1298:	01 15       	cp	r16, r1
    129a:	11 05       	cpc	r17, r1
    129c:	41 f0       	breq	.+16     	; 0x12ae <disk_initialize+0x164>
    129e:	40 e0       	ldi	r20, 0x00	; 0
    12a0:	50 e0       	ldi	r21, 0x00	; 0
    12a2:	ba 01       	movw	r22, r20
    12a4:	8e 2d       	mov	r24, r14
    12a6:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    12aa:	81 11       	cpse	r24, r1
    12ac:	f3 cf       	rjmp	.-26     	; 0x1294 <disk_initialize+0x14a>
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
    12ae:	01 2b       	or	r16, r17
    12b0:	a1 f0       	breq	.+40     	; 0x12da <disk_initialize+0x190>
    12b2:	40 e0       	ldi	r20, 0x00	; 0
    12b4:	52 e0       	ldi	r21, 0x02	; 2
    12b6:	60 e0       	ldi	r22, 0x00	; 0
    12b8:	70 e0       	ldi	r23, 0x00	; 0
    12ba:	80 e5       	ldi	r24, 0x50	; 80
    12bc:	0e 94 84 07 	call	0xf08	; 0xf08 <send_cmd>
    12c0:	81 11       	cpse	r24, r1
    12c2:	0d c0       	rjmp	.+26     	; 0x12de <disk_initialize+0x194>
    12c4:	0d c0       	rjmp	.+26     	; 0x12e0 <disk_initialize+0x196>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    12c6:	f1 2c       	mov	r15, r1
    12c8:	0b c0       	rjmp	.+22     	; 0x12e0 <disk_initialize+0x196>
    12ca:	f1 2c       	mov	r15, r1
    12cc:	09 c0       	rjmp	.+18     	; 0x12e0 <disk_initialize+0x196>
    12ce:	f1 2c       	mov	r15, r1
    12d0:	07 c0       	rjmp	.+14     	; 0x12e0 <disk_initialize+0x196>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    12d2:	68 94       	set
    12d4:	ff 24       	eor	r15, r15
    12d6:	f2 f8       	bld	r15, 2
    12d8:	03 c0       	rjmp	.+6      	; 0x12e0 <disk_initialize+0x196>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
				ty = 0;
    12da:	f1 2c       	mov	r15, r1
    12dc:	01 c0       	rjmp	.+2      	; 0x12e0 <disk_initialize+0x196>
    12de:	f1 2c       	mov	r15, r1
		}
	}
	CardType = ty;
    12e0:	f0 92 18 06 	sts	0x0618, r15	; 0x800618 <CardType>
//   	sprintf(str,"%d",CardType);
//   	setpos(0,1);
//   	str_lcd(str);
	release_spi();
    12e4:	0e 94 c9 07 	call	0xf92	; 0xf92 <release_spi>

	return ty ? 0 : STA_NOINIT;
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	f1 10       	cpse	r15, r1
    12ec:	80 e0       	ldi	r24, 0x00	; 0
}
    12ee:	0f 90       	pop	r0
    12f0:	0f 90       	pop	r0
    12f2:	0f 90       	pop	r0
    12f4:	0f 90       	pop	r0
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	1f 91       	pop	r17
    12fc:	0f 91       	pop	r16
    12fe:	ff 90       	pop	r15
    1300:	ef 90       	pop	r14
    1302:	08 95       	ret

00001304 <NRF24L01_Receive>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
    1304:	cf 93       	push	r28
    1306:	df 93       	push	r29
    1308:	80 91 19 06 	lds	r24, 0x0619	; 0x800619 <rx_flag>
    130c:	81 30       	cpi	r24, 0x01	; 1
    130e:	09 f0       	breq	.+2      	; 0x1312 <NRF24L01_Receive+0xe>
    1310:	6b c1       	rjmp	.+726    	; 0x15e8 <NRF24L01_Receive+0x2e4>
    1312:	80 91 1a 06 	lds	r24, 0x061A	; 0x80061a <RX_BUF>
    1316:	81 30       	cpi	r24, 0x01	; 1
    1318:	09 f0       	breq	.+2      	; 0x131c <NRF24L01_Receive+0x18>
    131a:	59 c0       	rjmp	.+178    	; 0x13ce <NRF24L01_Receive+0xca>
    131c:	e8 ef       	ldi	r30, 0xF8	; 248
    131e:	f1 e0       	ldi	r31, 0x01	; 1
    1320:	01 90       	ld	r0, Z+
    1322:	00 20       	and	r0, r0
    1324:	e9 f7       	brne	.-6      	; 0x1320 <NRF24L01_Receive+0x1c>
    1326:	31 97       	sbiw	r30, 0x01	; 1
    1328:	af 01       	movw	r20, r30
    132a:	48 5f       	subi	r20, 0xF8	; 248
    132c:	51 40       	sbci	r21, 0x01	; 1
    132e:	44 0f       	add	r20, r20
    1330:	55 1f       	adc	r21, r21
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	70 e0       	ldi	r23, 0x00	; 0
    1336:	88 ef       	ldi	r24, 0xF8	; 248
    1338:	91 e0       	ldi	r25, 0x01	; 1
    133a:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <memset>
    133e:	ea e1       	ldi	r30, 0x1A	; 26
    1340:	f6 e0       	ldi	r31, 0x06	; 6
    1342:	81 81       	ldd	r24, Z+1	; 0x01
    1344:	c2 81       	ldd	r28, Z+2	; 0x02
    1346:	d0 e0       	ldi	r29, 0x00	; 0
    1348:	dc 2f       	mov	r29, r28
    134a:	cc 27       	eor	r28, r28
    134c:	c8 2b       	or	r28, r24
    134e:	be 01       	movw	r22, r28
    1350:	0d 2e       	mov	r0, r29
    1352:	00 0c       	add	r0, r0
    1354:	88 0b       	sbc	r24, r24
    1356:	99 0b       	sbc	r25, r25
    1358:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <__floatsisf>
    135c:	20 e0       	ldi	r18, 0x00	; 0
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	40 e2       	ldi	r20, 0x20	; 32
    1362:	51 e4       	ldi	r21, 0x41	; 65
    1364:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <__divsf3>
    1368:	60 93 72 01 	sts	0x0172, r22	; 0x800172 <temp>
    136c:	70 93 73 01 	sts	0x0173, r23	; 0x800173 <temp+0x1>
    1370:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <temp+0x2>
    1374:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <temp+0x3>
    1378:	dd 23       	and	r29, r29
    137a:	5c f4       	brge	.+22     	; 0x1392 <NRF24L01_Receive+0x8e>
    137c:	dc 01       	movw	r26, r24
    137e:	cb 01       	movw	r24, r22
    1380:	b0 58       	subi	r27, 0x80	; 128
    1382:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <temp>
    1386:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <temp+0x1>
    138a:	a0 93 74 01 	sts	0x0174, r26	; 0x800174 <temp+0x2>
    138e:	b0 93 75 01 	sts	0x0175, r27	; 0x800175 <temp+0x3>
    1392:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <temp+0x3>
    1396:	8f 93       	push	r24
    1398:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <temp+0x2>
    139c:	8f 93       	push	r24
    139e:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <temp+0x1>
    13a2:	8f 93       	push	r24
    13a4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <temp>
    13a8:	8f 93       	push	r24
    13aa:	83 e2       	ldi	r24, 0x23	; 35
    13ac:	91 e0       	ldi	r25, 0x01	; 1
    13ae:	9f 93       	push	r25
    13b0:	8f 93       	push	r24
    13b2:	88 ef       	ldi	r24, 0xF8	; 248
    13b4:	91 e0       	ldi	r25, 0x01	; 1
    13b6:	9f 93       	push	r25
    13b8:	8f 93       	push	r24
    13ba:	0e 94 43 1c 	call	0x3886	; 0x3886 <sprintf>
    13be:	8d b7       	in	r24, 0x3d	; 61
    13c0:	9e b7       	in	r25, 0x3e	; 62
    13c2:	08 96       	adiw	r24, 0x08	; 8
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	f8 94       	cli
    13c8:	9e bf       	out	0x3e, r25	; 62
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	8d bf       	out	0x3d, r24	; 61
    13ce:	80 91 1a 06 	lds	r24, 0x061A	; 0x80061a <RX_BUF>
    13d2:	85 30       	cpi	r24, 0x05	; 5
    13d4:	09 f0       	breq	.+2      	; 0x13d8 <NRF24L01_Receive+0xd4>
    13d6:	47 c0       	rjmp	.+142    	; 0x1466 <NRF24L01_Receive+0x162>
    13d8:	ce ee       	ldi	r28, 0xEE	; 238
    13da:	d1 e0       	ldi	r29, 0x01	; 1
    13dc:	fe 01       	movw	r30, r28
    13de:	01 90       	ld	r0, Z+
    13e0:	00 20       	and	r0, r0
    13e2:	e9 f7       	brne	.-6      	; 0x13de <NRF24L01_Receive+0xda>
    13e4:	31 97       	sbiw	r30, 0x01	; 1
    13e6:	af 01       	movw	r20, r30
    13e8:	4e 5e       	subi	r20, 0xEE	; 238
    13ea:	51 40       	sbci	r21, 0x01	; 1
    13ec:	44 0f       	add	r20, r20
    13ee:	55 1f       	adc	r21, r21
    13f0:	60 e0       	ldi	r22, 0x00	; 0
    13f2:	70 e0       	ldi	r23, 0x00	; 0
    13f4:	ce 01       	movw	r24, r28
    13f6:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <memset>
    13fa:	ea e1       	ldi	r30, 0x1A	; 26
    13fc:	f6 e0       	ldi	r31, 0x06	; 6
    13fe:	81 81       	ldd	r24, Z+1	; 0x01
    1400:	62 81       	ldd	r22, Z+2	; 0x02
    1402:	70 e0       	ldi	r23, 0x00	; 0
    1404:	76 2f       	mov	r23, r22
    1406:	66 27       	eor	r22, r22
    1408:	68 2b       	or	r22, r24
    140a:	07 2e       	mov	r0, r23
    140c:	00 0c       	add	r0, r0
    140e:	88 0b       	sbc	r24, r24
    1410:	99 0b       	sbc	r25, r25
    1412:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <__floatsisf>
    1416:	20 e0       	ldi	r18, 0x00	; 0
    1418:	30 e0       	ldi	r19, 0x00	; 0
    141a:	40 e2       	ldi	r20, 0x20	; 32
    141c:	51 e4       	ldi	r21, 0x41	; 65
    141e:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <__divsf3>
    1422:	26 2f       	mov	r18, r22
    1424:	37 2f       	mov	r19, r23
    1426:	46 2f       	mov	r20, r22
    1428:	57 2f       	mov	r21, r23
    142a:	68 2f       	mov	r22, r24
    142c:	79 2f       	mov	r23, r25
    142e:	40 93 6e 01 	sts	0x016E, r20	; 0x80016e <__data_end>
    1432:	50 93 6f 01 	sts	0x016F, r21	; 0x80016f <__data_end+0x1>
    1436:	60 93 70 01 	sts	0x0170, r22	; 0x800170 <__data_end+0x2>
    143a:	70 93 71 01 	sts	0x0171, r23	; 0x800171 <__data_end+0x3>
    143e:	9f 93       	push	r25
    1440:	8f 93       	push	r24
    1442:	3f 93       	push	r19
    1444:	2f 93       	push	r18
    1446:	88 e2       	ldi	r24, 0x28	; 40
    1448:	91 e0       	ldi	r25, 0x01	; 1
    144a:	9f 93       	push	r25
    144c:	8f 93       	push	r24
    144e:	df 93       	push	r29
    1450:	cf 93       	push	r28
    1452:	0e 94 43 1c 	call	0x3886	; 0x3886 <sprintf>
    1456:	8d b7       	in	r24, 0x3d	; 61
    1458:	9e b7       	in	r25, 0x3e	; 62
    145a:	08 96       	adiw	r24, 0x08	; 8
    145c:	0f b6       	in	r0, 0x3f	; 63
    145e:	f8 94       	cli
    1460:	9e bf       	out	0x3e, r25	; 62
    1462:	0f be       	out	0x3f, r0	; 63
    1464:	8d bf       	out	0x3d, r24	; 61
    1466:	c0 91 1a 06 	lds	r28, 0x061A	; 0x80061a <RX_BUF>
    146a:	c2 30       	cpi	r28, 0x02	; 2
    146c:	61 f5       	brne	.+88     	; 0x14c6 <NRF24L01_Receive+0x1c2>
    146e:	e4 ee       	ldi	r30, 0xE4	; 228
    1470:	f1 e0       	ldi	r31, 0x01	; 1
    1472:	01 90       	ld	r0, Z+
    1474:	00 20       	and	r0, r0
    1476:	e9 f7       	brne	.-6      	; 0x1472 <NRF24L01_Receive+0x16e>
    1478:	31 97       	sbiw	r30, 0x01	; 1
    147a:	af 01       	movw	r20, r30
    147c:	44 5e       	subi	r20, 0xE4	; 228
    147e:	51 40       	sbci	r21, 0x01	; 1
    1480:	44 0f       	add	r20, r20
    1482:	55 1f       	adc	r21, r21
    1484:	60 e0       	ldi	r22, 0x00	; 0
    1486:	70 e0       	ldi	r23, 0x00	; 0
    1488:	84 ee       	ldi	r24, 0xE4	; 228
    148a:	91 e0       	ldi	r25, 0x01	; 1
    148c:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <memset>
    1490:	20 e0       	ldi	r18, 0x00	; 0
    1492:	0b c0       	rjmp	.+22     	; 0x14aa <NRF24L01_Receive+0x1a6>
    1494:	82 2f       	mov	r24, r18
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	fc 01       	movw	r30, r24
    149a:	e5 5e       	subi	r30, 0xE5	; 229
    149c:	f9 4f       	sbci	r31, 0xF9	; 249
    149e:	30 81       	ld	r19, Z
    14a0:	fc 01       	movw	r30, r24
    14a2:	ec 51       	subi	r30, 0x1C	; 28
    14a4:	fe 4f       	sbci	r31, 0xFE	; 254
    14a6:	30 83       	st	Z, r19
    14a8:	2f 5f       	subi	r18, 0xFF	; 255
    14aa:	82 2f       	mov	r24, r18
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	ea e1       	ldi	r30, 0x1A	; 26
    14b0:	f6 e0       	ldi	r31, 0x06	; 6
    14b2:	01 90       	ld	r0, Z+
    14b4:	00 20       	and	r0, r0
    14b6:	e9 f7       	brne	.-6      	; 0x14b2 <NRF24L01_Receive+0x1ae>
    14b8:	31 97       	sbiw	r30, 0x01	; 1
    14ba:	ea 51       	subi	r30, 0x1A	; 26
    14bc:	f6 40       	sbci	r31, 0x06	; 6
    14be:	31 97       	sbiw	r30, 0x01	; 1
    14c0:	8e 17       	cp	r24, r30
    14c2:	9f 07       	cpc	r25, r31
    14c4:	38 f3       	brcs	.-50     	; 0x1494 <NRF24L01_Receive+0x190>
    14c6:	c3 30       	cpi	r28, 0x03	; 3
    14c8:	89 f5       	brne	.+98     	; 0x152c <NRF24L01_Receive+0x228>
    14ca:	e0 ed       	ldi	r30, 0xD0	; 208
    14cc:	f1 e0       	ldi	r31, 0x01	; 1
    14ce:	01 90       	ld	r0, Z+
    14d0:	00 20       	and	r0, r0
    14d2:	e9 f7       	brne	.-6      	; 0x14ce <NRF24L01_Receive+0x1ca>
    14d4:	31 97       	sbiw	r30, 0x01	; 1
    14d6:	af 01       	movw	r20, r30
    14d8:	40 5d       	subi	r20, 0xD0	; 208
    14da:	51 40       	sbci	r21, 0x01	; 1
    14dc:	44 0f       	add	r20, r20
    14de:	55 1f       	adc	r21, r21
    14e0:	60 e0       	ldi	r22, 0x00	; 0
    14e2:	70 e0       	ldi	r23, 0x00	; 0
    14e4:	80 ed       	ldi	r24, 0xD0	; 208
    14e6:	91 e0       	ldi	r25, 0x01	; 1
    14e8:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <memset>
    14ec:	20 e0       	ldi	r18, 0x00	; 0
    14ee:	0b c0       	rjmp	.+22     	; 0x1506 <NRF24L01_Receive+0x202>
    14f0:	82 2f       	mov	r24, r18
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	fc 01       	movw	r30, r24
    14f6:	e5 5e       	subi	r30, 0xE5	; 229
    14f8:	f9 4f       	sbci	r31, 0xF9	; 249
    14fa:	30 81       	ld	r19, Z
    14fc:	fc 01       	movw	r30, r24
    14fe:	e0 53       	subi	r30, 0x30	; 48
    1500:	fe 4f       	sbci	r31, 0xFE	; 254
    1502:	30 83       	st	Z, r19
    1504:	2f 5f       	subi	r18, 0xFF	; 255
    1506:	82 2f       	mov	r24, r18
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	ea e1       	ldi	r30, 0x1A	; 26
    150c:	f6 e0       	ldi	r31, 0x06	; 6
    150e:	01 90       	ld	r0, Z+
    1510:	00 20       	and	r0, r0
    1512:	e9 f7       	brne	.-6      	; 0x150e <NRF24L01_Receive+0x20a>
    1514:	31 97       	sbiw	r30, 0x01	; 1
    1516:	ea 51       	subi	r30, 0x1A	; 26
    1518:	f6 40       	sbci	r31, 0x06	; 6
    151a:	31 97       	sbiw	r30, 0x01	; 1
    151c:	8e 17       	cp	r24, r30
    151e:	9f 07       	cpc	r25, r31
    1520:	38 f3       	brcs	.-50     	; 0x14f0 <NRF24L01_Receive+0x1ec>
    1522:	fc 01       	movw	r30, r24
    1524:	ef 52       	subi	r30, 0x2F	; 47
    1526:	fe 4f       	sbci	r31, 0xFE	; 254
    1528:	80 e2       	ldi	r24, 0x20	; 32
    152a:	80 83       	st	Z, r24
    152c:	c4 30       	cpi	r28, 0x04	; 4
    152e:	61 f5       	brne	.+88     	; 0x1588 <NRF24L01_Receive+0x284>
    1530:	e6 ec       	ldi	r30, 0xC6	; 198
    1532:	f1 e0       	ldi	r31, 0x01	; 1
    1534:	01 90       	ld	r0, Z+
    1536:	00 20       	and	r0, r0
    1538:	e9 f7       	brne	.-6      	; 0x1534 <NRF24L01_Receive+0x230>
    153a:	31 97       	sbiw	r30, 0x01	; 1
    153c:	af 01       	movw	r20, r30
    153e:	46 5c       	subi	r20, 0xC6	; 198
    1540:	51 40       	sbci	r21, 0x01	; 1
    1542:	44 0f       	add	r20, r20
    1544:	55 1f       	adc	r21, r21
    1546:	60 e0       	ldi	r22, 0x00	; 0
    1548:	70 e0       	ldi	r23, 0x00	; 0
    154a:	86 ec       	ldi	r24, 0xC6	; 198
    154c:	91 e0       	ldi	r25, 0x01	; 1
    154e:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <memset>
    1552:	20 e0       	ldi	r18, 0x00	; 0
    1554:	0b c0       	rjmp	.+22     	; 0x156c <NRF24L01_Receive+0x268>
    1556:	82 2f       	mov	r24, r18
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	fc 01       	movw	r30, r24
    155c:	e5 5e       	subi	r30, 0xE5	; 229
    155e:	f9 4f       	sbci	r31, 0xF9	; 249
    1560:	30 81       	ld	r19, Z
    1562:	fc 01       	movw	r30, r24
    1564:	ea 53       	subi	r30, 0x3A	; 58
    1566:	fe 4f       	sbci	r31, 0xFE	; 254
    1568:	30 83       	st	Z, r19
    156a:	2f 5f       	subi	r18, 0xFF	; 255
    156c:	82 2f       	mov	r24, r18
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	ea e1       	ldi	r30, 0x1A	; 26
    1572:	f6 e0       	ldi	r31, 0x06	; 6
    1574:	01 90       	ld	r0, Z+
    1576:	00 20       	and	r0, r0
    1578:	e9 f7       	brne	.-6      	; 0x1574 <NRF24L01_Receive+0x270>
    157a:	31 97       	sbiw	r30, 0x01	; 1
    157c:	ea 51       	subi	r30, 0x1A	; 26
    157e:	f6 40       	sbci	r31, 0x06	; 6
    1580:	31 97       	sbiw	r30, 0x01	; 1
    1582:	8e 17       	cp	r24, r30
    1584:	9f 07       	cpc	r25, r31
    1586:	38 f3       	brcs	.-50     	; 0x1556 <NRF24L01_Receive+0x252>
    1588:	c6 30       	cpi	r28, 0x06	; 6
    158a:	61 f5       	brne	.+88     	; 0x15e4 <NRF24L01_Receive+0x2e0>
    158c:	ec eb       	ldi	r30, 0xBC	; 188
    158e:	f1 e0       	ldi	r31, 0x01	; 1
    1590:	01 90       	ld	r0, Z+
    1592:	00 20       	and	r0, r0
    1594:	e9 f7       	brne	.-6      	; 0x1590 <NRF24L01_Receive+0x28c>
    1596:	31 97       	sbiw	r30, 0x01	; 1
    1598:	af 01       	movw	r20, r30
    159a:	4c 5b       	subi	r20, 0xBC	; 188
    159c:	51 40       	sbci	r21, 0x01	; 1
    159e:	44 0f       	add	r20, r20
    15a0:	55 1f       	adc	r21, r21
    15a2:	60 e0       	ldi	r22, 0x00	; 0
    15a4:	70 e0       	ldi	r23, 0x00	; 0
    15a6:	8c eb       	ldi	r24, 0xBC	; 188
    15a8:	91 e0       	ldi	r25, 0x01	; 1
    15aa:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <memset>
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	0b c0       	rjmp	.+22     	; 0x15c8 <NRF24L01_Receive+0x2c4>
    15b2:	82 2f       	mov	r24, r18
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	fc 01       	movw	r30, r24
    15b8:	e5 5e       	subi	r30, 0xE5	; 229
    15ba:	f9 4f       	sbci	r31, 0xF9	; 249
    15bc:	30 81       	ld	r19, Z
    15be:	fc 01       	movw	r30, r24
    15c0:	e4 54       	subi	r30, 0x44	; 68
    15c2:	fe 4f       	sbci	r31, 0xFE	; 254
    15c4:	30 83       	st	Z, r19
    15c6:	2f 5f       	subi	r18, 0xFF	; 255
    15c8:	82 2f       	mov	r24, r18
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	ea e1       	ldi	r30, 0x1A	; 26
    15ce:	f6 e0       	ldi	r31, 0x06	; 6
    15d0:	01 90       	ld	r0, Z+
    15d2:	00 20       	and	r0, r0
    15d4:	e9 f7       	brne	.-6      	; 0x15d0 <NRF24L01_Receive+0x2cc>
    15d6:	31 97       	sbiw	r30, 0x01	; 1
    15d8:	ea 51       	subi	r30, 0x1A	; 26
    15da:	f6 40       	sbci	r31, 0x06	; 6
    15dc:	31 97       	sbiw	r30, 0x01	; 1
    15de:	8e 17       	cp	r24, r30
    15e0:	9f 07       	cpc	r25, r31
    15e2:	38 f3       	brcs	.-50     	; 0x15b2 <NRF24L01_Receive+0x2ae>
    15e4:	10 92 19 06 	sts	0x0619, r1	; 0x800619 <rx_flag>
    15e8:	df 91       	pop	r29
    15ea:	cf 91       	pop	r28
    15ec:	08 95       	ret

000015ee <NRF24_FlushRX>:
    15ee:	85 b1       	in	r24, 0x05	; 5
    15f0:	8b 7f       	andi	r24, 0xFB	; 251
    15f2:	85 b9       	out	0x05, r24	; 5
    15f4:	82 ee       	ldi	r24, 0xE2	; 226
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    15fc:	85 e0       	ldi	r24, 0x05	; 5
    15fe:	8a 95       	dec	r24
    1600:	f1 f7       	brne	.-4      	; 0x15fe <NRF24_FlushRX+0x10>
    1602:	00 00       	nop
    1604:	85 b1       	in	r24, 0x05	; 5
    1606:	84 60       	ori	r24, 0x04	; 4
    1608:	85 b9       	out	0x05, r24	; 5
    160a:	08 95       	ret

0000160c <NRF24_FlushTX>:
    160c:	85 b1       	in	r24, 0x05	; 5
    160e:	8b 7f       	andi	r24, 0xFB	; 251
    1610:	85 b9       	out	0x05, r24	; 5
    1612:	81 ee       	ldi	r24, 0xE1	; 225
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    161a:	85 e0       	ldi	r24, 0x05	; 5
    161c:	8a 95       	dec	r24
    161e:	f1 f7       	brne	.-4      	; 0x161c <NRF24_FlushTX+0x10>
    1620:	00 00       	nop
    1622:	85 b1       	in	r24, 0x05	; 5
    1624:	84 60       	ori	r24, 0x04	; 4
    1626:	85 b9       	out	0x05, r24	; 5
    1628:	08 95       	ret

0000162a <NRF24_ToggleFeatures>:
    162a:	85 b1       	in	r24, 0x05	; 5
    162c:	8b 7f       	andi	r24, 0xFB	; 251
    162e:	85 b9       	out	0x05, r24	; 5
    1630:	80 e5       	ldi	r24, 0x50	; 80
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    1638:	85 e0       	ldi	r24, 0x05	; 5
    163a:	8a 95       	dec	r24
    163c:	f1 f7       	brne	.-4      	; 0x163a <NRF24_ToggleFeatures+0x10>
    163e:	00 00       	nop
    1640:	83 e7       	ldi	r24, 0x73	; 115
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    1648:	85 b1       	in	r24, 0x05	; 5
    164a:	84 60       	ori	r24, 0x04	; 4
    164c:	85 b9       	out	0x05, r24	; 5
    164e:	08 95       	ret

00001650 <NRF24_Read_Buf>:
    1650:	ef 92       	push	r14
    1652:	ff 92       	push	r15
    1654:	0f 93       	push	r16
    1656:	1f 93       	push	r17
    1658:	cf 93       	push	r28
    165a:	df 93       	push	r29
    165c:	8b 01       	movw	r16, r22
    165e:	c4 2f       	mov	r28, r20
    1660:	95 b1       	in	r25, 0x05	; 5
    1662:	9b 7f       	andi	r25, 0xFB	; 251
    1664:	95 b9       	out	0x05, r25	; 5
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    166c:	0c c0       	rjmp	.+24     	; 0x1686 <NRF24_Read_Buf+0x36>
    166e:	78 01       	movw	r14, r16
    1670:	8f ef       	ldi	r24, 0xFF	; 255
    1672:	e8 1a       	sub	r14, r24
    1674:	f8 0a       	sbc	r15, r24
    1676:	8f ef       	ldi	r24, 0xFF	; 255
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    167e:	f8 01       	movw	r30, r16
    1680:	80 83       	st	Z, r24
    1682:	cd 2f       	mov	r28, r29
    1684:	87 01       	movw	r16, r14
    1686:	df ef       	ldi	r29, 0xFF	; 255
    1688:	dc 0f       	add	r29, r28
    168a:	c1 11       	cpse	r28, r1
    168c:	f0 cf       	rjmp	.-32     	; 0x166e <NRF24_Read_Buf+0x1e>
    168e:	85 b1       	in	r24, 0x05	; 5
    1690:	84 60       	ori	r24, 0x04	; 4
    1692:	85 b9       	out	0x05, r24	; 5
    1694:	df 91       	pop	r29
    1696:	cf 91       	pop	r28
    1698:	1f 91       	pop	r17
    169a:	0f 91       	pop	r16
    169c:	ff 90       	pop	r15
    169e:	ef 90       	pop	r14
    16a0:	08 95       	ret

000016a2 <NRF24_Write_Buf>:
    16a2:	ef 92       	push	r14
    16a4:	ff 92       	push	r15
    16a6:	0f 93       	push	r16
    16a8:	1f 93       	push	r17
    16aa:	cf 93       	push	r28
    16ac:	df 93       	push	r29
    16ae:	8b 01       	movw	r16, r22
    16b0:	c4 2f       	mov	r28, r20
    16b2:	80 62       	ori	r24, 0x20	; 32
    16b4:	95 b1       	in	r25, 0x05	; 5
    16b6:	9b 7f       	andi	r25, 0xFB	; 251
    16b8:	95 b9       	out	0x05, r25	; 5
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    16c0:	85 e0       	ldi	r24, 0x05	; 5
    16c2:	8a 95       	dec	r24
    16c4:	f1 f7       	brne	.-4      	; 0x16c2 <NRF24_Write_Buf+0x20>
    16c6:	00 00       	nop
    16c8:	0b c0       	rjmp	.+22     	; 0x16e0 <NRF24_Write_Buf+0x3e>
    16ca:	78 01       	movw	r14, r16
    16cc:	ef ef       	ldi	r30, 0xFF	; 255
    16ce:	ee 1a       	sub	r14, r30
    16d0:	fe 0a       	sbc	r15, r30
    16d2:	f8 01       	movw	r30, r16
    16d4:	80 81       	ld	r24, Z
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
    16dc:	cd 2f       	mov	r28, r29
    16de:	87 01       	movw	r16, r14
    16e0:	df ef       	ldi	r29, 0xFF	; 255
    16e2:	dc 0f       	add	r29, r28
    16e4:	c1 11       	cpse	r28, r1
    16e6:	f1 cf       	rjmp	.-30     	; 0x16ca <NRF24_Write_Buf+0x28>
    16e8:	85 b1       	in	r24, 0x05	; 5
    16ea:	84 60       	ori	r24, 0x04	; 4
    16ec:	85 b9       	out	0x05, r24	; 5
    16ee:	df 91       	pop	r29
    16f0:	cf 91       	pop	r28
    16f2:	1f 91       	pop	r17
    16f4:	0f 91       	pop	r16
    16f6:	ff 90       	pop	r15
    16f8:	ef 90       	pop	r14
    16fa:	08 95       	ret

000016fc <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
    16fc:	cf 93       	push	r28
    16fe:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
    1700:	80 62       	ori	r24, 0x20	; 32
	LOW_CSN;
    1702:	95 b1       	in	r25, 0x05	; 5
    1704:	9b 7f       	andi	r25, 0xFB	; 251
    1706:	95 b9       	out	0x05, r25	; 5
	spi_send_recv(reg);
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
	spi_send_recv(data_out);
    170e:	8c 2f       	mov	r24, r28
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
	HIGH_CSN;
    1716:	85 b1       	in	r24, 0x05	; 5
    1718:	84 60       	ori	r24, 0x04	; 4
    171a:	85 b9       	out	0x05, r24	; 5
}
    171c:	cf 91       	pop	r28
    171e:	08 95       	ret

00001720 <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
    1720:	cf 93       	push	r28
    1722:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
    1724:	85 b1       	in	r24, 0x05	; 5
    1726:	8b 7f       	andi	r24, 0xFB	; 251
    1728:	85 b9       	out	0x05, r24	; 5
	data_in = spi_send_recv(reg);
    172a:	8c 2f       	mov	r24, r28
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
	if(reg != STATUS)
    1732:	c7 30       	cpi	r28, 0x07	; 7
    1734:	21 f0       	breq	.+8      	; 0x173e <nRF_read_register+0x1e>
	{
		data_in = spi_send_recv(NOP);
    1736:	8f ef       	ldi	r24, 0xFF	; 255
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_send_recv>
	}
	HIGH_CSN;
    173e:	95 b1       	in	r25, 0x05	; 5
    1740:	94 60       	ori	r25, 0x04	; 4
    1742:	95 b9       	out	0x05, r25	; 5
	return data_in;
}
    1744:	cf 91       	pop	r28
    1746:	08 95       	ret

00001748 <__vector_1>:
		//memset(RX_BUF, 0, sizeof(int) * strlen(RX_BUF));//очистка массива
		rx_flag = 0;
	}
}
ISR(INT0_vect)
{
    1748:	1f 92       	push	r1
    174a:	0f 92       	push	r0
    174c:	0f b6       	in	r0, 0x3f	; 63
    174e:	0f 92       	push	r0
    1750:	11 24       	eor	r1, r1
    1752:	2f 93       	push	r18
    1754:	3f 93       	push	r19
    1756:	4f 93       	push	r20
    1758:	5f 93       	push	r21
    175a:	6f 93       	push	r22
    175c:	7f 93       	push	r23
    175e:	8f 93       	push	r24
    1760:	9f 93       	push	r25
    1762:	af 93       	push	r26
    1764:	bf 93       	push	r27
    1766:	ef 93       	push	r30
    1768:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    176a:	8f ea       	ldi	r24, 0xAF	; 175
    176c:	94 e0       	ldi	r25, 0x04	; 4
    176e:	01 97       	sbiw	r24, 0x01	; 1
    1770:	f1 f7       	brne	.-4      	; 0x176e <__vector_1+0x26>
    1772:	00 c0       	rjmp	.+0      	; 0x1774 <__vector_1+0x2c>
    1774:	00 00       	nop
	uint8_t status=0x01;
	uint8_t pipe;
	_delay_us(300);
	PORTD |= (1<<LED);
    1776:	8b b1       	in	r24, 0x0b	; 11
    1778:	80 61       	ori	r24, 0x10	; 16
    177a:	8b b9       	out	0x0b, r24	; 11
    177c:	8f ea       	ldi	r24, 0xAF	; 175
    177e:	94 e0       	ldi	r25, 0x04	; 4
    1780:	01 97       	sbiw	r24, 0x01	; 1
    1782:	f1 f7       	brne	.-4      	; 0x1780 <__vector_1+0x38>
    1784:	00 c0       	rjmp	.+0      	; 0x1786 <__vector_1+0x3e>
    1786:	00 00       	nop
	_delay_us(300);
	PORTD &= ~(1<<LED);
    1788:	8b b1       	in	r24, 0x0b	; 11
    178a:	8f 7e       	andi	r24, 0xEF	; 239
    178c:	8b b9       	out	0x0b, r24	; 11
	status = nRF_read_register(STATUS);
    178e:	87 e0       	ldi	r24, 0x07	; 7
    1790:	0e 94 90 0b 	call	0x1720	; 0x1720 <nRF_read_register>
	if(status & 0x40)
    1794:	86 ff       	sbrs	r24, 6
    1796:	0a c0       	rjmp	.+20     	; 0x17ac <__vector_1+0x64>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    1798:	45 e0       	ldi	r20, 0x05	; 5
    179a:	6a e1       	ldi	r22, 0x1A	; 26
    179c:	76 e0       	ldi	r23, 0x06	; 6
    179e:	81 e6       	ldi	r24, 0x61	; 97
    17a0:	0e 94 28 0b 	call	0x1650	; 0x1650 <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    17a4:	60 e4       	ldi	r22, 0x40	; 64
    17a6:	87 e0       	ldi	r24, 0x07	; 7
    17a8:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	}
	 rx_flag = 1;
    17ac:	81 e0       	ldi	r24, 0x01	; 1
    17ae:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <rx_flag>
}
    17b2:	ff 91       	pop	r31
    17b4:	ef 91       	pop	r30
    17b6:	bf 91       	pop	r27
    17b8:	af 91       	pop	r26
    17ba:	9f 91       	pop	r25
    17bc:	8f 91       	pop	r24
    17be:	7f 91       	pop	r23
    17c0:	6f 91       	pop	r22
    17c2:	5f 91       	pop	r21
    17c4:	4f 91       	pop	r20
    17c6:	3f 91       	pop	r19
    17c8:	2f 91       	pop	r18
    17ca:	0f 90       	pop	r0
    17cc:	0f be       	out	0x3f, r0	; 63
    17ce:	0f 90       	pop	r0
    17d0:	1f 90       	pop	r1
    17d2:	18 95       	reti

000017d4 <NRF24L01_RX_Mode>:
}
//-------------------------------------------------------------
void NRF24L01_RX_Mode(void) // включение режима приема
{
	uint8_t regval = 0x00;
	regval = nRF_read_register(CONFIG);
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	0e 94 90 0b 	call	0x1720	; 0x1720 <nRF_read_register>
	//разбудим модуль и переведём его в режим приёмника, включив биты PWR_UP и PRIM_RX
	regval |= (1<<PWR_UP)|(1<<PRIM_RX);
    17da:	68 2f       	mov	r22, r24
    17dc:	63 60       	ori	r22, 0x03	; 3
	nRF_write_register(CONFIG,regval);
    17de:	80 e0       	ldi	r24, 0x00	; 0
    17e0:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	HIGH_CE;
    17e4:	85 b1       	in	r24, 0x05	; 5
    17e6:	82 60       	ori	r24, 0x02	; 2
    17e8:	85 b9       	out	0x05, r24	; 5
    17ea:	87 e5       	ldi	r24, 0x57	; 87
    17ec:	92 e0       	ldi	r25, 0x02	; 2
    17ee:	01 97       	sbiw	r24, 0x01	; 1
    17f0:	f1 f7       	brne	.-4      	; 0x17ee <NRF24L01_RX_Mode+0x1a>
    17f2:	00 c0       	rjmp	.+0      	; 0x17f4 <NRF24L01_RX_Mode+0x20>
    17f4:	00 00       	nop
	_delay_us(150); //Задержка минимум 130 мкс
	// Flush buffers
	NRF24_FlushRX();
    17f6:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <NRF24_FlushRX>
	NRF24_FlushTX();
    17fa:	0e 94 06 0b 	call	0x160c	; 0x160c <NRF24_FlushTX>
    17fe:	08 95       	ret

00001800 <NRF24_ini>:
extern uint8_t flag_irq;
volatile uint8_t rx_flag = 0;
//-------------------------------------------------------------
void NRF24_ini(void)
{
	LOW_CE;
    1800:	85 b1       	in	r24, 0x05	; 5
    1802:	8d 7f       	andi	r24, 0xFD	; 253
    1804:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1806:	8f e1       	ldi	r24, 0x1F	; 31
    1808:	9e e4       	ldi	r25, 0x4E	; 78
    180a:	01 97       	sbiw	r24, 0x01	; 1
    180c:	f1 f7       	brne	.-4      	; 0x180a <NRF24_ini+0xa>
    180e:	00 c0       	rjmp	.+0      	; 0x1810 <NRF24_ini+0x10>
    1810:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(CONFIG, 0x0a); // Set PWR_UP bit, enable CRC(1 byte) &Prim_RX:0 (Transmitter)
    1812:	6a e0       	ldi	r22, 0x0A	; 10
    1814:	80 e0       	ldi	r24, 0x00	; 0
    1816:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
    181a:	8f e1       	ldi	r24, 0x1F	; 31
    181c:	9e e4       	ldi	r25, 0x4E	; 78
    181e:	01 97       	sbiw	r24, 0x01	; 1
    1820:	f1 f7       	brne	.-4      	; 0x181e <NRF24_ini+0x1e>
    1822:	00 c0       	rjmp	.+0      	; 0x1824 <NRF24_ini+0x24>
    1824:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(EN_AA, 0x02); // Enable Pipe1
    1826:	62 e0       	ldi	r22, 0x02	; 2
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	nRF_write_register(EN_RXADDR, 0x02); // Enable Pipe1
    182e:	62 e0       	ldi	r22, 0x02	; 2
    1830:	82 e0       	ldi	r24, 0x02	; 2
    1832:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	nRF_write_register(SETUP_AW, 0x01); // Setup address width=3 bytes
    1836:	61 e0       	ldi	r22, 0x01	; 1
    1838:	83 e0       	ldi	r24, 0x03	; 3
    183a:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	nRF_write_register(SETUP_RETR, 0x5F); // // 1500us, 15 retrans
    183e:	6f e5       	ldi	r22, 0x5F	; 95
    1840:	84 e0       	ldi	r24, 0x04	; 4
    1842:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	NRF24_ToggleFeatures();
    1846:	0e 94 15 0b 	call	0x162a	; 0x162a <NRF24_ToggleFeatures>
	nRF_write_register(FEATURE, 0);
    184a:	60 e0       	ldi	r22, 0x00	; 0
    184c:	8d e1       	ldi	r24, 0x1D	; 29
    184e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	nRF_write_register(DYNPD, 0);
    1852:	60 e0       	ldi	r22, 0x00	; 0
    1854:	8c e1       	ldi	r24, 0x1C	; 28
    1856:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	nRF_write_register(STATUS, 0x70);//Reset flags for IRQ
    185a:	60 e7       	ldi	r22, 0x70	; 112
    185c:	87 e0       	ldi	r24, 0x07	; 7
    185e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	nRF_write_register(RF_CH, 76); // частота 2476 MHz
    1862:	6c e4       	ldi	r22, 0x4C	; 76
    1864:	85 e0       	ldi	r24, 0x05	; 5
    1866:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	nRF_write_register(RF_SETUP, 0x06); //TX_PWR:0dBm, Datarate:1Mbps
    186a:	66 e0       	ldi	r22, 0x06	; 6
    186c:	86 e0       	ldi	r24, 0x06	; 6
    186e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	NRF24_Write_Buf(TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);
    1872:	43 e0       	ldi	r20, 0x03	; 3
    1874:	62 e0       	ldi	r22, 0x02	; 2
    1876:	71 e0       	ldi	r23, 0x01	; 1
    1878:	80 e1       	ldi	r24, 0x10	; 16
    187a:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <NRF24_Write_Buf>
	NRF24_Write_Buf(RX_ADDR_P1, TX_ADDRESS, TX_ADR_WIDTH);
    187e:	43 e0       	ldi	r20, 0x03	; 3
    1880:	62 e0       	ldi	r22, 0x02	; 2
    1882:	71 e0       	ldi	r23, 0x01	; 1
    1884:	8b e0       	ldi	r24, 0x0B	; 11
    1886:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <NRF24_Write_Buf>
	nRF_write_register(RX_PW_P1, TX_PLOAD_WIDTH); //Number of bytes in RX payload in data pipe 1
    188a:	65 e0       	ldi	r22, 0x05	; 5
    188c:	82 e1       	ldi	r24, 0x12	; 18
    188e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <nRF_write_register>
	//пока уходим в режим приёмника
	NRF24L01_RX_Mode();
    1892:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <NRF24L01_RX_Mode>
    1896:	08 95       	ret

00001898 <mem_set>:
	return FR_OK;

fw_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    1898:	fc 01       	movw	r30, r24
    189a:	03 c0       	rjmp	.+6      	; 0x18a2 <mem_set+0xa>
    189c:	60 83       	st	Z, r22
    189e:	ac 01       	movw	r20, r24
    18a0:	31 96       	adiw	r30, 0x01	; 1
    18a2:	ca 01       	movw	r24, r20
    18a4:	01 97       	sbiw	r24, 0x01	; 1
    18a6:	45 2b       	or	r20, r21
    18a8:	c9 f7       	brne	.-14     	; 0x189c <mem_set+0x4>
    18aa:	08 95       	ret

000018ac <mem_cmp>:
    18ac:	cf 93       	push	r28
    18ae:	df 93       	push	r29
    18b0:	dc 01       	movw	r26, r24
    18b2:	fb 01       	movw	r30, r22
    18b4:	80 e0       	ldi	r24, 0x00	; 0
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	02 c0       	rjmp	.+4      	; 0x18be <mem_cmp+0x12>
    18ba:	fb 01       	movw	r30, r22
    18bc:	de 01       	movw	r26, r28
    18be:	9a 01       	movw	r18, r20
    18c0:	21 50       	subi	r18, 0x01	; 1
    18c2:	31 09       	sbc	r19, r1
    18c4:	45 2b       	or	r20, r21
    18c6:	61 f0       	breq	.+24     	; 0x18e0 <mem_cmp+0x34>
    18c8:	ed 01       	movw	r28, r26
    18ca:	21 96       	adiw	r28, 0x01	; 1
    18cc:	8c 91       	ld	r24, X
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	bf 01       	movw	r22, r30
    18d2:	6f 5f       	subi	r22, 0xFF	; 255
    18d4:	7f 4f       	sbci	r23, 0xFF	; 255
    18d6:	40 81       	ld	r20, Z
    18d8:	84 1b       	sub	r24, r20
    18da:	91 09       	sbc	r25, r1
    18dc:	a9 01       	movw	r20, r18
    18de:	69 f3       	breq	.-38     	; 0x18ba <mem_cmp+0xe>
    18e0:	df 91       	pop	r29
    18e2:	cf 91       	pop	r28
    18e4:	08 95       	ret

000018e6 <clust2sect>:
    18e6:	0f 93       	push	r16
    18e8:	1f 93       	push	r17
    18ea:	e0 91 1f 06 	lds	r30, 0x061F	; 0x80061f <FatFs>
    18ee:	f0 91 20 06 	lds	r31, 0x0620	; 0x800620 <FatFs+0x1>
    18f2:	9b 01       	movw	r18, r22
    18f4:	ac 01       	movw	r20, r24
    18f6:	22 50       	subi	r18, 0x02	; 2
    18f8:	31 09       	sbc	r19, r1
    18fa:	41 09       	sbc	r20, r1
    18fc:	51 09       	sbc	r21, r1
    18fe:	80 85       	ldd	r24, Z+8	; 0x08
    1900:	91 85       	ldd	r25, Z+9	; 0x09
    1902:	a2 85       	ldd	r26, Z+10	; 0x0a
    1904:	b3 85       	ldd	r27, Z+11	; 0x0b
    1906:	02 97       	sbiw	r24, 0x02	; 2
    1908:	a1 09       	sbc	r26, r1
    190a:	b1 09       	sbc	r27, r1
    190c:	28 17       	cp	r18, r24
    190e:	39 07       	cpc	r19, r25
    1910:	4a 07       	cpc	r20, r26
    1912:	5b 07       	cpc	r21, r27
    1914:	68 f4       	brcc	.+26     	; 0x1930 <clust2sect+0x4a>
    1916:	a1 81       	ldd	r26, Z+1	; 0x01
    1918:	b0 e0       	ldi	r27, 0x00	; 0
    191a:	0e 94 b6 1a 	call	0x356c	; 0x356c <__muluhisi3>
    191e:	04 89       	ldd	r16, Z+20	; 0x14
    1920:	15 89       	ldd	r17, Z+21	; 0x15
    1922:	26 89       	ldd	r18, Z+22	; 0x16
    1924:	37 89       	ldd	r19, Z+23	; 0x17
    1926:	60 0f       	add	r22, r16
    1928:	71 1f       	adc	r23, r17
    192a:	82 1f       	adc	r24, r18
    192c:	93 1f       	adc	r25, r19
    192e:	03 c0       	rjmp	.+6      	; 0x1936 <clust2sect+0x50>
    1930:	60 e0       	ldi	r22, 0x00	; 0
    1932:	70 e0       	ldi	r23, 0x00	; 0
    1934:	cb 01       	movw	r24, r22
    1936:	1f 91       	pop	r17
    1938:	0f 91       	pop	r16
    193a:	08 95       	ret

0000193c <dir_rewind>:
    193c:	0f 93       	push	r16
    193e:	1f 93       	push	r17
    1940:	cf 93       	push	r28
    1942:	df 93       	push	r29
    1944:	fc 01       	movw	r30, r24
    1946:	a0 91 1f 06 	lds	r26, 0x061F	; 0x80061f <FatFs>
    194a:	b0 91 20 06 	lds	r27, 0x0620	; 0x800620 <FatFs+0x1>
    194e:	11 82       	std	Z+1, r1	; 0x01
    1950:	10 82       	st	Z, r1
    1952:	64 81       	ldd	r22, Z+4	; 0x04
    1954:	75 81       	ldd	r23, Z+5	; 0x05
    1956:	86 81       	ldd	r24, Z+6	; 0x06
    1958:	97 81       	ldd	r25, Z+7	; 0x07
    195a:	61 30       	cpi	r22, 0x01	; 1
    195c:	71 05       	cpc	r23, r1
    195e:	81 05       	cpc	r24, r1
    1960:	91 05       	cpc	r25, r1
    1962:	91 f1       	breq	.+100    	; 0x19c8 <dir_rewind+0x8c>
    1964:	18 96       	adiw	r26, 0x08	; 8
    1966:	0d 91       	ld	r16, X+
    1968:	1d 91       	ld	r17, X+
    196a:	2d 91       	ld	r18, X+
    196c:	3c 91       	ld	r19, X
    196e:	1b 97       	sbiw	r26, 0x0b	; 11
    1970:	60 17       	cp	r22, r16
    1972:	71 07       	cpc	r23, r17
    1974:	82 07       	cpc	r24, r18
    1976:	93 07       	cpc	r25, r19
    1978:	48 f5       	brcc	.+82     	; 0x19cc <dir_rewind+0x90>
    197a:	61 15       	cp	r22, r1
    197c:	71 05       	cpc	r23, r1
    197e:	81 05       	cpc	r24, r1
    1980:	91 05       	cpc	r25, r1
    1982:	49 f4       	brne	.+18     	; 0x1996 <dir_rewind+0x5a>
    1984:	2c 91       	ld	r18, X
    1986:	23 30       	cpi	r18, 0x03	; 3
    1988:	31 f4       	brne	.+12     	; 0x1996 <dir_rewind+0x5a>
    198a:	50 96       	adiw	r26, 0x10	; 16
    198c:	6d 91       	ld	r22, X+
    198e:	7d 91       	ld	r23, X+
    1990:	8d 91       	ld	r24, X+
    1992:	9c 91       	ld	r25, X
    1994:	53 97       	sbiw	r26, 0x13	; 19
    1996:	ef 01       	movw	r28, r30
    1998:	60 87       	std	Z+8, r22	; 0x08
    199a:	71 87       	std	Z+9, r23	; 0x09
    199c:	82 87       	std	Z+10, r24	; 0x0a
    199e:	93 87       	std	Z+11, r25	; 0x0b
    19a0:	61 15       	cp	r22, r1
    19a2:	71 05       	cpc	r23, r1
    19a4:	81 05       	cpc	r24, r1
    19a6:	91 05       	cpc	r25, r1
    19a8:	19 f0       	breq	.+6      	; 0x19b0 <dir_rewind+0x74>
    19aa:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <clust2sect>
    19ae:	06 c0       	rjmp	.+12     	; 0x19bc <dir_rewind+0x80>
    19b0:	50 96       	adiw	r26, 0x10	; 16
    19b2:	6d 91       	ld	r22, X+
    19b4:	7d 91       	ld	r23, X+
    19b6:	8d 91       	ld	r24, X+
    19b8:	9c 91       	ld	r25, X
    19ba:	53 97       	sbiw	r26, 0x13	; 19
    19bc:	6c 87       	std	Y+12, r22	; 0x0c
    19be:	7d 87       	std	Y+13, r23	; 0x0d
    19c0:	8e 87       	std	Y+14, r24	; 0x0e
    19c2:	9f 87       	std	Y+15, r25	; 0x0f
    19c4:	80 e0       	ldi	r24, 0x00	; 0
    19c6:	03 c0       	rjmp	.+6      	; 0x19ce <dir_rewind+0x92>
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	01 c0       	rjmp	.+2      	; 0x19ce <dir_rewind+0x92>
    19cc:	81 e0       	ldi	r24, 0x01	; 1
    19ce:	df 91       	pop	r29
    19d0:	cf 91       	pop	r28
    19d2:	1f 91       	pop	r17
    19d4:	0f 91       	pop	r16
    19d6:	08 95       	ret

000019d8 <create_name>:
    19d8:	0f 93       	push	r16
    19da:	1f 93       	push	r17
    19dc:	cf 93       	push	r28
    19de:	df 93       	push	r29
    19e0:	eb 01       	movw	r28, r22
    19e2:	fc 01       	movw	r30, r24
    19e4:	02 81       	ldd	r16, Z+2	; 0x02
    19e6:	13 81       	ldd	r17, Z+3	; 0x03
    19e8:	4b e0       	ldi	r20, 0x0B	; 11
    19ea:	50 e0       	ldi	r21, 0x00	; 0
    19ec:	60 e2       	ldi	r22, 0x20	; 32
    19ee:	70 e0       	ldi	r23, 0x00	; 0
    19f0:	c8 01       	movw	r24, r16
    19f2:	0e 94 4c 0c 	call	0x1898	; 0x1898 <mem_set>
    19f6:	28 81       	ld	r18, Y
    19f8:	39 81       	ldd	r19, Y+1	; 0x01
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	58 e0       	ldi	r21, 0x08	; 8
    1a00:	01 c0       	rjmp	.+2      	; 0x1a04 <create_name+0x2c>
    1a02:	84 2f       	mov	r24, r20
    1a04:	41 e0       	ldi	r20, 0x01	; 1
    1a06:	48 0f       	add	r20, r24
    1a08:	f9 01       	movw	r30, r18
    1a0a:	e8 0f       	add	r30, r24
    1a0c:	f1 1d       	adc	r31, r1
    1a0e:	80 81       	ld	r24, Z
    1a10:	81 32       	cpi	r24, 0x21	; 33
    1a12:	c0 f0       	brcs	.+48     	; 0x1a44 <create_name+0x6c>
    1a14:	8f 32       	cpi	r24, 0x2F	; 47
    1a16:	b1 f0       	breq	.+44     	; 0x1a44 <create_name+0x6c>
    1a18:	8e 32       	cpi	r24, 0x2E	; 46
    1a1a:	11 f0       	breq	.+4      	; 0x1a20 <create_name+0x48>
    1a1c:	95 17       	cp	r25, r21
    1a1e:	38 f0       	brcs	.+14     	; 0x1a2e <create_name+0x56>
    1a20:	58 30       	cpi	r21, 0x08	; 8
    1a22:	81 f4       	brne	.+32     	; 0x1a44 <create_name+0x6c>
    1a24:	8e 32       	cpi	r24, 0x2E	; 46
    1a26:	71 f4       	brne	.+28     	; 0x1a44 <create_name+0x6c>
    1a28:	98 e0       	ldi	r25, 0x08	; 8
    1a2a:	5b e0       	ldi	r21, 0x0B	; 11
    1a2c:	ea cf       	rjmp	.-44     	; 0x1a02 <create_name+0x2a>
    1a2e:	6f e9       	ldi	r22, 0x9F	; 159
    1a30:	68 0f       	add	r22, r24
    1a32:	6a 31       	cpi	r22, 0x1A	; 26
    1a34:	08 f4       	brcc	.+2      	; 0x1a38 <create_name+0x60>
    1a36:	80 52       	subi	r24, 0x20	; 32
    1a38:	f8 01       	movw	r30, r16
    1a3a:	e9 0f       	add	r30, r25
    1a3c:	f1 1d       	adc	r31, r1
    1a3e:	80 83       	st	Z, r24
    1a40:	9f 5f       	subi	r25, 0xFF	; 255
    1a42:	df cf       	rjmp	.-66     	; 0x1a02 <create_name+0x2a>
    1a44:	24 0f       	add	r18, r20
    1a46:	31 1d       	adc	r19, r1
    1a48:	39 83       	std	Y+1, r19	; 0x01
    1a4a:	28 83       	st	Y, r18
    1a4c:	91 e0       	ldi	r25, 0x01	; 1
    1a4e:	81 32       	cpi	r24, 0x21	; 33
    1a50:	08 f0       	brcs	.+2      	; 0x1a54 <create_name+0x7c>
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	f8 01       	movw	r30, r16
    1a56:	93 87       	std	Z+11, r25	; 0x0b
    1a58:	80 e0       	ldi	r24, 0x00	; 0
    1a5a:	df 91       	pop	r29
    1a5c:	cf 91       	pop	r28
    1a5e:	1f 91       	pop	r17
    1a60:	0f 91       	pop	r16
    1a62:	08 95       	ret

00001a64 <check_fs>:
    1a64:	cf 92       	push	r12
    1a66:	df 92       	push	r13
    1a68:	ef 92       	push	r14
    1a6a:	ff 92       	push	r15
    1a6c:	0f 93       	push	r16
    1a6e:	1f 93       	push	r17
    1a70:	cf 93       	push	r28
    1a72:	df 93       	push	r29
    1a74:	ec 01       	movw	r28, r24
    1a76:	6a 01       	movw	r12, r20
    1a78:	7b 01       	movw	r14, r22
    1a7a:	02 e0       	ldi	r16, 0x02	; 2
    1a7c:	10 e0       	ldi	r17, 0x00	; 0
    1a7e:	2e ef       	ldi	r18, 0xFE	; 254
    1a80:	31 e0       	ldi	r19, 0x01	; 1
    1a82:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1a86:	81 11       	cpse	r24, r1
    1a88:	25 c0       	rjmp	.+74     	; 0x1ad4 <check_fs+0x70>
    1a8a:	88 81       	ld	r24, Y
    1a8c:	99 81       	ldd	r25, Y+1	; 0x01
    1a8e:	85 35       	cpi	r24, 0x55	; 85
    1a90:	9a 4a       	sbci	r25, 0xAA	; 170
    1a92:	11 f5       	brne	.+68     	; 0x1ad8 <check_fs+0x74>
    1a94:	26 e3       	ldi	r18, 0x36	; 54
    1a96:	30 e0       	ldi	r19, 0x00	; 0
    1a98:	b7 01       	movw	r22, r14
    1a9a:	a6 01       	movw	r20, r12
    1a9c:	ce 01       	movw	r24, r28
    1a9e:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1aa2:	81 11       	cpse	r24, r1
    1aa4:	05 c0       	rjmp	.+10     	; 0x1ab0 <check_fs+0x4c>
    1aa6:	88 81       	ld	r24, Y
    1aa8:	99 81       	ldd	r25, Y+1	; 0x01
    1aaa:	86 34       	cpi	r24, 0x46	; 70
    1aac:	91 44       	sbci	r25, 0x41	; 65
    1aae:	b1 f0       	breq	.+44     	; 0x1adc <check_fs+0x78>
    1ab0:	02 e0       	ldi	r16, 0x02	; 2
    1ab2:	10 e0       	ldi	r17, 0x00	; 0
    1ab4:	22 e5       	ldi	r18, 0x52	; 82
    1ab6:	30 e0       	ldi	r19, 0x00	; 0
    1ab8:	b7 01       	movw	r22, r14
    1aba:	a6 01       	movw	r20, r12
    1abc:	ce 01       	movw	r24, r28
    1abe:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1ac2:	81 11       	cpse	r24, r1
    1ac4:	0d c0       	rjmp	.+26     	; 0x1ae0 <check_fs+0x7c>
    1ac6:	88 81       	ld	r24, Y
    1ac8:	99 81       	ldd	r25, Y+1	; 0x01
    1aca:	86 34       	cpi	r24, 0x46	; 70
    1acc:	91 44       	sbci	r25, 0x41	; 65
    1ace:	51 f0       	breq	.+20     	; 0x1ae4 <check_fs+0x80>
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	09 c0       	rjmp	.+18     	; 0x1ae6 <check_fs+0x82>
    1ad4:	83 e0       	ldi	r24, 0x03	; 3
    1ad6:	07 c0       	rjmp	.+14     	; 0x1ae6 <check_fs+0x82>
    1ad8:	82 e0       	ldi	r24, 0x02	; 2
    1ada:	05 c0       	rjmp	.+10     	; 0x1ae6 <check_fs+0x82>
    1adc:	80 e0       	ldi	r24, 0x00	; 0
    1ade:	03 c0       	rjmp	.+6      	; 0x1ae6 <check_fs+0x82>
    1ae0:	81 e0       	ldi	r24, 0x01	; 1
    1ae2:	01 c0       	rjmp	.+2      	; 0x1ae6 <check_fs+0x82>
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	df 91       	pop	r29
    1ae8:	cf 91       	pop	r28
    1aea:	1f 91       	pop	r17
    1aec:	0f 91       	pop	r16
    1aee:	ff 90       	pop	r15
    1af0:	ef 90       	pop	r14
    1af2:	df 90       	pop	r13
    1af4:	cf 90       	pop	r12
    1af6:	08 95       	ret

00001af8 <get_fat>:
    1af8:	4f 92       	push	r4
    1afa:	5f 92       	push	r5
    1afc:	6f 92       	push	r6
    1afe:	7f 92       	push	r7
    1b00:	8f 92       	push	r8
    1b02:	9f 92       	push	r9
    1b04:	af 92       	push	r10
    1b06:	bf 92       	push	r11
    1b08:	cf 92       	push	r12
    1b0a:	df 92       	push	r13
    1b0c:	ef 92       	push	r14
    1b0e:	ff 92       	push	r15
    1b10:	0f 93       	push	r16
    1b12:	1f 93       	push	r17
    1b14:	cf 93       	push	r28
    1b16:	df 93       	push	r29
    1b18:	00 d0       	rcall	.+0      	; 0x1b1a <get_fat+0x22>
    1b1a:	00 d0       	rcall	.+0      	; 0x1b1c <get_fat+0x24>
    1b1c:	cd b7       	in	r28, 0x3d	; 61
    1b1e:	de b7       	in	r29, 0x3e	; 62
    1b20:	e0 90 1f 06 	lds	r14, 0x061F	; 0x80061f <FatFs>
    1b24:	f0 90 20 06 	lds	r15, 0x0620	; 0x800620 <FatFs+0x1>
    1b28:	62 30       	cpi	r22, 0x02	; 2
    1b2a:	71 05       	cpc	r23, r1
    1b2c:	81 05       	cpc	r24, r1
    1b2e:	91 05       	cpc	r25, r1
    1b30:	08 f4       	brcc	.+2      	; 0x1b34 <get_fat+0x3c>
    1b32:	bf c0       	rjmp	.+382    	; 0x1cb2 <get_fat+0x1ba>
    1b34:	f7 01       	movw	r30, r14
    1b36:	80 84       	ldd	r8, Z+8	; 0x08
    1b38:	91 84       	ldd	r9, Z+9	; 0x09
    1b3a:	a2 84       	ldd	r10, Z+10	; 0x0a
    1b3c:	b3 84       	ldd	r11, Z+11	; 0x0b
    1b3e:	68 15       	cp	r22, r8
    1b40:	79 05       	cpc	r23, r9
    1b42:	8a 05       	cpc	r24, r10
    1b44:	9b 05       	cpc	r25, r11
    1b46:	08 f0       	brcs	.+2      	; 0x1b4a <get_fat+0x52>
    1b48:	b9 c0       	rjmp	.+370    	; 0x1cbc <get_fat+0x1c4>
    1b4a:	4b 01       	movw	r8, r22
    1b4c:	5c 01       	movw	r10, r24
    1b4e:	80 81       	ld	r24, Z
    1b50:	82 30       	cpi	r24, 0x02	; 2
    1b52:	09 f4       	brne	.+2      	; 0x1b56 <get_fat+0x5e>
    1b54:	62 c0       	rjmp	.+196    	; 0x1c1a <get_fat+0x122>
    1b56:	83 30       	cpi	r24, 0x03	; 3
    1b58:	09 f4       	brne	.+2      	; 0x1b5c <get_fat+0x64>
    1b5a:	7f c0       	rjmp	.+254    	; 0x1c5a <get_fat+0x162>
    1b5c:	81 30       	cpi	r24, 0x01	; 1
    1b5e:	09 f0       	breq	.+2      	; 0x1b62 <get_fat+0x6a>
    1b60:	b2 c0       	rjmp	.+356    	; 0x1cc6 <get_fat+0x1ce>
    1b62:	c4 01       	movw	r24, r8
    1b64:	96 95       	lsr	r25
    1b66:	87 95       	ror	r24
    1b68:	88 0d       	add	r24, r8
    1b6a:	99 1d       	adc	r25, r9
    1b6c:	9c 01       	movw	r18, r24
    1b6e:	31 70       	andi	r19, 0x01	; 1
    1b70:	89 2f       	mov	r24, r25
    1b72:	99 27       	eor	r25, r25
    1b74:	86 95       	lsr	r24
    1b76:	2f 3f       	cpi	r18, 0xFF	; 255
    1b78:	f1 e0       	ldi	r31, 0x01	; 1
    1b7a:	3f 07       	cpc	r19, r31
    1b7c:	91 f0       	breq	.+36     	; 0x1ba2 <get_fat+0xaa>
    1b7e:	f7 01       	movw	r30, r14
    1b80:	44 85       	ldd	r20, Z+12	; 0x0c
    1b82:	55 85       	ldd	r21, Z+13	; 0x0d
    1b84:	66 85       	ldd	r22, Z+14	; 0x0e
    1b86:	77 85       	ldd	r23, Z+15	; 0x0f
    1b88:	48 0f       	add	r20, r24
    1b8a:	59 1f       	adc	r21, r25
    1b8c:	61 1d       	adc	r22, r1
    1b8e:	71 1d       	adc	r23, r1
    1b90:	02 e0       	ldi	r16, 0x02	; 2
    1b92:	10 e0       	ldi	r17, 0x00	; 0
    1b94:	ce 01       	movw	r24, r28
    1b96:	01 96       	adiw	r24, 0x01	; 1
    1b98:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1b9c:	88 23       	and	r24, r24
    1b9e:	61 f1       	breq	.+88     	; 0x1bf8 <get_fat+0x100>
    1ba0:	97 c0       	rjmp	.+302    	; 0x1cd0 <get_fat+0x1d8>
    1ba2:	f7 01       	movw	r30, r14
    1ba4:	44 85       	ldd	r20, Z+12	; 0x0c
    1ba6:	55 85       	ldd	r21, Z+13	; 0x0d
    1ba8:	66 85       	ldd	r22, Z+14	; 0x0e
    1baa:	77 85       	ldd	r23, Z+15	; 0x0f
    1bac:	2c 01       	movw	r4, r24
    1bae:	61 2c       	mov	r6, r1
    1bb0:	71 2c       	mov	r7, r1
    1bb2:	44 0d       	add	r20, r4
    1bb4:	55 1d       	adc	r21, r5
    1bb6:	66 1d       	adc	r22, r6
    1bb8:	77 1d       	adc	r23, r7
    1bba:	01 e0       	ldi	r16, 0x01	; 1
    1bbc:	10 e0       	ldi	r17, 0x00	; 0
    1bbe:	2f ef       	ldi	r18, 0xFF	; 255
    1bc0:	31 e0       	ldi	r19, 0x01	; 1
    1bc2:	ce 01       	movw	r24, r28
    1bc4:	01 96       	adiw	r24, 0x01	; 1
    1bc6:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1bca:	81 11       	cpse	r24, r1
    1bcc:	86 c0       	rjmp	.+268    	; 0x1cda <get_fat+0x1e2>
    1bce:	f7 01       	movw	r30, r14
    1bd0:	44 85       	ldd	r20, Z+12	; 0x0c
    1bd2:	55 85       	ldd	r21, Z+13	; 0x0d
    1bd4:	66 85       	ldd	r22, Z+14	; 0x0e
    1bd6:	77 85       	ldd	r23, Z+15	; 0x0f
    1bd8:	44 0d       	add	r20, r4
    1bda:	55 1d       	adc	r21, r5
    1bdc:	66 1d       	adc	r22, r6
    1bde:	77 1d       	adc	r23, r7
    1be0:	4f 5f       	subi	r20, 0xFF	; 255
    1be2:	5f 4f       	sbci	r21, 0xFF	; 255
    1be4:	6f 4f       	sbci	r22, 0xFF	; 255
    1be6:	7f 4f       	sbci	r23, 0xFF	; 255
    1be8:	20 e0       	ldi	r18, 0x00	; 0
    1bea:	30 e0       	ldi	r19, 0x00	; 0
    1bec:	ce 01       	movw	r24, r28
    1bee:	02 96       	adiw	r24, 0x02	; 2
    1bf0:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1bf4:	81 11       	cpse	r24, r1
    1bf6:	76 c0       	rjmp	.+236    	; 0x1ce4 <get_fat+0x1ec>
    1bf8:	69 81       	ldd	r22, Y+1	; 0x01
    1bfa:	7a 81       	ldd	r23, Y+2	; 0x02
    1bfc:	80 fe       	sbrs	r8, 0
    1bfe:	09 c0       	rjmp	.+18     	; 0x1c12 <get_fat+0x11a>
    1c00:	72 95       	swap	r23
    1c02:	62 95       	swap	r22
    1c04:	6f 70       	andi	r22, 0x0F	; 15
    1c06:	67 27       	eor	r22, r23
    1c08:	7f 70       	andi	r23, 0x0F	; 15
    1c0a:	67 27       	eor	r22, r23
    1c0c:	80 e0       	ldi	r24, 0x00	; 0
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	77 c0       	rjmp	.+238    	; 0x1d00 <get_fat+0x208>
    1c12:	7f 70       	andi	r23, 0x0F	; 15
    1c14:	80 e0       	ldi	r24, 0x00	; 0
    1c16:	90 e0       	ldi	r25, 0x00	; 0
    1c18:	73 c0       	rjmp	.+230    	; 0x1d00 <get_fat+0x208>
    1c1a:	94 01       	movw	r18, r8
    1c1c:	33 27       	eor	r19, r19
    1c1e:	22 0f       	add	r18, r18
    1c20:	33 1f       	adc	r19, r19
    1c22:	f7 01       	movw	r30, r14
    1c24:	c4 84       	ldd	r12, Z+12	; 0x0c
    1c26:	d5 84       	ldd	r13, Z+13	; 0x0d
    1c28:	e6 84       	ldd	r14, Z+14	; 0x0e
    1c2a:	f7 84       	ldd	r15, Z+15	; 0x0f
    1c2c:	bb 27       	eor	r27, r27
    1c2e:	ab 2d       	mov	r26, r11
    1c30:	9a 2d       	mov	r25, r10
    1c32:	89 2d       	mov	r24, r9
    1c34:	b7 01       	movw	r22, r14
    1c36:	a6 01       	movw	r20, r12
    1c38:	48 0f       	add	r20, r24
    1c3a:	59 1f       	adc	r21, r25
    1c3c:	6a 1f       	adc	r22, r26
    1c3e:	7b 1f       	adc	r23, r27
    1c40:	02 e0       	ldi	r16, 0x02	; 2
    1c42:	10 e0       	ldi	r17, 0x00	; 0
    1c44:	ce 01       	movw	r24, r28
    1c46:	01 96       	adiw	r24, 0x01	; 1
    1c48:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1c4c:	81 11       	cpse	r24, r1
    1c4e:	4f c0       	rjmp	.+158    	; 0x1cee <get_fat+0x1f6>
    1c50:	69 81       	ldd	r22, Y+1	; 0x01
    1c52:	7a 81       	ldd	r23, Y+2	; 0x02
    1c54:	80 e0       	ldi	r24, 0x00	; 0
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	53 c0       	rjmp	.+166    	; 0x1d00 <get_fat+0x208>
    1c5a:	94 01       	movw	r18, r8
    1c5c:	2f 77       	andi	r18, 0x7F	; 127
    1c5e:	33 27       	eor	r19, r19
    1c60:	22 0f       	add	r18, r18
    1c62:	33 1f       	adc	r19, r19
    1c64:	22 0f       	add	r18, r18
    1c66:	33 1f       	adc	r19, r19
    1c68:	f7 01       	movw	r30, r14
    1c6a:	c4 84       	ldd	r12, Z+12	; 0x0c
    1c6c:	d5 84       	ldd	r13, Z+13	; 0x0d
    1c6e:	e6 84       	ldd	r14, Z+14	; 0x0e
    1c70:	f7 84       	ldd	r15, Z+15	; 0x0f
    1c72:	d5 01       	movw	r26, r10
    1c74:	c4 01       	movw	r24, r8
    1c76:	68 94       	set
    1c78:	16 f8       	bld	r1, 6
    1c7a:	b6 95       	lsr	r27
    1c7c:	a7 95       	ror	r26
    1c7e:	97 95       	ror	r25
    1c80:	87 95       	ror	r24
    1c82:	16 94       	lsr	r1
    1c84:	d1 f7       	brne	.-12     	; 0x1c7a <get_fat+0x182>
    1c86:	b7 01       	movw	r22, r14
    1c88:	a6 01       	movw	r20, r12
    1c8a:	48 0f       	add	r20, r24
    1c8c:	59 1f       	adc	r21, r25
    1c8e:	6a 1f       	adc	r22, r26
    1c90:	7b 1f       	adc	r23, r27
    1c92:	04 e0       	ldi	r16, 0x04	; 4
    1c94:	10 e0       	ldi	r17, 0x00	; 0
    1c96:	ce 01       	movw	r24, r28
    1c98:	01 96       	adiw	r24, 0x01	; 1
    1c9a:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1c9e:	81 11       	cpse	r24, r1
    1ca0:	2b c0       	rjmp	.+86     	; 0x1cf8 <get_fat+0x200>
    1ca2:	89 81       	ldd	r24, Y+1	; 0x01
    1ca4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ca6:	ab 81       	ldd	r26, Y+3	; 0x03
    1ca8:	bc 81       	ldd	r27, Y+4	; 0x04
    1caa:	bc 01       	movw	r22, r24
    1cac:	cd 01       	movw	r24, r26
    1cae:	9f 70       	andi	r25, 0x0F	; 15
    1cb0:	27 c0       	rjmp	.+78     	; 0x1d00 <get_fat+0x208>
    1cb2:	61 e0       	ldi	r22, 0x01	; 1
    1cb4:	70 e0       	ldi	r23, 0x00	; 0
    1cb6:	80 e0       	ldi	r24, 0x00	; 0
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	22 c0       	rjmp	.+68     	; 0x1d00 <get_fat+0x208>
    1cbc:	61 e0       	ldi	r22, 0x01	; 1
    1cbe:	70 e0       	ldi	r23, 0x00	; 0
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	1d c0       	rjmp	.+58     	; 0x1d00 <get_fat+0x208>
    1cc6:	61 e0       	ldi	r22, 0x01	; 1
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	18 c0       	rjmp	.+48     	; 0x1d00 <get_fat+0x208>
    1cd0:	61 e0       	ldi	r22, 0x01	; 1
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	90 e0       	ldi	r25, 0x00	; 0
    1cd8:	13 c0       	rjmp	.+38     	; 0x1d00 <get_fat+0x208>
    1cda:	61 e0       	ldi	r22, 0x01	; 1
    1cdc:	70 e0       	ldi	r23, 0x00	; 0
    1cde:	80 e0       	ldi	r24, 0x00	; 0
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	0e c0       	rjmp	.+28     	; 0x1d00 <get_fat+0x208>
    1ce4:	61 e0       	ldi	r22, 0x01	; 1
    1ce6:	70 e0       	ldi	r23, 0x00	; 0
    1ce8:	80 e0       	ldi	r24, 0x00	; 0
    1cea:	90 e0       	ldi	r25, 0x00	; 0
    1cec:	09 c0       	rjmp	.+18     	; 0x1d00 <get_fat+0x208>
    1cee:	61 e0       	ldi	r22, 0x01	; 1
    1cf0:	70 e0       	ldi	r23, 0x00	; 0
    1cf2:	80 e0       	ldi	r24, 0x00	; 0
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	04 c0       	rjmp	.+8      	; 0x1d00 <get_fat+0x208>
    1cf8:	61 e0       	ldi	r22, 0x01	; 1
    1cfa:	70 e0       	ldi	r23, 0x00	; 0
    1cfc:	80 e0       	ldi	r24, 0x00	; 0
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	0f 90       	pop	r0
    1d02:	0f 90       	pop	r0
    1d04:	0f 90       	pop	r0
    1d06:	0f 90       	pop	r0
    1d08:	df 91       	pop	r29
    1d0a:	cf 91       	pop	r28
    1d0c:	1f 91       	pop	r17
    1d0e:	0f 91       	pop	r16
    1d10:	ff 90       	pop	r15
    1d12:	ef 90       	pop	r14
    1d14:	df 90       	pop	r13
    1d16:	cf 90       	pop	r12
    1d18:	bf 90       	pop	r11
    1d1a:	af 90       	pop	r10
    1d1c:	9f 90       	pop	r9
    1d1e:	8f 90       	pop	r8
    1d20:	7f 90       	pop	r7
    1d22:	6f 90       	pop	r6
    1d24:	5f 90       	pop	r5
    1d26:	4f 90       	pop	r4
    1d28:	08 95       	ret

00001d2a <dir_next>:
    1d2a:	cf 92       	push	r12
    1d2c:	df 92       	push	r13
    1d2e:	ef 92       	push	r14
    1d30:	ff 92       	push	r15
    1d32:	0f 93       	push	r16
    1d34:	1f 93       	push	r17
    1d36:	cf 93       	push	r28
    1d38:	df 93       	push	r29
    1d3a:	e0 90 1f 06 	lds	r14, 0x061F	; 0x80061f <FatFs>
    1d3e:	f0 90 20 06 	lds	r15, 0x0620	; 0x800620 <FatFs+0x1>
    1d42:	fc 01       	movw	r30, r24
    1d44:	c0 81       	ld	r28, Z
    1d46:	d1 81       	ldd	r29, Z+1	; 0x01
    1d48:	21 96       	adiw	r28, 0x01	; 1
    1d4a:	09 f4       	brne	.+2      	; 0x1d4e <dir_next+0x24>
    1d4c:	5c c0       	rjmp	.+184    	; 0x1e06 <dir_next+0xdc>
    1d4e:	44 85       	ldd	r20, Z+12	; 0x0c
    1d50:	55 85       	ldd	r21, Z+13	; 0x0d
    1d52:	66 85       	ldd	r22, Z+14	; 0x0e
    1d54:	77 85       	ldd	r23, Z+15	; 0x0f
    1d56:	41 15       	cp	r20, r1
    1d58:	51 05       	cpc	r21, r1
    1d5a:	61 05       	cpc	r22, r1
    1d5c:	71 05       	cpc	r23, r1
    1d5e:	09 f4       	brne	.+2      	; 0x1d62 <dir_next+0x38>
    1d60:	54 c0       	rjmp	.+168    	; 0x1e0a <dir_next+0xe0>
    1d62:	8c 01       	movw	r16, r24
    1d64:	ce 01       	movw	r24, r28
    1d66:	8f 70       	andi	r24, 0x0F	; 15
    1d68:	99 27       	eor	r25, r25
    1d6a:	89 2b       	or	r24, r25
    1d6c:	09 f0       	breq	.+2      	; 0x1d70 <dir_next+0x46>
    1d6e:	46 c0       	rjmp	.+140    	; 0x1dfc <dir_next+0xd2>
    1d70:	4f 5f       	subi	r20, 0xFF	; 255
    1d72:	5f 4f       	sbci	r21, 0xFF	; 255
    1d74:	6f 4f       	sbci	r22, 0xFF	; 255
    1d76:	7f 4f       	sbci	r23, 0xFF	; 255
    1d78:	44 87       	std	Z+12, r20	; 0x0c
    1d7a:	55 87       	std	Z+13, r21	; 0x0d
    1d7c:	66 87       	std	Z+14, r22	; 0x0e
    1d7e:	77 87       	std	Z+15, r23	; 0x0f
    1d80:	40 85       	ldd	r20, Z+8	; 0x08
    1d82:	51 85       	ldd	r21, Z+9	; 0x09
    1d84:	62 85       	ldd	r22, Z+10	; 0x0a
    1d86:	73 85       	ldd	r23, Z+11	; 0x0b
    1d88:	41 15       	cp	r20, r1
    1d8a:	51 05       	cpc	r21, r1
    1d8c:	61 05       	cpc	r22, r1
    1d8e:	71 05       	cpc	r23, r1
    1d90:	39 f4       	brne	.+14     	; 0x1da0 <dir_next+0x76>
    1d92:	f7 01       	movw	r30, r14
    1d94:	84 81       	ldd	r24, Z+4	; 0x04
    1d96:	95 81       	ldd	r25, Z+5	; 0x05
    1d98:	c8 17       	cp	r28, r24
    1d9a:	d9 07       	cpc	r29, r25
    1d9c:	c0 f5       	brcc	.+112    	; 0x1e0e <dir_next+0xe4>
    1d9e:	2e c0       	rjmp	.+92     	; 0x1dfc <dir_next+0xd2>
    1da0:	f7 01       	movw	r30, r14
    1da2:	81 81       	ldd	r24, Z+1	; 0x01
    1da4:	90 e0       	ldi	r25, 0x00	; 0
    1da6:	01 97       	sbiw	r24, 0x01	; 1
    1da8:	9e 01       	movw	r18, r28
    1daa:	32 95       	swap	r19
    1dac:	22 95       	swap	r18
    1dae:	2f 70       	andi	r18, 0x0F	; 15
    1db0:	23 27       	eor	r18, r19
    1db2:	3f 70       	andi	r19, 0x0F	; 15
    1db4:	23 27       	eor	r18, r19
    1db6:	82 23       	and	r24, r18
    1db8:	93 23       	and	r25, r19
    1dba:	89 2b       	or	r24, r25
    1dbc:	f9 f4       	brne	.+62     	; 0x1dfc <dir_next+0xd2>
    1dbe:	cb 01       	movw	r24, r22
    1dc0:	ba 01       	movw	r22, r20
    1dc2:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <get_fat>
    1dc6:	62 30       	cpi	r22, 0x02	; 2
    1dc8:	71 05       	cpc	r23, r1
    1dca:	81 05       	cpc	r24, r1
    1dcc:	91 05       	cpc	r25, r1
    1dce:	08 f1       	brcs	.+66     	; 0x1e12 <dir_next+0xe8>
    1dd0:	f7 01       	movw	r30, r14
    1dd2:	c0 84       	ldd	r12, Z+8	; 0x08
    1dd4:	d1 84       	ldd	r13, Z+9	; 0x09
    1dd6:	e2 84       	ldd	r14, Z+10	; 0x0a
    1dd8:	f3 84       	ldd	r15, Z+11	; 0x0b
    1dda:	6c 15       	cp	r22, r12
    1ddc:	7d 05       	cpc	r23, r13
    1dde:	8e 05       	cpc	r24, r14
    1de0:	9f 05       	cpc	r25, r15
    1de2:	c8 f4       	brcc	.+50     	; 0x1e16 <dir_next+0xec>
    1de4:	f8 01       	movw	r30, r16
    1de6:	60 87       	std	Z+8, r22	; 0x08
    1de8:	71 87       	std	Z+9, r23	; 0x09
    1dea:	82 87       	std	Z+10, r24	; 0x0a
    1dec:	93 87       	std	Z+11, r25	; 0x0b
    1dee:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <clust2sect>
    1df2:	f8 01       	movw	r30, r16
    1df4:	64 87       	std	Z+12, r22	; 0x0c
    1df6:	75 87       	std	Z+13, r23	; 0x0d
    1df8:	86 87       	std	Z+14, r24	; 0x0e
    1dfa:	97 87       	std	Z+15, r25	; 0x0f
    1dfc:	f8 01       	movw	r30, r16
    1dfe:	d1 83       	std	Z+1, r29	; 0x01
    1e00:	c0 83       	st	Z, r28
    1e02:	80 e0       	ldi	r24, 0x00	; 0
    1e04:	09 c0       	rjmp	.+18     	; 0x1e18 <dir_next+0xee>
    1e06:	83 e0       	ldi	r24, 0x03	; 3
    1e08:	07 c0       	rjmp	.+14     	; 0x1e18 <dir_next+0xee>
    1e0a:	83 e0       	ldi	r24, 0x03	; 3
    1e0c:	05 c0       	rjmp	.+10     	; 0x1e18 <dir_next+0xee>
    1e0e:	83 e0       	ldi	r24, 0x03	; 3
    1e10:	03 c0       	rjmp	.+6      	; 0x1e18 <dir_next+0xee>
    1e12:	81 e0       	ldi	r24, 0x01	; 1
    1e14:	01 c0       	rjmp	.+2      	; 0x1e18 <dir_next+0xee>
    1e16:	83 e0       	ldi	r24, 0x03	; 3
    1e18:	df 91       	pop	r29
    1e1a:	cf 91       	pop	r28
    1e1c:	1f 91       	pop	r17
    1e1e:	0f 91       	pop	r16
    1e20:	ff 90       	pop	r15
    1e22:	ef 90       	pop	r14
    1e24:	df 90       	pop	r13
    1e26:	cf 90       	pop	r12
    1e28:	08 95       	ret

00001e2a <dir_find>:
    1e2a:	df 92       	push	r13
    1e2c:	ef 92       	push	r14
    1e2e:	ff 92       	push	r15
    1e30:	0f 93       	push	r16
    1e32:	1f 93       	push	r17
    1e34:	cf 93       	push	r28
    1e36:	df 93       	push	r29
    1e38:	7c 01       	movw	r14, r24
    1e3a:	0e 94 9e 0c 	call	0x193c	; 0x193c <dir_rewind>
    1e3e:	81 11       	cpse	r24, r1
    1e40:	3e c0       	rjmp	.+124    	; 0x1ebe <dir_find+0x94>
    1e42:	e0 91 1f 06 	lds	r30, 0x061F	; 0x80061f <FatFs>
    1e46:	f0 91 20 06 	lds	r31, 0x0620	; 0x800620 <FatFs+0x1>
    1e4a:	c6 81       	ldd	r28, Z+6	; 0x06
    1e4c:	d7 81       	ldd	r29, Z+7	; 0x07
    1e4e:	f7 01       	movw	r30, r14
    1e50:	20 81       	ld	r18, Z
    1e52:	31 81       	ldd	r19, Z+1	; 0x01
    1e54:	2f 70       	andi	r18, 0x0F	; 15
    1e56:	33 27       	eor	r19, r19
    1e58:	22 0f       	add	r18, r18
    1e5a:	33 1f       	adc	r19, r19
    1e5c:	22 95       	swap	r18
    1e5e:	32 95       	swap	r19
    1e60:	30 7f       	andi	r19, 0xF0	; 240
    1e62:	32 27       	eor	r19, r18
    1e64:	20 7f       	andi	r18, 0xF0	; 240
    1e66:	32 27       	eor	r19, r18
    1e68:	44 85       	ldd	r20, Z+12	; 0x0c
    1e6a:	55 85       	ldd	r21, Z+13	; 0x0d
    1e6c:	66 85       	ldd	r22, Z+14	; 0x0e
    1e6e:	77 85       	ldd	r23, Z+15	; 0x0f
    1e70:	00 e2       	ldi	r16, 0x20	; 32
    1e72:	10 e0       	ldi	r17, 0x00	; 0
    1e74:	ce 01       	movw	r24, r28
    1e76:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    1e7a:	91 e0       	ldi	r25, 0x01	; 1
    1e7c:	81 11       	cpse	r24, r1
    1e7e:	01 c0       	rjmp	.+2      	; 0x1e82 <dir_find+0x58>
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	d9 2e       	mov	r13, r25
    1e84:	91 11       	cpse	r25, r1
    1e86:	16 c0       	rjmp	.+44     	; 0x1eb4 <dir_find+0x8a>
    1e88:	88 81       	ld	r24, Y
    1e8a:	88 23       	and	r24, r24
    1e8c:	a9 f0       	breq	.+42     	; 0x1eb8 <dir_find+0x8e>
    1e8e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1e90:	83 fd       	sbrc	r24, 3
    1e92:	0a c0       	rjmp	.+20     	; 0x1ea8 <dir_find+0x7e>
    1e94:	f7 01       	movw	r30, r14
    1e96:	62 81       	ldd	r22, Z+2	; 0x02
    1e98:	73 81       	ldd	r23, Z+3	; 0x03
    1e9a:	4b e0       	ldi	r20, 0x0B	; 11
    1e9c:	50 e0       	ldi	r21, 0x00	; 0
    1e9e:	ce 01       	movw	r24, r28
    1ea0:	0e 94 56 0c 	call	0x18ac	; 0x18ac <mem_cmp>
    1ea4:	89 2b       	or	r24, r25
    1ea6:	51 f0       	breq	.+20     	; 0x1ebc <dir_find+0x92>
    1ea8:	c7 01       	movw	r24, r14
    1eaa:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <dir_next>
    1eae:	88 23       	and	r24, r24
    1eb0:	71 f2       	breq	.-100    	; 0x1e4e <dir_find+0x24>
    1eb2:	05 c0       	rjmp	.+10     	; 0x1ebe <dir_find+0x94>
    1eb4:	89 2f       	mov	r24, r25
    1eb6:	03 c0       	rjmp	.+6      	; 0x1ebe <dir_find+0x94>
    1eb8:	83 e0       	ldi	r24, 0x03	; 3
    1eba:	01 c0       	rjmp	.+2      	; 0x1ebe <dir_find+0x94>
    1ebc:	8d 2d       	mov	r24, r13
    1ebe:	df 91       	pop	r29
    1ec0:	cf 91       	pop	r28
    1ec2:	1f 91       	pop	r17
    1ec4:	0f 91       	pop	r16
    1ec6:	ff 90       	pop	r15
    1ec8:	ef 90       	pop	r14
    1eca:	df 90       	pop	r13
    1ecc:	08 95       	ret

00001ece <follow_path>:
    1ece:	0f 93       	push	r16
    1ed0:	1f 93       	push	r17
    1ed2:	cf 93       	push	r28
    1ed4:	df 93       	push	r29
    1ed6:	00 d0       	rcall	.+0      	; 0x1ed8 <follow_path+0xa>
    1ed8:	cd b7       	in	r28, 0x3d	; 61
    1eda:	de b7       	in	r29, 0x3e	; 62
    1edc:	8c 01       	movw	r16, r24
    1ede:	7a 83       	std	Y+2, r23	; 0x02
    1ee0:	69 83       	std	Y+1, r22	; 0x01
    1ee2:	03 c0       	rjmp	.+6      	; 0x1eea <follow_path+0x1c>
    1ee4:	31 96       	adiw	r30, 0x01	; 1
    1ee6:	fa 83       	std	Y+2, r31	; 0x02
    1ee8:	e9 83       	std	Y+1, r30	; 0x01
    1eea:	e9 81       	ldd	r30, Y+1	; 0x01
    1eec:	fa 81       	ldd	r31, Y+2	; 0x02
    1eee:	80 81       	ld	r24, Z
    1ef0:	80 32       	cpi	r24, 0x20	; 32
    1ef2:	c1 f3       	breq	.-16     	; 0x1ee4 <follow_path+0x16>
    1ef4:	8f 32       	cpi	r24, 0x2F	; 47
    1ef6:	19 f4       	brne	.+6      	; 0x1efe <follow_path+0x30>
    1ef8:	31 96       	adiw	r30, 0x01	; 1
    1efa:	fa 83       	std	Y+2, r31	; 0x02
    1efc:	e9 83       	std	Y+1, r30	; 0x01
    1efe:	d8 01       	movw	r26, r16
    1f00:	14 96       	adiw	r26, 0x04	; 4
    1f02:	1d 92       	st	X+, r1
    1f04:	1d 92       	st	X+, r1
    1f06:	1d 92       	st	X+, r1
    1f08:	1c 92       	st	X, r1
    1f0a:	17 97       	sbiw	r26, 0x07	; 7
    1f0c:	e9 81       	ldd	r30, Y+1	; 0x01
    1f0e:	fa 81       	ldd	r31, Y+2	; 0x02
    1f10:	80 81       	ld	r24, Z
    1f12:	81 32       	cpi	r24, 0x21	; 33
    1f14:	60 f4       	brcc	.+24     	; 0x1f2e <follow_path+0x60>
    1f16:	c8 01       	movw	r24, r16
    1f18:	0e 94 9e 0c 	call	0x193c	; 0x193c <dir_rewind>
    1f1c:	e0 91 1f 06 	lds	r30, 0x061F	; 0x80061f <FatFs>
    1f20:	f0 91 20 06 	lds	r31, 0x0620	; 0x800620 <FatFs+0x1>
    1f24:	06 80       	ldd	r0, Z+6	; 0x06
    1f26:	f7 81       	ldd	r31, Z+7	; 0x07
    1f28:	e0 2d       	mov	r30, r0
    1f2a:	10 82       	st	Z, r1
    1f2c:	42 c0       	rjmp	.+132    	; 0x1fb2 <follow_path+0xe4>
    1f2e:	be 01       	movw	r22, r28
    1f30:	6f 5f       	subi	r22, 0xFF	; 255
    1f32:	7f 4f       	sbci	r23, 0xFF	; 255
    1f34:	c8 01       	movw	r24, r16
    1f36:	0e 94 ec 0c 	call	0x19d8	; 0x19d8 <create_name>
    1f3a:	81 11       	cpse	r24, r1
    1f3c:	3a c0       	rjmp	.+116    	; 0x1fb2 <follow_path+0xe4>
    1f3e:	c8 01       	movw	r24, r16
    1f40:	0e 94 15 0f 	call	0x1e2a	; 0x1e2a <dir_find>
    1f44:	88 23       	and	r24, r24
    1f46:	59 f0       	breq	.+22     	; 0x1f5e <follow_path+0x90>
    1f48:	83 30       	cpi	r24, 0x03	; 3
    1f4a:	99 f5       	brne	.+102    	; 0x1fb2 <follow_path+0xe4>
    1f4c:	d8 01       	movw	r26, r16
    1f4e:	12 96       	adiw	r26, 0x02	; 2
    1f50:	ed 91       	ld	r30, X+
    1f52:	fc 91       	ld	r31, X
    1f54:	13 97       	sbiw	r26, 0x03	; 3
    1f56:	93 85       	ldd	r25, Z+11	; 0x0b
    1f58:	99 23       	and	r25, r25
    1f5a:	41 f1       	breq	.+80     	; 0x1fac <follow_path+0xde>
    1f5c:	2a c0       	rjmp	.+84     	; 0x1fb2 <follow_path+0xe4>
    1f5e:	d8 01       	movw	r26, r16
    1f60:	12 96       	adiw	r26, 0x02	; 2
    1f62:	ed 91       	ld	r30, X+
    1f64:	fc 91       	ld	r31, X
    1f66:	13 97       	sbiw	r26, 0x03	; 3
    1f68:	93 85       	ldd	r25, Z+11	; 0x0b
    1f6a:	91 11       	cpse	r25, r1
    1f6c:	22 c0       	rjmp	.+68     	; 0x1fb2 <follow_path+0xe4>
    1f6e:	e0 91 1f 06 	lds	r30, 0x061F	; 0x80061f <FatFs>
    1f72:	f0 91 20 06 	lds	r31, 0x0620	; 0x800620 <FatFs+0x1>
    1f76:	06 80       	ldd	r0, Z+6	; 0x06
    1f78:	f7 81       	ldd	r31, Z+7	; 0x07
    1f7a:	e0 2d       	mov	r30, r0
    1f7c:	83 85       	ldd	r24, Z+11	; 0x0b
    1f7e:	84 ff       	sbrs	r24, 4
    1f80:	17 c0       	rjmp	.+46     	; 0x1fb0 <follow_path+0xe2>
    1f82:	84 89       	ldd	r24, Z+20	; 0x14
    1f84:	95 89       	ldd	r25, Z+21	; 0x15
    1f86:	a0 e0       	ldi	r26, 0x00	; 0
    1f88:	b0 e0       	ldi	r27, 0x00	; 0
    1f8a:	bc 01       	movw	r22, r24
    1f8c:	55 27       	eor	r21, r21
    1f8e:	44 27       	eor	r20, r20
    1f90:	82 8d       	ldd	r24, Z+26	; 0x1a
    1f92:	93 8d       	ldd	r25, Z+27	; 0x1b
    1f94:	a0 e0       	ldi	r26, 0x00	; 0
    1f96:	b0 e0       	ldi	r27, 0x00	; 0
    1f98:	84 2b       	or	r24, r20
    1f9a:	95 2b       	or	r25, r21
    1f9c:	a6 2b       	or	r26, r22
    1f9e:	b7 2b       	or	r27, r23
    1fa0:	f8 01       	movw	r30, r16
    1fa2:	84 83       	std	Z+4, r24	; 0x04
    1fa4:	95 83       	std	Z+5, r25	; 0x05
    1fa6:	a6 83       	std	Z+6, r26	; 0x06
    1fa8:	b7 83       	std	Z+7, r27	; 0x07
    1faa:	c1 cf       	rjmp	.-126    	; 0x1f2e <follow_path+0x60>
    1fac:	84 e0       	ldi	r24, 0x04	; 4
    1fae:	01 c0       	rjmp	.+2      	; 0x1fb2 <follow_path+0xe4>
    1fb0:	84 e0       	ldi	r24, 0x04	; 4
    1fb2:	0f 90       	pop	r0
    1fb4:	0f 90       	pop	r0
    1fb6:	df 91       	pop	r29
    1fb8:	cf 91       	pop	r28
    1fba:	1f 91       	pop	r17
    1fbc:	0f 91       	pop	r16
    1fbe:	08 95       	ret

00001fc0 <pf_mount>:
    1fc0:	4f 92       	push	r4
    1fc2:	5f 92       	push	r5
    1fc4:	6f 92       	push	r6
    1fc6:	7f 92       	push	r7
    1fc8:	8f 92       	push	r8
    1fca:	9f 92       	push	r9
    1fcc:	af 92       	push	r10
    1fce:	bf 92       	push	r11
    1fd0:	df 92       	push	r13
    1fd2:	ef 92       	push	r14
    1fd4:	ff 92       	push	r15
    1fd6:	0f 93       	push	r16
    1fd8:	1f 93       	push	r17
    1fda:	cf 93       	push	r28
    1fdc:	df 93       	push	r29
    1fde:	cd b7       	in	r28, 0x3d	; 61
    1fe0:	de b7       	in	r29, 0x3e	; 62
    1fe2:	a8 97       	sbiw	r28, 0x28	; 40
    1fe4:	0f b6       	in	r0, 0x3f	; 63
    1fe6:	f8 94       	cli
    1fe8:	de bf       	out	0x3e, r29	; 62
    1fea:	0f be       	out	0x3f, r0	; 63
    1fec:	cd bf       	out	0x3d, r28	; 61
    1fee:	10 92 20 06 	sts	0x0620, r1	; 0x800620 <FatFs+0x1>
    1ff2:	10 92 1f 06 	sts	0x061F, r1	; 0x80061f <FatFs>
    1ff6:	00 97       	sbiw	r24, 0x00	; 0
    1ff8:	09 f4       	brne	.+2      	; 0x1ffc <pf_mount+0x3c>
    1ffa:	fb c0       	rjmp	.+502    	; 0x21f2 <pf_mount+0x232>
    1ffc:	7c 01       	movw	r14, r24
    1ffe:	0e 94 a5 08 	call	0x114a	; 0x114a <disk_initialize>
    2002:	80 fd       	sbrc	r24, 0
    2004:	f8 c0       	rjmp	.+496    	; 0x21f6 <pf_mount+0x236>
    2006:	40 e0       	ldi	r20, 0x00	; 0
    2008:	50 e0       	ldi	r21, 0x00	; 0
    200a:	ba 01       	movw	r22, r20
    200c:	ce 01       	movw	r24, r28
    200e:	01 96       	adiw	r24, 0x01	; 1
    2010:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <check_fs>
    2014:	d8 2e       	mov	r13, r24
    2016:	41 e0       	ldi	r20, 0x01	; 1
    2018:	84 13       	cpse	r24, r20
    201a:	1c c0       	rjmp	.+56     	; 0x2054 <pf_mount+0x94>
    201c:	00 e1       	ldi	r16, 0x10	; 16
    201e:	10 e0       	ldi	r17, 0x00	; 0
    2020:	2e eb       	ldi	r18, 0xBE	; 190
    2022:	31 e0       	ldi	r19, 0x01	; 1
    2024:	40 e0       	ldi	r20, 0x00	; 0
    2026:	50 e0       	ldi	r21, 0x00	; 0
    2028:	ba 01       	movw	r22, r20
    202a:	ce 01       	movw	r24, r28
    202c:	01 96       	adiw	r24, 0x01	; 1
    202e:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    2032:	81 11       	cpse	r24, r1
    2034:	13 c0       	rjmp	.+38     	; 0x205c <pf_mount+0x9c>
    2036:	8d 81       	ldd	r24, Y+5	; 0x05
    2038:	88 23       	and	r24, r24
    203a:	c1 f0       	breq	.+48     	; 0x206c <pf_mount+0xac>
    203c:	89 84       	ldd	r8, Y+9	; 0x09
    203e:	9a 84       	ldd	r9, Y+10	; 0x0a
    2040:	ab 84       	ldd	r10, Y+11	; 0x0b
    2042:	bc 84       	ldd	r11, Y+12	; 0x0c
    2044:	b5 01       	movw	r22, r10
    2046:	a4 01       	movw	r20, r8
    2048:	ce 01       	movw	r24, r28
    204a:	01 96       	adiw	r24, 0x01	; 1
    204c:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <check_fs>
    2050:	d8 2e       	mov	r13, r24
    2052:	0f c0       	rjmp	.+30     	; 0x2072 <pf_mount+0xb2>
    2054:	81 2c       	mov	r8, r1
    2056:	91 2c       	mov	r9, r1
    2058:	54 01       	movw	r10, r8
    205a:	0b c0       	rjmp	.+22     	; 0x2072 <pf_mount+0xb2>
    205c:	81 2c       	mov	r8, r1
    205e:	91 2c       	mov	r9, r1
    2060:	54 01       	movw	r10, r8
    2062:	0f 2e       	mov	r0, r31
    2064:	f3 e0       	ldi	r31, 0x03	; 3
    2066:	df 2e       	mov	r13, r31
    2068:	f0 2d       	mov	r31, r0
    206a:	03 c0       	rjmp	.+6      	; 0x2072 <pf_mount+0xb2>
    206c:	81 2c       	mov	r8, r1
    206e:	91 2c       	mov	r9, r1
    2070:	54 01       	movw	r10, r8
    2072:	53 e0       	ldi	r21, 0x03	; 3
    2074:	d5 16       	cp	r13, r21
    2076:	09 f4       	brne	.+2      	; 0x207a <pf_mount+0xba>
    2078:	c0 c0       	rjmp	.+384    	; 0x21fa <pf_mount+0x23a>
    207a:	d1 10       	cpse	r13, r1
    207c:	c0 c0       	rjmp	.+384    	; 0x21fe <pf_mount+0x23e>
    207e:	04 e2       	ldi	r16, 0x24	; 36
    2080:	10 e0       	ldi	r17, 0x00	; 0
    2082:	2d e0       	ldi	r18, 0x0D	; 13
    2084:	30 e0       	ldi	r19, 0x00	; 0
    2086:	b5 01       	movw	r22, r10
    2088:	a4 01       	movw	r20, r8
    208a:	ce 01       	movw	r24, r28
    208c:	01 96       	adiw	r24, 0x01	; 1
    208e:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    2092:	81 11       	cpse	r24, r1
    2094:	b6 c0       	rjmp	.+364    	; 0x2202 <pf_mount+0x242>
    2096:	2a 85       	ldd	r18, Y+10	; 0x0a
    2098:	3b 85       	ldd	r19, Y+11	; 0x0b
    209a:	40 e0       	ldi	r20, 0x00	; 0
    209c:	50 e0       	ldi	r21, 0x00	; 0
    209e:	21 15       	cp	r18, r1
    20a0:	31 05       	cpc	r19, r1
    20a2:	41 05       	cpc	r20, r1
    20a4:	51 05       	cpc	r21, r1
    20a6:	21 f4       	brne	.+8      	; 0x20b0 <pf_mount+0xf0>
    20a8:	28 8d       	ldd	r18, Y+24	; 0x18
    20aa:	39 8d       	ldd	r19, Y+25	; 0x19
    20ac:	4a 8d       	ldd	r20, Y+26	; 0x1a
    20ae:	5b 8d       	ldd	r21, Y+27	; 0x1b
    20b0:	ac 81       	ldd	r26, Y+4	; 0x04
    20b2:	b0 e0       	ldi	r27, 0x00	; 0
    20b4:	0e 94 b6 1a 	call	0x356c	; 0x356c <__muluhisi3>
    20b8:	6d a3       	std	Y+37, r22	; 0x25
    20ba:	7e a3       	std	Y+38, r23	; 0x26
    20bc:	8f a3       	std	Y+39, r24	; 0x27
    20be:	98 a7       	std	Y+40, r25	; 0x28
    20c0:	8a 81       	ldd	r24, Y+2	; 0x02
    20c2:	9b 81       	ldd	r25, Y+3	; 0x03
    20c4:	88 0e       	add	r8, r24
    20c6:	99 1e       	adc	r9, r25
    20c8:	a1 1c       	adc	r10, r1
    20ca:	b1 1c       	adc	r11, r1
    20cc:	d7 01       	movw	r26, r14
    20ce:	1c 96       	adiw	r26, 0x0c	; 12
    20d0:	8d 92       	st	X+, r8
    20d2:	9d 92       	st	X+, r9
    20d4:	ad 92       	st	X+, r10
    20d6:	bc 92       	st	X, r11
    20d8:	1f 97       	sbiw	r26, 0x0f	; 15
    20da:	e9 81       	ldd	r30, Y+1	; 0x01
    20dc:	11 96       	adiw	r26, 0x01	; 1
    20de:	ec 93       	st	X, r30
    20e0:	11 97       	sbiw	r26, 0x01	; 1
    20e2:	8d 81       	ldd	r24, Y+5	; 0x05
    20e4:	9e 81       	ldd	r25, Y+6	; 0x06
    20e6:	15 96       	adiw	r26, 0x05	; 5
    20e8:	9c 93       	st	X, r25
    20ea:	8e 93       	st	-X, r24
    20ec:	14 97       	sbiw	r26, 0x04	; 4
    20ee:	0f 81       	ldd	r16, Y+7	; 0x07
    20f0:	18 85       	ldd	r17, Y+8	; 0x08
    20f2:	20 e0       	ldi	r18, 0x00	; 0
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	01 15       	cp	r16, r1
    20f8:	11 05       	cpc	r17, r1
    20fa:	21 05       	cpc	r18, r1
    20fc:	31 05       	cpc	r19, r1
    20fe:	21 f4       	brne	.+8      	; 0x2108 <pf_mount+0x148>
    2100:	0c 89       	ldd	r16, Y+20	; 0x14
    2102:	1d 89       	ldd	r17, Y+21	; 0x15
    2104:	2e 89       	ldd	r18, Y+22	; 0x16
    2106:	3f 89       	ldd	r19, Y+23	; 0x17
    2108:	4a 81       	ldd	r20, Y+2	; 0x02
    210a:	5b 81       	ldd	r21, Y+3	; 0x03
    210c:	04 1b       	sub	r16, r20
    210e:	15 0b       	sbc	r17, r21
    2110:	21 09       	sbc	r18, r1
    2112:	31 09       	sbc	r19, r1
    2114:	4d a1       	ldd	r20, Y+37	; 0x25
    2116:	5e a1       	ldd	r21, Y+38	; 0x26
    2118:	6f a1       	ldd	r22, Y+39	; 0x27
    211a:	78 a5       	ldd	r23, Y+40	; 0x28
    211c:	04 1b       	sub	r16, r20
    211e:	15 0b       	sbc	r17, r21
    2120:	26 0b       	sbc	r18, r22
    2122:	37 0b       	sbc	r19, r23
    2124:	92 95       	swap	r25
    2126:	82 95       	swap	r24
    2128:	8f 70       	andi	r24, 0x0F	; 15
    212a:	89 27       	eor	r24, r25
    212c:	9f 70       	andi	r25, 0x0F	; 15
    212e:	89 27       	eor	r24, r25
    2130:	2c 01       	movw	r4, r24
    2132:	61 2c       	mov	r6, r1
    2134:	71 2c       	mov	r7, r1
    2136:	c9 01       	movw	r24, r18
    2138:	b8 01       	movw	r22, r16
    213a:	64 19       	sub	r22, r4
    213c:	75 09       	sbc	r23, r5
    213e:	86 09       	sbc	r24, r6
    2140:	97 09       	sbc	r25, r7
    2142:	2e 2f       	mov	r18, r30
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	40 e0       	ldi	r20, 0x00	; 0
    2148:	50 e0       	ldi	r21, 0x00	; 0
    214a:	0e 94 94 1a 	call	0x3528	; 0x3528 <__udivmodsi4>
    214e:	ba 01       	movw	r22, r20
    2150:	a9 01       	movw	r20, r18
    2152:	4e 5f       	subi	r20, 0xFE	; 254
    2154:	5f 4f       	sbci	r21, 0xFF	; 255
    2156:	6f 4f       	sbci	r22, 0xFF	; 255
    2158:	7f 4f       	sbci	r23, 0xFF	; 255
    215a:	d7 01       	movw	r26, r14
    215c:	18 96       	adiw	r26, 0x08	; 8
    215e:	4d 93       	st	X+, r20
    2160:	5d 93       	st	X+, r21
    2162:	6d 93       	st	X+, r22
    2164:	7c 93       	st	X, r23
    2166:	1b 97       	sbiw	r26, 0x0b	; 11
    2168:	47 3f       	cpi	r20, 0xF7	; 247
    216a:	bf e0       	ldi	r27, 0x0F	; 15
    216c:	5b 07       	cpc	r21, r27
    216e:	61 05       	cpc	r22, r1
    2170:	71 05       	cpc	r23, r1
    2172:	10 f4       	brcc	.+4      	; 0x2178 <pf_mount+0x1b8>
    2174:	81 e0       	ldi	r24, 0x01	; 1
    2176:	01 c0       	rjmp	.+2      	; 0x217a <pf_mount+0x1ba>
    2178:	82 e0       	ldi	r24, 0x02	; 2
    217a:	47 3f       	cpi	r20, 0xF7	; 247
    217c:	5f 4f       	sbci	r21, 0xFF	; 255
    217e:	61 05       	cpc	r22, r1
    2180:	71 05       	cpc	r23, r1
    2182:	08 f0       	brcs	.+2      	; 0x2186 <pf_mount+0x1c6>
    2184:	83 e0       	ldi	r24, 0x03	; 3
    2186:	d7 01       	movw	r26, r14
    2188:	8c 93       	st	X, r24
    218a:	83 30       	cpi	r24, 0x03	; 3
    218c:	51 f4       	brne	.+20     	; 0x21a2 <pf_mount+0x1e2>
    218e:	88 a1       	ldd	r24, Y+32	; 0x20
    2190:	99 a1       	ldd	r25, Y+33	; 0x21
    2192:	aa a1       	ldd	r26, Y+34	; 0x22
    2194:	bb a1       	ldd	r27, Y+35	; 0x23
    2196:	f7 01       	movw	r30, r14
    2198:	80 8b       	std	Z+16, r24	; 0x10
    219a:	91 8b       	std	Z+17, r25	; 0x11
    219c:	a2 8b       	std	Z+18, r26	; 0x12
    219e:	b3 8b       	std	Z+19, r27	; 0x13
    21a0:	0d c0       	rjmp	.+26     	; 0x21bc <pf_mount+0x1fc>
    21a2:	8d a1       	ldd	r24, Y+37	; 0x25
    21a4:	9e a1       	ldd	r25, Y+38	; 0x26
    21a6:	af a1       	ldd	r26, Y+39	; 0x27
    21a8:	b8 a5       	ldd	r27, Y+40	; 0x28
    21aa:	88 0d       	add	r24, r8
    21ac:	99 1d       	adc	r25, r9
    21ae:	aa 1d       	adc	r26, r10
    21b0:	bb 1d       	adc	r27, r11
    21b2:	f7 01       	movw	r30, r14
    21b4:	80 8b       	std	Z+16, r24	; 0x10
    21b6:	91 8b       	std	Z+17, r25	; 0x11
    21b8:	a2 8b       	std	Z+18, r26	; 0x12
    21ba:	b3 8b       	std	Z+19, r27	; 0x13
    21bc:	4d a1       	ldd	r20, Y+37	; 0x25
    21be:	5e a1       	ldd	r21, Y+38	; 0x26
    21c0:	6f a1       	ldd	r22, Y+39	; 0x27
    21c2:	78 a5       	ldd	r23, Y+40	; 0x28
    21c4:	84 0e       	add	r8, r20
    21c6:	95 1e       	adc	r9, r21
    21c8:	a6 1e       	adc	r10, r22
    21ca:	b7 1e       	adc	r11, r23
    21cc:	84 0c       	add	r8, r4
    21ce:	95 1c       	adc	r9, r5
    21d0:	a6 1c       	adc	r10, r6
    21d2:	b7 1c       	adc	r11, r7
    21d4:	d7 01       	movw	r26, r14
    21d6:	54 96       	adiw	r26, 0x14	; 20
    21d8:	8d 92       	st	X+, r8
    21da:	9d 92       	st	X+, r9
    21dc:	ad 92       	st	X+, r10
    21de:	bc 92       	st	X, r11
    21e0:	57 97       	sbiw	r26, 0x17	; 23
    21e2:	12 96       	adiw	r26, 0x02	; 2
    21e4:	1c 92       	st	X, r1
    21e6:	f0 92 20 06 	sts	0x0620, r15	; 0x800620 <FatFs+0x1>
    21ea:	e0 92 1f 06 	sts	0x061F, r14	; 0x80061f <FatFs>
    21ee:	80 e0       	ldi	r24, 0x00	; 0
    21f0:	09 c0       	rjmp	.+18     	; 0x2204 <pf_mount+0x244>
    21f2:	80 e0       	ldi	r24, 0x00	; 0
    21f4:	07 c0       	rjmp	.+14     	; 0x2204 <pf_mount+0x244>
    21f6:	82 e0       	ldi	r24, 0x02	; 2
    21f8:	05 c0       	rjmp	.+10     	; 0x2204 <pf_mount+0x244>
    21fa:	81 e0       	ldi	r24, 0x01	; 1
    21fc:	03 c0       	rjmp	.+6      	; 0x2204 <pf_mount+0x244>
    21fe:	87 e0       	ldi	r24, 0x07	; 7
    2200:	01 c0       	rjmp	.+2      	; 0x2204 <pf_mount+0x244>
    2202:	81 e0       	ldi	r24, 0x01	; 1
    2204:	a8 96       	adiw	r28, 0x28	; 40
    2206:	0f b6       	in	r0, 0x3f	; 63
    2208:	f8 94       	cli
    220a:	de bf       	out	0x3e, r29	; 62
    220c:	0f be       	out	0x3f, r0	; 63
    220e:	cd bf       	out	0x3d, r28	; 61
    2210:	df 91       	pop	r29
    2212:	cf 91       	pop	r28
    2214:	1f 91       	pop	r17
    2216:	0f 91       	pop	r16
    2218:	ff 90       	pop	r15
    221a:	ef 90       	pop	r14
    221c:	df 90       	pop	r13
    221e:	bf 90       	pop	r11
    2220:	af 90       	pop	r10
    2222:	9f 90       	pop	r9
    2224:	8f 90       	pop	r8
    2226:	7f 90       	pop	r7
    2228:	6f 90       	pop	r6
    222a:	5f 90       	pop	r5
    222c:	4f 90       	pop	r4
    222e:	08 95       	ret

00002230 <pf_open>:
    2230:	0f 93       	push	r16
    2232:	1f 93       	push	r17
    2234:	cf 93       	push	r28
    2236:	df 93       	push	r29
    2238:	cd b7       	in	r28, 0x3d	; 61
    223a:	de b7       	in	r29, 0x3e	; 62
    223c:	ec 97       	sbiw	r28, 0x3c	; 60
    223e:	0f b6       	in	r0, 0x3f	; 63
    2240:	f8 94       	cli
    2242:	de bf       	out	0x3e, r29	; 62
    2244:	0f be       	out	0x3f, r0	; 63
    2246:	cd bf       	out	0x3d, r28	; 61
    2248:	00 91 1f 06 	lds	r16, 0x061F	; 0x80061f <FatFs>
    224c:	10 91 20 06 	lds	r17, 0x0620	; 0x800620 <FatFs+0x1>
    2250:	01 15       	cp	r16, r1
    2252:	11 05       	cpc	r17, r1
    2254:	c9 f1       	breq	.+114    	; 0x22c8 <pf_open+0x98>
    2256:	bc 01       	movw	r22, r24
    2258:	f8 01       	movw	r30, r16
    225a:	12 82       	std	Z+2, r1	; 0x02
    225c:	ce 01       	movw	r24, r28
    225e:	4d 96       	adiw	r24, 0x1d	; 29
    2260:	97 83       	std	Z+7, r25	; 0x07
    2262:	86 83       	std	Z+6, r24	; 0x06
    2264:	0c 97       	sbiw	r24, 0x0c	; 12
    2266:	9c 83       	std	Y+4, r25	; 0x04
    2268:	8b 83       	std	Y+3, r24	; 0x03
    226a:	40 97       	sbiw	r24, 0x10	; 16
    226c:	0e 94 67 0f 	call	0x1ece	; 0x1ece <follow_path>
    2270:	81 11       	cpse	r24, r1
    2272:	2f c0       	rjmp	.+94     	; 0x22d2 <pf_open+0xa2>
    2274:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2276:	88 23       	and	r24, r24
    2278:	49 f1       	breq	.+82     	; 0x22cc <pf_open+0x9c>
    227a:	88 a5       	ldd	r24, Y+40	; 0x28
    227c:	84 fd       	sbrc	r24, 4
    227e:	28 c0       	rjmp	.+80     	; 0x22d0 <pf_open+0xa0>
    2280:	89 a9       	ldd	r24, Y+49	; 0x31
    2282:	9a a9       	ldd	r25, Y+50	; 0x32
    2284:	a0 e0       	ldi	r26, 0x00	; 0
    2286:	b0 e0       	ldi	r27, 0x00	; 0
    2288:	bc 01       	movw	r22, r24
    228a:	55 27       	eor	r21, r21
    228c:	44 27       	eor	r20, r20
    228e:	8f a9       	ldd	r24, Y+55	; 0x37
    2290:	98 ad       	ldd	r25, Y+56	; 0x38
    2292:	a0 e0       	ldi	r26, 0x00	; 0
    2294:	b0 e0       	ldi	r27, 0x00	; 0
    2296:	84 2b       	or	r24, r20
    2298:	95 2b       	or	r25, r21
    229a:	a6 2b       	or	r26, r22
    229c:	b7 2b       	or	r27, r23
    229e:	f8 01       	movw	r30, r16
    22a0:	80 a3       	std	Z+32, r24	; 0x20
    22a2:	91 a3       	std	Z+33, r25	; 0x21
    22a4:	a2 a3       	std	Z+34, r26	; 0x22
    22a6:	b3 a3       	std	Z+35, r27	; 0x23
    22a8:	89 ad       	ldd	r24, Y+57	; 0x39
    22aa:	9a ad       	ldd	r25, Y+58	; 0x3a
    22ac:	ab ad       	ldd	r26, Y+59	; 0x3b
    22ae:	bc ad       	ldd	r27, Y+60	; 0x3c
    22b0:	84 8f       	std	Z+28, r24	; 0x1c
    22b2:	95 8f       	std	Z+29, r25	; 0x1d
    22b4:	a6 8f       	std	Z+30, r26	; 0x1e
    22b6:	b7 8f       	std	Z+31, r27	; 0x1f
    22b8:	10 8e       	std	Z+24, r1	; 0x18
    22ba:	11 8e       	std	Z+25, r1	; 0x19
    22bc:	12 8e       	std	Z+26, r1	; 0x1a
    22be:	13 8e       	std	Z+27, r1	; 0x1b
    22c0:	81 e0       	ldi	r24, 0x01	; 1
    22c2:	82 83       	std	Z+2, r24	; 0x02
    22c4:	80 e0       	ldi	r24, 0x00	; 0
    22c6:	05 c0       	rjmp	.+10     	; 0x22d2 <pf_open+0xa2>
    22c8:	86 e0       	ldi	r24, 0x06	; 6
    22ca:	03 c0       	rjmp	.+6      	; 0x22d2 <pf_open+0xa2>
    22cc:	83 e0       	ldi	r24, 0x03	; 3
    22ce:	01 c0       	rjmp	.+2      	; 0x22d2 <pf_open+0xa2>
    22d0:	83 e0       	ldi	r24, 0x03	; 3
    22d2:	ec 96       	adiw	r28, 0x3c	; 60
    22d4:	0f b6       	in	r0, 0x3f	; 63
    22d6:	f8 94       	cli
    22d8:	de bf       	out	0x3e, r29	; 62
    22da:	0f be       	out	0x3f, r0	; 63
    22dc:	cd bf       	out	0x3d, r28	; 61
    22de:	df 91       	pop	r29
    22e0:	cf 91       	pop	r28
    22e2:	1f 91       	pop	r17
    22e4:	0f 91       	pop	r16
    22e6:	08 95       	ret

000022e8 <pf_read>:
    22e8:	2f 92       	push	r2
    22ea:	3f 92       	push	r3
    22ec:	4f 92       	push	r4
    22ee:	5f 92       	push	r5
    22f0:	6f 92       	push	r6
    22f2:	7f 92       	push	r7
    22f4:	8f 92       	push	r8
    22f6:	9f 92       	push	r9
    22f8:	af 92       	push	r10
    22fa:	bf 92       	push	r11
    22fc:	cf 92       	push	r12
    22fe:	df 92       	push	r13
    2300:	ef 92       	push	r14
    2302:	ff 92       	push	r15
    2304:	0f 93       	push	r16
    2306:	1f 93       	push	r17
    2308:	cf 93       	push	r28
    230a:	df 93       	push	r29
    230c:	3c 01       	movw	r6, r24
    230e:	6b 01       	movw	r12, r22
    2310:	4a 01       	movw	r8, r20
    2312:	e0 90 1f 06 	lds	r14, 0x061F	; 0x80061f <FatFs>
    2316:	f0 90 20 06 	lds	r15, 0x0620	; 0x800620 <FatFs+0x1>
    231a:	fa 01       	movw	r30, r20
    231c:	11 82       	std	Z+1, r1	; 0x01
    231e:	10 82       	st	Z, r1
    2320:	e1 14       	cp	r14, r1
    2322:	f1 04       	cpc	r15, r1
    2324:	09 f4       	brne	.+2      	; 0x2328 <pf_read+0x40>
    2326:	bb c0       	rjmp	.+374    	; 0x249e <pf_read+0x1b6>
    2328:	f7 01       	movw	r30, r14
    232a:	82 81       	ldd	r24, Z+2	; 0x02
    232c:	80 ff       	sbrs	r24, 0
    232e:	b9 c0       	rjmp	.+370    	; 0x24a2 <pf_read+0x1ba>
    2330:	84 8d       	ldd	r24, Z+28	; 0x1c
    2332:	95 8d       	ldd	r25, Z+29	; 0x1d
    2334:	a6 8d       	ldd	r26, Z+30	; 0x1e
    2336:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2338:	40 8d       	ldd	r20, Z+24	; 0x18
    233a:	51 8d       	ldd	r21, Z+25	; 0x19
    233c:	62 8d       	ldd	r22, Z+26	; 0x1a
    233e:	73 8d       	ldd	r23, Z+27	; 0x1b
    2340:	84 1b       	sub	r24, r20
    2342:	95 0b       	sbc	r25, r21
    2344:	a6 0b       	sbc	r26, r22
    2346:	b7 0b       	sbc	r27, r23
    2348:	a6 01       	movw	r20, r12
    234a:	60 e0       	ldi	r22, 0x00	; 0
    234c:	70 e0       	ldi	r23, 0x00	; 0
    234e:	84 17       	cp	r24, r20
    2350:	95 07       	cpc	r25, r21
    2352:	a6 07       	cpc	r26, r22
    2354:	b7 07       	cpc	r27, r23
    2356:	08 f4       	brcc	.+2      	; 0x235a <pf_read+0x72>
    2358:	6c 01       	movw	r12, r24
    235a:	53 01       	movw	r10, r6
    235c:	96 c0       	rjmp	.+300    	; 0x248a <pf_read+0x1a2>
    235e:	f7 01       	movw	r30, r14
    2360:	20 8c       	ldd	r2, Z+24	; 0x18
    2362:	31 8c       	ldd	r3, Z+25	; 0x19
    2364:	42 8c       	ldd	r4, Z+26	; 0x1a
    2366:	53 8c       	ldd	r5, Z+27	; 0x1b
    2368:	d2 01       	movw	r26, r4
    236a:	c1 01       	movw	r24, r2
    236c:	91 70       	andi	r25, 0x01	; 1
    236e:	aa 27       	eor	r26, r26
    2370:	bb 27       	eor	r27, r27
    2372:	89 2b       	or	r24, r25
    2374:	8a 2b       	or	r24, r26
    2376:	8b 2b       	or	r24, r27
    2378:	09 f0       	breq	.+2      	; 0x237c <pf_read+0x94>
    237a:	4e c0       	rjmp	.+156    	; 0x2418 <pf_read+0x130>
    237c:	21 81       	ldd	r18, Z+1	; 0x01
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	40 e0       	ldi	r20, 0x00	; 0
    2382:	50 e0       	ldi	r21, 0x00	; 0
    2384:	c2 01       	movw	r24, r4
    2386:	b1 01       	movw	r22, r2
    2388:	05 2e       	mov	r0, r21
    238a:	59 e0       	ldi	r21, 0x09	; 9
    238c:	96 95       	lsr	r25
    238e:	87 95       	ror	r24
    2390:	77 95       	ror	r23
    2392:	67 95       	ror	r22
    2394:	5a 95       	dec	r21
    2396:	d1 f7       	brne	.-12     	; 0x238c <pf_read+0xa4>
    2398:	50 2d       	mov	r21, r0
    239a:	0e 94 94 1a 	call	0x3528	; 0x3528 <__udivmodsi4>
    239e:	67 2b       	or	r22, r23
    23a0:	68 2b       	or	r22, r24
    23a2:	69 2b       	or	r22, r25
    23a4:	e9 f4       	brne	.+58     	; 0x23e0 <pf_read+0xf8>
    23a6:	23 28       	or	r2, r3
    23a8:	24 28       	or	r2, r4
    23aa:	25 28       	or	r2, r5
    23ac:	31 f4       	brne	.+12     	; 0x23ba <pf_read+0xd2>
    23ae:	f7 01       	movw	r30, r14
    23b0:	60 a1       	ldd	r22, Z+32	; 0x20
    23b2:	71 a1       	ldd	r23, Z+33	; 0x21
    23b4:	82 a1       	ldd	r24, Z+34	; 0x22
    23b6:	93 a1       	ldd	r25, Z+35	; 0x23
    23b8:	07 c0       	rjmp	.+14     	; 0x23c8 <pf_read+0xe0>
    23ba:	f7 01       	movw	r30, r14
    23bc:	64 a1       	ldd	r22, Z+36	; 0x24
    23be:	75 a1       	ldd	r23, Z+37	; 0x25
    23c0:	86 a1       	ldd	r24, Z+38	; 0x26
    23c2:	97 a1       	ldd	r25, Z+39	; 0x27
    23c4:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <get_fat>
    23c8:	62 30       	cpi	r22, 0x02	; 2
    23ca:	71 05       	cpc	r23, r1
    23cc:	81 05       	cpc	r24, r1
    23ce:	91 05       	cpc	r25, r1
    23d0:	08 f4       	brcc	.+2      	; 0x23d4 <pf_read+0xec>
    23d2:	61 c0       	rjmp	.+194    	; 0x2496 <pf_read+0x1ae>
    23d4:	f7 01       	movw	r30, r14
    23d6:	64 a3       	std	Z+36, r22	; 0x24
    23d8:	75 a3       	std	Z+37, r23	; 0x25
    23da:	86 a3       	std	Z+38, r24	; 0x26
    23dc:	97 a3       	std	Z+39, r25	; 0x27
    23de:	13 82       	std	Z+3, r1	; 0x03
    23e0:	f7 01       	movw	r30, r14
    23e2:	64 a1       	ldd	r22, Z+36	; 0x24
    23e4:	75 a1       	ldd	r23, Z+37	; 0x25
    23e6:	86 a1       	ldd	r24, Z+38	; 0x26
    23e8:	97 a1       	ldd	r25, Z+39	; 0x27
    23ea:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <clust2sect>
    23ee:	61 15       	cp	r22, r1
    23f0:	71 05       	cpc	r23, r1
    23f2:	81 05       	cpc	r24, r1
    23f4:	91 05       	cpc	r25, r1
    23f6:	09 f4       	brne	.+2      	; 0x23fa <pf_read+0x112>
    23f8:	4e c0       	rjmp	.+156    	; 0x2496 <pf_read+0x1ae>
    23fa:	f7 01       	movw	r30, r14
    23fc:	23 81       	ldd	r18, Z+3	; 0x03
    23fe:	31 e0       	ldi	r19, 0x01	; 1
    2400:	32 0f       	add	r19, r18
    2402:	33 83       	std	Z+3, r19	; 0x03
    2404:	dc 01       	movw	r26, r24
    2406:	cb 01       	movw	r24, r22
    2408:	82 0f       	add	r24, r18
    240a:	91 1d       	adc	r25, r1
    240c:	a1 1d       	adc	r26, r1
    240e:	b1 1d       	adc	r27, r1
    2410:	80 a7       	std	Z+40, r24	; 0x28
    2412:	91 a7       	std	Z+41, r25	; 0x29
    2414:	a2 a7       	std	Z+42, r26	; 0x2a
    2416:	b3 a7       	std	Z+43, r27	; 0x2b
    2418:	f7 01       	movw	r30, r14
    241a:	80 8d       	ldd	r24, Z+24	; 0x18
    241c:	91 8d       	ldd	r25, Z+25	; 0x19
    241e:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2420:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2422:	9c 01       	movw	r18, r24
    2424:	31 70       	andi	r19, 0x01	; 1
    2426:	c0 e0       	ldi	r28, 0x00	; 0
    2428:	d2 e0       	ldi	r29, 0x02	; 2
    242a:	c2 1b       	sub	r28, r18
    242c:	d3 0b       	sbc	r29, r19
    242e:	cc 16       	cp	r12, r28
    2430:	dd 06       	cpc	r13, r29
    2432:	08 f4       	brcc	.+2      	; 0x2436 <pf_read+0x14e>
    2434:	e6 01       	movw	r28, r12
    2436:	f7 01       	movw	r30, r14
    2438:	40 a5       	ldd	r20, Z+40	; 0x28
    243a:	51 a5       	ldd	r21, Z+41	; 0x29
    243c:	62 a5       	ldd	r22, Z+42	; 0x2a
    243e:	73 a5       	ldd	r23, Z+43	; 0x2b
    2440:	61 14       	cp	r6, r1
    2442:	71 04       	cpc	r7, r1
    2444:	19 f4       	brne	.+6      	; 0x244c <pf_read+0x164>
    2446:	80 e0       	ldi	r24, 0x00	; 0
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	02 c0       	rjmp	.+4      	; 0x2450 <pf_read+0x168>
    244c:	8a 2d       	mov	r24, r10
    244e:	9b 2d       	mov	r25, r11
    2450:	8e 01       	movw	r16, r28
    2452:	0e 94 cc 07 	call	0xf98	; 0xf98 <disk_readp>
    2456:	81 11       	cpse	r24, r1
    2458:	1e c0       	rjmp	.+60     	; 0x2496 <pf_read+0x1ae>
    245a:	f7 01       	movw	r30, r14
    245c:	80 8d       	ldd	r24, Z+24	; 0x18
    245e:	91 8d       	ldd	r25, Z+25	; 0x19
    2460:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2462:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2464:	8c 0f       	add	r24, r28
    2466:	9d 1f       	adc	r25, r29
    2468:	a1 1d       	adc	r26, r1
    246a:	b1 1d       	adc	r27, r1
    246c:	80 8f       	std	Z+24, r24	; 0x18
    246e:	91 8f       	std	Z+25, r25	; 0x19
    2470:	a2 8f       	std	Z+26, r26	; 0x1a
    2472:	b3 8f       	std	Z+27, r27	; 0x1b
    2474:	ac 0e       	add	r10, r28
    2476:	bd 1e       	adc	r11, r29
    2478:	cc 1a       	sub	r12, r28
    247a:	dd 0a       	sbc	r13, r29
    247c:	f4 01       	movw	r30, r8
    247e:	80 81       	ld	r24, Z
    2480:	91 81       	ldd	r25, Z+1	; 0x01
    2482:	c8 0f       	add	r28, r24
    2484:	d9 1f       	adc	r29, r25
    2486:	d1 83       	std	Z+1, r29	; 0x01
    2488:	c0 83       	st	Z, r28
    248a:	c1 14       	cp	r12, r1
    248c:	d1 04       	cpc	r13, r1
    248e:	09 f0       	breq	.+2      	; 0x2492 <pf_read+0x1aa>
    2490:	66 cf       	rjmp	.-308    	; 0x235e <pf_read+0x76>
    2492:	80 e0       	ldi	r24, 0x00	; 0
    2494:	07 c0       	rjmp	.+14     	; 0x24a4 <pf_read+0x1bc>
    2496:	f7 01       	movw	r30, r14
    2498:	12 82       	std	Z+2, r1	; 0x02
    249a:	81 e0       	ldi	r24, 0x01	; 1
    249c:	03 c0       	rjmp	.+6      	; 0x24a4 <pf_read+0x1bc>
    249e:	86 e0       	ldi	r24, 0x06	; 6
    24a0:	01 c0       	rjmp	.+2      	; 0x24a4 <pf_read+0x1bc>
    24a2:	85 e0       	ldi	r24, 0x05	; 5
    24a4:	df 91       	pop	r29
    24a6:	cf 91       	pop	r28
    24a8:	1f 91       	pop	r17
    24aa:	0f 91       	pop	r16
    24ac:	ff 90       	pop	r15
    24ae:	ef 90       	pop	r14
    24b0:	df 90       	pop	r13
    24b2:	cf 90       	pop	r12
    24b4:	bf 90       	pop	r11
    24b6:	af 90       	pop	r10
    24b8:	9f 90       	pop	r9
    24ba:	8f 90       	pop	r8
    24bc:	7f 90       	pop	r7
    24be:	6f 90       	pop	r6
    24c0:	5f 90       	pop	r5
    24c2:	4f 90       	pop	r4
    24c4:	3f 90       	pop	r3
    24c6:	2f 90       	pop	r2
    24c8:	08 95       	ret

000024ca <pf_lseek>:
#if _USE_LSEEK

FRESULT pf_lseek (
	DWORD ofs		/* File pointer from top of file */
)
{
    24ca:	4f 92       	push	r4
    24cc:	5f 92       	push	r5
    24ce:	6f 92       	push	r6
    24d0:	7f 92       	push	r7
    24d2:	8f 92       	push	r8
    24d4:	9f 92       	push	r9
    24d6:	af 92       	push	r10
    24d8:	bf 92       	push	r11
    24da:	cf 92       	push	r12
    24dc:	df 92       	push	r13
    24de:	ef 92       	push	r14
    24e0:	ff 92       	push	r15
    24e2:	cf 93       	push	r28
    24e4:	df 93       	push	r29
    24e6:	00 d0       	rcall	.+0      	; 0x24e8 <pf_lseek+0x1e>
    24e8:	00 d0       	rcall	.+0      	; 0x24ea <pf_lseek+0x20>
    24ea:	00 d0       	rcall	.+0      	; 0x24ec <pf_lseek+0x22>
    24ec:	cd b7       	in	r28, 0x3d	; 61
    24ee:	de b7       	in	r29, 0x3e	; 62
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;
    24f0:	20 91 1f 06 	lds	r18, 0x061F	; 0x80061f <FatFs>
    24f4:	30 91 20 06 	lds	r19, 0x0620	; 0x800620 <FatFs+0x1>
    24f8:	3e 83       	std	Y+6, r19	; 0x06
    24fa:	2d 83       	std	Y+5, r18	; 0x05


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    24fc:	21 15       	cp	r18, r1
    24fe:	31 05       	cpc	r19, r1
    2500:	09 f4       	brne	.+2      	; 0x2504 <pf_lseek+0x3a>
    2502:	f4 c0       	rjmp	.+488    	; 0x26ec <pf_lseek+0x222>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
    2504:	d9 01       	movw	r26, r18
    2506:	12 96       	adiw	r26, 0x02	; 2
    2508:	2c 91       	ld	r18, X
    250a:	12 97       	sbiw	r26, 0x02	; 2
    250c:	20 ff       	sbrs	r18, 0
    250e:	f0 c0       	rjmp	.+480    	; 0x26f0 <pf_lseek+0x226>
			return FR_NOT_OPENED;

	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
    2510:	5c 96       	adiw	r26, 0x1c	; 28
    2512:	cd 90       	ld	r12, X+
    2514:	dd 90       	ld	r13, X+
    2516:	ed 90       	ld	r14, X+
    2518:	fc 90       	ld	r15, X
    251a:	5f 97       	sbiw	r26, 0x1f	; 31
    251c:	c6 16       	cp	r12, r22
    251e:	d7 06       	cpc	r13, r23
    2520:	e8 06       	cpc	r14, r24
    2522:	f9 06       	cpc	r15, r25
    2524:	10 f0       	brcs	.+4      	; 0x252a <pf_lseek+0x60>
    2526:	6b 01       	movw	r12, r22
    2528:	7c 01       	movw	r14, r24
	ifptr = fs->fptr;
    252a:	ed 81       	ldd	r30, Y+5	; 0x05
    252c:	fe 81       	ldd	r31, Y+6	; 0x06
    252e:	40 8c       	ldd	r4, Z+24	; 0x18
    2530:	51 8c       	ldd	r5, Z+25	; 0x19
    2532:	62 8c       	ldd	r6, Z+26	; 0x1a
    2534:	73 8c       	ldd	r7, Z+27	; 0x1b
	fs->fptr = 0;
    2536:	10 8e       	std	Z+24, r1	; 0x18
    2538:	11 8e       	std	Z+25, r1	; 0x19
    253a:	12 8e       	std	Z+26, r1	; 0x1a
    253c:	13 8e       	std	Z+27, r1	; 0x1b
	if (ofs > 0) {
    253e:	c1 14       	cp	r12, r1
    2540:	d1 04       	cpc	r13, r1
    2542:	e1 04       	cpc	r14, r1
    2544:	f1 04       	cpc	r15, r1
    2546:	09 f4       	brne	.+2      	; 0x254a <pf_lseek+0x80>
    2548:	d5 c0       	rjmp	.+426    	; 0x26f4 <pf_lseek+0x22a>
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
    254a:	81 80       	ldd	r8, Z+1	; 0x01
    254c:	91 2c       	mov	r9, r1
    254e:	a1 2c       	mov	r10, r1
    2550:	b1 2c       	mov	r11, r1
    2552:	07 2e       	mov	r0, r23
    2554:	79 e0       	ldi	r23, 0x09	; 9
    2556:	88 0c       	add	r8, r8
    2558:	99 1c       	adc	r9, r9
    255a:	aa 1c       	adc	r10, r10
    255c:	bb 1c       	adc	r11, r11
    255e:	7a 95       	dec	r23
    2560:	d1 f7       	brne	.-12     	; 0x2556 <pf_lseek+0x8c>
    2562:	70 2d       	mov	r23, r0
		if (ifptr > 0 &&
    2564:	41 14       	cp	r4, r1
    2566:	51 04       	cpc	r5, r1
    2568:	61 04       	cpc	r6, r1
    256a:	71 04       	cpc	r7, r1
    256c:	09 f4       	brne	.+2      	; 0x2570 <pf_lseek+0xa6>
    256e:	40 c0       	rjmp	.+128    	; 0x25f0 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    2570:	c7 01       	movw	r24, r14
    2572:	b6 01       	movw	r22, r12
    2574:	61 50       	subi	r22, 0x01	; 1
    2576:	71 09       	sbc	r23, r1
    2578:	81 09       	sbc	r24, r1
    257a:	91 09       	sbc	r25, r1
    257c:	a5 01       	movw	r20, r10
    257e:	94 01       	movw	r18, r8
    2580:	0e 94 94 1a 	call	0x3528	; 0x3528 <__udivmodsi4>
    2584:	29 83       	std	Y+1, r18	; 0x01
    2586:	3a 83       	std	Y+2, r19	; 0x02
    2588:	4b 83       	std	Y+3, r20	; 0x03
    258a:	5c 83       	std	Y+4, r21	; 0x04
    258c:	b1 e0       	ldi	r27, 0x01	; 1
    258e:	4b 1a       	sub	r4, r27
    2590:	51 08       	sbc	r5, r1
    2592:	61 08       	sbc	r6, r1
    2594:	71 08       	sbc	r7, r1
    2596:	c3 01       	movw	r24, r6
    2598:	b2 01       	movw	r22, r4
    259a:	a5 01       	movw	r20, r10
    259c:	94 01       	movw	r18, r8
    259e:	0e 94 94 1a 	call	0x3528	; 0x3528 <__udivmodsi4>
	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
	ifptr = fs->fptr;
	fs->fptr = 0;
	if (ofs > 0) {
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
		if (ifptr > 0 &&
    25a2:	89 81       	ldd	r24, Y+1	; 0x01
    25a4:	9a 81       	ldd	r25, Y+2	; 0x02
    25a6:	ab 81       	ldd	r26, Y+3	; 0x03
    25a8:	bc 81       	ldd	r27, Y+4	; 0x04
    25aa:	82 17       	cp	r24, r18
    25ac:	93 07       	cpc	r25, r19
    25ae:	a4 07       	cpc	r26, r20
    25b0:	b5 07       	cpc	r27, r21
    25b2:	f0 f0       	brcs	.+60     	; 0x25f0 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
			fs->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    25b4:	88 27       	eor	r24, r24
    25b6:	99 27       	eor	r25, r25
    25b8:	dc 01       	movw	r26, r24
    25ba:	88 19       	sub	r24, r8
    25bc:	99 09       	sbc	r25, r9
    25be:	aa 09       	sbc	r26, r10
    25c0:	bb 09       	sbc	r27, r11
    25c2:	48 22       	and	r4, r24
    25c4:	59 22       	and	r5, r25
    25c6:	6a 22       	and	r6, r26
    25c8:	7b 22       	and	r7, r27
    25ca:	ad 81       	ldd	r26, Y+5	; 0x05
    25cc:	be 81       	ldd	r27, Y+6	; 0x06
    25ce:	58 96       	adiw	r26, 0x18	; 24
    25d0:	4d 92       	st	X+, r4
    25d2:	5d 92       	st	X+, r5
    25d4:	6d 92       	st	X+, r6
    25d6:	7c 92       	st	X, r7
    25d8:	5b 97       	sbiw	r26, 0x1b	; 27
			ofs -= fs->fptr;
    25da:	c4 18       	sub	r12, r4
    25dc:	d5 08       	sbc	r13, r5
    25de:	e6 08       	sbc	r14, r6
    25e0:	f7 08       	sbc	r15, r7
			clst = fs->curr_clust;
    25e2:	94 96       	adiw	r26, 0x24	; 36
    25e4:	6d 91       	ld	r22, X+
    25e6:	7d 91       	ld	r23, X+
    25e8:	8d 91       	ld	r24, X+
    25ea:	9c 91       	ld	r25, X
    25ec:	97 97       	sbiw	r26, 0x27	; 39
    25ee:	33 c0       	rjmp	.+102    	; 0x2656 <pf_lseek+0x18c>
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
    25f0:	ed 81       	ldd	r30, Y+5	; 0x05
    25f2:	fe 81       	ldd	r31, Y+6	; 0x06
    25f4:	60 a1       	ldd	r22, Z+32	; 0x20
    25f6:	71 a1       	ldd	r23, Z+33	; 0x21
    25f8:	82 a1       	ldd	r24, Z+34	; 0x22
    25fa:	93 a1       	ldd	r25, Z+35	; 0x23
			fs->curr_clust = clst;
    25fc:	64 a3       	std	Z+36, r22	; 0x24
    25fe:	75 a3       	std	Z+37, r23	; 0x25
    2600:	86 a3       	std	Z+38, r24	; 0x26
    2602:	97 a3       	std	Z+39, r25	; 0x27
    2604:	28 c0       	rjmp	.+80     	; 0x2656 <pf_lseek+0x18c>
		}
		while (ofs > bcs) {				/* Cluster following loop */
			clst = get_fat(clst);		/* Follow cluster chain */
    2606:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <get_fat>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
    260a:	62 30       	cpi	r22, 0x02	; 2
    260c:	71 05       	cpc	r23, r1
    260e:	81 05       	cpc	r24, r1
    2610:	91 05       	cpc	r25, r1
    2612:	08 f4       	brcc	.+2      	; 0x2616 <pf_lseek+0x14c>
    2614:	65 c0       	rjmp	.+202    	; 0x26e0 <pf_lseek+0x216>
    2616:	ed 81       	ldd	r30, Y+5	; 0x05
    2618:	fe 81       	ldd	r31, Y+6	; 0x06
    261a:	40 84       	ldd	r4, Z+8	; 0x08
    261c:	51 84       	ldd	r5, Z+9	; 0x09
    261e:	62 84       	ldd	r6, Z+10	; 0x0a
    2620:	73 84       	ldd	r7, Z+11	; 0x0b
    2622:	64 15       	cp	r22, r4
    2624:	75 05       	cpc	r23, r5
    2626:	86 05       	cpc	r24, r6
    2628:	97 05       	cpc	r25, r7
    262a:	08 f0       	brcs	.+2      	; 0x262e <pf_lseek+0x164>
    262c:	59 c0       	rjmp	.+178    	; 0x26e0 <pf_lseek+0x216>
			fs->curr_clust = clst;
    262e:	64 a3       	std	Z+36, r22	; 0x24
    2630:	75 a3       	std	Z+37, r23	; 0x25
    2632:	86 a3       	std	Z+38, r24	; 0x26
    2634:	97 a3       	std	Z+39, r25	; 0x27
			fs->fptr += bcs;
    2636:	40 8c       	ldd	r4, Z+24	; 0x18
    2638:	51 8c       	ldd	r5, Z+25	; 0x19
    263a:	62 8c       	ldd	r6, Z+26	; 0x1a
    263c:	73 8c       	ldd	r7, Z+27	; 0x1b
    263e:	48 0c       	add	r4, r8
    2640:	59 1c       	adc	r5, r9
    2642:	6a 1c       	adc	r6, r10
    2644:	7b 1c       	adc	r7, r11
    2646:	40 8e       	std	Z+24, r4	; 0x18
    2648:	51 8e       	std	Z+25, r5	; 0x19
    264a:	62 8e       	std	Z+26, r6	; 0x1a
    264c:	73 8e       	std	Z+27, r7	; 0x1b
			ofs -= bcs;
    264e:	c8 18       	sub	r12, r8
    2650:	d9 08       	sbc	r13, r9
    2652:	ea 08       	sbc	r14, r10
    2654:	fb 08       	sbc	r15, r11
			clst = fs->curr_clust;
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
			fs->curr_clust = clst;
		}
		while (ofs > bcs) {				/* Cluster following loop */
    2656:	8c 14       	cp	r8, r12
    2658:	9d 04       	cpc	r9, r13
    265a:	ae 04       	cpc	r10, r14
    265c:	bf 04       	cpc	r11, r15
    265e:	98 f2       	brcs	.-90     	; 0x2606 <pf_lseek+0x13c>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
			fs->curr_clust = clst;
			fs->fptr += bcs;
			ofs -= bcs;
		}
		fs->fptr += ofs;
    2660:	ad 81       	ldd	r26, Y+5	; 0x05
    2662:	be 81       	ldd	r27, Y+6	; 0x06
    2664:	58 96       	adiw	r26, 0x18	; 24
    2666:	8d 90       	ld	r8, X+
    2668:	9d 90       	ld	r9, X+
    266a:	ad 90       	ld	r10, X+
    266c:	bc 90       	ld	r11, X
    266e:	5b 97       	sbiw	r26, 0x1b	; 27
    2670:	8c 0c       	add	r8, r12
    2672:	9d 1c       	adc	r9, r13
    2674:	ae 1c       	adc	r10, r14
    2676:	bf 1c       	adc	r11, r15
    2678:	fd 01       	movw	r30, r26
    267a:	80 8e       	std	Z+24, r8	; 0x18
    267c:	91 8e       	std	Z+25, r9	; 0x19
    267e:	a2 8e       	std	Z+26, r10	; 0x1a
    2680:	b3 8e       	std	Z+27, r11	; 0x1b
		sect = clust2sect(clst);		/* Current sector */
    2682:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <clust2sect>
		if (!sect) goto fe_abort;
    2686:	61 15       	cp	r22, r1
    2688:	71 05       	cpc	r23, r1
    268a:	81 05       	cpc	r24, r1
    268c:	91 05       	cpc	r25, r1
    268e:	41 f1       	breq	.+80     	; 0x26e0 <pf_lseek+0x216>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
    2690:	46 01       	movw	r8, r12
    2692:	57 01       	movw	r10, r14
    2694:	07 2e       	mov	r0, r23
    2696:	79 e0       	ldi	r23, 0x09	; 9
    2698:	b6 94       	lsr	r11
    269a:	a7 94       	ror	r10
    269c:	97 94       	ror	r9
    269e:	87 94       	ror	r8
    26a0:	7a 95       	dec	r23
    26a2:	d1 f7       	brne	.-12     	; 0x2698 <pf_lseek+0x1ce>
    26a4:	70 2d       	mov	r23, r0
    26a6:	ad 81       	ldd	r26, Y+5	; 0x05
    26a8:	be 81       	ldd	r27, Y+6	; 0x06
    26aa:	13 96       	adiw	r26, 0x03	; 3
    26ac:	8c 92       	st	X, r8
		if (ofs % 512)
    26ae:	b1 e0       	ldi	r27, 0x01	; 1
    26b0:	db 22       	and	r13, r27
    26b2:	ee 24       	eor	r14, r14
    26b4:	ff 24       	eor	r15, r15
    26b6:	cd 28       	or	r12, r13
    26b8:	ce 28       	or	r12, r14
    26ba:	cf 28       	or	r12, r15
    26bc:	e9 f0       	breq	.+58     	; 0x26f8 <pf_lseek+0x22e>
			fs->dsect = sect + fs->csect++;
    26be:	21 e0       	ldi	r18, 0x01	; 1
    26c0:	28 0d       	add	r18, r8
    26c2:	ed 81       	ldd	r30, Y+5	; 0x05
    26c4:	fe 81       	ldd	r31, Y+6	; 0x06
    26c6:	23 83       	std	Z+3, r18	; 0x03
    26c8:	dc 01       	movw	r26, r24
    26ca:	cb 01       	movw	r24, r22
    26cc:	88 0d       	add	r24, r8
    26ce:	91 1d       	adc	r25, r1
    26d0:	a1 1d       	adc	r26, r1
    26d2:	b1 1d       	adc	r27, r1
    26d4:	80 a7       	std	Z+40, r24	; 0x28
    26d6:	91 a7       	std	Z+41, r25	; 0x29
    26d8:	a2 a7       	std	Z+42, r26	; 0x2a
    26da:	b3 a7       	std	Z+43, r27	; 0x2b
	}

	return FR_OK;
    26dc:	80 e0       	ldi	r24, 0x00	; 0
    26de:	0d c0       	rjmp	.+26     	; 0x26fa <pf_lseek+0x230>

fe_abort:
	fs->flag = 0;
    26e0:	ad 81       	ldd	r26, Y+5	; 0x05
    26e2:	be 81       	ldd	r27, Y+6	; 0x06
    26e4:	12 96       	adiw	r26, 0x02	; 2
    26e6:	1c 92       	st	X, r1
	return FR_DISK_ERR;
    26e8:	81 e0       	ldi	r24, 0x01	; 1
    26ea:	07 c0       	rjmp	.+14     	; 0x26fa <pf_lseek+0x230>
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    26ec:	86 e0       	ldi	r24, 0x06	; 6
    26ee:	05 c0       	rjmp	.+10     	; 0x26fa <pf_lseek+0x230>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
			return FR_NOT_OPENED;
    26f0:	85 e0       	ldi	r24, 0x05	; 5
    26f2:	03 c0       	rjmp	.+6      	; 0x26fa <pf_lseek+0x230>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
		if (ofs % 512)
			fs->dsect = sect + fs->csect++;
	}

	return FR_OK;
    26f4:	80 e0       	ldi	r24, 0x00	; 0
    26f6:	01 c0       	rjmp	.+2      	; 0x26fa <pf_lseek+0x230>
    26f8:	80 e0       	ldi	r24, 0x00	; 0

fe_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    26fa:	26 96       	adiw	r28, 0x06	; 6
    26fc:	0f b6       	in	r0, 0x3f	; 63
    26fe:	f8 94       	cli
    2700:	de bf       	out	0x3e, r29	; 62
    2702:	0f be       	out	0x3f, r0	; 63
    2704:	cd bf       	out	0x3d, r28	; 61
    2706:	df 91       	pop	r29
    2708:	cf 91       	pop	r28
    270a:	ff 90       	pop	r15
    270c:	ef 90       	pop	r14
    270e:	df 90       	pop	r13
    2710:	cf 90       	pop	r12
    2712:	bf 90       	pop	r11
    2714:	af 90       	pop	r10
    2716:	9f 90       	pop	r9
    2718:	8f 90       	pop	r8
    271a:	7f 90       	pop	r7
    271c:	6f 90       	pop	r6
    271e:	5f 90       	pop	r5
    2720:	4f 90       	pop	r4
    2722:	08 95       	ret

00002724 <RTC_ConvertFromDec>:
	unsigned char ch = ((c/10)<<4)|(c%10);
	return ch;
}
unsigned char RTC_ConvertFromDec(unsigned char c)//перевод в десятичный формат
{
	unsigned char ch = ((c>>4)*10+(0b00001111&c));
    2724:	98 2f       	mov	r25, r24
    2726:	92 95       	swap	r25
    2728:	9f 70       	andi	r25, 0x0F	; 15
    272a:	99 0f       	add	r25, r25
    272c:	29 2f       	mov	r18, r25
    272e:	22 0f       	add	r18, r18
    2730:	22 0f       	add	r18, r18
    2732:	92 0f       	add	r25, r18
    2734:	8f 70       	andi	r24, 0x0F	; 15
	return ch;
}
    2736:	89 0f       	add	r24, r25
    2738:	08 95       	ret

0000273a <RTC_init>:
// инициализация начальных установок
void RTC_init(void){
	I2C_StartCondition();               // запуск i2c
    273a:	0e 94 f7 13 	call	0x27ee	; 0x27ee <I2C_StartCondition>
	I2C_SendByte(0b11010000);   // передача адреса устройства, режим записи
    273e:	80 ed       	ldi	r24, 0xD0	; 208
    2740:	0e 94 03 14 	call	0x2806	; 0x2806 <I2C_SendByte>
	I2C_SendByte(0x0E);            // передача адреса памяти
    2744:	8e e0       	ldi	r24, 0x0E	; 14
    2746:	0e 94 03 14 	call	0x2806	; 0x2806 <I2C_SendByte>
	I2C_SendByte(0b00100000);      // запустить преобразование температуры и выход на 1 Гц
    274a:	80 e2       	ldi	r24, 0x20	; 32
    274c:	0e 94 03 14 	call	0x2806	; 0x2806 <I2C_SendByte>
	I2C_SendByte(0b00001000);      // разрешить выход 32 кГц
    2750:	88 e0       	ldi	r24, 0x08	; 8
    2752:	0e 94 03 14 	call	0x2806	; 0x2806 <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    2756:	0e 94 ff 13 	call	0x27fe	; 0x27fe <I2C_StopCondition>
    275a:	08 95       	ret

0000275c <read_symbol_from_SD>:
}
//—————————————-
*/

uint8_t read_symbol_from_SD (uint16_t symbol)
{
    275c:	0f 93       	push	r16
    275e:	1f 93       	push	r17
    2760:	cf 93       	push	r28
    2762:	df 93       	push	r29
    2764:	cd b7       	in	r28, 0x3d	; 61
    2766:	de b7       	in	r29, 0x3e	; 62
    2768:	2d 97       	sbiw	r28, 0x0d	; 13
    276a:	0f b6       	in	r0, 0x3f	; 63
    276c:	f8 94       	cli
    276e:	de bf       	out	0x3e, r29	; 62
    2770:	0f be       	out	0x3f, r0	; 63
    2772:	cd bf       	out	0x3d, r28	; 61
	WORD s1;
	uint8_t result;
	char buffer[10] = {};
    2774:	8e 01       	movw	r16, r28
    2776:	0c 5f       	subi	r16, 0xFC	; 252
    2778:	1f 4f       	sbci	r17, 0xFF	; 255
    277a:	2a e0       	ldi	r18, 0x0A	; 10
    277c:	f8 01       	movw	r30, r16
    277e:	11 92       	st	Z+, r1
    2780:	2a 95       	dec	r18
    2782:	e9 f7       	brne	.-6      	; 0x277e <read_symbol_from_SD+0x22>

	pf_lseek(6*symbol); //Установим курсор чтения на 0 в 123.txt
    2784:	bc 01       	movw	r22, r24
    2786:	66 0f       	add	r22, r22
    2788:	77 1f       	adc	r23, r23
    278a:	68 0f       	add	r22, r24
    278c:	79 1f       	adc	r23, r25
    278e:	66 0f       	add	r22, r22
    2790:	77 1f       	adc	r23, r23
    2792:	80 e0       	ldi	r24, 0x00	; 0
    2794:	90 e0       	ldi	r25, 0x00	; 0
    2796:	0e 94 65 12 	call	0x24ca	; 0x24ca <pf_lseek>
	pf_read(buffer,4,&s1);
    279a:	ae 01       	movw	r20, r28
    279c:	4f 5f       	subi	r20, 0xFF	; 255
    279e:	5f 4f       	sbci	r21, 0xFF	; 255
    27a0:	64 e0       	ldi	r22, 0x04	; 4
    27a2:	70 e0       	ldi	r23, 0x00	; 0
    27a4:	c8 01       	movw	r24, r16
    27a6:	0e 94 74 11 	call	0x22e8	; 0x22e8 <pf_read>
	sscanf(buffer, "%x", &result);
    27aa:	ce 01       	movw	r24, r28
    27ac:	03 96       	adiw	r24, 0x03	; 3
    27ae:	9f 93       	push	r25
    27b0:	8f 93       	push	r24
    27b2:	8e e2       	ldi	r24, 0x2E	; 46
    27b4:	91 e0       	ldi	r25, 0x01	; 1
    27b6:	9f 93       	push	r25
    27b8:	8f 93       	push	r24
    27ba:	1f 93       	push	r17
    27bc:	0f 93       	push	r16
    27be:	0e 94 65 1c 	call	0x38ca	; 0x38ca <sscanf>

	return result;
    27c2:	0f 90       	pop	r0
    27c4:	0f 90       	pop	r0
    27c6:	0f 90       	pop	r0
    27c8:	0f 90       	pop	r0
    27ca:	0f 90       	pop	r0
    27cc:	0f 90       	pop	r0
    27ce:	8b 81       	ldd	r24, Y+3	; 0x03
    27d0:	2d 96       	adiw	r28, 0x0d	; 13
    27d2:	0f b6       	in	r0, 0x3f	; 63
    27d4:	f8 94       	cli
    27d6:	de bf       	out	0x3e, r29	; 62
    27d8:	0f be       	out	0x3f, r0	; 63
    27da:	cd bf       	out	0x3d, r28	; 61
    27dc:	df 91       	pop	r29
    27de:	cf 91       	pop	r28
    27e0:	1f 91       	pop	r17
    27e2:	0f 91       	pop	r16
    27e4:	08 95       	ret

000027e6 <I2C_Init>:
{
    I2C_StartCondition(); // Отправим условие START
	I2C_SendByte(addr); // Отправим в шину адрес устройства + бит чтения-записи
	I2C_SendByte(c);// Отправим байт данных
	I2C_StopCondition();// Отправим условие STOP
}
    27e6:	88 e4       	ldi	r24, 0x48	; 72
    27e8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    27ec:	08 95       	ret

000027ee <I2C_StartCondition>:
    27ee:	84 ea       	ldi	r24, 0xA4	; 164
    27f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    27f4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    27f8:	88 23       	and	r24, r24
    27fa:	e4 f7       	brge	.-8      	; 0x27f4 <I2C_StartCondition+0x6>
    27fc:	08 95       	ret

000027fe <I2C_StopCondition>:
    27fe:	84 e9       	ldi	r24, 0x94	; 148
    2800:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2804:	08 95       	ret

00002806 <I2C_SendByte>:
    2806:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    280a:	84 e8       	ldi	r24, 0x84	; 132
    280c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2810:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2814:	88 23       	and	r24, r24
    2816:	e4 f7       	brge	.-8      	; 0x2810 <I2C_SendByte+0xa>
    2818:	08 95       	ret

0000281a <I2C_ReadByte>:
unsigned char I2C_ReadByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
    281a:	84 ec       	ldi	r24, 0xC4	; 196
    281c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    2820:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2824:	88 23       	and	r24, r24
    2826:	e4 f7       	brge	.-8      	; 0x2820 <I2C_ReadByte+0x6>
	return TWDR;//читаем регистр данных
    2828:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
    282c:	08 95       	ret

0000282e <I2C_ReadLastByte>:
unsigned char I2C_ReadLastByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
    282e:	84 e8       	ldi	r24, 0x84	; 132
    2830:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    2834:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    2838:	88 23       	and	r24, r24
    283a:	e4 f7       	brge	.-8      	; 0x2834 <I2C_ReadLastByte+0x6>
	return TWDR;//читаем регистр данных
    283c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    2840:	08 95       	ret

00002842 <USART_Init>:
 */ 
#include "usart.h"

void USART_Init( unsigned int speed)//Инициализация модуля USART
{	
  UBRR0H = (unsigned char)(speed>>8);
    2842:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  UBRR0L = (unsigned char)speed;
    2846:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  UCSR0B=(1<<RXEN0)|( 1<<TXEN0); //Включаем прием и передачу по USART
    284a:	e1 ec       	ldi	r30, 0xC1	; 193
    284c:	f0 e0       	ldi	r31, 0x00	; 0
    284e:	88 e1       	ldi	r24, 0x18	; 24
    2850:	80 83       	st	Z, r24
  UCSR0B |= (1<<RXCIE0); //Разрешаем прерывание при приеме
    2852:	80 81       	ld	r24, Z
    2854:	80 68       	ori	r24, 0x80	; 128
    2856:	80 83       	st	Z, r24
  UCSR0A |= (1<<U2X0); // Для 8 мгц, удвоение скорости
    2858:	e0 ec       	ldi	r30, 0xC0	; 192
    285a:	f0 e0       	ldi	r31, 0x00	; 0
    285c:	80 81       	ld	r24, Z
    285e:	82 60       	ori	r24, 0x02	; 2
    2860:	80 83       	st	Z, r24
  UCSR0C |= (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);// Обращаемся именно к регистру UCSRC (URSEL=1),
    2862:	e2 ec       	ldi	r30, 0xC2	; 194
    2864:	f0 e0       	ldi	r31, 0x00	; 0
    2866:	80 81       	ld	r24, Z
    2868:	8e 60       	ori	r24, 0x0E	; 14
    286a:	80 83       	st	Z, r24
    286c:	08 95       	ret

0000286e <USART_Transmit>:
  //ассинхронный режим (UMSEL=0), без контроля четности (UPM1=0 и UPM0=0),
  //2 стоп-бит (USBS=1), 8-бит посылка (UCSZ1=1 и UCSZ0=1)
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
    286e:	dc 01       	movw	r26, r24
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    2870:	80 e0       	ldi	r24, 0x00	; 0
    2872:	0b c0       	rjmp	.+22     	; 0x288a <USART_Transmit+0x1c>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
    2874:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2878:	95 ff       	sbrs	r25, 5
    287a:	fc cf       	rjmp	.-8      	; 0x2874 <USART_Transmit+0x6>
	  UDR0 = data[i]; //Начало передачи данных
    287c:	fd 01       	movw	r30, r26
    287e:	e2 0f       	add	r30, r18
    2880:	f3 1f       	adc	r31, r19
    2882:	90 81       	ld	r25, Z
    2884:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    2888:	8f 5f       	subi	r24, 0xFF	; 255
    288a:	28 2f       	mov	r18, r24
    288c:	30 e0       	ldi	r19, 0x00	; 0
    288e:	fd 01       	movw	r30, r26
    2890:	01 90       	ld	r0, Z+
    2892:	00 20       	and	r0, r0
    2894:	e9 f7       	brne	.-6      	; 0x2890 <USART_Transmit+0x22>
    2896:	31 97       	sbiw	r30, 0x01	; 1
    2898:	ea 1b       	sub	r30, r26
    289a:	fb 0b       	sbc	r31, r27
    289c:	2e 17       	cp	r18, r30
    289e:	3f 07       	cpc	r19, r31
    28a0:	48 f3       	brcs	.-46     	; 0x2874 <USART_Transmit+0x6>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
	  UDR0 = data[i]; //Начало передачи данных
  }

}
    28a2:	08 95       	ret

000028a4 <Print_Hello_World>:
 */ 
#include "WeatherStation.h"

//Окно приветсвия на экране дисплея
void Print_Hello_World(uint8_t *Frame_buffer)
{
    28a4:	cf 93       	push	r28
    28a6:	df 93       	push	r29
    28a8:	ec 01       	movw	r28, r24
		
	LCD_12864_GrapnicMode(1);
    28aa:	81 e0       	ldi	r24, 0x01	; 1
    28ac:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	LCD_12864_Draw_rectangle(0, 0, 127, 63);
    28b0:	2f e3       	ldi	r18, 0x3F	; 63
    28b2:	30 e0       	ldi	r19, 0x00	; 0
    28b4:	4f e7       	ldi	r20, 0x7F	; 127
    28b6:	50 e0       	ldi	r21, 0x00	; 0
    28b8:	60 e0       	ldi	r22, 0x00	; 0
    28ba:	70 e0       	ldi	r23, 0x00	; 0
    28bc:	80 e0       	ldi	r24, 0x00	; 0
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_rectangle(1, 1, 125, 61);
    28c4:	2d e3       	ldi	r18, 0x3D	; 61
    28c6:	30 e0       	ldi	r19, 0x00	; 0
    28c8:	4d e7       	ldi	r20, 0x7D	; 125
    28ca:	50 e0       	ldi	r21, 0x00	; 0
    28cc:	61 e0       	ldi	r22, 0x01	; 1
    28ce:	70 e0       	ldi	r23, 0x00	; 0
    28d0:	81 e0       	ldi	r24, 0x01	; 1
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_rectangle(2, 2, 123, 59);
    28d8:	2b e3       	ldi	r18, 0x3B	; 59
    28da:	30 e0       	ldi	r19, 0x00	; 0
    28dc:	4b e7       	ldi	r20, 0x7B	; 123
    28de:	50 e0       	ldi	r21, 0x00	; 0
    28e0:	62 e0       	ldi	r22, 0x02	; 2
    28e2:	70 e0       	ldi	r23, 0x00	; 0
    28e4:	82 e0       	ldi	r24, 0x02	; 2
    28e6:	90 e0       	ldi	r25, 0x00	; 0
    28e8:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_rectangle(3, 3, 121, 57);
    28ec:	29 e3       	ldi	r18, 0x39	; 57
    28ee:	30 e0       	ldi	r19, 0x00	; 0
    28f0:	49 e7       	ldi	r20, 0x79	; 121
    28f2:	50 e0       	ldi	r21, 0x00	; 0
    28f4:	63 e0       	ldi	r22, 0x03	; 3
    28f6:	70 e0       	ldi	r23, 0x00	; 0
    28f8:	83 e0       	ldi	r24, 0x03	; 3
    28fa:	90 e0       	ldi	r25, 0x00	; 0
    28fc:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Draw_bitmap(Frame_buffer);
    2900:	ce 01       	movw	r24, r28
    2902:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
    2906:	80 e0       	ldi	r24, 0x00	; 0
    2908:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	setpos_LCD_12864(3, 1);
    290c:	61 e0       	ldi	r22, 0x01	; 1
    290e:	70 e0       	ldi	r23, 0x00	; 0
    2910:	83 e0       	ldi	r24, 0x03	; 3
    2912:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	str_LCD_12864 ("HOME");
    2916:	81 e3       	ldi	r24, 0x31	; 49
    2918:	91 e0       	ldi	r25, 0x01	; 1
    291a:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
	setpos_LCD_12864(1, 2);
    291e:	62 e0       	ldi	r22, 0x02	; 2
    2920:	70 e0       	ldi	r23, 0x00	; 0
    2922:	81 e0       	ldi	r24, 0x01	; 1
    2924:	0e 94 67 03 	call	0x6ce	; 0x6ce <setpos_LCD_12864>
	str_LCD_12864 ("METEOSTATION");
    2928:	86 e3       	ldi	r24, 0x36	; 54
    292a:	91 e0       	ldi	r25, 0x01	; 1
    292c:	0e 94 65 01 	call	0x2ca	; 0x2ca <str_LCD_12864>
    2930:	2f ef       	ldi	r18, 0xFF	; 255
    2932:	8b e7       	ldi	r24, 0x7B	; 123
    2934:	92 e9       	ldi	r25, 0x92	; 146
    2936:	21 50       	subi	r18, 0x01	; 1
    2938:	80 40       	sbci	r24, 0x00	; 0
    293a:	90 40       	sbci	r25, 0x00	; 0
    293c:	e1 f7       	brne	.-8      	; 0x2936 <Print_Hello_World+0x92>
    293e:	00 c0       	rjmp	.+0      	; 0x2940 <Print_Hello_World+0x9c>
    2940:	00 00       	nop
	_delay_ms(3000);
	clear_LCD_12864();
    2942:	0e 94 3f 03 	call	0x67e	; 0x67e <clear_LCD_12864>
	LCD_12864_GrapnicMode(1);
    2946:	81 e0       	ldi	r24, 0x01	; 1
    2948:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	LCD_12864_Draw_bitmap(Frame_buffer);
    294c:	ce 01       	movw	r24, r28
    294e:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <LCD_12864_Draw_bitmap>
	LCD_12864_Clean();
    2952:	0e 94 98 04 	call	0x930	; 0x930 <LCD_12864_Clean>
	LCD_12864_GrapnicMode(0);
    2956:	80 e0       	ldi	r24, 0x00	; 0
    2958:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	
}
    295c:	df 91       	pop	r29
    295e:	cf 91       	pop	r28
    2960:	08 95       	ret

00002962 <Print_Download>:
//Окно загрузки
void Print_Download(uint8_t *Frame_buffer)
{
    2962:	0f 93       	push	r16
    2964:	1f 93       	push	r17
    2966:	cf 93       	push	r28
    2968:	8c 01       	movw	r16, r24
	LCD_12864_GrapnicMode(1);
    296a:	81 e0       	ldi	r24, 0x01	; 1
    296c:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
	LCD_12864_Draw_rectangle(6, 35, 112, 15);
    2970:	2f e0       	ldi	r18, 0x0F	; 15
    2972:	30 e0       	ldi	r19, 0x00	; 0
    2974:	40 e7       	ldi	r20, 0x70	; 112
    2976:	50 e0       	ldi	r21, 0x00	; 0
    2978:	63 e2       	ldi	r22, 0x23	; 35
    297a:	70 e0       	ldi	r23, 0x00	; 0
    297c:	86 e0       	ldi	r24, 0x06	; 6
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	0e 94 21 05 	call	0xa42	; 0xa42 <LCD_12864_Draw_rectangle>
	LCD_12864_Decode_UTF8(3, 1, 0, "Пожалуйста подождите.");
    2984:	23 e4       	ldi	r18, 0x43	; 67
    2986:	31 e0       	ldi	r19, 0x01	; 1
    2988:	40 e0       	ldi	r20, 0x00	; 0
    298a:	61 e0       	ldi	r22, 0x01	; 1
    298c:	83 e0       	ldi	r24, 0x03	; 3
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(16, 3, 0, "Идёт загрузка...");
    2994:	29 e5       	ldi	r18, 0x59	; 89
    2996:	31 e0       	ldi	r19, 0x01	; 1
    2998:	40 e0       	ldi	r20, 0x00	; 0
    299a:	63 e0       	ldi	r22, 0x03	; 3
    299c:	80 e1       	ldi	r24, 0x10	; 16
    299e:	90 e0       	ldi	r25, 0x00	; 0
    29a0:	0e 94 c6 03 	call	0x78c	; 0x78c <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_bitmap(Frame_buffer);
    29a4:	c8 01       	movw	r24, r16
    29a6:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <LCD_12864_Draw_bitmap>
	for(uint8_t i = 8; i <= 116 ; i = i + 11)
    29aa:	c8 e0       	ldi	r28, 0x08	; 8
    29ac:	17 c0       	rjmp	.+46     	; 0x29dc <Print_Download+0x7a>
	{
		LCD_12864_Draw_rectangle_filled(i, 37, 9, 11);
    29ae:	2b e0       	ldi	r18, 0x0B	; 11
    29b0:	30 e0       	ldi	r19, 0x00	; 0
    29b2:	49 e0       	ldi	r20, 0x09	; 9
    29b4:	50 e0       	ldi	r21, 0x00	; 0
    29b6:	65 e2       	ldi	r22, 0x25	; 37
    29b8:	70 e0       	ldi	r23, 0x00	; 0
    29ba:	8c 2f       	mov	r24, r28
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	0e 94 64 05 	call	0xac8	; 0xac8 <LCD_12864_Draw_rectangle_filled>
		LCD_12864_Draw_bitmap(Frame_buffer);
    29c2:	c8 01       	movw	r24, r16
    29c4:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <LCD_12864_Draw_bitmap>
    29c8:	2f ef       	ldi	r18, 0xFF	; 255
    29ca:	89 e6       	ldi	r24, 0x69	; 105
    29cc:	98 e1       	ldi	r25, 0x18	; 24
    29ce:	21 50       	subi	r18, 0x01	; 1
    29d0:	80 40       	sbci	r24, 0x00	; 0
    29d2:	90 40       	sbci	r25, 0x00	; 0
    29d4:	e1 f7       	brne	.-8      	; 0x29ce <Print_Download+0x6c>
    29d6:	00 c0       	rjmp	.+0      	; 0x29d8 <Print_Download+0x76>
    29d8:	00 00       	nop
	LCD_12864_GrapnicMode(1);
	LCD_12864_Draw_rectangle(6, 35, 112, 15);
	LCD_12864_Decode_UTF8(3, 1, 0, "Пожалуйста подождите.");
	LCD_12864_Decode_UTF8(16, 3, 0, "Идёт загрузка...");
	LCD_12864_Draw_bitmap(Frame_buffer);
	for(uint8_t i = 8; i <= 116 ; i = i + 11)
    29da:	c5 5f       	subi	r28, 0xF5	; 245
    29dc:	c5 37       	cpi	r28, 0x75	; 117
    29de:	38 f3       	brcs	.-50     	; 0x29ae <Print_Download+0x4c>
	{
		LCD_12864_Draw_rectangle_filled(i, 37, 9, 11);
		LCD_12864_Draw_bitmap(Frame_buffer);
		_delay_ms(500);
	}	
	LCD_12864_GrapnicMode(0);
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <LCD_12864_GrapnicMode>
}
    29e6:	cf 91       	pop	r28
    29e8:	1f 91       	pop	r17
    29ea:	0f 91       	pop	r16
    29ec:	08 95       	ret

000029ee <RAIN_AMOUNT>:
//Вычисление кол-ва осадков
float RAIN_AMOUNT(char *adc_value)
{
    29ee:	cf 93       	push	r28
    29f0:	df 93       	push	r29
    29f2:	00 d0       	rcall	.+0      	; 0x29f4 <RAIN_AMOUNT+0x6>
    29f4:	cd b7       	in	r28, 0x3d	; 61
    29f6:	de b7       	in	r29, 0x3e	; 62
	float RAIN;
	int R;
	if (strlen(adc_value) != 0)
    29f8:	fc 01       	movw	r30, r24
    29fa:	20 81       	ld	r18, Z
    29fc:	22 23       	and	r18, r18
    29fe:	a1 f0       	breq	.+40     	; 0x2a28 <RAIN_AMOUNT+0x3a>
	{
		sscanf(adc_value, "%d", &R);
    2a00:	9e 01       	movw	r18, r28
    2a02:	2f 5f       	subi	r18, 0xFF	; 255
    2a04:	3f 4f       	sbci	r19, 0xFF	; 255
    2a06:	3f 93       	push	r19
    2a08:	2f 93       	push	r18
    2a0a:	2a e6       	ldi	r18, 0x6A	; 106
    2a0c:	31 e0       	ldi	r19, 0x01	; 1
    2a0e:	3f 93       	push	r19
    2a10:	2f 93       	push	r18
    2a12:	9f 93       	push	r25
    2a14:	8f 93       	push	r24
    2a16:	0e 94 65 1c 	call	0x38ca	; 0x38ca <sscanf>
    2a1a:	0f 90       	pop	r0
    2a1c:	0f 90       	pop	r0
    2a1e:	0f 90       	pop	r0
    2a20:	0f 90       	pop	r0
    2a22:	0f 90       	pop	r0
    2a24:	0f 90       	pop	r0
    2a26:	02 c0       	rjmp	.+4      	; 0x2a2c <RAIN_AMOUNT+0x3e>
	}
	else
	{
		R = 0;
    2a28:	1a 82       	std	Y+2, r1	; 0x02
    2a2a:	19 82       	std	Y+1, r1	; 0x01
	}
	RAIN = 3*R*2.45/5120;
    2a2c:	69 81       	ldd	r22, Y+1	; 0x01
    2a2e:	7a 81       	ldd	r23, Y+2	; 0x02
    2a30:	cb 01       	movw	r24, r22
    2a32:	88 0f       	add	r24, r24
    2a34:	99 1f       	adc	r25, r25
    2a36:	68 0f       	add	r22, r24
    2a38:	79 1f       	adc	r23, r25
    2a3a:	07 2e       	mov	r0, r23
    2a3c:	00 0c       	add	r0, r0
    2a3e:	88 0b       	sbc	r24, r24
    2a40:	99 0b       	sbc	r25, r25
    2a42:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <__floatsisf>
    2a46:	2d ec       	ldi	r18, 0xCD	; 205
    2a48:	3c ec       	ldi	r19, 0xCC	; 204
    2a4a:	4c e1       	ldi	r20, 0x1C	; 28
    2a4c:	50 e4       	ldi	r21, 0x40	; 64
    2a4e:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__mulsf3>
    2a52:	20 e0       	ldi	r18, 0x00	; 0
    2a54:	30 e0       	ldi	r19, 0x00	; 0
    2a56:	40 ea       	ldi	r20, 0xA0	; 160
    2a58:	55 e4       	ldi	r21, 0x45	; 69
    2a5a:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <__divsf3>
	
	return RAIN;
}
    2a5e:	0f 90       	pop	r0
    2a60:	0f 90       	pop	r0
    2a62:	df 91       	pop	r29
    2a64:	cf 91       	pop	r28
    2a66:	08 95       	ret

00002a68 <V_BAT>:
//Вычисление уровня заряда АКБ
float V_BAT (char *adc_value)
{
    2a68:	cf 93       	push	r28
    2a6a:	df 93       	push	r29
    2a6c:	00 d0       	rcall	.+0      	; 0x2a6e <V_BAT+0x6>
    2a6e:	cd b7       	in	r28, 0x3d	; 61
    2a70:	de b7       	in	r29, 0x3e	; 62
	float VBAT;
	int V;
	if (strlen(adc_value) != 0)
    2a72:	fc 01       	movw	r30, r24
    2a74:	20 81       	ld	r18, Z
    2a76:	22 23       	and	r18, r18
    2a78:	a1 f0       	breq	.+40     	; 0x2aa2 <V_BAT+0x3a>
	{
		sscanf(adc_value, "%d", &V);
    2a7a:	9e 01       	movw	r18, r28
    2a7c:	2f 5f       	subi	r18, 0xFF	; 255
    2a7e:	3f 4f       	sbci	r19, 0xFF	; 255
    2a80:	3f 93       	push	r19
    2a82:	2f 93       	push	r18
    2a84:	2a e6       	ldi	r18, 0x6A	; 106
    2a86:	31 e0       	ldi	r19, 0x01	; 1
    2a88:	3f 93       	push	r19
    2a8a:	2f 93       	push	r18
    2a8c:	9f 93       	push	r25
    2a8e:	8f 93       	push	r24
    2a90:	0e 94 65 1c 	call	0x38ca	; 0x38ca <sscanf>
    2a94:	0f 90       	pop	r0
    2a96:	0f 90       	pop	r0
    2a98:	0f 90       	pop	r0
    2a9a:	0f 90       	pop	r0
    2a9c:	0f 90       	pop	r0
    2a9e:	0f 90       	pop	r0
    2aa0:	02 c0       	rjmp	.+4      	; 0x2aa6 <V_BAT+0x3e>
	}
	else
	{
		V = 0;
    2aa2:	1a 82       	std	Y+2, r1	; 0x02
    2aa4:	19 82       	std	Y+1, r1	; 0x01
	}
	VBAT = V*2.45*3/1024;
    2aa6:	69 81       	ldd	r22, Y+1	; 0x01
    2aa8:	7a 81       	ldd	r23, Y+2	; 0x02
    2aaa:	07 2e       	mov	r0, r23
    2aac:	00 0c       	add	r0, r0
    2aae:	88 0b       	sbc	r24, r24
    2ab0:	99 0b       	sbc	r25, r25
    2ab2:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <__floatsisf>
    2ab6:	2d ec       	ldi	r18, 0xCD	; 205
    2ab8:	3c ec       	ldi	r19, 0xCC	; 204
    2aba:	4c e1       	ldi	r20, 0x1C	; 28
    2abc:	50 e4       	ldi	r21, 0x40	; 64
    2abe:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__mulsf3>
    2ac2:	20 e0       	ldi	r18, 0x00	; 0
    2ac4:	30 e0       	ldi	r19, 0x00	; 0
    2ac6:	40 e4       	ldi	r20, 0x40	; 64
    2ac8:	50 e4       	ldi	r21, 0x40	; 64
    2aca:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__mulsf3>
    2ace:	20 e0       	ldi	r18, 0x00	; 0
    2ad0:	30 e0       	ldi	r19, 0x00	; 0
    2ad2:	40 e8       	ldi	r20, 0x80	; 128
    2ad4:	5a e3       	ldi	r21, 0x3A	; 58
    2ad6:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__mulsf3>
	
	return VBAT;
}
    2ada:	0f 90       	pop	r0
    2adc:	0f 90       	pop	r0
    2ade:	df 91       	pop	r29
    2ae0:	cf 91       	pop	r28
    2ae2:	08 95       	ret

00002ae4 <wind_speed>:
//Вычисление скорости ветра
float wind_speed (char *counter)
{
    2ae4:	cf 93       	push	r28
    2ae6:	df 93       	push	r29
    2ae8:	00 d0       	rcall	.+0      	; 0x2aea <wind_speed+0x6>
    2aea:	cd b7       	in	r28, 0x3d	; 61
    2aec:	de b7       	in	r29, 0x3e	; 62
	float RADIUS = 0.09;
	float speed = 0;
	int n;
	if (strlen(counter) != 0)
    2aee:	fc 01       	movw	r30, r24
    2af0:	20 81       	ld	r18, Z
    2af2:	22 23       	and	r18, r18
    2af4:	a1 f0       	breq	.+40     	; 0x2b1e <wind_speed+0x3a>
	{
		sscanf(counter, "%d", &n);
    2af6:	9e 01       	movw	r18, r28
    2af8:	2f 5f       	subi	r18, 0xFF	; 255
    2afa:	3f 4f       	sbci	r19, 0xFF	; 255
    2afc:	3f 93       	push	r19
    2afe:	2f 93       	push	r18
    2b00:	2a e6       	ldi	r18, 0x6A	; 106
    2b02:	31 e0       	ldi	r19, 0x01	; 1
    2b04:	3f 93       	push	r19
    2b06:	2f 93       	push	r18
    2b08:	9f 93       	push	r25
    2b0a:	8f 93       	push	r24
    2b0c:	0e 94 65 1c 	call	0x38ca	; 0x38ca <sscanf>
    2b10:	0f 90       	pop	r0
    2b12:	0f 90       	pop	r0
    2b14:	0f 90       	pop	r0
    2b16:	0f 90       	pop	r0
    2b18:	0f 90       	pop	r0
    2b1a:	0f 90       	pop	r0
    2b1c:	02 c0       	rjmp	.+4      	; 0x2b22 <wind_speed+0x3e>
	}
	else
	{
		n = 0;
    2b1e:	1a 82       	std	Y+2, r1	; 0x02
    2b20:	19 82       	std	Y+1, r1	; 0x01
	}
	speed = 2*3.14*RADIUS*n/4; //период 2 сек+2 магнита
    2b22:	69 81       	ldd	r22, Y+1	; 0x01
    2b24:	7a 81       	ldd	r23, Y+2	; 0x02
    2b26:	07 2e       	mov	r0, r23
    2b28:	00 0c       	add	r0, r0
    2b2a:	88 0b       	sbc	r24, r24
    2b2c:	99 0b       	sbc	r25, r25
    2b2e:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <__floatsisf>
    2b32:	23 ef       	ldi	r18, 0xF3	; 243
    2b34:	30 eb       	ldi	r19, 0xB0	; 176
    2b36:	40 e1       	ldi	r20, 0x10	; 16
    2b38:	5f e3       	ldi	r21, 0x3F	; 63
    2b3a:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__mulsf3>
    2b3e:	20 e0       	ldi	r18, 0x00	; 0
    2b40:	30 e0       	ldi	r19, 0x00	; 0
    2b42:	40 e8       	ldi	r20, 0x80	; 128
    2b44:	5e e3       	ldi	r21, 0x3E	; 62
    2b46:	0e 94 aa 16 	call	0x2d54	; 0x2d54 <__mulsf3>
	
	return speed;
    2b4a:	0f 90       	pop	r0
    2b4c:	0f 90       	pop	r0
    2b4e:	df 91       	pop	r29
    2b50:	cf 91       	pop	r28
    2b52:	08 95       	ret

00002b54 <__divsf3>:
    2b54:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <__divsf3x>
    2b58:	0c 94 70 16 	jmp	0x2ce0	; 0x2ce0 <__fp_round>
    2b5c:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__fp_pscB>
    2b60:	58 f0       	brcs	.+22     	; 0x2b78 <__divsf3+0x24>
    2b62:	0e 94 62 16 	call	0x2cc4	; 0x2cc4 <__fp_pscA>
    2b66:	40 f0       	brcs	.+16     	; 0x2b78 <__divsf3+0x24>
    2b68:	29 f4       	brne	.+10     	; 0x2b74 <__divsf3+0x20>
    2b6a:	5f 3f       	cpi	r21, 0xFF	; 255
    2b6c:	29 f0       	breq	.+10     	; 0x2b78 <__divsf3+0x24>
    2b6e:	0c 94 59 16 	jmp	0x2cb2	; 0x2cb2 <__fp_inf>
    2b72:	51 11       	cpse	r21, r1
    2b74:	0c 94 a4 16 	jmp	0x2d48	; 0x2d48 <__fp_szero>
    2b78:	0c 94 5f 16 	jmp	0x2cbe	; 0x2cbe <__fp_nan>

00002b7c <__divsf3x>:
    2b7c:	0e 94 81 16 	call	0x2d02	; 0x2d02 <__fp_split3>
    2b80:	68 f3       	brcs	.-38     	; 0x2b5c <__divsf3+0x8>

00002b82 <__divsf3_pse>:
    2b82:	99 23       	and	r25, r25
    2b84:	b1 f3       	breq	.-20     	; 0x2b72 <__divsf3+0x1e>
    2b86:	55 23       	and	r21, r21
    2b88:	91 f3       	breq	.-28     	; 0x2b6e <__divsf3+0x1a>
    2b8a:	95 1b       	sub	r25, r21
    2b8c:	55 0b       	sbc	r21, r21
    2b8e:	bb 27       	eor	r27, r27
    2b90:	aa 27       	eor	r26, r26
    2b92:	62 17       	cp	r22, r18
    2b94:	73 07       	cpc	r23, r19
    2b96:	84 07       	cpc	r24, r20
    2b98:	38 f0       	brcs	.+14     	; 0x2ba8 <__divsf3_pse+0x26>
    2b9a:	9f 5f       	subi	r25, 0xFF	; 255
    2b9c:	5f 4f       	sbci	r21, 0xFF	; 255
    2b9e:	22 0f       	add	r18, r18
    2ba0:	33 1f       	adc	r19, r19
    2ba2:	44 1f       	adc	r20, r20
    2ba4:	aa 1f       	adc	r26, r26
    2ba6:	a9 f3       	breq	.-22     	; 0x2b92 <__divsf3_pse+0x10>
    2ba8:	35 d0       	rcall	.+106    	; 0x2c14 <__divsf3_pse+0x92>
    2baa:	0e 2e       	mov	r0, r30
    2bac:	3a f0       	brmi	.+14     	; 0x2bbc <__divsf3_pse+0x3a>
    2bae:	e0 e8       	ldi	r30, 0x80	; 128
    2bb0:	32 d0       	rcall	.+100    	; 0x2c16 <__divsf3_pse+0x94>
    2bb2:	91 50       	subi	r25, 0x01	; 1
    2bb4:	50 40       	sbci	r21, 0x00	; 0
    2bb6:	e6 95       	lsr	r30
    2bb8:	00 1c       	adc	r0, r0
    2bba:	ca f7       	brpl	.-14     	; 0x2bae <__divsf3_pse+0x2c>
    2bbc:	2b d0       	rcall	.+86     	; 0x2c14 <__divsf3_pse+0x92>
    2bbe:	fe 2f       	mov	r31, r30
    2bc0:	29 d0       	rcall	.+82     	; 0x2c14 <__divsf3_pse+0x92>
    2bc2:	66 0f       	add	r22, r22
    2bc4:	77 1f       	adc	r23, r23
    2bc6:	88 1f       	adc	r24, r24
    2bc8:	bb 1f       	adc	r27, r27
    2bca:	26 17       	cp	r18, r22
    2bcc:	37 07       	cpc	r19, r23
    2bce:	48 07       	cpc	r20, r24
    2bd0:	ab 07       	cpc	r26, r27
    2bd2:	b0 e8       	ldi	r27, 0x80	; 128
    2bd4:	09 f0       	breq	.+2      	; 0x2bd8 <__divsf3_pse+0x56>
    2bd6:	bb 0b       	sbc	r27, r27
    2bd8:	80 2d       	mov	r24, r0
    2bda:	bf 01       	movw	r22, r30
    2bdc:	ff 27       	eor	r31, r31
    2bde:	93 58       	subi	r25, 0x83	; 131
    2be0:	5f 4f       	sbci	r21, 0xFF	; 255
    2be2:	3a f0       	brmi	.+14     	; 0x2bf2 <__divsf3_pse+0x70>
    2be4:	9e 3f       	cpi	r25, 0xFE	; 254
    2be6:	51 05       	cpc	r21, r1
    2be8:	78 f0       	brcs	.+30     	; 0x2c08 <__divsf3_pse+0x86>
    2bea:	0c 94 59 16 	jmp	0x2cb2	; 0x2cb2 <__fp_inf>
    2bee:	0c 94 a4 16 	jmp	0x2d48	; 0x2d48 <__fp_szero>
    2bf2:	5f 3f       	cpi	r21, 0xFF	; 255
    2bf4:	e4 f3       	brlt	.-8      	; 0x2bee <__divsf3_pse+0x6c>
    2bf6:	98 3e       	cpi	r25, 0xE8	; 232
    2bf8:	d4 f3       	brlt	.-12     	; 0x2bee <__divsf3_pse+0x6c>
    2bfa:	86 95       	lsr	r24
    2bfc:	77 95       	ror	r23
    2bfe:	67 95       	ror	r22
    2c00:	b7 95       	ror	r27
    2c02:	f7 95       	ror	r31
    2c04:	9f 5f       	subi	r25, 0xFF	; 255
    2c06:	c9 f7       	brne	.-14     	; 0x2bfa <__divsf3_pse+0x78>
    2c08:	88 0f       	add	r24, r24
    2c0a:	91 1d       	adc	r25, r1
    2c0c:	96 95       	lsr	r25
    2c0e:	87 95       	ror	r24
    2c10:	97 f9       	bld	r25, 7
    2c12:	08 95       	ret
    2c14:	e1 e0       	ldi	r30, 0x01	; 1
    2c16:	66 0f       	add	r22, r22
    2c18:	77 1f       	adc	r23, r23
    2c1a:	88 1f       	adc	r24, r24
    2c1c:	bb 1f       	adc	r27, r27
    2c1e:	62 17       	cp	r22, r18
    2c20:	73 07       	cpc	r23, r19
    2c22:	84 07       	cpc	r24, r20
    2c24:	ba 07       	cpc	r27, r26
    2c26:	20 f0       	brcs	.+8      	; 0x2c30 <__divsf3_pse+0xae>
    2c28:	62 1b       	sub	r22, r18
    2c2a:	73 0b       	sbc	r23, r19
    2c2c:	84 0b       	sbc	r24, r20
    2c2e:	ba 0b       	sbc	r27, r26
    2c30:	ee 1f       	adc	r30, r30
    2c32:	88 f7       	brcc	.-30     	; 0x2c16 <__divsf3_pse+0x94>
    2c34:	e0 95       	com	r30
    2c36:	08 95       	ret

00002c38 <__floatunsisf>:
    2c38:	e8 94       	clt
    2c3a:	09 c0       	rjmp	.+18     	; 0x2c4e <__floatsisf+0x12>

00002c3c <__floatsisf>:
    2c3c:	97 fb       	bst	r25, 7
    2c3e:	3e f4       	brtc	.+14     	; 0x2c4e <__floatsisf+0x12>
    2c40:	90 95       	com	r25
    2c42:	80 95       	com	r24
    2c44:	70 95       	com	r23
    2c46:	61 95       	neg	r22
    2c48:	7f 4f       	sbci	r23, 0xFF	; 255
    2c4a:	8f 4f       	sbci	r24, 0xFF	; 255
    2c4c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c4e:	99 23       	and	r25, r25
    2c50:	a9 f0       	breq	.+42     	; 0x2c7c <__floatsisf+0x40>
    2c52:	f9 2f       	mov	r31, r25
    2c54:	96 e9       	ldi	r25, 0x96	; 150
    2c56:	bb 27       	eor	r27, r27
    2c58:	93 95       	inc	r25
    2c5a:	f6 95       	lsr	r31
    2c5c:	87 95       	ror	r24
    2c5e:	77 95       	ror	r23
    2c60:	67 95       	ror	r22
    2c62:	b7 95       	ror	r27
    2c64:	f1 11       	cpse	r31, r1
    2c66:	f8 cf       	rjmp	.-16     	; 0x2c58 <__floatsisf+0x1c>
    2c68:	fa f4       	brpl	.+62     	; 0x2ca8 <__floatsisf+0x6c>
    2c6a:	bb 0f       	add	r27, r27
    2c6c:	11 f4       	brne	.+4      	; 0x2c72 <__floatsisf+0x36>
    2c6e:	60 ff       	sbrs	r22, 0
    2c70:	1b c0       	rjmp	.+54     	; 0x2ca8 <__floatsisf+0x6c>
    2c72:	6f 5f       	subi	r22, 0xFF	; 255
    2c74:	7f 4f       	sbci	r23, 0xFF	; 255
    2c76:	8f 4f       	sbci	r24, 0xFF	; 255
    2c78:	9f 4f       	sbci	r25, 0xFF	; 255
    2c7a:	16 c0       	rjmp	.+44     	; 0x2ca8 <__floatsisf+0x6c>
    2c7c:	88 23       	and	r24, r24
    2c7e:	11 f0       	breq	.+4      	; 0x2c84 <__floatsisf+0x48>
    2c80:	96 e9       	ldi	r25, 0x96	; 150
    2c82:	11 c0       	rjmp	.+34     	; 0x2ca6 <__floatsisf+0x6a>
    2c84:	77 23       	and	r23, r23
    2c86:	21 f0       	breq	.+8      	; 0x2c90 <__floatsisf+0x54>
    2c88:	9e e8       	ldi	r25, 0x8E	; 142
    2c8a:	87 2f       	mov	r24, r23
    2c8c:	76 2f       	mov	r23, r22
    2c8e:	05 c0       	rjmp	.+10     	; 0x2c9a <__floatsisf+0x5e>
    2c90:	66 23       	and	r22, r22
    2c92:	71 f0       	breq	.+28     	; 0x2cb0 <__floatsisf+0x74>
    2c94:	96 e8       	ldi	r25, 0x86	; 134
    2c96:	86 2f       	mov	r24, r22
    2c98:	70 e0       	ldi	r23, 0x00	; 0
    2c9a:	60 e0       	ldi	r22, 0x00	; 0
    2c9c:	2a f0       	brmi	.+10     	; 0x2ca8 <__floatsisf+0x6c>
    2c9e:	9a 95       	dec	r25
    2ca0:	66 0f       	add	r22, r22
    2ca2:	77 1f       	adc	r23, r23
    2ca4:	88 1f       	adc	r24, r24
    2ca6:	da f7       	brpl	.-10     	; 0x2c9e <__floatsisf+0x62>
    2ca8:	88 0f       	add	r24, r24
    2caa:	96 95       	lsr	r25
    2cac:	87 95       	ror	r24
    2cae:	97 f9       	bld	r25, 7
    2cb0:	08 95       	ret

00002cb2 <__fp_inf>:
    2cb2:	97 f9       	bld	r25, 7
    2cb4:	9f 67       	ori	r25, 0x7F	; 127
    2cb6:	80 e8       	ldi	r24, 0x80	; 128
    2cb8:	70 e0       	ldi	r23, 0x00	; 0
    2cba:	60 e0       	ldi	r22, 0x00	; 0
    2cbc:	08 95       	ret

00002cbe <__fp_nan>:
    2cbe:	9f ef       	ldi	r25, 0xFF	; 255
    2cc0:	80 ec       	ldi	r24, 0xC0	; 192
    2cc2:	08 95       	ret

00002cc4 <__fp_pscA>:
    2cc4:	00 24       	eor	r0, r0
    2cc6:	0a 94       	dec	r0
    2cc8:	16 16       	cp	r1, r22
    2cca:	17 06       	cpc	r1, r23
    2ccc:	18 06       	cpc	r1, r24
    2cce:	09 06       	cpc	r0, r25
    2cd0:	08 95       	ret

00002cd2 <__fp_pscB>:
    2cd2:	00 24       	eor	r0, r0
    2cd4:	0a 94       	dec	r0
    2cd6:	12 16       	cp	r1, r18
    2cd8:	13 06       	cpc	r1, r19
    2cda:	14 06       	cpc	r1, r20
    2cdc:	05 06       	cpc	r0, r21
    2cde:	08 95       	ret

00002ce0 <__fp_round>:
    2ce0:	09 2e       	mov	r0, r25
    2ce2:	03 94       	inc	r0
    2ce4:	00 0c       	add	r0, r0
    2ce6:	11 f4       	brne	.+4      	; 0x2cec <__fp_round+0xc>
    2ce8:	88 23       	and	r24, r24
    2cea:	52 f0       	brmi	.+20     	; 0x2d00 <__fp_round+0x20>
    2cec:	bb 0f       	add	r27, r27
    2cee:	40 f4       	brcc	.+16     	; 0x2d00 <__fp_round+0x20>
    2cf0:	bf 2b       	or	r27, r31
    2cf2:	11 f4       	brne	.+4      	; 0x2cf8 <__fp_round+0x18>
    2cf4:	60 ff       	sbrs	r22, 0
    2cf6:	04 c0       	rjmp	.+8      	; 0x2d00 <__fp_round+0x20>
    2cf8:	6f 5f       	subi	r22, 0xFF	; 255
    2cfa:	7f 4f       	sbci	r23, 0xFF	; 255
    2cfc:	8f 4f       	sbci	r24, 0xFF	; 255
    2cfe:	9f 4f       	sbci	r25, 0xFF	; 255
    2d00:	08 95       	ret

00002d02 <__fp_split3>:
    2d02:	57 fd       	sbrc	r21, 7
    2d04:	90 58       	subi	r25, 0x80	; 128
    2d06:	44 0f       	add	r20, r20
    2d08:	55 1f       	adc	r21, r21
    2d0a:	59 f0       	breq	.+22     	; 0x2d22 <__fp_splitA+0x10>
    2d0c:	5f 3f       	cpi	r21, 0xFF	; 255
    2d0e:	71 f0       	breq	.+28     	; 0x2d2c <__fp_splitA+0x1a>
    2d10:	47 95       	ror	r20

00002d12 <__fp_splitA>:
    2d12:	88 0f       	add	r24, r24
    2d14:	97 fb       	bst	r25, 7
    2d16:	99 1f       	adc	r25, r25
    2d18:	61 f0       	breq	.+24     	; 0x2d32 <__fp_splitA+0x20>
    2d1a:	9f 3f       	cpi	r25, 0xFF	; 255
    2d1c:	79 f0       	breq	.+30     	; 0x2d3c <__fp_splitA+0x2a>
    2d1e:	87 95       	ror	r24
    2d20:	08 95       	ret
    2d22:	12 16       	cp	r1, r18
    2d24:	13 06       	cpc	r1, r19
    2d26:	14 06       	cpc	r1, r20
    2d28:	55 1f       	adc	r21, r21
    2d2a:	f2 cf       	rjmp	.-28     	; 0x2d10 <__fp_split3+0xe>
    2d2c:	46 95       	lsr	r20
    2d2e:	f1 df       	rcall	.-30     	; 0x2d12 <__fp_splitA>
    2d30:	08 c0       	rjmp	.+16     	; 0x2d42 <__fp_splitA+0x30>
    2d32:	16 16       	cp	r1, r22
    2d34:	17 06       	cpc	r1, r23
    2d36:	18 06       	cpc	r1, r24
    2d38:	99 1f       	adc	r25, r25
    2d3a:	f1 cf       	rjmp	.-30     	; 0x2d1e <__fp_splitA+0xc>
    2d3c:	86 95       	lsr	r24
    2d3e:	71 05       	cpc	r23, r1
    2d40:	61 05       	cpc	r22, r1
    2d42:	08 94       	sec
    2d44:	08 95       	ret

00002d46 <__fp_zero>:
    2d46:	e8 94       	clt

00002d48 <__fp_szero>:
    2d48:	bb 27       	eor	r27, r27
    2d4a:	66 27       	eor	r22, r22
    2d4c:	77 27       	eor	r23, r23
    2d4e:	cb 01       	movw	r24, r22
    2d50:	97 f9       	bld	r25, 7
    2d52:	08 95       	ret

00002d54 <__mulsf3>:
    2d54:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <__mulsf3x>
    2d58:	0c 94 70 16 	jmp	0x2ce0	; 0x2ce0 <__fp_round>
    2d5c:	0e 94 62 16 	call	0x2cc4	; 0x2cc4 <__fp_pscA>
    2d60:	38 f0       	brcs	.+14     	; 0x2d70 <__mulsf3+0x1c>
    2d62:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <__fp_pscB>
    2d66:	20 f0       	brcs	.+8      	; 0x2d70 <__mulsf3+0x1c>
    2d68:	95 23       	and	r25, r21
    2d6a:	11 f0       	breq	.+4      	; 0x2d70 <__mulsf3+0x1c>
    2d6c:	0c 94 59 16 	jmp	0x2cb2	; 0x2cb2 <__fp_inf>
    2d70:	0c 94 5f 16 	jmp	0x2cbe	; 0x2cbe <__fp_nan>
    2d74:	11 24       	eor	r1, r1
    2d76:	0c 94 a4 16 	jmp	0x2d48	; 0x2d48 <__fp_szero>

00002d7a <__mulsf3x>:
    2d7a:	0e 94 81 16 	call	0x2d02	; 0x2d02 <__fp_split3>
    2d7e:	70 f3       	brcs	.-36     	; 0x2d5c <__mulsf3+0x8>

00002d80 <__mulsf3_pse>:
    2d80:	95 9f       	mul	r25, r21
    2d82:	c1 f3       	breq	.-16     	; 0x2d74 <__mulsf3+0x20>
    2d84:	95 0f       	add	r25, r21
    2d86:	50 e0       	ldi	r21, 0x00	; 0
    2d88:	55 1f       	adc	r21, r21
    2d8a:	62 9f       	mul	r22, r18
    2d8c:	f0 01       	movw	r30, r0
    2d8e:	72 9f       	mul	r23, r18
    2d90:	bb 27       	eor	r27, r27
    2d92:	f0 0d       	add	r31, r0
    2d94:	b1 1d       	adc	r27, r1
    2d96:	63 9f       	mul	r22, r19
    2d98:	aa 27       	eor	r26, r26
    2d9a:	f0 0d       	add	r31, r0
    2d9c:	b1 1d       	adc	r27, r1
    2d9e:	aa 1f       	adc	r26, r26
    2da0:	64 9f       	mul	r22, r20
    2da2:	66 27       	eor	r22, r22
    2da4:	b0 0d       	add	r27, r0
    2da6:	a1 1d       	adc	r26, r1
    2da8:	66 1f       	adc	r22, r22
    2daa:	82 9f       	mul	r24, r18
    2dac:	22 27       	eor	r18, r18
    2dae:	b0 0d       	add	r27, r0
    2db0:	a1 1d       	adc	r26, r1
    2db2:	62 1f       	adc	r22, r18
    2db4:	73 9f       	mul	r23, r19
    2db6:	b0 0d       	add	r27, r0
    2db8:	a1 1d       	adc	r26, r1
    2dba:	62 1f       	adc	r22, r18
    2dbc:	83 9f       	mul	r24, r19
    2dbe:	a0 0d       	add	r26, r0
    2dc0:	61 1d       	adc	r22, r1
    2dc2:	22 1f       	adc	r18, r18
    2dc4:	74 9f       	mul	r23, r20
    2dc6:	33 27       	eor	r19, r19
    2dc8:	a0 0d       	add	r26, r0
    2dca:	61 1d       	adc	r22, r1
    2dcc:	23 1f       	adc	r18, r19
    2dce:	84 9f       	mul	r24, r20
    2dd0:	60 0d       	add	r22, r0
    2dd2:	21 1d       	adc	r18, r1
    2dd4:	82 2f       	mov	r24, r18
    2dd6:	76 2f       	mov	r23, r22
    2dd8:	6a 2f       	mov	r22, r26
    2dda:	11 24       	eor	r1, r1
    2ddc:	9f 57       	subi	r25, 0x7F	; 127
    2dde:	50 40       	sbci	r21, 0x00	; 0
    2de0:	9a f0       	brmi	.+38     	; 0x2e08 <__mulsf3_pse+0x88>
    2de2:	f1 f0       	breq	.+60     	; 0x2e20 <__mulsf3_pse+0xa0>
    2de4:	88 23       	and	r24, r24
    2de6:	4a f0       	brmi	.+18     	; 0x2dfa <__mulsf3_pse+0x7a>
    2de8:	ee 0f       	add	r30, r30
    2dea:	ff 1f       	adc	r31, r31
    2dec:	bb 1f       	adc	r27, r27
    2dee:	66 1f       	adc	r22, r22
    2df0:	77 1f       	adc	r23, r23
    2df2:	88 1f       	adc	r24, r24
    2df4:	91 50       	subi	r25, 0x01	; 1
    2df6:	50 40       	sbci	r21, 0x00	; 0
    2df8:	a9 f7       	brne	.-22     	; 0x2de4 <__mulsf3_pse+0x64>
    2dfa:	9e 3f       	cpi	r25, 0xFE	; 254
    2dfc:	51 05       	cpc	r21, r1
    2dfe:	80 f0       	brcs	.+32     	; 0x2e20 <__mulsf3_pse+0xa0>
    2e00:	0c 94 59 16 	jmp	0x2cb2	; 0x2cb2 <__fp_inf>
    2e04:	0c 94 a4 16 	jmp	0x2d48	; 0x2d48 <__fp_szero>
    2e08:	5f 3f       	cpi	r21, 0xFF	; 255
    2e0a:	e4 f3       	brlt	.-8      	; 0x2e04 <__mulsf3_pse+0x84>
    2e0c:	98 3e       	cpi	r25, 0xE8	; 232
    2e0e:	d4 f3       	brlt	.-12     	; 0x2e04 <__mulsf3_pse+0x84>
    2e10:	86 95       	lsr	r24
    2e12:	77 95       	ror	r23
    2e14:	67 95       	ror	r22
    2e16:	b7 95       	ror	r27
    2e18:	f7 95       	ror	r31
    2e1a:	e7 95       	ror	r30
    2e1c:	9f 5f       	subi	r25, 0xFF	; 255
    2e1e:	c1 f7       	brne	.-16     	; 0x2e10 <__mulsf3_pse+0x90>
    2e20:	fe 2b       	or	r31, r30
    2e22:	88 0f       	add	r24, r24
    2e24:	91 1d       	adc	r25, r1
    2e26:	96 95       	lsr	r25
    2e28:	87 95       	ror	r24
    2e2a:	97 f9       	bld	r25, 7
    2e2c:	08 95       	ret

00002e2e <vfprintf>:
    2e2e:	a0 e1       	ldi	r26, 0x10	; 16
    2e30:	b0 e0       	ldi	r27, 0x00	; 0
    2e32:	ed e1       	ldi	r30, 0x1D	; 29
    2e34:	f7 e1       	ldi	r31, 0x17	; 23
    2e36:	0c 94 c1 1a 	jmp	0x3582	; 0x3582 <__prologue_saves__>
    2e3a:	7c 01       	movw	r14, r24
    2e3c:	1b 01       	movw	r2, r22
    2e3e:	6a 01       	movw	r12, r20
    2e40:	fc 01       	movw	r30, r24
    2e42:	17 82       	std	Z+7, r1	; 0x07
    2e44:	16 82       	std	Z+6, r1	; 0x06
    2e46:	83 81       	ldd	r24, Z+3	; 0x03
    2e48:	81 ff       	sbrs	r24, 1
    2e4a:	44 c3       	rjmp	.+1672   	; 0x34d4 <vfprintf+0x6a6>
    2e4c:	9e 01       	movw	r18, r28
    2e4e:	2f 5f       	subi	r18, 0xFF	; 255
    2e50:	3f 4f       	sbci	r19, 0xFF	; 255
    2e52:	39 01       	movw	r6, r18
    2e54:	f7 01       	movw	r30, r14
    2e56:	93 81       	ldd	r25, Z+3	; 0x03
    2e58:	f1 01       	movw	r30, r2
    2e5a:	93 fd       	sbrc	r25, 3
    2e5c:	85 91       	lpm	r24, Z+
    2e5e:	93 ff       	sbrs	r25, 3
    2e60:	81 91       	ld	r24, Z+
    2e62:	1f 01       	movw	r2, r30
    2e64:	88 23       	and	r24, r24
    2e66:	09 f4       	brne	.+2      	; 0x2e6a <vfprintf+0x3c>
    2e68:	31 c3       	rjmp	.+1634   	; 0x34cc <vfprintf+0x69e>
    2e6a:	85 32       	cpi	r24, 0x25	; 37
    2e6c:	39 f4       	brne	.+14     	; 0x2e7c <vfprintf+0x4e>
    2e6e:	93 fd       	sbrc	r25, 3
    2e70:	85 91       	lpm	r24, Z+
    2e72:	93 ff       	sbrs	r25, 3
    2e74:	81 91       	ld	r24, Z+
    2e76:	1f 01       	movw	r2, r30
    2e78:	85 32       	cpi	r24, 0x25	; 37
    2e7a:	39 f4       	brne	.+14     	; 0x2e8a <vfprintf+0x5c>
    2e7c:	b7 01       	movw	r22, r14
    2e7e:	90 e0       	ldi	r25, 0x00	; 0
    2e80:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    2e84:	56 01       	movw	r10, r12
    2e86:	65 01       	movw	r12, r10
    2e88:	e5 cf       	rjmp	.-54     	; 0x2e54 <vfprintf+0x26>
    2e8a:	10 e0       	ldi	r17, 0x00	; 0
    2e8c:	51 2c       	mov	r5, r1
    2e8e:	91 2c       	mov	r9, r1
    2e90:	ff e1       	ldi	r31, 0x1F	; 31
    2e92:	f9 15       	cp	r31, r9
    2e94:	d8 f0       	brcs	.+54     	; 0x2ecc <vfprintf+0x9e>
    2e96:	8b 32       	cpi	r24, 0x2B	; 43
    2e98:	79 f0       	breq	.+30     	; 0x2eb8 <vfprintf+0x8a>
    2e9a:	38 f4       	brcc	.+14     	; 0x2eaa <vfprintf+0x7c>
    2e9c:	80 32       	cpi	r24, 0x20	; 32
    2e9e:	79 f0       	breq	.+30     	; 0x2ebe <vfprintf+0x90>
    2ea0:	83 32       	cpi	r24, 0x23	; 35
    2ea2:	a1 f4       	brne	.+40     	; 0x2ecc <vfprintf+0x9e>
    2ea4:	f9 2d       	mov	r31, r9
    2ea6:	f0 61       	ori	r31, 0x10	; 16
    2ea8:	2e c0       	rjmp	.+92     	; 0x2f06 <vfprintf+0xd8>
    2eaa:	8d 32       	cpi	r24, 0x2D	; 45
    2eac:	61 f0       	breq	.+24     	; 0x2ec6 <vfprintf+0x98>
    2eae:	80 33       	cpi	r24, 0x30	; 48
    2eb0:	69 f4       	brne	.+26     	; 0x2ecc <vfprintf+0x9e>
    2eb2:	29 2d       	mov	r18, r9
    2eb4:	21 60       	ori	r18, 0x01	; 1
    2eb6:	2d c0       	rjmp	.+90     	; 0x2f12 <vfprintf+0xe4>
    2eb8:	39 2d       	mov	r19, r9
    2eba:	32 60       	ori	r19, 0x02	; 2
    2ebc:	93 2e       	mov	r9, r19
    2ebe:	89 2d       	mov	r24, r9
    2ec0:	84 60       	ori	r24, 0x04	; 4
    2ec2:	98 2e       	mov	r9, r24
    2ec4:	2a c0       	rjmp	.+84     	; 0x2f1a <vfprintf+0xec>
    2ec6:	e9 2d       	mov	r30, r9
    2ec8:	e8 60       	ori	r30, 0x08	; 8
    2eca:	15 c0       	rjmp	.+42     	; 0x2ef6 <vfprintf+0xc8>
    2ecc:	97 fc       	sbrc	r9, 7
    2ece:	2d c0       	rjmp	.+90     	; 0x2f2a <vfprintf+0xfc>
    2ed0:	20 ed       	ldi	r18, 0xD0	; 208
    2ed2:	28 0f       	add	r18, r24
    2ed4:	2a 30       	cpi	r18, 0x0A	; 10
    2ed6:	88 f4       	brcc	.+34     	; 0x2efa <vfprintf+0xcc>
    2ed8:	96 fe       	sbrs	r9, 6
    2eda:	06 c0       	rjmp	.+12     	; 0x2ee8 <vfprintf+0xba>
    2edc:	3a e0       	ldi	r19, 0x0A	; 10
    2ede:	13 9f       	mul	r17, r19
    2ee0:	20 0d       	add	r18, r0
    2ee2:	11 24       	eor	r1, r1
    2ee4:	12 2f       	mov	r17, r18
    2ee6:	19 c0       	rjmp	.+50     	; 0x2f1a <vfprintf+0xec>
    2ee8:	8a e0       	ldi	r24, 0x0A	; 10
    2eea:	58 9e       	mul	r5, r24
    2eec:	20 0d       	add	r18, r0
    2eee:	11 24       	eor	r1, r1
    2ef0:	52 2e       	mov	r5, r18
    2ef2:	e9 2d       	mov	r30, r9
    2ef4:	e0 62       	ori	r30, 0x20	; 32
    2ef6:	9e 2e       	mov	r9, r30
    2ef8:	10 c0       	rjmp	.+32     	; 0x2f1a <vfprintf+0xec>
    2efa:	8e 32       	cpi	r24, 0x2E	; 46
    2efc:	31 f4       	brne	.+12     	; 0x2f0a <vfprintf+0xdc>
    2efe:	96 fc       	sbrc	r9, 6
    2f00:	e5 c2       	rjmp	.+1482   	; 0x34cc <vfprintf+0x69e>
    2f02:	f9 2d       	mov	r31, r9
    2f04:	f0 64       	ori	r31, 0x40	; 64
    2f06:	9f 2e       	mov	r9, r31
    2f08:	08 c0       	rjmp	.+16     	; 0x2f1a <vfprintf+0xec>
    2f0a:	8c 36       	cpi	r24, 0x6C	; 108
    2f0c:	21 f4       	brne	.+8      	; 0x2f16 <vfprintf+0xe8>
    2f0e:	29 2d       	mov	r18, r9
    2f10:	20 68       	ori	r18, 0x80	; 128
    2f12:	92 2e       	mov	r9, r18
    2f14:	02 c0       	rjmp	.+4      	; 0x2f1a <vfprintf+0xec>
    2f16:	88 36       	cpi	r24, 0x68	; 104
    2f18:	41 f4       	brne	.+16     	; 0x2f2a <vfprintf+0xfc>
    2f1a:	f1 01       	movw	r30, r2
    2f1c:	93 fd       	sbrc	r25, 3
    2f1e:	85 91       	lpm	r24, Z+
    2f20:	93 ff       	sbrs	r25, 3
    2f22:	81 91       	ld	r24, Z+
    2f24:	1f 01       	movw	r2, r30
    2f26:	81 11       	cpse	r24, r1
    2f28:	b3 cf       	rjmp	.-154    	; 0x2e90 <vfprintf+0x62>
    2f2a:	9b eb       	ldi	r25, 0xBB	; 187
    2f2c:	98 0f       	add	r25, r24
    2f2e:	93 30       	cpi	r25, 0x03	; 3
    2f30:	20 f4       	brcc	.+8      	; 0x2f3a <vfprintf+0x10c>
    2f32:	99 2d       	mov	r25, r9
    2f34:	90 61       	ori	r25, 0x10	; 16
    2f36:	80 5e       	subi	r24, 0xE0	; 224
    2f38:	07 c0       	rjmp	.+14     	; 0x2f48 <vfprintf+0x11a>
    2f3a:	9b e9       	ldi	r25, 0x9B	; 155
    2f3c:	98 0f       	add	r25, r24
    2f3e:	93 30       	cpi	r25, 0x03	; 3
    2f40:	08 f0       	brcs	.+2      	; 0x2f44 <vfprintf+0x116>
    2f42:	66 c1       	rjmp	.+716    	; 0x3210 <vfprintf+0x3e2>
    2f44:	99 2d       	mov	r25, r9
    2f46:	9f 7e       	andi	r25, 0xEF	; 239
    2f48:	96 ff       	sbrs	r25, 6
    2f4a:	16 e0       	ldi	r17, 0x06	; 6
    2f4c:	9f 73       	andi	r25, 0x3F	; 63
    2f4e:	99 2e       	mov	r9, r25
    2f50:	85 36       	cpi	r24, 0x65	; 101
    2f52:	19 f4       	brne	.+6      	; 0x2f5a <vfprintf+0x12c>
    2f54:	90 64       	ori	r25, 0x40	; 64
    2f56:	99 2e       	mov	r9, r25
    2f58:	08 c0       	rjmp	.+16     	; 0x2f6a <vfprintf+0x13c>
    2f5a:	86 36       	cpi	r24, 0x66	; 102
    2f5c:	21 f4       	brne	.+8      	; 0x2f66 <vfprintf+0x138>
    2f5e:	39 2f       	mov	r19, r25
    2f60:	30 68       	ori	r19, 0x80	; 128
    2f62:	93 2e       	mov	r9, r19
    2f64:	02 c0       	rjmp	.+4      	; 0x2f6a <vfprintf+0x13c>
    2f66:	11 11       	cpse	r17, r1
    2f68:	11 50       	subi	r17, 0x01	; 1
    2f6a:	97 fe       	sbrs	r9, 7
    2f6c:	07 c0       	rjmp	.+14     	; 0x2f7c <vfprintf+0x14e>
    2f6e:	1c 33       	cpi	r17, 0x3C	; 60
    2f70:	50 f4       	brcc	.+20     	; 0x2f86 <vfprintf+0x158>
    2f72:	44 24       	eor	r4, r4
    2f74:	43 94       	inc	r4
    2f76:	41 0e       	add	r4, r17
    2f78:	27 e0       	ldi	r18, 0x07	; 7
    2f7a:	0b c0       	rjmp	.+22     	; 0x2f92 <vfprintf+0x164>
    2f7c:	18 30       	cpi	r17, 0x08	; 8
    2f7e:	38 f0       	brcs	.+14     	; 0x2f8e <vfprintf+0x160>
    2f80:	27 e0       	ldi	r18, 0x07	; 7
    2f82:	17 e0       	ldi	r17, 0x07	; 7
    2f84:	05 c0       	rjmp	.+10     	; 0x2f90 <vfprintf+0x162>
    2f86:	27 e0       	ldi	r18, 0x07	; 7
    2f88:	9c e3       	ldi	r25, 0x3C	; 60
    2f8a:	49 2e       	mov	r4, r25
    2f8c:	02 c0       	rjmp	.+4      	; 0x2f92 <vfprintf+0x164>
    2f8e:	21 2f       	mov	r18, r17
    2f90:	41 2c       	mov	r4, r1
    2f92:	56 01       	movw	r10, r12
    2f94:	84 e0       	ldi	r24, 0x04	; 4
    2f96:	a8 0e       	add	r10, r24
    2f98:	b1 1c       	adc	r11, r1
    2f9a:	f6 01       	movw	r30, r12
    2f9c:	60 81       	ld	r22, Z
    2f9e:	71 81       	ldd	r23, Z+1	; 0x01
    2fa0:	82 81       	ldd	r24, Z+2	; 0x02
    2fa2:	93 81       	ldd	r25, Z+3	; 0x03
    2fa4:	04 2d       	mov	r16, r4
    2fa6:	a3 01       	movw	r20, r6
    2fa8:	0e 94 07 1b 	call	0x360e	; 0x360e <__ftoa_engine>
    2fac:	6c 01       	movw	r12, r24
    2fae:	f9 81       	ldd	r31, Y+1	; 0x01
    2fb0:	fc 87       	std	Y+12, r31	; 0x0c
    2fb2:	f0 ff       	sbrs	r31, 0
    2fb4:	02 c0       	rjmp	.+4      	; 0x2fba <vfprintf+0x18c>
    2fb6:	f3 ff       	sbrs	r31, 3
    2fb8:	06 c0       	rjmp	.+12     	; 0x2fc6 <vfprintf+0x198>
    2fba:	91 fc       	sbrc	r9, 1
    2fbc:	06 c0       	rjmp	.+12     	; 0x2fca <vfprintf+0x19c>
    2fbe:	92 fe       	sbrs	r9, 2
    2fc0:	06 c0       	rjmp	.+12     	; 0x2fce <vfprintf+0x1a0>
    2fc2:	00 e2       	ldi	r16, 0x20	; 32
    2fc4:	05 c0       	rjmp	.+10     	; 0x2fd0 <vfprintf+0x1a2>
    2fc6:	0d e2       	ldi	r16, 0x2D	; 45
    2fc8:	03 c0       	rjmp	.+6      	; 0x2fd0 <vfprintf+0x1a2>
    2fca:	0b e2       	ldi	r16, 0x2B	; 43
    2fcc:	01 c0       	rjmp	.+2      	; 0x2fd0 <vfprintf+0x1a2>
    2fce:	00 e0       	ldi	r16, 0x00	; 0
    2fd0:	8c 85       	ldd	r24, Y+12	; 0x0c
    2fd2:	8c 70       	andi	r24, 0x0C	; 12
    2fd4:	19 f0       	breq	.+6      	; 0x2fdc <vfprintf+0x1ae>
    2fd6:	01 11       	cpse	r16, r1
    2fd8:	5a c2       	rjmp	.+1204   	; 0x348e <vfprintf+0x660>
    2fda:	9b c2       	rjmp	.+1334   	; 0x3512 <vfprintf+0x6e4>
    2fdc:	97 fe       	sbrs	r9, 7
    2fde:	10 c0       	rjmp	.+32     	; 0x3000 <vfprintf+0x1d2>
    2fe0:	4c 0c       	add	r4, r12
    2fe2:	fc 85       	ldd	r31, Y+12	; 0x0c
    2fe4:	f4 ff       	sbrs	r31, 4
    2fe6:	04 c0       	rjmp	.+8      	; 0x2ff0 <vfprintf+0x1c2>
    2fe8:	8a 81       	ldd	r24, Y+2	; 0x02
    2fea:	81 33       	cpi	r24, 0x31	; 49
    2fec:	09 f4       	brne	.+2      	; 0x2ff0 <vfprintf+0x1c2>
    2fee:	4a 94       	dec	r4
    2ff0:	14 14       	cp	r1, r4
    2ff2:	74 f5       	brge	.+92     	; 0x3050 <vfprintf+0x222>
    2ff4:	28 e0       	ldi	r18, 0x08	; 8
    2ff6:	24 15       	cp	r18, r4
    2ff8:	78 f5       	brcc	.+94     	; 0x3058 <vfprintf+0x22a>
    2ffa:	88 e0       	ldi	r24, 0x08	; 8
    2ffc:	48 2e       	mov	r4, r24
    2ffe:	2c c0       	rjmp	.+88     	; 0x3058 <vfprintf+0x22a>
    3000:	96 fc       	sbrc	r9, 6
    3002:	2a c0       	rjmp	.+84     	; 0x3058 <vfprintf+0x22a>
    3004:	81 2f       	mov	r24, r17
    3006:	90 e0       	ldi	r25, 0x00	; 0
    3008:	8c 15       	cp	r24, r12
    300a:	9d 05       	cpc	r25, r13
    300c:	9c f0       	brlt	.+38     	; 0x3034 <vfprintf+0x206>
    300e:	3c ef       	ldi	r19, 0xFC	; 252
    3010:	c3 16       	cp	r12, r19
    3012:	3f ef       	ldi	r19, 0xFF	; 255
    3014:	d3 06       	cpc	r13, r19
    3016:	74 f0       	brlt	.+28     	; 0x3034 <vfprintf+0x206>
    3018:	89 2d       	mov	r24, r9
    301a:	80 68       	ori	r24, 0x80	; 128
    301c:	98 2e       	mov	r9, r24
    301e:	0a c0       	rjmp	.+20     	; 0x3034 <vfprintf+0x206>
    3020:	e2 e0       	ldi	r30, 0x02	; 2
    3022:	f0 e0       	ldi	r31, 0x00	; 0
    3024:	ec 0f       	add	r30, r28
    3026:	fd 1f       	adc	r31, r29
    3028:	e1 0f       	add	r30, r17
    302a:	f1 1d       	adc	r31, r1
    302c:	80 81       	ld	r24, Z
    302e:	80 33       	cpi	r24, 0x30	; 48
    3030:	19 f4       	brne	.+6      	; 0x3038 <vfprintf+0x20a>
    3032:	11 50       	subi	r17, 0x01	; 1
    3034:	11 11       	cpse	r17, r1
    3036:	f4 cf       	rjmp	.-24     	; 0x3020 <vfprintf+0x1f2>
    3038:	97 fe       	sbrs	r9, 7
    303a:	0e c0       	rjmp	.+28     	; 0x3058 <vfprintf+0x22a>
    303c:	44 24       	eor	r4, r4
    303e:	43 94       	inc	r4
    3040:	41 0e       	add	r4, r17
    3042:	81 2f       	mov	r24, r17
    3044:	90 e0       	ldi	r25, 0x00	; 0
    3046:	c8 16       	cp	r12, r24
    3048:	d9 06       	cpc	r13, r25
    304a:	2c f4       	brge	.+10     	; 0x3056 <vfprintf+0x228>
    304c:	1c 19       	sub	r17, r12
    304e:	04 c0       	rjmp	.+8      	; 0x3058 <vfprintf+0x22a>
    3050:	44 24       	eor	r4, r4
    3052:	43 94       	inc	r4
    3054:	01 c0       	rjmp	.+2      	; 0x3058 <vfprintf+0x22a>
    3056:	10 e0       	ldi	r17, 0x00	; 0
    3058:	97 fe       	sbrs	r9, 7
    305a:	06 c0       	rjmp	.+12     	; 0x3068 <vfprintf+0x23a>
    305c:	1c 14       	cp	r1, r12
    305e:	1d 04       	cpc	r1, r13
    3060:	34 f4       	brge	.+12     	; 0x306e <vfprintf+0x240>
    3062:	c6 01       	movw	r24, r12
    3064:	01 96       	adiw	r24, 0x01	; 1
    3066:	05 c0       	rjmp	.+10     	; 0x3072 <vfprintf+0x244>
    3068:	85 e0       	ldi	r24, 0x05	; 5
    306a:	90 e0       	ldi	r25, 0x00	; 0
    306c:	02 c0       	rjmp	.+4      	; 0x3072 <vfprintf+0x244>
    306e:	81 e0       	ldi	r24, 0x01	; 1
    3070:	90 e0       	ldi	r25, 0x00	; 0
    3072:	01 11       	cpse	r16, r1
    3074:	01 96       	adiw	r24, 0x01	; 1
    3076:	11 23       	and	r17, r17
    3078:	31 f0       	breq	.+12     	; 0x3086 <vfprintf+0x258>
    307a:	21 2f       	mov	r18, r17
    307c:	30 e0       	ldi	r19, 0x00	; 0
    307e:	2f 5f       	subi	r18, 0xFF	; 255
    3080:	3f 4f       	sbci	r19, 0xFF	; 255
    3082:	82 0f       	add	r24, r18
    3084:	93 1f       	adc	r25, r19
    3086:	25 2d       	mov	r18, r5
    3088:	30 e0       	ldi	r19, 0x00	; 0
    308a:	82 17       	cp	r24, r18
    308c:	93 07       	cpc	r25, r19
    308e:	14 f4       	brge	.+4      	; 0x3094 <vfprintf+0x266>
    3090:	58 1a       	sub	r5, r24
    3092:	01 c0       	rjmp	.+2      	; 0x3096 <vfprintf+0x268>
    3094:	51 2c       	mov	r5, r1
    3096:	89 2d       	mov	r24, r9
    3098:	89 70       	andi	r24, 0x09	; 9
    309a:	49 f4       	brne	.+18     	; 0x30ae <vfprintf+0x280>
    309c:	55 20       	and	r5, r5
    309e:	39 f0       	breq	.+14     	; 0x30ae <vfprintf+0x280>
    30a0:	b7 01       	movw	r22, r14
    30a2:	80 e2       	ldi	r24, 0x20	; 32
    30a4:	90 e0       	ldi	r25, 0x00	; 0
    30a6:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    30aa:	5a 94       	dec	r5
    30ac:	f7 cf       	rjmp	.-18     	; 0x309c <vfprintf+0x26e>
    30ae:	00 23       	and	r16, r16
    30b0:	29 f0       	breq	.+10     	; 0x30bc <vfprintf+0x28e>
    30b2:	b7 01       	movw	r22, r14
    30b4:	80 2f       	mov	r24, r16
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    30bc:	93 fc       	sbrc	r9, 3
    30be:	09 c0       	rjmp	.+18     	; 0x30d2 <vfprintf+0x2a4>
    30c0:	55 20       	and	r5, r5
    30c2:	39 f0       	breq	.+14     	; 0x30d2 <vfprintf+0x2a4>
    30c4:	b7 01       	movw	r22, r14
    30c6:	80 e3       	ldi	r24, 0x30	; 48
    30c8:	90 e0       	ldi	r25, 0x00	; 0
    30ca:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    30ce:	5a 94       	dec	r5
    30d0:	f7 cf       	rjmp	.-18     	; 0x30c0 <vfprintf+0x292>
    30d2:	97 fe       	sbrs	r9, 7
    30d4:	4c c0       	rjmp	.+152    	; 0x316e <vfprintf+0x340>
    30d6:	46 01       	movw	r8, r12
    30d8:	d7 fe       	sbrs	r13, 7
    30da:	02 c0       	rjmp	.+4      	; 0x30e0 <vfprintf+0x2b2>
    30dc:	81 2c       	mov	r8, r1
    30de:	91 2c       	mov	r9, r1
    30e0:	c6 01       	movw	r24, r12
    30e2:	88 19       	sub	r24, r8
    30e4:	99 09       	sbc	r25, r9
    30e6:	f3 01       	movw	r30, r6
    30e8:	e8 0f       	add	r30, r24
    30ea:	f9 1f       	adc	r31, r25
    30ec:	fe 87       	std	Y+14, r31	; 0x0e
    30ee:	ed 87       	std	Y+13, r30	; 0x0d
    30f0:	96 01       	movw	r18, r12
    30f2:	24 19       	sub	r18, r4
    30f4:	31 09       	sbc	r19, r1
    30f6:	38 8b       	std	Y+16, r19	; 0x10
    30f8:	2f 87       	std	Y+15, r18	; 0x0f
    30fa:	01 2f       	mov	r16, r17
    30fc:	10 e0       	ldi	r17, 0x00	; 0
    30fe:	11 95       	neg	r17
    3100:	01 95       	neg	r16
    3102:	11 09       	sbc	r17, r1
    3104:	3f ef       	ldi	r19, 0xFF	; 255
    3106:	83 16       	cp	r8, r19
    3108:	93 06       	cpc	r9, r19
    310a:	29 f4       	brne	.+10     	; 0x3116 <vfprintf+0x2e8>
    310c:	b7 01       	movw	r22, r14
    310e:	8e e2       	ldi	r24, 0x2E	; 46
    3110:	90 e0       	ldi	r25, 0x00	; 0
    3112:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3116:	c8 14       	cp	r12, r8
    3118:	d9 04       	cpc	r13, r9
    311a:	4c f0       	brlt	.+18     	; 0x312e <vfprintf+0x300>
    311c:	8f 85       	ldd	r24, Y+15	; 0x0f
    311e:	98 89       	ldd	r25, Y+16	; 0x10
    3120:	88 15       	cp	r24, r8
    3122:	99 05       	cpc	r25, r9
    3124:	24 f4       	brge	.+8      	; 0x312e <vfprintf+0x300>
    3126:	ed 85       	ldd	r30, Y+13	; 0x0d
    3128:	fe 85       	ldd	r31, Y+14	; 0x0e
    312a:	81 81       	ldd	r24, Z+1	; 0x01
    312c:	01 c0       	rjmp	.+2      	; 0x3130 <vfprintf+0x302>
    312e:	80 e3       	ldi	r24, 0x30	; 48
    3130:	f1 e0       	ldi	r31, 0x01	; 1
    3132:	8f 1a       	sub	r8, r31
    3134:	91 08       	sbc	r9, r1
    3136:	2d 85       	ldd	r18, Y+13	; 0x0d
    3138:	3e 85       	ldd	r19, Y+14	; 0x0e
    313a:	2f 5f       	subi	r18, 0xFF	; 255
    313c:	3f 4f       	sbci	r19, 0xFF	; 255
    313e:	3e 87       	std	Y+14, r19	; 0x0e
    3140:	2d 87       	std	Y+13, r18	; 0x0d
    3142:	80 16       	cp	r8, r16
    3144:	91 06       	cpc	r9, r17
    3146:	2c f0       	brlt	.+10     	; 0x3152 <vfprintf+0x324>
    3148:	b7 01       	movw	r22, r14
    314a:	90 e0       	ldi	r25, 0x00	; 0
    314c:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3150:	d9 cf       	rjmp	.-78     	; 0x3104 <vfprintf+0x2d6>
    3152:	c8 14       	cp	r12, r8
    3154:	d9 04       	cpc	r13, r9
    3156:	41 f4       	brne	.+16     	; 0x3168 <vfprintf+0x33a>
    3158:	9a 81       	ldd	r25, Y+2	; 0x02
    315a:	96 33       	cpi	r25, 0x36	; 54
    315c:	20 f4       	brcc	.+8      	; 0x3166 <vfprintf+0x338>
    315e:	95 33       	cpi	r25, 0x35	; 53
    3160:	19 f4       	brne	.+6      	; 0x3168 <vfprintf+0x33a>
    3162:	3c 85       	ldd	r19, Y+12	; 0x0c
    3164:	34 ff       	sbrs	r19, 4
    3166:	81 e3       	ldi	r24, 0x31	; 49
    3168:	b7 01       	movw	r22, r14
    316a:	90 e0       	ldi	r25, 0x00	; 0
    316c:	4e c0       	rjmp	.+156    	; 0x320a <vfprintf+0x3dc>
    316e:	8a 81       	ldd	r24, Y+2	; 0x02
    3170:	81 33       	cpi	r24, 0x31	; 49
    3172:	19 f0       	breq	.+6      	; 0x317a <vfprintf+0x34c>
    3174:	9c 85       	ldd	r25, Y+12	; 0x0c
    3176:	9f 7e       	andi	r25, 0xEF	; 239
    3178:	9c 87       	std	Y+12, r25	; 0x0c
    317a:	b7 01       	movw	r22, r14
    317c:	90 e0       	ldi	r25, 0x00	; 0
    317e:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3182:	11 11       	cpse	r17, r1
    3184:	05 c0       	rjmp	.+10     	; 0x3190 <vfprintf+0x362>
    3186:	94 fc       	sbrc	r9, 4
    3188:	18 c0       	rjmp	.+48     	; 0x31ba <vfprintf+0x38c>
    318a:	85 e6       	ldi	r24, 0x65	; 101
    318c:	90 e0       	ldi	r25, 0x00	; 0
    318e:	17 c0       	rjmp	.+46     	; 0x31be <vfprintf+0x390>
    3190:	b7 01       	movw	r22, r14
    3192:	8e e2       	ldi	r24, 0x2E	; 46
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    319a:	1e 5f       	subi	r17, 0xFE	; 254
    319c:	82 e0       	ldi	r24, 0x02	; 2
    319e:	01 e0       	ldi	r16, 0x01	; 1
    31a0:	08 0f       	add	r16, r24
    31a2:	f3 01       	movw	r30, r6
    31a4:	e8 0f       	add	r30, r24
    31a6:	f1 1d       	adc	r31, r1
    31a8:	80 81       	ld	r24, Z
    31aa:	b7 01       	movw	r22, r14
    31ac:	90 e0       	ldi	r25, 0x00	; 0
    31ae:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    31b2:	80 2f       	mov	r24, r16
    31b4:	01 13       	cpse	r16, r17
    31b6:	f3 cf       	rjmp	.-26     	; 0x319e <vfprintf+0x370>
    31b8:	e6 cf       	rjmp	.-52     	; 0x3186 <vfprintf+0x358>
    31ba:	85 e4       	ldi	r24, 0x45	; 69
    31bc:	90 e0       	ldi	r25, 0x00	; 0
    31be:	b7 01       	movw	r22, r14
    31c0:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    31c4:	d7 fc       	sbrc	r13, 7
    31c6:	06 c0       	rjmp	.+12     	; 0x31d4 <vfprintf+0x3a6>
    31c8:	c1 14       	cp	r12, r1
    31ca:	d1 04       	cpc	r13, r1
    31cc:	41 f4       	brne	.+16     	; 0x31de <vfprintf+0x3b0>
    31ce:	ec 85       	ldd	r30, Y+12	; 0x0c
    31d0:	e4 ff       	sbrs	r30, 4
    31d2:	05 c0       	rjmp	.+10     	; 0x31de <vfprintf+0x3b0>
    31d4:	d1 94       	neg	r13
    31d6:	c1 94       	neg	r12
    31d8:	d1 08       	sbc	r13, r1
    31da:	8d e2       	ldi	r24, 0x2D	; 45
    31dc:	01 c0       	rjmp	.+2      	; 0x31e0 <vfprintf+0x3b2>
    31de:	8b e2       	ldi	r24, 0x2B	; 43
    31e0:	b7 01       	movw	r22, r14
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    31e8:	80 e3       	ldi	r24, 0x30	; 48
    31ea:	2a e0       	ldi	r18, 0x0A	; 10
    31ec:	c2 16       	cp	r12, r18
    31ee:	d1 04       	cpc	r13, r1
    31f0:	2c f0       	brlt	.+10     	; 0x31fc <vfprintf+0x3ce>
    31f2:	8f 5f       	subi	r24, 0xFF	; 255
    31f4:	fa e0       	ldi	r31, 0x0A	; 10
    31f6:	cf 1a       	sub	r12, r31
    31f8:	d1 08       	sbc	r13, r1
    31fa:	f7 cf       	rjmp	.-18     	; 0x31ea <vfprintf+0x3bc>
    31fc:	b7 01       	movw	r22, r14
    31fe:	90 e0       	ldi	r25, 0x00	; 0
    3200:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3204:	b7 01       	movw	r22, r14
    3206:	c6 01       	movw	r24, r12
    3208:	c0 96       	adiw	r24, 0x30	; 48
    320a:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    320e:	54 c1       	rjmp	.+680    	; 0x34b8 <vfprintf+0x68a>
    3210:	83 36       	cpi	r24, 0x63	; 99
    3212:	31 f0       	breq	.+12     	; 0x3220 <vfprintf+0x3f2>
    3214:	83 37       	cpi	r24, 0x73	; 115
    3216:	79 f0       	breq	.+30     	; 0x3236 <vfprintf+0x408>
    3218:	83 35       	cpi	r24, 0x53	; 83
    321a:	09 f0       	breq	.+2      	; 0x321e <vfprintf+0x3f0>
    321c:	56 c0       	rjmp	.+172    	; 0x32ca <vfprintf+0x49c>
    321e:	20 c0       	rjmp	.+64     	; 0x3260 <vfprintf+0x432>
    3220:	56 01       	movw	r10, r12
    3222:	32 e0       	ldi	r19, 0x02	; 2
    3224:	a3 0e       	add	r10, r19
    3226:	b1 1c       	adc	r11, r1
    3228:	f6 01       	movw	r30, r12
    322a:	80 81       	ld	r24, Z
    322c:	89 83       	std	Y+1, r24	; 0x01
    322e:	01 e0       	ldi	r16, 0x01	; 1
    3230:	10 e0       	ldi	r17, 0x00	; 0
    3232:	63 01       	movw	r12, r6
    3234:	12 c0       	rjmp	.+36     	; 0x325a <vfprintf+0x42c>
    3236:	56 01       	movw	r10, r12
    3238:	f2 e0       	ldi	r31, 0x02	; 2
    323a:	af 0e       	add	r10, r31
    323c:	b1 1c       	adc	r11, r1
    323e:	f6 01       	movw	r30, r12
    3240:	c0 80       	ld	r12, Z
    3242:	d1 80       	ldd	r13, Z+1	; 0x01
    3244:	96 fe       	sbrs	r9, 6
    3246:	03 c0       	rjmp	.+6      	; 0x324e <vfprintf+0x420>
    3248:	61 2f       	mov	r22, r17
    324a:	70 e0       	ldi	r23, 0x00	; 0
    324c:	02 c0       	rjmp	.+4      	; 0x3252 <vfprintf+0x424>
    324e:	6f ef       	ldi	r22, 0xFF	; 255
    3250:	7f ef       	ldi	r23, 0xFF	; 255
    3252:	c6 01       	movw	r24, r12
    3254:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <strnlen>
    3258:	8c 01       	movw	r16, r24
    325a:	f9 2d       	mov	r31, r9
    325c:	ff 77       	andi	r31, 0x7F	; 127
    325e:	14 c0       	rjmp	.+40     	; 0x3288 <vfprintf+0x45a>
    3260:	56 01       	movw	r10, r12
    3262:	22 e0       	ldi	r18, 0x02	; 2
    3264:	a2 0e       	add	r10, r18
    3266:	b1 1c       	adc	r11, r1
    3268:	f6 01       	movw	r30, r12
    326a:	c0 80       	ld	r12, Z
    326c:	d1 80       	ldd	r13, Z+1	; 0x01
    326e:	96 fe       	sbrs	r9, 6
    3270:	03 c0       	rjmp	.+6      	; 0x3278 <vfprintf+0x44a>
    3272:	61 2f       	mov	r22, r17
    3274:	70 e0       	ldi	r23, 0x00	; 0
    3276:	02 c0       	rjmp	.+4      	; 0x327c <vfprintf+0x44e>
    3278:	6f ef       	ldi	r22, 0xFF	; 255
    327a:	7f ef       	ldi	r23, 0xFF	; 255
    327c:	c6 01       	movw	r24, r12
    327e:	0e 94 df 1b 	call	0x37be	; 0x37be <strnlen_P>
    3282:	8c 01       	movw	r16, r24
    3284:	f9 2d       	mov	r31, r9
    3286:	f0 68       	ori	r31, 0x80	; 128
    3288:	9f 2e       	mov	r9, r31
    328a:	f3 fd       	sbrc	r31, 3
    328c:	1a c0       	rjmp	.+52     	; 0x32c2 <vfprintf+0x494>
    328e:	85 2d       	mov	r24, r5
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	08 17       	cp	r16, r24
    3294:	19 07       	cpc	r17, r25
    3296:	a8 f4       	brcc	.+42     	; 0x32c2 <vfprintf+0x494>
    3298:	b7 01       	movw	r22, r14
    329a:	80 e2       	ldi	r24, 0x20	; 32
    329c:	90 e0       	ldi	r25, 0x00	; 0
    329e:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    32a2:	5a 94       	dec	r5
    32a4:	f4 cf       	rjmp	.-24     	; 0x328e <vfprintf+0x460>
    32a6:	f6 01       	movw	r30, r12
    32a8:	97 fc       	sbrc	r9, 7
    32aa:	85 91       	lpm	r24, Z+
    32ac:	97 fe       	sbrs	r9, 7
    32ae:	81 91       	ld	r24, Z+
    32b0:	6f 01       	movw	r12, r30
    32b2:	b7 01       	movw	r22, r14
    32b4:	90 e0       	ldi	r25, 0x00	; 0
    32b6:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    32ba:	51 10       	cpse	r5, r1
    32bc:	5a 94       	dec	r5
    32be:	01 50       	subi	r16, 0x01	; 1
    32c0:	11 09       	sbc	r17, r1
    32c2:	01 15       	cp	r16, r1
    32c4:	11 05       	cpc	r17, r1
    32c6:	79 f7       	brne	.-34     	; 0x32a6 <vfprintf+0x478>
    32c8:	f7 c0       	rjmp	.+494    	; 0x34b8 <vfprintf+0x68a>
    32ca:	84 36       	cpi	r24, 0x64	; 100
    32cc:	11 f0       	breq	.+4      	; 0x32d2 <vfprintf+0x4a4>
    32ce:	89 36       	cpi	r24, 0x69	; 105
    32d0:	61 f5       	brne	.+88     	; 0x332a <vfprintf+0x4fc>
    32d2:	56 01       	movw	r10, r12
    32d4:	97 fe       	sbrs	r9, 7
    32d6:	09 c0       	rjmp	.+18     	; 0x32ea <vfprintf+0x4bc>
    32d8:	24 e0       	ldi	r18, 0x04	; 4
    32da:	a2 0e       	add	r10, r18
    32dc:	b1 1c       	adc	r11, r1
    32de:	f6 01       	movw	r30, r12
    32e0:	60 81       	ld	r22, Z
    32e2:	71 81       	ldd	r23, Z+1	; 0x01
    32e4:	82 81       	ldd	r24, Z+2	; 0x02
    32e6:	93 81       	ldd	r25, Z+3	; 0x03
    32e8:	0a c0       	rjmp	.+20     	; 0x32fe <vfprintf+0x4d0>
    32ea:	f2 e0       	ldi	r31, 0x02	; 2
    32ec:	af 0e       	add	r10, r31
    32ee:	b1 1c       	adc	r11, r1
    32f0:	f6 01       	movw	r30, r12
    32f2:	60 81       	ld	r22, Z
    32f4:	71 81       	ldd	r23, Z+1	; 0x01
    32f6:	07 2e       	mov	r0, r23
    32f8:	00 0c       	add	r0, r0
    32fa:	88 0b       	sbc	r24, r24
    32fc:	99 0b       	sbc	r25, r25
    32fe:	f9 2d       	mov	r31, r9
    3300:	ff 76       	andi	r31, 0x6F	; 111
    3302:	9f 2e       	mov	r9, r31
    3304:	97 ff       	sbrs	r25, 7
    3306:	09 c0       	rjmp	.+18     	; 0x331a <vfprintf+0x4ec>
    3308:	90 95       	com	r25
    330a:	80 95       	com	r24
    330c:	70 95       	com	r23
    330e:	61 95       	neg	r22
    3310:	7f 4f       	sbci	r23, 0xFF	; 255
    3312:	8f 4f       	sbci	r24, 0xFF	; 255
    3314:	9f 4f       	sbci	r25, 0xFF	; 255
    3316:	f0 68       	ori	r31, 0x80	; 128
    3318:	9f 2e       	mov	r9, r31
    331a:	2a e0       	ldi	r18, 0x0A	; 10
    331c:	30 e0       	ldi	r19, 0x00	; 0
    331e:	a3 01       	movw	r20, r6
    3320:	0e 94 7e 1c 	call	0x38fc	; 0x38fc <__ultoa_invert>
    3324:	c8 2e       	mov	r12, r24
    3326:	c6 18       	sub	r12, r6
    3328:	3f c0       	rjmp	.+126    	; 0x33a8 <vfprintf+0x57a>
    332a:	09 2d       	mov	r16, r9
    332c:	85 37       	cpi	r24, 0x75	; 117
    332e:	21 f4       	brne	.+8      	; 0x3338 <vfprintf+0x50a>
    3330:	0f 7e       	andi	r16, 0xEF	; 239
    3332:	2a e0       	ldi	r18, 0x0A	; 10
    3334:	30 e0       	ldi	r19, 0x00	; 0
    3336:	1d c0       	rjmp	.+58     	; 0x3372 <vfprintf+0x544>
    3338:	09 7f       	andi	r16, 0xF9	; 249
    333a:	8f 36       	cpi	r24, 0x6F	; 111
    333c:	91 f0       	breq	.+36     	; 0x3362 <vfprintf+0x534>
    333e:	18 f4       	brcc	.+6      	; 0x3346 <vfprintf+0x518>
    3340:	88 35       	cpi	r24, 0x58	; 88
    3342:	59 f0       	breq	.+22     	; 0x335a <vfprintf+0x52c>
    3344:	c3 c0       	rjmp	.+390    	; 0x34cc <vfprintf+0x69e>
    3346:	80 37       	cpi	r24, 0x70	; 112
    3348:	19 f0       	breq	.+6      	; 0x3350 <vfprintf+0x522>
    334a:	88 37       	cpi	r24, 0x78	; 120
    334c:	11 f0       	breq	.+4      	; 0x3352 <vfprintf+0x524>
    334e:	be c0       	rjmp	.+380    	; 0x34cc <vfprintf+0x69e>
    3350:	00 61       	ori	r16, 0x10	; 16
    3352:	04 ff       	sbrs	r16, 4
    3354:	09 c0       	rjmp	.+18     	; 0x3368 <vfprintf+0x53a>
    3356:	04 60       	ori	r16, 0x04	; 4
    3358:	07 c0       	rjmp	.+14     	; 0x3368 <vfprintf+0x53a>
    335a:	94 fe       	sbrs	r9, 4
    335c:	08 c0       	rjmp	.+16     	; 0x336e <vfprintf+0x540>
    335e:	06 60       	ori	r16, 0x06	; 6
    3360:	06 c0       	rjmp	.+12     	; 0x336e <vfprintf+0x540>
    3362:	28 e0       	ldi	r18, 0x08	; 8
    3364:	30 e0       	ldi	r19, 0x00	; 0
    3366:	05 c0       	rjmp	.+10     	; 0x3372 <vfprintf+0x544>
    3368:	20 e1       	ldi	r18, 0x10	; 16
    336a:	30 e0       	ldi	r19, 0x00	; 0
    336c:	02 c0       	rjmp	.+4      	; 0x3372 <vfprintf+0x544>
    336e:	20 e1       	ldi	r18, 0x10	; 16
    3370:	32 e0       	ldi	r19, 0x02	; 2
    3372:	56 01       	movw	r10, r12
    3374:	07 ff       	sbrs	r16, 7
    3376:	09 c0       	rjmp	.+18     	; 0x338a <vfprintf+0x55c>
    3378:	84 e0       	ldi	r24, 0x04	; 4
    337a:	a8 0e       	add	r10, r24
    337c:	b1 1c       	adc	r11, r1
    337e:	f6 01       	movw	r30, r12
    3380:	60 81       	ld	r22, Z
    3382:	71 81       	ldd	r23, Z+1	; 0x01
    3384:	82 81       	ldd	r24, Z+2	; 0x02
    3386:	93 81       	ldd	r25, Z+3	; 0x03
    3388:	08 c0       	rjmp	.+16     	; 0x339a <vfprintf+0x56c>
    338a:	f2 e0       	ldi	r31, 0x02	; 2
    338c:	af 0e       	add	r10, r31
    338e:	b1 1c       	adc	r11, r1
    3390:	f6 01       	movw	r30, r12
    3392:	60 81       	ld	r22, Z
    3394:	71 81       	ldd	r23, Z+1	; 0x01
    3396:	80 e0       	ldi	r24, 0x00	; 0
    3398:	90 e0       	ldi	r25, 0x00	; 0
    339a:	a3 01       	movw	r20, r6
    339c:	0e 94 7e 1c 	call	0x38fc	; 0x38fc <__ultoa_invert>
    33a0:	c8 2e       	mov	r12, r24
    33a2:	c6 18       	sub	r12, r6
    33a4:	0f 77       	andi	r16, 0x7F	; 127
    33a6:	90 2e       	mov	r9, r16
    33a8:	96 fe       	sbrs	r9, 6
    33aa:	0b c0       	rjmp	.+22     	; 0x33c2 <vfprintf+0x594>
    33ac:	09 2d       	mov	r16, r9
    33ae:	0e 7f       	andi	r16, 0xFE	; 254
    33b0:	c1 16       	cp	r12, r17
    33b2:	50 f4       	brcc	.+20     	; 0x33c8 <vfprintf+0x59a>
    33b4:	94 fe       	sbrs	r9, 4
    33b6:	0a c0       	rjmp	.+20     	; 0x33cc <vfprintf+0x59e>
    33b8:	92 fc       	sbrc	r9, 2
    33ba:	08 c0       	rjmp	.+16     	; 0x33cc <vfprintf+0x59e>
    33bc:	09 2d       	mov	r16, r9
    33be:	0e 7e       	andi	r16, 0xEE	; 238
    33c0:	05 c0       	rjmp	.+10     	; 0x33cc <vfprintf+0x59e>
    33c2:	dc 2c       	mov	r13, r12
    33c4:	09 2d       	mov	r16, r9
    33c6:	03 c0       	rjmp	.+6      	; 0x33ce <vfprintf+0x5a0>
    33c8:	dc 2c       	mov	r13, r12
    33ca:	01 c0       	rjmp	.+2      	; 0x33ce <vfprintf+0x5a0>
    33cc:	d1 2e       	mov	r13, r17
    33ce:	04 ff       	sbrs	r16, 4
    33d0:	0d c0       	rjmp	.+26     	; 0x33ec <vfprintf+0x5be>
    33d2:	fe 01       	movw	r30, r28
    33d4:	ec 0d       	add	r30, r12
    33d6:	f1 1d       	adc	r31, r1
    33d8:	80 81       	ld	r24, Z
    33da:	80 33       	cpi	r24, 0x30	; 48
    33dc:	11 f4       	brne	.+4      	; 0x33e2 <vfprintf+0x5b4>
    33de:	09 7e       	andi	r16, 0xE9	; 233
    33e0:	09 c0       	rjmp	.+18     	; 0x33f4 <vfprintf+0x5c6>
    33e2:	02 ff       	sbrs	r16, 2
    33e4:	06 c0       	rjmp	.+12     	; 0x33f2 <vfprintf+0x5c4>
    33e6:	d3 94       	inc	r13
    33e8:	d3 94       	inc	r13
    33ea:	04 c0       	rjmp	.+8      	; 0x33f4 <vfprintf+0x5c6>
    33ec:	80 2f       	mov	r24, r16
    33ee:	86 78       	andi	r24, 0x86	; 134
    33f0:	09 f0       	breq	.+2      	; 0x33f4 <vfprintf+0x5c6>
    33f2:	d3 94       	inc	r13
    33f4:	03 fd       	sbrc	r16, 3
    33f6:	11 c0       	rjmp	.+34     	; 0x341a <vfprintf+0x5ec>
    33f8:	00 ff       	sbrs	r16, 0
    33fa:	06 c0       	rjmp	.+12     	; 0x3408 <vfprintf+0x5da>
    33fc:	1c 2d       	mov	r17, r12
    33fe:	d5 14       	cp	r13, r5
    3400:	80 f4       	brcc	.+32     	; 0x3422 <vfprintf+0x5f4>
    3402:	15 0d       	add	r17, r5
    3404:	1d 19       	sub	r17, r13
    3406:	0d c0       	rjmp	.+26     	; 0x3422 <vfprintf+0x5f4>
    3408:	d5 14       	cp	r13, r5
    340a:	58 f4       	brcc	.+22     	; 0x3422 <vfprintf+0x5f4>
    340c:	b7 01       	movw	r22, r14
    340e:	80 e2       	ldi	r24, 0x20	; 32
    3410:	90 e0       	ldi	r25, 0x00	; 0
    3412:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3416:	d3 94       	inc	r13
    3418:	f7 cf       	rjmp	.-18     	; 0x3408 <vfprintf+0x5da>
    341a:	d5 14       	cp	r13, r5
    341c:	10 f4       	brcc	.+4      	; 0x3422 <vfprintf+0x5f4>
    341e:	5d 18       	sub	r5, r13
    3420:	01 c0       	rjmp	.+2      	; 0x3424 <vfprintf+0x5f6>
    3422:	51 2c       	mov	r5, r1
    3424:	04 ff       	sbrs	r16, 4
    3426:	10 c0       	rjmp	.+32     	; 0x3448 <vfprintf+0x61a>
    3428:	b7 01       	movw	r22, r14
    342a:	80 e3       	ldi	r24, 0x30	; 48
    342c:	90 e0       	ldi	r25, 0x00	; 0
    342e:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3432:	02 ff       	sbrs	r16, 2
    3434:	17 c0       	rjmp	.+46     	; 0x3464 <vfprintf+0x636>
    3436:	01 fd       	sbrc	r16, 1
    3438:	03 c0       	rjmp	.+6      	; 0x3440 <vfprintf+0x612>
    343a:	88 e7       	ldi	r24, 0x78	; 120
    343c:	90 e0       	ldi	r25, 0x00	; 0
    343e:	02 c0       	rjmp	.+4      	; 0x3444 <vfprintf+0x616>
    3440:	88 e5       	ldi	r24, 0x58	; 88
    3442:	90 e0       	ldi	r25, 0x00	; 0
    3444:	b7 01       	movw	r22, r14
    3446:	0c c0       	rjmp	.+24     	; 0x3460 <vfprintf+0x632>
    3448:	80 2f       	mov	r24, r16
    344a:	86 78       	andi	r24, 0x86	; 134
    344c:	59 f0       	breq	.+22     	; 0x3464 <vfprintf+0x636>
    344e:	01 ff       	sbrs	r16, 1
    3450:	02 c0       	rjmp	.+4      	; 0x3456 <vfprintf+0x628>
    3452:	8b e2       	ldi	r24, 0x2B	; 43
    3454:	01 c0       	rjmp	.+2      	; 0x3458 <vfprintf+0x62a>
    3456:	80 e2       	ldi	r24, 0x20	; 32
    3458:	07 fd       	sbrc	r16, 7
    345a:	8d e2       	ldi	r24, 0x2D	; 45
    345c:	b7 01       	movw	r22, r14
    345e:	90 e0       	ldi	r25, 0x00	; 0
    3460:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3464:	c1 16       	cp	r12, r17
    3466:	38 f4       	brcc	.+14     	; 0x3476 <vfprintf+0x648>
    3468:	b7 01       	movw	r22, r14
    346a:	80 e3       	ldi	r24, 0x30	; 48
    346c:	90 e0       	ldi	r25, 0x00	; 0
    346e:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3472:	11 50       	subi	r17, 0x01	; 1
    3474:	f7 cf       	rjmp	.-18     	; 0x3464 <vfprintf+0x636>
    3476:	ca 94       	dec	r12
    3478:	f3 01       	movw	r30, r6
    347a:	ec 0d       	add	r30, r12
    347c:	f1 1d       	adc	r31, r1
    347e:	80 81       	ld	r24, Z
    3480:	b7 01       	movw	r22, r14
    3482:	90 e0       	ldi	r25, 0x00	; 0
    3484:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    3488:	c1 10       	cpse	r12, r1
    348a:	f5 cf       	rjmp	.-22     	; 0x3476 <vfprintf+0x648>
    348c:	15 c0       	rjmp	.+42     	; 0x34b8 <vfprintf+0x68a>
    348e:	f4 e0       	ldi	r31, 0x04	; 4
    3490:	f5 15       	cp	r31, r5
    3492:	60 f5       	brcc	.+88     	; 0x34ec <vfprintf+0x6be>
    3494:	84 e0       	ldi	r24, 0x04	; 4
    3496:	58 1a       	sub	r5, r24
    3498:	93 fe       	sbrs	r9, 3
    349a:	1f c0       	rjmp	.+62     	; 0x34da <vfprintf+0x6ac>
    349c:	01 11       	cpse	r16, r1
    349e:	27 c0       	rjmp	.+78     	; 0x34ee <vfprintf+0x6c0>
    34a0:	2c 85       	ldd	r18, Y+12	; 0x0c
    34a2:	23 ff       	sbrs	r18, 3
    34a4:	2a c0       	rjmp	.+84     	; 0x34fa <vfprintf+0x6cc>
    34a6:	08 e6       	ldi	r16, 0x68	; 104
    34a8:	10 e0       	ldi	r17, 0x00	; 0
    34aa:	39 2d       	mov	r19, r9
    34ac:	30 71       	andi	r19, 0x10	; 16
    34ae:	93 2e       	mov	r9, r19
    34b0:	f8 01       	movw	r30, r16
    34b2:	84 91       	lpm	r24, Z
    34b4:	81 11       	cpse	r24, r1
    34b6:	24 c0       	rjmp	.+72     	; 0x3500 <vfprintf+0x6d2>
    34b8:	55 20       	and	r5, r5
    34ba:	09 f4       	brne	.+2      	; 0x34be <vfprintf+0x690>
    34bc:	e4 cc       	rjmp	.-1592   	; 0x2e86 <vfprintf+0x58>
    34be:	b7 01       	movw	r22, r14
    34c0:	80 e2       	ldi	r24, 0x20	; 32
    34c2:	90 e0       	ldi	r25, 0x00	; 0
    34c4:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    34c8:	5a 94       	dec	r5
    34ca:	f6 cf       	rjmp	.-20     	; 0x34b8 <vfprintf+0x68a>
    34cc:	f7 01       	movw	r30, r14
    34ce:	86 81       	ldd	r24, Z+6	; 0x06
    34d0:	97 81       	ldd	r25, Z+7	; 0x07
    34d2:	26 c0       	rjmp	.+76     	; 0x3520 <vfprintf+0x6f2>
    34d4:	8f ef       	ldi	r24, 0xFF	; 255
    34d6:	9f ef       	ldi	r25, 0xFF	; 255
    34d8:	23 c0       	rjmp	.+70     	; 0x3520 <vfprintf+0x6f2>
    34da:	b7 01       	movw	r22, r14
    34dc:	80 e2       	ldi	r24, 0x20	; 32
    34de:	90 e0       	ldi	r25, 0x00	; 0
    34e0:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    34e4:	5a 94       	dec	r5
    34e6:	51 10       	cpse	r5, r1
    34e8:	f8 cf       	rjmp	.-16     	; 0x34da <vfprintf+0x6ac>
    34ea:	d8 cf       	rjmp	.-80     	; 0x349c <vfprintf+0x66e>
    34ec:	51 2c       	mov	r5, r1
    34ee:	b7 01       	movw	r22, r14
    34f0:	80 2f       	mov	r24, r16
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    34f8:	d3 cf       	rjmp	.-90     	; 0x34a0 <vfprintf+0x672>
    34fa:	0c e6       	ldi	r16, 0x6C	; 108
    34fc:	10 e0       	ldi	r17, 0x00	; 0
    34fe:	d5 cf       	rjmp	.-86     	; 0x34aa <vfprintf+0x67c>
    3500:	91 10       	cpse	r9, r1
    3502:	80 52       	subi	r24, 0x20	; 32
    3504:	b7 01       	movw	r22, r14
    3506:	90 e0       	ldi	r25, 0x00	; 0
    3508:	0e 94 07 1c 	call	0x380e	; 0x380e <fputc>
    350c:	0f 5f       	subi	r16, 0xFF	; 255
    350e:	1f 4f       	sbci	r17, 0xFF	; 255
    3510:	cf cf       	rjmp	.-98     	; 0x34b0 <vfprintf+0x682>
    3512:	23 e0       	ldi	r18, 0x03	; 3
    3514:	25 15       	cp	r18, r5
    3516:	10 f4       	brcc	.+4      	; 0x351c <vfprintf+0x6ee>
    3518:	83 e0       	ldi	r24, 0x03	; 3
    351a:	bd cf       	rjmp	.-134    	; 0x3496 <vfprintf+0x668>
    351c:	51 2c       	mov	r5, r1
    351e:	c0 cf       	rjmp	.-128    	; 0x34a0 <vfprintf+0x672>
    3520:	60 96       	adiw	r28, 0x10	; 16
    3522:	e2 e1       	ldi	r30, 0x12	; 18
    3524:	0c 94 dd 1a 	jmp	0x35ba	; 0x35ba <__epilogue_restores__>

00003528 <__udivmodsi4>:
    3528:	a1 e2       	ldi	r26, 0x21	; 33
    352a:	1a 2e       	mov	r1, r26
    352c:	aa 1b       	sub	r26, r26
    352e:	bb 1b       	sub	r27, r27
    3530:	fd 01       	movw	r30, r26
    3532:	0d c0       	rjmp	.+26     	; 0x354e <__udivmodsi4_ep>

00003534 <__udivmodsi4_loop>:
    3534:	aa 1f       	adc	r26, r26
    3536:	bb 1f       	adc	r27, r27
    3538:	ee 1f       	adc	r30, r30
    353a:	ff 1f       	adc	r31, r31
    353c:	a2 17       	cp	r26, r18
    353e:	b3 07       	cpc	r27, r19
    3540:	e4 07       	cpc	r30, r20
    3542:	f5 07       	cpc	r31, r21
    3544:	20 f0       	brcs	.+8      	; 0x354e <__udivmodsi4_ep>
    3546:	a2 1b       	sub	r26, r18
    3548:	b3 0b       	sbc	r27, r19
    354a:	e4 0b       	sbc	r30, r20
    354c:	f5 0b       	sbc	r31, r21

0000354e <__udivmodsi4_ep>:
    354e:	66 1f       	adc	r22, r22
    3550:	77 1f       	adc	r23, r23
    3552:	88 1f       	adc	r24, r24
    3554:	99 1f       	adc	r25, r25
    3556:	1a 94       	dec	r1
    3558:	69 f7       	brne	.-38     	; 0x3534 <__udivmodsi4_loop>
    355a:	60 95       	com	r22
    355c:	70 95       	com	r23
    355e:	80 95       	com	r24
    3560:	90 95       	com	r25
    3562:	9b 01       	movw	r18, r22
    3564:	ac 01       	movw	r20, r24
    3566:	bd 01       	movw	r22, r26
    3568:	cf 01       	movw	r24, r30
    356a:	08 95       	ret

0000356c <__muluhisi3>:
    356c:	0e 94 f8 1a 	call	0x35f0	; 0x35f0 <__umulhisi3>
    3570:	a5 9f       	mul	r26, r21
    3572:	90 0d       	add	r25, r0
    3574:	b4 9f       	mul	r27, r20
    3576:	90 0d       	add	r25, r0
    3578:	a4 9f       	mul	r26, r20
    357a:	80 0d       	add	r24, r0
    357c:	91 1d       	adc	r25, r1
    357e:	11 24       	eor	r1, r1
    3580:	08 95       	ret

00003582 <__prologue_saves__>:
    3582:	2f 92       	push	r2
    3584:	3f 92       	push	r3
    3586:	4f 92       	push	r4
    3588:	5f 92       	push	r5
    358a:	6f 92       	push	r6
    358c:	7f 92       	push	r7
    358e:	8f 92       	push	r8
    3590:	9f 92       	push	r9
    3592:	af 92       	push	r10
    3594:	bf 92       	push	r11
    3596:	cf 92       	push	r12
    3598:	df 92       	push	r13
    359a:	ef 92       	push	r14
    359c:	ff 92       	push	r15
    359e:	0f 93       	push	r16
    35a0:	1f 93       	push	r17
    35a2:	cf 93       	push	r28
    35a4:	df 93       	push	r29
    35a6:	cd b7       	in	r28, 0x3d	; 61
    35a8:	de b7       	in	r29, 0x3e	; 62
    35aa:	ca 1b       	sub	r28, r26
    35ac:	db 0b       	sbc	r29, r27
    35ae:	0f b6       	in	r0, 0x3f	; 63
    35b0:	f8 94       	cli
    35b2:	de bf       	out	0x3e, r29	; 62
    35b4:	0f be       	out	0x3f, r0	; 63
    35b6:	cd bf       	out	0x3d, r28	; 61
    35b8:	09 94       	ijmp

000035ba <__epilogue_restores__>:
    35ba:	2a 88       	ldd	r2, Y+18	; 0x12
    35bc:	39 88       	ldd	r3, Y+17	; 0x11
    35be:	48 88       	ldd	r4, Y+16	; 0x10
    35c0:	5f 84       	ldd	r5, Y+15	; 0x0f
    35c2:	6e 84       	ldd	r6, Y+14	; 0x0e
    35c4:	7d 84       	ldd	r7, Y+13	; 0x0d
    35c6:	8c 84       	ldd	r8, Y+12	; 0x0c
    35c8:	9b 84       	ldd	r9, Y+11	; 0x0b
    35ca:	aa 84       	ldd	r10, Y+10	; 0x0a
    35cc:	b9 84       	ldd	r11, Y+9	; 0x09
    35ce:	c8 84       	ldd	r12, Y+8	; 0x08
    35d0:	df 80       	ldd	r13, Y+7	; 0x07
    35d2:	ee 80       	ldd	r14, Y+6	; 0x06
    35d4:	fd 80       	ldd	r15, Y+5	; 0x05
    35d6:	0c 81       	ldd	r16, Y+4	; 0x04
    35d8:	1b 81       	ldd	r17, Y+3	; 0x03
    35da:	aa 81       	ldd	r26, Y+2	; 0x02
    35dc:	b9 81       	ldd	r27, Y+1	; 0x01
    35de:	ce 0f       	add	r28, r30
    35e0:	d1 1d       	adc	r29, r1
    35e2:	0f b6       	in	r0, 0x3f	; 63
    35e4:	f8 94       	cli
    35e6:	de bf       	out	0x3e, r29	; 62
    35e8:	0f be       	out	0x3f, r0	; 63
    35ea:	cd bf       	out	0x3d, r28	; 61
    35ec:	ed 01       	movw	r28, r26
    35ee:	08 95       	ret

000035f0 <__umulhisi3>:
    35f0:	a2 9f       	mul	r26, r18
    35f2:	b0 01       	movw	r22, r0
    35f4:	b3 9f       	mul	r27, r19
    35f6:	c0 01       	movw	r24, r0
    35f8:	a3 9f       	mul	r26, r19
    35fa:	70 0d       	add	r23, r0
    35fc:	81 1d       	adc	r24, r1
    35fe:	11 24       	eor	r1, r1
    3600:	91 1d       	adc	r25, r1
    3602:	b2 9f       	mul	r27, r18
    3604:	70 0d       	add	r23, r0
    3606:	81 1d       	adc	r24, r1
    3608:	11 24       	eor	r1, r1
    360a:	91 1d       	adc	r25, r1
    360c:	08 95       	ret

0000360e <__ftoa_engine>:
    360e:	28 30       	cpi	r18, 0x08	; 8
    3610:	08 f0       	brcs	.+2      	; 0x3614 <__ftoa_engine+0x6>
    3612:	27 e0       	ldi	r18, 0x07	; 7
    3614:	33 27       	eor	r19, r19
    3616:	da 01       	movw	r26, r20
    3618:	99 0f       	add	r25, r25
    361a:	31 1d       	adc	r19, r1
    361c:	87 fd       	sbrc	r24, 7
    361e:	91 60       	ori	r25, 0x01	; 1
    3620:	00 96       	adiw	r24, 0x00	; 0
    3622:	61 05       	cpc	r22, r1
    3624:	71 05       	cpc	r23, r1
    3626:	39 f4       	brne	.+14     	; 0x3636 <__ftoa_engine+0x28>
    3628:	32 60       	ori	r19, 0x02	; 2
    362a:	2e 5f       	subi	r18, 0xFE	; 254
    362c:	3d 93       	st	X+, r19
    362e:	30 e3       	ldi	r19, 0x30	; 48
    3630:	2a 95       	dec	r18
    3632:	e1 f7       	brne	.-8      	; 0x362c <__ftoa_engine+0x1e>
    3634:	08 95       	ret
    3636:	9f 3f       	cpi	r25, 0xFF	; 255
    3638:	30 f0       	brcs	.+12     	; 0x3646 <__ftoa_engine+0x38>
    363a:	80 38       	cpi	r24, 0x80	; 128
    363c:	71 05       	cpc	r23, r1
    363e:	61 05       	cpc	r22, r1
    3640:	09 f0       	breq	.+2      	; 0x3644 <__ftoa_engine+0x36>
    3642:	3c 5f       	subi	r19, 0xFC	; 252
    3644:	3c 5f       	subi	r19, 0xFC	; 252
    3646:	3d 93       	st	X+, r19
    3648:	91 30       	cpi	r25, 0x01	; 1
    364a:	08 f0       	brcs	.+2      	; 0x364e <__ftoa_engine+0x40>
    364c:	80 68       	ori	r24, 0x80	; 128
    364e:	91 1d       	adc	r25, r1
    3650:	df 93       	push	r29
    3652:	cf 93       	push	r28
    3654:	1f 93       	push	r17
    3656:	0f 93       	push	r16
    3658:	ff 92       	push	r15
    365a:	ef 92       	push	r14
    365c:	19 2f       	mov	r17, r25
    365e:	98 7f       	andi	r25, 0xF8	; 248
    3660:	96 95       	lsr	r25
    3662:	e9 2f       	mov	r30, r25
    3664:	96 95       	lsr	r25
    3666:	96 95       	lsr	r25
    3668:	e9 0f       	add	r30, r25
    366a:	ff 27       	eor	r31, r31
    366c:	e6 53       	subi	r30, 0x36	; 54
    366e:	ff 4f       	sbci	r31, 0xFF	; 255
    3670:	99 27       	eor	r25, r25
    3672:	33 27       	eor	r19, r19
    3674:	ee 24       	eor	r14, r14
    3676:	ff 24       	eor	r15, r15
    3678:	a7 01       	movw	r20, r14
    367a:	e7 01       	movw	r28, r14
    367c:	05 90       	lpm	r0, Z+
    367e:	08 94       	sec
    3680:	07 94       	ror	r0
    3682:	28 f4       	brcc	.+10     	; 0x368e <__ftoa_engine+0x80>
    3684:	36 0f       	add	r19, r22
    3686:	e7 1e       	adc	r14, r23
    3688:	f8 1e       	adc	r15, r24
    368a:	49 1f       	adc	r20, r25
    368c:	51 1d       	adc	r21, r1
    368e:	66 0f       	add	r22, r22
    3690:	77 1f       	adc	r23, r23
    3692:	88 1f       	adc	r24, r24
    3694:	99 1f       	adc	r25, r25
    3696:	06 94       	lsr	r0
    3698:	a1 f7       	brne	.-24     	; 0x3682 <__ftoa_engine+0x74>
    369a:	05 90       	lpm	r0, Z+
    369c:	07 94       	ror	r0
    369e:	28 f4       	brcc	.+10     	; 0x36aa <__ftoa_engine+0x9c>
    36a0:	e7 0e       	add	r14, r23
    36a2:	f8 1e       	adc	r15, r24
    36a4:	49 1f       	adc	r20, r25
    36a6:	56 1f       	adc	r21, r22
    36a8:	c1 1d       	adc	r28, r1
    36aa:	77 0f       	add	r23, r23
    36ac:	88 1f       	adc	r24, r24
    36ae:	99 1f       	adc	r25, r25
    36b0:	66 1f       	adc	r22, r22
    36b2:	06 94       	lsr	r0
    36b4:	a1 f7       	brne	.-24     	; 0x369e <__ftoa_engine+0x90>
    36b6:	05 90       	lpm	r0, Z+
    36b8:	07 94       	ror	r0
    36ba:	28 f4       	brcc	.+10     	; 0x36c6 <__ftoa_engine+0xb8>
    36bc:	f8 0e       	add	r15, r24
    36be:	49 1f       	adc	r20, r25
    36c0:	56 1f       	adc	r21, r22
    36c2:	c7 1f       	adc	r28, r23
    36c4:	d1 1d       	adc	r29, r1
    36c6:	88 0f       	add	r24, r24
    36c8:	99 1f       	adc	r25, r25
    36ca:	66 1f       	adc	r22, r22
    36cc:	77 1f       	adc	r23, r23
    36ce:	06 94       	lsr	r0
    36d0:	a1 f7       	brne	.-24     	; 0x36ba <__ftoa_engine+0xac>
    36d2:	05 90       	lpm	r0, Z+
    36d4:	07 94       	ror	r0
    36d6:	20 f4       	brcc	.+8      	; 0x36e0 <__ftoa_engine+0xd2>
    36d8:	49 0f       	add	r20, r25
    36da:	56 1f       	adc	r21, r22
    36dc:	c7 1f       	adc	r28, r23
    36de:	d8 1f       	adc	r29, r24
    36e0:	99 0f       	add	r25, r25
    36e2:	66 1f       	adc	r22, r22
    36e4:	77 1f       	adc	r23, r23
    36e6:	88 1f       	adc	r24, r24
    36e8:	06 94       	lsr	r0
    36ea:	a9 f7       	brne	.-22     	; 0x36d6 <__ftoa_engine+0xc8>
    36ec:	84 91       	lpm	r24, Z
    36ee:	10 95       	com	r17
    36f0:	17 70       	andi	r17, 0x07	; 7
    36f2:	41 f0       	breq	.+16     	; 0x3704 <__ftoa_engine+0xf6>
    36f4:	d6 95       	lsr	r29
    36f6:	c7 95       	ror	r28
    36f8:	57 95       	ror	r21
    36fa:	47 95       	ror	r20
    36fc:	f7 94       	ror	r15
    36fe:	e7 94       	ror	r14
    3700:	1a 95       	dec	r17
    3702:	c1 f7       	brne	.-16     	; 0x36f4 <__ftoa_engine+0xe6>
    3704:	e0 e7       	ldi	r30, 0x70	; 112
    3706:	f0 e0       	ldi	r31, 0x00	; 0
    3708:	68 94       	set
    370a:	15 90       	lpm	r1, Z+
    370c:	15 91       	lpm	r17, Z+
    370e:	35 91       	lpm	r19, Z+
    3710:	65 91       	lpm	r22, Z+
    3712:	95 91       	lpm	r25, Z+
    3714:	05 90       	lpm	r0, Z+
    3716:	7f e2       	ldi	r23, 0x2F	; 47
    3718:	73 95       	inc	r23
    371a:	e1 18       	sub	r14, r1
    371c:	f1 0a       	sbc	r15, r17
    371e:	43 0b       	sbc	r20, r19
    3720:	56 0b       	sbc	r21, r22
    3722:	c9 0b       	sbc	r28, r25
    3724:	d0 09       	sbc	r29, r0
    3726:	c0 f7       	brcc	.-16     	; 0x3718 <__ftoa_engine+0x10a>
    3728:	e1 0c       	add	r14, r1
    372a:	f1 1e       	adc	r15, r17
    372c:	43 1f       	adc	r20, r19
    372e:	56 1f       	adc	r21, r22
    3730:	c9 1f       	adc	r28, r25
    3732:	d0 1d       	adc	r29, r0
    3734:	7e f4       	brtc	.+30     	; 0x3754 <__ftoa_engine+0x146>
    3736:	70 33       	cpi	r23, 0x30	; 48
    3738:	11 f4       	brne	.+4      	; 0x373e <__ftoa_engine+0x130>
    373a:	8a 95       	dec	r24
    373c:	e6 cf       	rjmp	.-52     	; 0x370a <__ftoa_engine+0xfc>
    373e:	e8 94       	clt
    3740:	01 50       	subi	r16, 0x01	; 1
    3742:	30 f0       	brcs	.+12     	; 0x3750 <__ftoa_engine+0x142>
    3744:	08 0f       	add	r16, r24
    3746:	0a f4       	brpl	.+2      	; 0x374a <__ftoa_engine+0x13c>
    3748:	00 27       	eor	r16, r16
    374a:	02 17       	cp	r16, r18
    374c:	08 f4       	brcc	.+2      	; 0x3750 <__ftoa_engine+0x142>
    374e:	20 2f       	mov	r18, r16
    3750:	23 95       	inc	r18
    3752:	02 2f       	mov	r16, r18
    3754:	7a 33       	cpi	r23, 0x3A	; 58
    3756:	28 f0       	brcs	.+10     	; 0x3762 <__ftoa_engine+0x154>
    3758:	79 e3       	ldi	r23, 0x39	; 57
    375a:	7d 93       	st	X+, r23
    375c:	2a 95       	dec	r18
    375e:	e9 f7       	brne	.-6      	; 0x375a <__ftoa_engine+0x14c>
    3760:	10 c0       	rjmp	.+32     	; 0x3782 <__ftoa_engine+0x174>
    3762:	7d 93       	st	X+, r23
    3764:	2a 95       	dec	r18
    3766:	89 f6       	brne	.-94     	; 0x370a <__ftoa_engine+0xfc>
    3768:	06 94       	lsr	r0
    376a:	97 95       	ror	r25
    376c:	67 95       	ror	r22
    376e:	37 95       	ror	r19
    3770:	17 95       	ror	r17
    3772:	17 94       	ror	r1
    3774:	e1 18       	sub	r14, r1
    3776:	f1 0a       	sbc	r15, r17
    3778:	43 0b       	sbc	r20, r19
    377a:	56 0b       	sbc	r21, r22
    377c:	c9 0b       	sbc	r28, r25
    377e:	d0 09       	sbc	r29, r0
    3780:	98 f0       	brcs	.+38     	; 0x37a8 <__ftoa_engine+0x19a>
    3782:	23 95       	inc	r18
    3784:	7e 91       	ld	r23, -X
    3786:	73 95       	inc	r23
    3788:	7a 33       	cpi	r23, 0x3A	; 58
    378a:	08 f0       	brcs	.+2      	; 0x378e <__ftoa_engine+0x180>
    378c:	70 e3       	ldi	r23, 0x30	; 48
    378e:	7c 93       	st	X, r23
    3790:	20 13       	cpse	r18, r16
    3792:	b8 f7       	brcc	.-18     	; 0x3782 <__ftoa_engine+0x174>
    3794:	7e 91       	ld	r23, -X
    3796:	70 61       	ori	r23, 0x10	; 16
    3798:	7d 93       	st	X+, r23
    379a:	30 f0       	brcs	.+12     	; 0x37a8 <__ftoa_engine+0x19a>
    379c:	83 95       	inc	r24
    379e:	71 e3       	ldi	r23, 0x31	; 49
    37a0:	7d 93       	st	X+, r23
    37a2:	70 e3       	ldi	r23, 0x30	; 48
    37a4:	2a 95       	dec	r18
    37a6:	e1 f7       	brne	.-8      	; 0x37a0 <__ftoa_engine+0x192>
    37a8:	11 24       	eor	r1, r1
    37aa:	ef 90       	pop	r14
    37ac:	ff 90       	pop	r15
    37ae:	0f 91       	pop	r16
    37b0:	1f 91       	pop	r17
    37b2:	cf 91       	pop	r28
    37b4:	df 91       	pop	r29
    37b6:	99 27       	eor	r25, r25
    37b8:	87 fd       	sbrc	r24, 7
    37ba:	90 95       	com	r25
    37bc:	08 95       	ret

000037be <strnlen_P>:
    37be:	fc 01       	movw	r30, r24
    37c0:	05 90       	lpm	r0, Z+
    37c2:	61 50       	subi	r22, 0x01	; 1
    37c4:	70 40       	sbci	r23, 0x00	; 0
    37c6:	01 10       	cpse	r0, r1
    37c8:	d8 f7       	brcc	.-10     	; 0x37c0 <strnlen_P+0x2>
    37ca:	80 95       	com	r24
    37cc:	90 95       	com	r25
    37ce:	8e 0f       	add	r24, r30
    37d0:	9f 1f       	adc	r25, r31
    37d2:	08 95       	ret

000037d4 <memset>:
    37d4:	dc 01       	movw	r26, r24
    37d6:	01 c0       	rjmp	.+2      	; 0x37da <memset+0x6>
    37d8:	6d 93       	st	X+, r22
    37da:	41 50       	subi	r20, 0x01	; 1
    37dc:	50 40       	sbci	r21, 0x00	; 0
    37de:	e0 f7       	brcc	.-8      	; 0x37d8 <memset+0x4>
    37e0:	08 95       	ret

000037e2 <strcat>:
    37e2:	fb 01       	movw	r30, r22
    37e4:	dc 01       	movw	r26, r24
    37e6:	0d 90       	ld	r0, X+
    37e8:	00 20       	and	r0, r0
    37ea:	e9 f7       	brne	.-6      	; 0x37e6 <strcat+0x4>
    37ec:	11 97       	sbiw	r26, 0x01	; 1
    37ee:	01 90       	ld	r0, Z+
    37f0:	0d 92       	st	X+, r0
    37f2:	00 20       	and	r0, r0
    37f4:	e1 f7       	brne	.-8      	; 0x37ee <strcat+0xc>
    37f6:	08 95       	ret

000037f8 <strnlen>:
    37f8:	fc 01       	movw	r30, r24
    37fa:	61 50       	subi	r22, 0x01	; 1
    37fc:	70 40       	sbci	r23, 0x00	; 0
    37fe:	01 90       	ld	r0, Z+
    3800:	01 10       	cpse	r0, r1
    3802:	d8 f7       	brcc	.-10     	; 0x37fa <strnlen+0x2>
    3804:	80 95       	com	r24
    3806:	90 95       	com	r25
    3808:	8e 0f       	add	r24, r30
    380a:	9f 1f       	adc	r25, r31
    380c:	08 95       	ret

0000380e <fputc>:
    380e:	0f 93       	push	r16
    3810:	1f 93       	push	r17
    3812:	cf 93       	push	r28
    3814:	df 93       	push	r29
    3816:	fb 01       	movw	r30, r22
    3818:	23 81       	ldd	r18, Z+3	; 0x03
    381a:	21 fd       	sbrc	r18, 1
    381c:	03 c0       	rjmp	.+6      	; 0x3824 <fputc+0x16>
    381e:	8f ef       	ldi	r24, 0xFF	; 255
    3820:	9f ef       	ldi	r25, 0xFF	; 255
    3822:	2c c0       	rjmp	.+88     	; 0x387c <fputc+0x6e>
    3824:	22 ff       	sbrs	r18, 2
    3826:	16 c0       	rjmp	.+44     	; 0x3854 <fputc+0x46>
    3828:	46 81       	ldd	r20, Z+6	; 0x06
    382a:	57 81       	ldd	r21, Z+7	; 0x07
    382c:	24 81       	ldd	r18, Z+4	; 0x04
    382e:	35 81       	ldd	r19, Z+5	; 0x05
    3830:	42 17       	cp	r20, r18
    3832:	53 07       	cpc	r21, r19
    3834:	44 f4       	brge	.+16     	; 0x3846 <fputc+0x38>
    3836:	a0 81       	ld	r26, Z
    3838:	b1 81       	ldd	r27, Z+1	; 0x01
    383a:	9d 01       	movw	r18, r26
    383c:	2f 5f       	subi	r18, 0xFF	; 255
    383e:	3f 4f       	sbci	r19, 0xFF	; 255
    3840:	31 83       	std	Z+1, r19	; 0x01
    3842:	20 83       	st	Z, r18
    3844:	8c 93       	st	X, r24
    3846:	26 81       	ldd	r18, Z+6	; 0x06
    3848:	37 81       	ldd	r19, Z+7	; 0x07
    384a:	2f 5f       	subi	r18, 0xFF	; 255
    384c:	3f 4f       	sbci	r19, 0xFF	; 255
    384e:	37 83       	std	Z+7, r19	; 0x07
    3850:	26 83       	std	Z+6, r18	; 0x06
    3852:	14 c0       	rjmp	.+40     	; 0x387c <fputc+0x6e>
    3854:	8b 01       	movw	r16, r22
    3856:	ec 01       	movw	r28, r24
    3858:	fb 01       	movw	r30, r22
    385a:	00 84       	ldd	r0, Z+8	; 0x08
    385c:	f1 85       	ldd	r31, Z+9	; 0x09
    385e:	e0 2d       	mov	r30, r0
    3860:	09 95       	icall
    3862:	89 2b       	or	r24, r25
    3864:	e1 f6       	brne	.-72     	; 0x381e <fputc+0x10>
    3866:	d8 01       	movw	r26, r16
    3868:	16 96       	adiw	r26, 0x06	; 6
    386a:	8d 91       	ld	r24, X+
    386c:	9c 91       	ld	r25, X
    386e:	17 97       	sbiw	r26, 0x07	; 7
    3870:	01 96       	adiw	r24, 0x01	; 1
    3872:	17 96       	adiw	r26, 0x07	; 7
    3874:	9c 93       	st	X, r25
    3876:	8e 93       	st	-X, r24
    3878:	16 97       	sbiw	r26, 0x06	; 6
    387a:	ce 01       	movw	r24, r28
    387c:	df 91       	pop	r29
    387e:	cf 91       	pop	r28
    3880:	1f 91       	pop	r17
    3882:	0f 91       	pop	r16
    3884:	08 95       	ret

00003886 <sprintf>:
    3886:	ae e0       	ldi	r26, 0x0E	; 14
    3888:	b0 e0       	ldi	r27, 0x00	; 0
    388a:	e9 e4       	ldi	r30, 0x49	; 73
    388c:	fc e1       	ldi	r31, 0x1C	; 28
    388e:	0c 94 cf 1a 	jmp	0x359e	; 0x359e <__prologue_saves__+0x1c>
    3892:	0d 89       	ldd	r16, Y+21	; 0x15
    3894:	1e 89       	ldd	r17, Y+22	; 0x16
    3896:	86 e0       	ldi	r24, 0x06	; 6
    3898:	8c 83       	std	Y+4, r24	; 0x04
    389a:	1a 83       	std	Y+2, r17	; 0x02
    389c:	09 83       	std	Y+1, r16	; 0x01
    389e:	8f ef       	ldi	r24, 0xFF	; 255
    38a0:	9f e7       	ldi	r25, 0x7F	; 127
    38a2:	9e 83       	std	Y+6, r25	; 0x06
    38a4:	8d 83       	std	Y+5, r24	; 0x05
    38a6:	ae 01       	movw	r20, r28
    38a8:	47 5e       	subi	r20, 0xE7	; 231
    38aa:	5f 4f       	sbci	r21, 0xFF	; 255
    38ac:	6f 89       	ldd	r22, Y+23	; 0x17
    38ae:	78 8d       	ldd	r23, Y+24	; 0x18
    38b0:	ce 01       	movw	r24, r28
    38b2:	01 96       	adiw	r24, 0x01	; 1
    38b4:	0e 94 17 17 	call	0x2e2e	; 0x2e2e <vfprintf>
    38b8:	ef 81       	ldd	r30, Y+7	; 0x07
    38ba:	f8 85       	ldd	r31, Y+8	; 0x08
    38bc:	e0 0f       	add	r30, r16
    38be:	f1 1f       	adc	r31, r17
    38c0:	10 82       	st	Z, r1
    38c2:	2e 96       	adiw	r28, 0x0e	; 14
    38c4:	e4 e0       	ldi	r30, 0x04	; 4
    38c6:	0c 94 eb 1a 	jmp	0x35d6	; 0x35d6 <__epilogue_restores__+0x1c>

000038ca <sscanf>:
    38ca:	ae e0       	ldi	r26, 0x0E	; 14
    38cc:	b0 e0       	ldi	r27, 0x00	; 0
    38ce:	eb e6       	ldi	r30, 0x6B	; 107
    38d0:	fc e1       	ldi	r31, 0x1C	; 28
    38d2:	0c 94 d1 1a 	jmp	0x35a2	; 0x35a2 <__prologue_saves__+0x20>
    38d6:	85 e0       	ldi	r24, 0x05	; 5
    38d8:	8c 83       	std	Y+4, r24	; 0x04
    38da:	8b 89       	ldd	r24, Y+19	; 0x13
    38dc:	9c 89       	ldd	r25, Y+20	; 0x14
    38de:	9a 83       	std	Y+2, r25	; 0x02
    38e0:	89 83       	std	Y+1, r24	; 0x01
    38e2:	ae 01       	movw	r20, r28
    38e4:	49 5e       	subi	r20, 0xE9	; 233
    38e6:	5f 4f       	sbci	r21, 0xFF	; 255
    38e8:	6d 89       	ldd	r22, Y+21	; 0x15
    38ea:	7e 89       	ldd	r23, Y+22	; 0x16
    38ec:	ce 01       	movw	r24, r28
    38ee:	01 96       	adiw	r24, 0x01	; 1
    38f0:	0e 94 78 1e 	call	0x3cf0	; 0x3cf0 <vfscanf>
    38f4:	2e 96       	adiw	r28, 0x0e	; 14
    38f6:	e2 e0       	ldi	r30, 0x02	; 2
    38f8:	0c 94 ed 1a 	jmp	0x35da	; 0x35da <__epilogue_restores__+0x20>

000038fc <__ultoa_invert>:
    38fc:	fa 01       	movw	r30, r20
    38fe:	aa 27       	eor	r26, r26
    3900:	28 30       	cpi	r18, 0x08	; 8
    3902:	51 f1       	breq	.+84     	; 0x3958 <__ultoa_invert+0x5c>
    3904:	20 31       	cpi	r18, 0x10	; 16
    3906:	81 f1       	breq	.+96     	; 0x3968 <__ultoa_invert+0x6c>
    3908:	e8 94       	clt
    390a:	6f 93       	push	r22
    390c:	6e 7f       	andi	r22, 0xFE	; 254
    390e:	6e 5f       	subi	r22, 0xFE	; 254
    3910:	7f 4f       	sbci	r23, 0xFF	; 255
    3912:	8f 4f       	sbci	r24, 0xFF	; 255
    3914:	9f 4f       	sbci	r25, 0xFF	; 255
    3916:	af 4f       	sbci	r26, 0xFF	; 255
    3918:	b1 e0       	ldi	r27, 0x01	; 1
    391a:	3e d0       	rcall	.+124    	; 0x3998 <__ultoa_invert+0x9c>
    391c:	b4 e0       	ldi	r27, 0x04	; 4
    391e:	3c d0       	rcall	.+120    	; 0x3998 <__ultoa_invert+0x9c>
    3920:	67 0f       	add	r22, r23
    3922:	78 1f       	adc	r23, r24
    3924:	89 1f       	adc	r24, r25
    3926:	9a 1f       	adc	r25, r26
    3928:	a1 1d       	adc	r26, r1
    392a:	68 0f       	add	r22, r24
    392c:	79 1f       	adc	r23, r25
    392e:	8a 1f       	adc	r24, r26
    3930:	91 1d       	adc	r25, r1
    3932:	a1 1d       	adc	r26, r1
    3934:	6a 0f       	add	r22, r26
    3936:	71 1d       	adc	r23, r1
    3938:	81 1d       	adc	r24, r1
    393a:	91 1d       	adc	r25, r1
    393c:	a1 1d       	adc	r26, r1
    393e:	20 d0       	rcall	.+64     	; 0x3980 <__ultoa_invert+0x84>
    3940:	09 f4       	brne	.+2      	; 0x3944 <__ultoa_invert+0x48>
    3942:	68 94       	set
    3944:	3f 91       	pop	r19
    3946:	2a e0       	ldi	r18, 0x0A	; 10
    3948:	26 9f       	mul	r18, r22
    394a:	11 24       	eor	r1, r1
    394c:	30 19       	sub	r19, r0
    394e:	30 5d       	subi	r19, 0xD0	; 208
    3950:	31 93       	st	Z+, r19
    3952:	de f6       	brtc	.-74     	; 0x390a <__ultoa_invert+0xe>
    3954:	cf 01       	movw	r24, r30
    3956:	08 95       	ret
    3958:	46 2f       	mov	r20, r22
    395a:	47 70       	andi	r20, 0x07	; 7
    395c:	40 5d       	subi	r20, 0xD0	; 208
    395e:	41 93       	st	Z+, r20
    3960:	b3 e0       	ldi	r27, 0x03	; 3
    3962:	0f d0       	rcall	.+30     	; 0x3982 <__ultoa_invert+0x86>
    3964:	c9 f7       	brne	.-14     	; 0x3958 <__ultoa_invert+0x5c>
    3966:	f6 cf       	rjmp	.-20     	; 0x3954 <__ultoa_invert+0x58>
    3968:	46 2f       	mov	r20, r22
    396a:	4f 70       	andi	r20, 0x0F	; 15
    396c:	40 5d       	subi	r20, 0xD0	; 208
    396e:	4a 33       	cpi	r20, 0x3A	; 58
    3970:	18 f0       	brcs	.+6      	; 0x3978 <__ultoa_invert+0x7c>
    3972:	49 5d       	subi	r20, 0xD9	; 217
    3974:	31 fd       	sbrc	r19, 1
    3976:	40 52       	subi	r20, 0x20	; 32
    3978:	41 93       	st	Z+, r20
    397a:	02 d0       	rcall	.+4      	; 0x3980 <__ultoa_invert+0x84>
    397c:	a9 f7       	brne	.-22     	; 0x3968 <__ultoa_invert+0x6c>
    397e:	ea cf       	rjmp	.-44     	; 0x3954 <__ultoa_invert+0x58>
    3980:	b4 e0       	ldi	r27, 0x04	; 4
    3982:	a6 95       	lsr	r26
    3984:	97 95       	ror	r25
    3986:	87 95       	ror	r24
    3988:	77 95       	ror	r23
    398a:	67 95       	ror	r22
    398c:	ba 95       	dec	r27
    398e:	c9 f7       	brne	.-14     	; 0x3982 <__ultoa_invert+0x86>
    3990:	00 97       	sbiw	r24, 0x00	; 0
    3992:	61 05       	cpc	r22, r1
    3994:	71 05       	cpc	r23, r1
    3996:	08 95       	ret
    3998:	9b 01       	movw	r18, r22
    399a:	ac 01       	movw	r20, r24
    399c:	0a 2e       	mov	r0, r26
    399e:	06 94       	lsr	r0
    39a0:	57 95       	ror	r21
    39a2:	47 95       	ror	r20
    39a4:	37 95       	ror	r19
    39a6:	27 95       	ror	r18
    39a8:	ba 95       	dec	r27
    39aa:	c9 f7       	brne	.-14     	; 0x399e <__ultoa_invert+0xa2>
    39ac:	62 0f       	add	r22, r18
    39ae:	73 1f       	adc	r23, r19
    39b0:	84 1f       	adc	r24, r20
    39b2:	95 1f       	adc	r25, r21
    39b4:	a0 1d       	adc	r26, r0
    39b6:	08 95       	ret

000039b8 <putval>:
    39b8:	20 fd       	sbrc	r18, 0
    39ba:	09 c0       	rjmp	.+18     	; 0x39ce <putval+0x16>
    39bc:	fc 01       	movw	r30, r24
    39be:	23 fd       	sbrc	r18, 3
    39c0:	05 c0       	rjmp	.+10     	; 0x39cc <putval+0x14>
    39c2:	22 ff       	sbrs	r18, 2
    39c4:	02 c0       	rjmp	.+4      	; 0x39ca <putval+0x12>
    39c6:	73 83       	std	Z+3, r23	; 0x03
    39c8:	62 83       	std	Z+2, r22	; 0x02
    39ca:	51 83       	std	Z+1, r21	; 0x01
    39cc:	40 83       	st	Z, r20
    39ce:	08 95       	ret

000039d0 <mulacc>:
    39d0:	44 fd       	sbrc	r20, 4
    39d2:	17 c0       	rjmp	.+46     	; 0x3a02 <mulacc+0x32>
    39d4:	46 fd       	sbrc	r20, 6
    39d6:	17 c0       	rjmp	.+46     	; 0x3a06 <mulacc+0x36>
    39d8:	ab 01       	movw	r20, r22
    39da:	bc 01       	movw	r22, r24
    39dc:	da 01       	movw	r26, r20
    39de:	fb 01       	movw	r30, r22
    39e0:	aa 0f       	add	r26, r26
    39e2:	bb 1f       	adc	r27, r27
    39e4:	ee 1f       	adc	r30, r30
    39e6:	ff 1f       	adc	r31, r31
    39e8:	10 94       	com	r1
    39ea:	d1 f7       	brne	.-12     	; 0x39e0 <mulacc+0x10>
    39ec:	4a 0f       	add	r20, r26
    39ee:	5b 1f       	adc	r21, r27
    39f0:	6e 1f       	adc	r22, r30
    39f2:	7f 1f       	adc	r23, r31
    39f4:	cb 01       	movw	r24, r22
    39f6:	ba 01       	movw	r22, r20
    39f8:	66 0f       	add	r22, r22
    39fa:	77 1f       	adc	r23, r23
    39fc:	88 1f       	adc	r24, r24
    39fe:	99 1f       	adc	r25, r25
    3a00:	09 c0       	rjmp	.+18     	; 0x3a14 <mulacc+0x44>
    3a02:	33 e0       	ldi	r19, 0x03	; 3
    3a04:	01 c0       	rjmp	.+2      	; 0x3a08 <mulacc+0x38>
    3a06:	34 e0       	ldi	r19, 0x04	; 4
    3a08:	66 0f       	add	r22, r22
    3a0a:	77 1f       	adc	r23, r23
    3a0c:	88 1f       	adc	r24, r24
    3a0e:	99 1f       	adc	r25, r25
    3a10:	31 50       	subi	r19, 0x01	; 1
    3a12:	d1 f7       	brne	.-12     	; 0x3a08 <mulacc+0x38>
    3a14:	62 0f       	add	r22, r18
    3a16:	71 1d       	adc	r23, r1
    3a18:	81 1d       	adc	r24, r1
    3a1a:	91 1d       	adc	r25, r1
    3a1c:	08 95       	ret

00003a1e <skip_spaces>:
    3a1e:	0f 93       	push	r16
    3a20:	1f 93       	push	r17
    3a22:	cf 93       	push	r28
    3a24:	df 93       	push	r29
    3a26:	8c 01       	movw	r16, r24
    3a28:	c8 01       	movw	r24, r16
    3a2a:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3a2e:	ec 01       	movw	r28, r24
    3a30:	97 fd       	sbrc	r25, 7
    3a32:	08 c0       	rjmp	.+16     	; 0x3a44 <skip_spaces+0x26>
    3a34:	0e 94 89 1f 	call	0x3f12	; 0x3f12 <isspace>
    3a38:	89 2b       	or	r24, r25
    3a3a:	b1 f7       	brne	.-20     	; 0x3a28 <skip_spaces+0xa>
    3a3c:	b8 01       	movw	r22, r16
    3a3e:	ce 01       	movw	r24, r28
    3a40:	0e 94 db 1f 	call	0x3fb6	; 0x3fb6 <ungetc>
    3a44:	ce 01       	movw	r24, r28
    3a46:	df 91       	pop	r29
    3a48:	cf 91       	pop	r28
    3a4a:	1f 91       	pop	r17
    3a4c:	0f 91       	pop	r16
    3a4e:	08 95       	ret

00003a50 <conv_int>:
    3a50:	8f 92       	push	r8
    3a52:	9f 92       	push	r9
    3a54:	af 92       	push	r10
    3a56:	bf 92       	push	r11
    3a58:	ef 92       	push	r14
    3a5a:	ff 92       	push	r15
    3a5c:	0f 93       	push	r16
    3a5e:	1f 93       	push	r17
    3a60:	cf 93       	push	r28
    3a62:	df 93       	push	r29
    3a64:	8c 01       	movw	r16, r24
    3a66:	d6 2f       	mov	r29, r22
    3a68:	7a 01       	movw	r14, r20
    3a6a:	b2 2e       	mov	r11, r18
    3a6c:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3a70:	9c 01       	movw	r18, r24
    3a72:	33 27       	eor	r19, r19
    3a74:	2b 32       	cpi	r18, 0x2B	; 43
    3a76:	31 05       	cpc	r19, r1
    3a78:	31 f0       	breq	.+12     	; 0x3a86 <conv_int+0x36>
    3a7a:	2d 32       	cpi	r18, 0x2D	; 45
    3a7c:	31 05       	cpc	r19, r1
    3a7e:	61 f4       	brne	.+24     	; 0x3a98 <conv_int+0x48>
    3a80:	8b 2d       	mov	r24, r11
    3a82:	80 68       	ori	r24, 0x80	; 128
    3a84:	b8 2e       	mov	r11, r24
    3a86:	d1 50       	subi	r29, 0x01	; 1
    3a88:	11 f4       	brne	.+4      	; 0x3a8e <conv_int+0x3e>
    3a8a:	80 e0       	ldi	r24, 0x00	; 0
    3a8c:	68 c0       	rjmp	.+208    	; 0x3b5e <conv_int+0x10e>
    3a8e:	c8 01       	movw	r24, r16
    3a90:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3a94:	97 fd       	sbrc	r25, 7
    3a96:	f9 cf       	rjmp	.-14     	; 0x3a8a <conv_int+0x3a>
    3a98:	cb 2d       	mov	r28, r11
    3a9a:	cd 7f       	andi	r28, 0xFD	; 253
    3a9c:	2b 2d       	mov	r18, r11
    3a9e:	20 73       	andi	r18, 0x30	; 48
    3aa0:	09 f5       	brne	.+66     	; 0x3ae4 <conv_int+0x94>
    3aa2:	80 33       	cpi	r24, 0x30	; 48
    3aa4:	f9 f4       	brne	.+62     	; 0x3ae4 <conv_int+0x94>
    3aa6:	aa 24       	eor	r10, r10
    3aa8:	aa 94       	dec	r10
    3aaa:	ad 0e       	add	r10, r29
    3aac:	09 f4       	brne	.+2      	; 0x3ab0 <conv_int+0x60>
    3aae:	43 c0       	rjmp	.+134    	; 0x3b36 <conv_int+0xe6>
    3ab0:	c8 01       	movw	r24, r16
    3ab2:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3ab6:	97 fd       	sbrc	r25, 7
    3ab8:	3e c0       	rjmp	.+124    	; 0x3b36 <conv_int+0xe6>
    3aba:	9c 01       	movw	r18, r24
    3abc:	2f 7d       	andi	r18, 0xDF	; 223
    3abe:	33 27       	eor	r19, r19
    3ac0:	28 35       	cpi	r18, 0x58	; 88
    3ac2:	31 05       	cpc	r19, r1
    3ac4:	49 f4       	brne	.+18     	; 0x3ad8 <conv_int+0x88>
    3ac6:	c2 64       	ori	r28, 0x42	; 66
    3ac8:	d2 50       	subi	r29, 0x02	; 2
    3aca:	a9 f1       	breq	.+106    	; 0x3b36 <conv_int+0xe6>
    3acc:	c8 01       	movw	r24, r16
    3ace:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3ad2:	97 ff       	sbrs	r25, 7
    3ad4:	07 c0       	rjmp	.+14     	; 0x3ae4 <conv_int+0x94>
    3ad6:	2f c0       	rjmp	.+94     	; 0x3b36 <conv_int+0xe6>
    3ad8:	b6 fe       	sbrs	r11, 6
    3ada:	02 c0       	rjmp	.+4      	; 0x3ae0 <conv_int+0x90>
    3adc:	c2 60       	ori	r28, 0x02	; 2
    3ade:	01 c0       	rjmp	.+2      	; 0x3ae2 <conv_int+0x92>
    3ae0:	c2 61       	ori	r28, 0x12	; 18
    3ae2:	da 2d       	mov	r29, r10
    3ae4:	81 2c       	mov	r8, r1
    3ae6:	91 2c       	mov	r9, r1
    3ae8:	54 01       	movw	r10, r8
    3aea:	20 ed       	ldi	r18, 0xD0	; 208
    3aec:	28 0f       	add	r18, r24
    3aee:	28 30       	cpi	r18, 0x08	; 8
    3af0:	80 f0       	brcs	.+32     	; 0x3b12 <conv_int+0xc2>
    3af2:	c4 ff       	sbrs	r28, 4
    3af4:	04 c0       	rjmp	.+8      	; 0x3afe <conv_int+0xae>
    3af6:	b8 01       	movw	r22, r16
    3af8:	0e 94 db 1f 	call	0x3fb6	; 0x3fb6 <ungetc>
    3afc:	19 c0       	rjmp	.+50     	; 0x3b30 <conv_int+0xe0>
    3afe:	2a 30       	cpi	r18, 0x0A	; 10
    3b00:	40 f0       	brcs	.+16     	; 0x3b12 <conv_int+0xc2>
    3b02:	c6 ff       	sbrs	r28, 6
    3b04:	f8 cf       	rjmp	.-16     	; 0x3af6 <conv_int+0xa6>
    3b06:	2f 7d       	andi	r18, 0xDF	; 223
    3b08:	3f ee       	ldi	r19, 0xEF	; 239
    3b0a:	32 0f       	add	r19, r18
    3b0c:	36 30       	cpi	r19, 0x06	; 6
    3b0e:	98 f7       	brcc	.-26     	; 0x3af6 <conv_int+0xa6>
    3b10:	27 50       	subi	r18, 0x07	; 7
    3b12:	4c 2f       	mov	r20, r28
    3b14:	c5 01       	movw	r24, r10
    3b16:	b4 01       	movw	r22, r8
    3b18:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <mulacc>
    3b1c:	4b 01       	movw	r8, r22
    3b1e:	5c 01       	movw	r10, r24
    3b20:	c2 60       	ori	r28, 0x02	; 2
    3b22:	d1 50       	subi	r29, 0x01	; 1
    3b24:	59 f0       	breq	.+22     	; 0x3b3c <conv_int+0xec>
    3b26:	c8 01       	movw	r24, r16
    3b28:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3b2c:	97 ff       	sbrs	r25, 7
    3b2e:	dd cf       	rjmp	.-70     	; 0x3aea <conv_int+0x9a>
    3b30:	c1 fd       	sbrc	r28, 1
    3b32:	04 c0       	rjmp	.+8      	; 0x3b3c <conv_int+0xec>
    3b34:	aa cf       	rjmp	.-172    	; 0x3a8a <conv_int+0x3a>
    3b36:	81 2c       	mov	r8, r1
    3b38:	91 2c       	mov	r9, r1
    3b3a:	54 01       	movw	r10, r8
    3b3c:	c7 ff       	sbrs	r28, 7
    3b3e:	08 c0       	rjmp	.+16     	; 0x3b50 <conv_int+0x100>
    3b40:	b0 94       	com	r11
    3b42:	a0 94       	com	r10
    3b44:	90 94       	com	r9
    3b46:	80 94       	com	r8
    3b48:	81 1c       	adc	r8, r1
    3b4a:	91 1c       	adc	r9, r1
    3b4c:	a1 1c       	adc	r10, r1
    3b4e:	b1 1c       	adc	r11, r1
    3b50:	2c 2f       	mov	r18, r28
    3b52:	b5 01       	movw	r22, r10
    3b54:	a4 01       	movw	r20, r8
    3b56:	c7 01       	movw	r24, r14
    3b58:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <putval>
    3b5c:	81 e0       	ldi	r24, 0x01	; 1
    3b5e:	df 91       	pop	r29
    3b60:	cf 91       	pop	r28
    3b62:	1f 91       	pop	r17
    3b64:	0f 91       	pop	r16
    3b66:	ff 90       	pop	r15
    3b68:	ef 90       	pop	r14
    3b6a:	bf 90       	pop	r11
    3b6c:	af 90       	pop	r10
    3b6e:	9f 90       	pop	r9
    3b70:	8f 90       	pop	r8
    3b72:	08 95       	ret

00003b74 <conv_brk>:
    3b74:	a0 e2       	ldi	r26, 0x20	; 32
    3b76:	b0 e0       	ldi	r27, 0x00	; 0
    3b78:	e0 ec       	ldi	r30, 0xC0	; 192
    3b7a:	fd e1       	ldi	r31, 0x1D	; 29
    3b7c:	0c 94 c4 1a 	jmp	0x3588	; 0x3588 <__prologue_saves__+0x6>
    3b80:	5c 01       	movw	r10, r24
    3b82:	96 2e       	mov	r9, r22
    3b84:	7a 01       	movw	r14, r20
    3b86:	f9 01       	movw	r30, r18
    3b88:	8e 01       	movw	r16, r28
    3b8a:	0f 5f       	subi	r16, 0xFF	; 255
    3b8c:	1f 4f       	sbci	r17, 0xFF	; 255
    3b8e:	68 01       	movw	r12, r16
    3b90:	80 e2       	ldi	r24, 0x20	; 32
    3b92:	d8 01       	movw	r26, r16
    3b94:	1d 92       	st	X+, r1
    3b96:	8a 95       	dec	r24
    3b98:	e9 f7       	brne	.-6      	; 0x3b94 <conv_brk+0x20>
    3b9a:	d5 01       	movw	r26, r10
    3b9c:	13 96       	adiw	r26, 0x03	; 3
    3b9e:	8c 90       	ld	r8, X
    3ba0:	80 e0       	ldi	r24, 0x00	; 0
    3ba2:	90 e0       	ldi	r25, 0x00	; 0
    3ba4:	61 2c       	mov	r6, r1
    3ba6:	71 2c       	mov	r7, r1
    3ba8:	30 e0       	ldi	r19, 0x00	; 0
    3baa:	61 e0       	ldi	r22, 0x01	; 1
    3bac:	70 e0       	ldi	r23, 0x00	; 0
    3bae:	83 fc       	sbrc	r8, 3
    3bb0:	25 91       	lpm	r18, Z+
    3bb2:	83 fe       	sbrs	r8, 3
    3bb4:	21 91       	ld	r18, Z+
    3bb6:	8f 01       	movw	r16, r30
    3bb8:	52 2e       	mov	r5, r18
    3bba:	21 11       	cpse	r18, r1
    3bbc:	03 c0       	rjmp	.+6      	; 0x3bc4 <conv_brk+0x50>
    3bbe:	80 e0       	ldi	r24, 0x00	; 0
    3bc0:	90 e0       	ldi	r25, 0x00	; 0
    3bc2:	92 c0       	rjmp	.+292    	; 0x3ce8 <conv_brk+0x174>
    3bc4:	2e 35       	cpi	r18, 0x5E	; 94
    3bc6:	11 f4       	brne	.+4      	; 0x3bcc <conv_brk+0x58>
    3bc8:	00 97       	sbiw	r24, 0x00	; 0
    3bca:	51 f1       	breq	.+84     	; 0x3c20 <conv_brk+0xac>
    3bcc:	43 2f       	mov	r20, r19
    3bce:	50 e0       	ldi	r21, 0x00	; 0
    3bd0:	48 17       	cp	r20, r24
    3bd2:	59 07       	cpc	r21, r25
    3bd4:	3c f4       	brge	.+14     	; 0x3be4 <conv_brk+0x70>
    3bd6:	2d 35       	cpi	r18, 0x5D	; 93
    3bd8:	59 f1       	breq	.+86     	; 0x3c30 <conv_brk+0xbc>
    3bda:	2d 32       	cpi	r18, 0x2D	; 45
    3bdc:	19 f4       	brne	.+6      	; 0x3be4 <conv_brk+0x70>
    3bde:	77 20       	and	r7, r7
    3be0:	09 f1       	breq	.+66     	; 0x3c24 <conv_brk+0xb0>
    3be2:	03 c0       	rjmp	.+6      	; 0x3bea <conv_brk+0x76>
    3be4:	77 20       	and	r7, r7
    3be6:	09 f4       	brne	.+2      	; 0x3bea <conv_brk+0x76>
    3be8:	6a c0       	rjmp	.+212    	; 0x3cbe <conv_brk+0x14a>
    3bea:	45 2d       	mov	r20, r5
    3bec:	46 95       	lsr	r20
    3bee:	46 95       	lsr	r20
    3bf0:	46 95       	lsr	r20
    3bf2:	d6 01       	movw	r26, r12
    3bf4:	a4 0f       	add	r26, r20
    3bf6:	b1 1d       	adc	r27, r1
    3bf8:	45 2d       	mov	r20, r5
    3bfa:	47 70       	andi	r20, 0x07	; 7
    3bfc:	8b 01       	movw	r16, r22
    3bfe:	02 c0       	rjmp	.+4      	; 0x3c04 <conv_brk+0x90>
    3c00:	00 0f       	add	r16, r16
    3c02:	11 1f       	adc	r17, r17
    3c04:	4a 95       	dec	r20
    3c06:	e2 f7       	brpl	.-8      	; 0x3c00 <conv_brk+0x8c>
    3c08:	a8 01       	movw	r20, r16
    3c0a:	5c 91       	ld	r21, X
    3c0c:	45 2b       	or	r20, r21
    3c0e:	4c 93       	st	X, r20
    3c10:	65 14       	cp	r6, r5
    3c12:	59 f0       	breq	.+22     	; 0x3c2a <conv_brk+0xb6>
    3c14:	56 14       	cp	r5, r6
    3c16:	10 f4       	brcc	.+4      	; 0x3c1c <conv_brk+0xa8>
    3c18:	53 94       	inc	r5
    3c1a:	e7 cf       	rjmp	.-50     	; 0x3bea <conv_brk+0x76>
    3c1c:	5a 94       	dec	r5
    3c1e:	e5 cf       	rjmp	.-54     	; 0x3bea <conv_brk+0x76>
    3c20:	31 e0       	ldi	r19, 0x01	; 1
    3c22:	04 c0       	rjmp	.+8      	; 0x3c2c <conv_brk+0xb8>
    3c24:	77 24       	eor	r7, r7
    3c26:	73 94       	inc	r7
    3c28:	01 c0       	rjmp	.+2      	; 0x3c2c <conv_brk+0xb8>
    3c2a:	71 2c       	mov	r7, r1
    3c2c:	01 96       	adiw	r24, 0x01	; 1
    3c2e:	bf cf       	rjmp	.-130    	; 0x3bae <conv_brk+0x3a>
    3c30:	77 20       	and	r7, r7
    3c32:	19 f0       	breq	.+6      	; 0x3c3a <conv_brk+0xc6>
    3c34:	8e 81       	ldd	r24, Y+6	; 0x06
    3c36:	80 62       	ori	r24, 0x20	; 32
    3c38:	8e 83       	std	Y+6, r24	; 0x06
    3c3a:	31 11       	cpse	r19, r1
    3c3c:	03 c0       	rjmp	.+6      	; 0x3c44 <conv_brk+0xd0>
    3c3e:	88 24       	eor	r8, r8
    3c40:	83 94       	inc	r8
    3c42:	17 c0       	rjmp	.+46     	; 0x3c72 <conv_brk+0xfe>
    3c44:	f6 01       	movw	r30, r12
    3c46:	9e 01       	movw	r18, r28
    3c48:	2f 5d       	subi	r18, 0xDF	; 223
    3c4a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c4c:	80 81       	ld	r24, Z
    3c4e:	80 95       	com	r24
    3c50:	81 93       	st	Z+, r24
    3c52:	2e 17       	cp	r18, r30
    3c54:	3f 07       	cpc	r19, r31
    3c56:	d1 f7       	brne	.-12     	; 0x3c4c <conv_brk+0xd8>
    3c58:	f2 cf       	rjmp	.-28     	; 0x3c3e <conv_brk+0xca>
    3c5a:	e1 14       	cp	r14, r1
    3c5c:	f1 04       	cpc	r15, r1
    3c5e:	29 f0       	breq	.+10     	; 0x3c6a <conv_brk+0xf6>
    3c60:	d7 01       	movw	r26, r14
    3c62:	8c 93       	st	X, r24
    3c64:	f7 01       	movw	r30, r14
    3c66:	31 96       	adiw	r30, 0x01	; 1
    3c68:	7f 01       	movw	r14, r30
    3c6a:	9a 94       	dec	r9
    3c6c:	81 2c       	mov	r8, r1
    3c6e:	99 20       	and	r9, r9
    3c70:	f9 f0       	breq	.+62     	; 0x3cb0 <conv_brk+0x13c>
    3c72:	c5 01       	movw	r24, r10
    3c74:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3c78:	97 fd       	sbrc	r25, 7
    3c7a:	18 c0       	rjmp	.+48     	; 0x3cac <conv_brk+0x138>
    3c7c:	fc 01       	movw	r30, r24
    3c7e:	ff 27       	eor	r31, r31
    3c80:	23 e0       	ldi	r18, 0x03	; 3
    3c82:	f5 95       	asr	r31
    3c84:	e7 95       	ror	r30
    3c86:	2a 95       	dec	r18
    3c88:	e1 f7       	brne	.-8      	; 0x3c82 <conv_brk+0x10e>
    3c8a:	ec 0d       	add	r30, r12
    3c8c:	fd 1d       	adc	r31, r13
    3c8e:	20 81       	ld	r18, Z
    3c90:	30 e0       	ldi	r19, 0x00	; 0
    3c92:	ac 01       	movw	r20, r24
    3c94:	47 70       	andi	r20, 0x07	; 7
    3c96:	55 27       	eor	r21, r21
    3c98:	02 c0       	rjmp	.+4      	; 0x3c9e <conv_brk+0x12a>
    3c9a:	35 95       	asr	r19
    3c9c:	27 95       	ror	r18
    3c9e:	4a 95       	dec	r20
    3ca0:	e2 f7       	brpl	.-8      	; 0x3c9a <conv_brk+0x126>
    3ca2:	20 fd       	sbrc	r18, 0
    3ca4:	da cf       	rjmp	.-76     	; 0x3c5a <conv_brk+0xe6>
    3ca6:	b5 01       	movw	r22, r10
    3ca8:	0e 94 db 1f 	call	0x3fb6	; 0x3fb6 <ungetc>
    3cac:	81 10       	cpse	r8, r1
    3cae:	87 cf       	rjmp	.-242    	; 0x3bbe <conv_brk+0x4a>
    3cb0:	e1 14       	cp	r14, r1
    3cb2:	f1 04       	cpc	r15, r1
    3cb4:	11 f0       	breq	.+4      	; 0x3cba <conv_brk+0x146>
    3cb6:	d7 01       	movw	r26, r14
    3cb8:	1c 92       	st	X, r1
    3cba:	c8 01       	movw	r24, r16
    3cbc:	15 c0       	rjmp	.+42     	; 0x3ce8 <conv_brk+0x174>
    3cbe:	42 2f       	mov	r20, r18
    3cc0:	46 95       	lsr	r20
    3cc2:	46 95       	lsr	r20
    3cc4:	46 95       	lsr	r20
    3cc6:	d6 01       	movw	r26, r12
    3cc8:	a4 0f       	add	r26, r20
    3cca:	b1 1d       	adc	r27, r1
    3ccc:	42 2f       	mov	r20, r18
    3cce:	47 70       	andi	r20, 0x07	; 7
    3cd0:	8b 01       	movw	r16, r22
    3cd2:	02 c0       	rjmp	.+4      	; 0x3cd8 <conv_brk+0x164>
    3cd4:	00 0f       	add	r16, r16
    3cd6:	11 1f       	adc	r17, r17
    3cd8:	4a 95       	dec	r20
    3cda:	e2 f7       	brpl	.-8      	; 0x3cd4 <conv_brk+0x160>
    3cdc:	a8 01       	movw	r20, r16
    3cde:	5c 91       	ld	r21, X
    3ce0:	45 2b       	or	r20, r21
    3ce2:	4c 93       	st	X, r20
    3ce4:	62 2e       	mov	r6, r18
    3ce6:	a2 cf       	rjmp	.-188    	; 0x3c2c <conv_brk+0xb8>
    3ce8:	a0 96       	adiw	r28, 0x20	; 32
    3cea:	ef e0       	ldi	r30, 0x0F	; 15
    3cec:	0c 94 e0 1a 	jmp	0x35c0	; 0x35c0 <__epilogue_restores__+0x6>

00003cf0 <vfscanf>:
    3cf0:	a0 e0       	ldi	r26, 0x00	; 0
    3cf2:	b0 e0       	ldi	r27, 0x00	; 0
    3cf4:	ee e7       	ldi	r30, 0x7E	; 126
    3cf6:	fe e1       	ldi	r31, 0x1E	; 30
    3cf8:	0c 94 c4 1a 	jmp	0x3588	; 0x3588 <__prologue_saves__+0x6>
    3cfc:	6c 01       	movw	r12, r24
    3cfe:	eb 01       	movw	r28, r22
    3d00:	5a 01       	movw	r10, r20
    3d02:	fc 01       	movw	r30, r24
    3d04:	17 82       	std	Z+7, r1	; 0x07
    3d06:	16 82       	std	Z+6, r1	; 0x06
    3d08:	51 2c       	mov	r5, r1
    3d0a:	f6 01       	movw	r30, r12
    3d0c:	e3 80       	ldd	r14, Z+3	; 0x03
    3d0e:	fe 01       	movw	r30, r28
    3d10:	e3 fc       	sbrc	r14, 3
    3d12:	85 91       	lpm	r24, Z+
    3d14:	e3 fe       	sbrs	r14, 3
    3d16:	81 91       	ld	r24, Z+
    3d18:	18 2f       	mov	r17, r24
    3d1a:	ef 01       	movw	r28, r30
    3d1c:	88 23       	and	r24, r24
    3d1e:	09 f4       	brne	.+2      	; 0x3d22 <vfscanf+0x32>
    3d20:	ee c0       	rjmp	.+476    	; 0x3efe <vfscanf+0x20e>
    3d22:	90 e0       	ldi	r25, 0x00	; 0
    3d24:	0e 94 89 1f 	call	0x3f12	; 0x3f12 <isspace>
    3d28:	89 2b       	or	r24, r25
    3d2a:	21 f0       	breq	.+8      	; 0x3d34 <vfscanf+0x44>
    3d2c:	c6 01       	movw	r24, r12
    3d2e:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <skip_spaces>
    3d32:	eb cf       	rjmp	.-42     	; 0x3d0a <vfscanf+0x1a>
    3d34:	15 32       	cpi	r17, 0x25	; 37
    3d36:	41 f4       	brne	.+16     	; 0x3d48 <vfscanf+0x58>
    3d38:	fe 01       	movw	r30, r28
    3d3a:	e3 fc       	sbrc	r14, 3
    3d3c:	15 91       	lpm	r17, Z+
    3d3e:	e3 fe       	sbrs	r14, 3
    3d40:	11 91       	ld	r17, Z+
    3d42:	ef 01       	movw	r28, r30
    3d44:	15 32       	cpi	r17, 0x25	; 37
    3d46:	81 f4       	brne	.+32     	; 0x3d68 <vfscanf+0x78>
    3d48:	c6 01       	movw	r24, r12
    3d4a:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3d4e:	97 fd       	sbrc	r25, 7
    3d50:	d4 c0       	rjmp	.+424    	; 0x3efa <vfscanf+0x20a>
    3d52:	41 2f       	mov	r20, r17
    3d54:	50 e0       	ldi	r21, 0x00	; 0
    3d56:	9c 01       	movw	r18, r24
    3d58:	33 27       	eor	r19, r19
    3d5a:	24 17       	cp	r18, r20
    3d5c:	35 07       	cpc	r19, r21
    3d5e:	a9 f2       	breq	.-86     	; 0x3d0a <vfscanf+0x1a>
    3d60:	b6 01       	movw	r22, r12
    3d62:	0e 94 db 1f 	call	0x3fb6	; 0x3fb6 <ungetc>
    3d66:	cb c0       	rjmp	.+406    	; 0x3efe <vfscanf+0x20e>
    3d68:	1a 32       	cpi	r17, 0x2A	; 42
    3d6a:	39 f4       	brne	.+14     	; 0x3d7a <vfscanf+0x8a>
    3d6c:	e3 fc       	sbrc	r14, 3
    3d6e:	15 91       	lpm	r17, Z+
    3d70:	e3 fe       	sbrs	r14, 3
    3d72:	11 91       	ld	r17, Z+
    3d74:	ef 01       	movw	r28, r30
    3d76:	01 e0       	ldi	r16, 0x01	; 1
    3d78:	01 c0       	rjmp	.+2      	; 0x3d7c <vfscanf+0x8c>
    3d7a:	00 e0       	ldi	r16, 0x00	; 0
    3d7c:	f1 2c       	mov	r15, r1
    3d7e:	20 ed       	ldi	r18, 0xD0	; 208
    3d80:	21 0f       	add	r18, r17
    3d82:	2a 30       	cpi	r18, 0x0A	; 10
    3d84:	80 f4       	brcc	.+32     	; 0x3da6 <vfscanf+0xb6>
    3d86:	02 60       	ori	r16, 0x02	; 2
    3d88:	6f 2d       	mov	r22, r15
    3d8a:	70 e0       	ldi	r23, 0x00	; 0
    3d8c:	80 e0       	ldi	r24, 0x00	; 0
    3d8e:	90 e0       	ldi	r25, 0x00	; 0
    3d90:	40 e2       	ldi	r20, 0x20	; 32
    3d92:	0e 94 e8 1c 	call	0x39d0	; 0x39d0 <mulacc>
    3d96:	f6 2e       	mov	r15, r22
    3d98:	fe 01       	movw	r30, r28
    3d9a:	e3 fc       	sbrc	r14, 3
    3d9c:	15 91       	lpm	r17, Z+
    3d9e:	e3 fe       	sbrs	r14, 3
    3da0:	11 91       	ld	r17, Z+
    3da2:	ef 01       	movw	r28, r30
    3da4:	ec cf       	rjmp	.-40     	; 0x3d7e <vfscanf+0x8e>
    3da6:	01 ff       	sbrs	r16, 1
    3da8:	03 c0       	rjmp	.+6      	; 0x3db0 <vfscanf+0xc0>
    3daa:	f1 10       	cpse	r15, r1
    3dac:	03 c0       	rjmp	.+6      	; 0x3db4 <vfscanf+0xc4>
    3dae:	a7 c0       	rjmp	.+334    	; 0x3efe <vfscanf+0x20e>
    3db0:	ff 24       	eor	r15, r15
    3db2:	fa 94       	dec	r15
    3db4:	18 36       	cpi	r17, 0x68	; 104
    3db6:	19 f0       	breq	.+6      	; 0x3dbe <vfscanf+0xce>
    3db8:	1c 36       	cpi	r17, 0x6C	; 108
    3dba:	51 f0       	breq	.+20     	; 0x3dd0 <vfscanf+0xe0>
    3dbc:	10 c0       	rjmp	.+32     	; 0x3dde <vfscanf+0xee>
    3dbe:	fe 01       	movw	r30, r28
    3dc0:	e3 fc       	sbrc	r14, 3
    3dc2:	15 91       	lpm	r17, Z+
    3dc4:	e3 fe       	sbrs	r14, 3
    3dc6:	11 91       	ld	r17, Z+
    3dc8:	ef 01       	movw	r28, r30
    3dca:	18 36       	cpi	r17, 0x68	; 104
    3dcc:	41 f4       	brne	.+16     	; 0x3dde <vfscanf+0xee>
    3dce:	08 60       	ori	r16, 0x08	; 8
    3dd0:	04 60       	ori	r16, 0x04	; 4
    3dd2:	fe 01       	movw	r30, r28
    3dd4:	e3 fc       	sbrc	r14, 3
    3dd6:	15 91       	lpm	r17, Z+
    3dd8:	e3 fe       	sbrs	r14, 3
    3dda:	11 91       	ld	r17, Z+
    3ddc:	ef 01       	movw	r28, r30
    3dde:	11 23       	and	r17, r17
    3de0:	09 f4       	brne	.+2      	; 0x3de4 <vfscanf+0xf4>
    3de2:	8d c0       	rjmp	.+282    	; 0x3efe <vfscanf+0x20e>
    3de4:	61 2f       	mov	r22, r17
    3de6:	70 e0       	ldi	r23, 0x00	; 0
    3de8:	8a e6       	ldi	r24, 0x6A	; 106
    3dea:	91 e0       	ldi	r25, 0x01	; 1
    3dec:	0e 94 92 1f 	call	0x3f24	; 0x3f24 <strchr_P>
    3df0:	89 2b       	or	r24, r25
    3df2:	09 f4       	brne	.+2      	; 0x3df6 <vfscanf+0x106>
    3df4:	84 c0       	rjmp	.+264    	; 0x3efe <vfscanf+0x20e>
    3df6:	00 fd       	sbrc	r16, 0
    3df8:	07 c0       	rjmp	.+14     	; 0x3e08 <vfscanf+0x118>
    3dfa:	f5 01       	movw	r30, r10
    3dfc:	80 80       	ld	r8, Z
    3dfe:	91 80       	ldd	r9, Z+1	; 0x01
    3e00:	c5 01       	movw	r24, r10
    3e02:	02 96       	adiw	r24, 0x02	; 2
    3e04:	5c 01       	movw	r10, r24
    3e06:	02 c0       	rjmp	.+4      	; 0x3e0c <vfscanf+0x11c>
    3e08:	81 2c       	mov	r8, r1
    3e0a:	91 2c       	mov	r9, r1
    3e0c:	1e 36       	cpi	r17, 0x6E	; 110
    3e0e:	51 f4       	brne	.+20     	; 0x3e24 <vfscanf+0x134>
    3e10:	f6 01       	movw	r30, r12
    3e12:	46 81       	ldd	r20, Z+6	; 0x06
    3e14:	57 81       	ldd	r21, Z+7	; 0x07
    3e16:	60 e0       	ldi	r22, 0x00	; 0
    3e18:	70 e0       	ldi	r23, 0x00	; 0
    3e1a:	20 2f       	mov	r18, r16
    3e1c:	c4 01       	movw	r24, r8
    3e1e:	0e 94 dc 1c 	call	0x39b8	; 0x39b8 <putval>
    3e22:	73 cf       	rjmp	.-282    	; 0x3d0a <vfscanf+0x1a>
    3e24:	13 36       	cpi	r17, 0x63	; 99
    3e26:	a9 f4       	brne	.+42     	; 0x3e52 <vfscanf+0x162>
    3e28:	01 fd       	sbrc	r16, 1
    3e2a:	02 c0       	rjmp	.+4      	; 0x3e30 <vfscanf+0x140>
    3e2c:	ff 24       	eor	r15, r15
    3e2e:	f3 94       	inc	r15
    3e30:	c6 01       	movw	r24, r12
    3e32:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3e36:	97 fd       	sbrc	r25, 7
    3e38:	60 c0       	rjmp	.+192    	; 0x3efa <vfscanf+0x20a>
    3e3a:	81 14       	cp	r8, r1
    3e3c:	91 04       	cpc	r9, r1
    3e3e:	29 f0       	breq	.+10     	; 0x3e4a <vfscanf+0x15a>
    3e40:	f4 01       	movw	r30, r8
    3e42:	80 83       	st	Z, r24
    3e44:	c4 01       	movw	r24, r8
    3e46:	01 96       	adiw	r24, 0x01	; 1
    3e48:	4c 01       	movw	r8, r24
    3e4a:	fa 94       	dec	r15
    3e4c:	f1 10       	cpse	r15, r1
    3e4e:	f0 cf       	rjmp	.-32     	; 0x3e30 <vfscanf+0x140>
    3e50:	50 c0       	rjmp	.+160    	; 0x3ef2 <vfscanf+0x202>
    3e52:	1b 35       	cpi	r17, 0x5B	; 91
    3e54:	59 f4       	brne	.+22     	; 0x3e6c <vfscanf+0x17c>
    3e56:	9e 01       	movw	r18, r28
    3e58:	a4 01       	movw	r20, r8
    3e5a:	6f 2d       	mov	r22, r15
    3e5c:	c6 01       	movw	r24, r12
    3e5e:	0e 94 ba 1d 	call	0x3b74	; 0x3b74 <conv_brk>
    3e62:	ec 01       	movw	r28, r24
    3e64:	89 2b       	or	r24, r25
    3e66:	09 f0       	breq	.+2      	; 0x3e6a <vfscanf+0x17a>
    3e68:	44 c0       	rjmp	.+136    	; 0x3ef2 <vfscanf+0x202>
    3e6a:	3e c0       	rjmp	.+124    	; 0x3ee8 <vfscanf+0x1f8>
    3e6c:	c6 01       	movw	r24, r12
    3e6e:	0e 94 0f 1d 	call	0x3a1e	; 0x3a1e <skip_spaces>
    3e72:	97 fd       	sbrc	r25, 7
    3e74:	42 c0       	rjmp	.+132    	; 0x3efa <vfscanf+0x20a>
    3e76:	1f 36       	cpi	r17, 0x6F	; 111
    3e78:	61 f1       	breq	.+88     	; 0x3ed2 <vfscanf+0x1e2>
    3e7a:	28 f4       	brcc	.+10     	; 0x3e86 <vfscanf+0x196>
    3e7c:	14 36       	cpi	r17, 0x64	; 100
    3e7e:	39 f1       	breq	.+78     	; 0x3ece <vfscanf+0x1de>
    3e80:	19 36       	cpi	r17, 0x69	; 105
    3e82:	51 f1       	breq	.+84     	; 0x3ed8 <vfscanf+0x1e8>
    3e84:	28 c0       	rjmp	.+80     	; 0x3ed6 <vfscanf+0x1e6>
    3e86:	13 37       	cpi	r17, 0x73	; 115
    3e88:	71 f0       	breq	.+28     	; 0x3ea6 <vfscanf+0x1b6>
    3e8a:	15 37       	cpi	r17, 0x75	; 117
    3e8c:	01 f1       	breq	.+64     	; 0x3ece <vfscanf+0x1de>
    3e8e:	23 c0       	rjmp	.+70     	; 0x3ed6 <vfscanf+0x1e6>
    3e90:	81 14       	cp	r8, r1
    3e92:	91 04       	cpc	r9, r1
    3e94:	29 f0       	breq	.+10     	; 0x3ea0 <vfscanf+0x1b0>
    3e96:	f4 01       	movw	r30, r8
    3e98:	60 82       	st	Z, r6
    3e9a:	c4 01       	movw	r24, r8
    3e9c:	01 96       	adiw	r24, 0x01	; 1
    3e9e:	4c 01       	movw	r8, r24
    3ea0:	fa 94       	dec	r15
    3ea2:	ff 20       	and	r15, r15
    3ea4:	71 f0       	breq	.+28     	; 0x3ec2 <vfscanf+0x1d2>
    3ea6:	c6 01       	movw	r24, r12
    3ea8:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <fgetc>
    3eac:	3c 01       	movw	r6, r24
    3eae:	97 fd       	sbrc	r25, 7
    3eb0:	08 c0       	rjmp	.+16     	; 0x3ec2 <vfscanf+0x1d2>
    3eb2:	0e 94 89 1f 	call	0x3f12	; 0x3f12 <isspace>
    3eb6:	89 2b       	or	r24, r25
    3eb8:	59 f3       	breq	.-42     	; 0x3e90 <vfscanf+0x1a0>
    3eba:	b6 01       	movw	r22, r12
    3ebc:	c3 01       	movw	r24, r6
    3ebe:	0e 94 db 1f 	call	0x3fb6	; 0x3fb6 <ungetc>
    3ec2:	81 14       	cp	r8, r1
    3ec4:	91 04       	cpc	r9, r1
    3ec6:	a9 f0       	breq	.+42     	; 0x3ef2 <vfscanf+0x202>
    3ec8:	f4 01       	movw	r30, r8
    3eca:	10 82       	st	Z, r1
    3ecc:	12 c0       	rjmp	.+36     	; 0x3ef2 <vfscanf+0x202>
    3ece:	00 62       	ori	r16, 0x20	; 32
    3ed0:	03 c0       	rjmp	.+6      	; 0x3ed8 <vfscanf+0x1e8>
    3ed2:	00 61       	ori	r16, 0x10	; 16
    3ed4:	01 c0       	rjmp	.+2      	; 0x3ed8 <vfscanf+0x1e8>
    3ed6:	00 64       	ori	r16, 0x40	; 64
    3ed8:	20 2f       	mov	r18, r16
    3eda:	a4 01       	movw	r20, r8
    3edc:	6f 2d       	mov	r22, r15
    3ede:	c6 01       	movw	r24, r12
    3ee0:	0e 94 28 1d 	call	0x3a50	; 0x3a50 <conv_int>
    3ee4:	81 11       	cpse	r24, r1
    3ee6:	05 c0       	rjmp	.+10     	; 0x3ef2 <vfscanf+0x202>
    3ee8:	f6 01       	movw	r30, r12
    3eea:	83 81       	ldd	r24, Z+3	; 0x03
    3eec:	80 73       	andi	r24, 0x30	; 48
    3eee:	29 f4       	brne	.+10     	; 0x3efa <vfscanf+0x20a>
    3ef0:	06 c0       	rjmp	.+12     	; 0x3efe <vfscanf+0x20e>
    3ef2:	00 fd       	sbrc	r16, 0
    3ef4:	0a cf       	rjmp	.-492    	; 0x3d0a <vfscanf+0x1a>
    3ef6:	53 94       	inc	r5
    3ef8:	08 cf       	rjmp	.-496    	; 0x3d0a <vfscanf+0x1a>
    3efa:	55 20       	and	r5, r5
    3efc:	19 f0       	breq	.+6      	; 0x3f04 <vfscanf+0x214>
    3efe:	85 2d       	mov	r24, r5
    3f00:	90 e0       	ldi	r25, 0x00	; 0
    3f02:	02 c0       	rjmp	.+4      	; 0x3f08 <vfscanf+0x218>
    3f04:	8f ef       	ldi	r24, 0xFF	; 255
    3f06:	9f ef       	ldi	r25, 0xFF	; 255
    3f08:	cd b7       	in	r28, 0x3d	; 61
    3f0a:	de b7       	in	r29, 0x3e	; 62
    3f0c:	ef e0       	ldi	r30, 0x0F	; 15
    3f0e:	0c 94 e0 1a 	jmp	0x35c0	; 0x35c0 <__epilogue_restores__+0x6>

00003f12 <isspace>:
    3f12:	91 11       	cpse	r25, r1
    3f14:	0c 94 f4 1f 	jmp	0x3fe8	; 0x3fe8 <__ctype_isfalse>
    3f18:	80 32       	cpi	r24, 0x20	; 32
    3f1a:	19 f0       	breq	.+6      	; 0x3f22 <isspace+0x10>
    3f1c:	89 50       	subi	r24, 0x09	; 9
    3f1e:	85 50       	subi	r24, 0x05	; 5
    3f20:	c8 f7       	brcc	.-14     	; 0x3f14 <isspace+0x2>
    3f22:	08 95       	ret

00003f24 <strchr_P>:
    3f24:	fc 01       	movw	r30, r24
    3f26:	05 90       	lpm	r0, Z+
    3f28:	06 16       	cp	r0, r22
    3f2a:	21 f0       	breq	.+8      	; 0x3f34 <strchr_P+0x10>
    3f2c:	00 20       	and	r0, r0
    3f2e:	d9 f7       	brne	.-10     	; 0x3f26 <strchr_P+0x2>
    3f30:	c0 01       	movw	r24, r0
    3f32:	08 95       	ret
    3f34:	31 97       	sbiw	r30, 0x01	; 1
    3f36:	cf 01       	movw	r24, r30
    3f38:	08 95       	ret

00003f3a <fgetc>:
    3f3a:	cf 93       	push	r28
    3f3c:	df 93       	push	r29
    3f3e:	ec 01       	movw	r28, r24
    3f40:	2b 81       	ldd	r18, Y+3	; 0x03
    3f42:	20 ff       	sbrs	r18, 0
    3f44:	33 c0       	rjmp	.+102    	; 0x3fac <fgetc+0x72>
    3f46:	26 ff       	sbrs	r18, 6
    3f48:	0a c0       	rjmp	.+20     	; 0x3f5e <fgetc+0x24>
    3f4a:	2f 7b       	andi	r18, 0xBF	; 191
    3f4c:	2b 83       	std	Y+3, r18	; 0x03
    3f4e:	8e 81       	ldd	r24, Y+6	; 0x06
    3f50:	9f 81       	ldd	r25, Y+7	; 0x07
    3f52:	01 96       	adiw	r24, 0x01	; 1
    3f54:	9f 83       	std	Y+7, r25	; 0x07
    3f56:	8e 83       	std	Y+6, r24	; 0x06
    3f58:	8a 81       	ldd	r24, Y+2	; 0x02
    3f5a:	90 e0       	ldi	r25, 0x00	; 0
    3f5c:	29 c0       	rjmp	.+82     	; 0x3fb0 <fgetc+0x76>
    3f5e:	22 ff       	sbrs	r18, 2
    3f60:	0f c0       	rjmp	.+30     	; 0x3f80 <fgetc+0x46>
    3f62:	e8 81       	ld	r30, Y
    3f64:	f9 81       	ldd	r31, Y+1	; 0x01
    3f66:	80 81       	ld	r24, Z
    3f68:	08 2e       	mov	r0, r24
    3f6a:	00 0c       	add	r0, r0
    3f6c:	99 0b       	sbc	r25, r25
    3f6e:	00 97       	sbiw	r24, 0x00	; 0
    3f70:	19 f4       	brne	.+6      	; 0x3f78 <fgetc+0x3e>
    3f72:	20 62       	ori	r18, 0x20	; 32
    3f74:	2b 83       	std	Y+3, r18	; 0x03
    3f76:	1a c0       	rjmp	.+52     	; 0x3fac <fgetc+0x72>
    3f78:	31 96       	adiw	r30, 0x01	; 1
    3f7a:	f9 83       	std	Y+1, r31	; 0x01
    3f7c:	e8 83       	st	Y, r30
    3f7e:	0e c0       	rjmp	.+28     	; 0x3f9c <fgetc+0x62>
    3f80:	ea 85       	ldd	r30, Y+10	; 0x0a
    3f82:	fb 85       	ldd	r31, Y+11	; 0x0b
    3f84:	09 95       	icall
    3f86:	97 ff       	sbrs	r25, 7
    3f88:	09 c0       	rjmp	.+18     	; 0x3f9c <fgetc+0x62>
    3f8a:	2b 81       	ldd	r18, Y+3	; 0x03
    3f8c:	01 96       	adiw	r24, 0x01	; 1
    3f8e:	11 f0       	breq	.+4      	; 0x3f94 <fgetc+0x5a>
    3f90:	80 e2       	ldi	r24, 0x20	; 32
    3f92:	01 c0       	rjmp	.+2      	; 0x3f96 <fgetc+0x5c>
    3f94:	80 e1       	ldi	r24, 0x10	; 16
    3f96:	82 2b       	or	r24, r18
    3f98:	8b 83       	std	Y+3, r24	; 0x03
    3f9a:	08 c0       	rjmp	.+16     	; 0x3fac <fgetc+0x72>
    3f9c:	2e 81       	ldd	r18, Y+6	; 0x06
    3f9e:	3f 81       	ldd	r19, Y+7	; 0x07
    3fa0:	2f 5f       	subi	r18, 0xFF	; 255
    3fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    3fa4:	3f 83       	std	Y+7, r19	; 0x07
    3fa6:	2e 83       	std	Y+6, r18	; 0x06
    3fa8:	99 27       	eor	r25, r25
    3faa:	02 c0       	rjmp	.+4      	; 0x3fb0 <fgetc+0x76>
    3fac:	8f ef       	ldi	r24, 0xFF	; 255
    3fae:	9f ef       	ldi	r25, 0xFF	; 255
    3fb0:	df 91       	pop	r29
    3fb2:	cf 91       	pop	r28
    3fb4:	08 95       	ret

00003fb6 <ungetc>:
    3fb6:	fb 01       	movw	r30, r22
    3fb8:	23 81       	ldd	r18, Z+3	; 0x03
    3fba:	20 ff       	sbrs	r18, 0
    3fbc:	12 c0       	rjmp	.+36     	; 0x3fe2 <ungetc+0x2c>
    3fbe:	26 fd       	sbrc	r18, 6
    3fc0:	10 c0       	rjmp	.+32     	; 0x3fe2 <ungetc+0x2c>
    3fc2:	8f 3f       	cpi	r24, 0xFF	; 255
    3fc4:	3f ef       	ldi	r19, 0xFF	; 255
    3fc6:	93 07       	cpc	r25, r19
    3fc8:	61 f0       	breq	.+24     	; 0x3fe2 <ungetc+0x2c>
    3fca:	82 83       	std	Z+2, r24	; 0x02
    3fcc:	2f 7d       	andi	r18, 0xDF	; 223
    3fce:	20 64       	ori	r18, 0x40	; 64
    3fd0:	23 83       	std	Z+3, r18	; 0x03
    3fd2:	26 81       	ldd	r18, Z+6	; 0x06
    3fd4:	37 81       	ldd	r19, Z+7	; 0x07
    3fd6:	21 50       	subi	r18, 0x01	; 1
    3fd8:	31 09       	sbc	r19, r1
    3fda:	37 83       	std	Z+7, r19	; 0x07
    3fdc:	26 83       	std	Z+6, r18	; 0x06
    3fde:	99 27       	eor	r25, r25
    3fe0:	08 95       	ret
    3fe2:	8f ef       	ldi	r24, 0xFF	; 255
    3fe4:	9f ef       	ldi	r25, 0xFF	; 255
    3fe6:	08 95       	ret

00003fe8 <__ctype_isfalse>:
    3fe8:	99 27       	eor	r25, r25
    3fea:	88 27       	eor	r24, r24

00003fec <__ctype_istrue>:
    3fec:	08 95       	ret

00003fee <_exit>:
    3fee:	f8 94       	cli

00003ff0 <__stop_program>:
    3ff0:	ff cf       	rjmp	.-2      	; 0x3ff0 <__stop_program>
