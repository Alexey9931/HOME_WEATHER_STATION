
NRF24_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d4  00800100  000060b4  00006148  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000060b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000051b  008001d4  008001d4  0000621c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000621c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006278  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004b0  00000000  00000000  000062b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a18a  00000000  00000000  00006768  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001a45  00000000  00000000  000108f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004777  00000000  00000000  00012337  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001324  00000000  00000000  00016ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f99  00000000  00000000  00017dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006ba5  00000000  00000000  00018d6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  0001f912  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__ctors_end>
       4:	0c 94 4d 11 	jmp	0x229a	; 0x229a <__vector_1>
       8:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
       c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      10:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      14:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      18:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      1c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      20:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      24:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      28:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      2c:	0c 94 22 0c 	jmp	0x1844	; 0x1844 <__vector_11>
      30:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      34:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      38:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      3c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      40:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      44:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      48:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      4c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      50:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      54:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      58:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      5c:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      60:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      64:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__bad_interrupt>
      68:	1d 20       	and	r1, r13
      6a:	25 20       	and	r2, r5
      6c:	2d 20       	and	r2, r13
      6e:	35 20       	and	r3, r5
      70:	3d 20       	and	r3, r13
      72:	45 20       	and	r4, r5
      74:	4d 20       	and	r4, r13
      76:	62 20       	and	r6, r2
      78:	6d 20       	and	r6, r13
      7a:	78 20       	and	r7, r8
      7c:	83 20       	and	r8, r3
      7e:	8e 20       	and	r8, r14
      80:	99 20       	and	r9, r9
      82:	a4 20       	and	r10, r4
      84:	af 20       	and	r10, r15
      86:	ba 20       	and	r11, r10
      88:	c5 20       	and	r12, r5
      8a:	d0 20       	and	r13, r0
      8c:	db 20       	and	r13, r11

0000008e <__trampolines_end>:
      8e:	6e 61       	ori	r22, 0x1E	; 30
      90:	6e 00       	.word	0x006e	; ????

00000092 <__c.2332>:
      92:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a2:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b2:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c2:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d2:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e2:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f2:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     102:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     112:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     122:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     132:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     142:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     152:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     162:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     172:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     182:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000190 <__c.2474>:
     190:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

0000019c <__ctors_end>:
     19c:	11 24       	eor	r1, r1
     19e:	1f be       	out	0x3f, r1	; 63
     1a0:	cf ef       	ldi	r28, 0xFF	; 255
     1a2:	d8 e0       	ldi	r29, 0x08	; 8
     1a4:	de bf       	out	0x3e, r29	; 62
     1a6:	cd bf       	out	0x3d, r28	; 61

000001a8 <__do_copy_data>:
     1a8:	11 e0       	ldi	r17, 0x01	; 1
     1aa:	a0 e0       	ldi	r26, 0x00	; 0
     1ac:	b1 e0       	ldi	r27, 0x01	; 1
     1ae:	e4 eb       	ldi	r30, 0xB4	; 180
     1b0:	f0 e6       	ldi	r31, 0x60	; 96
     1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <__do_copy_data+0x10>
     1b4:	05 90       	lpm	r0, Z+
     1b6:	0d 92       	st	X+, r0
     1b8:	a4 3d       	cpi	r26, 0xD4	; 212
     1ba:	b1 07       	cpc	r27, r17
     1bc:	d9 f7       	brne	.-10     	; 0x1b4 <__do_copy_data+0xc>

000001be <__do_clear_bss>:
     1be:	26 e0       	ldi	r18, 0x06	; 6
     1c0:	a4 ed       	ldi	r26, 0xD4	; 212
     1c2:	b1 e0       	ldi	r27, 0x01	; 1
     1c4:	01 c0       	rjmp	.+2      	; 0x1c8 <.do_clear_bss_start>

000001c6 <.do_clear_bss_loop>:
     1c6:	1d 92       	st	X+, r1

000001c8 <.do_clear_bss_start>:
     1c8:	af 3e       	cpi	r26, 0xEF	; 239
     1ca:	b2 07       	cpc	r27, r18
     1cc:	e1 f7       	brne	.-8      	; 0x1c6 <.do_clear_bss_loop>
     1ce:	0e 94 c6 0c 	call	0x198c	; 0x198c <main>
     1d2:	0c 94 58 30 	jmp	0x60b0	; 0x60b0 <_exit>

000001d6 <__bad_interrupt>:
     1d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001da <Read>:
#define BMP180_R 0xEF
#define BMP180_W 0xEE

// чтение регистра 16 бит
uint16_t Read(uint8_t address) 
{
     1da:	0f 93       	push	r16
     1dc:	1f 93       	push	r17
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	c8 2f       	mov	r28, r24
	uint16_t msb=0;
	uint16_t lsb=0;
	uint16_t data;

	I2C_StartCondition();               // запуск i2c
     1e4:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     1e8:	8e ee       	ldi	r24, 0xEE	; 238
     1ea:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(address);	        // передача адреса памяти
     1ee:	8c 2f       	mov	r24, r28
     1f0:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     1f4:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>

	I2C_StartCondition();               // запуск i2c
     1f8:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(BMP180_R);        // передача адреса устройства, режим чтения
     1fc:	8f ee       	ldi	r24, 0xEF	; 239
     1fe:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	msb = I2C_ReadByte();
     202:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
     206:	c8 2f       	mov	r28, r24
     208:	d0 e0       	ldi	r29, 0x00	; 0
	lsb = I2C_ReadLastByte();
     20a:	0e 94 c2 19 	call	0x3384	; 0x3384 <I2C_ReadLastByte>
     20e:	08 2f       	mov	r16, r24
     210:	10 e0       	ldi	r17, 0x00	; 0
	I2C_StopCondition();                // остановка i2c
     212:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>

	data = (uint16_t)((msb << 8) + lsb);
     216:	9c 2f       	mov	r25, r28
     218:	88 27       	eor	r24, r24
	return data;
}
     21a:	80 0f       	add	r24, r16
     21c:	91 1f       	adc	r25, r17
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	1f 91       	pop	r17
     224:	0f 91       	pop	r16
     226:	08 95       	ret

00000228 <BMP180_Calibration>:
// получить данные для калибровки
void BMP180_Calibration (void) 
{
	ac1 = Read(0xAA);
     228:	8a ea       	ldi	r24, 0xAA	; 170
     22a:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     22e:	90 93 a5 06 	sts	0x06A5, r25	; 0x8006a5 <ac1+0x1>
     232:	80 93 a4 06 	sts	0x06A4, r24	; 0x8006a4 <ac1>
	ac2 = Read(0xAC);
     236:	8c ea       	ldi	r24, 0xAC	; 172
     238:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     23c:	90 93 ad 06 	sts	0x06AD, r25	; 0x8006ad <ac2+0x1>
     240:	80 93 ac 06 	sts	0x06AC, r24	; 0x8006ac <ac2>
	ac3 = Read(0xAE);
     244:	8e ea       	ldi	r24, 0xAE	; 174
     246:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     24a:	90 93 bd 06 	sts	0x06BD, r25	; 0x8006bd <ac3+0x1>
     24e:	80 93 bc 06 	sts	0x06BC, r24	; 0x8006bc <ac3>
	ac4 = Read(0xB0);
     252:	80 eb       	ldi	r24, 0xB0	; 176
     254:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     258:	90 93 b1 06 	sts	0x06B1, r25	; 0x8006b1 <ac4+0x1>
     25c:	80 93 b0 06 	sts	0x06B0, r24	; 0x8006b0 <ac4>
	ac5 = Read(0xB2);
     260:	82 eb       	ldi	r24, 0xB2	; 178
     262:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     266:	90 93 ab 06 	sts	0x06AB, r25	; 0x8006ab <ac5+0x1>
     26a:	80 93 aa 06 	sts	0x06AA, r24	; 0x8006aa <ac5>
	ac6 = Read(0xB4);
     26e:	84 eb       	ldi	r24, 0xB4	; 180
     270:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     274:	90 93 a9 06 	sts	0x06A9, r25	; 0x8006a9 <ac6+0x1>
     278:	80 93 a8 06 	sts	0x06A8, r24	; 0x8006a8 <ac6>
	b1  = Read(0xB6);
     27c:	86 eb       	ldi	r24, 0xB6	; 182
     27e:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     282:	90 93 a7 06 	sts	0x06A7, r25	; 0x8006a7 <b1+0x1>
     286:	80 93 a6 06 	sts	0x06A6, r24	; 0x8006a6 <b1>
	b2  = Read(0xB8);
     28a:	88 eb       	ldi	r24, 0xB8	; 184
     28c:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     290:	90 93 a1 06 	sts	0x06A1, r25	; 0x8006a1 <b2+0x1>
     294:	80 93 a0 06 	sts	0x06A0, r24	; 0x8006a0 <b2>
	mb  = Read(0xBA);
     298:	8a eb       	ldi	r24, 0xBA	; 186
     29a:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     29e:	90 93 a3 06 	sts	0x06A3, r25	; 0x8006a3 <mb+0x1>
     2a2:	80 93 a2 06 	sts	0x06A2, r24	; 0x8006a2 <mb>
	mc  = Read(0xBC);
     2a6:	8c eb       	ldi	r24, 0xBC	; 188
     2a8:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     2ac:	90 93 b3 06 	sts	0x06B3, r25	; 0x8006b3 <mc+0x1>
     2b0:	80 93 b2 06 	sts	0x06B2, r24	; 0x8006b2 <mc>
	md  = Read(0xBE);
     2b4:	8e eb       	ldi	r24, 0xBE	; 190
     2b6:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     2ba:	90 93 af 06 	sts	0x06AF, r25	; 0x8006af <md+0x1>
     2be:	80 93 ae 06 	sts	0x06AE, r24	; 0x8006ae <md>
     2c2:	08 95       	ret

000002c4 <BMP180_get_temper>:
	md = 2705;*/
}
// прочитать значение температуры
int32_t BMP180_get_temper(void)
{
	I2C_StartCondition();               // запуск i2c
     2c4:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     2c8:	8e ee       	ldi	r24, 0xEE	; 238
     2ca:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0xF4);	        // передача адреса памяти
     2ce:	84 ef       	ldi	r24, 0xF4	; 244
     2d0:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0x2E);	        // передача разрешения (oss) адреса памяти температуры (можно так же как для давления)
     2d4:	8e e2       	ldi	r24, 0x2E	; 46
     2d6:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     2da:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2de:	8f e1       	ldi	r24, 0x1F	; 31
     2e0:	9e e4       	ldi	r25, 0x4E	; 78
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <BMP180_get_temper+0x1e>
     2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <BMP180_get_temper+0x24>
     2e8:	00 00       	nop

	_delay_ms(5);                   // время на замер (от 5 до 26 мс в зависимости от разрешения (oss))

	return Read(0xF6);     // вычислить температуру
     2ea:	86 ef       	ldi	r24, 0xF6	; 246
     2ec:	0e 94 ed 00 	call	0x1da	; 0x1da <Read>
     2f0:	bc 01       	movw	r22, r24
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	90 e0       	ldi	r25, 0x00	; 0
}
     2f6:	08 95       	ret

000002f8 <BMP180_get_pressure>:
// прочитать значение атмосферного давления
int32_t BMP180_get_pressure()
{
	I2C_StartCondition();               // запуск i2c
     2f8:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     2fc:	8e ee       	ldi	r24, 0xEE	; 238
     2fe:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0xF4);	        // передача адреса памяти
     302:	84 ef       	ldi	r24, 0xF4	; 244
     304:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0x34+(OSS<<6));	// передача разрешения (oss) адреса памяти температуры
     308:	84 ef       	ldi	r24, 0xF4	; 244
     30a:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     30e:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>
     312:	2f ef       	ldi	r18, 0xFF	; 255
     314:	84 e4       	ldi	r24, 0x44	; 68
     316:	91 e0       	ldi	r25, 0x01	; 1
     318:	21 50       	subi	r18, 0x01	; 1
     31a:	80 40       	sbci	r24, 0x00	; 0
     31c:	90 40       	sbci	r25, 0x00	; 0
     31e:	e1 f7       	brne	.-8      	; 0x318 <BMP180_get_pressure+0x20>
     320:	00 c0       	rjmp	.+0      	; 0x322 <BMP180_get_pressure+0x2a>
     322:	00 00       	nop

	_delay_ms(26);                  // время на замер (от 5 до 26 мс в зависимости от разрешения (oss))
	
	I2C_StartCondition();               // запуск i2c
     324:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(BMP180_W);        // передача адреса устройства, режим записи
     328:	8e ee       	ldi	r24, 0xEE	; 238
     32a:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0xF6);	        // передача адреса памяти
     32e:	86 ef       	ldi	r24, 0xF6	; 246
     330:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
     334:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>

	I2C_StartCondition();               // запуск i2c
     338:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(BMP180_R);        // передача адреса устройства, режим чтения
     33c:	8f ee       	ldi	r24, 0xEF	; 239
     33e:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	D1=I2C_ReadByte();             // MSB
     342:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	a0 e0       	ldi	r26, 0x00	; 0
     34a:	b0 e0       	ldi	r27, 0x00	; 0
     34c:	80 93 b8 06 	sts	0x06B8, r24	; 0x8006b8 <D1>
     350:	90 93 b9 06 	sts	0x06B9, r25	; 0x8006b9 <D1+0x1>
     354:	a0 93 ba 06 	sts	0x06BA, r26	; 0x8006ba <D1+0x2>
     358:	b0 93 bb 06 	sts	0x06BB, r27	; 0x8006bb <D1+0x3>
	D2=I2C_ReadByte();             // LSB
     35c:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	a0 e0       	ldi	r26, 0x00	; 0
     364:	b0 e0       	ldi	r27, 0x00	; 0
     366:	80 93 b4 06 	sts	0x06B4, r24	; 0x8006b4 <D2>
     36a:	90 93 b5 06 	sts	0x06B5, r25	; 0x8006b5 <D2+0x1>
     36e:	a0 93 b6 06 	sts	0x06B6, r26	; 0x8006b6 <D2+0x2>
     372:	b0 93 b7 06 	sts	0x06B7, r27	; 0x8006b7 <D2+0x3>
	D3=I2C_ReadLastByte();             // XLSB
     376:	0e 94 c2 19 	call	0x3384	; 0x3384 <I2C_ReadLastByte>
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	a0 e0       	ldi	r26, 0x00	; 0
     37e:	b0 e0       	ldi	r27, 0x00	; 0
     380:	80 93 9c 06 	sts	0x069C, r24	; 0x80069c <D3>
     384:	90 93 9d 06 	sts	0x069D, r25	; 0x80069d <D3+0x1>
     388:	a0 93 9e 06 	sts	0x069E, r26	; 0x80069e <D3+0x2>
     38c:	b0 93 9f 06 	sts	0x069F, r27	; 0x80069f <D3+0x3>
	I2C_StopCondition();                // остановка i2c
     390:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>
	

	return (int32_t)(((D1 << 16) + (D2 << 8) + D3) >> (8-OSS));  // вычислить давление (в Па ?)
     394:	40 91 b8 06 	lds	r20, 0x06B8	; 0x8006b8 <D1>
     398:	50 91 b9 06 	lds	r21, 0x06B9	; 0x8006b9 <D1+0x1>
     39c:	60 91 ba 06 	lds	r22, 0x06BA	; 0x8006ba <D1+0x2>
     3a0:	70 91 bb 06 	lds	r23, 0x06BB	; 0x8006bb <D1+0x3>
     3a4:	ba 01       	movw	r22, r20
     3a6:	55 27       	eor	r21, r21
     3a8:	44 27       	eor	r20, r20
     3aa:	80 91 b4 06 	lds	r24, 0x06B4	; 0x8006b4 <D2>
     3ae:	90 91 b5 06 	lds	r25, 0x06B5	; 0x8006b5 <D2+0x1>
     3b2:	a0 91 b6 06 	lds	r26, 0x06B6	; 0x8006b6 <D2+0x2>
     3b6:	b0 91 b7 06 	lds	r27, 0x06B7	; 0x8006b7 <D2+0x3>
     3ba:	ba 2f       	mov	r27, r26
     3bc:	a9 2f       	mov	r26, r25
     3be:	98 2f       	mov	r25, r24
     3c0:	88 27       	eor	r24, r24
     3c2:	48 0f       	add	r20, r24
     3c4:	59 1f       	adc	r21, r25
     3c6:	6a 1f       	adc	r22, r26
     3c8:	7b 1f       	adc	r23, r27
     3ca:	80 91 9c 06 	lds	r24, 0x069C	; 0x80069c <D3>
     3ce:	90 91 9d 06 	lds	r25, 0x069D	; 0x80069d <D3+0x1>
     3d2:	a0 91 9e 06 	lds	r26, 0x069E	; 0x80069e <D3+0x2>
     3d6:	b0 91 9f 06 	lds	r27, 0x069F	; 0x80069f <D3+0x3>
     3da:	84 0f       	add	r24, r20
     3dc:	95 1f       	adc	r25, r21
     3de:	a6 1f       	adc	r26, r22
     3e0:	b7 1f       	adc	r27, r23
     3e2:	bc 01       	movw	r22, r24
     3e4:	cd 01       	movw	r24, r26
     3e6:	68 94       	set
     3e8:	14 f8       	bld	r1, 4
     3ea:	96 95       	lsr	r25
     3ec:	87 95       	ror	r24
     3ee:	77 95       	ror	r23
     3f0:	67 95       	ror	r22
     3f2:	16 94       	lsr	r1
     3f4:	d1 f7       	brne	.-12     	; 0x3ea <BMP180_get_pressure+0xf2>
}
     3f6:	08 95       	ret

000003f8 <BMP180_calculation>:
// получить значения температуры и атмосферного давления с учетом калибровочных коэффициентов
int32_t BMP180_calculation () 
{
     3f8:	4f 92       	push	r4
     3fa:	5f 92       	push	r5
     3fc:	6f 92       	push	r6
     3fe:	7f 92       	push	r7
     400:	8f 92       	push	r8
     402:	9f 92       	push	r9
     404:	af 92       	push	r10
     406:	bf 92       	push	r11
     408:	cf 92       	push	r12
     40a:	df 92       	push	r13
     40c:	ef 92       	push	r14
     40e:	ff 92       	push	r15
     410:	0f 93       	push	r16
     412:	1f 93       	push	r17
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	00 d0       	rcall	.+0      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     41a:	00 d0       	rcall	.+0      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     41c:	cd b7       	in	r28, 0x3d	; 61
     41e:	de b7       	in	r29, 0x3e	; 62
	int32_t ut=0;
	int32_t up=0;
	int32_t x1, x2, b5, b6, x3, b3, p;
	uint32_t b4, b7;

	ut += BMP180_get_temper();
     420:	0e 94 62 01 	call	0x2c4	; 0x2c4 <BMP180_get_temper>
     424:	6b 01       	movw	r12, r22
     426:	7c 01       	movw	r14, r24

	up = BMP180_get_pressure();
     428:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <BMP180_get_pressure>
     42c:	69 83       	std	Y+1, r22	; 0x01
     42e:	7a 83       	std	Y+2, r23	; 0x02
     430:	8b 83       	std	Y+3, r24	; 0x03
     432:	9c 83       	std	Y+4, r25	; 0x04

	x1 = ((int32_t)ut - (int32_t)ac6) * (int32_t)ac5 >> 15;
     434:	80 91 a8 06 	lds	r24, 0x06A8	; 0x8006a8 <ac6>
     438:	90 91 a9 06 	lds	r25, 0x06A9	; 0x8006a9 <ac6+0x1>
     43c:	a7 01       	movw	r20, r14
     43e:	96 01       	movw	r18, r12
     440:	28 1b       	sub	r18, r24
     442:	39 0b       	sbc	r19, r25
     444:	41 09       	sbc	r20, r1
     446:	51 09       	sbc	r21, r1
     448:	a0 91 aa 06 	lds	r26, 0x06AA	; 0x8006aa <ac5>
     44c:	b0 91 ab 06 	lds	r27, 0x06AB	; 0x8006ab <ac5+0x1>
     450:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
     454:	2b 01       	movw	r4, r22
     456:	3c 01       	movw	r6, r24
     458:	03 2e       	mov	r0, r19
     45a:	3f e0       	ldi	r19, 0x0F	; 15
     45c:	75 94       	asr	r7
     45e:	67 94       	ror	r6
     460:	57 94       	ror	r5
     462:	47 94       	ror	r4
     464:	3a 95       	dec	r19
     466:	d1 f7       	brne	.-12     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
     468:	30 2d       	mov	r19, r0
	x2 = ((int32_t)mc << 11) / (x1 + md);
     46a:	60 91 b2 06 	lds	r22, 0x06B2	; 0x8006b2 <mc>
     46e:	70 91 b3 06 	lds	r23, 0x06B3	; 0x8006b3 <mc+0x1>
     472:	cb 01       	movw	r24, r22
     474:	77 0f       	add	r23, r23
     476:	aa 0b       	sbc	r26, r26
     478:	bb 0b       	sbc	r27, r27
     47a:	bc 01       	movw	r22, r24
     47c:	cd 01       	movw	r24, r26
     47e:	05 2e       	mov	r0, r21
     480:	5b e0       	ldi	r21, 0x0B	; 11
     482:	66 0f       	add	r22, r22
     484:	77 1f       	adc	r23, r23
     486:	88 1f       	adc	r24, r24
     488:	99 1f       	adc	r25, r25
     48a:	5a 95       	dec	r21
     48c:	d1 f7       	brne	.-12     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     48e:	50 2d       	mov	r21, r0
     490:	20 91 ae 06 	lds	r18, 0x06AE	; 0x8006ae <md>
     494:	30 91 af 06 	lds	r19, 0x06AF	; 0x8006af <md+0x1>
     498:	89 01       	movw	r16, r18
     49a:	33 0f       	add	r19, r19
     49c:	22 0b       	sbc	r18, r18
     49e:	33 0b       	sbc	r19, r19
     4a0:	a9 01       	movw	r20, r18
     4a2:	98 01       	movw	r18, r16
     4a4:	24 0d       	add	r18, r4
     4a6:	35 1d       	adc	r19, r5
     4a8:	46 1d       	adc	r20, r6
     4aa:	57 1d       	adc	r21, r7
     4ac:	0e 94 e1 2a 	call	0x55c2	; 0x55c2 <__divmodsi4>
	b5 = x1 + x2;
     4b0:	42 0e       	add	r4, r18
     4b2:	53 1e       	adc	r5, r19
     4b4:	64 1e       	adc	r6, r20
     4b6:	75 1e       	adc	r7, r21
	//*temperature = (b5 + 8) >> 4;
	
	b6 = b5 - 4000;
     4b8:	80 ea       	ldi	r24, 0xA0	; 160
     4ba:	48 1a       	sub	r4, r24
     4bc:	8f e0       	ldi	r24, 0x0F	; 15
     4be:	58 0a       	sbc	r5, r24
     4c0:	61 08       	sbc	r6, r1
     4c2:	71 08       	sbc	r7, r1
	x1 = (b2 * ((b6 * b6) >> 12)) >> 11;
     4c4:	a3 01       	movw	r20, r6
     4c6:	92 01       	movw	r18, r4
     4c8:	c3 01       	movw	r24, r6
     4ca:	b2 01       	movw	r22, r4
     4cc:	0e 94 af 2a 	call	0x555e	; 0x555e <__mulsi3>
     4d0:	4b 01       	movw	r8, r22
     4d2:	5c 01       	movw	r10, r24
     4d4:	07 2e       	mov	r0, r23
     4d6:	7c e0       	ldi	r23, 0x0C	; 12
     4d8:	b5 94       	asr	r11
     4da:	a7 94       	ror	r10
     4dc:	97 94       	ror	r9
     4de:	87 94       	ror	r8
     4e0:	7a 95       	dec	r23
     4e2:	d1 f7       	brne	.-12     	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
     4e4:	70 2d       	mov	r23, r0
     4e6:	a0 91 a0 06 	lds	r26, 0x06A0	; 0x8006a0 <b2>
     4ea:	b0 91 a1 06 	lds	r27, 0x06A1	; 0x8006a1 <b2+0x1>
     4ee:	a5 01       	movw	r20, r10
     4f0:	94 01       	movw	r18, r8
     4f2:	0e 94 11 2b 	call	0x5622	; 0x5622 <__mulshisi3>
     4f6:	6b 01       	movw	r12, r22
     4f8:	7c 01       	movw	r14, r24
     4fa:	0b 2e       	mov	r0, r27
     4fc:	bb e0       	ldi	r27, 0x0B	; 11
     4fe:	f5 94       	asr	r15
     500:	e7 94       	ror	r14
     502:	d7 94       	ror	r13
     504:	c7 94       	ror	r12
     506:	ba 95       	dec	r27
     508:	d1 f7       	brne	.-12     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     50a:	b0 2d       	mov	r27, r0
	x2 = (ac2 * b6) >> 11;
     50c:	a0 91 ac 06 	lds	r26, 0x06AC	; 0x8006ac <ac2>
     510:	b0 91 ad 06 	lds	r27, 0x06AD	; 0x8006ad <ac2+0x1>
     514:	a3 01       	movw	r20, r6
     516:	92 01       	movw	r18, r4
     518:	0e 94 11 2b 	call	0x5622	; 0x5622 <__mulshisi3>
     51c:	dc 01       	movw	r26, r24
     51e:	cb 01       	movw	r24, r22
     520:	07 2e       	mov	r0, r23
     522:	7b e0       	ldi	r23, 0x0B	; 11
     524:	b5 95       	asr	r27
     526:	a7 95       	ror	r26
     528:	97 95       	ror	r25
     52a:	87 95       	ror	r24
     52c:	7a 95       	dec	r23
     52e:	d1 f7       	brne	.-12     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
     530:	70 2d       	mov	r23, r0
	x3 = x1 + x2;
     532:	c8 0e       	add	r12, r24
     534:	d9 1e       	adc	r13, r25
     536:	ea 1e       	adc	r14, r26
     538:	fb 1e       	adc	r15, r27
	b3 = (((((int32_t) ac1) * 4 + x3)<<OSS) + 2)>> 2;
     53a:	80 91 a4 06 	lds	r24, 0x06A4	; 0x8006a4 <ac1>
     53e:	90 91 a5 06 	lds	r25, 0x06A5	; 0x8006a5 <ac1+0x1>
     542:	09 2e       	mov	r0, r25
     544:	00 0c       	add	r0, r0
     546:	aa 0b       	sbc	r26, r26
     548:	bb 0b       	sbc	r27, r27
     54a:	88 0f       	add	r24, r24
     54c:	99 1f       	adc	r25, r25
     54e:	aa 1f       	adc	r26, r26
     550:	bb 1f       	adc	r27, r27
     552:	88 0f       	add	r24, r24
     554:	99 1f       	adc	r25, r25
     556:	aa 1f       	adc	r26, r26
     558:	bb 1f       	adc	r27, r27
     55a:	c8 0e       	add	r12, r24
     55c:	d9 1e       	adc	r13, r25
     55e:	ea 1e       	adc	r14, r26
     560:	fb 1e       	adc	r15, r27
     562:	cc 0c       	add	r12, r12
     564:	dd 1c       	adc	r13, r13
     566:	ee 1c       	adc	r14, r14
     568:	ff 1c       	adc	r15, r15
	x1 = (ac3 * b6) >> 13;
     56a:	a0 91 bc 06 	lds	r26, 0x06BC	; 0x8006bc <ac3>
     56e:	b0 91 bd 06 	lds	r27, 0x06BD	; 0x8006bd <ac3+0x1>
     572:	0e 94 11 2b 	call	0x5622	; 0x5622 <__mulshisi3>
     576:	2b 01       	movw	r4, r22
     578:	3c 01       	movw	r6, r24
     57a:	03 2e       	mov	r0, r19
     57c:	3d e0       	ldi	r19, 0x0D	; 13
     57e:	75 94       	asr	r7
     580:	67 94       	ror	r6
     582:	57 94       	ror	r5
     584:	47 94       	ror	r4
     586:	3a 95       	dec	r19
     588:	d1 f7       	brne	.-12     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
     58a:	30 2d       	mov	r19, r0
	x2 = (b1 * ((b6 * b6) >> 12)) >> 16;
     58c:	a0 91 a6 06 	lds	r26, 0x06A6	; 0x8006a6 <b1>
     590:	b0 91 a7 06 	lds	r27, 0x06A7	; 0x8006a7 <b1+0x1>
     594:	a5 01       	movw	r20, r10
     596:	94 01       	movw	r18, r8
     598:	0e 94 11 2b 	call	0x5622	; 0x5622 <__mulshisi3>
     59c:	bb 27       	eor	r27, r27
     59e:	97 fd       	sbrc	r25, 7
     5a0:	b0 95       	com	r27
     5a2:	ab 2f       	mov	r26, r27
	x3 = ((x1 + x2) + 2) >> 2;
     5a4:	84 0d       	add	r24, r4
     5a6:	95 1d       	adc	r25, r5
     5a8:	a6 1d       	adc	r26, r6
     5aa:	b7 1d       	adc	r27, r7
     5ac:	02 96       	adiw	r24, 0x02	; 2
     5ae:	a1 1d       	adc	r26, r1
     5b0:	b1 1d       	adc	r27, r1
     5b2:	b5 95       	asr	r27
     5b4:	a7 95       	ror	r26
     5b6:	97 95       	ror	r25
     5b8:	87 95       	ror	r24
     5ba:	b5 95       	asr	r27
     5bc:	a7 95       	ror	r26
     5be:	97 95       	ror	r25
     5c0:	87 95       	ror	r24
	b4 = (ac4 * (uint32_t) (x3 + 32768)) >> 15;
     5c2:	9c 01       	movw	r18, r24
     5c4:	ad 01       	movw	r20, r26
     5c6:	30 58       	subi	r19, 0x80	; 128
     5c8:	4f 4f       	sbci	r20, 0xFF	; 255
     5ca:	5f 4f       	sbci	r21, 0xFF	; 255
     5cc:	a0 91 b0 06 	lds	r26, 0x06B0	; 0x8006b0 <ac4>
     5d0:	b0 91 b1 06 	lds	r27, 0x06B1	; 0x8006b1 <ac4+0x1>
     5d4:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
     5d8:	2b 01       	movw	r4, r22
     5da:	3c 01       	movw	r6, r24
     5dc:	03 2e       	mov	r0, r19
     5de:	3f e0       	ldi	r19, 0x0F	; 15
     5e0:	76 94       	lsr	r7
     5e2:	67 94       	ror	r6
     5e4:	57 94       	ror	r5
     5e6:	47 94       	ror	r4
     5e8:	3a 95       	dec	r19
     5ea:	d1 f7       	brne	.-12     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     5ec:	30 2d       	mov	r19, r0
	b7 = ((uint32_t) (up - b3) * (50000 >> OSS));
     5ee:	29 81       	ldd	r18, Y+1	; 0x01
     5f0:	3a 81       	ldd	r19, Y+2	; 0x02
     5f2:	4b 81       	ldd	r20, Y+3	; 0x03
     5f4:	5c 81       	ldd	r21, Y+4	; 0x04
     5f6:	2c 19       	sub	r18, r12
     5f8:	3d 09       	sbc	r19, r13
     5fa:	4e 09       	sbc	r20, r14
     5fc:	5f 09       	sbc	r21, r15
     5fe:	aa e6       	ldi	r26, 0x6A	; 106
     600:	b8 e1       	ldi	r27, 0x18	; 24
     602:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
	//p = b7 < 0x80000000 ? (b7 * 2) / b4 : (b7 / b4) * 2;
	
	if (b7 < 0x80000000)
     606:	99 23       	and	r25, r25
     608:	5c f0       	brlt	.+22     	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
	{
		p = (b7 << 1) / b4;
     60a:	66 0f       	add	r22, r22
     60c:	77 1f       	adc	r23, r23
     60e:	88 1f       	adc	r24, r24
     610:	99 1f       	adc	r25, r25
     612:	a3 01       	movw	r20, r6
     614:	92 01       	movw	r18, r4
     616:	0e 94 bf 2a 	call	0x557e	; 0x557e <__udivmodsi4>
     61a:	29 01       	movw	r4, r18
     61c:	3a 01       	movw	r6, r20
     61e:	0a c0       	rjmp	.+20     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
	}
	else
	{
		p = (b7 / b4) << 1;
     620:	a3 01       	movw	r20, r6
     622:	92 01       	movw	r18, r4
     624:	0e 94 bf 2a 	call	0x557e	; 0x557e <__udivmodsi4>
     628:	29 01       	movw	r4, r18
     62a:	3a 01       	movw	r6, r20
     62c:	44 0c       	add	r4, r4
     62e:	55 1c       	adc	r5, r5
     630:	66 1c       	adc	r6, r6
     632:	77 1c       	adc	r7, r7
	}

	x1 = (p / (pow(2,8))) * (p / (pow(2,8)));
     634:	c3 01       	movw	r24, r6
     636:	b2 01       	movw	r22, r4
     638:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
     63c:	6b 01       	movw	r12, r22
     63e:	7c 01       	movw	r14, r24
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	40 e8       	ldi	r20, 0x80	; 128
     646:	5b e3       	ldi	r21, 0x3B	; 59
     648:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
     64c:	9b 01       	movw	r18, r22
     64e:	ac 01       	movw	r20, r24
     650:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
     654:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <__fixsfsi>
     658:	9b 01       	movw	r18, r22
     65a:	ac 01       	movw	r20, r24
	x1 = (x1 * 3038) / (pow(2,16));
     65c:	ae ed       	ldi	r26, 0xDE	; 222
     65e:	bb e0       	ldi	r27, 0x0B	; 11
     660:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
     664:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	40 e8       	ldi	r20, 0x80	; 128
     66e:	57 e3       	ldi	r21, 0x37	; 55
     670:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
     674:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <__fixsfsi>
     678:	4b 01       	movw	r8, r22
     67a:	5c 01       	movw	r10, r24
	x2 = (-7357 * p) / (pow(2,16));
     67c:	a3 e4       	ldi	r26, 0x43	; 67
     67e:	b3 ee       	ldi	r27, 0xE3	; 227
     680:	a3 01       	movw	r20, r6
     682:	92 01       	movw	r18, r4
     684:	0e 94 14 2b 	call	0x5628	; 0x5628 <__mulohisi3>
     688:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	40 e8       	ldi	r20, 0x80	; 128
     692:	57 e3       	ldi	r21, 0x37	; 55
     694:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
     698:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <__fixsfsi>
	pressure = p + ((x1 + x2 + 3791) / (pow(2,4)));
     69c:	dc 01       	movw	r26, r24
     69e:	cb 01       	movw	r24, r22
     6a0:	88 0d       	add	r24, r8
     6a2:	99 1d       	adc	r25, r9
     6a4:	aa 1d       	adc	r26, r10
     6a6:	bb 1d       	adc	r27, r11
     6a8:	bc 01       	movw	r22, r24
     6aa:	cd 01       	movw	r24, r26
     6ac:	61 53       	subi	r22, 0x31	; 49
     6ae:	71 4f       	sbci	r23, 0xF1	; 241
     6b0:	8f 4f       	sbci	r24, 0xFF	; 255
     6b2:	9f 4f       	sbci	r25, 0xFF	; 255
     6b4:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	40 e8       	ldi	r20, 0x80	; 128
     6be:	5d e3       	ldi	r21, 0x3D	; 61
     6c0:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
     6c4:	9b 01       	movw	r18, r22
     6c6:	ac 01       	movw	r20, r24
     6c8:	c7 01       	movw	r24, r14
     6ca:	b6 01       	movw	r22, r12
     6cc:	0e 94 f5 24 	call	0x49ea	; 0x49ea <__addsf3>
     6d0:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <__fixsfsi>
     6d4:	60 93 d4 01 	sts	0x01D4, r22	; 0x8001d4 <__data_end>
     6d8:	70 93 d5 01 	sts	0x01D5, r23	; 0x8001d5 <__data_end+0x1>
     6dc:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <__data_end+0x2>
     6e0:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <__data_end+0x3>
	return pressure;
}
     6e4:	0f 90       	pop	r0
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	df 91       	pop	r29
     6ee:	cf 91       	pop	r28
     6f0:	1f 91       	pop	r17
     6f2:	0f 91       	pop	r16
     6f4:	ff 90       	pop	r15
     6f6:	ef 90       	pop	r14
     6f8:	df 90       	pop	r13
     6fa:	cf 90       	pop	r12
     6fc:	bf 90       	pop	r11
     6fe:	af 90       	pop	r10
     700:	9f 90       	pop	r9
     702:	8f 90       	pop	r8
     704:	7f 90       	pop	r7
     706:	6f 90       	pop	r6
     708:	5f 90       	pop	r5
     70a:	4f 90       	pop	r4
     70c:	08 95       	ret

0000070e <dht22_init>:
     70e:	2f ef       	ldi	r18, 0xFF	; 255
     710:	87 ea       	ldi	r24, 0xA7	; 167
     712:	91 e6       	ldi	r25, 0x61	; 97
     714:	21 50       	subi	r18, 0x01	; 1
     716:	80 40       	sbci	r24, 0x00	; 0
     718:	90 40       	sbci	r25, 0x00	; 0
     71a:	e1 f7       	brne	.-8      	; 0x714 <dht22_init+0x6>
     71c:	00 c0       	rjmp	.+0      	; 0x71e <dht22_init+0x10>
     71e:	00 00       	nop
#include "DHT22.h"

uint8_t dht22_init (void)
{
	_delay_ms(2000);
	DDRC |= (1<<DHT22_PORT);   // set as output
     720:	87 b1       	in	r24, 0x07	; 7
     722:	81 60       	ori	r24, 0x01	; 1
     724:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1<<DHT22_PORT);// pull the pin high
     726:	88 b1       	in	r24, 0x08	; 8
     728:	81 60       	ori	r24, 0x01	; 1
     72a:	88 b9       	out	0x08, r24	; 8

	return 0;
}
     72c:	80 e0       	ldi	r24, 0x00	; 0
     72e:	08 95       	ret

00000730 <dht22_GetData>:
uint8_t dht22_GetData (uint8_t *data)
{
     730:	bc 01       	movw	r22, r24
	uint8_t i, j = 0;
	DDRC |= (1<<DHT22_PORT);   // set as output
     732:	87 b1       	in	r24, 0x07	; 7
     734:	81 60       	ori	r24, 0x01	; 1
     736:	87 b9       	out	0x07, r24	; 7
	//reset ports
	PORTC &= ~(1<<DHT22_PORT);// pull the pin low
     738:	88 b1       	in	r24, 0x08	; 8
     73a:	8e 7f       	andi	r24, 0xFE	; 254
     73c:	88 b9       	out	0x08, r24	; 8
	PORTC |= (1<<DHT22_PORT);// pull the pin high
     73e:	88 b1       	in	r24, 0x08	; 8
     740:	81 60       	ori	r24, 0x01	; 1
     742:	88 b9       	out	0x08, r24	; 8
     744:	2f ef       	ldi	r18, 0xFF	; 255
     746:	81 ee       	ldi	r24, 0xE1	; 225
     748:	94 e0       	ldi	r25, 0x04	; 4
     74a:	21 50       	subi	r18, 0x01	; 1
     74c:	80 40       	sbci	r24, 0x00	; 0
     74e:	90 40       	sbci	r25, 0x00	; 0
     750:	e1 f7       	brne	.-8      	; 0x74a <dht22_GetData+0x1a>
     752:	00 c0       	rjmp	.+0      	; 0x754 <dht22_GetData+0x24>
     754:	00 00       	nop
	_delay_ms(100);
	//start
	PORTC &= ~(1<<DHT22_PORT);// pull the pin low
     756:	88 b1       	in	r24, 0x08	; 8
     758:	8e 7f       	andi	r24, 0xFE	; 254
     75a:	88 b9       	out	0x08, r24	; 8
     75c:	2f ef       	ldi	r18, 0xFF	; 255
     75e:	80 ee       	ldi	r24, 0xE0	; 224
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	21 50       	subi	r18, 0x01	; 1
     764:	80 40       	sbci	r24, 0x00	; 0
     766:	90 40       	sbci	r25, 0x00	; 0
     768:	e1 f7       	brne	.-8      	; 0x762 <dht22_GetData+0x32>
     76a:	00 c0       	rjmp	.+0      	; 0x76c <dht22_GetData+0x3c>
     76c:	00 00       	nop
	_delay_ms(18);
	PORTC |= (1<<DHT22_PORT);// pull the pin high
     76e:	88 b1       	in	r24, 0x08	; 8
     770:	81 60       	ori	r24, 0x01	; 1
     772:	88 b9       	out	0x08, r24	; 8
	//ждем ответа датчика
	DDRC &= ~(1<<DHT22_PORT);   // set as input
     774:	87 b1       	in	r24, 0x07	; 7
     776:	8e 7f       	andi	r24, 0xFE	; 254
     778:	87 b9       	out	0x07, r24	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     77a:	8f ee       	ldi	r24, 0xEF	; 239
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	01 97       	sbiw	r24, 0x01	; 1
     780:	f1 f7       	brne	.-4      	; 0x77e <dht22_GetData+0x4e>
     782:	00 c0       	rjmp	.+0      	; 0x784 <dht22_GetData+0x54>
     784:	00 00       	nop
	_delay_us(60);//экспериментом выявлено 60 а не 40 сек
	//если датчик не ответил притягиванием шины, то ошибка
	if (PINC & (1 << DHT22_PORT))
     786:	30 99       	sbic	0x06, 0	; 6
     788:	3c c0       	rjmp	.+120    	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     78a:	8f e3       	ldi	r24, 0x3F	; 63
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	01 97       	sbiw	r24, 0x01	; 1
     790:	f1 f7       	brne	.-4      	; 0x78e <dht22_GetData+0x5e>
     792:	00 c0       	rjmp	.+0      	; 0x794 <dht22_GetData+0x64>
     794:	00 00       	nop
	{
		return 0;
	}
	_delay_us(80);
	//если датчик не отпустил шину, то ошибка
	if (!(PINC & (1 << DHT22_PORT)))
     796:	96 b1       	in	r25, 0x06	; 6
     798:	89 2f       	mov	r24, r25
     79a:	81 70       	andi	r24, 0x01	; 1
     79c:	90 ff       	sbrs	r25, 0
     79e:	32 c0       	rjmp	.+100    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7a0:	8f e3       	ldi	r24, 0x3F	; 63
     7a2:	91 e0       	ldi	r25, 0x01	; 1
     7a4:	01 97       	sbiw	r24, 0x01	; 1
     7a6:	f1 f7       	brne	.-4      	; 0x7a4 <dht22_GetData+0x74>
     7a8:	00 c0       	rjmp	.+0      	; 0x7aa <dht22_GetData+0x7a>
     7aa:	00 00       	nop
	}
	_delay_us(80);
	//читаем данные (записываем байты в массив наоборот,
	//т.к. сначала передается старший, чтобы потом
	//не переворачивать двухбайтовый результат
	for (j=0; j<5; j++)
     7ac:	80 e0       	ldi	r24, 0x00	; 0
     7ae:	25 c0       	rjmp	.+74     	; 0x7fa <dht22_GetData+0xca>
	{
		data[4-j] = 0;
     7b0:	e4 e0       	ldi	r30, 0x04	; 4
     7b2:	f0 e0       	ldi	r31, 0x00	; 0
     7b4:	e8 1b       	sub	r30, r24
     7b6:	f1 09       	sbc	r31, r1
     7b8:	e6 0f       	add	r30, r22
     7ba:	f7 1f       	adc	r31, r23
     7bc:	10 82       	st	Z, r1
		for (i = 0; i<8; i++)
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	19 c0       	rjmp	.+50     	; 0x7f4 <dht22_GetData+0xc4>
		{
			while(!(PINC & (1 << DHT22_PORT)));//ждем отпускания шины
     7c2:	30 9b       	sbis	0x06, 0	; 6
     7c4:	fe cf       	rjmp	.-4      	; 0x7c2 <dht22_GetData+0x92>
     7c6:	2a eb       	ldi	r18, 0xBA	; 186
     7c8:	2a 95       	dec	r18
     7ca:	f1 f7       	brne	.-4      	; 0x7c8 <dht22_GetData+0x98>
     7cc:	00 c0       	rjmp	.+0      	; 0x7ce <dht22_GetData+0x9e>
			_delay_us(35);
			if (PINC & (1 << DHT22_PORT))//читаем результат по прошествии 30 микросекунд
     7ce:	30 9b       	sbis	0x06, 0	; 6
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <dht22_GetData+0xbe>
			//если шина за это время не притянулась к земле, то значит это единица, иначе ноль
			data[4-j] |= (1<<(7-i));
     7d2:	47 e0       	ldi	r20, 0x07	; 7
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	49 1b       	sub	r20, r25
     7d8:	51 09       	sbc	r21, r1
     7da:	21 e0       	ldi	r18, 0x01	; 1
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	02 c0       	rjmp	.+4      	; 0x7e4 <dht22_GetData+0xb4>
     7e0:	22 0f       	add	r18, r18
     7e2:	33 1f       	adc	r19, r19
     7e4:	4a 95       	dec	r20
     7e6:	e2 f7       	brpl	.-8      	; 0x7e0 <dht22_GetData+0xb0>
     7e8:	30 81       	ld	r19, Z
     7ea:	23 2b       	or	r18, r19
     7ec:	20 83       	st	Z, r18
			while(PINC & (1 << DHT22_PORT));//ждем пока датчик притянет шину(в случае единицы)
     7ee:	30 99       	sbic	0x06, 0	; 6
     7f0:	fe cf       	rjmp	.-4      	; 0x7ee <dht22_GetData+0xbe>
	//т.к. сначала передается старший, чтобы потом
	//не переворачивать двухбайтовый результат
	for (j=0; j<5; j++)
	{
		data[4-j] = 0;
		for (i = 0; i<8; i++)
     7f2:	9f 5f       	subi	r25, 0xFF	; 255
     7f4:	98 30       	cpi	r25, 0x08	; 8
     7f6:	28 f3       	brcs	.-54     	; 0x7c2 <dht22_GetData+0x92>
	}
	_delay_us(80);
	//читаем данные (записываем байты в массив наоборот,
	//т.к. сначала передается старший, чтобы потом
	//не переворачивать двухбайтовый результат
	for (j=0; j<5; j++)
     7f8:	8f 5f       	subi	r24, 0xFF	; 255
     7fa:	85 30       	cpi	r24, 0x05	; 5
     7fc:	c8 f2       	brcs	.-78     	; 0x7b0 <dht22_GetData+0x80>
			//если шина за это время не притянулась к земле, то значит это единица, иначе ноль
			data[4-j] |= (1<<(7-i));
			while(PINC & (1 << DHT22_PORT));//ждем пока датчик притянет шину(в случае единицы)
		}
	}
	return 1;
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	08 95       	ret
	DDRC &= ~(1<<DHT22_PORT);   // set as input
	_delay_us(60);//экспериментом выявлено 60 а не 40 сек
	//если датчик не ответил притягиванием шины, то ошибка
	if (PINC & (1 << DHT22_PORT))
	{
		return 0;
     802:	80 e0       	ldi	r24, 0x00	; 0
			data[4-j] |= (1<<(7-i));
			while(PINC & (1 << DHT22_PORT));//ждем пока датчик притянет шину(в случае единицы)
		}
	}
	return 1;
     804:	08 95       	ret

00000806 <LCD_12864_Draw_pixel>:
			LCD_12864_send_data(0x00);
			LCD_12864_send_data(0x00);
		}
	}
	LCD_12864_Clean_Frame_buffer();
}
     806:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     80a:	69 17       	cp	r22, r25
     80c:	e0 f4       	brcc	.+56     	; 0x846 <LCD_12864_Draw_pixel+0x40>
     80e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     812:	89 17       	cp	r24, r25
     814:	c0 f4       	brcc	.+48     	; 0x846 <LCD_12864_Draw_pixel+0x40>
     816:	96 2f       	mov	r25, r22
     818:	96 95       	lsr	r25
     81a:	96 95       	lsr	r25
     81c:	96 95       	lsr	r25
     81e:	e8 2f       	mov	r30, r24
     820:	f0 e0       	ldi	r31, 0x00	; 0
     822:	80 e8       	ldi	r24, 0x80	; 128
     824:	98 9f       	mul	r25, r24
     826:	e0 0d       	add	r30, r0
     828:	f1 1d       	adc	r31, r1
     82a:	11 24       	eor	r1, r1
     82c:	67 70       	andi	r22, 0x07	; 7
     82e:	81 e0       	ldi	r24, 0x01	; 1
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	02 c0       	rjmp	.+4      	; 0x838 <LCD_12864_Draw_pixel+0x32>
     834:	88 0f       	add	r24, r24
     836:	99 1f       	adc	r25, r25
     838:	6a 95       	dec	r22
     83a:	e2 f7       	brpl	.-8      	; 0x834 <LCD_12864_Draw_pixel+0x2e>
     83c:	ef 56       	subi	r30, 0x6F	; 111
     83e:	fd 4f       	sbci	r31, 0xFD	; 253
     840:	90 81       	ld	r25, Z
     842:	89 2b       	or	r24, r25
     844:	80 83       	st	Z, r24
     846:	08 95       	ret

00000848 <LCD_12864_Clean_pixel>:
     848:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     84c:	69 17       	cp	r22, r25
     84e:	e0 f4       	brcc	.+56     	; 0x888 <LCD_12864_Clean_pixel+0x40>
     850:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ST7920_width>
     854:	89 17       	cp	r24, r25
     856:	c0 f4       	brcc	.+48     	; 0x888 <LCD_12864_Clean_pixel+0x40>
     858:	96 2f       	mov	r25, r22
     85a:	96 95       	lsr	r25
     85c:	96 95       	lsr	r25
     85e:	96 95       	lsr	r25
     860:	e8 2f       	mov	r30, r24
     862:	f0 e0       	ldi	r31, 0x00	; 0
     864:	80 e8       	ldi	r24, 0x80	; 128
     866:	98 9f       	mul	r25, r24
     868:	e0 0d       	add	r30, r0
     86a:	f1 1d       	adc	r31, r1
     86c:	11 24       	eor	r1, r1
     86e:	67 70       	andi	r22, 0x07	; 7
     870:	8e ef       	ldi	r24, 0xFE	; 254
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	02 c0       	rjmp	.+4      	; 0x87a <LCD_12864_Clean_pixel+0x32>
     876:	88 0f       	add	r24, r24
     878:	99 1f       	adc	r25, r25
     87a:	6a 95       	dec	r22
     87c:	e2 f7       	brpl	.-8      	; 0x876 <LCD_12864_Clean_pixel+0x2e>
     87e:	ef 56       	subi	r30, 0x6F	; 111
     880:	fd 4f       	sbci	r31, 0xFD	; 253
     882:	90 81       	ld	r25, Z
     884:	89 23       	and	r24, r25
     886:	80 83       	st	Z, r24
     888:	08 95       	ret

0000088a <strob>:
     88a:	85 e0       	ldi	r24, 0x05	; 5
     88c:	8a 95       	dec	r24
     88e:	f1 f7       	brne	.-4      	; 0x88c <strob+0x2>
     890:	00 00       	nop
     892:	8b b1       	in	r24, 0x0b	; 11
     894:	80 62       	ori	r24, 0x20	; 32
     896:	8b b9       	out	0x0b, r24	; 11
     898:	85 e0       	ldi	r24, 0x05	; 5
     89a:	8a 95       	dec	r24
     89c:	f1 f7       	brne	.-4      	; 0x89a <strob+0x10>
     89e:	00 00       	nop
     8a0:	8b b1       	in	r24, 0x0b	; 11
     8a2:	8f 7d       	andi	r24, 0xDF	; 223
     8a4:	8b b9       	out	0x0b, r24	; 11
     8a6:	85 e0       	ldi	r24, 0x05	; 5
     8a8:	8a 95       	dec	r24
     8aa:	f1 f7       	brne	.-4      	; 0x8a8 <strob+0x1e>
     8ac:	00 00       	nop
     8ae:	08 95       	ret

000008b0 <LCD_12864_send_data>:
     8b0:	1f 93       	push	r17
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	18 2f       	mov	r17, r24
     8b8:	8b b1       	in	r24, 0x0b	; 11
     8ba:	80 68       	ori	r24, 0x80	; 128
     8bc:	8b b9       	out	0x0b, r24	; 11
     8be:	8b b1       	in	r24, 0x0b	; 11
     8c0:	80 64       	ori	r24, 0x40	; 64
     8c2:	8b b9       	out	0x0b, r24	; 11
     8c4:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8c8:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8cc:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8d0:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8d4:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8d8:	8b b1       	in	r24, 0x0b	; 11
     8da:	8f 7b       	andi	r24, 0xBF	; 191
     8dc:	8b b9       	out	0x0b, r24	; 11
     8de:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8e2:	8b b1       	in	r24, 0x0b	; 11
     8e4:	80 64       	ori	r24, 0x40	; 64
     8e6:	8b b9       	out	0x0b, r24	; 11
     8e8:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8ec:	8b b1       	in	r24, 0x0b	; 11
     8ee:	8f 7b       	andi	r24, 0xBF	; 191
     8f0:	8b b9       	out	0x0b, r24	; 11
     8f2:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     8f6:	c0 e0       	ldi	r28, 0x00	; 0
     8f8:	d0 e0       	ldi	r29, 0x00	; 0
     8fa:	1c c0       	rjmp	.+56     	; 0x934 <__stack+0x35>
     8fc:	ce 01       	movw	r24, r28
     8fe:	04 97       	sbiw	r24, 0x04	; 4
     900:	04 97       	sbiw	r24, 0x04	; 4
     902:	30 f4       	brcc	.+12     	; 0x910 <__stack+0x11>
     904:	8b b1       	in	r24, 0x0b	; 11
     906:	8f 7b       	andi	r24, 0xBF	; 191
     908:	8b b9       	out	0x0b, r24	; 11
     90a:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     90e:	11 c0       	rjmp	.+34     	; 0x932 <__stack+0x33>
     910:	81 2f       	mov	r24, r17
     912:	80 78       	andi	r24, 0x80	; 128
     914:	41 f0       	breq	.+16     	; 0x926 <__stack+0x27>
     916:	80 38       	cpi	r24, 0x80	; 128
     918:	59 f4       	brne	.+22     	; 0x930 <__stack+0x31>
     91a:	8b b1       	in	r24, 0x0b	; 11
     91c:	80 64       	ori	r24, 0x40	; 64
     91e:	8b b9       	out	0x0b, r24	; 11
     920:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     924:	05 c0       	rjmp	.+10     	; 0x930 <__stack+0x31>
     926:	8b b1       	in	r24, 0x0b	; 11
     928:	8f 7b       	andi	r24, 0xBF	; 191
     92a:	8b b9       	out	0x0b, r24	; 11
     92c:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     930:	11 0f       	add	r17, r17
     932:	21 96       	adiw	r28, 0x01	; 1
     934:	cc 30       	cpi	r28, 0x0C	; 12
     936:	d1 05       	cpc	r29, r1
     938:	0c f3       	brlt	.-62     	; 0x8fc <LCD_12864_send_data+0x4c>
     93a:	8b b1       	in	r24, 0x0b	; 11
     93c:	8f 7b       	andi	r24, 0xBF	; 191
     93e:	8b b9       	out	0x0b, r24	; 11
     940:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     944:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     948:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     94c:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     950:	8b b1       	in	r24, 0x0b	; 11
     952:	8f 77       	andi	r24, 0x7F	; 127
     954:	8b b9       	out	0x0b, r24	; 11
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	1f 91       	pop	r17
     95c:	08 95       	ret

0000095e <LCD_12864_send_command>:
     95e:	1f 93       	push	r17
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	18 2f       	mov	r17, r24
     966:	8b b1       	in	r24, 0x0b	; 11
     968:	80 68       	ori	r24, 0x80	; 128
     96a:	8b b9       	out	0x0b, r24	; 11
     96c:	8b b1       	in	r24, 0x0b	; 11
     96e:	80 64       	ori	r24, 0x40	; 64
     970:	8b b9       	out	0x0b, r24	; 11
     972:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     976:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     97a:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     97e:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     982:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     986:	8b b1       	in	r24, 0x0b	; 11
     988:	8f 7b       	andi	r24, 0xBF	; 191
     98a:	8b b9       	out	0x0b, r24	; 11
     98c:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     990:	8b b1       	in	r24, 0x0b	; 11
     992:	8f 7b       	andi	r24, 0xBF	; 191
     994:	8b b9       	out	0x0b, r24	; 11
     996:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     99a:	8b b1       	in	r24, 0x0b	; 11
     99c:	8f 7b       	andi	r24, 0xBF	; 191
     99e:	8b b9       	out	0x0b, r24	; 11
     9a0:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9a4:	c0 e0       	ldi	r28, 0x00	; 0
     9a6:	d0 e0       	ldi	r29, 0x00	; 0
     9a8:	1c c0       	rjmp	.+56     	; 0x9e2 <LCD_12864_send_command+0x84>
     9aa:	ce 01       	movw	r24, r28
     9ac:	04 97       	sbiw	r24, 0x04	; 4
     9ae:	04 97       	sbiw	r24, 0x04	; 4
     9b0:	30 f4       	brcc	.+12     	; 0x9be <LCD_12864_send_command+0x60>
     9b2:	8b b1       	in	r24, 0x0b	; 11
     9b4:	8f 7b       	andi	r24, 0xBF	; 191
     9b6:	8b b9       	out	0x0b, r24	; 11
     9b8:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9bc:	11 c0       	rjmp	.+34     	; 0x9e0 <LCD_12864_send_command+0x82>
     9be:	81 2f       	mov	r24, r17
     9c0:	80 78       	andi	r24, 0x80	; 128
     9c2:	41 f0       	breq	.+16     	; 0x9d4 <LCD_12864_send_command+0x76>
     9c4:	80 38       	cpi	r24, 0x80	; 128
     9c6:	59 f4       	brne	.+22     	; 0x9de <LCD_12864_send_command+0x80>
     9c8:	8b b1       	in	r24, 0x0b	; 11
     9ca:	80 64       	ori	r24, 0x40	; 64
     9cc:	8b b9       	out	0x0b, r24	; 11
     9ce:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9d2:	05 c0       	rjmp	.+10     	; 0x9de <LCD_12864_send_command+0x80>
     9d4:	8b b1       	in	r24, 0x0b	; 11
     9d6:	8f 7b       	andi	r24, 0xBF	; 191
     9d8:	8b b9       	out	0x0b, r24	; 11
     9da:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9de:	11 0f       	add	r17, r17
     9e0:	21 96       	adiw	r28, 0x01	; 1
     9e2:	cc 30       	cpi	r28, 0x0C	; 12
     9e4:	d1 05       	cpc	r29, r1
     9e6:	0c f3       	brlt	.-62     	; 0x9aa <LCD_12864_send_command+0x4c>
     9e8:	8b b1       	in	r24, 0x0b	; 11
     9ea:	8f 7b       	andi	r24, 0xBF	; 191
     9ec:	8b b9       	out	0x0b, r24	; 11
     9ee:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9f2:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9f6:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9fa:	0e 94 45 04 	call	0x88a	; 0x88a <strob>
     9fe:	8b b1       	in	r24, 0x0b	; 11
     a00:	8f 77       	andi	r24, 0x7F	; 127
     a02:	8b b9       	out	0x0b, r24	; 11
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	1f 91       	pop	r17
     a0a:	08 95       	ret

00000a0c <LCD_12864_GrapnicMode>:
     a0c:	88 23       	and	r24, r24
     a0e:	99 f0       	breq	.+38     	; 0xa36 <LCD_12864_GrapnicMode+0x2a>
     a10:	84 e3       	ldi	r24, 0x34	; 52
     a12:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     a16:	8f e9       	ldi	r24, 0x9F	; 159
     a18:	9f e0       	ldi	r25, 0x0F	; 15
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	f1 f7       	brne	.-4      	; 0xa1a <LCD_12864_GrapnicMode+0xe>
     a1e:	00 c0       	rjmp	.+0      	; 0xa20 <LCD_12864_GrapnicMode+0x14>
     a20:	00 00       	nop
     a22:	86 e3       	ldi	r24, 0x36	; 54
     a24:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     a28:	8f e9       	ldi	r24, 0x9F	; 159
     a2a:	9f e0       	ldi	r25, 0x0F	; 15
     a2c:	01 97       	sbiw	r24, 0x01	; 1
     a2e:	f1 f7       	brne	.-4      	; 0xa2c <LCD_12864_GrapnicMode+0x20>
     a30:	00 c0       	rjmp	.+0      	; 0xa32 <LCD_12864_GrapnicMode+0x26>
     a32:	00 00       	nop
     a34:	08 95       	ret
     a36:	80 e3       	ldi	r24, 0x30	; 48
     a38:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     a3c:	8f e9       	ldi	r24, 0x9F	; 159
     a3e:	9f e0       	ldi	r25, 0x0F	; 15
     a40:	01 97       	sbiw	r24, 0x01	; 1
     a42:	f1 f7       	brne	.-4      	; 0xa40 <LCD_12864_GrapnicMode+0x34>
     a44:	00 c0       	rjmp	.+0      	; 0xa46 <LCD_12864_GrapnicMode+0x3a>
     a46:	00 00       	nop
     a48:	08 95       	ret

00000a4a <LCD_12864_Draw_bitmap>:
     a4a:	8f 92       	push	r8
     a4c:	9f 92       	push	r9
     a4e:	af 92       	push	r10
     a50:	bf 92       	push	r11
     a52:	df 92       	push	r13
     a54:	ef 92       	push	r14
     a56:	ff 92       	push	r15
     a58:	0f 93       	push	r16
     a5a:	1f 93       	push	r17
     a5c:	cf 93       	push	r28
     a5e:	df 93       	push	r29
     a60:	7c 01       	movw	r14, r24
     a62:	d1 2c       	mov	r13, r1
     a64:	31 c1       	rjmp	.+610    	; 0xcc8 <LCD_12864_Draw_bitmap+0x27e>
     a66:	8f e1       	ldi	r24, 0x1F	; 31
     a68:	8d 15       	cp	r24, r13
     a6a:	48 f0       	brcs	.+18     	; 0xa7e <LCD_12864_Draw_bitmap+0x34>
     a6c:	8d 2d       	mov	r24, r13
     a6e:	80 68       	ori	r24, 0x80	; 128
     a70:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     a74:	80 2f       	mov	r24, r16
     a76:	80 68       	ori	r24, 0x80	; 128
     a78:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     a7c:	09 c0       	rjmp	.+18     	; 0xa90 <LCD_12864_Draw_bitmap+0x46>
     a7e:	80 ee       	ldi	r24, 0xE0	; 224
     a80:	8d 0d       	add	r24, r13
     a82:	80 68       	ori	r24, 0x80	; 128
     a84:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     a88:	80 2f       	mov	r24, r16
     a8a:	88 68       	ori	r24, 0x88	; 136
     a8c:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     a90:	cd 2d       	mov	r28, r13
     a92:	c6 95       	lsr	r28
     a94:	c6 95       	lsr	r28
     a96:	c6 95       	lsr	r28
     a98:	d0 e0       	ldi	r29, 0x00	; 0
     a9a:	cc 0f       	add	r28, r28
     a9c:	dd 1f       	adc	r29, r29
     a9e:	cc 0f       	add	r28, r28
     aa0:	dd 1f       	adc	r29, r29
     aa2:	cc 0f       	add	r28, r28
     aa4:	dd 1f       	adc	r29, r29
     aa6:	c0 0f       	add	r28, r16
     aa8:	d1 1d       	adc	r29, r1
     aaa:	c2 95       	swap	r28
     aac:	d2 95       	swap	r29
     aae:	d0 7f       	andi	r29, 0xF0	; 240
     ab0:	dc 27       	eor	r29, r28
     ab2:	c0 7f       	andi	r28, 0xF0	; 240
     ab4:	dc 27       	eor	r29, r28
     ab6:	ce 0d       	add	r28, r14
     ab8:	df 1d       	adc	r29, r15
     aba:	88 80       	ld	r8, Y
     abc:	91 2c       	mov	r9, r1
     abe:	1d 2d       	mov	r17, r13
     ac0:	17 70       	andi	r17, 0x07	; 7
     ac2:	01 2e       	mov	r0, r17
     ac4:	02 c0       	rjmp	.+4      	; 0xaca <LCD_12864_Draw_bitmap+0x80>
     ac6:	95 94       	asr	r9
     ac8:	87 94       	ror	r8
     aca:	0a 94       	dec	r0
     acc:	e2 f7       	brpl	.-8      	; 0xac6 <LCD_12864_Draw_bitmap+0x7c>
     ace:	96 94       	lsr	r9
     ad0:	98 2c       	mov	r9, r8
     ad2:	88 24       	eor	r8, r8
     ad4:	97 94       	ror	r9
     ad6:	87 94       	ror	r8
     ad8:	a9 80       	ldd	r10, Y+1	; 0x01
     ada:	b1 2c       	mov	r11, r1
     adc:	01 2e       	mov	r0, r17
     ade:	02 c0       	rjmp	.+4      	; 0xae4 <LCD_12864_Draw_bitmap+0x9a>
     ae0:	b5 94       	asr	r11
     ae2:	a7 94       	ror	r10
     ae4:	0a 94       	dec	r0
     ae6:	e2 f7       	brpl	.-8      	; 0xae0 <LCD_12864_Draw_bitmap+0x96>
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	a8 22       	and	r10, r24
     aec:	bb 24       	eor	r11, r11
     aee:	00 24       	eor	r0, r0
     af0:	b6 94       	lsr	r11
     af2:	a7 94       	ror	r10
     af4:	07 94       	ror	r0
     af6:	b6 94       	lsr	r11
     af8:	a7 94       	ror	r10
     afa:	07 94       	ror	r0
     afc:	ba 2c       	mov	r11, r10
     afe:	a0 2c       	mov	r10, r0
     b00:	aa 81       	ldd	r26, Y+2	; 0x02
     b02:	b0 e0       	ldi	r27, 0x00	; 0
     b04:	01 2e       	mov	r0, r17
     b06:	02 c0       	rjmp	.+4      	; 0xb0c <LCD_12864_Draw_bitmap+0xc2>
     b08:	b5 95       	asr	r27
     b0a:	a7 95       	ror	r26
     b0c:	0a 94       	dec	r0
     b0e:	e2 f7       	brpl	.-8      	; 0xb08 <LCD_12864_Draw_bitmap+0xbe>
     b10:	a1 70       	andi	r26, 0x01	; 1
     b12:	bb 27       	eor	r27, r27
     b14:	aa 0f       	add	r26, r26
     b16:	bb 1f       	adc	r27, r27
     b18:	a2 95       	swap	r26
     b1a:	b2 95       	swap	r27
     b1c:	b0 7f       	andi	r27, 0xF0	; 240
     b1e:	ba 27       	eor	r27, r26
     b20:	a0 7f       	andi	r26, 0xF0	; 240
     b22:	ba 27       	eor	r27, r26
     b24:	eb 81       	ldd	r30, Y+3	; 0x03
     b26:	f0 e0       	ldi	r31, 0x00	; 0
     b28:	01 2e       	mov	r0, r17
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <LCD_12864_Draw_bitmap+0xe6>
     b2c:	f5 95       	asr	r31
     b2e:	e7 95       	ror	r30
     b30:	0a 94       	dec	r0
     b32:	e2 f7       	brpl	.-8      	; 0xb2c <LCD_12864_Draw_bitmap+0xe2>
     b34:	e1 70       	andi	r30, 0x01	; 1
     b36:	ff 27       	eor	r31, r31
     b38:	e2 95       	swap	r30
     b3a:	f2 95       	swap	r31
     b3c:	f0 7f       	andi	r31, 0xF0	; 240
     b3e:	fe 27       	eor	r31, r30
     b40:	e0 7f       	andi	r30, 0xF0	; 240
     b42:	fe 27       	eor	r31, r30
     b44:	6c 81       	ldd	r22, Y+4	; 0x04
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	01 2e       	mov	r0, r17
     b4a:	02 c0       	rjmp	.+4      	; 0xb50 <LCD_12864_Draw_bitmap+0x106>
     b4c:	75 95       	asr	r23
     b4e:	67 95       	ror	r22
     b50:	0a 94       	dec	r0
     b52:	e2 f7       	brpl	.-8      	; 0xb4c <LCD_12864_Draw_bitmap+0x102>
     b54:	61 70       	andi	r22, 0x01	; 1
     b56:	77 27       	eor	r23, r23
     b58:	66 0f       	add	r22, r22
     b5a:	77 1f       	adc	r23, r23
     b5c:	66 0f       	add	r22, r22
     b5e:	77 1f       	adc	r23, r23
     b60:	66 0f       	add	r22, r22
     b62:	77 1f       	adc	r23, r23
     b64:	4d 81       	ldd	r20, Y+5	; 0x05
     b66:	50 e0       	ldi	r21, 0x00	; 0
     b68:	01 2e       	mov	r0, r17
     b6a:	02 c0       	rjmp	.+4      	; 0xb70 <LCD_12864_Draw_bitmap+0x126>
     b6c:	55 95       	asr	r21
     b6e:	47 95       	ror	r20
     b70:	0a 94       	dec	r0
     b72:	e2 f7       	brpl	.-8      	; 0xb6c <LCD_12864_Draw_bitmap+0x122>
     b74:	41 70       	andi	r20, 0x01	; 1
     b76:	55 27       	eor	r21, r21
     b78:	44 0f       	add	r20, r20
     b7a:	55 1f       	adc	r21, r21
     b7c:	44 0f       	add	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	2e 81       	ldd	r18, Y+6	; 0x06
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	01 2e       	mov	r0, r17
     b86:	02 c0       	rjmp	.+4      	; 0xb8c <LCD_12864_Draw_bitmap+0x142>
     b88:	35 95       	asr	r19
     b8a:	27 95       	ror	r18
     b8c:	0a 94       	dec	r0
     b8e:	e2 f7       	brpl	.-8      	; 0xb88 <LCD_12864_Draw_bitmap+0x13e>
     b90:	21 70       	andi	r18, 0x01	; 1
     b92:	33 27       	eor	r19, r19
     b94:	22 0f       	add	r18, r18
     b96:	33 1f       	adc	r19, r19
     b98:	8f 81       	ldd	r24, Y+7	; 0x07
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	01 2e       	mov	r0, r17
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <LCD_12864_Draw_bitmap+0x15a>
     ba0:	95 95       	asr	r25
     ba2:	87 95       	ror	r24
     ba4:	0a 94       	dec	r0
     ba6:	e2 f7       	brpl	.-8      	; 0xba0 <LCD_12864_Draw_bitmap+0x156>
     ba8:	a8 28       	or	r10, r8
     baa:	aa 29       	or	r26, r10
     bac:	ea 2b       	or	r30, r26
     bae:	6e 2b       	or	r22, r30
     bb0:	46 2b       	or	r20, r22
     bb2:	24 2b       	or	r18, r20
     bb4:	81 70       	andi	r24, 0x01	; 1
     bb6:	82 2b       	or	r24, r18
     bb8:	0e 94 58 04 	call	0x8b0	; 0x8b0 <LCD_12864_send_data>
     bbc:	88 84       	ldd	r8, Y+8	; 0x08
     bbe:	91 2c       	mov	r9, r1
     bc0:	01 2e       	mov	r0, r17
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <LCD_12864_Draw_bitmap+0x17e>
     bc4:	95 94       	asr	r9
     bc6:	87 94       	ror	r8
     bc8:	0a 94       	dec	r0
     bca:	e2 f7       	brpl	.-8      	; 0xbc4 <LCD_12864_Draw_bitmap+0x17a>
     bcc:	96 94       	lsr	r9
     bce:	98 2c       	mov	r9, r8
     bd0:	88 24       	eor	r8, r8
     bd2:	97 94       	ror	r9
     bd4:	87 94       	ror	r8
     bd6:	a9 84       	ldd	r10, Y+9	; 0x09
     bd8:	b1 2c       	mov	r11, r1
     bda:	01 2e       	mov	r0, r17
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <LCD_12864_Draw_bitmap+0x198>
     bde:	b5 94       	asr	r11
     be0:	a7 94       	ror	r10
     be2:	0a 94       	dec	r0
     be4:	e2 f7       	brpl	.-8      	; 0xbde <LCD_12864_Draw_bitmap+0x194>
     be6:	81 e0       	ldi	r24, 0x01	; 1
     be8:	a8 22       	and	r10, r24
     bea:	bb 24       	eor	r11, r11
     bec:	00 24       	eor	r0, r0
     bee:	b6 94       	lsr	r11
     bf0:	a7 94       	ror	r10
     bf2:	07 94       	ror	r0
     bf4:	b6 94       	lsr	r11
     bf6:	a7 94       	ror	r10
     bf8:	07 94       	ror	r0
     bfa:	ba 2c       	mov	r11, r10
     bfc:	a0 2c       	mov	r10, r0
     bfe:	aa 85       	ldd	r26, Y+10	; 0x0a
     c00:	b0 e0       	ldi	r27, 0x00	; 0
     c02:	01 2e       	mov	r0, r17
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <LCD_12864_Draw_bitmap+0x1c0>
     c06:	b5 95       	asr	r27
     c08:	a7 95       	ror	r26
     c0a:	0a 94       	dec	r0
     c0c:	e2 f7       	brpl	.-8      	; 0xc06 <LCD_12864_Draw_bitmap+0x1bc>
     c0e:	a1 70       	andi	r26, 0x01	; 1
     c10:	bb 27       	eor	r27, r27
     c12:	aa 0f       	add	r26, r26
     c14:	bb 1f       	adc	r27, r27
     c16:	a2 95       	swap	r26
     c18:	b2 95       	swap	r27
     c1a:	b0 7f       	andi	r27, 0xF0	; 240
     c1c:	ba 27       	eor	r27, r26
     c1e:	a0 7f       	andi	r26, 0xF0	; 240
     c20:	ba 27       	eor	r27, r26
     c22:	eb 85       	ldd	r30, Y+11	; 0x0b
     c24:	f0 e0       	ldi	r31, 0x00	; 0
     c26:	01 2e       	mov	r0, r17
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <LCD_12864_Draw_bitmap+0x1e4>
     c2a:	f5 95       	asr	r31
     c2c:	e7 95       	ror	r30
     c2e:	0a 94       	dec	r0
     c30:	e2 f7       	brpl	.-8      	; 0xc2a <LCD_12864_Draw_bitmap+0x1e0>
     c32:	e1 70       	andi	r30, 0x01	; 1
     c34:	ff 27       	eor	r31, r31
     c36:	e2 95       	swap	r30
     c38:	f2 95       	swap	r31
     c3a:	f0 7f       	andi	r31, 0xF0	; 240
     c3c:	fe 27       	eor	r31, r30
     c3e:	e0 7f       	andi	r30, 0xF0	; 240
     c40:	fe 27       	eor	r31, r30
     c42:	6c 85       	ldd	r22, Y+12	; 0x0c
     c44:	70 e0       	ldi	r23, 0x00	; 0
     c46:	01 2e       	mov	r0, r17
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <LCD_12864_Draw_bitmap+0x204>
     c4a:	75 95       	asr	r23
     c4c:	67 95       	ror	r22
     c4e:	0a 94       	dec	r0
     c50:	e2 f7       	brpl	.-8      	; 0xc4a <LCD_12864_Draw_bitmap+0x200>
     c52:	61 70       	andi	r22, 0x01	; 1
     c54:	77 27       	eor	r23, r23
     c56:	66 0f       	add	r22, r22
     c58:	77 1f       	adc	r23, r23
     c5a:	66 0f       	add	r22, r22
     c5c:	77 1f       	adc	r23, r23
     c5e:	66 0f       	add	r22, r22
     c60:	77 1f       	adc	r23, r23
     c62:	4d 85       	ldd	r20, Y+13	; 0x0d
     c64:	50 e0       	ldi	r21, 0x00	; 0
     c66:	01 2e       	mov	r0, r17
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <LCD_12864_Draw_bitmap+0x224>
     c6a:	55 95       	asr	r21
     c6c:	47 95       	ror	r20
     c6e:	0a 94       	dec	r0
     c70:	e2 f7       	brpl	.-8      	; 0xc6a <LCD_12864_Draw_bitmap+0x220>
     c72:	41 70       	andi	r20, 0x01	; 1
     c74:	55 27       	eor	r21, r21
     c76:	44 0f       	add	r20, r20
     c78:	55 1f       	adc	r21, r21
     c7a:	44 0f       	add	r20, r20
     c7c:	55 1f       	adc	r21, r21
     c7e:	2e 85       	ldd	r18, Y+14	; 0x0e
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	01 2e       	mov	r0, r17
     c84:	02 c0       	rjmp	.+4      	; 0xc8a <LCD_12864_Draw_bitmap+0x240>
     c86:	35 95       	asr	r19
     c88:	27 95       	ror	r18
     c8a:	0a 94       	dec	r0
     c8c:	e2 f7       	brpl	.-8      	; 0xc86 <LCD_12864_Draw_bitmap+0x23c>
     c8e:	21 70       	andi	r18, 0x01	; 1
     c90:	33 27       	eor	r19, r19
     c92:	22 0f       	add	r18, r18
     c94:	33 1f       	adc	r19, r19
     c96:	cf 85       	ldd	r28, Y+15	; 0x0f
     c98:	d0 e0       	ldi	r29, 0x00	; 0
     c9a:	02 c0       	rjmp	.+4      	; 0xca0 <LCD_12864_Draw_bitmap+0x256>
     c9c:	d5 95       	asr	r29
     c9e:	c7 95       	ror	r28
     ca0:	1a 95       	dec	r17
     ca2:	e2 f7       	brpl	.-8      	; 0xc9c <LCD_12864_Draw_bitmap+0x252>
     ca4:	88 2d       	mov	r24, r8
     ca6:	8a 29       	or	r24, r10
     ca8:	8a 2b       	or	r24, r26
     caa:	8e 2b       	or	r24, r30
     cac:	86 2b       	or	r24, r22
     cae:	84 2b       	or	r24, r20
     cb0:	82 2b       	or	r24, r18
     cb2:	c1 70       	andi	r28, 0x01	; 1
     cb4:	8c 2b       	or	r24, r28
     cb6:	0e 94 58 04 	call	0x8b0	; 0x8b0 <LCD_12864_send_data>
     cba:	0f 5f       	subi	r16, 0xFF	; 255
     cbc:	01 c0       	rjmp	.+2      	; 0xcc0 <LCD_12864_Draw_bitmap+0x276>
     cbe:	00 e0       	ldi	r16, 0x00	; 0
     cc0:	08 30       	cpi	r16, 0x08	; 8
     cc2:	08 f4       	brcc	.+2      	; 0xcc6 <LCD_12864_Draw_bitmap+0x27c>
     cc4:	d0 ce       	rjmp	.-608    	; 0xa66 <LCD_12864_Draw_bitmap+0x1c>
     cc6:	d3 94       	inc	r13
     cc8:	8f e3       	ldi	r24, 0x3F	; 63
     cca:	8d 15       	cp	r24, r13
     ccc:	c0 f7       	brcc	.-16     	; 0xcbe <LCD_12864_Draw_bitmap+0x274>
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
     cd4:	0f 91       	pop	r16
     cd6:	ff 90       	pop	r15
     cd8:	ef 90       	pop	r14
     cda:	df 90       	pop	r13
     cdc:	bf 90       	pop	r11
     cde:	af 90       	pop	r10
     ce0:	9f 90       	pop	r9
     ce2:	8f 90       	pop	r8
     ce4:	08 95       	ret

00000ce6 <clear_LCD_12864>:
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     cec:	8f e3       	ldi	r24, 0x3F	; 63
     cee:	9c e9       	ldi	r25, 0x9C	; 156
     cf0:	01 97       	sbiw	r24, 0x01	; 1
     cf2:	f1 f7       	brne	.-4      	; 0xcf0 <clear_LCD_12864+0xa>
     cf4:	00 c0       	rjmp	.+0      	; 0xcf6 <clear_LCD_12864+0x10>
     cf6:	00 00       	nop
     cf8:	08 95       	ret

00000cfa <LCD_12864_ini>:
     cfa:	2f ef       	ldi	r18, 0xFF	; 255
     cfc:	83 ef       	ldi	r24, 0xF3	; 243
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	21 50       	subi	r18, 0x01	; 1
     d02:	80 40       	sbci	r24, 0x00	; 0
     d04:	90 40       	sbci	r25, 0x00	; 0
     d06:	e1 f7       	brne	.-8      	; 0xd00 <LCD_12864_ini+0x6>
     d08:	00 c0       	rjmp	.+0      	; 0xd0a <LCD_12864_ini+0x10>
     d0a:	00 00       	nop
     d0c:	8c e0       	ldi	r24, 0x0C	; 12
     d0e:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     d12:	8f e8       	ldi	r24, 0x8F	; 143
     d14:	91 e0       	ldi	r25, 0x01	; 1
     d16:	01 97       	sbiw	r24, 0x01	; 1
     d18:	f1 f7       	brne	.-4      	; 0xd16 <LCD_12864_ini+0x1c>
     d1a:	00 c0       	rjmp	.+0      	; 0xd1c <LCD_12864_ini+0x22>
     d1c:	00 00       	nop
     d1e:	0e 94 73 06 	call	0xce6	; 0xce6 <clear_LCD_12864>
     d22:	86 e0       	ldi	r24, 0x06	; 6
     d24:	0e 94 af 04 	call	0x95e	; 0x95e <LCD_12864_send_command>
     d28:	8f e3       	ldi	r24, 0x3F	; 63
     d2a:	9c e9       	ldi	r25, 0x9C	; 156
     d2c:	01 97       	sbiw	r24, 0x01	; 1
     d2e:	f1 f7       	brne	.-4      	; 0xd2c <LCD_12864_ini+0x32>
     d30:	00 c0       	rjmp	.+0      	; 0xd32 <LCD_12864_ini+0x38>
     d32:	00 00       	nop
     d34:	08 95       	ret

00000d36 <LCD_12864_print_symbol>:
     d36:	bf 92       	push	r11
     d38:	cf 92       	push	r12
     d3a:	df 92       	push	r13
     d3c:	ef 92       	push	r14
     d3e:	ff 92       	push	r15
     d40:	0f 93       	push	r16
     d42:	1f 93       	push	r17
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
     d48:	6c 01       	movw	r12, r24
     d4a:	7b 01       	movw	r14, r22
     d4c:	b4 2e       	mov	r11, r20
     d4e:	c0 e0       	ldi	r28, 0x00	; 0
     d50:	d0 e0       	ldi	r29, 0x00	; 0
     d52:	2d c0       	rjmp	.+90     	; 0xdae <LCD_12864_print_symbol+0x78>
     d54:	bb 20       	and	r11, r11
     d56:	b1 f0       	breq	.+44     	; 0xd84 <LCD_12864_print_symbol+0x4e>
     d58:	8e 01       	movw	r16, r28
     d5a:	0c 0d       	add	r16, r12
     d5c:	1d 1d       	adc	r17, r13
     d5e:	01 50       	subi	r16, 0x01	; 1
     d60:	11 09       	sbc	r17, r1
     d62:	c7 01       	movw	r24, r14
     d64:	88 0f       	add	r24, r24
     d66:	99 1f       	adc	r25, r25
     d68:	8e 0d       	add	r24, r14
     d6a:	9f 1d       	adc	r25, r15
     d6c:	88 0f       	add	r24, r24
     d6e:	99 1f       	adc	r25, r25
     d70:	8c 0f       	add	r24, r28
     d72:	9d 1f       	adc	r25, r29
     d74:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     d78:	f8 01       	movw	r30, r16
     d7a:	ef 56       	subi	r30, 0x6F	; 111
     d7c:	fd 4f       	sbci	r31, 0xFD	; 253
     d7e:	80 95       	com	r24
     d80:	80 83       	st	Z, r24
     d82:	14 c0       	rjmp	.+40     	; 0xdac <LCD_12864_print_symbol+0x76>
     d84:	86 01       	movw	r16, r12
     d86:	0c 0f       	add	r16, r28
     d88:	1d 1f       	adc	r17, r29
     d8a:	01 50       	subi	r16, 0x01	; 1
     d8c:	11 09       	sbc	r17, r1
     d8e:	c7 01       	movw	r24, r14
     d90:	88 0f       	add	r24, r24
     d92:	99 1f       	adc	r25, r25
     d94:	8e 0d       	add	r24, r14
     d96:	9f 1d       	adc	r25, r15
     d98:	88 0f       	add	r24, r24
     d9a:	99 1f       	adc	r25, r25
     d9c:	8c 0f       	add	r24, r28
     d9e:	9d 1f       	adc	r25, r29
     da0:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     da4:	f8 01       	movw	r30, r16
     da6:	ef 56       	subi	r30, 0x6F	; 111
     da8:	fd 4f       	sbci	r31, 0xFD	; 253
     daa:	80 83       	st	Z, r24
     dac:	21 96       	adiw	r28, 0x01	; 1
     dae:	c7 30       	cpi	r28, 0x07	; 7
     db0:	d1 05       	cpc	r29, r1
     db2:	84 f2       	brlt	.-96     	; 0xd54 <LCD_12864_print_symbol+0x1e>
     db4:	df 91       	pop	r29
     db6:	cf 91       	pop	r28
     db8:	1f 91       	pop	r17
     dba:	0f 91       	pop	r16
     dbc:	ff 90       	pop	r15
     dbe:	ef 90       	pop	r14
     dc0:	df 90       	pop	r13
     dc2:	cf 90       	pop	r12
     dc4:	bf 90       	pop	r11
     dc6:	08 95       	ret

00000dc8 <LCD_12864_print_symbol_4_6>:
     dc8:	bf 92       	push	r11
     dca:	cf 92       	push	r12
     dcc:	df 92       	push	r13
     dce:	ef 92       	push	r14
     dd0:	ff 92       	push	r15
     dd2:	0f 93       	push	r16
     dd4:	1f 93       	push	r17
     dd6:	cf 93       	push	r28
     dd8:	df 93       	push	r29
     dda:	6c 01       	movw	r12, r24
     ddc:	7b 01       	movw	r14, r22
     dde:	b4 2e       	mov	r11, r20
     de0:	c0 e0       	ldi	r28, 0x00	; 0
     de2:	d0 e0       	ldi	r29, 0x00	; 0
     de4:	29 c0       	rjmp	.+82     	; 0xe38 <LCD_12864_print_symbol_4_6+0x70>
     de6:	bb 20       	and	r11, r11
     de8:	a1 f0       	breq	.+40     	; 0xe12 <LCD_12864_print_symbol_4_6+0x4a>
     dea:	8e 01       	movw	r16, r28
     dec:	0c 0d       	add	r16, r12
     dee:	1d 1d       	adc	r17, r13
     df0:	01 50       	subi	r16, 0x01	; 1
     df2:	11 09       	sbc	r17, r1
     df4:	c7 01       	movw	r24, r14
     df6:	88 0f       	add	r24, r24
     df8:	99 1f       	adc	r25, r25
     dfa:	88 0f       	add	r24, r24
     dfc:	99 1f       	adc	r25, r25
     dfe:	8c 0f       	add	r24, r28
     e00:	9d 1f       	adc	r25, r29
     e02:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     e06:	f8 01       	movw	r30, r16
     e08:	ef 56       	subi	r30, 0x6F	; 111
     e0a:	fd 4f       	sbci	r31, 0xFD	; 253
     e0c:	80 95       	com	r24
     e0e:	80 83       	st	Z, r24
     e10:	12 c0       	rjmp	.+36     	; 0xe36 <LCD_12864_print_symbol_4_6+0x6e>
     e12:	86 01       	movw	r16, r12
     e14:	0c 0f       	add	r16, r28
     e16:	1d 1f       	adc	r17, r29
     e18:	01 50       	subi	r16, 0x01	; 1
     e1a:	11 09       	sbc	r17, r1
     e1c:	c7 01       	movw	r24, r14
     e1e:	88 0f       	add	r24, r24
     e20:	99 1f       	adc	r25, r25
     e22:	88 0f       	add	r24, r24
     e24:	99 1f       	adc	r25, r25
     e26:	8c 0f       	add	r24, r28
     e28:	9d 1f       	adc	r25, r29
     e2a:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     e2e:	f8 01       	movw	r30, r16
     e30:	ef 56       	subi	r30, 0x6F	; 111
     e32:	fd 4f       	sbci	r31, 0xFD	; 253
     e34:	80 83       	st	Z, r24
     e36:	21 96       	adiw	r28, 0x01	; 1
     e38:	c4 30       	cpi	r28, 0x04	; 4
     e3a:	d1 05       	cpc	r29, r1
     e3c:	a4 f2       	brlt	.-88     	; 0xde6 <LCD_12864_print_symbol_4_6+0x1e>
     e3e:	df 91       	pop	r29
     e40:	cf 91       	pop	r28
     e42:	1f 91       	pop	r17
     e44:	0f 91       	pop	r16
     e46:	ff 90       	pop	r15
     e48:	ef 90       	pop	r14
     e4a:	df 90       	pop	r13
     e4c:	cf 90       	pop	r12
     e4e:	bf 90       	pop	r11
     e50:	08 95       	ret

00000e52 <LCD_12864_print_symbol_11_16>:
     e52:	bf 92       	push	r11
     e54:	cf 92       	push	r12
     e56:	df 92       	push	r13
     e58:	ef 92       	push	r14
     e5a:	ff 92       	push	r15
     e5c:	0f 93       	push	r16
     e5e:	1f 93       	push	r17
     e60:	cf 93       	push	r28
     e62:	df 93       	push	r29
     e64:	6c 01       	movw	r12, r24
     e66:	7b 01       	movw	r14, r22
     e68:	b4 2e       	mov	r11, r20
     e6a:	c0 e0       	ldi	r28, 0x00	; 0
     e6c:	d0 e0       	ldi	r29, 0x00	; 0
     e6e:	2b c0       	rjmp	.+86     	; 0xec6 <LCD_12864_print_symbol_11_16+0x74>
     e70:	bb 20       	and	r11, r11
     e72:	a9 f0       	breq	.+42     	; 0xe9e <LCD_12864_print_symbol_11_16+0x4c>
     e74:	8e 01       	movw	r16, r28
     e76:	0c 0d       	add	r16, r12
     e78:	1d 1d       	adc	r17, r13
     e7a:	01 50       	subi	r16, 0x01	; 1
     e7c:	11 09       	sbc	r17, r1
     e7e:	26 e1       	ldi	r18, 0x16	; 22
     e80:	2e 9d       	mul	r18, r14
     e82:	c0 01       	movw	r24, r0
     e84:	2f 9d       	mul	r18, r15
     e86:	90 0d       	add	r25, r0
     e88:	11 24       	eor	r1, r1
     e8a:	8c 0f       	add	r24, r28
     e8c:	9d 1f       	adc	r25, r29
     e8e:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     e92:	f8 01       	movw	r30, r16
     e94:	ef 56       	subi	r30, 0x6F	; 111
     e96:	fd 4f       	sbci	r31, 0xFD	; 253
     e98:	80 95       	com	r24
     e9a:	80 83       	st	Z, r24
     e9c:	13 c0       	rjmp	.+38     	; 0xec4 <LCD_12864_print_symbol_11_16+0x72>
     e9e:	86 01       	movw	r16, r12
     ea0:	0c 0f       	add	r16, r28
     ea2:	1d 1f       	adc	r17, r29
     ea4:	01 50       	subi	r16, 0x01	; 1
     ea6:	11 09       	sbc	r17, r1
     ea8:	26 e1       	ldi	r18, 0x16	; 22
     eaa:	2e 9d       	mul	r18, r14
     eac:	c0 01       	movw	r24, r0
     eae:	2f 9d       	mul	r18, r15
     eb0:	90 0d       	add	r25, r0
     eb2:	11 24       	eor	r1, r1
     eb4:	8c 0f       	add	r24, r28
     eb6:	9d 1f       	adc	r25, r29
     eb8:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     ebc:	f8 01       	movw	r30, r16
     ebe:	ef 56       	subi	r30, 0x6F	; 111
     ec0:	fd 4f       	sbci	r31, 0xFD	; 253
     ec2:	80 83       	st	Z, r24
     ec4:	21 96       	adiw	r28, 0x01	; 1
     ec6:	cb 30       	cpi	r28, 0x0B	; 11
     ec8:	d1 05       	cpc	r29, r1
     eca:	94 f2       	brlt	.-92     	; 0xe70 <LCD_12864_print_symbol_11_16+0x1e>
     ecc:	85 e7       	ldi	r24, 0x75	; 117
     ece:	c8 0e       	add	r12, r24
     ed0:	d1 1c       	adc	r13, r1
     ed2:	cb e0       	ldi	r28, 0x0B	; 11
     ed4:	d0 e0       	ldi	r29, 0x00	; 0
     ed6:	2b c0       	rjmp	.+86     	; 0xf2e <LCD_12864_print_symbol_11_16+0xdc>
     ed8:	bb 20       	and	r11, r11
     eda:	a9 f0       	breq	.+42     	; 0xf06 <LCD_12864_print_symbol_11_16+0xb4>
     edc:	86 01       	movw	r16, r12
     ede:	0c 0f       	add	r16, r28
     ee0:	1d 1f       	adc	r17, r29
     ee2:	01 50       	subi	r16, 0x01	; 1
     ee4:	11 09       	sbc	r17, r1
     ee6:	26 e1       	ldi	r18, 0x16	; 22
     ee8:	2e 9d       	mul	r18, r14
     eea:	c0 01       	movw	r24, r0
     eec:	2f 9d       	mul	r18, r15
     eee:	90 0d       	add	r25, r0
     ef0:	11 24       	eor	r1, r1
     ef2:	8c 0f       	add	r24, r28
     ef4:	9d 1f       	adc	r25, r29
     ef6:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     efa:	f8 01       	movw	r30, r16
     efc:	ef 56       	subi	r30, 0x6F	; 111
     efe:	fd 4f       	sbci	r31, 0xFD	; 253
     f00:	80 95       	com	r24
     f02:	80 83       	st	Z, r24
     f04:	13 c0       	rjmp	.+38     	; 0xf2c <LCD_12864_print_symbol_11_16+0xda>
     f06:	86 01       	movw	r16, r12
     f08:	0c 0f       	add	r16, r28
     f0a:	1d 1f       	adc	r17, r29
     f0c:	01 50       	subi	r16, 0x01	; 1
     f0e:	11 09       	sbc	r17, r1
     f10:	26 e1       	ldi	r18, 0x16	; 22
     f12:	2e 9d       	mul	r18, r14
     f14:	c0 01       	movw	r24, r0
     f16:	2f 9d       	mul	r18, r15
     f18:	90 0d       	add	r25, r0
     f1a:	11 24       	eor	r1, r1
     f1c:	8c 0f       	add	r24, r28
     f1e:	9d 1f       	adc	r25, r29
     f20:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     f24:	f8 01       	movw	r30, r16
     f26:	ef 56       	subi	r30, 0x6F	; 111
     f28:	fd 4f       	sbci	r31, 0xFD	; 253
     f2a:	80 83       	st	Z, r24
     f2c:	21 96       	adiw	r28, 0x01	; 1
     f2e:	c6 31       	cpi	r28, 0x16	; 22
     f30:	d1 05       	cpc	r29, r1
     f32:	94 f2       	brlt	.-92     	; 0xed8 <LCD_12864_print_symbol_11_16+0x86>
     f34:	df 91       	pop	r29
     f36:	cf 91       	pop	r28
     f38:	1f 91       	pop	r17
     f3a:	0f 91       	pop	r16
     f3c:	ff 90       	pop	r15
     f3e:	ef 90       	pop	r14
     f40:	df 90       	pop	r13
     f42:	cf 90       	pop	r12
     f44:	bf 90       	pop	r11
     f46:	08 95       	ret

00000f48 <LCD_12864_print_symbol_7_11>:
     f48:	bf 92       	push	r11
     f4a:	cf 92       	push	r12
     f4c:	df 92       	push	r13
     f4e:	ef 92       	push	r14
     f50:	ff 92       	push	r15
     f52:	0f 93       	push	r16
     f54:	1f 93       	push	r17
     f56:	cf 93       	push	r28
     f58:	df 93       	push	r29
     f5a:	6c 01       	movw	r12, r24
     f5c:	7b 01       	movw	r14, r22
     f5e:	b4 2e       	mov	r11, r20
     f60:	c0 e0       	ldi	r28, 0x00	; 0
     f62:	d0 e0       	ldi	r29, 0x00	; 0
     f64:	37 c0       	rjmp	.+110    	; 0xfd4 <LCD_12864_print_symbol_7_11+0x8c>
     f66:	bb 20       	and	r11, r11
     f68:	d9 f0       	breq	.+54     	; 0xfa0 <LCD_12864_print_symbol_7_11+0x58>
     f6a:	8e 01       	movw	r16, r28
     f6c:	0c 0d       	add	r16, r12
     f6e:	1d 1d       	adc	r17, r13
     f70:	01 50       	subi	r16, 0x01	; 1
     f72:	11 09       	sbc	r17, r1
     f74:	97 01       	movw	r18, r14
     f76:	22 0f       	add	r18, r18
     f78:	33 1f       	adc	r19, r19
     f7a:	c9 01       	movw	r24, r18
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	88 0f       	add	r24, r24
     f82:	99 1f       	adc	r25, r25
     f84:	88 0f       	add	r24, r24
     f86:	99 1f       	adc	r25, r25
     f88:	82 1b       	sub	r24, r18
     f8a:	93 0b       	sbc	r25, r19
     f8c:	8c 0f       	add	r24, r28
     f8e:	9d 1f       	adc	r25, r29
     f90:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     f94:	f8 01       	movw	r30, r16
     f96:	ef 56       	subi	r30, 0x6F	; 111
     f98:	fd 4f       	sbci	r31, 0xFD	; 253
     f9a:	80 95       	com	r24
     f9c:	80 83       	st	Z, r24
     f9e:	19 c0       	rjmp	.+50     	; 0xfd2 <LCD_12864_print_symbol_7_11+0x8a>
     fa0:	86 01       	movw	r16, r12
     fa2:	0c 0f       	add	r16, r28
     fa4:	1d 1f       	adc	r17, r29
     fa6:	01 50       	subi	r16, 0x01	; 1
     fa8:	11 09       	sbc	r17, r1
     faa:	97 01       	movw	r18, r14
     fac:	22 0f       	add	r18, r18
     fae:	33 1f       	adc	r19, r19
     fb0:	c9 01       	movw	r24, r18
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25
     fb6:	88 0f       	add	r24, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	82 1b       	sub	r24, r18
     fc0:	93 0b       	sbc	r25, r19
     fc2:	8c 0f       	add	r24, r28
     fc4:	9d 1f       	adc	r25, r29
     fc6:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
     fca:	f8 01       	movw	r30, r16
     fcc:	ef 56       	subi	r30, 0x6F	; 111
     fce:	fd 4f       	sbci	r31, 0xFD	; 253
     fd0:	80 83       	st	Z, r24
     fd2:	21 96       	adiw	r28, 0x01	; 1
     fd4:	c7 30       	cpi	r28, 0x07	; 7
     fd6:	d1 05       	cpc	r29, r1
     fd8:	34 f2       	brlt	.-116    	; 0xf66 <LCD_12864_print_symbol_7_11+0x1e>
     fda:	89 e7       	ldi	r24, 0x79	; 121
     fdc:	c8 0e       	add	r12, r24
     fde:	d1 1c       	adc	r13, r1
     fe0:	c7 e0       	ldi	r28, 0x07	; 7
     fe2:	d0 e0       	ldi	r29, 0x00	; 0
     fe4:	37 c0       	rjmp	.+110    	; 0x1054 <LCD_12864_print_symbol_7_11+0x10c>
     fe6:	bb 20       	and	r11, r11
     fe8:	d9 f0       	breq	.+54     	; 0x1020 <LCD_12864_print_symbol_7_11+0xd8>
     fea:	86 01       	movw	r16, r12
     fec:	0c 0f       	add	r16, r28
     fee:	1d 1f       	adc	r17, r29
     ff0:	01 50       	subi	r16, 0x01	; 1
     ff2:	11 09       	sbc	r17, r1
     ff4:	97 01       	movw	r18, r14
     ff6:	22 0f       	add	r18, r18
     ff8:	33 1f       	adc	r19, r19
     ffa:	c9 01       	movw	r24, r18
     ffc:	88 0f       	add	r24, r24
     ffe:	99 1f       	adc	r25, r25
    1000:	88 0f       	add	r24, r24
    1002:	99 1f       	adc	r25, r25
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	82 1b       	sub	r24, r18
    100a:	93 0b       	sbc	r25, r19
    100c:	8c 0f       	add	r24, r28
    100e:	9d 1f       	adc	r25, r29
    1010:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
    1014:	f8 01       	movw	r30, r16
    1016:	ef 56       	subi	r30, 0x6F	; 111
    1018:	fd 4f       	sbci	r31, 0xFD	; 253
    101a:	80 95       	com	r24
    101c:	80 83       	st	Z, r24
    101e:	19 c0       	rjmp	.+50     	; 0x1052 <LCD_12864_print_symbol_7_11+0x10a>
    1020:	86 01       	movw	r16, r12
    1022:	0c 0f       	add	r16, r28
    1024:	1d 1f       	adc	r17, r29
    1026:	01 50       	subi	r16, 0x01	; 1
    1028:	11 09       	sbc	r17, r1
    102a:	97 01       	movw	r18, r14
    102c:	22 0f       	add	r18, r18
    102e:	33 1f       	adc	r19, r19
    1030:	c9 01       	movw	r24, r18
    1032:	88 0f       	add	r24, r24
    1034:	99 1f       	adc	r25, r25
    1036:	88 0f       	add	r24, r24
    1038:	99 1f       	adc	r25, r25
    103a:	88 0f       	add	r24, r24
    103c:	99 1f       	adc	r25, r25
    103e:	82 1b       	sub	r24, r18
    1040:	93 0b       	sbc	r25, r19
    1042:	8c 0f       	add	r24, r28
    1044:	9d 1f       	adc	r25, r29
    1046:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
    104a:	f8 01       	movw	r30, r16
    104c:	ef 56       	subi	r30, 0x6F	; 111
    104e:	fd 4f       	sbci	r31, 0xFD	; 253
    1050:	80 83       	st	Z, r24
    1052:	21 96       	adiw	r28, 0x01	; 1
    1054:	ce 30       	cpi	r28, 0x0E	; 14
    1056:	d1 05       	cpc	r29, r1
    1058:	34 f2       	brlt	.-116    	; 0xfe6 <LCD_12864_print_symbol_7_11+0x9e>
    105a:	df 91       	pop	r29
    105c:	cf 91       	pop	r28
    105e:	1f 91       	pop	r17
    1060:	0f 91       	pop	r16
    1062:	ff 90       	pop	r15
    1064:	ef 90       	pop	r14
    1066:	df 90       	pop	r13
    1068:	cf 90       	pop	r12
    106a:	bf 90       	pop	r11
    106c:	08 95       	ret

0000106e <LCD_12864_Print_7_11>:
    106e:	bf 92       	push	r11
    1070:	cf 92       	push	r12
    1072:	df 92       	push	r13
    1074:	ef 92       	push	r14
    1076:	ff 92       	push	r15
    1078:	0f 93       	push	r16
    107a:	1f 93       	push	r17
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	cd b7       	in	r28, 0x3d	; 61
    1082:	de b7       	in	r29, 0x3e	; 62
    1084:	ac 97       	sbiw	r28, 0x2c	; 44
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	f8 94       	cli
    108a:	de bf       	out	0x3e, r29	; 62
    108c:	0f be       	out	0x3f, r0	; 63
    108e:	cd bf       	out	0x3d, r28	; 61
    1090:	6c 01       	movw	r12, r24
    1092:	16 2f       	mov	r17, r22
    1094:	b4 2e       	mov	r11, r20
    1096:	79 01       	movw	r14, r18
    1098:	00 00       	nop
    109a:	ce 01       	movw	r24, r28
    109c:	01 96       	adiw	r24, 0x01	; 1
    109e:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    10a2:	85 e0       	ldi	r24, 0x05	; 5
    10a4:	91 e0       	ldi	r25, 0x01	; 1
    10a6:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <pf_open>
    10aa:	80 e8       	ldi	r24, 0x80	; 128
    10ac:	18 9f       	mul	r17, r24
    10ae:	c0 0c       	add	r12, r0
    10b0:	d1 1c       	adc	r13, r1
    10b2:	11 24       	eor	r1, r1
    10b4:	00 e0       	ldi	r16, 0x00	; 0
    10b6:	10 e0       	ldi	r17, 0x00	; 0
    10b8:	2d c0       	rjmp	.+90     	; 0x1114 <LCD_12864_Print_7_11+0xa6>
    10ba:	f7 01       	movw	r30, r14
    10bc:	e0 0f       	add	r30, r16
    10be:	f1 1f       	adc	r31, r17
    10c0:	60 81       	ld	r22, Z
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	bb 20       	and	r11, r11
    10c6:	89 f0       	breq	.+34     	; 0x10ea <LCD_12864_Print_7_11+0x7c>
    10c8:	6e 32       	cpi	r22, 0x2E	; 46
    10ca:	71 05       	cpc	r23, r1
    10cc:	39 f0       	breq	.+14     	; 0x10dc <LCD_12864_Print_7_11+0x6e>
    10ce:	60 53       	subi	r22, 0x30	; 48
    10d0:	71 09       	sbc	r23, r1
    10d2:	41 e0       	ldi	r20, 0x01	; 1
    10d4:	c6 01       	movw	r24, r12
    10d6:	0e 94 a4 07 	call	0xf48	; 0xf48 <LCD_12864_print_symbol_7_11>
    10da:	17 c0       	rjmp	.+46     	; 0x110a <LCD_12864_Print_7_11+0x9c>
    10dc:	41 e0       	ldi	r20, 0x01	; 1
    10de:	6a e0       	ldi	r22, 0x0A	; 10
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	c6 01       	movw	r24, r12
    10e4:	0e 94 a4 07 	call	0xf48	; 0xf48 <LCD_12864_print_symbol_7_11>
    10e8:	10 c0       	rjmp	.+32     	; 0x110a <LCD_12864_Print_7_11+0x9c>
    10ea:	6e 32       	cpi	r22, 0x2E	; 46
    10ec:	71 05       	cpc	r23, r1
    10ee:	39 f0       	breq	.+14     	; 0x10fe <LCD_12864_Print_7_11+0x90>
    10f0:	60 53       	subi	r22, 0x30	; 48
    10f2:	71 09       	sbc	r23, r1
    10f4:	40 e0       	ldi	r20, 0x00	; 0
    10f6:	c6 01       	movw	r24, r12
    10f8:	0e 94 a4 07 	call	0xf48	; 0xf48 <LCD_12864_print_symbol_7_11>
    10fc:	06 c0       	rjmp	.+12     	; 0x110a <LCD_12864_Print_7_11+0x9c>
    10fe:	40 e0       	ldi	r20, 0x00	; 0
    1100:	6a e0       	ldi	r22, 0x0A	; 10
    1102:	70 e0       	ldi	r23, 0x00	; 0
    1104:	c6 01       	movw	r24, r12
    1106:	0e 94 a4 07 	call	0xf48	; 0xf48 <LCD_12864_print_symbol_7_11>
    110a:	88 e0       	ldi	r24, 0x08	; 8
    110c:	c8 0e       	add	r12, r24
    110e:	d1 1c       	adc	r13, r1
    1110:	0f 5f       	subi	r16, 0xFF	; 255
    1112:	1f 4f       	sbci	r17, 0xFF	; 255
    1114:	f7 01       	movw	r30, r14
    1116:	01 90       	ld	r0, Z+
    1118:	00 20       	and	r0, r0
    111a:	e9 f7       	brne	.-6      	; 0x1116 <LCD_12864_Print_7_11+0xa8>
    111c:	31 97       	sbiw	r30, 0x01	; 1
    111e:	ee 19       	sub	r30, r14
    1120:	ff 09       	sbc	r31, r15
    1122:	0e 17       	cp	r16, r30
    1124:	1f 07       	cpc	r17, r31
    1126:	48 f2       	brcs	.-110    	; 0x10ba <LCD_12864_Print_7_11+0x4c>
    1128:	80 e0       	ldi	r24, 0x00	; 0
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    1130:	ac 96       	adiw	r28, 0x2c	; 44
    1132:	0f b6       	in	r0, 0x3f	; 63
    1134:	f8 94       	cli
    1136:	de bf       	out	0x3e, r29	; 62
    1138:	0f be       	out	0x3f, r0	; 63
    113a:	cd bf       	out	0x3d, r28	; 61
    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	1f 91       	pop	r17
    1142:	0f 91       	pop	r16
    1144:	ff 90       	pop	r15
    1146:	ef 90       	pop	r14
    1148:	df 90       	pop	r13
    114a:	cf 90       	pop	r12
    114c:	bf 90       	pop	r11
    114e:	08 95       	ret

00001150 <LCD_12864_Print_4_6>:
    1150:	bf 92       	push	r11
    1152:	cf 92       	push	r12
    1154:	df 92       	push	r13
    1156:	ef 92       	push	r14
    1158:	ff 92       	push	r15
    115a:	0f 93       	push	r16
    115c:	1f 93       	push	r17
    115e:	cf 93       	push	r28
    1160:	df 93       	push	r29
    1162:	cd b7       	in	r28, 0x3d	; 61
    1164:	de b7       	in	r29, 0x3e	; 62
    1166:	ac 97       	sbiw	r28, 0x2c	; 44
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	f8 94       	cli
    116c:	de bf       	out	0x3e, r29	; 62
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	cd bf       	out	0x3d, r28	; 61
    1172:	6c 01       	movw	r12, r24
    1174:	16 2f       	mov	r17, r22
    1176:	b4 2e       	mov	r11, r20
    1178:	79 01       	movw	r14, r18
    117a:	00 00       	nop
    117c:	ce 01       	movw	r24, r28
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    1184:	8f e0       	ldi	r24, 0x0F	; 15
    1186:	91 e0       	ldi	r25, 0x01	; 1
    1188:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <pf_open>
    118c:	80 e8       	ldi	r24, 0x80	; 128
    118e:	18 9f       	mul	r17, r24
    1190:	c0 0c       	add	r12, r0
    1192:	d1 1c       	adc	r13, r1
    1194:	11 24       	eor	r1, r1
    1196:	00 e0       	ldi	r16, 0x00	; 0
    1198:	10 e0       	ldi	r17, 0x00	; 0
    119a:	2d c0       	rjmp	.+90     	; 0x11f6 <LCD_12864_Print_4_6+0xa6>
    119c:	f7 01       	movw	r30, r14
    119e:	e0 0f       	add	r30, r16
    11a0:	f1 1f       	adc	r31, r17
    11a2:	60 81       	ld	r22, Z
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	bb 20       	and	r11, r11
    11a8:	89 f0       	breq	.+34     	; 0x11cc <LCD_12864_Print_4_6+0x7c>
    11aa:	6e 32       	cpi	r22, 0x2E	; 46
    11ac:	71 05       	cpc	r23, r1
    11ae:	39 f0       	breq	.+14     	; 0x11be <LCD_12864_Print_4_6+0x6e>
    11b0:	60 53       	subi	r22, 0x30	; 48
    11b2:	71 09       	sbc	r23, r1
    11b4:	41 e0       	ldi	r20, 0x01	; 1
    11b6:	c6 01       	movw	r24, r12
    11b8:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <LCD_12864_print_symbol_4_6>
    11bc:	17 c0       	rjmp	.+46     	; 0x11ec <LCD_12864_Print_4_6+0x9c>
    11be:	41 e0       	ldi	r20, 0x01	; 1
    11c0:	6a e0       	ldi	r22, 0x0A	; 10
    11c2:	70 e0       	ldi	r23, 0x00	; 0
    11c4:	c6 01       	movw	r24, r12
    11c6:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <LCD_12864_print_symbol_4_6>
    11ca:	10 c0       	rjmp	.+32     	; 0x11ec <LCD_12864_Print_4_6+0x9c>
    11cc:	6e 32       	cpi	r22, 0x2E	; 46
    11ce:	71 05       	cpc	r23, r1
    11d0:	39 f0       	breq	.+14     	; 0x11e0 <LCD_12864_Print_4_6+0x90>
    11d2:	60 53       	subi	r22, 0x30	; 48
    11d4:	71 09       	sbc	r23, r1
    11d6:	40 e0       	ldi	r20, 0x00	; 0
    11d8:	c6 01       	movw	r24, r12
    11da:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <LCD_12864_print_symbol_4_6>
    11de:	06 c0       	rjmp	.+12     	; 0x11ec <LCD_12864_Print_4_6+0x9c>
    11e0:	40 e0       	ldi	r20, 0x00	; 0
    11e2:	6a e0       	ldi	r22, 0x0A	; 10
    11e4:	70 e0       	ldi	r23, 0x00	; 0
    11e6:	c6 01       	movw	r24, r12
    11e8:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <LCD_12864_print_symbol_4_6>
    11ec:	85 e0       	ldi	r24, 0x05	; 5
    11ee:	c8 0e       	add	r12, r24
    11f0:	d1 1c       	adc	r13, r1
    11f2:	0f 5f       	subi	r16, 0xFF	; 255
    11f4:	1f 4f       	sbci	r17, 0xFF	; 255
    11f6:	f7 01       	movw	r30, r14
    11f8:	01 90       	ld	r0, Z+
    11fa:	00 20       	and	r0, r0
    11fc:	e9 f7       	brne	.-6      	; 0x11f8 <LCD_12864_Print_4_6+0xa8>
    11fe:	31 97       	sbiw	r30, 0x01	; 1
    1200:	ee 19       	sub	r30, r14
    1202:	ff 09       	sbc	r31, r15
    1204:	0e 17       	cp	r16, r30
    1206:	1f 07       	cpc	r17, r31
    1208:	48 f2       	brcs	.-110    	; 0x119c <LCD_12864_Print_4_6+0x4c>
    120a:	80 e0       	ldi	r24, 0x00	; 0
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    1212:	ac 96       	adiw	r28, 0x2c	; 44
    1214:	0f b6       	in	r0, 0x3f	; 63
    1216:	f8 94       	cli
    1218:	de bf       	out	0x3e, r29	; 62
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	cd bf       	out	0x3d, r28	; 61
    121e:	df 91       	pop	r29
    1220:	cf 91       	pop	r28
    1222:	1f 91       	pop	r17
    1224:	0f 91       	pop	r16
    1226:	ff 90       	pop	r15
    1228:	ef 90       	pop	r14
    122a:	df 90       	pop	r13
    122c:	cf 90       	pop	r12
    122e:	bf 90       	pop	r11
    1230:	08 95       	ret

00001232 <LCD_12864_Print_11_16>:
    1232:	bf 92       	push	r11
    1234:	cf 92       	push	r12
    1236:	df 92       	push	r13
    1238:	ef 92       	push	r14
    123a:	ff 92       	push	r15
    123c:	0f 93       	push	r16
    123e:	1f 93       	push	r17
    1240:	cf 93       	push	r28
    1242:	df 93       	push	r29
    1244:	cd b7       	in	r28, 0x3d	; 61
    1246:	de b7       	in	r29, 0x3e	; 62
    1248:	ac 97       	sbiw	r28, 0x2c	; 44
    124a:	0f b6       	in	r0, 0x3f	; 63
    124c:	f8 94       	cli
    124e:	de bf       	out	0x3e, r29	; 62
    1250:	0f be       	out	0x3f, r0	; 63
    1252:	cd bf       	out	0x3d, r28	; 61
    1254:	7c 01       	movw	r14, r24
    1256:	16 2f       	mov	r17, r22
    1258:	b4 2e       	mov	r11, r20
    125a:	69 01       	movw	r12, r18
    125c:	00 00       	nop
    125e:	ce 01       	movw	r24, r28
    1260:	01 96       	adiw	r24, 0x01	; 1
    1262:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    1266:	88 e1       	ldi	r24, 0x18	; 24
    1268:	91 e0       	ldi	r25, 0x01	; 1
    126a:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <pf_open>
    126e:	80 e8       	ldi	r24, 0x80	; 128
    1270:	18 9f       	mul	r17, r24
    1272:	e0 0c       	add	r14, r0
    1274:	f1 1c       	adc	r15, r1
    1276:	11 24       	eor	r1, r1
    1278:	00 e0       	ldi	r16, 0x00	; 0
    127a:	10 e0       	ldi	r17, 0x00	; 0
    127c:	19 c0       	rjmp	.+50     	; 0x12b0 <LCD_12864_Print_11_16+0x7e>
    127e:	f6 01       	movw	r30, r12
    1280:	e0 0f       	add	r30, r16
    1282:	f1 1f       	adc	r31, r17
    1284:	60 81       	ld	r22, Z
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	bb 20       	and	r11, r11
    128a:	39 f0       	breq	.+14     	; 0x129a <LCD_12864_Print_11_16+0x68>
    128c:	60 53       	subi	r22, 0x30	; 48
    128e:	71 09       	sbc	r23, r1
    1290:	41 e0       	ldi	r20, 0x01	; 1
    1292:	c7 01       	movw	r24, r14
    1294:	0e 94 29 07 	call	0xe52	; 0xe52 <LCD_12864_print_symbol_11_16>
    1298:	06 c0       	rjmp	.+12     	; 0x12a6 <LCD_12864_Print_11_16+0x74>
    129a:	60 53       	subi	r22, 0x30	; 48
    129c:	71 09       	sbc	r23, r1
    129e:	40 e0       	ldi	r20, 0x00	; 0
    12a0:	c7 01       	movw	r24, r14
    12a2:	0e 94 29 07 	call	0xe52	; 0xe52 <LCD_12864_print_symbol_11_16>
    12a6:	8c e0       	ldi	r24, 0x0C	; 12
    12a8:	e8 0e       	add	r14, r24
    12aa:	f1 1c       	adc	r15, r1
    12ac:	0f 5f       	subi	r16, 0xFF	; 255
    12ae:	1f 4f       	sbci	r17, 0xFF	; 255
    12b0:	f6 01       	movw	r30, r12
    12b2:	01 90       	ld	r0, Z+
    12b4:	00 20       	and	r0, r0
    12b6:	e9 f7       	brne	.-6      	; 0x12b2 <LCD_12864_Print_11_16+0x80>
    12b8:	31 97       	sbiw	r30, 0x01	; 1
    12ba:	ec 19       	sub	r30, r12
    12bc:	fd 09       	sbc	r31, r13
    12be:	0e 17       	cp	r16, r30
    12c0:	1f 07       	cpc	r17, r31
    12c2:	e8 f2       	brcs	.-70     	; 0x127e <LCD_12864_Print_11_16+0x4c>
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    12cc:	ac 96       	adiw	r28, 0x2c	; 44
    12ce:	0f b6       	in	r0, 0x3f	; 63
    12d0:	f8 94       	cli
    12d2:	de bf       	out	0x3e, r29	; 62
    12d4:	0f be       	out	0x3f, r0	; 63
    12d6:	cd bf       	out	0x3d, r28	; 61
    12d8:	df 91       	pop	r29
    12da:	cf 91       	pop	r28
    12dc:	1f 91       	pop	r17
    12de:	0f 91       	pop	r16
    12e0:	ff 90       	pop	r15
    12e2:	ef 90       	pop	r14
    12e4:	df 90       	pop	r13
    12e6:	cf 90       	pop	r12
    12e8:	bf 90       	pop	r11
    12ea:	08 95       	ret

000012ec <LCD_12864_Decode_UTF8>:
    12ec:	9f 92       	push	r9
    12ee:	af 92       	push	r10
    12f0:	bf 92       	push	r11
    12f2:	cf 92       	push	r12
    12f4:	df 92       	push	r13
    12f6:	ef 92       	push	r14
    12f8:	ff 92       	push	r15
    12fa:	0f 93       	push	r16
    12fc:	1f 93       	push	r17
    12fe:	cf 93       	push	r28
    1300:	df 93       	push	r29
    1302:	cd b7       	in	r28, 0x3d	; 61
    1304:	de b7       	in	r29, 0x3e	; 62
    1306:	ac 97       	sbiw	r28, 0x2c	; 44
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	f8 94       	cli
    130c:	de bf       	out	0x3e, r29	; 62
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	cd bf       	out	0x3d, r28	; 61
    1312:	6c 01       	movw	r12, r24
    1314:	16 2f       	mov	r17, r22
    1316:	94 2e       	mov	r9, r20
    1318:	59 01       	movw	r10, r18
    131a:	00 00       	nop
    131c:	ce 01       	movw	r24, r28
    131e:	01 96       	adiw	r24, 0x01	; 1
    1320:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    1324:	82 e2       	ldi	r24, 0x22	; 34
    1326:	91 e0       	ldi	r25, 0x01	; 1
    1328:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <pf_open>
    132c:	80 e8       	ldi	r24, 0x80	; 128
    132e:	18 9f       	mul	r17, r24
    1330:	c0 0c       	add	r12, r0
    1332:	d1 1c       	adc	r13, r1
    1334:	11 24       	eor	r1, r1
    1336:	e1 2c       	mov	r14, r1
    1338:	f1 2c       	mov	r15, r1
    133a:	7e c0       	rjmp	.+252    	; 0x1438 <LCD_12864_Decode_UTF8+0x14c>
    133c:	f5 01       	movw	r30, r10
    133e:	ee 0d       	add	r30, r14
    1340:	ff 1d       	adc	r31, r15
    1342:	00 81       	ld	r16, Z
    1344:	00 3c       	cpi	r16, 0xC0	; 192
    1346:	d8 f4       	brcc	.+54     	; 0x137e <LCD_12864_Decode_UTF8+0x92>
    1348:	08 3a       	cpi	r16, 0xA8	; 168
    134a:	c9 f0       	breq	.+50     	; 0x137e <LCD_12864_Decode_UTF8+0x92>
    134c:	08 3b       	cpi	r16, 0xB8	; 184
    134e:	b9 f0       	breq	.+46     	; 0x137e <LCD_12864_Decode_UTF8+0x92>
    1350:	00 3b       	cpi	r16, 0xB0	; 176
    1352:	a9 f0       	breq	.+42     	; 0x137e <LCD_12864_Decode_UTF8+0x92>
    1354:	60 2f       	mov	r22, r16
    1356:	70 e0       	ldi	r23, 0x00	; 0
    1358:	99 20       	and	r9, r9
    135a:	39 f0       	breq	.+14     	; 0x136a <LCD_12864_Decode_UTF8+0x7e>
    135c:	60 52       	subi	r22, 0x20	; 32
    135e:	71 09       	sbc	r23, r1
    1360:	41 e0       	ldi	r20, 0x01	; 1
    1362:	c6 01       	movw	r24, r12
    1364:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <LCD_12864_Decode_UTF8+0x8a>
    136a:	60 52       	subi	r22, 0x20	; 32
    136c:	71 09       	sbc	r23, r1
    136e:	40 e0       	ldi	r20, 0x00	; 0
    1370:	c6 01       	movw	r24, r12
    1372:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    1376:	86 e0       	ldi	r24, 0x06	; 6
    1378:	c8 0e       	add	r12, r24
    137a:	d1 1c       	adc	r13, r1
    137c:	5a c0       	rjmp	.+180    	; 0x1432 <LCD_12864_Decode_UTF8+0x146>
    137e:	10 e0       	ldi	r17, 0x00	; 0
    1380:	c8 01       	movw	r24, r16
    1382:	80 5c       	subi	r24, 0xC0	; 192
    1384:	91 09       	sbc	r25, r1
    1386:	80 34       	cpi	r24, 0x40	; 64
    1388:	91 05       	cpc	r25, r1
    138a:	a0 f4       	brcc	.+40     	; 0x13b4 <LCD_12864_Decode_UTF8+0xc8>
    138c:	99 20       	and	r9, r9
    138e:	41 f0       	breq	.+16     	; 0x13a0 <LCD_12864_Decode_UTF8+0xb4>
    1390:	41 e0       	ldi	r20, 0x01	; 1
    1392:	b8 01       	movw	r22, r16
    1394:	61 56       	subi	r22, 0x61	; 97
    1396:	71 09       	sbc	r23, r1
    1398:	c6 01       	movw	r24, r12
    139a:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    139e:	07 c0       	rjmp	.+14     	; 0x13ae <LCD_12864_Decode_UTF8+0xc2>
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	b8 01       	movw	r22, r16
    13a4:	61 56       	subi	r22, 0x61	; 97
    13a6:	71 09       	sbc	r23, r1
    13a8:	c6 01       	movw	r24, r12
    13aa:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    13ae:	86 e0       	ldi	r24, 0x06	; 6
    13b0:	c8 0e       	add	r12, r24
    13b2:	d1 1c       	adc	r13, r1
    13b4:	08 3a       	cpi	r16, 0xA8	; 168
    13b6:	11 05       	cpc	r17, r1
    13b8:	91 f4       	brne	.+36     	; 0x13de <LCD_12864_Decode_UTF8+0xf2>
    13ba:	99 20       	and	r9, r9
    13bc:	39 f0       	breq	.+14     	; 0x13cc <LCD_12864_Decode_UTF8+0xe0>
    13be:	41 e0       	ldi	r20, 0x01	; 1
    13c0:	6f e9       	ldi	r22, 0x9F	; 159
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	c6 01       	movw	r24, r12
    13c6:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    13ca:	06 c0       	rjmp	.+12     	; 0x13d8 <LCD_12864_Decode_UTF8+0xec>
    13cc:	40 e0       	ldi	r20, 0x00	; 0
    13ce:	6f e9       	ldi	r22, 0x9F	; 159
    13d0:	70 e0       	ldi	r23, 0x00	; 0
    13d2:	c6 01       	movw	r24, r12
    13d4:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    13d8:	86 e0       	ldi	r24, 0x06	; 6
    13da:	c8 0e       	add	r12, r24
    13dc:	d1 1c       	adc	r13, r1
    13de:	08 3b       	cpi	r16, 0xB8	; 184
    13e0:	11 05       	cpc	r17, r1
    13e2:	91 f4       	brne	.+36     	; 0x1408 <LCD_12864_Decode_UTF8+0x11c>
    13e4:	99 20       	and	r9, r9
    13e6:	39 f0       	breq	.+14     	; 0x13f6 <LCD_12864_Decode_UTF8+0x10a>
    13e8:	41 e0       	ldi	r20, 0x01	; 1
    13ea:	60 ea       	ldi	r22, 0xA0	; 160
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	c6 01       	movw	r24, r12
    13f0:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    13f4:	06 c0       	rjmp	.+12     	; 0x1402 <LCD_12864_Decode_UTF8+0x116>
    13f6:	40 e0       	ldi	r20, 0x00	; 0
    13f8:	60 ea       	ldi	r22, 0xA0	; 160
    13fa:	70 e0       	ldi	r23, 0x00	; 0
    13fc:	c6 01       	movw	r24, r12
    13fe:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    1402:	86 e0       	ldi	r24, 0x06	; 6
    1404:	c8 0e       	add	r12, r24
    1406:	d1 1c       	adc	r13, r1
    1408:	00 3b       	cpi	r16, 0xB0	; 176
    140a:	11 05       	cpc	r17, r1
    140c:	91 f4       	brne	.+36     	; 0x1432 <LCD_12864_Decode_UTF8+0x146>
    140e:	99 20       	and	r9, r9
    1410:	39 f0       	breq	.+14     	; 0x1420 <LCD_12864_Decode_UTF8+0x134>
    1412:	41 e0       	ldi	r20, 0x01	; 1
    1414:	61 ea       	ldi	r22, 0xA1	; 161
    1416:	70 e0       	ldi	r23, 0x00	; 0
    1418:	c6 01       	movw	r24, r12
    141a:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    141e:	06 c0       	rjmp	.+12     	; 0x142c <LCD_12864_Decode_UTF8+0x140>
    1420:	40 e0       	ldi	r20, 0x00	; 0
    1422:	61 ea       	ldi	r22, 0xA1	; 161
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	c6 01       	movw	r24, r12
    1428:	0e 94 9b 06 	call	0xd36	; 0xd36 <LCD_12864_print_symbol>
    142c:	86 e0       	ldi	r24, 0x06	; 6
    142e:	c8 0e       	add	r12, r24
    1430:	d1 1c       	adc	r13, r1
    1432:	8f ef       	ldi	r24, 0xFF	; 255
    1434:	e8 1a       	sub	r14, r24
    1436:	f8 0a       	sbc	r15, r24
    1438:	f5 01       	movw	r30, r10
    143a:	01 90       	ld	r0, Z+
    143c:	00 20       	and	r0, r0
    143e:	e9 f7       	brne	.-6      	; 0x143a <LCD_12864_Decode_UTF8+0x14e>
    1440:	31 97       	sbiw	r30, 0x01	; 1
    1442:	ea 19       	sub	r30, r10
    1444:	fb 09       	sbc	r31, r11
    1446:	ee 16       	cp	r14, r30
    1448:	ff 06       	cpc	r15, r31
    144a:	08 f4       	brcc	.+2      	; 0x144e <LCD_12864_Decode_UTF8+0x162>
    144c:	77 cf       	rjmp	.-274    	; 0x133c <LCD_12864_Decode_UTF8+0x50>
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    1456:	ac 96       	adiw	r28, 0x2c	; 44
    1458:	0f b6       	in	r0, 0x3f	; 63
    145a:	f8 94       	cli
    145c:	de bf       	out	0x3e, r29	; 62
    145e:	0f be       	out	0x3f, r0	; 63
    1460:	cd bf       	out	0x3d, r28	; 61
    1462:	df 91       	pop	r29
    1464:	cf 91       	pop	r28
    1466:	1f 91       	pop	r17
    1468:	0f 91       	pop	r16
    146a:	ff 90       	pop	r15
    146c:	ef 90       	pop	r14
    146e:	df 90       	pop	r13
    1470:	cf 90       	pop	r12
    1472:	bf 90       	pop	r11
    1474:	af 90       	pop	r10
    1476:	9f 90       	pop	r9
    1478:	08 95       	ret

0000147a <LCD_12864_Print_jpeg>:
    147a:	af 92       	push	r10
    147c:	bf 92       	push	r11
    147e:	cf 92       	push	r12
    1480:	df 92       	push	r13
    1482:	ef 92       	push	r14
    1484:	ff 92       	push	r15
    1486:	0f 93       	push	r16
    1488:	1f 93       	push	r17
    148a:	cf 93       	push	r28
    148c:	df 93       	push	r29
    148e:	cd b7       	in	r28, 0x3d	; 61
    1490:	de b7       	in	r29, 0x3e	; 62
    1492:	ac 97       	sbiw	r28, 0x2c	; 44
    1494:	0f b6       	in	r0, 0x3f	; 63
    1496:	f8 94       	cli
    1498:	de bf       	out	0x3e, r29	; 62
    149a:	0f be       	out	0x3f, r0	; 63
    149c:	cd bf       	out	0x3d, r28	; 61
    149e:	00 00       	nop
    14a0:	ce 01       	movw	r24, r28
    14a2:	01 96       	adiw	r24, 0x01	; 1
    14a4:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    14a8:	8c e2       	ldi	r24, 0x2C	; 44
    14aa:	91 e0       	ldi	r25, 0x01	; 1
    14ac:	0e 94 c3 16 	call	0x2d86	; 0x2d86 <pf_open>
    14b0:	a1 2c       	mov	r10, r1
    14b2:	b1 2c       	mov	r11, r1
    14b4:	e1 2c       	mov	r14, r1
    14b6:	f1 2c       	mov	r15, r1
    14b8:	1f c0       	rjmp	.+62     	; 0x14f8 <LCD_12864_Print_jpeg+0x7e>
    14ba:	65 01       	movw	r12, r10
    14bc:	d6 94       	lsr	r13
    14be:	dc 2c       	mov	r13, r12
    14c0:	cc 24       	eor	r12, r12
    14c2:	d7 94       	ror	r13
    14c4:	c7 94       	ror	r12
    14c6:	86 01       	movw	r16, r12
    14c8:	01 5e       	subi	r16, 0xE1	; 225
    14ca:	1f 4f       	sbci	r17, 0xFF	; 255
    14cc:	0c c0       	rjmp	.+24     	; 0x14e6 <LCD_12864_Print_jpeg+0x6c>
    14ce:	c7 01       	movw	r24, r14
    14d0:	0e 94 59 19 	call	0x32b2	; 0x32b2 <read_symbol_from_SD>
    14d4:	f8 01       	movw	r30, r16
    14d6:	ef 56       	subi	r30, 0x6F	; 111
    14d8:	fd 4f       	sbci	r31, 0xFD	; 253
    14da:	80 83       	st	Z, r24
    14dc:	8f ef       	ldi	r24, 0xFF	; 255
    14de:	e8 1a       	sub	r14, r24
    14e0:	f8 0a       	sbc	r15, r24
    14e2:	0f 5f       	subi	r16, 0xFF	; 255
    14e4:	1f 4f       	sbci	r17, 0xFF	; 255
    14e6:	c6 01       	movw	r24, r12
    14e8:	81 5a       	subi	r24, 0xA1	; 161
    14ea:	9f 4f       	sbci	r25, 0xFF	; 255
    14ec:	08 17       	cp	r16, r24
    14ee:	19 07       	cpc	r17, r25
    14f0:	74 f3       	brlt	.-36     	; 0x14ce <LCD_12864_Print_jpeg+0x54>
    14f2:	8f ef       	ldi	r24, 0xFF	; 255
    14f4:	a8 1a       	sub	r10, r24
    14f6:	b8 0a       	sbc	r11, r24
    14f8:	88 e0       	ldi	r24, 0x08	; 8
    14fa:	a8 16       	cp	r10, r24
    14fc:	b1 04       	cpc	r11, r1
    14fe:	ec f2       	brlt	.-70     	; 0x14ba <LCD_12864_Print_jpeg+0x40>
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	0e 94 8b 15 	call	0x2b16	; 0x2b16 <pf_mount>
    1508:	ac 96       	adiw	r28, 0x2c	; 44
    150a:	0f b6       	in	r0, 0x3f	; 63
    150c:	f8 94       	cli
    150e:	de bf       	out	0x3e, r29	; 62
    1510:	0f be       	out	0x3f, r0	; 63
    1512:	cd bf       	out	0x3d, r28	; 61
    1514:	df 91       	pop	r29
    1516:	cf 91       	pop	r28
    1518:	1f 91       	pop	r17
    151a:	0f 91       	pop	r16
    151c:	ff 90       	pop	r15
    151e:	ef 90       	pop	r14
    1520:	df 90       	pop	r13
    1522:	cf 90       	pop	r12
    1524:	bf 90       	pop	r11
    1526:	af 90       	pop	r10
    1528:	08 95       	ret

0000152a <LCD_12864_Clean_Frame_buffer>:
    152a:	80 e0       	ldi	r24, 0x00	; 0
    152c:	94 e0       	ldi	r25, 0x04	; 4
    152e:	e1 e9       	ldi	r30, 0x91	; 145
    1530:	f2 e0       	ldi	r31, 0x02	; 2
    1532:	df 01       	movw	r26, r30
    1534:	9c 01       	movw	r18, r24
    1536:	1d 92       	st	X+, r1
    1538:	21 50       	subi	r18, 0x01	; 1
    153a:	30 40       	sbci	r19, 0x00	; 0
    153c:	e1 f7       	brne	.-8      	; 0x1536 <LCD_12864_Clean_Frame_buffer+0xc>
    153e:	08 95       	ret

00001540 <LCD_12864_Draw_line>:
	memset(Frame_buffer, 0x00, sizeof(Frame_buffer));
}
/*----------Различная графика--------------------*/
/*-----------------------------------------------*/
/*----------Линия--------------------*/
void LCD_12864_Draw_line(uint8_t x_start, uint8_t y_start, uint8_t x_end, uint8_t y_end) {
    1540:	8f 92       	push	r8
    1542:	9f 92       	push	r9
    1544:	af 92       	push	r10
    1546:	bf 92       	push	r11
    1548:	cf 92       	push	r12
    154a:	df 92       	push	r13
    154c:	ef 92       	push	r14
    154e:	ff 92       	push	r15
    1550:	0f 93       	push	r16
    1552:	1f 93       	push	r17
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	c8 2f       	mov	r28, r24
    155a:	d6 2f       	mov	r29, r22
    155c:	b4 2e       	mov	r11, r20
    155e:	82 2e       	mov	r8, r18
	int dx = (x_end >= x_start) ? x_end - x_start : x_start - x_end;
    1560:	48 17       	cp	r20, r24
    1562:	28 f0       	brcs	.+10     	; 0x156e <LCD_12864_Draw_line+0x2e>
    1564:	c4 2e       	mov	r12, r20
    1566:	d1 2c       	mov	r13, r1
    1568:	c8 1a       	sub	r12, r24
    156a:	d1 08       	sbc	r13, r1
    156c:	04 c0       	rjmp	.+8      	; 0x1576 <LCD_12864_Draw_line+0x36>
    156e:	c8 2e       	mov	r12, r24
    1570:	d1 2c       	mov	r13, r1
    1572:	c4 1a       	sub	r12, r20
    1574:	d1 08       	sbc	r13, r1
	int dy = (y_end >= y_start) ? y_end - y_start : y_start - y_end;
    1576:	8d 16       	cp	r8, r29
    1578:	28 f0       	brcs	.+10     	; 0x1584 <LCD_12864_Draw_line+0x44>
    157a:	e8 2c       	mov	r14, r8
    157c:	f1 2c       	mov	r15, r1
    157e:	ed 1a       	sub	r14, r29
    1580:	f1 08       	sbc	r15, r1
    1582:	04 c0       	rjmp	.+8      	; 0x158c <LCD_12864_Draw_line+0x4c>
    1584:	ed 2e       	mov	r14, r29
    1586:	f1 2c       	mov	r15, r1
    1588:	e8 18       	sub	r14, r8
    158a:	f1 08       	sbc	r15, r1
	int sx = (x_start < x_end) ? 1 : -1;
    158c:	cb 15       	cp	r28, r11
    158e:	18 f4       	brcc	.+6      	; 0x1596 <LCD_12864_Draw_line+0x56>
    1590:	aa 24       	eor	r10, r10
    1592:	a3 94       	inc	r10
    1594:	02 c0       	rjmp	.+4      	; 0x159a <LCD_12864_Draw_line+0x5a>
    1596:	aa 24       	eor	r10, r10
    1598:	aa 94       	dec	r10
	int sy = (y_start < y_end) ? 1 : -1;
    159a:	d8 15       	cp	r29, r8
    159c:	18 f4       	brcc	.+6      	; 0x15a4 <LCD_12864_Draw_line+0x64>
    159e:	99 24       	eor	r9, r9
    15a0:	93 94       	inc	r9
    15a2:	02 c0       	rjmp	.+4      	; 0x15a8 <LCD_12864_Draw_line+0x68>
    15a4:	99 24       	eor	r9, r9
    15a6:	9a 94       	dec	r9
	int err = dx - dy;
    15a8:	86 01       	movw	r16, r12
    15aa:	0e 19       	sub	r16, r14
    15ac:	1f 09       	sbc	r17, r15

	for (;;) {
		LCD_12864_Draw_pixel(x_start, y_start);
    15ae:	6d 2f       	mov	r22, r29
    15b0:	8c 2f       	mov	r24, r28
    15b2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		if (x_start == x_end && y_start == y_end)
    15b6:	cb 11       	cpse	r28, r11
    15b8:	02 c0       	rjmp	.+4      	; 0x15be <LCD_12864_Draw_line+0x7e>
    15ba:	d8 15       	cp	r29, r8
    15bc:	a1 f0       	breq	.+40     	; 0x15e6 <LCD_12864_Draw_line+0xa6>
		break;
		int e2 = err + err;
    15be:	c8 01       	movw	r24, r16
    15c0:	88 0f       	add	r24, r24
    15c2:	99 1f       	adc	r25, r25
		if (e2 > -dy) {
    15c4:	22 27       	eor	r18, r18
    15c6:	33 27       	eor	r19, r19
    15c8:	2e 19       	sub	r18, r14
    15ca:	3f 09       	sbc	r19, r15
    15cc:	28 17       	cp	r18, r24
    15ce:	39 07       	cpc	r19, r25
    15d0:	1c f4       	brge	.+6      	; 0x15d8 <LCD_12864_Draw_line+0x98>
			err -= dy;
    15d2:	0e 19       	sub	r16, r14
    15d4:	1f 09       	sbc	r17, r15
			x_start += sx;
    15d6:	ca 0d       	add	r28, r10
		}
		if (e2 < dx) {
    15d8:	8c 15       	cp	r24, r12
    15da:	9d 05       	cpc	r25, r13
    15dc:	44 f7       	brge	.-48     	; 0x15ae <LCD_12864_Draw_line+0x6e>
			err += dx;
    15de:	0c 0d       	add	r16, r12
    15e0:	1d 1d       	adc	r17, r13
			y_start += sy;
    15e2:	d9 0d       	add	r29, r9
    15e4:	e4 cf       	rjmp	.-56     	; 0x15ae <LCD_12864_Draw_line+0x6e>
		}
	}
}
    15e6:	df 91       	pop	r29
    15e8:	cf 91       	pop	r28
    15ea:	1f 91       	pop	r17
    15ec:	0f 91       	pop	r16
    15ee:	ff 90       	pop	r15
    15f0:	ef 90       	pop	r14
    15f2:	df 90       	pop	r13
    15f4:	cf 90       	pop	r12
    15f6:	bf 90       	pop	r11
    15f8:	af 90       	pop	r10
    15fa:	9f 90       	pop	r9
    15fc:	8f 90       	pop	r8
    15fe:	08 95       	ret

00001600 <LCD_12864_Draw_rectangle>:
/*----------Пустотелый прямоугольник--------------------*/
void LCD_12864_Draw_rectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
    1600:	ef 92       	push	r14
    1602:	ff 92       	push	r15
    1604:	0f 93       	push	r16
    1606:	1f 93       	push	r17
    1608:	cf 93       	push	r28
    160a:	df 93       	push	r29
    160c:	7c 01       	movw	r14, r24
    160e:	8b 01       	movw	r16, r22
    1610:	e9 01       	movw	r28, r18
	/// \param y - начальная точка по оси "y"
	/// \param width - ширина прямоугольника
	/// \param height - высота прямоугольника

	/*Проверка ширины и высоты*/
	if ((x + width) >= ST7920_width) {
    1612:	9c 01       	movw	r18, r24
    1614:	24 0f       	add	r18, r20
    1616:	35 1f       	adc	r19, r21
    1618:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ST7920_width>
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	28 17       	cp	r18, r24
    1620:	39 07       	cpc	r19, r25
    1622:	18 f0       	brcs	.+6      	; 0x162a <LCD_12864_Draw_rectangle+0x2a>
		width = ST7920_width - x;
    1624:	ac 01       	movw	r20, r24
    1626:	4e 19       	sub	r20, r14
    1628:	5f 09       	sbc	r21, r15
	}
	if ((y + height) >= ST7920_height) {
    162a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	98 01       	movw	r18, r16
    1632:	2c 0f       	add	r18, r28
    1634:	3d 1f       	adc	r19, r29
    1636:	28 17       	cp	r18, r24
    1638:	39 07       	cpc	r19, r25
    163a:	18 f0       	brcs	.+6      	; 0x1642 <LCD_12864_Draw_rectangle+0x42>
		height = ST7920_height - y;
    163c:	ec 01       	movw	r28, r24
    163e:	c0 1b       	sub	r28, r16
    1640:	d1 0b       	sbc	r29, r17
	}

	/*Рисуем линии*/
	LCD_12864_Draw_line(x, y, x + width, y); /*Верх прямоугольника*/
    1642:	de 2d       	mov	r29, r14
    1644:	d4 0f       	add	r29, r20
    1646:	20 2f       	mov	r18, r16
    1648:	4d 2f       	mov	r20, r29
    164a:	60 2f       	mov	r22, r16
    164c:	8e 2d       	mov	r24, r14
    164e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y + height, x + width, y + height); /*Низ прямоугольника*/
    1652:	c0 0f       	add	r28, r16
    1654:	2c 2f       	mov	r18, r28
    1656:	4d 2f       	mov	r20, r29
    1658:	6c 2f       	mov	r22, r28
    165a:	8e 2d       	mov	r24, r14
    165c:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x, y, x, y + height); /*Левая сторона прямоугольника*/
    1660:	2c 2f       	mov	r18, r28
    1662:	4e 2d       	mov	r20, r14
    1664:	60 2f       	mov	r22, r16
    1666:	8e 2d       	mov	r24, r14
    1668:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(x + width, y, x + width, y + height); /*Правая сторона прямоугольника*/
    166c:	2c 2f       	mov	r18, r28
    166e:	4d 2f       	mov	r20, r29
    1670:	60 2f       	mov	r22, r16
    1672:	8d 2f       	mov	r24, r29
    1674:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
}
    1678:	df 91       	pop	r29
    167a:	cf 91       	pop	r28
    167c:	1f 91       	pop	r17
    167e:	0f 91       	pop	r16
    1680:	ff 90       	pop	r15
    1682:	ef 90       	pop	r14
    1684:	08 95       	ret

00001686 <LCD_12864_Draw_rectangle_filled>:
/*-------------------------------Закрашенный прямоугольник---------------------------------*/
void LCD_12864_Draw_rectangle_filled(uint16_t x, uint16_t y, uint16_t width, uint16_t height) {
    1686:	af 92       	push	r10
    1688:	bf 92       	push	r11
    168a:	cf 92       	push	r12
    168c:	df 92       	push	r13
    168e:	ef 92       	push	r14
    1690:	ff 92       	push	r15
    1692:	0f 93       	push	r16
    1694:	1f 93       	push	r17
    1696:	cf 93       	push	r28
    1698:	8c 01       	movw	r16, r24
    169a:	6b 01       	movw	r12, r22
    169c:	5a 01       	movw	r10, r20
    169e:	79 01       	movw	r14, r18
	/// \param y - начальная точка по оси "y"
	/// \param width - ширина прямоугольника
	/// \param height - высота прямоугольника

	/*Проверка ширины и высоты*/
	if ((x + width) >= ST7920_width) {
    16a0:	9c 01       	movw	r18, r24
    16a2:	24 0f       	add	r18, r20
    16a4:	35 1f       	adc	r19, r21
    16a6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ST7920_width>
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	28 17       	cp	r18, r24
    16ae:	39 07       	cpc	r19, r25
    16b0:	18 f0       	brcs	.+6      	; 0x16b8 <LCD_12864_Draw_rectangle_filled+0x32>
		width = ST7920_width - x;
    16b2:	5c 01       	movw	r10, r24
    16b4:	a0 1a       	sub	r10, r16
    16b6:	b1 0a       	sbc	r11, r17
	}
	if ((y + height) >= ST7920_height) {
    16b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	96 01       	movw	r18, r12
    16c0:	2e 0d       	add	r18, r14
    16c2:	3f 1d       	adc	r19, r15
    16c4:	28 17       	cp	r18, r24
    16c6:	39 07       	cpc	r19, r25
    16c8:	18 f0       	brcs	.+6      	; 0x16d0 <LCD_12864_Draw_rectangle_filled+0x4a>
		height = ST7920_height - y;
    16ca:	7c 01       	movw	r14, r24
    16cc:	ec 18       	sub	r14, r12
    16ce:	fd 08       	sbc	r15, r13
	}

	/*Рисуем линии*/
	for (uint8_t i = 0; i <= height; i++) {
    16d0:	c0 e0       	ldi	r28, 0x00	; 0
    16d2:	09 c0       	rjmp	.+18     	; 0x16e6 <LCD_12864_Draw_rectangle_filled+0x60>
		LCD_12864_Draw_line(x, y + i, x + width, y + i);
    16d4:	6c 2f       	mov	r22, r28
    16d6:	6c 0d       	add	r22, r12
    16d8:	26 2f       	mov	r18, r22
    16da:	40 2f       	mov	r20, r16
    16dc:	4a 0d       	add	r20, r10
    16de:	80 2f       	mov	r24, r16
    16e0:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	if ((y + height) >= ST7920_height) {
		height = ST7920_height - y;
	}

	/*Рисуем линии*/
	for (uint8_t i = 0; i <= height; i++) {
    16e4:	cf 5f       	subi	r28, 0xFF	; 255
    16e6:	8c 2f       	mov	r24, r28
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	e8 16       	cp	r14, r24
    16ec:	f9 06       	cpc	r15, r25
    16ee:	90 f7       	brcc	.-28     	; 0x16d4 <LCD_12864_Draw_rectangle_filled+0x4e>
		LCD_12864_Draw_line(x, y + i, x + width, y + i);
	}
}
    16f0:	cf 91       	pop	r28
    16f2:	1f 91       	pop	r17
    16f4:	0f 91       	pop	r16
    16f6:	ff 90       	pop	r15
    16f8:	ef 90       	pop	r14
    16fa:	df 90       	pop	r13
    16fc:	cf 90       	pop	r12
    16fe:	bf 90       	pop	r11
    1700:	af 90       	pop	r10
    1702:	08 95       	ret

00001704 <LCD_12864_Draw_circle>:
/*---------------------------------Пустотелая окружность-----------------------------------*/
void LCD_12864_Draw_circle(uint8_t x, uint8_t y, uint8_t radius) {
    1704:	5f 92       	push	r5
    1706:	6f 92       	push	r6
    1708:	7f 92       	push	r7
    170a:	8f 92       	push	r8
    170c:	9f 92       	push	r9
    170e:	af 92       	push	r10
    1710:	bf 92       	push	r11
    1712:	cf 92       	push	r12
    1714:	df 92       	push	r13
    1716:	ef 92       	push	r14
    1718:	ff 92       	push	r15
    171a:	0f 93       	push	r16
    171c:	1f 93       	push	r17
    171e:	cf 93       	push	r28
    1720:	df 93       	push	r29
    1722:	78 2e       	mov	r7, r24
    1724:	66 2e       	mov	r6, r22
    1726:	c4 2f       	mov	r28, r20
	/// Вывести пустотелую окружность
	/// \param x - точка центра окружности по оси "x"
	/// \param y - точка центра окружности по оси "y"
	/// \param radius - радиус окружности

	int f = 1 - (int) radius;
    1728:	04 2f       	mov	r16, r20
    172a:	10 e0       	ldi	r17, 0x00	; 0
    172c:	81 e0       	ldi	r24, 0x01	; 1
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	6c 01       	movw	r12, r24
    1732:	c0 1a       	sub	r12, r16
    1734:	d1 0a       	sbc	r13, r17
	int ddF_x = 1;

	int ddF_y = -2 * (int) radius;
    1736:	aa 24       	eor	r10, r10
    1738:	bb 24       	eor	r11, r11
    173a:	a0 1a       	sub	r10, r16
    173c:	b1 0a       	sbc	r11, r17
    173e:	aa 0c       	add	r10, r10
    1740:	bb 1c       	adc	r11, r11
	int x_0 = 0;

	LCD_12864_Draw_pixel(x, y + radius);
    1742:	64 2f       	mov	r22, r20
    1744:	66 0d       	add	r22, r6
    1746:	87 2d       	mov	r24, r7
    1748:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x, y - radius);
    174c:	66 2d       	mov	r22, r6
    174e:	6c 1b       	sub	r22, r28
    1750:	87 2d       	mov	r24, r7
    1752:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x + radius, y);
    1756:	66 2d       	mov	r22, r6
    1758:	8c 2f       	mov	r24, r28
    175a:	87 0d       	add	r24, r7
    175c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x - radius, y);
    1760:	66 2d       	mov	r22, r6
    1762:	87 2d       	mov	r24, r7
    1764:	8c 1b       	sub	r24, r28
    1766:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>

	int f = 1 - (int) radius;
	int ddF_x = 1;

	int ddF_y = -2 * (int) radius;
	int x_0 = 0;
    176a:	c0 e0       	ldi	r28, 0x00	; 0
    176c:	d0 e0       	ldi	r29, 0x00	; 0
	/// \param x - точка центра окружности по оси "x"
	/// \param y - точка центра окружности по оси "y"
	/// \param radius - радиус окружности

	int f = 1 - (int) radius;
	int ddF_x = 1;
    176e:	88 24       	eor	r8, r8
    1770:	83 94       	inc	r8
    1772:	91 2c       	mov	r9, r1
	LCD_12864_Draw_pixel(x, y - radius);
	LCD_12864_Draw_pixel(x + radius, y);
	LCD_12864_Draw_pixel(x - radius, y);

	int y_0 = radius;
	while (x_0 < y_0) {
    1774:	3f c0       	rjmp	.+126    	; 0x17f4 <LCD_12864_Draw_circle+0xf0>
		if (f >= 0) {
    1776:	dd 20       	and	r13, r13
    1778:	3c f0       	brlt	.+14     	; 0x1788 <LCD_12864_Draw_circle+0x84>
			y_0--;
    177a:	01 50       	subi	r16, 0x01	; 1
    177c:	11 09       	sbc	r17, r1
			ddF_y += 2;
    177e:	82 e0       	ldi	r24, 0x02	; 2
    1780:	a8 0e       	add	r10, r24
    1782:	b1 1c       	adc	r11, r1
			f += ddF_y;
    1784:	ca 0c       	add	r12, r10
    1786:	db 1c       	adc	r13, r11
		}
		x_0++;
    1788:	21 96       	adiw	r28, 0x01	; 1
		ddF_x += 2;
    178a:	82 e0       	ldi	r24, 0x02	; 2
    178c:	88 0e       	add	r8, r24
    178e:	91 1c       	adc	r9, r1
		f += ddF_x;
    1790:	c8 0c       	add	r12, r8
    1792:	d9 1c       	adc	r13, r9
		LCD_12864_Draw_pixel(x + x_0, y + y_0);
    1794:	5c 2e       	mov	r5, r28
    1796:	57 0c       	add	r5, r7
    1798:	f6 2c       	mov	r15, r6
    179a:	f0 0e       	add	r15, r16
    179c:	6f 2d       	mov	r22, r15
    179e:	85 2d       	mov	r24, r5
    17a0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - x_0, y + y_0);
    17a4:	e7 2c       	mov	r14, r7
    17a6:	ec 1a       	sub	r14, r28
    17a8:	6f 2d       	mov	r22, r15
    17aa:	8e 2d       	mov	r24, r14
    17ac:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x + x_0, y - y_0);
    17b0:	f6 2c       	mov	r15, r6
    17b2:	f0 1a       	sub	r15, r16
    17b4:	6f 2d       	mov	r22, r15
    17b6:	85 2d       	mov	r24, r5
    17b8:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - x_0, y - y_0);
    17bc:	6f 2d       	mov	r22, r15
    17be:	8e 2d       	mov	r24, r14
    17c0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x + y_0, y + x_0);
    17c4:	fc 2e       	mov	r15, r28
    17c6:	f6 0c       	add	r15, r6
    17c8:	6f 2d       	mov	r22, r15
    17ca:	e7 2c       	mov	r14, r7
    17cc:	e0 0e       	add	r14, r16
    17ce:	8e 2d       	mov	r24, r14
    17d0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - y_0, y + x_0);
    17d4:	6f 2d       	mov	r22, r15
    17d6:	f7 2c       	mov	r15, r7
    17d8:	f0 1a       	sub	r15, r16
    17da:	8f 2d       	mov	r24, r15
    17dc:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x + y_0, y - x_0);
    17e0:	56 2c       	mov	r5, r6
    17e2:	5c 1a       	sub	r5, r28
    17e4:	65 2d       	mov	r22, r5
    17e6:	8e 2d       	mov	r24, r14
    17e8:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(x - y_0, y - x_0);
    17ec:	65 2d       	mov	r22, r5
    17ee:	8f 2d       	mov	r24, r15
    17f0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(x, y - radius);
	LCD_12864_Draw_pixel(x + radius, y);
	LCD_12864_Draw_pixel(x - radius, y);

	int y_0 = radius;
	while (x_0 < y_0) {
    17f4:	c0 17       	cp	r28, r16
    17f6:	d1 07       	cpc	r29, r17
    17f8:	0c f4       	brge	.+2      	; 0x17fc <LCD_12864_Draw_circle+0xf8>
    17fa:	bd cf       	rjmp	.-134    	; 0x1776 <LCD_12864_Draw_circle+0x72>
		LCD_12864_Draw_pixel(x + y_0, y + x_0);
		LCD_12864_Draw_pixel(x - y_0, y + x_0);
		LCD_12864_Draw_pixel(x + y_0, y - x_0);
		LCD_12864_Draw_pixel(x - y_0, y - x_0);
	}
}
    17fc:	df 91       	pop	r29
    17fe:	cf 91       	pop	r28
    1800:	1f 91       	pop	r17
    1802:	0f 91       	pop	r16
    1804:	ff 90       	pop	r15
    1806:	ef 90       	pop	r14
    1808:	df 90       	pop	r13
    180a:	cf 90       	pop	r12
    180c:	bf 90       	pop	r11
    180e:	af 90       	pop	r10
    1810:	9f 90       	pop	r9
    1812:	8f 90       	pop	r8
    1814:	7f 90       	pop	r7
    1816:	6f 90       	pop	r6
    1818:	5f 90       	pop	r5
    181a:	08 95       	ret

0000181c <timer_ini>:
uint8_t flag_irq = 1;


void timer_ini(void)//период 4сек
{
	TCCR1B |= (1<<WGM12); // устанавливаем режим СТС (сброс по совпадению)
    181c:	e1 e8       	ldi	r30, 0x81	; 129
    181e:	f0 e0       	ldi	r31, 0x00	; 0
    1820:	80 81       	ld	r24, Z
    1822:	88 60       	ori	r24, 0x08	; 8
    1824:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); //устанавливаем бит разрешения прерывания 1ого счетчика по совпадению с OCR1A(H и L)
    1826:	af e6       	ldi	r26, 0x6F	; 111
    1828:	b0 e0       	ldi	r27, 0x00	; 0
    182a:	8c 91       	ld	r24, X
    182c:	82 60       	ori	r24, 0x02	; 2
    182e:	8c 93       	st	X, r24
	OCR1AH = 0b11110100; //записываем в регистр число для сравнения
    1830:	84 ef       	ldi	r24, 0xF4	; 244
    1832:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0b00100100;
    1836:	84 e2       	ldi	r24, 0x24	; 36
    1838:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1B |= (1<<CS12)|(1<<CS10);//установим делитель 1024.
    183c:	80 81       	ld	r24, Z
    183e:	85 60       	ori	r24, 0x05	; 5
    1840:	80 83       	st	Z, r24
    1842:	08 95       	ret

00001844 <__vector_11>:
}
//——————————————–
ISR (TIMER1_COMPA_vect)
{
    1844:	1f 92       	push	r1
    1846:	0f 92       	push	r0
    1848:	0f b6       	in	r0, 0x3f	; 63
    184a:	0f 92       	push	r0
    184c:	11 24       	eor	r1, r1
    184e:	2f 93       	push	r18
    1850:	3f 93       	push	r19
    1852:	4f 93       	push	r20
    1854:	5f 93       	push	r21
    1856:	6f 93       	push	r22
    1858:	7f 93       	push	r23
    185a:	8f 93       	push	r24
    185c:	9f 93       	push	r25
    185e:	af 93       	push	r26
    1860:	bf 93       	push	r27
    1862:	ef 93       	push	r30
    1864:	ff 93       	push	r31
	if((strlen(temp_street)!=0)&&(strlen(hum_street)!=0)&&(strlen(WIND_speed)!=0)&&(strlen(Rain)!=0)&&(strlen(Vbat)!=0)&&(strlen(wind_direction)!=0))
    1866:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <temp_street>
    186a:	88 23       	and	r24, r24
    186c:	09 f4       	brne	.+2      	; 0x1870 <__vector_11+0x2c>
    186e:	4c c0       	rjmp	.+152    	; 0x1908 <__vector_11+0xc4>
    1870:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <hum_street>
    1874:	88 23       	and	r24, r24
    1876:	09 f4       	brne	.+2      	; 0x187a <__vector_11+0x36>
    1878:	47 c0       	rjmp	.+142    	; 0x1908 <__vector_11+0xc4>
    187a:	80 91 55 02 	lds	r24, 0x0255	; 0x800255 <WIND_speed>
    187e:	88 23       	and	r24, r24
    1880:	09 f4       	brne	.+2      	; 0x1884 <__vector_11+0x40>
    1882:	42 c0       	rjmp	.+132    	; 0x1908 <__vector_11+0xc4>
    1884:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <Rain>
    1888:	88 23       	and	r24, r24
    188a:	f1 f1       	breq	.+124    	; 0x1908 <__vector_11+0xc4>
    188c:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <Vbat>
    1890:	88 23       	and	r24, r24
    1892:	d1 f1       	breq	.+116    	; 0x1908 <__vector_11+0xc4>
    1894:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <wind_direction>
    1898:	88 23       	and	r24, r24
    189a:	b1 f1       	breq	.+108    	; 0x1908 <__vector_11+0xc4>
	{
		//отправка строки по UART в формате: ул.темп./скор.ветра/осадки/ул.влажность/заряд АКБ/направл.ветра
	    sprintf(DATA_TO_UART,"%s ",temp_street);
    189c:	87 e8       	ldi	r24, 0x87	; 135
    189e:	92 e0       	ldi	r25, 0x02	; 2
    18a0:	9f 93       	push	r25
    18a2:	8f 93       	push	r24
    18a4:	86 e3       	ldi	r24, 0x36	; 54
    18a6:	91 e0       	ldi	r25, 0x01	; 1
    18a8:	9f 93       	push	r25
    18aa:	8f 93       	push	r24
    18ac:	81 ef       	ldi	r24, 0xF1	; 241
    18ae:	91 e0       	ldi	r25, 0x01	; 1
    18b0:	9f 93       	push	r25
    18b2:	8f 93       	push	r24
    18b4:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
		strcat(DATA_TO_UART,WIND_speed);
    18b8:	65 e5       	ldi	r22, 0x55	; 85
    18ba:	72 e0       	ldi	r23, 0x02	; 2
    18bc:	81 ef       	ldi	r24, 0xF1	; 241
    18be:	91 e0       	ldi	r25, 0x01	; 1
    18c0:	0e 94 49 2c 	call	0x5892	; 0x5892 <strcat>
		strcat(DATA_TO_UART,Rain);
    18c4:	63 e2       	ldi	r22, 0x23	; 35
    18c6:	72 e0       	ldi	r23, 0x02	; 2
    18c8:	81 ef       	ldi	r24, 0xF1	; 241
    18ca:	91 e0       	ldi	r25, 0x01	; 1
    18cc:	0e 94 49 2c 	call	0x5892	; 0x5892 <strcat>
		strcat(DATA_TO_UART,hum_street);
    18d0:	6d e7       	ldi	r22, 0x7D	; 125
    18d2:	72 e0       	ldi	r23, 0x02	; 2
    18d4:	81 ef       	ldi	r24, 0xF1	; 241
    18d6:	91 e0       	ldi	r25, 0x01	; 1
    18d8:	0e 94 49 2c 	call	0x5892	; 0x5892 <strcat>
		strcat(DATA_TO_UART,Vbat);
    18dc:	6d e2       	ldi	r22, 0x2D	; 45
    18de:	72 e0       	ldi	r23, 0x02	; 2
    18e0:	81 ef       	ldi	r24, 0xF1	; 241
    18e2:	91 e0       	ldi	r25, 0x01	; 1
    18e4:	0e 94 49 2c 	call	0x5892	; 0x5892 <strcat>
		strcat(DATA_TO_UART,wind_direction);
    18e8:	6b e4       	ldi	r22, 0x4B	; 75
    18ea:	72 e0       	ldi	r23, 0x02	; 2
    18ec:	81 ef       	ldi	r24, 0xF1	; 241
    18ee:	91 e0       	ldi	r25, 0x01	; 1
    18f0:	0e 94 49 2c 	call	0x5892	; 0x5892 <strcat>
		USART_Transmit(DATA_TO_UART);
    18f4:	81 ef       	ldi	r24, 0xF1	; 241
    18f6:	91 e0       	ldi	r25, 0x01	; 1
    18f8:	0e 94 e2 19 	call	0x33c4	; 0x33c4 <USART_Transmit>
    18fc:	0f 90       	pop	r0
    18fe:	0f 90       	pop	r0
    1900:	0f 90       	pop	r0
    1902:	0f 90       	pop	r0
    1904:	0f 90       	pop	r0
    1906:	0f 90       	pop	r0
	}
}
    1908:	ff 91       	pop	r31
    190a:	ef 91       	pop	r30
    190c:	bf 91       	pop	r27
    190e:	af 91       	pop	r26
    1910:	9f 91       	pop	r25
    1912:	8f 91       	pop	r24
    1914:	7f 91       	pop	r23
    1916:	6f 91       	pop	r22
    1918:	5f 91       	pop	r21
    191a:	4f 91       	pop	r20
    191c:	3f 91       	pop	r19
    191e:	2f 91       	pop	r18
    1920:	0f 90       	pop	r0
    1922:	0f be       	out	0x3f, r0	; 63
    1924:	0f 90       	pop	r0
    1926:	1f 90       	pop	r1
    1928:	18 95       	reti

0000192a <SPI_init>:

void SPI_init(void) //инициализация SPI
{
	DDRB |= ((1<<SS)|(1<<MOSI)|(1<<CE)|(1<<SCK)); //ножки SPI на выход
    192a:	84 b1       	in	r24, 0x04	; 4
    192c:	8e 62       	ori	r24, 0x2E	; 46
    192e:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<SS)|(1<<MOSI)|(1<<SCK)); //низкий уровень
    1930:	85 b1       	in	r24, 0x05	; 5
    1932:	83 7d       	andi	r24, 0xD3	; 211
    1934:	85 b9       	out	0x05, r24	; 5
	DDRD &= ~(1<<IRQ);
    1936:	8a b1       	in	r24, 0x0a	; 10
    1938:	8b 7f       	andi	r24, 0xFB	; 251
    193a:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<IRQ);
    193c:	8b b1       	in	r24, 0x0b	; 11
    193e:	84 60       	ori	r24, 0x04	; 4
    1940:	8b b9       	out	0x0b, r24	; 11
	HIGH_CSN;
    1942:	85 b1       	in	r24, 0x05	; 5
    1944:	84 60       	ori	r24, 0x04	; 4
    1946:	85 b9       	out	0x05, r24	; 5
	SPCR = ((1<<SPE)|(1<<MSTR));//включим шину, объявим ведущим
    1948:	80 e5       	ldi	r24, 0x50	; 80
    194a:	8c bd       	out	0x2c, r24	; 44
    194c:	08 95       	ret

0000194e <port_init>:
}
//-------------------------------------------------------------
void port_init(void)
{
	//инициализация портов для светодиода
	DDRD |= (1 << LED);//led
    194e:	8a b1       	in	r24, 0x0a	; 10
    1950:	80 61       	ori	r24, 0x10	; 16
    1952:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~ (1 << LED);
    1954:	8b b1       	in	r24, 0x0b	; 11
    1956:	8f 7e       	andi	r24, 0xEF	; 239
    1958:	8b b9       	out	0x0b, r24	; 11
	
	//инициализация портов для LCD12864
	DDRD |= (1<<RS);//ножка RS на выход для LCD12864
    195a:	8a b1       	in	r24, 0x0a	; 10
    195c:	80 68       	ori	r24, 0x80	; 128
    195e:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RS);
    1960:	8b b1       	in	r24, 0x0b	; 11
    1962:	8f 77       	andi	r24, 0x7F	; 127
    1964:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<E);
    1966:	8a b1       	in	r24, 0x0a	; 10
    1968:	80 62       	ori	r24, 0x20	; 32
    196a:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<E);
    196c:	8b b1       	in	r24, 0x0b	; 11
    196e:	8f 7d       	andi	r24, 0xDF	; 223
    1970:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1<<RW);
    1972:	8a b1       	in	r24, 0x0a	; 10
    1974:	80 64       	ori	r24, 0x40	; 64
    1976:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<RW);
    1978:	8b b1       	in	r24, 0x0b	; 11
    197a:	8f 7b       	andi	r24, 0xBF	; 191
    197c:	8b b9       	out	0x0b, r24	; 11
    197e:	08 95       	ret

00001980 <spi_send_recv>:
	 DDRC|=(1<<MOSI_SD)|(1<<SCK_SD);*/
} 
//-------------------------------------------------------------
uint8_t spi_send_recv(uint8_t data) // Передаёт и принимает 1 байт по SPI, возвращает полученное значение
{
	SPDR = data;
    1980:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF)));
    1982:	0d b4       	in	r0, 0x2d	; 45
    1984:	07 fe       	sbrs	r0, 7
    1986:	fd cf       	rjmp	.-6      	; 0x1982 <spi_send_recv+0x2>
	return SPDR;
    1988:	8e b5       	in	r24, 0x2e	; 46
}
    198a:	08 95       	ret

0000198c <main>:
void main(void)
{	
	port_init();
    198c:	0e 94 a7 0c 	call	0x194e	; 0x194e <port_init>
	PORTD |= (1<<LED);
    1990:	8b b1       	in	r24, 0x0b	; 11
    1992:	80 61       	ori	r24, 0x10	; 16
    1994:	8b b9       	out	0x0b, r24	; 11
	LCD_12864_ini();
    1996:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_12864_ini>
	//очистка дисплея
	LCD_12864_GrapnicMode(1);
    199a:	81 e0       	ldi	r24, 0x01	; 1
    199c:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
	LCD_12864_Clean_Frame_buffer();
    19a0:	0e 94 95 0a 	call	0x152a	; 0x152a <LCD_12864_Clean_Frame_buffer>
	LCD_12864_Draw_bitmap(Frame_buffer);
    19a4:	81 e9       	ldi	r24, 0x91	; 145
    19a6:	92 e0       	ldi	r25, 0x02	; 2
    19a8:	0e 94 25 05 	call	0xa4a	; 0xa4a <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
    19ac:	80 e0       	ldi	r24, 0x00	; 0
    19ae:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
	//Вывод приветствия
	Print_Hello_World(Frame_buffer);
    19b2:	81 e9       	ldi	r24, 0x91	; 145
    19b4:	92 e0       	ldi	r25, 0x02	; 2
    19b6:	0e 94 fd 19 	call	0x33fa	; 0x33fa <Print_Hello_World>
	//Инициализация 
	SPI_init();
    19ba:	0e 94 95 0c 	call	0x192a	; 0x192a <SPI_init>
	timer_ini();
    19be:	0e 94 0e 0c 	call	0x181c	; 0x181c <timer_ini>
	I2C_Init();
    19c2:	0e 94 9e 19 	call	0x333c	; 0x333c <I2C_Init>
    USART_Init(16);    //Инициализация модуля USART скорость 115200
    19c6:	80 e1       	ldi	r24, 0x10	; 16
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	0e 94 cc 19 	call	0x3398	; 0x3398 <USART_Init>
	NRF24_ini();
    19ce:	0e 94 ab 11 	call	0x2356	; 0x2356 <NRF24_ini>
	RTC_init();
    19d2:	0e 94 48 19 	call	0x3290	; 0x3290 <RTC_init>
	dht22_init();
    19d6:	0e 94 87 03 	call	0x70e	; 0x70e <dht22_init>
	BMP180_Calibration();
    19da:	0e 94 14 01 	call	0x228	; 0x228 <BMP180_Calibration>
	// Установка времени для DS3231(делается 1 разv)
	//RTC_write_time(13, 30, 0);
	//RTC_write_date(2, 28, 6, 22);
	// настраиваем параметры прерывания
	EICRA = (1<<ISC01) | (0<<ISC00);
    19de:	82 e0       	ldi	r24, 0x02	; 2
    19e0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT0);
    19e4:	81 e0       	ldi	r24, 0x01	; 1
    19e6:	8d bb       	out	0x1d, r24	; 29
	// и разрешаем его глобально
	sei();
    19e8:	78 94       	sei
	//Вывод окна загрузки
	Print_Download(Frame_buffer);
    19ea:	81 e9       	ldi	r24, 0x91	; 145
    19ec:	92 e0       	ldi	r25, 0x02	; 2
    19ee:	0e 94 27 1a 	call	0x344e	; 0x344e <Print_Download>
	PORTD &= ~(1<<LED);
    19f2:	8b b1       	in	r24, 0x0b	; 11
    19f4:	8f 7e       	andi	r24, 0xEF	; 239
    19f6:	8b b9       	out	0x0b, r24	; 11
    while (1) 
    {
		Print_Home_Page(Frame_buffer);
    19f8:	81 e9       	ldi	r24, 0x91	; 145
    19fa:	92 e0       	ldi	r25, 0x02	; 2
    19fc:	0e 94 d1 22 	call	0x45a2	; 0x45a2 <Print_Home_Page>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a00:	2f ef       	ldi	r18, 0xFF	; 255
    1a02:	87 ea       	ldi	r24, 0xA7	; 167
    1a04:	91 e6       	ldi	r25, 0x61	; 97
    1a06:	21 50       	subi	r18, 0x01	; 1
    1a08:	80 40       	sbci	r24, 0x00	; 0
    1a0a:	90 40       	sbci	r25, 0x00	; 0
    1a0c:	e1 f7       	brne	.-8      	; 0x1a06 <main+0x7a>
    1a0e:	00 c0       	rjmp	.+0      	; 0x1a10 <main+0x84>
    1a10:	00 00       	nop
    1a12:	f2 cf       	rjmp	.-28     	; 0x19f8 <main+0x6c>

00001a14 <xmit_spi>:
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    1a14:	20 e0       	ldi	r18, 0x00	; 0
    1a16:	12 c0       	rjmp	.+36     	; 0x1a3c <xmit_spi+0x28>
  {
   if ((data&0x80)==0x00) PORTC&=~_BV(SD_DI);
    1a18:	88 23       	and	r24, r24
    1a1a:	24 f0       	brlt	.+8      	; 0x1a24 <xmit_spi+0x10>
    1a1c:	98 b1       	in	r25, 0x08	; 8
    1a1e:	9b 7f       	andi	r25, 0xFB	; 251
    1a20:	98 b9       	out	0x08, r25	; 8
    1a22:	03 c0       	rjmp	.+6      	; 0x1a2a <xmit_spi+0x16>
                     else PORTC|=_BV(SD_DI);
    1a24:	98 b1       	in	r25, 0x08	; 8
    1a26:	94 60       	ori	r25, 0x04	; 4
    1a28:	98 b9       	out	0x08, r25	; 8
   data=data<<1; 
    1a2a:	88 0f       	add	r24, r24
   PORTC|=_BV(SD_CLK);
    1a2c:	98 b1       	in	r25, 0x08	; 8
    1a2e:	98 60       	ori	r25, 0x08	; 8
    1a30:	98 b9       	out	0x08, r25	; 8
   asm("nop"); 
    1a32:	00 00       	nop
   PORTC&=~_BV(SD_CLK);
    1a34:	98 b1       	in	r25, 0x08	; 8
    1a36:	97 7f       	andi	r25, 0xF7	; 247
    1a38:	98 b9       	out	0x08, r25	; 8
// SPI functions
//-----------------------------------------------------------------------
void xmit_spi (BYTE data)		// Send a byte 
{ BYTE i;

 for (i=0;i<8;i++)
    1a3a:	2f 5f       	subi	r18, 0xFF	; 255
    1a3c:	28 30       	cpi	r18, 0x08	; 8
    1a3e:	60 f3       	brcs	.-40     	; 0x1a18 <xmit_spi+0x4>
   data=data<<1; 
   PORTC|=_BV(SD_CLK);
   asm("nop"); 
   PORTC&=~_BV(SD_CLK);
  }
}
    1a40:	08 95       	ret

00001a42 <rcv_spi>:

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);
    1a42:	88 b1       	in	r24, 0x08	; 8
    1a44:	84 60       	ori	r24, 0x04	; 4
    1a46:	88 b9       	out	0x08, r24	; 8
   PORTC&=~_BV(SD_CLK);
  }
}

BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;
    1a48:	80 e0       	ldi	r24, 0x00	; 0

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
    1a4a:	20 e0       	ldi	r18, 0x00	; 0
    1a4c:	0b c0       	rjmp	.+22     	; 0x1a64 <rcv_spi+0x22>
  {
   PORTC|=_BV(SD_CLK);
    1a4e:	98 b1       	in	r25, 0x08	; 8
    1a50:	98 60       	ori	r25, 0x08	; 8
    1a52:	98 b9       	out	0x08, r25	; 8
   res=res<<1;
    1a54:	88 0f       	add	r24, r24
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
    1a56:	31 99       	sbic	0x06, 1	; 6
    1a58:	81 60       	ori	r24, 0x01	; 1
   PORTC&=~_BV(SD_CLK);
    1a5a:	98 b1       	in	r25, 0x08	; 8
    1a5c:	97 7f       	andi	r25, 0xF7	; 247
    1a5e:	98 b9       	out	0x08, r25	; 8
   asm("nop");
    1a60:	00 00       	nop
BYTE rcv_spi (void)				// Send 0xFF and receive a byte 
{ BYTE i, res=0;

 PORTC|=_BV(SD_DI);

 for (i=0;i<8;i++)
    1a62:	2f 5f       	subi	r18, 0xFF	; 255
    1a64:	28 30       	cpi	r18, 0x08	; 8
    1a66:	98 f3       	brcs	.-26     	; 0x1a4e <rcv_spi+0xc>
   if ((PINC&_BV(SD_DO))!=0x00) res=res|0x01;
   PORTC&=~_BV(SD_CLK);
   asm("nop");
  }
 return res;
}	/* Send 0xFF and receive a byte */
    1a68:	08 95       	ret

00001a6a <send_cmd>:
static
BYTE send_cmd (
	BYTE cmd,		// Command byte 
	DWORD arg		// Argument 
)
{
    1a6a:	ff 92       	push	r15
    1a6c:	0f 93       	push	r16
    1a6e:	1f 93       	push	r17
    1a70:	cf 93       	push	r28
    1a72:	df 93       	push	r29
    1a74:	c8 2f       	mov	r28, r24
    1a76:	d4 2f       	mov	r29, r20
    1a78:	15 2f       	mov	r17, r21
    1a7a:	06 2f       	mov	r16, r22
    1a7c:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	// ACMD<n> is the command sequense of CMD55-CMD<n> 
    1a7e:	88 23       	and	r24, r24
    1a80:	4c f4       	brge	.+18     	; 0x1a94 <send_cmd+0x2a>
		cmd &= 0x7F;
    1a82:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
    1a84:	40 e0       	ldi	r20, 0x00	; 0
    1a86:	50 e0       	ldi	r21, 0x00	; 0
    1a88:	ba 01       	movw	r22, r20
    1a8a:	87 e7       	ldi	r24, 0x77	; 119
    1a8c:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
		if (res > 1) return res;
    1a90:	82 30       	cpi	r24, 0x02	; 2
    1a92:	50 f5       	brcc	.+84     	; 0x1ae8 <send_cmd+0x7e>
	}

	// Select the card 
	DESELECT();
    1a94:	85 b1       	in	r24, 0x05	; 5
    1a96:	81 60       	ori	r24, 0x01	; 1
    1a98:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
    1a9a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
	SELECT();
    1a9e:	85 b1       	in	r24, 0x05	; 5
    1aa0:	8e 7f       	andi	r24, 0xFE	; 254
    1aa2:	85 b9       	out	0x05, r24	; 5
	rcv_spi();
    1aa4:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>

	// Send a command packet 
	xmit_spi(cmd);						// Start + Command index 
    1aa8:	8c 2f       	mov	r24, r28
    1aaa:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
    1aae:	8f 2d       	mov	r24, r15
    1ab0:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
    1ab4:	80 2f       	mov	r24, r16
    1ab6:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
    1aba:	81 2f       	mov	r24, r17
    1abc:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
	xmit_spi((BYTE)arg);				// Argument[7..0] 
    1ac0:	8d 2f       	mov	r24, r29
    1ac2:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
	n = 0x01;							// Dummy CRC + Stop 
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    1ac6:	c0 34       	cpi	r28, 0x40	; 64
    1ac8:	11 f0       	breq	.+4      	; 0x1ace <send_cmd+0x64>
	xmit_spi(cmd);						// Start + Command index 
	xmit_spi((BYTE)(arg >> 24));		// Argument[31..24] 
	xmit_spi((BYTE)(arg >> 16));		// Argument[23..16] 
	xmit_spi((BYTE)(arg >> 8));			// Argument[15..8] 
	xmit_spi((BYTE)arg);				// Argument[7..0] 
	n = 0x01;							// Dummy CRC + Stop 
    1aca:	81 e0       	ldi	r24, 0x01	; 1
    1acc:	01 c0       	rjmp	.+2      	; 0x1ad0 <send_cmd+0x66>
	if (cmd == CMD0) n = 0x95;			// Valid CRC for CMD0(0) 
    1ace:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;			// Valid CRC for CMD8(0x1AA) 
    1ad0:	c8 34       	cpi	r28, 0x48	; 72
    1ad2:	09 f4       	brne	.+2      	; 0x1ad6 <send_cmd+0x6c>
    1ad4:	87 e8       	ldi	r24, 0x87	; 135
	xmit_spi(n);
    1ad6:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>

	// Receive a command response 
	n = 10;								// Wait for a valid response in timeout of 10 attempts 
    1ada:	ca e0       	ldi	r28, 0x0A	; 10
	do {
		res = rcv_spi();
    1adc:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
	} while ((res & 0x80) && --n);
    1ae0:	88 23       	and	r24, r24
    1ae2:	14 f4       	brge	.+4      	; 0x1ae8 <send_cmd+0x7e>
    1ae4:	c1 50       	subi	r28, 0x01	; 1
    1ae6:	d1 f7       	brne	.-12     	; 0x1adc <send_cmd+0x72>

	return res;			// Return with the response value 
}
    1ae8:	df 91       	pop	r29
    1aea:	cf 91       	pop	r28
    1aec:	1f 91       	pop	r17
    1aee:	0f 91       	pop	r16
    1af0:	ff 90       	pop	r15
    1af2:	08 95       	ret

00001af4 <release_spi>:
// Deselect the card and release SPI bus                                 
//-----------------------------------------------------------------------
static
void release_spi (void)
{
	rcv_spi();
    1af4:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1af8:	08 95       	ret

00001afa <disk_readp>:
	BYTE *buff,		// Pointer to the read buffer (NULL:Read bytes are forwarded to the stream) 
	DWORD lba,		// Sector number (LBA) 
	WORD ofs,		// Byte offset to read from (0..511) 
	WORD cnt		// Number of bytes to read (ofs + cnt mus be <= 512) 
)
{
    1afa:	cf 92       	push	r12
    1afc:	df 92       	push	r13
    1afe:	ef 92       	push	r14
    1b00:	ff 92       	push	r15
    1b02:	0f 93       	push	r16
    1b04:	1f 93       	push	r17
    1b06:	cf 93       	push	r28
    1b08:	df 93       	push	r29
    1b0a:	7c 01       	movw	r14, r24
    1b0c:	69 01       	movw	r12, r18
	BYTE rc;
	WORD bc;

//	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;

	if (!(CardType & CT_BLOCK))
    1b0e:	80 91 93 06 	lds	r24, 0x0693	; 0x800693 <CardType>
    1b12:	83 fd       	sbrc	r24, 3
    1b14:	09 c0       	rjmp	.+18     	; 0x1b28 <disk_readp+0x2e>
	{
		lba *= 512;		// Convert to byte address if needed 
    1b16:	03 2e       	mov	r0, r19
    1b18:	39 e0       	ldi	r19, 0x09	; 9
    1b1a:	44 0f       	add	r20, r20
    1b1c:	55 1f       	adc	r21, r21
    1b1e:	66 1f       	adc	r22, r22
    1b20:	77 1f       	adc	r23, r23
    1b22:	3a 95       	dec	r19
    1b24:	d1 f7       	brne	.-12     	; 0x1b1a <disk_readp+0x20>
    1b26:	30 2d       	mov	r19, r0
	}
	res = RES_ERROR;
	if (send_cmd(CMD17, lba) == 0) {		// READ_SINGLE_BLOCK 
    1b28:	81 e5       	ldi	r24, 0x51	; 81
    1b2a:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1b2e:	81 11       	cpse	r24, r1
    1b30:	34 c0       	rjmp	.+104    	; 0x1b9a <disk_readp+0xa0>
    1b32:	c0 e3       	ldi	r28, 0x30	; 48
    1b34:	d5 e7       	ldi	r29, 0x75	; 117
		bc = 30000;
		do {							// Wait for data packet in timeout of 100ms 
			rc = rcv_spi();
    1b36:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
		} while (rc == 0xFF && --bc);
    1b3a:	8f 3f       	cpi	r24, 0xFF	; 255
    1b3c:	11 f4       	brne	.+4      	; 0x1b42 <disk_readp+0x48>
    1b3e:	21 97       	sbiw	r28, 0x01	; 1
    1b40:	d1 f7       	brne	.-12     	; 0x1b36 <disk_readp+0x3c>

		if (rc == 0xFE) {				// A data packet arrived 
    1b42:	8e 3f       	cpi	r24, 0xFE	; 254
    1b44:	61 f5       	brne	.+88     	; 0x1b9e <disk_readp+0xa4>
			bc = 514 - ofs - cnt;
    1b46:	cc 27       	eor	r28, r28
    1b48:	dd 27       	eor	r29, r29
    1b4a:	cc 19       	sub	r28, r12
    1b4c:	dd 09       	sbc	r29, r13
    1b4e:	c0 1b       	sub	r28, r16
    1b50:	d1 0b       	sbc	r29, r17
    1b52:	ce 5f       	subi	r28, 0xFE	; 254
    1b54:	dd 4f       	sbci	r29, 0xFD	; 253

			// Skip leading bytes 
			if (ofs) {
    1b56:	c1 14       	cp	r12, r1
    1b58:	d1 04       	cpc	r13, r1
    1b5a:	31 f0       	breq	.+12     	; 0x1b68 <disk_readp+0x6e>
				do rcv_spi(); while (--ofs);
    1b5c:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	c8 1a       	sub	r12, r24
    1b64:	d1 08       	sbc	r13, r1
    1b66:	d1 f7       	brne	.-12     	; 0x1b5c <disk_readp+0x62>
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
    1b68:	e1 14       	cp	r14, r1
    1b6a:	f1 04       	cpc	r15, r1
    1b6c:	69 f0       	breq	.+26     	; 0x1b88 <disk_readp+0x8e>
				do
					*buff++ = rcv_spi();
    1b6e:	67 01       	movw	r12, r14
    1b70:	ef ef       	ldi	r30, 0xFF	; 255
    1b72:	ce 1a       	sub	r12, r30
    1b74:	de 0a       	sbc	r13, r30
    1b76:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1b7a:	f7 01       	movw	r30, r14
    1b7c:	80 83       	st	Z, r24
				while (--cnt);
    1b7e:	01 50       	subi	r16, 0x01	; 1
    1b80:	11 09       	sbc	r17, r1
			}

			// Receive a part of the sector 
			if (buff) {	// Store data to the memory 
				do
					*buff++ = rcv_spi();
    1b82:	76 01       	movw	r14, r12
				while (--cnt);
    1b84:	a1 f7       	brne	.-24     	; 0x1b6e <disk_readp+0x74>
    1b86:	03 c0       	rjmp	.+6      	; 0x1b8e <disk_readp+0x94>
			} else {	// Forward data to the outgoing stream (depends on the project) 
				do 
                ;//uart_transmit(rcv_spi());		// (Console output) 
				while (--cnt);
    1b88:	01 50       	subi	r16, 0x01	; 1
    1b8a:	11 09       	sbc	r17, r1
    1b8c:	e9 f7       	brne	.-6      	; 0x1b88 <disk_readp+0x8e>
			}

			// Skip trailing bytes and CRC 
			do rcv_spi(); while (--bc);
    1b8e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1b92:	21 97       	sbiw	r28, 0x01	; 1
    1b94:	e1 f7       	brne	.-8      	; 0x1b8e <disk_readp+0x94>

			res = RES_OK;
    1b96:	c0 e0       	ldi	r28, 0x00	; 0
    1b98:	03 c0       	rjmp	.+6      	; 0x1ba0 <disk_readp+0xa6>

	if (!(CardType & CT_BLOCK))
	{
		lba *= 512;		// Convert to byte address if needed 
	}
	res = RES_ERROR;
    1b9a:	c1 e0       	ldi	r28, 0x01	; 1
    1b9c:	01 c0       	rjmp	.+2      	; 0x1ba0 <disk_readp+0xa6>
    1b9e:	c1 e0       	ldi	r28, 0x01	; 1

			res = RES_OK;
		}
	}

	release_spi();
    1ba0:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <release_spi>

	return res;
}
    1ba4:	8c 2f       	mov	r24, r28
    1ba6:	df 91       	pop	r29
    1ba8:	cf 91       	pop	r28
    1baa:	1f 91       	pop	r17
    1bac:	0f 91       	pop	r16
    1bae:	ff 90       	pop	r15
    1bb0:	ef 90       	pop	r14
    1bb2:	df 90       	pop	r13
    1bb4:	cf 90       	pop	r12
    1bb6:	08 95       	ret

00001bb8 <disk_writep>:

DRESULT disk_writep (
	const BYTE *buff,	// Pointer to the bytes to be written (NULL:Initiate/Finalize sector write) 
	DWORD sa			// Number of bytes to send, Sector number (LBA) or zero 
)
{
    1bb8:	0f 93       	push	r16
    1bba:	1f 93       	push	r17
    1bbc:	cf 93       	push	r28
    1bbe:	df 93       	push	r29
    1bc0:	fc 01       	movw	r30, r24
// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
    1bc2:	89 2b       	or	r24, r25
    1bc4:	f1 f0       	breq	.+60     	; 0x1c02 <disk_writep+0x4a>
		bc = (WORD)sa;
    1bc6:	ea 01       	movw	r28, r20
		while (bc && wc) {		// Send data bytes to the card 
    1bc8:	11 c0       	rjmp	.+34     	; 0x1bec <disk_writep+0x34>
			xmit_spi(*buff++);
    1bca:	8f 01       	movw	r16, r30
    1bcc:	0f 5f       	subi	r16, 0xFF	; 255
    1bce:	1f 4f       	sbci	r17, 0xFF	; 255
    1bd0:	80 81       	ld	r24, Z
    1bd2:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
			wc--; bc--;
    1bd6:	80 91 91 06 	lds	r24, 0x0691	; 0x800691 <wc.1710>
    1bda:	90 91 92 06 	lds	r25, 0x0692	; 0x800692 <wc.1710+0x1>
    1bde:	01 97       	sbiw	r24, 0x01	; 1
    1be0:	90 93 92 06 	sts	0x0692, r25	; 0x800692 <wc.1710+0x1>
    1be4:	80 93 91 06 	sts	0x0691, r24	; 0x800691 <wc.1710>
    1be8:	21 97       	sbiw	r28, 0x01	; 1
	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
    1bea:	f8 01       	movw	r30, r16

	res = RES_ERROR;

	if (buff) {		// Send data bytes 
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
    1bec:	20 97       	sbiw	r28, 0x00	; 0
    1bee:	09 f4       	brne	.+2      	; 0x1bf2 <disk_writep+0x3a>
    1bf0:	54 c0       	rjmp	.+168    	; 0x1c9a <disk_writep+0xe2>
    1bf2:	80 91 91 06 	lds	r24, 0x0691	; 0x800691 <wc.1710>
    1bf6:	90 91 92 06 	lds	r25, 0x0692	; 0x800692 <wc.1710+0x1>
    1bfa:	89 2b       	or	r24, r25
    1bfc:	31 f7       	brne	.-52     	; 0x1bca <disk_writep+0x12>
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    1bfe:	c0 e0       	ldi	r28, 0x00	; 0
    1c00:	4f c0       	rjmp	.+158    	; 0x1ca0 <disk_writep+0xe8>
	} else {
		if (sa) {	// Initiate sector write process 
    1c02:	41 15       	cp	r20, r1
    1c04:	51 05       	cpc	r21, r1
    1c06:	61 05       	cpc	r22, r1
    1c08:	71 05       	cpc	r23, r1
    1c0a:	01 f1       	breq	.+64     	; 0x1c4c <disk_writep+0x94>
			if (!(CardType & CT_BLOCK)) sa *= 512;	// Convert to byte address if needed 
    1c0c:	80 91 93 06 	lds	r24, 0x0693	; 0x800693 <CardType>
    1c10:	83 fd       	sbrc	r24, 3
    1c12:	09 c0       	rjmp	.+18     	; 0x1c26 <disk_writep+0x6e>
    1c14:	03 2e       	mov	r0, r19
    1c16:	39 e0       	ldi	r19, 0x09	; 9
    1c18:	44 0f       	add	r20, r20
    1c1a:	55 1f       	adc	r21, r21
    1c1c:	66 1f       	adc	r22, r22
    1c1e:	77 1f       	adc	r23, r23
    1c20:	3a 95       	dec	r19
    1c22:	d1 f7       	brne	.-12     	; 0x1c18 <disk_writep+0x60>
    1c24:	30 2d       	mov	r19, r0
			if (send_cmd(CMD24, sa) == 0) {			// WRITE_SINGLE_BLOCK 
    1c26:	88 e5       	ldi	r24, 0x58	; 88
    1c28:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1c2c:	81 11       	cpse	r24, r1
    1c2e:	37 c0       	rjmp	.+110    	; 0x1c9e <disk_writep+0xe6>
				xmit_spi(0xFF); xmit_spi(0xFE);		// Data block header 
    1c30:	8f ef       	ldi	r24, 0xFF	; 255
    1c32:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
    1c36:	8e ef       	ldi	r24, 0xFE	; 254
    1c38:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
				wc = 512;							// Set byte counter 
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	92 e0       	ldi	r25, 0x02	; 2
    1c40:	90 93 92 06 	sts	0x0692, r25	; 0x800692 <wc.1710+0x1>
    1c44:	80 93 91 06 	sts	0x0691, r24	; 0x800691 <wc.1710>
				res = RES_OK;
    1c48:	c0 e0       	ldi	r28, 0x00	; 0
    1c4a:	2a c0       	rjmp	.+84     	; 0x1ca0 <disk_writep+0xe8>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
    1c4c:	80 91 91 06 	lds	r24, 0x0691	; 0x800691 <wc.1710>
    1c50:	90 91 92 06 	lds	r25, 0x0692	; 0x800692 <wc.1710+0x1>
    1c54:	02 96       	adiw	r24, 0x02	; 2
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
    1c56:	04 c0       	rjmp	.+8      	; 0x1c60 <disk_writep+0xa8>
    1c58:	80 e0       	ldi	r24, 0x00	; 0
    1c5a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <xmit_spi>
    1c5e:	ce 01       	movw	r24, r28
    1c60:	ec 01       	movw	r28, r24
    1c62:	21 97       	sbiw	r28, 0x01	; 1
    1c64:	89 2b       	or	r24, r25
    1c66:	c1 f7       	brne	.-16     	; 0x1c58 <disk_writep+0xa0>
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
    1c68:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1c6c:	8f 71       	andi	r24, 0x1F	; 31
    1c6e:	85 30       	cpi	r24, 0x05	; 5
    1c70:	21 f0       	breq	.+8      	; 0x1c7a <disk_writep+0xc2>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1c72:	c1 e0       	ldi	r28, 0x01	; 1
    1c74:	0f c0       	rjmp	.+30     	; 0x1c94 <disk_writep+0xdc>
			}
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
    1c76:	21 97       	sbiw	r28, 0x01	; 1
    1c78:	02 c0       	rjmp	.+4      	; 0x1c7e <disk_writep+0xc6>
    1c7a:	c8 ee       	ldi	r28, 0xE8	; 232
    1c7c:	dd ef       	ldi	r29, 0xFD	; 253
    1c7e:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1c82:	8f 3f       	cpi	r24, 0xFF	; 255
    1c84:	11 f0       	breq	.+4      	; 0x1c8a <disk_writep+0xd2>
    1c86:	20 97       	sbiw	r28, 0x00	; 0
    1c88:	b1 f7       	brne	.-20     	; 0x1c76 <disk_writep+0xbe>
				if (bc) res = RES_OK;
    1c8a:	cd 2b       	or	r28, r29
    1c8c:	11 f4       	brne	.+4      	; 0x1c92 <disk_writep+0xda>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1c8e:	c1 e0       	ldi	r28, 0x01	; 1
    1c90:	01 c0       	rjmp	.+2      	; 0x1c94 <disk_writep+0xdc>
		} else {	// Finalize sector write process 
			bc = wc + 2;
			while (bc--) xmit_spi(0);	// Fill left bytes and CRC with zeros 
			if ((rcv_spi() & 0x1F) == 0x05) {	// Receive data resp and wait for end of write process in timeout of 300ms 
				for (bc = 65000; rcv_spi() != 0xFF && bc; bc--) ;	// Wait ready 
				if (bc) res = RES_OK;
    1c92:	c0 e0       	ldi	r28, 0x00	; 0
			}
			release_spi();
    1c94:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <release_spi>
    1c98:	03 c0       	rjmp	.+6      	; 0x1ca0 <disk_writep+0xe8>
		bc = (WORD)sa;
		while (bc && wc) {		// Send data bytes to the card 
			xmit_spi(*buff++);
			wc--; bc--;
		}
		res = RES_OK;
    1c9a:	c0 e0       	ldi	r28, 0x00	; 0
    1c9c:	01 c0       	rjmp	.+2      	; 0x1ca0 <disk_writep+0xe8>
	static WORD wc;

// 	if ((PINB&_BV(SD_INS))!=0x00) return RES_ERROR;
// 	if ((PINB&_BV(SD_WP))!=0x00) return RES_ERROR;

	res = RES_ERROR;
    1c9e:	c1 e0       	ldi	r28, 0x01	; 1
			release_spi();
		}
	}

	return res;
}
    1ca0:	8c 2f       	mov	r24, r28
    1ca2:	df 91       	pop	r29
    1ca4:	cf 91       	pop	r28
    1ca6:	1f 91       	pop	r17
    1ca8:	0f 91       	pop	r16
    1caa:	08 95       	ret

00001cac <disk_initialize>:

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    1cac:	ef 92       	push	r14
    1cae:	ff 92       	push	r15
    1cb0:	0f 93       	push	r16
    1cb2:	1f 93       	push	r17
    1cb4:	cf 93       	push	r28
    1cb6:	df 93       	push	r29
    1cb8:	00 d0       	rcall	.+0      	; 0x1cba <disk_initialize+0xe>
    1cba:	00 d0       	rcall	.+0      	; 0x1cbc <disk_initialize+0x10>
    1cbc:	cd b7       	in	r28, 0x3d	; 61
    1cbe:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];
	WORD tmr;


	INIT_SPI();
    1cc0:	85 b1       	in	r24, 0x05	; 5
    1cc2:	81 60       	ori	r24, 0x01	; 1
    1cc4:	85 b9       	out	0x05, r24	; 5
    1cc6:	88 b1       	in	r24, 0x08	; 8
    1cc8:	86 60       	ori	r24, 0x06	; 6
    1cca:	88 b9       	out	0x08, r24	; 8
    1ccc:	84 b1       	in	r24, 0x04	; 4
    1cce:	81 60       	ori	r24, 0x01	; 1
    1cd0:	84 b9       	out	0x04, r24	; 4
    1cd2:	87 b1       	in	r24, 0x07	; 7
    1cd4:	8c 60       	ori	r24, 0x0C	; 12
    1cd6:	87 b9       	out	0x07, r24	; 7

//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
    1cd8:	28 99       	sbic	0x05, 0	; 5
    1cda:	07 c0       	rjmp	.+14     	; 0x1cea <disk_initialize+0x3e>
    1cdc:	40 e0       	ldi	r20, 0x00	; 0
    1cde:	50 e0       	ldi	r21, 0x00	; 0
    1ce0:	ba 01       	movw	r22, r20
    1ce2:	80 e0       	ldi	r24, 0x00	; 0
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <disk_writep>

//--------------------------------------------------------------------------
// Initialize Disk Drive                                                 
//--------------------------------------------------------------------------
DSTATUS disk_initialize (void)
{
    1cea:	14 e6       	ldi	r17, 0x64	; 100
    1cec:	03 c0       	rjmp	.+6      	; 0x1cf4 <disk_initialize+0x48>
//	if ((PINB&_BV(SD_INS))!=0x00) return STA_NOINIT;

#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 
    1cee:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1cf2:	11 50       	subi	r17, 0x01	; 1
    1cf4:	11 11       	cpse	r17, r1
    1cf6:	fb cf       	rjmp	.-10     	; 0x1cee <disk_initialize+0x42>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			// Enter Idle state 
    1cf8:	40 e0       	ldi	r20, 0x00	; 0
    1cfa:	50 e0       	ldi	r21, 0x00	; 0
    1cfc:	ba 01       	movw	r22, r20
    1cfe:	80 e4       	ldi	r24, 0x40	; 64
    1d00:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1d04:	81 30       	cpi	r24, 0x01	; 1
    1d06:	09 f0       	breq	.+2      	; 0x1d0a <disk_initialize+0x5e>
    1d08:	8f c0       	rjmp	.+286    	; 0x1e28 <disk_initialize+0x17c>
		if (send_cmd(CMD8, 0x1AA) == 1) {	// SDv2 
    1d0a:	4a ea       	ldi	r20, 0xAA	; 170
    1d0c:	51 e0       	ldi	r21, 0x01	; 1
    1d0e:	60 e0       	ldi	r22, 0x00	; 0
    1d10:	70 e0       	ldi	r23, 0x00	; 0
    1d12:	88 e4       	ldi	r24, 0x48	; 72
    1d14:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1d18:	81 30       	cpi	r24, 0x01	; 1
    1d1a:	09 f0       	breq	.+2      	; 0x1d1e <disk_initialize+0x72>
    1d1c:	53 c0       	rjmp	.+166    	; 0x1dc4 <disk_initialize+0x118>
    1d1e:	0d c0       	rjmp	.+26     	; 0x1d3a <disk_initialize+0x8e>

// 	  		setpos(0,3);
// 	  		str_lcd("SDv2");

			for (n = 0; n < 4; n++) ocr[n] = rcv_spi();		// Get trailing return value of R7 resp 
    1d20:	e0 2e       	mov	r14, r16
    1d22:	f1 2c       	mov	r15, r1
    1d24:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1d28:	e1 e0       	ldi	r30, 0x01	; 1
    1d2a:	f0 e0       	ldi	r31, 0x00	; 0
    1d2c:	ec 0f       	add	r30, r28
    1d2e:	fd 1f       	adc	r31, r29
    1d30:	ee 0d       	add	r30, r14
    1d32:	ff 1d       	adc	r31, r15
    1d34:	80 83       	st	Z, r24
    1d36:	0f 5f       	subi	r16, 0xFF	; 255
    1d38:	01 c0       	rjmp	.+2      	; 0x1d3c <disk_initialize+0x90>
    1d3a:	01 2f       	mov	r16, r17
    1d3c:	04 30       	cpi	r16, 0x04	; 4
    1d3e:	80 f3       	brcs	.-32     	; 0x1d20 <disk_initialize+0x74>
//  			sprintf(str,"%02X",ocr[1]);
//  			str_lcd(str);
//  			setpos(17,0);
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
    1d40:	8b 81       	ldd	r24, Y+3	; 0x03
    1d42:	81 30       	cpi	r24, 0x01	; 1
    1d44:	09 f0       	breq	.+2      	; 0x1d48 <disk_initialize+0x9c>
    1d46:	72 c0       	rjmp	.+228    	; 0x1e2c <disk_initialize+0x180>
    1d48:	8c 81       	ldd	r24, Y+4	; 0x04
    1d4a:	8a 3a       	cpi	r24, 0xAA	; 170
    1d4c:	31 f0       	breq	.+12     	; 0x1d5a <disk_initialize+0xae>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1d4e:	f1 2c       	mov	r15, r1
    1d50:	78 c0       	rjmp	.+240    	; 0x1e42 <disk_initialize+0x196>
//  			sprintf(str,"%02X",ocr[0]);
//  			str_lcd(str);
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				// The card can work at vdd range of 2.7-3.6V 
// 	  		setpos(5,3);
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	e8 1a       	sub	r14, r24
    1d56:	f1 08       	sbc	r15, r1
    1d58:	06 c0       	rjmp	.+12     	; 0x1d66 <disk_initialize+0xba>
    1d5a:	0f 2e       	mov	r0, r31
    1d5c:	f0 ee       	ldi	r31, 0xE0	; 224
    1d5e:	ef 2e       	mov	r14, r31
    1d60:	fe e2       	ldi	r31, 0x2E	; 46
    1d62:	ff 2e       	mov	r15, r31
    1d64:	f0 2d       	mov	r31, r0
    1d66:	e1 14       	cp	r14, r1
    1d68:	f1 04       	cpc	r15, r1
    1d6a:	49 f0       	breq	.+18     	; 0x1d7e <disk_initialize+0xd2>
    1d6c:	40 e0       	ldi	r20, 0x00	; 0
    1d6e:	50 e0       	ldi	r21, 0x00	; 0
    1d70:	60 e0       	ldi	r22, 0x00	; 0
    1d72:	70 e4       	ldi	r23, 0x40	; 64
    1d74:	89 ee       	ldi	r24, 0xE9	; 233
    1d76:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1d7a:	81 11       	cpse	r24, r1
    1d7c:	ea cf       	rjmp	.-44     	; 0x1d52 <disk_initialize+0xa6>
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
    1d7e:	ef 28       	or	r14, r15
    1d80:	09 f4       	brne	.+2      	; 0x1d84 <disk_initialize+0xd8>
    1d82:	56 c0       	rjmp	.+172    	; 0x1e30 <disk_initialize+0x184>
    1d84:	40 e0       	ldi	r20, 0x00	; 0
    1d86:	50 e0       	ldi	r21, 0x00	; 0
    1d88:	ba 01       	movw	r22, r20
    1d8a:	8a e7       	ldi	r24, 0x7A	; 122
    1d8c:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1d90:	88 23       	and	r24, r24
    1d92:	71 f0       	breq	.+28     	; 0x1db0 <disk_initialize+0x104>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1d94:	f1 2c       	mov	r15, r1
    1d96:	55 c0       	rjmp	.+170    	; 0x1e42 <disk_initialize+0x196>
// 	  		str_lcd("AA01");
				for (tmr = 12000; tmr && send_cmd(ACMD41, 1UL << 30); tmr--) ;	// Wait for leaving idle state (ACMD41 with HCS bit) 
				if (tmr && send_cmd(CMD58, 0) == 0) {		// Check CCS bit in the OCR 
// 			  		setpos(10,3);
// 					str_lcd("CCS");
					for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
    1d98:	e1 2e       	mov	r14, r17
    1d9a:	f1 2c       	mov	r15, r1
    1d9c:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <rcv_spi>
    1da0:	e1 e0       	ldi	r30, 0x01	; 1
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	ec 0f       	add	r30, r28
    1da6:	fd 1f       	adc	r31, r29
    1da8:	ee 0d       	add	r30, r14
    1daa:	ff 1d       	adc	r31, r15
    1dac:	80 83       	st	Z, r24
    1dae:	1f 5f       	subi	r17, 0xFF	; 255
    1db0:	14 30       	cpi	r17, 0x04	; 4
    1db2:	90 f3       	brcs	.-28     	; 0x1d98 <disk_initialize+0xec>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1db4:	89 81       	ldd	r24, Y+1	; 0x01
    1db6:	86 ff       	sbrs	r24, 6
    1db8:	3d c0       	rjmp	.+122    	; 0x1e34 <disk_initialize+0x188>
    1dba:	0f 2e       	mov	r0, r31
    1dbc:	fc e0       	ldi	r31, 0x0C	; 12
    1dbe:	ff 2e       	mov	r15, r31
    1dc0:	f0 2d       	mov	r31, r0
    1dc2:	3f c0       	rjmp	.+126    	; 0x1e42 <disk_initialize+0x196>
				}
			}
		} else {							// SDv1 or MMCv3 
			if (send_cmd(ACMD41, 0) <= 1) 	{
    1dc4:	40 e0       	ldi	r20, 0x00	; 0
    1dc6:	50 e0       	ldi	r21, 0x00	; 0
    1dc8:	ba 01       	movw	r22, r20
    1dca:	89 ee       	ldi	r24, 0xE9	; 233
    1dcc:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1dd0:	82 30       	cpi	r24, 0x02	; 2
    1dd2:	40 f4       	brcc	.+16     	; 0x1de4 <disk_initialize+0x138>
				ty = CT_SD1; cmd = ACMD41;	// SDv1 
    1dd4:	68 94       	set
    1dd6:	ff 24       	eor	r15, r15
    1dd8:	f1 f8       	bld	r15, 1
    1dda:	0f 2e       	mov	r0, r31
    1ddc:	f9 ee       	ldi	r31, 0xE9	; 233
    1dde:	ef 2e       	mov	r14, r31
    1de0:	f0 2d       	mov	r31, r0
    1de2:	06 c0       	rjmp	.+12     	; 0x1df0 <disk_initialize+0x144>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
    1de4:	ff 24       	eor	r15, r15
    1de6:	f3 94       	inc	r15
    1de8:	0f 2e       	mov	r0, r31
    1dea:	f1 e4       	ldi	r31, 0x41	; 65
    1dec:	ef 2e       	mov	r14, r31
    1dee:	f0 2d       	mov	r31, r0
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
    1df0:	08 ea       	ldi	r16, 0xA8	; 168
    1df2:	11 e6       	ldi	r17, 0x61	; 97
    1df4:	02 c0       	rjmp	.+4      	; 0x1dfa <disk_initialize+0x14e>
    1df6:	01 50       	subi	r16, 0x01	; 1
    1df8:	11 09       	sbc	r17, r1
    1dfa:	01 15       	cp	r16, r1
    1dfc:	11 05       	cpc	r17, r1
    1dfe:	41 f0       	breq	.+16     	; 0x1e10 <disk_initialize+0x164>
    1e00:	40 e0       	ldi	r20, 0x00	; 0
    1e02:	50 e0       	ldi	r21, 0x00	; 0
    1e04:	ba 01       	movw	r22, r20
    1e06:	8e 2d       	mov	r24, r14
    1e08:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1e0c:	81 11       	cpse	r24, r1
    1e0e:	f3 cf       	rjmp	.-26     	; 0x1df6 <disk_initialize+0x14a>
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
    1e10:	01 2b       	or	r16, r17
    1e12:	a1 f0       	breq	.+40     	; 0x1e3c <disk_initialize+0x190>
    1e14:	40 e0       	ldi	r20, 0x00	; 0
    1e16:	52 e0       	ldi	r21, 0x02	; 2
    1e18:	60 e0       	ldi	r22, 0x00	; 0
    1e1a:	70 e0       	ldi	r23, 0x00	; 0
    1e1c:	80 e5       	ldi	r24, 0x50	; 80
    1e1e:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <send_cmd>
    1e22:	81 11       	cpse	r24, r1
    1e24:	0d c0       	rjmp	.+26     	; 0x1e40 <disk_initialize+0x194>
    1e26:	0d c0       	rjmp	.+26     	; 0x1e42 <disk_initialize+0x196>
#if _WRITE_FUNC
	if (MMC_SEL) disk_writep(0, 0);		// Finalize write process if it is in progress 
#endif
	for (n = 100; n; n--) rcv_spi();	// Dummy clocks 

	ty = 0;
    1e28:	f1 2c       	mov	r15, r1
    1e2a:	0b c0       	rjmp	.+22     	; 0x1e42 <disk_initialize+0x196>
    1e2c:	f1 2c       	mov	r15, r1
    1e2e:	09 c0       	rjmp	.+18     	; 0x1e42 <disk_initialize+0x196>
    1e30:	f1 2c       	mov	r15, r1
    1e32:	07 c0       	rjmp	.+14     	; 0x1e42 <disk_initialize+0x196>
//  					sprintf(str,"%02X",ocr[1]);
//  					str_lcd(str);
//  					setpos(17,1);
//  					sprintf(str,"%02X",ocr[0]);
//  					str_lcd(str);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	// SDv2 (HC or SC) 
    1e34:	68 94       	set
    1e36:	ff 24       	eor	r15, r15
    1e38:	f2 f8       	bld	r15, 2
    1e3a:	03 c0       	rjmp	.+6      	; 0x1e42 <disk_initialize+0x196>
			} else {
				ty = CT_MMC; cmd = CMD1;	// MMCv3 
			}
			for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;	// Wait for leaving idle state 
			if (!tmr || send_cmd(CMD16, 512) != 0)			// Set R/W block length to 512 
				ty = 0;
    1e3c:	f1 2c       	mov	r15, r1
    1e3e:	01 c0       	rjmp	.+2      	; 0x1e42 <disk_initialize+0x196>
    1e40:	f1 2c       	mov	r15, r1
		}
	}
	CardType = ty;
    1e42:	f0 92 93 06 	sts	0x0693, r15	; 0x800693 <CardType>
//   	sprintf(str,"%d",CardType);
//   	setpos(0,1);
//   	str_lcd(str);
	release_spi();
    1e46:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <release_spi>

	return ty ? 0 : STA_NOINIT;
    1e4a:	81 e0       	ldi	r24, 0x01	; 1
    1e4c:	f1 10       	cpse	r15, r1
    1e4e:	80 e0       	ldi	r24, 0x00	; 0
}
    1e50:	0f 90       	pop	r0
    1e52:	0f 90       	pop	r0
    1e54:	0f 90       	pop	r0
    1e56:	0f 90       	pop	r0
    1e58:	df 91       	pop	r29
    1e5a:	cf 91       	pop	r28
    1e5c:	1f 91       	pop	r17
    1e5e:	0f 91       	pop	r16
    1e60:	ff 90       	pop	r15
    1e62:	ef 90       	pop	r14
    1e64:	08 95       	ret

00001e66 <NRF24L01_Receive>:
//-------------------------------------------------------------
void nRF_command(uint8_t command)
{
	LOW_CSN;
	spi_send_recv(command);
	HIGH_CSN;
    1e66:	cf 93       	push	r28
    1e68:	df 93       	push	r29
    1e6a:	80 91 94 06 	lds	r24, 0x0694	; 0x800694 <rx_flag>
    1e6e:	81 30       	cpi	r24, 0x01	; 1
    1e70:	09 f0       	breq	.+2      	; 0x1e74 <NRF24L01_Receive+0xe>
    1e72:	63 c1       	rjmp	.+710    	; 0x213a <NRF24L01_Receive+0x2d4>
    1e74:	80 91 95 06 	lds	r24, 0x0695	; 0x800695 <RX_BUF>
    1e78:	81 30       	cpi	r24, 0x01	; 1
    1e7a:	09 f0       	breq	.+2      	; 0x1e7e <NRF24L01_Receive+0x18>
    1e7c:	59 c0       	rjmp	.+178    	; 0x1f30 <NRF24L01_Receive+0xca>
    1e7e:	e7 e8       	ldi	r30, 0x87	; 135
    1e80:	f2 e0       	ldi	r31, 0x02	; 2
    1e82:	01 90       	ld	r0, Z+
    1e84:	00 20       	and	r0, r0
    1e86:	e9 f7       	brne	.-6      	; 0x1e82 <NRF24L01_Receive+0x1c>
    1e88:	31 97       	sbiw	r30, 0x01	; 1
    1e8a:	af 01       	movw	r20, r30
    1e8c:	47 58       	subi	r20, 0x87	; 135
    1e8e:	52 40       	sbci	r21, 0x02	; 2
    1e90:	44 0f       	add	r20, r20
    1e92:	55 1f       	adc	r21, r21
    1e94:	60 e0       	ldi	r22, 0x00	; 0
    1e96:	70 e0       	ldi	r23, 0x00	; 0
    1e98:	87 e8       	ldi	r24, 0x87	; 135
    1e9a:	92 e0       	ldi	r25, 0x02	; 2
    1e9c:	0e 94 42 2c 	call	0x5884	; 0x5884 <memset>
    1ea0:	e5 e9       	ldi	r30, 0x95	; 149
    1ea2:	f6 e0       	ldi	r31, 0x06	; 6
    1ea4:	81 81       	ldd	r24, Z+1	; 0x01
    1ea6:	c2 81       	ldd	r28, Z+2	; 0x02
    1ea8:	d0 e0       	ldi	r29, 0x00	; 0
    1eaa:	dc 2f       	mov	r29, r28
    1eac:	cc 27       	eor	r28, r28
    1eae:	c8 2b       	or	r28, r24
    1eb0:	be 01       	movw	r22, r28
    1eb2:	0d 2e       	mov	r0, r29
    1eb4:	00 0c       	add	r0, r0
    1eb6:	88 0b       	sbc	r24, r24
    1eb8:	99 0b       	sbc	r25, r25
    1eba:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    1ebe:	20 e0       	ldi	r18, 0x00	; 0
    1ec0:	30 e0       	ldi	r19, 0x00	; 0
    1ec2:	40 e2       	ldi	r20, 0x20	; 32
    1ec4:	51 e4       	ldi	r21, 0x41	; 65
    1ec6:	0e 94 66 25 	call	0x4acc	; 0x4acc <__divsf3>
    1eca:	60 93 e3 01 	sts	0x01E3, r22	; 0x8001e3 <temp>
    1ece:	70 93 e4 01 	sts	0x01E4, r23	; 0x8001e4 <temp+0x1>
    1ed2:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <temp+0x2>
    1ed6:	90 93 e6 01 	sts	0x01E6, r25	; 0x8001e6 <temp+0x3>
    1eda:	dd 23       	and	r29, r29
    1edc:	5c f4       	brge	.+22     	; 0x1ef4 <NRF24L01_Receive+0x8e>
    1ede:	dc 01       	movw	r26, r24
    1ee0:	cb 01       	movw	r24, r22
    1ee2:	b0 58       	subi	r27, 0x80	; 128
    1ee4:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <temp>
    1ee8:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <temp+0x1>
    1eec:	a0 93 e5 01 	sts	0x01E5, r26	; 0x8001e5 <temp+0x2>
    1ef0:	b0 93 e6 01 	sts	0x01E6, r27	; 0x8001e6 <temp+0x3>
    1ef4:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <temp+0x3>
    1ef8:	8f 93       	push	r24
    1efa:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <temp+0x2>
    1efe:	8f 93       	push	r24
    1f00:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <temp+0x1>
    1f04:	8f 93       	push	r24
    1f06:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <temp>
    1f0a:	8f 93       	push	r24
    1f0c:	8a e3       	ldi	r24, 0x3A	; 58
    1f0e:	91 e0       	ldi	r25, 0x01	; 1
    1f10:	9f 93       	push	r25
    1f12:	8f 93       	push	r24
    1f14:	87 e8       	ldi	r24, 0x87	; 135
    1f16:	92 e0       	ldi	r25, 0x02	; 2
    1f18:	9f 93       	push	r25
    1f1a:	8f 93       	push	r24
    1f1c:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    1f20:	8d b7       	in	r24, 0x3d	; 61
    1f22:	9e b7       	in	r25, 0x3e	; 62
    1f24:	08 96       	adiw	r24, 0x08	; 8
    1f26:	0f b6       	in	r0, 0x3f	; 63
    1f28:	f8 94       	cli
    1f2a:	9e bf       	out	0x3e, r25	; 62
    1f2c:	0f be       	out	0x3f, r0	; 63
    1f2e:	8d bf       	out	0x3d, r24	; 61
    1f30:	80 91 95 06 	lds	r24, 0x0695	; 0x800695 <RX_BUF>
    1f34:	85 30       	cpi	r24, 0x05	; 5
    1f36:	09 f0       	breq	.+2      	; 0x1f3a <NRF24L01_Receive+0xd4>
    1f38:	3f c0       	rjmp	.+126    	; 0x1fb8 <NRF24L01_Receive+0x152>
    1f3a:	cd e7       	ldi	r28, 0x7D	; 125
    1f3c:	d2 e0       	ldi	r29, 0x02	; 2
    1f3e:	fe 01       	movw	r30, r28
    1f40:	01 90       	ld	r0, Z+
    1f42:	00 20       	and	r0, r0
    1f44:	e9 f7       	brne	.-6      	; 0x1f40 <NRF24L01_Receive+0xda>
    1f46:	31 97       	sbiw	r30, 0x01	; 1
    1f48:	af 01       	movw	r20, r30
    1f4a:	4d 57       	subi	r20, 0x7D	; 125
    1f4c:	52 40       	sbci	r21, 0x02	; 2
    1f4e:	44 0f       	add	r20, r20
    1f50:	55 1f       	adc	r21, r21
    1f52:	60 e0       	ldi	r22, 0x00	; 0
    1f54:	70 e0       	ldi	r23, 0x00	; 0
    1f56:	ce 01       	movw	r24, r28
    1f58:	0e 94 42 2c 	call	0x5884	; 0x5884 <memset>
    1f5c:	e5 e9       	ldi	r30, 0x95	; 149
    1f5e:	f6 e0       	ldi	r31, 0x06	; 6
    1f60:	81 81       	ldd	r24, Z+1	; 0x01
    1f62:	62 81       	ldd	r22, Z+2	; 0x02
    1f64:	70 e0       	ldi	r23, 0x00	; 0
    1f66:	76 2f       	mov	r23, r22
    1f68:	66 27       	eor	r22, r22
    1f6a:	68 2b       	or	r22, r24
    1f6c:	07 2e       	mov	r0, r23
    1f6e:	00 0c       	add	r0, r0
    1f70:	88 0b       	sbc	r24, r24
    1f72:	99 0b       	sbc	r25, r25
    1f74:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	30 e0       	ldi	r19, 0x00	; 0
    1f7c:	40 e2       	ldi	r20, 0x20	; 32
    1f7e:	51 e4       	ldi	r21, 0x41	; 65
    1f80:	0e 94 66 25 	call	0x4acc	; 0x4acc <__divsf3>
    1f84:	60 93 df 01 	sts	0x01DF, r22	; 0x8001df <hum>
    1f88:	70 93 e0 01 	sts	0x01E0, r23	; 0x8001e0 <hum+0x1>
    1f8c:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <hum+0x2>
    1f90:	90 93 e2 01 	sts	0x01E2, r25	; 0x8001e2 <hum+0x3>
    1f94:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <__fixsfsi>
    1f98:	7f 93       	push	r23
    1f9a:	6f 93       	push	r22
    1f9c:	84 e9       	ldi	r24, 0x94	; 148
    1f9e:	91 e0       	ldi	r25, 0x01	; 1
    1fa0:	9f 93       	push	r25
    1fa2:	8f 93       	push	r24
    1fa4:	df 93       	push	r29
    1fa6:	cf 93       	push	r28
    1fa8:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    1fac:	0f 90       	pop	r0
    1fae:	0f 90       	pop	r0
    1fb0:	0f 90       	pop	r0
    1fb2:	0f 90       	pop	r0
    1fb4:	0f 90       	pop	r0
    1fb6:	0f 90       	pop	r0
    1fb8:	c0 91 95 06 	lds	r28, 0x0695	; 0x800695 <RX_BUF>
    1fbc:	c2 30       	cpi	r28, 0x02	; 2
    1fbe:	61 f5       	brne	.+88     	; 0x2018 <NRF24L01_Receive+0x1b2>
    1fc0:	ef e5       	ldi	r30, 0x5F	; 95
    1fc2:	f2 e0       	ldi	r31, 0x02	; 2
    1fc4:	01 90       	ld	r0, Z+
    1fc6:	00 20       	and	r0, r0
    1fc8:	e9 f7       	brne	.-6      	; 0x1fc4 <NRF24L01_Receive+0x15e>
    1fca:	31 97       	sbiw	r30, 0x01	; 1
    1fcc:	af 01       	movw	r20, r30
    1fce:	4f 55       	subi	r20, 0x5F	; 95
    1fd0:	52 40       	sbci	r21, 0x02	; 2
    1fd2:	44 0f       	add	r20, r20
    1fd4:	55 1f       	adc	r21, r21
    1fd6:	60 e0       	ldi	r22, 0x00	; 0
    1fd8:	70 e0       	ldi	r23, 0x00	; 0
    1fda:	8f e5       	ldi	r24, 0x5F	; 95
    1fdc:	92 e0       	ldi	r25, 0x02	; 2
    1fde:	0e 94 42 2c 	call	0x5884	; 0x5884 <memset>
    1fe2:	20 e0       	ldi	r18, 0x00	; 0
    1fe4:	0b c0       	rjmp	.+22     	; 0x1ffc <NRF24L01_Receive+0x196>
    1fe6:	82 2f       	mov	r24, r18
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	fc 01       	movw	r30, r24
    1fec:	ea 56       	subi	r30, 0x6A	; 106
    1fee:	f9 4f       	sbci	r31, 0xF9	; 249
    1ff0:	30 81       	ld	r19, Z
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	e1 5a       	subi	r30, 0xA1	; 161
    1ff6:	fd 4f       	sbci	r31, 0xFD	; 253
    1ff8:	30 83       	st	Z, r19
    1ffa:	2f 5f       	subi	r18, 0xFF	; 255
    1ffc:	82 2f       	mov	r24, r18
    1ffe:	90 e0       	ldi	r25, 0x00	; 0
    2000:	e5 e9       	ldi	r30, 0x95	; 149
    2002:	f6 e0       	ldi	r31, 0x06	; 6
    2004:	01 90       	ld	r0, Z+
    2006:	00 20       	and	r0, r0
    2008:	e9 f7       	brne	.-6      	; 0x2004 <NRF24L01_Receive+0x19e>
    200a:	31 97       	sbiw	r30, 0x01	; 1
    200c:	e5 59       	subi	r30, 0x95	; 149
    200e:	f6 40       	sbci	r31, 0x06	; 6
    2010:	31 97       	sbiw	r30, 0x01	; 1
    2012:	8e 17       	cp	r24, r30
    2014:	9f 07       	cpc	r25, r31
    2016:	38 f3       	brcs	.-50     	; 0x1fe6 <NRF24L01_Receive+0x180>
    2018:	c3 30       	cpi	r28, 0x03	; 3
    201a:	89 f5       	brne	.+98     	; 0x207e <NRF24L01_Receive+0x218>
    201c:	eb e4       	ldi	r30, 0x4B	; 75
    201e:	f2 e0       	ldi	r31, 0x02	; 2
    2020:	01 90       	ld	r0, Z+
    2022:	00 20       	and	r0, r0
    2024:	e9 f7       	brne	.-6      	; 0x2020 <NRF24L01_Receive+0x1ba>
    2026:	31 97       	sbiw	r30, 0x01	; 1
    2028:	af 01       	movw	r20, r30
    202a:	4b 54       	subi	r20, 0x4B	; 75
    202c:	52 40       	sbci	r21, 0x02	; 2
    202e:	44 0f       	add	r20, r20
    2030:	55 1f       	adc	r21, r21
    2032:	60 e0       	ldi	r22, 0x00	; 0
    2034:	70 e0       	ldi	r23, 0x00	; 0
    2036:	8b e4       	ldi	r24, 0x4B	; 75
    2038:	92 e0       	ldi	r25, 0x02	; 2
    203a:	0e 94 42 2c 	call	0x5884	; 0x5884 <memset>
    203e:	20 e0       	ldi	r18, 0x00	; 0
    2040:	0b c0       	rjmp	.+22     	; 0x2058 <NRF24L01_Receive+0x1f2>
    2042:	82 2f       	mov	r24, r18
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	fc 01       	movw	r30, r24
    2048:	ea 56       	subi	r30, 0x6A	; 106
    204a:	f9 4f       	sbci	r31, 0xF9	; 249
    204c:	30 81       	ld	r19, Z
    204e:	fc 01       	movw	r30, r24
    2050:	e5 5b       	subi	r30, 0xB5	; 181
    2052:	fd 4f       	sbci	r31, 0xFD	; 253
    2054:	30 83       	st	Z, r19
    2056:	2f 5f       	subi	r18, 0xFF	; 255
    2058:	82 2f       	mov	r24, r18
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	e5 e9       	ldi	r30, 0x95	; 149
    205e:	f6 e0       	ldi	r31, 0x06	; 6
    2060:	01 90       	ld	r0, Z+
    2062:	00 20       	and	r0, r0
    2064:	e9 f7       	brne	.-6      	; 0x2060 <NRF24L01_Receive+0x1fa>
    2066:	31 97       	sbiw	r30, 0x01	; 1
    2068:	e5 59       	subi	r30, 0x95	; 149
    206a:	f6 40       	sbci	r31, 0x06	; 6
    206c:	31 97       	sbiw	r30, 0x01	; 1
    206e:	8e 17       	cp	r24, r30
    2070:	9f 07       	cpc	r25, r31
    2072:	38 f3       	brcs	.-50     	; 0x2042 <NRF24L01_Receive+0x1dc>
    2074:	fc 01       	movw	r30, r24
    2076:	e4 5b       	subi	r30, 0xB4	; 180
    2078:	fd 4f       	sbci	r31, 0xFD	; 253
    207a:	80 e2       	ldi	r24, 0x20	; 32
    207c:	80 83       	st	Z, r24
    207e:	c4 30       	cpi	r28, 0x04	; 4
    2080:	61 f5       	brne	.+88     	; 0x20da <NRF24L01_Receive+0x274>
    2082:	e1 e4       	ldi	r30, 0x41	; 65
    2084:	f2 e0       	ldi	r31, 0x02	; 2
    2086:	01 90       	ld	r0, Z+
    2088:	00 20       	and	r0, r0
    208a:	e9 f7       	brne	.-6      	; 0x2086 <NRF24L01_Receive+0x220>
    208c:	31 97       	sbiw	r30, 0x01	; 1
    208e:	af 01       	movw	r20, r30
    2090:	41 54       	subi	r20, 0x41	; 65
    2092:	52 40       	sbci	r21, 0x02	; 2
    2094:	44 0f       	add	r20, r20
    2096:	55 1f       	adc	r21, r21
    2098:	60 e0       	ldi	r22, 0x00	; 0
    209a:	70 e0       	ldi	r23, 0x00	; 0
    209c:	81 e4       	ldi	r24, 0x41	; 65
    209e:	92 e0       	ldi	r25, 0x02	; 2
    20a0:	0e 94 42 2c 	call	0x5884	; 0x5884 <memset>
    20a4:	20 e0       	ldi	r18, 0x00	; 0
    20a6:	0b c0       	rjmp	.+22     	; 0x20be <NRF24L01_Receive+0x258>
    20a8:	82 2f       	mov	r24, r18
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	fc 01       	movw	r30, r24
    20ae:	ea 56       	subi	r30, 0x6A	; 106
    20b0:	f9 4f       	sbci	r31, 0xF9	; 249
    20b2:	30 81       	ld	r19, Z
    20b4:	fc 01       	movw	r30, r24
    20b6:	ef 5b       	subi	r30, 0xBF	; 191
    20b8:	fd 4f       	sbci	r31, 0xFD	; 253
    20ba:	30 83       	st	Z, r19
    20bc:	2f 5f       	subi	r18, 0xFF	; 255
    20be:	82 2f       	mov	r24, r18
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	e5 e9       	ldi	r30, 0x95	; 149
    20c4:	f6 e0       	ldi	r31, 0x06	; 6
    20c6:	01 90       	ld	r0, Z+
    20c8:	00 20       	and	r0, r0
    20ca:	e9 f7       	brne	.-6      	; 0x20c6 <NRF24L01_Receive+0x260>
    20cc:	31 97       	sbiw	r30, 0x01	; 1
    20ce:	e5 59       	subi	r30, 0x95	; 149
    20d0:	f6 40       	sbci	r31, 0x06	; 6
    20d2:	31 97       	sbiw	r30, 0x01	; 1
    20d4:	8e 17       	cp	r24, r30
    20d6:	9f 07       	cpc	r25, r31
    20d8:	38 f3       	brcs	.-50     	; 0x20a8 <NRF24L01_Receive+0x242>
    20da:	c6 30       	cpi	r28, 0x06	; 6
    20dc:	61 f5       	brne	.+88     	; 0x2136 <NRF24L01_Receive+0x2d0>
    20de:	e7 e3       	ldi	r30, 0x37	; 55
    20e0:	f2 e0       	ldi	r31, 0x02	; 2
    20e2:	01 90       	ld	r0, Z+
    20e4:	00 20       	and	r0, r0
    20e6:	e9 f7       	brne	.-6      	; 0x20e2 <NRF24L01_Receive+0x27c>
    20e8:	31 97       	sbiw	r30, 0x01	; 1
    20ea:	af 01       	movw	r20, r30
    20ec:	47 53       	subi	r20, 0x37	; 55
    20ee:	52 40       	sbci	r21, 0x02	; 2
    20f0:	44 0f       	add	r20, r20
    20f2:	55 1f       	adc	r21, r21
    20f4:	60 e0       	ldi	r22, 0x00	; 0
    20f6:	70 e0       	ldi	r23, 0x00	; 0
    20f8:	87 e3       	ldi	r24, 0x37	; 55
    20fa:	92 e0       	ldi	r25, 0x02	; 2
    20fc:	0e 94 42 2c 	call	0x5884	; 0x5884 <memset>
    2100:	20 e0       	ldi	r18, 0x00	; 0
    2102:	0b c0       	rjmp	.+22     	; 0x211a <NRF24L01_Receive+0x2b4>
    2104:	82 2f       	mov	r24, r18
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	fc 01       	movw	r30, r24
    210a:	ea 56       	subi	r30, 0x6A	; 106
    210c:	f9 4f       	sbci	r31, 0xF9	; 249
    210e:	30 81       	ld	r19, Z
    2110:	fc 01       	movw	r30, r24
    2112:	e9 5c       	subi	r30, 0xC9	; 201
    2114:	fd 4f       	sbci	r31, 0xFD	; 253
    2116:	30 83       	st	Z, r19
    2118:	2f 5f       	subi	r18, 0xFF	; 255
    211a:	82 2f       	mov	r24, r18
    211c:	90 e0       	ldi	r25, 0x00	; 0
    211e:	e5 e9       	ldi	r30, 0x95	; 149
    2120:	f6 e0       	ldi	r31, 0x06	; 6
    2122:	01 90       	ld	r0, Z+
    2124:	00 20       	and	r0, r0
    2126:	e9 f7       	brne	.-6      	; 0x2122 <NRF24L01_Receive+0x2bc>
    2128:	31 97       	sbiw	r30, 0x01	; 1
    212a:	e5 59       	subi	r30, 0x95	; 149
    212c:	f6 40       	sbci	r31, 0x06	; 6
    212e:	31 97       	sbiw	r30, 0x01	; 1
    2130:	8e 17       	cp	r24, r30
    2132:	9f 07       	cpc	r25, r31
    2134:	38 f3       	brcs	.-50     	; 0x2104 <NRF24L01_Receive+0x29e>
    2136:	10 92 94 06 	sts	0x0694, r1	; 0x800694 <rx_flag>
    213a:	df 91       	pop	r29
    213c:	cf 91       	pop	r28
    213e:	08 95       	ret

00002140 <NRF24_FlushRX>:
    2140:	85 b1       	in	r24, 0x05	; 5
    2142:	8b 7f       	andi	r24, 0xFB	; 251
    2144:	85 b9       	out	0x05, r24	; 5
    2146:	82 ee       	ldi	r24, 0xE2	; 226
    2148:	90 e0       	ldi	r25, 0x00	; 0
    214a:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    214e:	85 e0       	ldi	r24, 0x05	; 5
    2150:	8a 95       	dec	r24
    2152:	f1 f7       	brne	.-4      	; 0x2150 <NRF24_FlushRX+0x10>
    2154:	00 00       	nop
    2156:	85 b1       	in	r24, 0x05	; 5
    2158:	84 60       	ori	r24, 0x04	; 4
    215a:	85 b9       	out	0x05, r24	; 5
    215c:	08 95       	ret

0000215e <NRF24_FlushTX>:
    215e:	85 b1       	in	r24, 0x05	; 5
    2160:	8b 7f       	andi	r24, 0xFB	; 251
    2162:	85 b9       	out	0x05, r24	; 5
    2164:	81 ee       	ldi	r24, 0xE1	; 225
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    216c:	85 e0       	ldi	r24, 0x05	; 5
    216e:	8a 95       	dec	r24
    2170:	f1 f7       	brne	.-4      	; 0x216e <NRF24_FlushTX+0x10>
    2172:	00 00       	nop
    2174:	85 b1       	in	r24, 0x05	; 5
    2176:	84 60       	ori	r24, 0x04	; 4
    2178:	85 b9       	out	0x05, r24	; 5
    217a:	08 95       	ret

0000217c <NRF24_ToggleFeatures>:
    217c:	85 b1       	in	r24, 0x05	; 5
    217e:	8b 7f       	andi	r24, 0xFB	; 251
    2180:	85 b9       	out	0x05, r24	; 5
    2182:	80 e5       	ldi	r24, 0x50	; 80
    2184:	90 e0       	ldi	r25, 0x00	; 0
    2186:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    218a:	85 e0       	ldi	r24, 0x05	; 5
    218c:	8a 95       	dec	r24
    218e:	f1 f7       	brne	.-4      	; 0x218c <NRF24_ToggleFeatures+0x10>
    2190:	00 00       	nop
    2192:	83 e7       	ldi	r24, 0x73	; 115
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    219a:	85 b1       	in	r24, 0x05	; 5
    219c:	84 60       	ori	r24, 0x04	; 4
    219e:	85 b9       	out	0x05, r24	; 5
    21a0:	08 95       	ret

000021a2 <NRF24_Read_Buf>:
    21a2:	ef 92       	push	r14
    21a4:	ff 92       	push	r15
    21a6:	0f 93       	push	r16
    21a8:	1f 93       	push	r17
    21aa:	cf 93       	push	r28
    21ac:	df 93       	push	r29
    21ae:	8b 01       	movw	r16, r22
    21b0:	c4 2f       	mov	r28, r20
    21b2:	95 b1       	in	r25, 0x05	; 5
    21b4:	9b 7f       	andi	r25, 0xFB	; 251
    21b6:	95 b9       	out	0x05, r25	; 5
    21b8:	90 e0       	ldi	r25, 0x00	; 0
    21ba:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    21be:	0c c0       	rjmp	.+24     	; 0x21d8 <NRF24_Read_Buf+0x36>
    21c0:	78 01       	movw	r14, r16
    21c2:	8f ef       	ldi	r24, 0xFF	; 255
    21c4:	e8 1a       	sub	r14, r24
    21c6:	f8 0a       	sbc	r15, r24
    21c8:	8f ef       	ldi	r24, 0xFF	; 255
    21ca:	90 e0       	ldi	r25, 0x00	; 0
    21cc:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    21d0:	f8 01       	movw	r30, r16
    21d2:	80 83       	st	Z, r24
    21d4:	cd 2f       	mov	r28, r29
    21d6:	87 01       	movw	r16, r14
    21d8:	df ef       	ldi	r29, 0xFF	; 255
    21da:	dc 0f       	add	r29, r28
    21dc:	c1 11       	cpse	r28, r1
    21de:	f0 cf       	rjmp	.-32     	; 0x21c0 <NRF24_Read_Buf+0x1e>
    21e0:	85 b1       	in	r24, 0x05	; 5
    21e2:	84 60       	ori	r24, 0x04	; 4
    21e4:	85 b9       	out	0x05, r24	; 5
    21e6:	df 91       	pop	r29
    21e8:	cf 91       	pop	r28
    21ea:	1f 91       	pop	r17
    21ec:	0f 91       	pop	r16
    21ee:	ff 90       	pop	r15
    21f0:	ef 90       	pop	r14
    21f2:	08 95       	ret

000021f4 <NRF24_Write_Buf>:
    21f4:	ef 92       	push	r14
    21f6:	ff 92       	push	r15
    21f8:	0f 93       	push	r16
    21fa:	1f 93       	push	r17
    21fc:	cf 93       	push	r28
    21fe:	df 93       	push	r29
    2200:	8b 01       	movw	r16, r22
    2202:	c4 2f       	mov	r28, r20
    2204:	80 62       	ori	r24, 0x20	; 32
    2206:	95 b1       	in	r25, 0x05	; 5
    2208:	9b 7f       	andi	r25, 0xFB	; 251
    220a:	95 b9       	out	0x05, r25	; 5
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    2212:	85 e0       	ldi	r24, 0x05	; 5
    2214:	8a 95       	dec	r24
    2216:	f1 f7       	brne	.-4      	; 0x2214 <NRF24_Write_Buf+0x20>
    2218:	00 00       	nop
    221a:	0b c0       	rjmp	.+22     	; 0x2232 <NRF24_Write_Buf+0x3e>
    221c:	78 01       	movw	r14, r16
    221e:	ef ef       	ldi	r30, 0xFF	; 255
    2220:	ee 1a       	sub	r14, r30
    2222:	fe 0a       	sbc	r15, r30
    2224:	f8 01       	movw	r30, r16
    2226:	80 81       	ld	r24, Z
    2228:	90 e0       	ldi	r25, 0x00	; 0
    222a:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
    222e:	cd 2f       	mov	r28, r29
    2230:	87 01       	movw	r16, r14
    2232:	df ef       	ldi	r29, 0xFF	; 255
    2234:	dc 0f       	add	r29, r28
    2236:	c1 11       	cpse	r28, r1
    2238:	f1 cf       	rjmp	.-30     	; 0x221c <NRF24_Write_Buf+0x28>
    223a:	85 b1       	in	r24, 0x05	; 5
    223c:	84 60       	ori	r24, 0x04	; 4
    223e:	85 b9       	out	0x05, r24	; 5
    2240:	df 91       	pop	r29
    2242:	cf 91       	pop	r28
    2244:	1f 91       	pop	r17
    2246:	0f 91       	pop	r16
    2248:	ff 90       	pop	r15
    224a:	ef 90       	pop	r14
    224c:	08 95       	ret

0000224e <nRF_write_register>:
}
//-------------------------------------------------------------
void nRF_write_register(uint8_t reg, uint8_t data_out)
{
    224e:	cf 93       	push	r28
    2250:	c6 2f       	mov	r28, r22
	reg |= W_REGISTER;
    2252:	80 62       	ori	r24, 0x20	; 32
	LOW_CSN;
    2254:	95 b1       	in	r25, 0x05	; 5
    2256:	9b 7f       	andi	r25, 0xFB	; 251
    2258:	95 b9       	out	0x05, r25	; 5
	spi_send_recv(reg);
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
	spi_send_recv(data_out);
    2260:	8c 2f       	mov	r24, r28
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
	HIGH_CSN;
    2268:	85 b1       	in	r24, 0x05	; 5
    226a:	84 60       	ori	r24, 0x04	; 4
    226c:	85 b9       	out	0x05, r24	; 5
}
    226e:	cf 91       	pop	r28
    2270:	08 95       	ret

00002272 <nRF_read_register>:
//-------------------------------------------------------------
uint8_t nRF_read_register(uint8_t reg)
{
    2272:	cf 93       	push	r28
    2274:	c8 2f       	mov	r28, r24
	uint8_t data_in;
	LOW_CSN;
    2276:	85 b1       	in	r24, 0x05	; 5
    2278:	8b 7f       	andi	r24, 0xFB	; 251
    227a:	85 b9       	out	0x05, r24	; 5
	data_in = spi_send_recv(reg);
    227c:	8c 2f       	mov	r24, r28
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
	if(reg != STATUS)
    2284:	c7 30       	cpi	r28, 0x07	; 7
    2286:	21 f0       	breq	.+8      	; 0x2290 <nRF_read_register+0x1e>
	{
		data_in = spi_send_recv(NOP);
    2288:	8f ef       	ldi	r24, 0xFF	; 255
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	0e 94 c0 0c 	call	0x1980	; 0x1980 <spi_send_recv>
	}
	HIGH_CSN;
    2290:	95 b1       	in	r25, 0x05	; 5
    2292:	94 60       	ori	r25, 0x04	; 4
    2294:	95 b9       	out	0x05, r25	; 5
	return data_in;
}
    2296:	cf 91       	pop	r28
    2298:	08 95       	ret

0000229a <__vector_1>:
		//memset(RX_BUF, 0, sizeof(int) * strlen(RX_BUF));//очистка массива
		rx_flag = 0;
	}
}
ISR(INT0_vect)
{
    229a:	1f 92       	push	r1
    229c:	0f 92       	push	r0
    229e:	0f b6       	in	r0, 0x3f	; 63
    22a0:	0f 92       	push	r0
    22a2:	11 24       	eor	r1, r1
    22a4:	2f 93       	push	r18
    22a6:	3f 93       	push	r19
    22a8:	4f 93       	push	r20
    22aa:	5f 93       	push	r21
    22ac:	6f 93       	push	r22
    22ae:	7f 93       	push	r23
    22b0:	8f 93       	push	r24
    22b2:	9f 93       	push	r25
    22b4:	af 93       	push	r26
    22b6:	bf 93       	push	r27
    22b8:	ef 93       	push	r30
    22ba:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    22bc:	8f ea       	ldi	r24, 0xAF	; 175
    22be:	94 e0       	ldi	r25, 0x04	; 4
    22c0:	01 97       	sbiw	r24, 0x01	; 1
    22c2:	f1 f7       	brne	.-4      	; 0x22c0 <__vector_1+0x26>
    22c4:	00 c0       	rjmp	.+0      	; 0x22c6 <__vector_1+0x2c>
    22c6:	00 00       	nop
	uint8_t status=0x01;
	uint8_t pipe;
	_delay_us(300);
	PORTD |= (1<<LED);
    22c8:	8b b1       	in	r24, 0x0b	; 11
    22ca:	80 61       	ori	r24, 0x10	; 16
    22cc:	8b b9       	out	0x0b, r24	; 11
    22ce:	8f ea       	ldi	r24, 0xAF	; 175
    22d0:	94 e0       	ldi	r25, 0x04	; 4
    22d2:	01 97       	sbiw	r24, 0x01	; 1
    22d4:	f1 f7       	brne	.-4      	; 0x22d2 <__vector_1+0x38>
    22d6:	00 c0       	rjmp	.+0      	; 0x22d8 <__vector_1+0x3e>
    22d8:	00 00       	nop
	_delay_us(300);
	PORTD &= ~(1<<LED);
    22da:	8b b1       	in	r24, 0x0b	; 11
    22dc:	8f 7e       	andi	r24, 0xEF	; 239
    22de:	8b b9       	out	0x0b, r24	; 11
	status = nRF_read_register(STATUS);
    22e0:	87 e0       	ldi	r24, 0x07	; 7
    22e2:	0e 94 39 11 	call	0x2272	; 0x2272 <nRF_read_register>
	if(status & 0x40)
    22e6:	86 ff       	sbrs	r24, 6
    22e8:	0a c0       	rjmp	.+20     	; 0x22fe <__vector_1+0x64>
	{
		NRF24_Read_Buf(R_RX_PAYLOAD,RX_BUF,TX_PLOAD_WIDTH);
    22ea:	45 e0       	ldi	r20, 0x05	; 5
    22ec:	65 e9       	ldi	r22, 0x95	; 149
    22ee:	76 e0       	ldi	r23, 0x06	; 6
    22f0:	81 e6       	ldi	r24, 0x61	; 97
    22f2:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <NRF24_Read_Buf>
		nRF_write_register(STATUS, 0x40);
    22f6:	60 e4       	ldi	r22, 0x40	; 64
    22f8:	87 e0       	ldi	r24, 0x07	; 7
    22fa:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	}
	 rx_flag = 1;
    22fe:	81 e0       	ldi	r24, 0x01	; 1
    2300:	80 93 94 06 	sts	0x0694, r24	; 0x800694 <rx_flag>
	 NRF24L01_Receive();
    2304:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <NRF24L01_Receive>
}
    2308:	ff 91       	pop	r31
    230a:	ef 91       	pop	r30
    230c:	bf 91       	pop	r27
    230e:	af 91       	pop	r26
    2310:	9f 91       	pop	r25
    2312:	8f 91       	pop	r24
    2314:	7f 91       	pop	r23
    2316:	6f 91       	pop	r22
    2318:	5f 91       	pop	r21
    231a:	4f 91       	pop	r20
    231c:	3f 91       	pop	r19
    231e:	2f 91       	pop	r18
    2320:	0f 90       	pop	r0
    2322:	0f be       	out	0x3f, r0	; 63
    2324:	0f 90       	pop	r0
    2326:	1f 90       	pop	r1
    2328:	18 95       	reti

0000232a <NRF24L01_RX_Mode>:
}
//-------------------------------------------------------------
void NRF24L01_RX_Mode(void) // включение режима приема
{
	uint8_t regval = 0x00;
	regval = nRF_read_register(CONFIG);
    232a:	80 e0       	ldi	r24, 0x00	; 0
    232c:	0e 94 39 11 	call	0x2272	; 0x2272 <nRF_read_register>
	//разбудим модуль и переведём его в режим приёмника, включив биты PWR_UP и PRIM_RX
	regval |= (1<<PWR_UP)|(1<<PRIM_RX);
    2330:	68 2f       	mov	r22, r24
    2332:	63 60       	ori	r22, 0x03	; 3
	nRF_write_register(CONFIG,regval);
    2334:	80 e0       	ldi	r24, 0x00	; 0
    2336:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	HIGH_CE;
    233a:	85 b1       	in	r24, 0x05	; 5
    233c:	82 60       	ori	r24, 0x02	; 2
    233e:	85 b9       	out	0x05, r24	; 5
    2340:	87 e5       	ldi	r24, 0x57	; 87
    2342:	92 e0       	ldi	r25, 0x02	; 2
    2344:	01 97       	sbiw	r24, 0x01	; 1
    2346:	f1 f7       	brne	.-4      	; 0x2344 <NRF24L01_RX_Mode+0x1a>
    2348:	00 c0       	rjmp	.+0      	; 0x234a <NRF24L01_RX_Mode+0x20>
    234a:	00 00       	nop
	_delay_us(150); //Задержка минимум 130 мкс
	// Flush buffers
	NRF24_FlushRX();
    234c:	0e 94 a0 10 	call	0x2140	; 0x2140 <NRF24_FlushRX>
	NRF24_FlushTX();
    2350:	0e 94 af 10 	call	0x215e	; 0x215e <NRF24_FlushTX>
    2354:	08 95       	ret

00002356 <NRF24_ini>:
volatile uint8_t rx_flag = 0;
extern uint8_t Frame_buffer[1024];
//-------------------------------------------------------------
void NRF24_ini(void)
{
	LOW_CE;
    2356:	85 b1       	in	r24, 0x05	; 5
    2358:	8d 7f       	andi	r24, 0xFD	; 253
    235a:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    235c:	8f e1       	ldi	r24, 0x1F	; 31
    235e:	9e e4       	ldi	r25, 0x4E	; 78
    2360:	01 97       	sbiw	r24, 0x01	; 1
    2362:	f1 f7       	brne	.-4      	; 0x2360 <NRF24_ini+0xa>
    2364:	00 c0       	rjmp	.+0      	; 0x2366 <NRF24_ini+0x10>
    2366:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(CONFIG, 0x0a); // Set PWR_UP bit, enable CRC(1 byte) &Prim_RX:0 (Transmitter)
    2368:	6a e0       	ldi	r22, 0x0A	; 10
    236a:	80 e0       	ldi	r24, 0x00	; 0
    236c:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
    2370:	8f e1       	ldi	r24, 0x1F	; 31
    2372:	9e e4       	ldi	r25, 0x4E	; 78
    2374:	01 97       	sbiw	r24, 0x01	; 1
    2376:	f1 f7       	brne	.-4      	; 0x2374 <NRF24_ini+0x1e>
    2378:	00 c0       	rjmp	.+0      	; 0x237a <NRF24_ini+0x24>
    237a:	00 00       	nop
	_delay_ms(5);
	nRF_write_register(EN_AA, 0x02); // Enable Pipe1
    237c:	62 e0       	ldi	r22, 0x02	; 2
    237e:	81 e0       	ldi	r24, 0x01	; 1
    2380:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	nRF_write_register(EN_RXADDR, 0x02); // Enable Pipe1
    2384:	62 e0       	ldi	r22, 0x02	; 2
    2386:	82 e0       	ldi	r24, 0x02	; 2
    2388:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	nRF_write_register(SETUP_AW, 0x01); // Setup address width=3 bytes
    238c:	61 e0       	ldi	r22, 0x01	; 1
    238e:	83 e0       	ldi	r24, 0x03	; 3
    2390:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	nRF_write_register(SETUP_RETR, 0x5F); // // 1500us, 15 retrans
    2394:	6f e5       	ldi	r22, 0x5F	; 95
    2396:	84 e0       	ldi	r24, 0x04	; 4
    2398:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	NRF24_ToggleFeatures();
    239c:	0e 94 be 10 	call	0x217c	; 0x217c <NRF24_ToggleFeatures>
	nRF_write_register(FEATURE, 0);
    23a0:	60 e0       	ldi	r22, 0x00	; 0
    23a2:	8d e1       	ldi	r24, 0x1D	; 29
    23a4:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	nRF_write_register(DYNPD, 0);
    23a8:	60 e0       	ldi	r22, 0x00	; 0
    23aa:	8c e1       	ldi	r24, 0x1C	; 28
    23ac:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	nRF_write_register(STATUS, 0x70);//Reset flags for IRQ
    23b0:	60 e7       	ldi	r22, 0x70	; 112
    23b2:	87 e0       	ldi	r24, 0x07	; 7
    23b4:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	nRF_write_register(RF_CH, 76); // частота 2476 MHz
    23b8:	6c e4       	ldi	r22, 0x4C	; 76
    23ba:	85 e0       	ldi	r24, 0x05	; 5
    23bc:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	nRF_write_register(RF_SETUP, 0x06); //TX_PWR:0dBm, Datarate:1Mbps
    23c0:	66 e0       	ldi	r22, 0x06	; 6
    23c2:	86 e0       	ldi	r24, 0x06	; 6
    23c4:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	NRF24_Write_Buf(TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);
    23c8:	43 e0       	ldi	r20, 0x03	; 3
    23ca:	62 e0       	ldi	r22, 0x02	; 2
    23cc:	71 e0       	ldi	r23, 0x01	; 1
    23ce:	80 e1       	ldi	r24, 0x10	; 16
    23d0:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <NRF24_Write_Buf>
	NRF24_Write_Buf(RX_ADDR_P1, TX_ADDRESS, TX_ADR_WIDTH);
    23d4:	43 e0       	ldi	r20, 0x03	; 3
    23d6:	62 e0       	ldi	r22, 0x02	; 2
    23d8:	71 e0       	ldi	r23, 0x01	; 1
    23da:	8b e0       	ldi	r24, 0x0B	; 11
    23dc:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <NRF24_Write_Buf>
	nRF_write_register(RX_PW_P1, TX_PLOAD_WIDTH); //Number of bytes in RX payload in data pipe 1
    23e0:	65 e0       	ldi	r22, 0x05	; 5
    23e2:	82 e1       	ldi	r24, 0x12	; 18
    23e4:	0e 94 27 11 	call	0x224e	; 0x224e <nRF_write_register>
	//пока уходим в режим приёмника
	NRF24L01_RX_Mode();
    23e8:	0e 94 95 11 	call	0x232a	; 0x232a <NRF24L01_RX_Mode>
    23ec:	08 95       	ret

000023ee <mem_set>:
	return FR_OK;

fw_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    23ee:	fc 01       	movw	r30, r24
    23f0:	03 c0       	rjmp	.+6      	; 0x23f8 <mem_set+0xa>
    23f2:	60 83       	st	Z, r22
    23f4:	ac 01       	movw	r20, r24
    23f6:	31 96       	adiw	r30, 0x01	; 1
    23f8:	ca 01       	movw	r24, r20
    23fa:	01 97       	sbiw	r24, 0x01	; 1
    23fc:	45 2b       	or	r20, r21
    23fe:	c9 f7       	brne	.-14     	; 0x23f2 <mem_set+0x4>
    2400:	08 95       	ret

00002402 <mem_cmp>:
    2402:	cf 93       	push	r28
    2404:	df 93       	push	r29
    2406:	dc 01       	movw	r26, r24
    2408:	fb 01       	movw	r30, r22
    240a:	80 e0       	ldi	r24, 0x00	; 0
    240c:	90 e0       	ldi	r25, 0x00	; 0
    240e:	02 c0       	rjmp	.+4      	; 0x2414 <mem_cmp+0x12>
    2410:	fb 01       	movw	r30, r22
    2412:	de 01       	movw	r26, r28
    2414:	9a 01       	movw	r18, r20
    2416:	21 50       	subi	r18, 0x01	; 1
    2418:	31 09       	sbc	r19, r1
    241a:	45 2b       	or	r20, r21
    241c:	61 f0       	breq	.+24     	; 0x2436 <mem_cmp+0x34>
    241e:	ed 01       	movw	r28, r26
    2420:	21 96       	adiw	r28, 0x01	; 1
    2422:	8c 91       	ld	r24, X
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	bf 01       	movw	r22, r30
    2428:	6f 5f       	subi	r22, 0xFF	; 255
    242a:	7f 4f       	sbci	r23, 0xFF	; 255
    242c:	40 81       	ld	r20, Z
    242e:	84 1b       	sub	r24, r20
    2430:	91 09       	sbc	r25, r1
    2432:	a9 01       	movw	r20, r18
    2434:	69 f3       	breq	.-38     	; 0x2410 <mem_cmp+0xe>
    2436:	df 91       	pop	r29
    2438:	cf 91       	pop	r28
    243a:	08 95       	ret

0000243c <clust2sect>:
    243c:	0f 93       	push	r16
    243e:	1f 93       	push	r17
    2440:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    2444:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    2448:	9b 01       	movw	r18, r22
    244a:	ac 01       	movw	r20, r24
    244c:	22 50       	subi	r18, 0x02	; 2
    244e:	31 09       	sbc	r19, r1
    2450:	41 09       	sbc	r20, r1
    2452:	51 09       	sbc	r21, r1
    2454:	80 85       	ldd	r24, Z+8	; 0x08
    2456:	91 85       	ldd	r25, Z+9	; 0x09
    2458:	a2 85       	ldd	r26, Z+10	; 0x0a
    245a:	b3 85       	ldd	r27, Z+11	; 0x0b
    245c:	02 97       	sbiw	r24, 0x02	; 2
    245e:	a1 09       	sbc	r26, r1
    2460:	b1 09       	sbc	r27, r1
    2462:	28 17       	cp	r18, r24
    2464:	39 07       	cpc	r19, r25
    2466:	4a 07       	cpc	r20, r26
    2468:	5b 07       	cpc	r21, r27
    246a:	68 f4       	brcc	.+26     	; 0x2486 <clust2sect+0x4a>
    246c:	a1 81       	ldd	r26, Z+1	; 0x01
    246e:	b0 e0       	ldi	r27, 0x00	; 0
    2470:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
    2474:	04 89       	ldd	r16, Z+20	; 0x14
    2476:	15 89       	ldd	r17, Z+21	; 0x15
    2478:	26 89       	ldd	r18, Z+22	; 0x16
    247a:	37 89       	ldd	r19, Z+23	; 0x17
    247c:	60 0f       	add	r22, r16
    247e:	71 1f       	adc	r23, r17
    2480:	82 1f       	adc	r24, r18
    2482:	93 1f       	adc	r25, r19
    2484:	03 c0       	rjmp	.+6      	; 0x248c <clust2sect+0x50>
    2486:	60 e0       	ldi	r22, 0x00	; 0
    2488:	70 e0       	ldi	r23, 0x00	; 0
    248a:	cb 01       	movw	r24, r22
    248c:	1f 91       	pop	r17
    248e:	0f 91       	pop	r16
    2490:	08 95       	ret

00002492 <dir_rewind>:
    2492:	0f 93       	push	r16
    2494:	1f 93       	push	r17
    2496:	cf 93       	push	r28
    2498:	df 93       	push	r29
    249a:	fc 01       	movw	r30, r24
    249c:	a0 91 9a 06 	lds	r26, 0x069A	; 0x80069a <FatFs>
    24a0:	b0 91 9b 06 	lds	r27, 0x069B	; 0x80069b <FatFs+0x1>
    24a4:	11 82       	std	Z+1, r1	; 0x01
    24a6:	10 82       	st	Z, r1
    24a8:	64 81       	ldd	r22, Z+4	; 0x04
    24aa:	75 81       	ldd	r23, Z+5	; 0x05
    24ac:	86 81       	ldd	r24, Z+6	; 0x06
    24ae:	97 81       	ldd	r25, Z+7	; 0x07
    24b0:	61 30       	cpi	r22, 0x01	; 1
    24b2:	71 05       	cpc	r23, r1
    24b4:	81 05       	cpc	r24, r1
    24b6:	91 05       	cpc	r25, r1
    24b8:	91 f1       	breq	.+100    	; 0x251e <dir_rewind+0x8c>
    24ba:	18 96       	adiw	r26, 0x08	; 8
    24bc:	0d 91       	ld	r16, X+
    24be:	1d 91       	ld	r17, X+
    24c0:	2d 91       	ld	r18, X+
    24c2:	3c 91       	ld	r19, X
    24c4:	1b 97       	sbiw	r26, 0x0b	; 11
    24c6:	60 17       	cp	r22, r16
    24c8:	71 07       	cpc	r23, r17
    24ca:	82 07       	cpc	r24, r18
    24cc:	93 07       	cpc	r25, r19
    24ce:	48 f5       	brcc	.+82     	; 0x2522 <dir_rewind+0x90>
    24d0:	61 15       	cp	r22, r1
    24d2:	71 05       	cpc	r23, r1
    24d4:	81 05       	cpc	r24, r1
    24d6:	91 05       	cpc	r25, r1
    24d8:	49 f4       	brne	.+18     	; 0x24ec <dir_rewind+0x5a>
    24da:	2c 91       	ld	r18, X
    24dc:	23 30       	cpi	r18, 0x03	; 3
    24de:	31 f4       	brne	.+12     	; 0x24ec <dir_rewind+0x5a>
    24e0:	50 96       	adiw	r26, 0x10	; 16
    24e2:	6d 91       	ld	r22, X+
    24e4:	7d 91       	ld	r23, X+
    24e6:	8d 91       	ld	r24, X+
    24e8:	9c 91       	ld	r25, X
    24ea:	53 97       	sbiw	r26, 0x13	; 19
    24ec:	ef 01       	movw	r28, r30
    24ee:	60 87       	std	Z+8, r22	; 0x08
    24f0:	71 87       	std	Z+9, r23	; 0x09
    24f2:	82 87       	std	Z+10, r24	; 0x0a
    24f4:	93 87       	std	Z+11, r25	; 0x0b
    24f6:	61 15       	cp	r22, r1
    24f8:	71 05       	cpc	r23, r1
    24fa:	81 05       	cpc	r24, r1
    24fc:	91 05       	cpc	r25, r1
    24fe:	19 f0       	breq	.+6      	; 0x2506 <dir_rewind+0x74>
    2500:	0e 94 1e 12 	call	0x243c	; 0x243c <clust2sect>
    2504:	06 c0       	rjmp	.+12     	; 0x2512 <dir_rewind+0x80>
    2506:	50 96       	adiw	r26, 0x10	; 16
    2508:	6d 91       	ld	r22, X+
    250a:	7d 91       	ld	r23, X+
    250c:	8d 91       	ld	r24, X+
    250e:	9c 91       	ld	r25, X
    2510:	53 97       	sbiw	r26, 0x13	; 19
    2512:	6c 87       	std	Y+12, r22	; 0x0c
    2514:	7d 87       	std	Y+13, r23	; 0x0d
    2516:	8e 87       	std	Y+14, r24	; 0x0e
    2518:	9f 87       	std	Y+15, r25	; 0x0f
    251a:	80 e0       	ldi	r24, 0x00	; 0
    251c:	03 c0       	rjmp	.+6      	; 0x2524 <dir_rewind+0x92>
    251e:	81 e0       	ldi	r24, 0x01	; 1
    2520:	01 c0       	rjmp	.+2      	; 0x2524 <dir_rewind+0x92>
    2522:	81 e0       	ldi	r24, 0x01	; 1
    2524:	df 91       	pop	r29
    2526:	cf 91       	pop	r28
    2528:	1f 91       	pop	r17
    252a:	0f 91       	pop	r16
    252c:	08 95       	ret

0000252e <create_name>:
    252e:	0f 93       	push	r16
    2530:	1f 93       	push	r17
    2532:	cf 93       	push	r28
    2534:	df 93       	push	r29
    2536:	eb 01       	movw	r28, r22
    2538:	fc 01       	movw	r30, r24
    253a:	02 81       	ldd	r16, Z+2	; 0x02
    253c:	13 81       	ldd	r17, Z+3	; 0x03
    253e:	4b e0       	ldi	r20, 0x0B	; 11
    2540:	50 e0       	ldi	r21, 0x00	; 0
    2542:	60 e2       	ldi	r22, 0x20	; 32
    2544:	70 e0       	ldi	r23, 0x00	; 0
    2546:	c8 01       	movw	r24, r16
    2548:	0e 94 f7 11 	call	0x23ee	; 0x23ee <mem_set>
    254c:	28 81       	ld	r18, Y
    254e:	39 81       	ldd	r19, Y+1	; 0x01
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	80 e0       	ldi	r24, 0x00	; 0
    2554:	58 e0       	ldi	r21, 0x08	; 8
    2556:	01 c0       	rjmp	.+2      	; 0x255a <create_name+0x2c>
    2558:	84 2f       	mov	r24, r20
    255a:	41 e0       	ldi	r20, 0x01	; 1
    255c:	48 0f       	add	r20, r24
    255e:	f9 01       	movw	r30, r18
    2560:	e8 0f       	add	r30, r24
    2562:	f1 1d       	adc	r31, r1
    2564:	80 81       	ld	r24, Z
    2566:	81 32       	cpi	r24, 0x21	; 33
    2568:	c0 f0       	brcs	.+48     	; 0x259a <create_name+0x6c>
    256a:	8f 32       	cpi	r24, 0x2F	; 47
    256c:	b1 f0       	breq	.+44     	; 0x259a <create_name+0x6c>
    256e:	8e 32       	cpi	r24, 0x2E	; 46
    2570:	11 f0       	breq	.+4      	; 0x2576 <create_name+0x48>
    2572:	95 17       	cp	r25, r21
    2574:	38 f0       	brcs	.+14     	; 0x2584 <create_name+0x56>
    2576:	58 30       	cpi	r21, 0x08	; 8
    2578:	81 f4       	brne	.+32     	; 0x259a <create_name+0x6c>
    257a:	8e 32       	cpi	r24, 0x2E	; 46
    257c:	71 f4       	brne	.+28     	; 0x259a <create_name+0x6c>
    257e:	98 e0       	ldi	r25, 0x08	; 8
    2580:	5b e0       	ldi	r21, 0x0B	; 11
    2582:	ea cf       	rjmp	.-44     	; 0x2558 <create_name+0x2a>
    2584:	6f e9       	ldi	r22, 0x9F	; 159
    2586:	68 0f       	add	r22, r24
    2588:	6a 31       	cpi	r22, 0x1A	; 26
    258a:	08 f4       	brcc	.+2      	; 0x258e <create_name+0x60>
    258c:	80 52       	subi	r24, 0x20	; 32
    258e:	f8 01       	movw	r30, r16
    2590:	e9 0f       	add	r30, r25
    2592:	f1 1d       	adc	r31, r1
    2594:	80 83       	st	Z, r24
    2596:	9f 5f       	subi	r25, 0xFF	; 255
    2598:	df cf       	rjmp	.-66     	; 0x2558 <create_name+0x2a>
    259a:	24 0f       	add	r18, r20
    259c:	31 1d       	adc	r19, r1
    259e:	39 83       	std	Y+1, r19	; 0x01
    25a0:	28 83       	st	Y, r18
    25a2:	91 e0       	ldi	r25, 0x01	; 1
    25a4:	81 32       	cpi	r24, 0x21	; 33
    25a6:	08 f0       	brcs	.+2      	; 0x25aa <create_name+0x7c>
    25a8:	90 e0       	ldi	r25, 0x00	; 0
    25aa:	f8 01       	movw	r30, r16
    25ac:	93 87       	std	Z+11, r25	; 0x0b
    25ae:	80 e0       	ldi	r24, 0x00	; 0
    25b0:	df 91       	pop	r29
    25b2:	cf 91       	pop	r28
    25b4:	1f 91       	pop	r17
    25b6:	0f 91       	pop	r16
    25b8:	08 95       	ret

000025ba <check_fs>:
    25ba:	cf 92       	push	r12
    25bc:	df 92       	push	r13
    25be:	ef 92       	push	r14
    25c0:	ff 92       	push	r15
    25c2:	0f 93       	push	r16
    25c4:	1f 93       	push	r17
    25c6:	cf 93       	push	r28
    25c8:	df 93       	push	r29
    25ca:	ec 01       	movw	r28, r24
    25cc:	6a 01       	movw	r12, r20
    25ce:	7b 01       	movw	r14, r22
    25d0:	02 e0       	ldi	r16, 0x02	; 2
    25d2:	10 e0       	ldi	r17, 0x00	; 0
    25d4:	2e ef       	ldi	r18, 0xFE	; 254
    25d6:	31 e0       	ldi	r19, 0x01	; 1
    25d8:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    25dc:	81 11       	cpse	r24, r1
    25de:	25 c0       	rjmp	.+74     	; 0x262a <check_fs+0x70>
    25e0:	88 81       	ld	r24, Y
    25e2:	99 81       	ldd	r25, Y+1	; 0x01
    25e4:	85 35       	cpi	r24, 0x55	; 85
    25e6:	9a 4a       	sbci	r25, 0xAA	; 170
    25e8:	11 f5       	brne	.+68     	; 0x262e <check_fs+0x74>
    25ea:	26 e3       	ldi	r18, 0x36	; 54
    25ec:	30 e0       	ldi	r19, 0x00	; 0
    25ee:	b7 01       	movw	r22, r14
    25f0:	a6 01       	movw	r20, r12
    25f2:	ce 01       	movw	r24, r28
    25f4:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    25f8:	81 11       	cpse	r24, r1
    25fa:	05 c0       	rjmp	.+10     	; 0x2606 <check_fs+0x4c>
    25fc:	88 81       	ld	r24, Y
    25fe:	99 81       	ldd	r25, Y+1	; 0x01
    2600:	86 34       	cpi	r24, 0x46	; 70
    2602:	91 44       	sbci	r25, 0x41	; 65
    2604:	b1 f0       	breq	.+44     	; 0x2632 <check_fs+0x78>
    2606:	02 e0       	ldi	r16, 0x02	; 2
    2608:	10 e0       	ldi	r17, 0x00	; 0
    260a:	22 e5       	ldi	r18, 0x52	; 82
    260c:	30 e0       	ldi	r19, 0x00	; 0
    260e:	b7 01       	movw	r22, r14
    2610:	a6 01       	movw	r20, r12
    2612:	ce 01       	movw	r24, r28
    2614:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    2618:	81 11       	cpse	r24, r1
    261a:	0d c0       	rjmp	.+26     	; 0x2636 <check_fs+0x7c>
    261c:	88 81       	ld	r24, Y
    261e:	99 81       	ldd	r25, Y+1	; 0x01
    2620:	86 34       	cpi	r24, 0x46	; 70
    2622:	91 44       	sbci	r25, 0x41	; 65
    2624:	51 f0       	breq	.+20     	; 0x263a <check_fs+0x80>
    2626:	81 e0       	ldi	r24, 0x01	; 1
    2628:	09 c0       	rjmp	.+18     	; 0x263c <check_fs+0x82>
    262a:	83 e0       	ldi	r24, 0x03	; 3
    262c:	07 c0       	rjmp	.+14     	; 0x263c <check_fs+0x82>
    262e:	82 e0       	ldi	r24, 0x02	; 2
    2630:	05 c0       	rjmp	.+10     	; 0x263c <check_fs+0x82>
    2632:	80 e0       	ldi	r24, 0x00	; 0
    2634:	03 c0       	rjmp	.+6      	; 0x263c <check_fs+0x82>
    2636:	81 e0       	ldi	r24, 0x01	; 1
    2638:	01 c0       	rjmp	.+2      	; 0x263c <check_fs+0x82>
    263a:	80 e0       	ldi	r24, 0x00	; 0
    263c:	df 91       	pop	r29
    263e:	cf 91       	pop	r28
    2640:	1f 91       	pop	r17
    2642:	0f 91       	pop	r16
    2644:	ff 90       	pop	r15
    2646:	ef 90       	pop	r14
    2648:	df 90       	pop	r13
    264a:	cf 90       	pop	r12
    264c:	08 95       	ret

0000264e <get_fat>:
    264e:	4f 92       	push	r4
    2650:	5f 92       	push	r5
    2652:	6f 92       	push	r6
    2654:	7f 92       	push	r7
    2656:	8f 92       	push	r8
    2658:	9f 92       	push	r9
    265a:	af 92       	push	r10
    265c:	bf 92       	push	r11
    265e:	cf 92       	push	r12
    2660:	df 92       	push	r13
    2662:	ef 92       	push	r14
    2664:	ff 92       	push	r15
    2666:	0f 93       	push	r16
    2668:	1f 93       	push	r17
    266a:	cf 93       	push	r28
    266c:	df 93       	push	r29
    266e:	00 d0       	rcall	.+0      	; 0x2670 <get_fat+0x22>
    2670:	00 d0       	rcall	.+0      	; 0x2672 <get_fat+0x24>
    2672:	cd b7       	in	r28, 0x3d	; 61
    2674:	de b7       	in	r29, 0x3e	; 62
    2676:	e0 90 9a 06 	lds	r14, 0x069A	; 0x80069a <FatFs>
    267a:	f0 90 9b 06 	lds	r15, 0x069B	; 0x80069b <FatFs+0x1>
    267e:	62 30       	cpi	r22, 0x02	; 2
    2680:	71 05       	cpc	r23, r1
    2682:	81 05       	cpc	r24, r1
    2684:	91 05       	cpc	r25, r1
    2686:	08 f4       	brcc	.+2      	; 0x268a <get_fat+0x3c>
    2688:	bf c0       	rjmp	.+382    	; 0x2808 <get_fat+0x1ba>
    268a:	f7 01       	movw	r30, r14
    268c:	80 84       	ldd	r8, Z+8	; 0x08
    268e:	91 84       	ldd	r9, Z+9	; 0x09
    2690:	a2 84       	ldd	r10, Z+10	; 0x0a
    2692:	b3 84       	ldd	r11, Z+11	; 0x0b
    2694:	68 15       	cp	r22, r8
    2696:	79 05       	cpc	r23, r9
    2698:	8a 05       	cpc	r24, r10
    269a:	9b 05       	cpc	r25, r11
    269c:	08 f0       	brcs	.+2      	; 0x26a0 <get_fat+0x52>
    269e:	b9 c0       	rjmp	.+370    	; 0x2812 <get_fat+0x1c4>
    26a0:	4b 01       	movw	r8, r22
    26a2:	5c 01       	movw	r10, r24
    26a4:	80 81       	ld	r24, Z
    26a6:	82 30       	cpi	r24, 0x02	; 2
    26a8:	09 f4       	brne	.+2      	; 0x26ac <get_fat+0x5e>
    26aa:	62 c0       	rjmp	.+196    	; 0x2770 <get_fat+0x122>
    26ac:	83 30       	cpi	r24, 0x03	; 3
    26ae:	09 f4       	brne	.+2      	; 0x26b2 <get_fat+0x64>
    26b0:	7f c0       	rjmp	.+254    	; 0x27b0 <get_fat+0x162>
    26b2:	81 30       	cpi	r24, 0x01	; 1
    26b4:	09 f0       	breq	.+2      	; 0x26b8 <get_fat+0x6a>
    26b6:	b2 c0       	rjmp	.+356    	; 0x281c <get_fat+0x1ce>
    26b8:	c4 01       	movw	r24, r8
    26ba:	96 95       	lsr	r25
    26bc:	87 95       	ror	r24
    26be:	88 0d       	add	r24, r8
    26c0:	99 1d       	adc	r25, r9
    26c2:	9c 01       	movw	r18, r24
    26c4:	31 70       	andi	r19, 0x01	; 1
    26c6:	89 2f       	mov	r24, r25
    26c8:	99 27       	eor	r25, r25
    26ca:	86 95       	lsr	r24
    26cc:	2f 3f       	cpi	r18, 0xFF	; 255
    26ce:	f1 e0       	ldi	r31, 0x01	; 1
    26d0:	3f 07       	cpc	r19, r31
    26d2:	91 f0       	breq	.+36     	; 0x26f8 <get_fat+0xaa>
    26d4:	f7 01       	movw	r30, r14
    26d6:	44 85       	ldd	r20, Z+12	; 0x0c
    26d8:	55 85       	ldd	r21, Z+13	; 0x0d
    26da:	66 85       	ldd	r22, Z+14	; 0x0e
    26dc:	77 85       	ldd	r23, Z+15	; 0x0f
    26de:	48 0f       	add	r20, r24
    26e0:	59 1f       	adc	r21, r25
    26e2:	61 1d       	adc	r22, r1
    26e4:	71 1d       	adc	r23, r1
    26e6:	02 e0       	ldi	r16, 0x02	; 2
    26e8:	10 e0       	ldi	r17, 0x00	; 0
    26ea:	ce 01       	movw	r24, r28
    26ec:	01 96       	adiw	r24, 0x01	; 1
    26ee:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    26f2:	88 23       	and	r24, r24
    26f4:	61 f1       	breq	.+88     	; 0x274e <get_fat+0x100>
    26f6:	97 c0       	rjmp	.+302    	; 0x2826 <get_fat+0x1d8>
    26f8:	f7 01       	movw	r30, r14
    26fa:	44 85       	ldd	r20, Z+12	; 0x0c
    26fc:	55 85       	ldd	r21, Z+13	; 0x0d
    26fe:	66 85       	ldd	r22, Z+14	; 0x0e
    2700:	77 85       	ldd	r23, Z+15	; 0x0f
    2702:	2c 01       	movw	r4, r24
    2704:	61 2c       	mov	r6, r1
    2706:	71 2c       	mov	r7, r1
    2708:	44 0d       	add	r20, r4
    270a:	55 1d       	adc	r21, r5
    270c:	66 1d       	adc	r22, r6
    270e:	77 1d       	adc	r23, r7
    2710:	01 e0       	ldi	r16, 0x01	; 1
    2712:	10 e0       	ldi	r17, 0x00	; 0
    2714:	2f ef       	ldi	r18, 0xFF	; 255
    2716:	31 e0       	ldi	r19, 0x01	; 1
    2718:	ce 01       	movw	r24, r28
    271a:	01 96       	adiw	r24, 0x01	; 1
    271c:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    2720:	81 11       	cpse	r24, r1
    2722:	86 c0       	rjmp	.+268    	; 0x2830 <get_fat+0x1e2>
    2724:	f7 01       	movw	r30, r14
    2726:	44 85       	ldd	r20, Z+12	; 0x0c
    2728:	55 85       	ldd	r21, Z+13	; 0x0d
    272a:	66 85       	ldd	r22, Z+14	; 0x0e
    272c:	77 85       	ldd	r23, Z+15	; 0x0f
    272e:	44 0d       	add	r20, r4
    2730:	55 1d       	adc	r21, r5
    2732:	66 1d       	adc	r22, r6
    2734:	77 1d       	adc	r23, r7
    2736:	4f 5f       	subi	r20, 0xFF	; 255
    2738:	5f 4f       	sbci	r21, 0xFF	; 255
    273a:	6f 4f       	sbci	r22, 0xFF	; 255
    273c:	7f 4f       	sbci	r23, 0xFF	; 255
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	ce 01       	movw	r24, r28
    2744:	02 96       	adiw	r24, 0x02	; 2
    2746:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    274a:	81 11       	cpse	r24, r1
    274c:	76 c0       	rjmp	.+236    	; 0x283a <get_fat+0x1ec>
    274e:	69 81       	ldd	r22, Y+1	; 0x01
    2750:	7a 81       	ldd	r23, Y+2	; 0x02
    2752:	80 fe       	sbrs	r8, 0
    2754:	09 c0       	rjmp	.+18     	; 0x2768 <get_fat+0x11a>
    2756:	72 95       	swap	r23
    2758:	62 95       	swap	r22
    275a:	6f 70       	andi	r22, 0x0F	; 15
    275c:	67 27       	eor	r22, r23
    275e:	7f 70       	andi	r23, 0x0F	; 15
    2760:	67 27       	eor	r22, r23
    2762:	80 e0       	ldi	r24, 0x00	; 0
    2764:	90 e0       	ldi	r25, 0x00	; 0
    2766:	77 c0       	rjmp	.+238    	; 0x2856 <get_fat+0x208>
    2768:	7f 70       	andi	r23, 0x0F	; 15
    276a:	80 e0       	ldi	r24, 0x00	; 0
    276c:	90 e0       	ldi	r25, 0x00	; 0
    276e:	73 c0       	rjmp	.+230    	; 0x2856 <get_fat+0x208>
    2770:	94 01       	movw	r18, r8
    2772:	33 27       	eor	r19, r19
    2774:	22 0f       	add	r18, r18
    2776:	33 1f       	adc	r19, r19
    2778:	f7 01       	movw	r30, r14
    277a:	c4 84       	ldd	r12, Z+12	; 0x0c
    277c:	d5 84       	ldd	r13, Z+13	; 0x0d
    277e:	e6 84       	ldd	r14, Z+14	; 0x0e
    2780:	f7 84       	ldd	r15, Z+15	; 0x0f
    2782:	bb 27       	eor	r27, r27
    2784:	ab 2d       	mov	r26, r11
    2786:	9a 2d       	mov	r25, r10
    2788:	89 2d       	mov	r24, r9
    278a:	b7 01       	movw	r22, r14
    278c:	a6 01       	movw	r20, r12
    278e:	48 0f       	add	r20, r24
    2790:	59 1f       	adc	r21, r25
    2792:	6a 1f       	adc	r22, r26
    2794:	7b 1f       	adc	r23, r27
    2796:	02 e0       	ldi	r16, 0x02	; 2
    2798:	10 e0       	ldi	r17, 0x00	; 0
    279a:	ce 01       	movw	r24, r28
    279c:	01 96       	adiw	r24, 0x01	; 1
    279e:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    27a2:	81 11       	cpse	r24, r1
    27a4:	4f c0       	rjmp	.+158    	; 0x2844 <get_fat+0x1f6>
    27a6:	69 81       	ldd	r22, Y+1	; 0x01
    27a8:	7a 81       	ldd	r23, Y+2	; 0x02
    27aa:	80 e0       	ldi	r24, 0x00	; 0
    27ac:	90 e0       	ldi	r25, 0x00	; 0
    27ae:	53 c0       	rjmp	.+166    	; 0x2856 <get_fat+0x208>
    27b0:	94 01       	movw	r18, r8
    27b2:	2f 77       	andi	r18, 0x7F	; 127
    27b4:	33 27       	eor	r19, r19
    27b6:	22 0f       	add	r18, r18
    27b8:	33 1f       	adc	r19, r19
    27ba:	22 0f       	add	r18, r18
    27bc:	33 1f       	adc	r19, r19
    27be:	f7 01       	movw	r30, r14
    27c0:	c4 84       	ldd	r12, Z+12	; 0x0c
    27c2:	d5 84       	ldd	r13, Z+13	; 0x0d
    27c4:	e6 84       	ldd	r14, Z+14	; 0x0e
    27c6:	f7 84       	ldd	r15, Z+15	; 0x0f
    27c8:	d5 01       	movw	r26, r10
    27ca:	c4 01       	movw	r24, r8
    27cc:	68 94       	set
    27ce:	16 f8       	bld	r1, 6
    27d0:	b6 95       	lsr	r27
    27d2:	a7 95       	ror	r26
    27d4:	97 95       	ror	r25
    27d6:	87 95       	ror	r24
    27d8:	16 94       	lsr	r1
    27da:	d1 f7       	brne	.-12     	; 0x27d0 <get_fat+0x182>
    27dc:	b7 01       	movw	r22, r14
    27de:	a6 01       	movw	r20, r12
    27e0:	48 0f       	add	r20, r24
    27e2:	59 1f       	adc	r21, r25
    27e4:	6a 1f       	adc	r22, r26
    27e6:	7b 1f       	adc	r23, r27
    27e8:	04 e0       	ldi	r16, 0x04	; 4
    27ea:	10 e0       	ldi	r17, 0x00	; 0
    27ec:	ce 01       	movw	r24, r28
    27ee:	01 96       	adiw	r24, 0x01	; 1
    27f0:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    27f4:	81 11       	cpse	r24, r1
    27f6:	2b c0       	rjmp	.+86     	; 0x284e <get_fat+0x200>
    27f8:	89 81       	ldd	r24, Y+1	; 0x01
    27fa:	9a 81       	ldd	r25, Y+2	; 0x02
    27fc:	ab 81       	ldd	r26, Y+3	; 0x03
    27fe:	bc 81       	ldd	r27, Y+4	; 0x04
    2800:	bc 01       	movw	r22, r24
    2802:	cd 01       	movw	r24, r26
    2804:	9f 70       	andi	r25, 0x0F	; 15
    2806:	27 c0       	rjmp	.+78     	; 0x2856 <get_fat+0x208>
    2808:	61 e0       	ldi	r22, 0x01	; 1
    280a:	70 e0       	ldi	r23, 0x00	; 0
    280c:	80 e0       	ldi	r24, 0x00	; 0
    280e:	90 e0       	ldi	r25, 0x00	; 0
    2810:	22 c0       	rjmp	.+68     	; 0x2856 <get_fat+0x208>
    2812:	61 e0       	ldi	r22, 0x01	; 1
    2814:	70 e0       	ldi	r23, 0x00	; 0
    2816:	80 e0       	ldi	r24, 0x00	; 0
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	1d c0       	rjmp	.+58     	; 0x2856 <get_fat+0x208>
    281c:	61 e0       	ldi	r22, 0x01	; 1
    281e:	70 e0       	ldi	r23, 0x00	; 0
    2820:	80 e0       	ldi	r24, 0x00	; 0
    2822:	90 e0       	ldi	r25, 0x00	; 0
    2824:	18 c0       	rjmp	.+48     	; 0x2856 <get_fat+0x208>
    2826:	61 e0       	ldi	r22, 0x01	; 1
    2828:	70 e0       	ldi	r23, 0x00	; 0
    282a:	80 e0       	ldi	r24, 0x00	; 0
    282c:	90 e0       	ldi	r25, 0x00	; 0
    282e:	13 c0       	rjmp	.+38     	; 0x2856 <get_fat+0x208>
    2830:	61 e0       	ldi	r22, 0x01	; 1
    2832:	70 e0       	ldi	r23, 0x00	; 0
    2834:	80 e0       	ldi	r24, 0x00	; 0
    2836:	90 e0       	ldi	r25, 0x00	; 0
    2838:	0e c0       	rjmp	.+28     	; 0x2856 <get_fat+0x208>
    283a:	61 e0       	ldi	r22, 0x01	; 1
    283c:	70 e0       	ldi	r23, 0x00	; 0
    283e:	80 e0       	ldi	r24, 0x00	; 0
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	09 c0       	rjmp	.+18     	; 0x2856 <get_fat+0x208>
    2844:	61 e0       	ldi	r22, 0x01	; 1
    2846:	70 e0       	ldi	r23, 0x00	; 0
    2848:	80 e0       	ldi	r24, 0x00	; 0
    284a:	90 e0       	ldi	r25, 0x00	; 0
    284c:	04 c0       	rjmp	.+8      	; 0x2856 <get_fat+0x208>
    284e:	61 e0       	ldi	r22, 0x01	; 1
    2850:	70 e0       	ldi	r23, 0x00	; 0
    2852:	80 e0       	ldi	r24, 0x00	; 0
    2854:	90 e0       	ldi	r25, 0x00	; 0
    2856:	0f 90       	pop	r0
    2858:	0f 90       	pop	r0
    285a:	0f 90       	pop	r0
    285c:	0f 90       	pop	r0
    285e:	df 91       	pop	r29
    2860:	cf 91       	pop	r28
    2862:	1f 91       	pop	r17
    2864:	0f 91       	pop	r16
    2866:	ff 90       	pop	r15
    2868:	ef 90       	pop	r14
    286a:	df 90       	pop	r13
    286c:	cf 90       	pop	r12
    286e:	bf 90       	pop	r11
    2870:	af 90       	pop	r10
    2872:	9f 90       	pop	r9
    2874:	8f 90       	pop	r8
    2876:	7f 90       	pop	r7
    2878:	6f 90       	pop	r6
    287a:	5f 90       	pop	r5
    287c:	4f 90       	pop	r4
    287e:	08 95       	ret

00002880 <dir_next>:
    2880:	cf 92       	push	r12
    2882:	df 92       	push	r13
    2884:	ef 92       	push	r14
    2886:	ff 92       	push	r15
    2888:	0f 93       	push	r16
    288a:	1f 93       	push	r17
    288c:	cf 93       	push	r28
    288e:	df 93       	push	r29
    2890:	e0 90 9a 06 	lds	r14, 0x069A	; 0x80069a <FatFs>
    2894:	f0 90 9b 06 	lds	r15, 0x069B	; 0x80069b <FatFs+0x1>
    2898:	fc 01       	movw	r30, r24
    289a:	c0 81       	ld	r28, Z
    289c:	d1 81       	ldd	r29, Z+1	; 0x01
    289e:	21 96       	adiw	r28, 0x01	; 1
    28a0:	09 f4       	brne	.+2      	; 0x28a4 <dir_next+0x24>
    28a2:	5c c0       	rjmp	.+184    	; 0x295c <dir_next+0xdc>
    28a4:	44 85       	ldd	r20, Z+12	; 0x0c
    28a6:	55 85       	ldd	r21, Z+13	; 0x0d
    28a8:	66 85       	ldd	r22, Z+14	; 0x0e
    28aa:	77 85       	ldd	r23, Z+15	; 0x0f
    28ac:	41 15       	cp	r20, r1
    28ae:	51 05       	cpc	r21, r1
    28b0:	61 05       	cpc	r22, r1
    28b2:	71 05       	cpc	r23, r1
    28b4:	09 f4       	brne	.+2      	; 0x28b8 <dir_next+0x38>
    28b6:	54 c0       	rjmp	.+168    	; 0x2960 <dir_next+0xe0>
    28b8:	8c 01       	movw	r16, r24
    28ba:	ce 01       	movw	r24, r28
    28bc:	8f 70       	andi	r24, 0x0F	; 15
    28be:	99 27       	eor	r25, r25
    28c0:	89 2b       	or	r24, r25
    28c2:	09 f0       	breq	.+2      	; 0x28c6 <dir_next+0x46>
    28c4:	46 c0       	rjmp	.+140    	; 0x2952 <dir_next+0xd2>
    28c6:	4f 5f       	subi	r20, 0xFF	; 255
    28c8:	5f 4f       	sbci	r21, 0xFF	; 255
    28ca:	6f 4f       	sbci	r22, 0xFF	; 255
    28cc:	7f 4f       	sbci	r23, 0xFF	; 255
    28ce:	44 87       	std	Z+12, r20	; 0x0c
    28d0:	55 87       	std	Z+13, r21	; 0x0d
    28d2:	66 87       	std	Z+14, r22	; 0x0e
    28d4:	77 87       	std	Z+15, r23	; 0x0f
    28d6:	40 85       	ldd	r20, Z+8	; 0x08
    28d8:	51 85       	ldd	r21, Z+9	; 0x09
    28da:	62 85       	ldd	r22, Z+10	; 0x0a
    28dc:	73 85       	ldd	r23, Z+11	; 0x0b
    28de:	41 15       	cp	r20, r1
    28e0:	51 05       	cpc	r21, r1
    28e2:	61 05       	cpc	r22, r1
    28e4:	71 05       	cpc	r23, r1
    28e6:	39 f4       	brne	.+14     	; 0x28f6 <dir_next+0x76>
    28e8:	f7 01       	movw	r30, r14
    28ea:	84 81       	ldd	r24, Z+4	; 0x04
    28ec:	95 81       	ldd	r25, Z+5	; 0x05
    28ee:	c8 17       	cp	r28, r24
    28f0:	d9 07       	cpc	r29, r25
    28f2:	c0 f5       	brcc	.+112    	; 0x2964 <dir_next+0xe4>
    28f4:	2e c0       	rjmp	.+92     	; 0x2952 <dir_next+0xd2>
    28f6:	f7 01       	movw	r30, r14
    28f8:	81 81       	ldd	r24, Z+1	; 0x01
    28fa:	90 e0       	ldi	r25, 0x00	; 0
    28fc:	01 97       	sbiw	r24, 0x01	; 1
    28fe:	9e 01       	movw	r18, r28
    2900:	32 95       	swap	r19
    2902:	22 95       	swap	r18
    2904:	2f 70       	andi	r18, 0x0F	; 15
    2906:	23 27       	eor	r18, r19
    2908:	3f 70       	andi	r19, 0x0F	; 15
    290a:	23 27       	eor	r18, r19
    290c:	82 23       	and	r24, r18
    290e:	93 23       	and	r25, r19
    2910:	89 2b       	or	r24, r25
    2912:	f9 f4       	brne	.+62     	; 0x2952 <dir_next+0xd2>
    2914:	cb 01       	movw	r24, r22
    2916:	ba 01       	movw	r22, r20
    2918:	0e 94 27 13 	call	0x264e	; 0x264e <get_fat>
    291c:	62 30       	cpi	r22, 0x02	; 2
    291e:	71 05       	cpc	r23, r1
    2920:	81 05       	cpc	r24, r1
    2922:	91 05       	cpc	r25, r1
    2924:	08 f1       	brcs	.+66     	; 0x2968 <dir_next+0xe8>
    2926:	f7 01       	movw	r30, r14
    2928:	c0 84       	ldd	r12, Z+8	; 0x08
    292a:	d1 84       	ldd	r13, Z+9	; 0x09
    292c:	e2 84       	ldd	r14, Z+10	; 0x0a
    292e:	f3 84       	ldd	r15, Z+11	; 0x0b
    2930:	6c 15       	cp	r22, r12
    2932:	7d 05       	cpc	r23, r13
    2934:	8e 05       	cpc	r24, r14
    2936:	9f 05       	cpc	r25, r15
    2938:	c8 f4       	brcc	.+50     	; 0x296c <dir_next+0xec>
    293a:	f8 01       	movw	r30, r16
    293c:	60 87       	std	Z+8, r22	; 0x08
    293e:	71 87       	std	Z+9, r23	; 0x09
    2940:	82 87       	std	Z+10, r24	; 0x0a
    2942:	93 87       	std	Z+11, r25	; 0x0b
    2944:	0e 94 1e 12 	call	0x243c	; 0x243c <clust2sect>
    2948:	f8 01       	movw	r30, r16
    294a:	64 87       	std	Z+12, r22	; 0x0c
    294c:	75 87       	std	Z+13, r23	; 0x0d
    294e:	86 87       	std	Z+14, r24	; 0x0e
    2950:	97 87       	std	Z+15, r25	; 0x0f
    2952:	f8 01       	movw	r30, r16
    2954:	d1 83       	std	Z+1, r29	; 0x01
    2956:	c0 83       	st	Z, r28
    2958:	80 e0       	ldi	r24, 0x00	; 0
    295a:	09 c0       	rjmp	.+18     	; 0x296e <dir_next+0xee>
    295c:	83 e0       	ldi	r24, 0x03	; 3
    295e:	07 c0       	rjmp	.+14     	; 0x296e <dir_next+0xee>
    2960:	83 e0       	ldi	r24, 0x03	; 3
    2962:	05 c0       	rjmp	.+10     	; 0x296e <dir_next+0xee>
    2964:	83 e0       	ldi	r24, 0x03	; 3
    2966:	03 c0       	rjmp	.+6      	; 0x296e <dir_next+0xee>
    2968:	81 e0       	ldi	r24, 0x01	; 1
    296a:	01 c0       	rjmp	.+2      	; 0x296e <dir_next+0xee>
    296c:	83 e0       	ldi	r24, 0x03	; 3
    296e:	df 91       	pop	r29
    2970:	cf 91       	pop	r28
    2972:	1f 91       	pop	r17
    2974:	0f 91       	pop	r16
    2976:	ff 90       	pop	r15
    2978:	ef 90       	pop	r14
    297a:	df 90       	pop	r13
    297c:	cf 90       	pop	r12
    297e:	08 95       	ret

00002980 <dir_find>:
    2980:	df 92       	push	r13
    2982:	ef 92       	push	r14
    2984:	ff 92       	push	r15
    2986:	0f 93       	push	r16
    2988:	1f 93       	push	r17
    298a:	cf 93       	push	r28
    298c:	df 93       	push	r29
    298e:	7c 01       	movw	r14, r24
    2990:	0e 94 49 12 	call	0x2492	; 0x2492 <dir_rewind>
    2994:	81 11       	cpse	r24, r1
    2996:	3e c0       	rjmp	.+124    	; 0x2a14 <dir_find+0x94>
    2998:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    299c:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    29a0:	c6 81       	ldd	r28, Z+6	; 0x06
    29a2:	d7 81       	ldd	r29, Z+7	; 0x07
    29a4:	f7 01       	movw	r30, r14
    29a6:	20 81       	ld	r18, Z
    29a8:	31 81       	ldd	r19, Z+1	; 0x01
    29aa:	2f 70       	andi	r18, 0x0F	; 15
    29ac:	33 27       	eor	r19, r19
    29ae:	22 0f       	add	r18, r18
    29b0:	33 1f       	adc	r19, r19
    29b2:	22 95       	swap	r18
    29b4:	32 95       	swap	r19
    29b6:	30 7f       	andi	r19, 0xF0	; 240
    29b8:	32 27       	eor	r19, r18
    29ba:	20 7f       	andi	r18, 0xF0	; 240
    29bc:	32 27       	eor	r19, r18
    29be:	44 85       	ldd	r20, Z+12	; 0x0c
    29c0:	55 85       	ldd	r21, Z+13	; 0x0d
    29c2:	66 85       	ldd	r22, Z+14	; 0x0e
    29c4:	77 85       	ldd	r23, Z+15	; 0x0f
    29c6:	00 e2       	ldi	r16, 0x20	; 32
    29c8:	10 e0       	ldi	r17, 0x00	; 0
    29ca:	ce 01       	movw	r24, r28
    29cc:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    29d0:	91 e0       	ldi	r25, 0x01	; 1
    29d2:	81 11       	cpse	r24, r1
    29d4:	01 c0       	rjmp	.+2      	; 0x29d8 <dir_find+0x58>
    29d6:	90 e0       	ldi	r25, 0x00	; 0
    29d8:	d9 2e       	mov	r13, r25
    29da:	91 11       	cpse	r25, r1
    29dc:	16 c0       	rjmp	.+44     	; 0x2a0a <dir_find+0x8a>
    29de:	88 81       	ld	r24, Y
    29e0:	88 23       	and	r24, r24
    29e2:	a9 f0       	breq	.+42     	; 0x2a0e <dir_find+0x8e>
    29e4:	8b 85       	ldd	r24, Y+11	; 0x0b
    29e6:	83 fd       	sbrc	r24, 3
    29e8:	0a c0       	rjmp	.+20     	; 0x29fe <dir_find+0x7e>
    29ea:	f7 01       	movw	r30, r14
    29ec:	62 81       	ldd	r22, Z+2	; 0x02
    29ee:	73 81       	ldd	r23, Z+3	; 0x03
    29f0:	4b e0       	ldi	r20, 0x0B	; 11
    29f2:	50 e0       	ldi	r21, 0x00	; 0
    29f4:	ce 01       	movw	r24, r28
    29f6:	0e 94 01 12 	call	0x2402	; 0x2402 <mem_cmp>
    29fa:	89 2b       	or	r24, r25
    29fc:	51 f0       	breq	.+20     	; 0x2a12 <dir_find+0x92>
    29fe:	c7 01       	movw	r24, r14
    2a00:	0e 94 40 14 	call	0x2880	; 0x2880 <dir_next>
    2a04:	88 23       	and	r24, r24
    2a06:	71 f2       	breq	.-100    	; 0x29a4 <dir_find+0x24>
    2a08:	05 c0       	rjmp	.+10     	; 0x2a14 <dir_find+0x94>
    2a0a:	89 2f       	mov	r24, r25
    2a0c:	03 c0       	rjmp	.+6      	; 0x2a14 <dir_find+0x94>
    2a0e:	83 e0       	ldi	r24, 0x03	; 3
    2a10:	01 c0       	rjmp	.+2      	; 0x2a14 <dir_find+0x94>
    2a12:	8d 2d       	mov	r24, r13
    2a14:	df 91       	pop	r29
    2a16:	cf 91       	pop	r28
    2a18:	1f 91       	pop	r17
    2a1a:	0f 91       	pop	r16
    2a1c:	ff 90       	pop	r15
    2a1e:	ef 90       	pop	r14
    2a20:	df 90       	pop	r13
    2a22:	08 95       	ret

00002a24 <follow_path>:
    2a24:	0f 93       	push	r16
    2a26:	1f 93       	push	r17
    2a28:	cf 93       	push	r28
    2a2a:	df 93       	push	r29
    2a2c:	00 d0       	rcall	.+0      	; 0x2a2e <follow_path+0xa>
    2a2e:	cd b7       	in	r28, 0x3d	; 61
    2a30:	de b7       	in	r29, 0x3e	; 62
    2a32:	8c 01       	movw	r16, r24
    2a34:	7a 83       	std	Y+2, r23	; 0x02
    2a36:	69 83       	std	Y+1, r22	; 0x01
    2a38:	03 c0       	rjmp	.+6      	; 0x2a40 <follow_path+0x1c>
    2a3a:	31 96       	adiw	r30, 0x01	; 1
    2a3c:	fa 83       	std	Y+2, r31	; 0x02
    2a3e:	e9 83       	std	Y+1, r30	; 0x01
    2a40:	e9 81       	ldd	r30, Y+1	; 0x01
    2a42:	fa 81       	ldd	r31, Y+2	; 0x02
    2a44:	80 81       	ld	r24, Z
    2a46:	80 32       	cpi	r24, 0x20	; 32
    2a48:	c1 f3       	breq	.-16     	; 0x2a3a <follow_path+0x16>
    2a4a:	8f 32       	cpi	r24, 0x2F	; 47
    2a4c:	19 f4       	brne	.+6      	; 0x2a54 <follow_path+0x30>
    2a4e:	31 96       	adiw	r30, 0x01	; 1
    2a50:	fa 83       	std	Y+2, r31	; 0x02
    2a52:	e9 83       	std	Y+1, r30	; 0x01
    2a54:	d8 01       	movw	r26, r16
    2a56:	14 96       	adiw	r26, 0x04	; 4
    2a58:	1d 92       	st	X+, r1
    2a5a:	1d 92       	st	X+, r1
    2a5c:	1d 92       	st	X+, r1
    2a5e:	1c 92       	st	X, r1
    2a60:	17 97       	sbiw	r26, 0x07	; 7
    2a62:	e9 81       	ldd	r30, Y+1	; 0x01
    2a64:	fa 81       	ldd	r31, Y+2	; 0x02
    2a66:	80 81       	ld	r24, Z
    2a68:	81 32       	cpi	r24, 0x21	; 33
    2a6a:	60 f4       	brcc	.+24     	; 0x2a84 <follow_path+0x60>
    2a6c:	c8 01       	movw	r24, r16
    2a6e:	0e 94 49 12 	call	0x2492	; 0x2492 <dir_rewind>
    2a72:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    2a76:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    2a7a:	06 80       	ldd	r0, Z+6	; 0x06
    2a7c:	f7 81       	ldd	r31, Z+7	; 0x07
    2a7e:	e0 2d       	mov	r30, r0
    2a80:	10 82       	st	Z, r1
    2a82:	42 c0       	rjmp	.+132    	; 0x2b08 <follow_path+0xe4>
    2a84:	be 01       	movw	r22, r28
    2a86:	6f 5f       	subi	r22, 0xFF	; 255
    2a88:	7f 4f       	sbci	r23, 0xFF	; 255
    2a8a:	c8 01       	movw	r24, r16
    2a8c:	0e 94 97 12 	call	0x252e	; 0x252e <create_name>
    2a90:	81 11       	cpse	r24, r1
    2a92:	3a c0       	rjmp	.+116    	; 0x2b08 <follow_path+0xe4>
    2a94:	c8 01       	movw	r24, r16
    2a96:	0e 94 c0 14 	call	0x2980	; 0x2980 <dir_find>
    2a9a:	88 23       	and	r24, r24
    2a9c:	59 f0       	breq	.+22     	; 0x2ab4 <follow_path+0x90>
    2a9e:	83 30       	cpi	r24, 0x03	; 3
    2aa0:	99 f5       	brne	.+102    	; 0x2b08 <follow_path+0xe4>
    2aa2:	d8 01       	movw	r26, r16
    2aa4:	12 96       	adiw	r26, 0x02	; 2
    2aa6:	ed 91       	ld	r30, X+
    2aa8:	fc 91       	ld	r31, X
    2aaa:	13 97       	sbiw	r26, 0x03	; 3
    2aac:	93 85       	ldd	r25, Z+11	; 0x0b
    2aae:	99 23       	and	r25, r25
    2ab0:	41 f1       	breq	.+80     	; 0x2b02 <follow_path+0xde>
    2ab2:	2a c0       	rjmp	.+84     	; 0x2b08 <follow_path+0xe4>
    2ab4:	d8 01       	movw	r26, r16
    2ab6:	12 96       	adiw	r26, 0x02	; 2
    2ab8:	ed 91       	ld	r30, X+
    2aba:	fc 91       	ld	r31, X
    2abc:	13 97       	sbiw	r26, 0x03	; 3
    2abe:	93 85       	ldd	r25, Z+11	; 0x0b
    2ac0:	91 11       	cpse	r25, r1
    2ac2:	22 c0       	rjmp	.+68     	; 0x2b08 <follow_path+0xe4>
    2ac4:	e0 91 9a 06 	lds	r30, 0x069A	; 0x80069a <FatFs>
    2ac8:	f0 91 9b 06 	lds	r31, 0x069B	; 0x80069b <FatFs+0x1>
    2acc:	06 80       	ldd	r0, Z+6	; 0x06
    2ace:	f7 81       	ldd	r31, Z+7	; 0x07
    2ad0:	e0 2d       	mov	r30, r0
    2ad2:	83 85       	ldd	r24, Z+11	; 0x0b
    2ad4:	84 ff       	sbrs	r24, 4
    2ad6:	17 c0       	rjmp	.+46     	; 0x2b06 <follow_path+0xe2>
    2ad8:	84 89       	ldd	r24, Z+20	; 0x14
    2ada:	95 89       	ldd	r25, Z+21	; 0x15
    2adc:	a0 e0       	ldi	r26, 0x00	; 0
    2ade:	b0 e0       	ldi	r27, 0x00	; 0
    2ae0:	bc 01       	movw	r22, r24
    2ae2:	55 27       	eor	r21, r21
    2ae4:	44 27       	eor	r20, r20
    2ae6:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ae8:	93 8d       	ldd	r25, Z+27	; 0x1b
    2aea:	a0 e0       	ldi	r26, 0x00	; 0
    2aec:	b0 e0       	ldi	r27, 0x00	; 0
    2aee:	84 2b       	or	r24, r20
    2af0:	95 2b       	or	r25, r21
    2af2:	a6 2b       	or	r26, r22
    2af4:	b7 2b       	or	r27, r23
    2af6:	f8 01       	movw	r30, r16
    2af8:	84 83       	std	Z+4, r24	; 0x04
    2afa:	95 83       	std	Z+5, r25	; 0x05
    2afc:	a6 83       	std	Z+6, r26	; 0x06
    2afe:	b7 83       	std	Z+7, r27	; 0x07
    2b00:	c1 cf       	rjmp	.-126    	; 0x2a84 <follow_path+0x60>
    2b02:	84 e0       	ldi	r24, 0x04	; 4
    2b04:	01 c0       	rjmp	.+2      	; 0x2b08 <follow_path+0xe4>
    2b06:	84 e0       	ldi	r24, 0x04	; 4
    2b08:	0f 90       	pop	r0
    2b0a:	0f 90       	pop	r0
    2b0c:	df 91       	pop	r29
    2b0e:	cf 91       	pop	r28
    2b10:	1f 91       	pop	r17
    2b12:	0f 91       	pop	r16
    2b14:	08 95       	ret

00002b16 <pf_mount>:
    2b16:	4f 92       	push	r4
    2b18:	5f 92       	push	r5
    2b1a:	6f 92       	push	r6
    2b1c:	7f 92       	push	r7
    2b1e:	8f 92       	push	r8
    2b20:	9f 92       	push	r9
    2b22:	af 92       	push	r10
    2b24:	bf 92       	push	r11
    2b26:	df 92       	push	r13
    2b28:	ef 92       	push	r14
    2b2a:	ff 92       	push	r15
    2b2c:	0f 93       	push	r16
    2b2e:	1f 93       	push	r17
    2b30:	cf 93       	push	r28
    2b32:	df 93       	push	r29
    2b34:	cd b7       	in	r28, 0x3d	; 61
    2b36:	de b7       	in	r29, 0x3e	; 62
    2b38:	a8 97       	sbiw	r28, 0x28	; 40
    2b3a:	0f b6       	in	r0, 0x3f	; 63
    2b3c:	f8 94       	cli
    2b3e:	de bf       	out	0x3e, r29	; 62
    2b40:	0f be       	out	0x3f, r0	; 63
    2b42:	cd bf       	out	0x3d, r28	; 61
    2b44:	10 92 9b 06 	sts	0x069B, r1	; 0x80069b <FatFs+0x1>
    2b48:	10 92 9a 06 	sts	0x069A, r1	; 0x80069a <FatFs>
    2b4c:	00 97       	sbiw	r24, 0x00	; 0
    2b4e:	09 f4       	brne	.+2      	; 0x2b52 <pf_mount+0x3c>
    2b50:	fb c0       	rjmp	.+502    	; 0x2d48 <pf_mount+0x232>
    2b52:	7c 01       	movw	r14, r24
    2b54:	0e 94 56 0e 	call	0x1cac	; 0x1cac <disk_initialize>
    2b58:	80 fd       	sbrc	r24, 0
    2b5a:	f8 c0       	rjmp	.+496    	; 0x2d4c <pf_mount+0x236>
    2b5c:	40 e0       	ldi	r20, 0x00	; 0
    2b5e:	50 e0       	ldi	r21, 0x00	; 0
    2b60:	ba 01       	movw	r22, r20
    2b62:	ce 01       	movw	r24, r28
    2b64:	01 96       	adiw	r24, 0x01	; 1
    2b66:	0e 94 dd 12 	call	0x25ba	; 0x25ba <check_fs>
    2b6a:	d8 2e       	mov	r13, r24
    2b6c:	41 e0       	ldi	r20, 0x01	; 1
    2b6e:	84 13       	cpse	r24, r20
    2b70:	1c c0       	rjmp	.+56     	; 0x2baa <pf_mount+0x94>
    2b72:	00 e1       	ldi	r16, 0x10	; 16
    2b74:	10 e0       	ldi	r17, 0x00	; 0
    2b76:	2e eb       	ldi	r18, 0xBE	; 190
    2b78:	31 e0       	ldi	r19, 0x01	; 1
    2b7a:	40 e0       	ldi	r20, 0x00	; 0
    2b7c:	50 e0       	ldi	r21, 0x00	; 0
    2b7e:	ba 01       	movw	r22, r20
    2b80:	ce 01       	movw	r24, r28
    2b82:	01 96       	adiw	r24, 0x01	; 1
    2b84:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    2b88:	81 11       	cpse	r24, r1
    2b8a:	13 c0       	rjmp	.+38     	; 0x2bb2 <pf_mount+0x9c>
    2b8c:	8d 81       	ldd	r24, Y+5	; 0x05
    2b8e:	88 23       	and	r24, r24
    2b90:	c1 f0       	breq	.+48     	; 0x2bc2 <pf_mount+0xac>
    2b92:	89 84       	ldd	r8, Y+9	; 0x09
    2b94:	9a 84       	ldd	r9, Y+10	; 0x0a
    2b96:	ab 84       	ldd	r10, Y+11	; 0x0b
    2b98:	bc 84       	ldd	r11, Y+12	; 0x0c
    2b9a:	b5 01       	movw	r22, r10
    2b9c:	a4 01       	movw	r20, r8
    2b9e:	ce 01       	movw	r24, r28
    2ba0:	01 96       	adiw	r24, 0x01	; 1
    2ba2:	0e 94 dd 12 	call	0x25ba	; 0x25ba <check_fs>
    2ba6:	d8 2e       	mov	r13, r24
    2ba8:	0f c0       	rjmp	.+30     	; 0x2bc8 <pf_mount+0xb2>
    2baa:	81 2c       	mov	r8, r1
    2bac:	91 2c       	mov	r9, r1
    2bae:	54 01       	movw	r10, r8
    2bb0:	0b c0       	rjmp	.+22     	; 0x2bc8 <pf_mount+0xb2>
    2bb2:	81 2c       	mov	r8, r1
    2bb4:	91 2c       	mov	r9, r1
    2bb6:	54 01       	movw	r10, r8
    2bb8:	0f 2e       	mov	r0, r31
    2bba:	f3 e0       	ldi	r31, 0x03	; 3
    2bbc:	df 2e       	mov	r13, r31
    2bbe:	f0 2d       	mov	r31, r0
    2bc0:	03 c0       	rjmp	.+6      	; 0x2bc8 <pf_mount+0xb2>
    2bc2:	81 2c       	mov	r8, r1
    2bc4:	91 2c       	mov	r9, r1
    2bc6:	54 01       	movw	r10, r8
    2bc8:	53 e0       	ldi	r21, 0x03	; 3
    2bca:	d5 16       	cp	r13, r21
    2bcc:	09 f4       	brne	.+2      	; 0x2bd0 <pf_mount+0xba>
    2bce:	c0 c0       	rjmp	.+384    	; 0x2d50 <pf_mount+0x23a>
    2bd0:	d1 10       	cpse	r13, r1
    2bd2:	c0 c0       	rjmp	.+384    	; 0x2d54 <pf_mount+0x23e>
    2bd4:	04 e2       	ldi	r16, 0x24	; 36
    2bd6:	10 e0       	ldi	r17, 0x00	; 0
    2bd8:	2d e0       	ldi	r18, 0x0D	; 13
    2bda:	30 e0       	ldi	r19, 0x00	; 0
    2bdc:	b5 01       	movw	r22, r10
    2bde:	a4 01       	movw	r20, r8
    2be0:	ce 01       	movw	r24, r28
    2be2:	01 96       	adiw	r24, 0x01	; 1
    2be4:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    2be8:	81 11       	cpse	r24, r1
    2bea:	b6 c0       	rjmp	.+364    	; 0x2d58 <pf_mount+0x242>
    2bec:	2a 85       	ldd	r18, Y+10	; 0x0a
    2bee:	3b 85       	ldd	r19, Y+11	; 0x0b
    2bf0:	40 e0       	ldi	r20, 0x00	; 0
    2bf2:	50 e0       	ldi	r21, 0x00	; 0
    2bf4:	21 15       	cp	r18, r1
    2bf6:	31 05       	cpc	r19, r1
    2bf8:	41 05       	cpc	r20, r1
    2bfa:	51 05       	cpc	r21, r1
    2bfc:	21 f4       	brne	.+8      	; 0x2c06 <pf_mount+0xf0>
    2bfe:	28 8d       	ldd	r18, Y+24	; 0x18
    2c00:	39 8d       	ldd	r19, Y+25	; 0x19
    2c02:	4a 8d       	ldd	r20, Y+26	; 0x1a
    2c04:	5b 8d       	ldd	r21, Y+27	; 0x1b
    2c06:	ac 81       	ldd	r26, Y+4	; 0x04
    2c08:	b0 e0       	ldi	r27, 0x00	; 0
    2c0a:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
    2c0e:	6d a3       	std	Y+37, r22	; 0x25
    2c10:	7e a3       	std	Y+38, r23	; 0x26
    2c12:	8f a3       	std	Y+39, r24	; 0x27
    2c14:	98 a7       	std	Y+40, r25	; 0x28
    2c16:	8a 81       	ldd	r24, Y+2	; 0x02
    2c18:	9b 81       	ldd	r25, Y+3	; 0x03
    2c1a:	88 0e       	add	r8, r24
    2c1c:	99 1e       	adc	r9, r25
    2c1e:	a1 1c       	adc	r10, r1
    2c20:	b1 1c       	adc	r11, r1
    2c22:	d7 01       	movw	r26, r14
    2c24:	1c 96       	adiw	r26, 0x0c	; 12
    2c26:	8d 92       	st	X+, r8
    2c28:	9d 92       	st	X+, r9
    2c2a:	ad 92       	st	X+, r10
    2c2c:	bc 92       	st	X, r11
    2c2e:	1f 97       	sbiw	r26, 0x0f	; 15
    2c30:	e9 81       	ldd	r30, Y+1	; 0x01
    2c32:	11 96       	adiw	r26, 0x01	; 1
    2c34:	ec 93       	st	X, r30
    2c36:	11 97       	sbiw	r26, 0x01	; 1
    2c38:	8d 81       	ldd	r24, Y+5	; 0x05
    2c3a:	9e 81       	ldd	r25, Y+6	; 0x06
    2c3c:	15 96       	adiw	r26, 0x05	; 5
    2c3e:	9c 93       	st	X, r25
    2c40:	8e 93       	st	-X, r24
    2c42:	14 97       	sbiw	r26, 0x04	; 4
    2c44:	0f 81       	ldd	r16, Y+7	; 0x07
    2c46:	18 85       	ldd	r17, Y+8	; 0x08
    2c48:	20 e0       	ldi	r18, 0x00	; 0
    2c4a:	30 e0       	ldi	r19, 0x00	; 0
    2c4c:	01 15       	cp	r16, r1
    2c4e:	11 05       	cpc	r17, r1
    2c50:	21 05       	cpc	r18, r1
    2c52:	31 05       	cpc	r19, r1
    2c54:	21 f4       	brne	.+8      	; 0x2c5e <pf_mount+0x148>
    2c56:	0c 89       	ldd	r16, Y+20	; 0x14
    2c58:	1d 89       	ldd	r17, Y+21	; 0x15
    2c5a:	2e 89       	ldd	r18, Y+22	; 0x16
    2c5c:	3f 89       	ldd	r19, Y+23	; 0x17
    2c5e:	4a 81       	ldd	r20, Y+2	; 0x02
    2c60:	5b 81       	ldd	r21, Y+3	; 0x03
    2c62:	04 1b       	sub	r16, r20
    2c64:	15 0b       	sbc	r17, r21
    2c66:	21 09       	sbc	r18, r1
    2c68:	31 09       	sbc	r19, r1
    2c6a:	4d a1       	ldd	r20, Y+37	; 0x25
    2c6c:	5e a1       	ldd	r21, Y+38	; 0x26
    2c6e:	6f a1       	ldd	r22, Y+39	; 0x27
    2c70:	78 a5       	ldd	r23, Y+40	; 0x28
    2c72:	04 1b       	sub	r16, r20
    2c74:	15 0b       	sbc	r17, r21
    2c76:	26 0b       	sbc	r18, r22
    2c78:	37 0b       	sbc	r19, r23
    2c7a:	92 95       	swap	r25
    2c7c:	82 95       	swap	r24
    2c7e:	8f 70       	andi	r24, 0x0F	; 15
    2c80:	89 27       	eor	r24, r25
    2c82:	9f 70       	andi	r25, 0x0F	; 15
    2c84:	89 27       	eor	r24, r25
    2c86:	2c 01       	movw	r4, r24
    2c88:	61 2c       	mov	r6, r1
    2c8a:	71 2c       	mov	r7, r1
    2c8c:	c9 01       	movw	r24, r18
    2c8e:	b8 01       	movw	r22, r16
    2c90:	64 19       	sub	r22, r4
    2c92:	75 09       	sbc	r23, r5
    2c94:	86 09       	sbc	r24, r6
    2c96:	97 09       	sbc	r25, r7
    2c98:	2e 2f       	mov	r18, r30
    2c9a:	30 e0       	ldi	r19, 0x00	; 0
    2c9c:	40 e0       	ldi	r20, 0x00	; 0
    2c9e:	50 e0       	ldi	r21, 0x00	; 0
    2ca0:	0e 94 bf 2a 	call	0x557e	; 0x557e <__udivmodsi4>
    2ca4:	ba 01       	movw	r22, r20
    2ca6:	a9 01       	movw	r20, r18
    2ca8:	4e 5f       	subi	r20, 0xFE	; 254
    2caa:	5f 4f       	sbci	r21, 0xFF	; 255
    2cac:	6f 4f       	sbci	r22, 0xFF	; 255
    2cae:	7f 4f       	sbci	r23, 0xFF	; 255
    2cb0:	d7 01       	movw	r26, r14
    2cb2:	18 96       	adiw	r26, 0x08	; 8
    2cb4:	4d 93       	st	X+, r20
    2cb6:	5d 93       	st	X+, r21
    2cb8:	6d 93       	st	X+, r22
    2cba:	7c 93       	st	X, r23
    2cbc:	1b 97       	sbiw	r26, 0x0b	; 11
    2cbe:	47 3f       	cpi	r20, 0xF7	; 247
    2cc0:	bf e0       	ldi	r27, 0x0F	; 15
    2cc2:	5b 07       	cpc	r21, r27
    2cc4:	61 05       	cpc	r22, r1
    2cc6:	71 05       	cpc	r23, r1
    2cc8:	10 f4       	brcc	.+4      	; 0x2cce <pf_mount+0x1b8>
    2cca:	81 e0       	ldi	r24, 0x01	; 1
    2ccc:	01 c0       	rjmp	.+2      	; 0x2cd0 <pf_mount+0x1ba>
    2cce:	82 e0       	ldi	r24, 0x02	; 2
    2cd0:	47 3f       	cpi	r20, 0xF7	; 247
    2cd2:	5f 4f       	sbci	r21, 0xFF	; 255
    2cd4:	61 05       	cpc	r22, r1
    2cd6:	71 05       	cpc	r23, r1
    2cd8:	08 f0       	brcs	.+2      	; 0x2cdc <pf_mount+0x1c6>
    2cda:	83 e0       	ldi	r24, 0x03	; 3
    2cdc:	d7 01       	movw	r26, r14
    2cde:	8c 93       	st	X, r24
    2ce0:	83 30       	cpi	r24, 0x03	; 3
    2ce2:	51 f4       	brne	.+20     	; 0x2cf8 <pf_mount+0x1e2>
    2ce4:	88 a1       	ldd	r24, Y+32	; 0x20
    2ce6:	99 a1       	ldd	r25, Y+33	; 0x21
    2ce8:	aa a1       	ldd	r26, Y+34	; 0x22
    2cea:	bb a1       	ldd	r27, Y+35	; 0x23
    2cec:	f7 01       	movw	r30, r14
    2cee:	80 8b       	std	Z+16, r24	; 0x10
    2cf0:	91 8b       	std	Z+17, r25	; 0x11
    2cf2:	a2 8b       	std	Z+18, r26	; 0x12
    2cf4:	b3 8b       	std	Z+19, r27	; 0x13
    2cf6:	0d c0       	rjmp	.+26     	; 0x2d12 <pf_mount+0x1fc>
    2cf8:	8d a1       	ldd	r24, Y+37	; 0x25
    2cfa:	9e a1       	ldd	r25, Y+38	; 0x26
    2cfc:	af a1       	ldd	r26, Y+39	; 0x27
    2cfe:	b8 a5       	ldd	r27, Y+40	; 0x28
    2d00:	88 0d       	add	r24, r8
    2d02:	99 1d       	adc	r25, r9
    2d04:	aa 1d       	adc	r26, r10
    2d06:	bb 1d       	adc	r27, r11
    2d08:	f7 01       	movw	r30, r14
    2d0a:	80 8b       	std	Z+16, r24	; 0x10
    2d0c:	91 8b       	std	Z+17, r25	; 0x11
    2d0e:	a2 8b       	std	Z+18, r26	; 0x12
    2d10:	b3 8b       	std	Z+19, r27	; 0x13
    2d12:	4d a1       	ldd	r20, Y+37	; 0x25
    2d14:	5e a1       	ldd	r21, Y+38	; 0x26
    2d16:	6f a1       	ldd	r22, Y+39	; 0x27
    2d18:	78 a5       	ldd	r23, Y+40	; 0x28
    2d1a:	84 0e       	add	r8, r20
    2d1c:	95 1e       	adc	r9, r21
    2d1e:	a6 1e       	adc	r10, r22
    2d20:	b7 1e       	adc	r11, r23
    2d22:	84 0c       	add	r8, r4
    2d24:	95 1c       	adc	r9, r5
    2d26:	a6 1c       	adc	r10, r6
    2d28:	b7 1c       	adc	r11, r7
    2d2a:	d7 01       	movw	r26, r14
    2d2c:	54 96       	adiw	r26, 0x14	; 20
    2d2e:	8d 92       	st	X+, r8
    2d30:	9d 92       	st	X+, r9
    2d32:	ad 92       	st	X+, r10
    2d34:	bc 92       	st	X, r11
    2d36:	57 97       	sbiw	r26, 0x17	; 23
    2d38:	12 96       	adiw	r26, 0x02	; 2
    2d3a:	1c 92       	st	X, r1
    2d3c:	f0 92 9b 06 	sts	0x069B, r15	; 0x80069b <FatFs+0x1>
    2d40:	e0 92 9a 06 	sts	0x069A, r14	; 0x80069a <FatFs>
    2d44:	80 e0       	ldi	r24, 0x00	; 0
    2d46:	09 c0       	rjmp	.+18     	; 0x2d5a <pf_mount+0x244>
    2d48:	80 e0       	ldi	r24, 0x00	; 0
    2d4a:	07 c0       	rjmp	.+14     	; 0x2d5a <pf_mount+0x244>
    2d4c:	82 e0       	ldi	r24, 0x02	; 2
    2d4e:	05 c0       	rjmp	.+10     	; 0x2d5a <pf_mount+0x244>
    2d50:	81 e0       	ldi	r24, 0x01	; 1
    2d52:	03 c0       	rjmp	.+6      	; 0x2d5a <pf_mount+0x244>
    2d54:	87 e0       	ldi	r24, 0x07	; 7
    2d56:	01 c0       	rjmp	.+2      	; 0x2d5a <pf_mount+0x244>
    2d58:	81 e0       	ldi	r24, 0x01	; 1
    2d5a:	a8 96       	adiw	r28, 0x28	; 40
    2d5c:	0f b6       	in	r0, 0x3f	; 63
    2d5e:	f8 94       	cli
    2d60:	de bf       	out	0x3e, r29	; 62
    2d62:	0f be       	out	0x3f, r0	; 63
    2d64:	cd bf       	out	0x3d, r28	; 61
    2d66:	df 91       	pop	r29
    2d68:	cf 91       	pop	r28
    2d6a:	1f 91       	pop	r17
    2d6c:	0f 91       	pop	r16
    2d6e:	ff 90       	pop	r15
    2d70:	ef 90       	pop	r14
    2d72:	df 90       	pop	r13
    2d74:	bf 90       	pop	r11
    2d76:	af 90       	pop	r10
    2d78:	9f 90       	pop	r9
    2d7a:	8f 90       	pop	r8
    2d7c:	7f 90       	pop	r7
    2d7e:	6f 90       	pop	r6
    2d80:	5f 90       	pop	r5
    2d82:	4f 90       	pop	r4
    2d84:	08 95       	ret

00002d86 <pf_open>:
    2d86:	0f 93       	push	r16
    2d88:	1f 93       	push	r17
    2d8a:	cf 93       	push	r28
    2d8c:	df 93       	push	r29
    2d8e:	cd b7       	in	r28, 0x3d	; 61
    2d90:	de b7       	in	r29, 0x3e	; 62
    2d92:	ec 97       	sbiw	r28, 0x3c	; 60
    2d94:	0f b6       	in	r0, 0x3f	; 63
    2d96:	f8 94       	cli
    2d98:	de bf       	out	0x3e, r29	; 62
    2d9a:	0f be       	out	0x3f, r0	; 63
    2d9c:	cd bf       	out	0x3d, r28	; 61
    2d9e:	00 91 9a 06 	lds	r16, 0x069A	; 0x80069a <FatFs>
    2da2:	10 91 9b 06 	lds	r17, 0x069B	; 0x80069b <FatFs+0x1>
    2da6:	01 15       	cp	r16, r1
    2da8:	11 05       	cpc	r17, r1
    2daa:	c9 f1       	breq	.+114    	; 0x2e1e <pf_open+0x98>
    2dac:	bc 01       	movw	r22, r24
    2dae:	f8 01       	movw	r30, r16
    2db0:	12 82       	std	Z+2, r1	; 0x02
    2db2:	ce 01       	movw	r24, r28
    2db4:	4d 96       	adiw	r24, 0x1d	; 29
    2db6:	97 83       	std	Z+7, r25	; 0x07
    2db8:	86 83       	std	Z+6, r24	; 0x06
    2dba:	0c 97       	sbiw	r24, 0x0c	; 12
    2dbc:	9c 83       	std	Y+4, r25	; 0x04
    2dbe:	8b 83       	std	Y+3, r24	; 0x03
    2dc0:	40 97       	sbiw	r24, 0x10	; 16
    2dc2:	0e 94 12 15 	call	0x2a24	; 0x2a24 <follow_path>
    2dc6:	81 11       	cpse	r24, r1
    2dc8:	2f c0       	rjmp	.+94     	; 0x2e28 <pf_open+0xa2>
    2dca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2dcc:	88 23       	and	r24, r24
    2dce:	49 f1       	breq	.+82     	; 0x2e22 <pf_open+0x9c>
    2dd0:	88 a5       	ldd	r24, Y+40	; 0x28
    2dd2:	84 fd       	sbrc	r24, 4
    2dd4:	28 c0       	rjmp	.+80     	; 0x2e26 <pf_open+0xa0>
    2dd6:	89 a9       	ldd	r24, Y+49	; 0x31
    2dd8:	9a a9       	ldd	r25, Y+50	; 0x32
    2dda:	a0 e0       	ldi	r26, 0x00	; 0
    2ddc:	b0 e0       	ldi	r27, 0x00	; 0
    2dde:	bc 01       	movw	r22, r24
    2de0:	55 27       	eor	r21, r21
    2de2:	44 27       	eor	r20, r20
    2de4:	8f a9       	ldd	r24, Y+55	; 0x37
    2de6:	98 ad       	ldd	r25, Y+56	; 0x38
    2de8:	a0 e0       	ldi	r26, 0x00	; 0
    2dea:	b0 e0       	ldi	r27, 0x00	; 0
    2dec:	84 2b       	or	r24, r20
    2dee:	95 2b       	or	r25, r21
    2df0:	a6 2b       	or	r26, r22
    2df2:	b7 2b       	or	r27, r23
    2df4:	f8 01       	movw	r30, r16
    2df6:	80 a3       	std	Z+32, r24	; 0x20
    2df8:	91 a3       	std	Z+33, r25	; 0x21
    2dfa:	a2 a3       	std	Z+34, r26	; 0x22
    2dfc:	b3 a3       	std	Z+35, r27	; 0x23
    2dfe:	89 ad       	ldd	r24, Y+57	; 0x39
    2e00:	9a ad       	ldd	r25, Y+58	; 0x3a
    2e02:	ab ad       	ldd	r26, Y+59	; 0x3b
    2e04:	bc ad       	ldd	r27, Y+60	; 0x3c
    2e06:	84 8f       	std	Z+28, r24	; 0x1c
    2e08:	95 8f       	std	Z+29, r25	; 0x1d
    2e0a:	a6 8f       	std	Z+30, r26	; 0x1e
    2e0c:	b7 8f       	std	Z+31, r27	; 0x1f
    2e0e:	10 8e       	std	Z+24, r1	; 0x18
    2e10:	11 8e       	std	Z+25, r1	; 0x19
    2e12:	12 8e       	std	Z+26, r1	; 0x1a
    2e14:	13 8e       	std	Z+27, r1	; 0x1b
    2e16:	81 e0       	ldi	r24, 0x01	; 1
    2e18:	82 83       	std	Z+2, r24	; 0x02
    2e1a:	80 e0       	ldi	r24, 0x00	; 0
    2e1c:	05 c0       	rjmp	.+10     	; 0x2e28 <pf_open+0xa2>
    2e1e:	86 e0       	ldi	r24, 0x06	; 6
    2e20:	03 c0       	rjmp	.+6      	; 0x2e28 <pf_open+0xa2>
    2e22:	83 e0       	ldi	r24, 0x03	; 3
    2e24:	01 c0       	rjmp	.+2      	; 0x2e28 <pf_open+0xa2>
    2e26:	83 e0       	ldi	r24, 0x03	; 3
    2e28:	ec 96       	adiw	r28, 0x3c	; 60
    2e2a:	0f b6       	in	r0, 0x3f	; 63
    2e2c:	f8 94       	cli
    2e2e:	de bf       	out	0x3e, r29	; 62
    2e30:	0f be       	out	0x3f, r0	; 63
    2e32:	cd bf       	out	0x3d, r28	; 61
    2e34:	df 91       	pop	r29
    2e36:	cf 91       	pop	r28
    2e38:	1f 91       	pop	r17
    2e3a:	0f 91       	pop	r16
    2e3c:	08 95       	ret

00002e3e <pf_read>:
    2e3e:	2f 92       	push	r2
    2e40:	3f 92       	push	r3
    2e42:	4f 92       	push	r4
    2e44:	5f 92       	push	r5
    2e46:	6f 92       	push	r6
    2e48:	7f 92       	push	r7
    2e4a:	8f 92       	push	r8
    2e4c:	9f 92       	push	r9
    2e4e:	af 92       	push	r10
    2e50:	bf 92       	push	r11
    2e52:	cf 92       	push	r12
    2e54:	df 92       	push	r13
    2e56:	ef 92       	push	r14
    2e58:	ff 92       	push	r15
    2e5a:	0f 93       	push	r16
    2e5c:	1f 93       	push	r17
    2e5e:	cf 93       	push	r28
    2e60:	df 93       	push	r29
    2e62:	3c 01       	movw	r6, r24
    2e64:	6b 01       	movw	r12, r22
    2e66:	4a 01       	movw	r8, r20
    2e68:	e0 90 9a 06 	lds	r14, 0x069A	; 0x80069a <FatFs>
    2e6c:	f0 90 9b 06 	lds	r15, 0x069B	; 0x80069b <FatFs+0x1>
    2e70:	fa 01       	movw	r30, r20
    2e72:	11 82       	std	Z+1, r1	; 0x01
    2e74:	10 82       	st	Z, r1
    2e76:	e1 14       	cp	r14, r1
    2e78:	f1 04       	cpc	r15, r1
    2e7a:	09 f4       	brne	.+2      	; 0x2e7e <pf_read+0x40>
    2e7c:	bb c0       	rjmp	.+374    	; 0x2ff4 <pf_read+0x1b6>
    2e7e:	f7 01       	movw	r30, r14
    2e80:	82 81       	ldd	r24, Z+2	; 0x02
    2e82:	80 ff       	sbrs	r24, 0
    2e84:	b9 c0       	rjmp	.+370    	; 0x2ff8 <pf_read+0x1ba>
    2e86:	84 8d       	ldd	r24, Z+28	; 0x1c
    2e88:	95 8d       	ldd	r25, Z+29	; 0x1d
    2e8a:	a6 8d       	ldd	r26, Z+30	; 0x1e
    2e8c:	b7 8d       	ldd	r27, Z+31	; 0x1f
    2e8e:	40 8d       	ldd	r20, Z+24	; 0x18
    2e90:	51 8d       	ldd	r21, Z+25	; 0x19
    2e92:	62 8d       	ldd	r22, Z+26	; 0x1a
    2e94:	73 8d       	ldd	r23, Z+27	; 0x1b
    2e96:	84 1b       	sub	r24, r20
    2e98:	95 0b       	sbc	r25, r21
    2e9a:	a6 0b       	sbc	r26, r22
    2e9c:	b7 0b       	sbc	r27, r23
    2e9e:	a6 01       	movw	r20, r12
    2ea0:	60 e0       	ldi	r22, 0x00	; 0
    2ea2:	70 e0       	ldi	r23, 0x00	; 0
    2ea4:	84 17       	cp	r24, r20
    2ea6:	95 07       	cpc	r25, r21
    2ea8:	a6 07       	cpc	r26, r22
    2eaa:	b7 07       	cpc	r27, r23
    2eac:	08 f4       	brcc	.+2      	; 0x2eb0 <pf_read+0x72>
    2eae:	6c 01       	movw	r12, r24
    2eb0:	53 01       	movw	r10, r6
    2eb2:	96 c0       	rjmp	.+300    	; 0x2fe0 <pf_read+0x1a2>
    2eb4:	f7 01       	movw	r30, r14
    2eb6:	20 8c       	ldd	r2, Z+24	; 0x18
    2eb8:	31 8c       	ldd	r3, Z+25	; 0x19
    2eba:	42 8c       	ldd	r4, Z+26	; 0x1a
    2ebc:	53 8c       	ldd	r5, Z+27	; 0x1b
    2ebe:	d2 01       	movw	r26, r4
    2ec0:	c1 01       	movw	r24, r2
    2ec2:	91 70       	andi	r25, 0x01	; 1
    2ec4:	aa 27       	eor	r26, r26
    2ec6:	bb 27       	eor	r27, r27
    2ec8:	89 2b       	or	r24, r25
    2eca:	8a 2b       	or	r24, r26
    2ecc:	8b 2b       	or	r24, r27
    2ece:	09 f0       	breq	.+2      	; 0x2ed2 <pf_read+0x94>
    2ed0:	4e c0       	rjmp	.+156    	; 0x2f6e <pf_read+0x130>
    2ed2:	21 81       	ldd	r18, Z+1	; 0x01
    2ed4:	30 e0       	ldi	r19, 0x00	; 0
    2ed6:	40 e0       	ldi	r20, 0x00	; 0
    2ed8:	50 e0       	ldi	r21, 0x00	; 0
    2eda:	c2 01       	movw	r24, r4
    2edc:	b1 01       	movw	r22, r2
    2ede:	05 2e       	mov	r0, r21
    2ee0:	59 e0       	ldi	r21, 0x09	; 9
    2ee2:	96 95       	lsr	r25
    2ee4:	87 95       	ror	r24
    2ee6:	77 95       	ror	r23
    2ee8:	67 95       	ror	r22
    2eea:	5a 95       	dec	r21
    2eec:	d1 f7       	brne	.-12     	; 0x2ee2 <pf_read+0xa4>
    2eee:	50 2d       	mov	r21, r0
    2ef0:	0e 94 bf 2a 	call	0x557e	; 0x557e <__udivmodsi4>
    2ef4:	67 2b       	or	r22, r23
    2ef6:	68 2b       	or	r22, r24
    2ef8:	69 2b       	or	r22, r25
    2efa:	e9 f4       	brne	.+58     	; 0x2f36 <pf_read+0xf8>
    2efc:	23 28       	or	r2, r3
    2efe:	24 28       	or	r2, r4
    2f00:	25 28       	or	r2, r5
    2f02:	31 f4       	brne	.+12     	; 0x2f10 <pf_read+0xd2>
    2f04:	f7 01       	movw	r30, r14
    2f06:	60 a1       	ldd	r22, Z+32	; 0x20
    2f08:	71 a1       	ldd	r23, Z+33	; 0x21
    2f0a:	82 a1       	ldd	r24, Z+34	; 0x22
    2f0c:	93 a1       	ldd	r25, Z+35	; 0x23
    2f0e:	07 c0       	rjmp	.+14     	; 0x2f1e <pf_read+0xe0>
    2f10:	f7 01       	movw	r30, r14
    2f12:	64 a1       	ldd	r22, Z+36	; 0x24
    2f14:	75 a1       	ldd	r23, Z+37	; 0x25
    2f16:	86 a1       	ldd	r24, Z+38	; 0x26
    2f18:	97 a1       	ldd	r25, Z+39	; 0x27
    2f1a:	0e 94 27 13 	call	0x264e	; 0x264e <get_fat>
    2f1e:	62 30       	cpi	r22, 0x02	; 2
    2f20:	71 05       	cpc	r23, r1
    2f22:	81 05       	cpc	r24, r1
    2f24:	91 05       	cpc	r25, r1
    2f26:	08 f4       	brcc	.+2      	; 0x2f2a <pf_read+0xec>
    2f28:	61 c0       	rjmp	.+194    	; 0x2fec <pf_read+0x1ae>
    2f2a:	f7 01       	movw	r30, r14
    2f2c:	64 a3       	std	Z+36, r22	; 0x24
    2f2e:	75 a3       	std	Z+37, r23	; 0x25
    2f30:	86 a3       	std	Z+38, r24	; 0x26
    2f32:	97 a3       	std	Z+39, r25	; 0x27
    2f34:	13 82       	std	Z+3, r1	; 0x03
    2f36:	f7 01       	movw	r30, r14
    2f38:	64 a1       	ldd	r22, Z+36	; 0x24
    2f3a:	75 a1       	ldd	r23, Z+37	; 0x25
    2f3c:	86 a1       	ldd	r24, Z+38	; 0x26
    2f3e:	97 a1       	ldd	r25, Z+39	; 0x27
    2f40:	0e 94 1e 12 	call	0x243c	; 0x243c <clust2sect>
    2f44:	61 15       	cp	r22, r1
    2f46:	71 05       	cpc	r23, r1
    2f48:	81 05       	cpc	r24, r1
    2f4a:	91 05       	cpc	r25, r1
    2f4c:	09 f4       	brne	.+2      	; 0x2f50 <pf_read+0x112>
    2f4e:	4e c0       	rjmp	.+156    	; 0x2fec <pf_read+0x1ae>
    2f50:	f7 01       	movw	r30, r14
    2f52:	23 81       	ldd	r18, Z+3	; 0x03
    2f54:	31 e0       	ldi	r19, 0x01	; 1
    2f56:	32 0f       	add	r19, r18
    2f58:	33 83       	std	Z+3, r19	; 0x03
    2f5a:	dc 01       	movw	r26, r24
    2f5c:	cb 01       	movw	r24, r22
    2f5e:	82 0f       	add	r24, r18
    2f60:	91 1d       	adc	r25, r1
    2f62:	a1 1d       	adc	r26, r1
    2f64:	b1 1d       	adc	r27, r1
    2f66:	80 a7       	std	Z+40, r24	; 0x28
    2f68:	91 a7       	std	Z+41, r25	; 0x29
    2f6a:	a2 a7       	std	Z+42, r26	; 0x2a
    2f6c:	b3 a7       	std	Z+43, r27	; 0x2b
    2f6e:	f7 01       	movw	r30, r14
    2f70:	80 8d       	ldd	r24, Z+24	; 0x18
    2f72:	91 8d       	ldd	r25, Z+25	; 0x19
    2f74:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2f76:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2f78:	9c 01       	movw	r18, r24
    2f7a:	31 70       	andi	r19, 0x01	; 1
    2f7c:	c0 e0       	ldi	r28, 0x00	; 0
    2f7e:	d2 e0       	ldi	r29, 0x02	; 2
    2f80:	c2 1b       	sub	r28, r18
    2f82:	d3 0b       	sbc	r29, r19
    2f84:	cc 16       	cp	r12, r28
    2f86:	dd 06       	cpc	r13, r29
    2f88:	08 f4       	brcc	.+2      	; 0x2f8c <pf_read+0x14e>
    2f8a:	e6 01       	movw	r28, r12
    2f8c:	f7 01       	movw	r30, r14
    2f8e:	40 a5       	ldd	r20, Z+40	; 0x28
    2f90:	51 a5       	ldd	r21, Z+41	; 0x29
    2f92:	62 a5       	ldd	r22, Z+42	; 0x2a
    2f94:	73 a5       	ldd	r23, Z+43	; 0x2b
    2f96:	61 14       	cp	r6, r1
    2f98:	71 04       	cpc	r7, r1
    2f9a:	19 f4       	brne	.+6      	; 0x2fa2 <pf_read+0x164>
    2f9c:	80 e0       	ldi	r24, 0x00	; 0
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	02 c0       	rjmp	.+4      	; 0x2fa6 <pf_read+0x168>
    2fa2:	8a 2d       	mov	r24, r10
    2fa4:	9b 2d       	mov	r25, r11
    2fa6:	8e 01       	movw	r16, r28
    2fa8:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <disk_readp>
    2fac:	81 11       	cpse	r24, r1
    2fae:	1e c0       	rjmp	.+60     	; 0x2fec <pf_read+0x1ae>
    2fb0:	f7 01       	movw	r30, r14
    2fb2:	80 8d       	ldd	r24, Z+24	; 0x18
    2fb4:	91 8d       	ldd	r25, Z+25	; 0x19
    2fb6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    2fb8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    2fba:	8c 0f       	add	r24, r28
    2fbc:	9d 1f       	adc	r25, r29
    2fbe:	a1 1d       	adc	r26, r1
    2fc0:	b1 1d       	adc	r27, r1
    2fc2:	80 8f       	std	Z+24, r24	; 0x18
    2fc4:	91 8f       	std	Z+25, r25	; 0x19
    2fc6:	a2 8f       	std	Z+26, r26	; 0x1a
    2fc8:	b3 8f       	std	Z+27, r27	; 0x1b
    2fca:	ac 0e       	add	r10, r28
    2fcc:	bd 1e       	adc	r11, r29
    2fce:	cc 1a       	sub	r12, r28
    2fd0:	dd 0a       	sbc	r13, r29
    2fd2:	f4 01       	movw	r30, r8
    2fd4:	80 81       	ld	r24, Z
    2fd6:	91 81       	ldd	r25, Z+1	; 0x01
    2fd8:	c8 0f       	add	r28, r24
    2fda:	d9 1f       	adc	r29, r25
    2fdc:	d1 83       	std	Z+1, r29	; 0x01
    2fde:	c0 83       	st	Z, r28
    2fe0:	c1 14       	cp	r12, r1
    2fe2:	d1 04       	cpc	r13, r1
    2fe4:	09 f0       	breq	.+2      	; 0x2fe8 <pf_read+0x1aa>
    2fe6:	66 cf       	rjmp	.-308    	; 0x2eb4 <pf_read+0x76>
    2fe8:	80 e0       	ldi	r24, 0x00	; 0
    2fea:	07 c0       	rjmp	.+14     	; 0x2ffa <pf_read+0x1bc>
    2fec:	f7 01       	movw	r30, r14
    2fee:	12 82       	std	Z+2, r1	; 0x02
    2ff0:	81 e0       	ldi	r24, 0x01	; 1
    2ff2:	03 c0       	rjmp	.+6      	; 0x2ffa <pf_read+0x1bc>
    2ff4:	86 e0       	ldi	r24, 0x06	; 6
    2ff6:	01 c0       	rjmp	.+2      	; 0x2ffa <pf_read+0x1bc>
    2ff8:	85 e0       	ldi	r24, 0x05	; 5
    2ffa:	df 91       	pop	r29
    2ffc:	cf 91       	pop	r28
    2ffe:	1f 91       	pop	r17
    3000:	0f 91       	pop	r16
    3002:	ff 90       	pop	r15
    3004:	ef 90       	pop	r14
    3006:	df 90       	pop	r13
    3008:	cf 90       	pop	r12
    300a:	bf 90       	pop	r11
    300c:	af 90       	pop	r10
    300e:	9f 90       	pop	r9
    3010:	8f 90       	pop	r8
    3012:	7f 90       	pop	r7
    3014:	6f 90       	pop	r6
    3016:	5f 90       	pop	r5
    3018:	4f 90       	pop	r4
    301a:	3f 90       	pop	r3
    301c:	2f 90       	pop	r2
    301e:	08 95       	ret

00003020 <pf_lseek>:
#if _USE_LSEEK

FRESULT pf_lseek (
	DWORD ofs		/* File pointer from top of file */
)
{
    3020:	4f 92       	push	r4
    3022:	5f 92       	push	r5
    3024:	6f 92       	push	r6
    3026:	7f 92       	push	r7
    3028:	8f 92       	push	r8
    302a:	9f 92       	push	r9
    302c:	af 92       	push	r10
    302e:	bf 92       	push	r11
    3030:	cf 92       	push	r12
    3032:	df 92       	push	r13
    3034:	ef 92       	push	r14
    3036:	ff 92       	push	r15
    3038:	cf 93       	push	r28
    303a:	df 93       	push	r29
    303c:	00 d0       	rcall	.+0      	; 0x303e <pf_lseek+0x1e>
    303e:	00 d0       	rcall	.+0      	; 0x3040 <pf_lseek+0x20>
    3040:	00 d0       	rcall	.+0      	; 0x3042 <pf_lseek+0x22>
    3042:	cd b7       	in	r28, 0x3d	; 61
    3044:	de b7       	in	r29, 0x3e	; 62
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;
    3046:	20 91 9a 06 	lds	r18, 0x069A	; 0x80069a <FatFs>
    304a:	30 91 9b 06 	lds	r19, 0x069B	; 0x80069b <FatFs+0x1>
    304e:	3e 83       	std	Y+6, r19	; 0x06
    3050:	2d 83       	std	Y+5, r18	; 0x05


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    3052:	21 15       	cp	r18, r1
    3054:	31 05       	cpc	r19, r1
    3056:	09 f4       	brne	.+2      	; 0x305a <pf_lseek+0x3a>
    3058:	f4 c0       	rjmp	.+488    	; 0x3242 <pf_lseek+0x222>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
    305a:	d9 01       	movw	r26, r18
    305c:	12 96       	adiw	r26, 0x02	; 2
    305e:	2c 91       	ld	r18, X
    3060:	12 97       	sbiw	r26, 0x02	; 2
    3062:	20 ff       	sbrs	r18, 0
    3064:	f0 c0       	rjmp	.+480    	; 0x3246 <pf_lseek+0x226>
			return FR_NOT_OPENED;

	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
    3066:	5c 96       	adiw	r26, 0x1c	; 28
    3068:	cd 90       	ld	r12, X+
    306a:	dd 90       	ld	r13, X+
    306c:	ed 90       	ld	r14, X+
    306e:	fc 90       	ld	r15, X
    3070:	5f 97       	sbiw	r26, 0x1f	; 31
    3072:	c6 16       	cp	r12, r22
    3074:	d7 06       	cpc	r13, r23
    3076:	e8 06       	cpc	r14, r24
    3078:	f9 06       	cpc	r15, r25
    307a:	10 f0       	brcs	.+4      	; 0x3080 <pf_lseek+0x60>
    307c:	6b 01       	movw	r12, r22
    307e:	7c 01       	movw	r14, r24
	ifptr = fs->fptr;
    3080:	ed 81       	ldd	r30, Y+5	; 0x05
    3082:	fe 81       	ldd	r31, Y+6	; 0x06
    3084:	40 8c       	ldd	r4, Z+24	; 0x18
    3086:	51 8c       	ldd	r5, Z+25	; 0x19
    3088:	62 8c       	ldd	r6, Z+26	; 0x1a
    308a:	73 8c       	ldd	r7, Z+27	; 0x1b
	fs->fptr = 0;
    308c:	10 8e       	std	Z+24, r1	; 0x18
    308e:	11 8e       	std	Z+25, r1	; 0x19
    3090:	12 8e       	std	Z+26, r1	; 0x1a
    3092:	13 8e       	std	Z+27, r1	; 0x1b
	if (ofs > 0) {
    3094:	c1 14       	cp	r12, r1
    3096:	d1 04       	cpc	r13, r1
    3098:	e1 04       	cpc	r14, r1
    309a:	f1 04       	cpc	r15, r1
    309c:	09 f4       	brne	.+2      	; 0x30a0 <pf_lseek+0x80>
    309e:	d5 c0       	rjmp	.+426    	; 0x324a <pf_lseek+0x22a>
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
    30a0:	81 80       	ldd	r8, Z+1	; 0x01
    30a2:	91 2c       	mov	r9, r1
    30a4:	a1 2c       	mov	r10, r1
    30a6:	b1 2c       	mov	r11, r1
    30a8:	07 2e       	mov	r0, r23
    30aa:	79 e0       	ldi	r23, 0x09	; 9
    30ac:	88 0c       	add	r8, r8
    30ae:	99 1c       	adc	r9, r9
    30b0:	aa 1c       	adc	r10, r10
    30b2:	bb 1c       	adc	r11, r11
    30b4:	7a 95       	dec	r23
    30b6:	d1 f7       	brne	.-12     	; 0x30ac <pf_lseek+0x8c>
    30b8:	70 2d       	mov	r23, r0
		if (ifptr > 0 &&
    30ba:	41 14       	cp	r4, r1
    30bc:	51 04       	cpc	r5, r1
    30be:	61 04       	cpc	r6, r1
    30c0:	71 04       	cpc	r7, r1
    30c2:	09 f4       	brne	.+2      	; 0x30c6 <pf_lseek+0xa6>
    30c4:	40 c0       	rjmp	.+128    	; 0x3146 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    30c6:	c7 01       	movw	r24, r14
    30c8:	b6 01       	movw	r22, r12
    30ca:	61 50       	subi	r22, 0x01	; 1
    30cc:	71 09       	sbc	r23, r1
    30ce:	81 09       	sbc	r24, r1
    30d0:	91 09       	sbc	r25, r1
    30d2:	a5 01       	movw	r20, r10
    30d4:	94 01       	movw	r18, r8
    30d6:	0e 94 bf 2a 	call	0x557e	; 0x557e <__udivmodsi4>
    30da:	29 83       	std	Y+1, r18	; 0x01
    30dc:	3a 83       	std	Y+2, r19	; 0x02
    30de:	4b 83       	std	Y+3, r20	; 0x03
    30e0:	5c 83       	std	Y+4, r21	; 0x04
    30e2:	b1 e0       	ldi	r27, 0x01	; 1
    30e4:	4b 1a       	sub	r4, r27
    30e6:	51 08       	sbc	r5, r1
    30e8:	61 08       	sbc	r6, r1
    30ea:	71 08       	sbc	r7, r1
    30ec:	c3 01       	movw	r24, r6
    30ee:	b2 01       	movw	r22, r4
    30f0:	a5 01       	movw	r20, r10
    30f2:	94 01       	movw	r18, r8
    30f4:	0e 94 bf 2a 	call	0x557e	; 0x557e <__udivmodsi4>
	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
	ifptr = fs->fptr;
	fs->fptr = 0;
	if (ofs > 0) {
		bcs = (DWORD)fs->csize * 512;	/* Cluster size (byte) */
		if (ifptr > 0 &&
    30f8:	89 81       	ldd	r24, Y+1	; 0x01
    30fa:	9a 81       	ldd	r25, Y+2	; 0x02
    30fc:	ab 81       	ldd	r26, Y+3	; 0x03
    30fe:	bc 81       	ldd	r27, Y+4	; 0x04
    3100:	82 17       	cp	r24, r18
    3102:	93 07       	cpc	r25, r19
    3104:	a4 07       	cpc	r26, r20
    3106:	b5 07       	cpc	r27, r21
    3108:	f0 f0       	brcs	.+60     	; 0x3146 <pf_lseek+0x126>
			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
			fs->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    310a:	88 27       	eor	r24, r24
    310c:	99 27       	eor	r25, r25
    310e:	dc 01       	movw	r26, r24
    3110:	88 19       	sub	r24, r8
    3112:	99 09       	sbc	r25, r9
    3114:	aa 09       	sbc	r26, r10
    3116:	bb 09       	sbc	r27, r11
    3118:	48 22       	and	r4, r24
    311a:	59 22       	and	r5, r25
    311c:	6a 22       	and	r6, r26
    311e:	7b 22       	and	r7, r27
    3120:	ad 81       	ldd	r26, Y+5	; 0x05
    3122:	be 81       	ldd	r27, Y+6	; 0x06
    3124:	58 96       	adiw	r26, 0x18	; 24
    3126:	4d 92       	st	X+, r4
    3128:	5d 92       	st	X+, r5
    312a:	6d 92       	st	X+, r6
    312c:	7c 92       	st	X, r7
    312e:	5b 97       	sbiw	r26, 0x1b	; 27
			ofs -= fs->fptr;
    3130:	c4 18       	sub	r12, r4
    3132:	d5 08       	sbc	r13, r5
    3134:	e6 08       	sbc	r14, r6
    3136:	f7 08       	sbc	r15, r7
			clst = fs->curr_clust;
    3138:	94 96       	adiw	r26, 0x24	; 36
    313a:	6d 91       	ld	r22, X+
    313c:	7d 91       	ld	r23, X+
    313e:	8d 91       	ld	r24, X+
    3140:	9c 91       	ld	r25, X
    3142:	97 97       	sbiw	r26, 0x27	; 39
    3144:	33 c0       	rjmp	.+102    	; 0x31ac <pf_lseek+0x18c>
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
    3146:	ed 81       	ldd	r30, Y+5	; 0x05
    3148:	fe 81       	ldd	r31, Y+6	; 0x06
    314a:	60 a1       	ldd	r22, Z+32	; 0x20
    314c:	71 a1       	ldd	r23, Z+33	; 0x21
    314e:	82 a1       	ldd	r24, Z+34	; 0x22
    3150:	93 a1       	ldd	r25, Z+35	; 0x23
			fs->curr_clust = clst;
    3152:	64 a3       	std	Z+36, r22	; 0x24
    3154:	75 a3       	std	Z+37, r23	; 0x25
    3156:	86 a3       	std	Z+38, r24	; 0x26
    3158:	97 a3       	std	Z+39, r25	; 0x27
    315a:	28 c0       	rjmp	.+80     	; 0x31ac <pf_lseek+0x18c>
		}
		while (ofs > bcs) {				/* Cluster following loop */
			clst = get_fat(clst);		/* Follow cluster chain */
    315c:	0e 94 27 13 	call	0x264e	; 0x264e <get_fat>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
    3160:	62 30       	cpi	r22, 0x02	; 2
    3162:	71 05       	cpc	r23, r1
    3164:	81 05       	cpc	r24, r1
    3166:	91 05       	cpc	r25, r1
    3168:	08 f4       	brcc	.+2      	; 0x316c <pf_lseek+0x14c>
    316a:	65 c0       	rjmp	.+202    	; 0x3236 <pf_lseek+0x216>
    316c:	ed 81       	ldd	r30, Y+5	; 0x05
    316e:	fe 81       	ldd	r31, Y+6	; 0x06
    3170:	40 84       	ldd	r4, Z+8	; 0x08
    3172:	51 84       	ldd	r5, Z+9	; 0x09
    3174:	62 84       	ldd	r6, Z+10	; 0x0a
    3176:	73 84       	ldd	r7, Z+11	; 0x0b
    3178:	64 15       	cp	r22, r4
    317a:	75 05       	cpc	r23, r5
    317c:	86 05       	cpc	r24, r6
    317e:	97 05       	cpc	r25, r7
    3180:	08 f0       	brcs	.+2      	; 0x3184 <pf_lseek+0x164>
    3182:	59 c0       	rjmp	.+178    	; 0x3236 <pf_lseek+0x216>
			fs->curr_clust = clst;
    3184:	64 a3       	std	Z+36, r22	; 0x24
    3186:	75 a3       	std	Z+37, r23	; 0x25
    3188:	86 a3       	std	Z+38, r24	; 0x26
    318a:	97 a3       	std	Z+39, r25	; 0x27
			fs->fptr += bcs;
    318c:	40 8c       	ldd	r4, Z+24	; 0x18
    318e:	51 8c       	ldd	r5, Z+25	; 0x19
    3190:	62 8c       	ldd	r6, Z+26	; 0x1a
    3192:	73 8c       	ldd	r7, Z+27	; 0x1b
    3194:	48 0c       	add	r4, r8
    3196:	59 1c       	adc	r5, r9
    3198:	6a 1c       	adc	r6, r10
    319a:	7b 1c       	adc	r7, r11
    319c:	40 8e       	std	Z+24, r4	; 0x18
    319e:	51 8e       	std	Z+25, r5	; 0x19
    31a0:	62 8e       	std	Z+26, r6	; 0x1a
    31a2:	73 8e       	std	Z+27, r7	; 0x1b
			ofs -= bcs;
    31a4:	c8 18       	sub	r12, r8
    31a6:	d9 08       	sbc	r13, r9
    31a8:	ea 08       	sbc	r14, r10
    31aa:	fb 08       	sbc	r15, r11
			clst = fs->curr_clust;
		} else {							/* When seek to back cluster, */
			clst = fs->org_clust;			/* start from the first cluster */
			fs->curr_clust = clst;
		}
		while (ofs > bcs) {				/* Cluster following loop */
    31ac:	8c 14       	cp	r8, r12
    31ae:	9d 04       	cpc	r9, r13
    31b0:	ae 04       	cpc	r10, r14
    31b2:	bf 04       	cpc	r11, r15
    31b4:	98 f2       	brcs	.-90     	; 0x315c <pf_lseek+0x13c>
			if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
			fs->curr_clust = clst;
			fs->fptr += bcs;
			ofs -= bcs;
		}
		fs->fptr += ofs;
    31b6:	ad 81       	ldd	r26, Y+5	; 0x05
    31b8:	be 81       	ldd	r27, Y+6	; 0x06
    31ba:	58 96       	adiw	r26, 0x18	; 24
    31bc:	8d 90       	ld	r8, X+
    31be:	9d 90       	ld	r9, X+
    31c0:	ad 90       	ld	r10, X+
    31c2:	bc 90       	ld	r11, X
    31c4:	5b 97       	sbiw	r26, 0x1b	; 27
    31c6:	8c 0c       	add	r8, r12
    31c8:	9d 1c       	adc	r9, r13
    31ca:	ae 1c       	adc	r10, r14
    31cc:	bf 1c       	adc	r11, r15
    31ce:	fd 01       	movw	r30, r26
    31d0:	80 8e       	std	Z+24, r8	; 0x18
    31d2:	91 8e       	std	Z+25, r9	; 0x19
    31d4:	a2 8e       	std	Z+26, r10	; 0x1a
    31d6:	b3 8e       	std	Z+27, r11	; 0x1b
		sect = clust2sect(clst);		/* Current sector */
    31d8:	0e 94 1e 12 	call	0x243c	; 0x243c <clust2sect>
		if (!sect) goto fe_abort;
    31dc:	61 15       	cp	r22, r1
    31de:	71 05       	cpc	r23, r1
    31e0:	81 05       	cpc	r24, r1
    31e2:	91 05       	cpc	r25, r1
    31e4:	41 f1       	breq	.+80     	; 0x3236 <pf_lseek+0x216>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
    31e6:	46 01       	movw	r8, r12
    31e8:	57 01       	movw	r10, r14
    31ea:	07 2e       	mov	r0, r23
    31ec:	79 e0       	ldi	r23, 0x09	; 9
    31ee:	b6 94       	lsr	r11
    31f0:	a7 94       	ror	r10
    31f2:	97 94       	ror	r9
    31f4:	87 94       	ror	r8
    31f6:	7a 95       	dec	r23
    31f8:	d1 f7       	brne	.-12     	; 0x31ee <pf_lseek+0x1ce>
    31fa:	70 2d       	mov	r23, r0
    31fc:	ad 81       	ldd	r26, Y+5	; 0x05
    31fe:	be 81       	ldd	r27, Y+6	; 0x06
    3200:	13 96       	adiw	r26, 0x03	; 3
    3202:	8c 92       	st	X, r8
		if (ofs % 512)
    3204:	b1 e0       	ldi	r27, 0x01	; 1
    3206:	db 22       	and	r13, r27
    3208:	ee 24       	eor	r14, r14
    320a:	ff 24       	eor	r15, r15
    320c:	cd 28       	or	r12, r13
    320e:	ce 28       	or	r12, r14
    3210:	cf 28       	or	r12, r15
    3212:	e9 f0       	breq	.+58     	; 0x324e <pf_lseek+0x22e>
			fs->dsect = sect + fs->csect++;
    3214:	21 e0       	ldi	r18, 0x01	; 1
    3216:	28 0d       	add	r18, r8
    3218:	ed 81       	ldd	r30, Y+5	; 0x05
    321a:	fe 81       	ldd	r31, Y+6	; 0x06
    321c:	23 83       	std	Z+3, r18	; 0x03
    321e:	dc 01       	movw	r26, r24
    3220:	cb 01       	movw	r24, r22
    3222:	88 0d       	add	r24, r8
    3224:	91 1d       	adc	r25, r1
    3226:	a1 1d       	adc	r26, r1
    3228:	b1 1d       	adc	r27, r1
    322a:	80 a7       	std	Z+40, r24	; 0x28
    322c:	91 a7       	std	Z+41, r25	; 0x29
    322e:	a2 a7       	std	Z+42, r26	; 0x2a
    3230:	b3 a7       	std	Z+43, r27	; 0x2b
	}

	return FR_OK;
    3232:	80 e0       	ldi	r24, 0x00	; 0
    3234:	0d c0       	rjmp	.+26     	; 0x3250 <pf_lseek+0x230>

fe_abort:
	fs->flag = 0;
    3236:	ad 81       	ldd	r26, Y+5	; 0x05
    3238:	be 81       	ldd	r27, Y+6	; 0x06
    323a:	12 96       	adiw	r26, 0x02	; 2
    323c:	1c 92       	st	X, r1
	return FR_DISK_ERR;
    323e:	81 e0       	ldi	r24, 0x01	; 1
    3240:	07 c0       	rjmp	.+14     	; 0x3250 <pf_lseek+0x230>
	CLUST clst;
	DWORD bcs, sect, ifptr;
	FATFS *fs = FatFs;


	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
    3242:	86 e0       	ldi	r24, 0x06	; 6
    3244:	05 c0       	rjmp	.+10     	; 0x3250 <pf_lseek+0x230>
	if (!(fs->flag & FA_OPENED))		/* Check if opened */
			return FR_NOT_OPENED;
    3246:	85 e0       	ldi	r24, 0x05	; 5
    3248:	03 c0       	rjmp	.+6      	; 0x3250 <pf_lseek+0x230>
		fs->csect = (BYTE)(ofs / 512);	/* Sector offset in the cluster */
		if (ofs % 512)
			fs->dsect = sect + fs->csect++;
	}

	return FR_OK;
    324a:	80 e0       	ldi	r24, 0x00	; 0
    324c:	01 c0       	rjmp	.+2      	; 0x3250 <pf_lseek+0x230>
    324e:	80 e0       	ldi	r24, 0x00	; 0

fe_abort:
	fs->flag = 0;
	return FR_DISK_ERR;
}
    3250:	26 96       	adiw	r28, 0x06	; 6
    3252:	0f b6       	in	r0, 0x3f	; 63
    3254:	f8 94       	cli
    3256:	de bf       	out	0x3e, r29	; 62
    3258:	0f be       	out	0x3f, r0	; 63
    325a:	cd bf       	out	0x3d, r28	; 61
    325c:	df 91       	pop	r29
    325e:	cf 91       	pop	r28
    3260:	ff 90       	pop	r15
    3262:	ef 90       	pop	r14
    3264:	df 90       	pop	r13
    3266:	cf 90       	pop	r12
    3268:	bf 90       	pop	r11
    326a:	af 90       	pop	r10
    326c:	9f 90       	pop	r9
    326e:	8f 90       	pop	r8
    3270:	7f 90       	pop	r7
    3272:	6f 90       	pop	r6
    3274:	5f 90       	pop	r5
    3276:	4f 90       	pop	r4
    3278:	08 95       	ret

0000327a <RTC_ConvertFromDec>:
	unsigned char ch = ((c/10)<<4)|(c%10);
	return ch;
}
unsigned char RTC_ConvertFromDec(unsigned char c)//перевод в десятичный формат
{
	unsigned char ch = ((c>>4)*10+(0b00001111&c));
    327a:	98 2f       	mov	r25, r24
    327c:	92 95       	swap	r25
    327e:	9f 70       	andi	r25, 0x0F	; 15
    3280:	99 0f       	add	r25, r25
    3282:	29 2f       	mov	r18, r25
    3284:	22 0f       	add	r18, r18
    3286:	22 0f       	add	r18, r18
    3288:	92 0f       	add	r25, r18
    328a:	8f 70       	andi	r24, 0x0F	; 15
	return ch;
}
    328c:	89 0f       	add	r24, r25
    328e:	08 95       	ret

00003290 <RTC_init>:
// инициализация начальных установок
void RTC_init(void){
	I2C_StartCondition();               // запуск i2c
    3290:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(0b11010000);   // передача адреса устройства, режим записи
    3294:	80 ed       	ldi	r24, 0xD0	; 208
    3296:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0x0E);            // передача адреса памяти
    329a:	8e e0       	ldi	r24, 0x0E	; 14
    329c:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0b00100000);      // запустить преобразование температуры и выход на 1 Гц
    32a0:	80 e2       	ldi	r24, 0x20	; 32
    32a2:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0b00001000);      // разрешить выход 32 кГц
    32a6:	88 e0       	ldi	r24, 0x08	; 8
    32a8:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    32ac:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>
    32b0:	08 95       	ret

000032b2 <read_symbol_from_SD>:
}
//—————————————-
*/

uint8_t read_symbol_from_SD (uint16_t symbol)
{
    32b2:	0f 93       	push	r16
    32b4:	1f 93       	push	r17
    32b6:	cf 93       	push	r28
    32b8:	df 93       	push	r29
    32ba:	cd b7       	in	r28, 0x3d	; 61
    32bc:	de b7       	in	r29, 0x3e	; 62
    32be:	2d 97       	sbiw	r28, 0x0d	; 13
    32c0:	0f b6       	in	r0, 0x3f	; 63
    32c2:	f8 94       	cli
    32c4:	de bf       	out	0x3e, r29	; 62
    32c6:	0f be       	out	0x3f, r0	; 63
    32c8:	cd bf       	out	0x3d, r28	; 61
	WORD s1;
	uint8_t result;
	char buffer[10] = {};
    32ca:	8e 01       	movw	r16, r28
    32cc:	0c 5f       	subi	r16, 0xFC	; 252
    32ce:	1f 4f       	sbci	r17, 0xFF	; 255
    32d0:	2a e0       	ldi	r18, 0x0A	; 10
    32d2:	f8 01       	movw	r30, r16
    32d4:	11 92       	st	Z+, r1
    32d6:	2a 95       	dec	r18
    32d8:	e9 f7       	brne	.-6      	; 0x32d4 <read_symbol_from_SD+0x22>

	pf_lseek(6*symbol); //Установим курсор чтения на 0 
    32da:	bc 01       	movw	r22, r24
    32dc:	66 0f       	add	r22, r22
    32de:	77 1f       	adc	r23, r23
    32e0:	68 0f       	add	r22, r24
    32e2:	79 1f       	adc	r23, r25
    32e4:	66 0f       	add	r22, r22
    32e6:	77 1f       	adc	r23, r23
    32e8:	80 e0       	ldi	r24, 0x00	; 0
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	0e 94 10 18 	call	0x3020	; 0x3020 <pf_lseek>
	pf_read(buffer,4,&s1);
    32f0:	ae 01       	movw	r20, r28
    32f2:	4f 5f       	subi	r20, 0xFF	; 255
    32f4:	5f 4f       	sbci	r21, 0xFF	; 255
    32f6:	64 e0       	ldi	r22, 0x04	; 4
    32f8:	70 e0       	ldi	r23, 0x00	; 0
    32fa:	c8 01       	movw	r24, r16
    32fc:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <pf_read>
	sscanf(buffer, "%x", &result);
    3300:	ce 01       	movw	r24, r28
    3302:	03 96       	adiw	r24, 0x03	; 3
    3304:	9f 93       	push	r25
    3306:	8f 93       	push	r24
    3308:	8f e3       	ldi	r24, 0x3F	; 63
    330a:	91 e0       	ldi	r25, 0x01	; 1
    330c:	9f 93       	push	r25
    330e:	8f 93       	push	r24
    3310:	1f 93       	push	r17
    3312:	0f 93       	push	r16
    3314:	0e 94 c6 2c 	call	0x598c	; 0x598c <sscanf>

	return result;
    3318:	0f 90       	pop	r0
    331a:	0f 90       	pop	r0
    331c:	0f 90       	pop	r0
    331e:	0f 90       	pop	r0
    3320:	0f 90       	pop	r0
    3322:	0f 90       	pop	r0
    3324:	8b 81       	ldd	r24, Y+3	; 0x03
    3326:	2d 96       	adiw	r28, 0x0d	; 13
    3328:	0f b6       	in	r0, 0x3f	; 63
    332a:	f8 94       	cli
    332c:	de bf       	out	0x3e, r29	; 62
    332e:	0f be       	out	0x3f, r0	; 63
    3330:	cd bf       	out	0x3d, r28	; 61
    3332:	df 91       	pop	r29
    3334:	cf 91       	pop	r28
    3336:	1f 91       	pop	r17
    3338:	0f 91       	pop	r16
    333a:	08 95       	ret

0000333c <I2C_Init>:
{
    I2C_StartCondition(); // Отправим условие START
	I2C_SendByte(addr); // Отправим в шину адрес устройства + бит чтения-записи
	I2C_SendByte(c);// Отправим байт данных
	I2C_StopCondition();// Отправим условие STOP
}
    333c:	88 e4       	ldi	r24, 0x48	; 72
    333e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    3342:	08 95       	ret

00003344 <I2C_StartCondition>:
    3344:	84 ea       	ldi	r24, 0xA4	; 164
    3346:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    334a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    334e:	88 23       	and	r24, r24
    3350:	e4 f7       	brge	.-8      	; 0x334a <I2C_StartCondition+0x6>
    3352:	08 95       	ret

00003354 <I2C_StopCondition>:
    3354:	84 e9       	ldi	r24, 0x94	; 148
    3356:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    335a:	08 95       	ret

0000335c <I2C_SendByte>:
    335c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    3360:	84 e8       	ldi	r24, 0x84	; 132
    3362:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    3366:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    336a:	88 23       	and	r24, r24
    336c:	e4 f7       	brge	.-8      	; 0x3366 <I2C_SendByte+0xa>
    336e:	08 95       	ret

00003370 <I2C_ReadByte>:
unsigned char I2C_ReadByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
    3370:	84 ec       	ldi	r24, 0xC4	; 196
    3372:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    3376:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    337a:	88 23       	and	r24, r24
    337c:	e4 f7       	brge	.-8      	; 0x3376 <I2C_ReadByte+0x6>
	return TWDR;//читаем регистр данных
    337e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
    3382:	08 95       	ret

00003384 <I2C_ReadLastByte>:
unsigned char I2C_ReadLastByte(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
    3384:	84 e8       	ldi	r24, 0x84	; 132
    3386:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while (!(TWCR & (1<<TWINT)));//ожидание установки бита TWIN
    338a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    338e:	88 23       	and	r24, r24
    3390:	e4 f7       	brge	.-8      	; 0x338a <I2C_ReadLastByte+0x6>
	return TWDR;//читаем регистр данных
    3392:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    3396:	08 95       	ret

00003398 <USART_Init>:
 */ 
#include "usart.h"

void USART_Init( unsigned int speed)//Инициализация модуля USART
{	
  UBRR0H = (unsigned char)(speed>>8);
    3398:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  UBRR0L = (unsigned char)speed;
    339c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  UCSR0B=(1<<RXEN0)|( 1<<TXEN0); //Включаем прием и передачу по USART
    33a0:	e1 ec       	ldi	r30, 0xC1	; 193
    33a2:	f0 e0       	ldi	r31, 0x00	; 0
    33a4:	88 e1       	ldi	r24, 0x18	; 24
    33a6:	80 83       	st	Z, r24
  UCSR0B |= (1<<RXCIE0); //Разрешаем прерывание при приеме
    33a8:	80 81       	ld	r24, Z
    33aa:	80 68       	ori	r24, 0x80	; 128
    33ac:	80 83       	st	Z, r24
  UCSR0A |= (1<<U2X0); // Для 8 мгц, удвоение скорости
    33ae:	e0 ec       	ldi	r30, 0xC0	; 192
    33b0:	f0 e0       	ldi	r31, 0x00	; 0
    33b2:	80 81       	ld	r24, Z
    33b4:	82 60       	ori	r24, 0x02	; 2
    33b6:	80 83       	st	Z, r24
  UCSR0C |= (1<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);// Обращаемся именно к регистру UCSRC (URSEL=1),
    33b8:	e2 ec       	ldi	r30, 0xC2	; 194
    33ba:	f0 e0       	ldi	r31, 0x00	; 0
    33bc:	80 81       	ld	r24, Z
    33be:	8e 60       	ori	r24, 0x0E	; 14
    33c0:	80 83       	st	Z, r24
    33c2:	08 95       	ret

000033c4 <USART_Transmit>:
  //ассинхронный режим (UMSEL=0), без контроля четности (UPM1=0 и UPM0=0),
  //2 стоп-бит (USBS=1), 8-бит посылка (UCSZ1=1 и UCSZ0=1)
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
    33c4:	dc 01       	movw	r26, r24
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    33c6:	80 e0       	ldi	r24, 0x00	; 0
    33c8:	0b c0       	rjmp	.+22     	; 0x33e0 <USART_Transmit+0x1c>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
    33ca:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    33ce:	95 ff       	sbrs	r25, 5
    33d0:	fc cf       	rjmp	.-8      	; 0x33ca <USART_Transmit+0x6>
	  UDR0 = data[i]; //Начало передачи данных
    33d2:	fd 01       	movw	r30, r26
    33d4:	e2 0f       	add	r30, r18
    33d6:	f3 1f       	adc	r31, r19
    33d8:	90 81       	ld	r25, Z
    33da:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  //UCSRC |= (1<<UPM1);//четность
}
void USART_Transmit( char* data ) //Функция отправки данных
{
  uint8_t i;
  for (i = 0; i < strlen(data); i++)
    33de:	8f 5f       	subi	r24, 0xFF	; 255
    33e0:	28 2f       	mov	r18, r24
    33e2:	30 e0       	ldi	r19, 0x00	; 0
    33e4:	fd 01       	movw	r30, r26
    33e6:	01 90       	ld	r0, Z+
    33e8:	00 20       	and	r0, r0
    33ea:	e9 f7       	brne	.-6      	; 0x33e6 <USART_Transmit+0x22>
    33ec:	31 97       	sbiw	r30, 0x01	; 1
    33ee:	ea 1b       	sub	r30, r26
    33f0:	fb 0b       	sbc	r31, r27
    33f2:	2e 17       	cp	r18, r30
    33f4:	3f 07       	cpc	r19, r31
    33f6:	48 f3       	brcs	.-46     	; 0x33ca <USART_Transmit+0x6>
  {
	  while ( !(UCSR0A & (1<<UDRE0)) ); //Ожидание опустошения буфера приема
	  UDR0 = data[i]; //Начало передачи данных
  }

}
    33f8:	08 95       	ret

000033fa <Print_Hello_World>:
	LCD_12864_Draw_pixel(113, 48);
	LCD_12864_Draw_pixel(113, 49);
	LCD_12864_Draw_pixel(114, 50);
	LCD_12864_Draw_pixel(112, 49);
	LCD_12864_Draw_pixel(111, 49);
	LCD_12864_Draw_pixel(110, 50);
    33fa:	cf 93       	push	r28
    33fc:	df 93       	push	r29
    33fe:	ec 01       	movw	r28, r24
    3400:	81 e0       	ldi	r24, 0x01	; 1
    3402:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
    3406:	0e 94 3d 0a 	call	0x147a	; 0x147a <LCD_12864_Print_jpeg>
    340a:	22 e4       	ldi	r18, 0x42	; 66
    340c:	31 e0       	ldi	r19, 0x01	; 1
    340e:	40 e0       	ldi	r20, 0x00	; 0
    3410:	60 e0       	ldi	r22, 0x00	; 0
    3412:	88 e2       	ldi	r24, 0x28	; 40
    3414:	90 e0       	ldi	r25, 0x00	; 0
    3416:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
    341a:	2b e4       	ldi	r18, 0x4B	; 75
    341c:	31 e0       	ldi	r19, 0x01	; 1
    341e:	40 e0       	ldi	r20, 0x00	; 0
    3420:	67 e0       	ldi	r22, 0x07	; 7
    3422:	8e e1       	ldi	r24, 0x1E	; 30
    3424:	90 e0       	ldi	r25, 0x00	; 0
    3426:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
    342a:	ce 01       	movw	r24, r28
    342c:	0e 94 25 05 	call	0xa4a	; 0xa4a <LCD_12864_Draw_bitmap>
    3430:	80 e0       	ldi	r24, 0x00	; 0
    3432:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
    3436:	2f ef       	ldi	r18, 0xFF	; 255
    3438:	8b e7       	ldi	r24, 0x7B	; 123
    343a:	92 e9       	ldi	r25, 0x92	; 146
    343c:	21 50       	subi	r18, 0x01	; 1
    343e:	80 40       	sbci	r24, 0x00	; 0
    3440:	90 40       	sbci	r25, 0x00	; 0
    3442:	e1 f7       	brne	.-8      	; 0x343c <Print_Hello_World+0x42>
    3444:	00 c0       	rjmp	.+0      	; 0x3446 <Print_Hello_World+0x4c>
    3446:	00 00       	nop
    3448:	df 91       	pop	r29
    344a:	cf 91       	pop	r28
    344c:	08 95       	ret

0000344e <Print_Download>:
    344e:	0f 93       	push	r16
    3450:	1f 93       	push	r17
    3452:	cf 93       	push	r28
    3454:	8c 01       	movw	r16, r24
    3456:	81 e0       	ldi	r24, 0x01	; 1
    3458:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
    345c:	0e 94 95 0a 	call	0x152a	; 0x152a <LCD_12864_Clean_Frame_buffer>
    3460:	2f e0       	ldi	r18, 0x0F	; 15
    3462:	30 e0       	ldi	r19, 0x00	; 0
    3464:	40 e7       	ldi	r20, 0x70	; 112
    3466:	50 e0       	ldi	r21, 0x00	; 0
    3468:	63 e2       	ldi	r22, 0x23	; 35
    346a:	70 e0       	ldi	r23, 0x00	; 0
    346c:	86 e0       	ldi	r24, 0x06	; 6
    346e:	90 e0       	ldi	r25, 0x00	; 0
    3470:	0e 94 00 0b 	call	0x1600	; 0x1600 <LCD_12864_Draw_rectangle>
    3474:	28 e5       	ldi	r18, 0x58	; 88
    3476:	31 e0       	ldi	r19, 0x01	; 1
    3478:	40 e0       	ldi	r20, 0x00	; 0
    347a:	61 e0       	ldi	r22, 0x01	; 1
    347c:	83 e0       	ldi	r24, 0x03	; 3
    347e:	90 e0       	ldi	r25, 0x00	; 0
    3480:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
    3484:	2e e6       	ldi	r18, 0x6E	; 110
    3486:	31 e0       	ldi	r19, 0x01	; 1
    3488:	40 e0       	ldi	r20, 0x00	; 0
    348a:	63 e0       	ldi	r22, 0x03	; 3
    348c:	80 e1       	ldi	r24, 0x10	; 16
    348e:	90 e0       	ldi	r25, 0x00	; 0
    3490:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
    3494:	c8 01       	movw	r24, r16
    3496:	0e 94 25 05 	call	0xa4a	; 0xa4a <LCD_12864_Draw_bitmap>
    349a:	c8 e0       	ldi	r28, 0x08	; 8
    349c:	17 c0       	rjmp	.+46     	; 0x34cc <Print_Download+0x7e>
    349e:	2b e0       	ldi	r18, 0x0B	; 11
    34a0:	30 e0       	ldi	r19, 0x00	; 0
    34a2:	49 e0       	ldi	r20, 0x09	; 9
    34a4:	50 e0       	ldi	r21, 0x00	; 0
    34a6:	65 e2       	ldi	r22, 0x25	; 37
    34a8:	70 e0       	ldi	r23, 0x00	; 0
    34aa:	8c 2f       	mov	r24, r28
    34ac:	90 e0       	ldi	r25, 0x00	; 0
    34ae:	0e 94 43 0b 	call	0x1686	; 0x1686 <LCD_12864_Draw_rectangle_filled>
    34b2:	c8 01       	movw	r24, r16
    34b4:	0e 94 25 05 	call	0xa4a	; 0xa4a <LCD_12864_Draw_bitmap>
    34b8:	2f ef       	ldi	r18, 0xFF	; 255
    34ba:	89 e6       	ldi	r24, 0x69	; 105
    34bc:	98 e1       	ldi	r25, 0x18	; 24
    34be:	21 50       	subi	r18, 0x01	; 1
    34c0:	80 40       	sbci	r24, 0x00	; 0
    34c2:	90 40       	sbci	r25, 0x00	; 0
    34c4:	e1 f7       	brne	.-8      	; 0x34be <Print_Download+0x70>
    34c6:	00 c0       	rjmp	.+0      	; 0x34c8 <Print_Download+0x7a>
    34c8:	00 00       	nop
    34ca:	c5 5f       	subi	r28, 0xF5	; 245
    34cc:	c5 37       	cpi	r28, 0x75	; 117
    34ce:	38 f3       	brcs	.-50     	; 0x349e <Print_Download+0x50>
    34d0:	80 e0       	ldi	r24, 0x00	; 0
    34d2:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
    34d6:	cf 91       	pop	r28
    34d8:	1f 91       	pop	r17
    34da:	0f 91       	pop	r16
    34dc:	08 95       	ret

000034de <DrawCloudsWithRain>:

}
void DrawCloudsWithRain(void)
{
	//облако№1
	LCD_12864_Draw_line(90, 57, 106, 57);
    34de:	29 e3       	ldi	r18, 0x39	; 57
    34e0:	4a e6       	ldi	r20, 0x6A	; 106
    34e2:	69 e3       	ldi	r22, 0x39	; 57
    34e4:	8a e5       	ldi	r24, 0x5A	; 90
    34e6:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_pixel(89, 56);
    34ea:	68 e3       	ldi	r22, 0x38	; 56
    34ec:	89 e5       	ldi	r24, 0x59	; 89
    34ee:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(88, 55);
    34f2:	67 e3       	ldi	r22, 0x37	; 55
    34f4:	88 e5       	ldi	r24, 0x58	; 88
    34f6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(87, 54);
    34fa:	66 e3       	ldi	r22, 0x36	; 54
    34fc:	87 e5       	ldi	r24, 0x57	; 87
    34fe:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(87, 53);
    3502:	65 e3       	ldi	r22, 0x35	; 53
    3504:	87 e5       	ldi	r24, 0x57	; 87
    3506:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(87, 52);
    350a:	64 e3       	ldi	r22, 0x34	; 52
    350c:	87 e5       	ldi	r24, 0x57	; 87
    350e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(88, 51);
    3512:	63 e3       	ldi	r22, 0x33	; 51
    3514:	88 e5       	ldi	r24, 0x58	; 88
    3516:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(89, 50);
    351a:	62 e3       	ldi	r22, 0x32	; 50
    351c:	89 e5       	ldi	r24, 0x59	; 89
    351e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(90, 50);
    3522:	62 e3       	ldi	r22, 0x32	; 50
    3524:	8a e5       	ldi	r24, 0x5A	; 90
    3526:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(91, 50);
    352a:	62 e3       	ldi	r22, 0x32	; 50
    352c:	8b e5       	ldi	r24, 0x5B	; 91
    352e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 50);
    3532:	62 e3       	ldi	r22, 0x32	; 50
    3534:	8c e5       	ldi	r24, 0x5C	; 92
    3536:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(94, 51);
    353a:	63 e3       	ldi	r22, 0x33	; 51
    353c:	8e e5       	ldi	r24, 0x5E	; 94
    353e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(93, 50);
    3542:	62 e3       	ldi	r22, 0x32	; 50
    3544:	8d e5       	ldi	r24, 0x5D	; 93
    3546:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 49);
    354a:	61 e3       	ldi	r22, 0x31	; 49
    354c:	8c e5       	ldi	r24, 0x5C	; 92
    354e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 48);
    3552:	60 e3       	ldi	r22, 0x30	; 48
    3554:	8c e5       	ldi	r24, 0x5C	; 92
    3556:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 47);
    355a:	6f e2       	ldi	r22, 0x2F	; 47
    355c:	8c e5       	ldi	r24, 0x5C	; 92
    355e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(92, 46);
    3562:	6e e2       	ldi	r22, 0x2E	; 46
    3564:	8c e5       	ldi	r24, 0x5C	; 92
    3566:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(93, 45);
    356a:	6d e2       	ldi	r22, 0x2D	; 45
    356c:	8d e5       	ldi	r24, 0x5D	; 93
    356e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(94, 44);
    3572:	6c e2       	ldi	r22, 0x2C	; 44
    3574:	8e e5       	ldi	r24, 0x5E	; 94
    3576:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(95, 44);
    357a:	6c e2       	ldi	r22, 0x2C	; 44
    357c:	8f e5       	ldi	r24, 0x5F	; 95
    357e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(96, 44);
    3582:	6c e2       	ldi	r22, 0x2C	; 44
    3584:	80 e6       	ldi	r24, 0x60	; 96
    3586:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(97, 44);
    358a:	6c e2       	ldi	r22, 0x2C	; 44
    358c:	81 e6       	ldi	r24, 0x61	; 97
    358e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(98, 44);
    3592:	6c e2       	ldi	r22, 0x2C	; 44
    3594:	82 e6       	ldi	r24, 0x62	; 98
    3596:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(99, 44);
    359a:	6c e2       	ldi	r22, 0x2C	; 44
    359c:	83 e6       	ldi	r24, 0x63	; 99
    359e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(100, 44);
    35a2:	6c e2       	ldi	r22, 0x2C	; 44
    35a4:	84 e6       	ldi	r24, 0x64	; 100
    35a6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(101, 45);
    35aa:	6d e2       	ldi	r22, 0x2D	; 45
    35ac:	85 e6       	ldi	r24, 0x65	; 101
    35ae:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 46);
    35b2:	6e e2       	ldi	r22, 0x2E	; 46
    35b4:	86 e6       	ldi	r24, 0x66	; 102
    35b6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 47);
    35ba:	6f e2       	ldi	r22, 0x2F	; 47
    35bc:	86 e6       	ldi	r24, 0x66	; 102
    35be:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 48);
    35c2:	60 e3       	ldi	r22, 0x30	; 48
    35c4:	86 e6       	ldi	r24, 0x66	; 102
    35c6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(101, 49);
    35ca:	61 e3       	ldi	r22, 0x31	; 49
    35cc:	85 e6       	ldi	r24, 0x65	; 101
    35ce:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(102, 48);
    35d2:	60 e3       	ldi	r22, 0x30	; 48
    35d4:	86 e6       	ldi	r24, 0x66	; 102
    35d6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(103, 48);
    35da:	60 e3       	ldi	r22, 0x30	; 48
    35dc:	87 e6       	ldi	r24, 0x67	; 103
    35de:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(104, 48);
    35e2:	60 e3       	ldi	r22, 0x30	; 48
    35e4:	88 e6       	ldi	r24, 0x68	; 104
    35e6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(105, 48);
    35ea:	60 e3       	ldi	r22, 0x30	; 48
    35ec:	89 e6       	ldi	r24, 0x69	; 105
    35ee:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	
	LCD_12864_Draw_pixel(107, 56);
    35f2:	68 e3       	ldi	r22, 0x38	; 56
    35f4:	8b e6       	ldi	r24, 0x6B	; 107
    35f6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(108, 55);
    35fa:	67 e3       	ldi	r22, 0x37	; 55
    35fc:	8c e6       	ldi	r24, 0x6C	; 108
    35fe:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 54);
    3602:	66 e3       	ldi	r22, 0x36	; 54
    3604:	8d e6       	ldi	r24, 0x6D	; 109
    3606:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 53);
    360a:	65 e3       	ldi	r22, 0x35	; 53
    360c:	8d e6       	ldi	r24, 0x6D	; 109
    360e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 52);
    3612:	64 e3       	ldi	r22, 0x34	; 52
    3614:	8d e6       	ldi	r24, 0x6D	; 109
    3616:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(109, 51);
    361a:	63 e3       	ldi	r22, 0x33	; 51
    361c:	8d e6       	ldi	r24, 0x6D	; 109
    361e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(108, 50);
    3622:	62 e3       	ldi	r22, 0x32	; 50
    3624:	8c e6       	ldi	r24, 0x6C	; 108
    3626:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(107, 49);
    362a:	61 e3       	ldi	r22, 0x31	; 49
    362c:	8b e6       	ldi	r24, 0x6B	; 107
    362e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(106, 48);
    3632:	60 e3       	ldi	r22, 0x30	; 48
    3634:	8a e6       	ldi	r24, 0x6A	; 106
    3636:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	//облако№2
	LCD_12864_Draw_line(110, 55, 121, 55);
    363a:	27 e3       	ldi	r18, 0x37	; 55
    363c:	49 e7       	ldi	r20, 0x79	; 121
    363e:	67 e3       	ldi	r22, 0x37	; 55
    3640:	8e e6       	ldi	r24, 0x6E	; 110
    3642:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_pixel(122, 54);
    3646:	66 e3       	ldi	r22, 0x36	; 54
    3648:	8a e7       	ldi	r24, 0x7A	; 122
    364a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(122, 53);
    364e:	65 e3       	ldi	r22, 0x35	; 53
    3650:	8a e7       	ldi	r24, 0x7A	; 122
    3652:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(122, 52);
    3656:	64 e3       	ldi	r22, 0x34	; 52
    3658:	8a e7       	ldi	r24, 0x7A	; 122
    365a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(122, 51);
    365e:	63 e3       	ldi	r22, 0x33	; 51
    3660:	8a e7       	ldi	r24, 0x7A	; 122
    3662:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(121, 50);
    3666:	62 e3       	ldi	r22, 0x32	; 50
    3668:	89 e7       	ldi	r24, 0x79	; 121
    366a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(120, 49);
    366e:	61 e3       	ldi	r22, 0x31	; 49
    3670:	88 e7       	ldi	r24, 0x78	; 120
    3672:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(119, 49);
    3676:	61 e3       	ldi	r22, 0x31	; 49
    3678:	87 e7       	ldi	r24, 0x77	; 119
    367a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(118, 49);
    367e:	61 e3       	ldi	r22, 0x31	; 49
    3680:	86 e7       	ldi	r24, 0x76	; 118
    3682:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(117, 50);
    3686:	62 e3       	ldi	r22, 0x32	; 50
    3688:	85 e7       	ldi	r24, 0x75	; 117
    368a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(118, 48);
    368e:	60 e3       	ldi	r22, 0x30	; 48
    3690:	86 e7       	ldi	r24, 0x76	; 118
    3692:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(118, 47);
    3696:	6f e2       	ldi	r22, 0x2F	; 47
    3698:	86 e7       	ldi	r24, 0x76	; 118
    369a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(117, 46);
    369e:	6e e2       	ldi	r22, 0x2E	; 46
    36a0:	85 e7       	ldi	r24, 0x75	; 117
    36a2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(116, 46);
    36a6:	6e e2       	ldi	r22, 0x2E	; 46
    36a8:	84 e7       	ldi	r24, 0x74	; 116
    36aa:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	
	LCD_12864_Draw_pixel(115, 46);
    36ae:	6e e2       	ldi	r22, 0x2E	; 46
    36b0:	83 e7       	ldi	r24, 0x73	; 115
    36b2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(114, 46);
    36b6:	6e e2       	ldi	r22, 0x2E	; 46
    36b8:	82 e7       	ldi	r24, 0x72	; 114
    36ba:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(113, 47);
    36be:	6f e2       	ldi	r22, 0x2F	; 47
    36c0:	81 e7       	ldi	r24, 0x71	; 113
    36c2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(113, 48);
    36c6:	60 e3       	ldi	r22, 0x30	; 48
    36c8:	81 e7       	ldi	r24, 0x71	; 113
    36ca:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(113, 49);
    36ce:	61 e3       	ldi	r22, 0x31	; 49
    36d0:	81 e7       	ldi	r24, 0x71	; 113
    36d2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(114, 50);
    36d6:	62 e3       	ldi	r22, 0x32	; 50
    36d8:	82 e7       	ldi	r24, 0x72	; 114
    36da:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(112, 49);
    36de:	61 e3       	ldi	r22, 0x31	; 49
    36e0:	80 e7       	ldi	r24, 0x70	; 112
    36e2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(111, 49);
    36e6:	61 e3       	ldi	r22, 0x31	; 49
    36e8:	8f e6       	ldi	r24, 0x6F	; 111
    36ea:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(110, 50);
    36ee:	62 e3       	ldi	r22, 0x32	; 50
    36f0:	8e e6       	ldi	r24, 0x6E	; 110
    36f2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>

	LCD_12864_Draw_line(91, 59, 89, 61);
    36f6:	2d e3       	ldi	r18, 0x3D	; 61
    36f8:	49 e5       	ldi	r20, 0x59	; 89
    36fa:	6b e3       	ldi	r22, 0x3B	; 59
    36fc:	8b e5       	ldi	r24, 0x5B	; 91
    36fe:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(94, 59, 92, 61);
    3702:	2d e3       	ldi	r18, 0x3D	; 61
    3704:	4c e5       	ldi	r20, 0x5C	; 92
    3706:	6b e3       	ldi	r22, 0x3B	; 59
    3708:	8e e5       	ldi	r24, 0x5E	; 94
    370a:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(97, 59, 95, 61);
    370e:	2d e3       	ldi	r18, 0x3D	; 61
    3710:	4f e5       	ldi	r20, 0x5F	; 95
    3712:	6b e3       	ldi	r22, 0x3B	; 59
    3714:	81 e6       	ldi	r24, 0x61	; 97
    3716:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(100, 59, 98, 61);
    371a:	2d e3       	ldi	r18, 0x3D	; 61
    371c:	42 e6       	ldi	r20, 0x62	; 98
    371e:	6b e3       	ldi	r22, 0x3B	; 59
    3720:	84 e6       	ldi	r24, 0x64	; 100
    3722:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(103, 59, 101, 61);
    3726:	2d e3       	ldi	r18, 0x3D	; 61
    3728:	45 e6       	ldi	r20, 0x65	; 101
    372a:	6b e3       	ldi	r22, 0x3B	; 59
    372c:	87 e6       	ldi	r24, 0x67	; 103
    372e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(106, 59, 104, 61);
    3732:	2d e3       	ldi	r18, 0x3D	; 61
    3734:	48 e6       	ldi	r20, 0x68	; 104
    3736:	6b e3       	ldi	r22, 0x3B	; 59
    3738:	8a e6       	ldi	r24, 0x6A	; 106
    373a:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	
	LCD_12864_Draw_line(111, 57, 110, 58);
    373e:	2a e3       	ldi	r18, 0x3A	; 58
    3740:	4e e6       	ldi	r20, 0x6E	; 110
    3742:	69 e3       	ldi	r22, 0x39	; 57
    3744:	8f e6       	ldi	r24, 0x6F	; 111
    3746:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(114, 57, 113, 58);
    374a:	2a e3       	ldi	r18, 0x3A	; 58
    374c:	41 e7       	ldi	r20, 0x71	; 113
    374e:	69 e3       	ldi	r22, 0x39	; 57
    3750:	82 e7       	ldi	r24, 0x72	; 114
    3752:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(117, 57, 116, 58);
    3756:	2a e3       	ldi	r18, 0x3A	; 58
    3758:	44 e7       	ldi	r20, 0x74	; 116
    375a:	69 e3       	ldi	r22, 0x39	; 57
    375c:	85 e7       	ldi	r24, 0x75	; 117
    375e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(120, 57, 119, 58);
    3762:	2a e3       	ldi	r18, 0x3A	; 58
    3764:	47 e7       	ldi	r20, 0x77	; 119
    3766:	69 e3       	ldi	r22, 0x39	; 57
    3768:	88 e7       	ldi	r24, 0x78	; 120
    376a:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
    376e:	08 95       	ret

00003770 <DrawWeatherVane>:
}
void DrawWeatherVane(void)
{
	LCD_12864_Draw_circle(11, 52, 9);
    3770:	49 e0       	ldi	r20, 0x09	; 9
    3772:	64 e3       	ldi	r22, 0x34	; 52
    3774:	8b e0       	ldi	r24, 0x0B	; 11
    3776:	0e 94 82 0b 	call	0x1704	; 0x1704 <LCD_12864_Draw_circle>
	//---------N-----------------
	LCD_12864_Clean_pixel(11, 44);
    377a:	6c e2       	ldi	r22, 0x2C	; 44
    377c:	8b e0       	ldi	r24, 0x0B	; 11
    377e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(10, 44);
    3782:	6c e2       	ldi	r22, 0x2C	; 44
    3784:	8a e0       	ldi	r24, 0x0A	; 10
    3786:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(9, 44);
    378a:	6c e2       	ldi	r22, 0x2C	; 44
    378c:	89 e0       	ldi	r24, 0x09	; 9
    378e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(8, 44);
    3792:	6c e2       	ldi	r22, 0x2C	; 44
    3794:	88 e0       	ldi	r24, 0x08	; 8
    3796:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(12, 44);
    379a:	6c e2       	ldi	r22, 0x2C	; 44
    379c:	8c e0       	ldi	r24, 0x0C	; 12
    379e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(13, 44);
    37a2:	6c e2       	ldi	r22, 0x2C	; 44
    37a4:	8d e0       	ldi	r24, 0x0D	; 13
    37a6:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(14, 44);
    37aa:	6c e2       	ldi	r22, 0x2C	; 44
    37ac:	8e e0       	ldi	r24, 0x0E	; 14
    37ae:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(9, 43);
    37b2:	6b e2       	ldi	r22, 0x2B	; 43
    37b4:	89 e0       	ldi	r24, 0x09	; 9
    37b6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 44);
    37ba:	6c e2       	ldi	r22, 0x2C	; 44
    37bc:	89 e0       	ldi	r24, 0x09	; 9
    37be:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 45);
    37c2:	6d e2       	ldi	r22, 0x2D	; 45
    37c4:	89 e0       	ldi	r24, 0x09	; 9
    37c6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 42);
    37ca:	6a e2       	ldi	r22, 0x2A	; 42
    37cc:	89 e0       	ldi	r24, 0x09	; 9
    37ce:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 41);
    37d2:	69 e2       	ldi	r22, 0x29	; 41
    37d4:	89 e0       	ldi	r24, 0x09	; 9
    37d6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 42);
    37da:	6a e2       	ldi	r22, 0x2A	; 42
    37dc:	8a e0       	ldi	r24, 0x0A	; 10
    37de:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 43);
    37e2:	6b e2       	ldi	r22, 0x2B	; 43
    37e4:	8b e0       	ldi	r24, 0x0B	; 11
    37e6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 44);
    37ea:	6c e2       	ldi	r22, 0x2C	; 44
    37ec:	8c e0       	ldi	r24, 0x0C	; 12
    37ee:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 43);
    37f2:	6b e2       	ldi	r22, 0x2B	; 43
    37f4:	8d e0       	ldi	r24, 0x0D	; 13
    37f6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 44);
    37fa:	6c e2       	ldi	r22, 0x2C	; 44
    37fc:	8d e0       	ldi	r24, 0x0D	; 13
    37fe:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 45);
    3802:	6d e2       	ldi	r22, 0x2D	; 45
    3804:	8d e0       	ldi	r24, 0x0D	; 13
    3806:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 42);
    380a:	6a e2       	ldi	r22, 0x2A	; 42
    380c:	8d e0       	ldi	r24, 0x0D	; 13
    380e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 41);
    3812:	69 e2       	ldi	r22, 0x29	; 41
    3814:	8d e0       	ldi	r24, 0x0D	; 13
    3816:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	//---------S-----------------
	LCD_12864_Clean_pixel(11, 61);
    381a:	6d e3       	ldi	r22, 0x3D	; 61
    381c:	8b e0       	ldi	r24, 0x0B	; 11
    381e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(10, 61);
    3822:	6d e3       	ldi	r22, 0x3D	; 61
    3824:	8a e0       	ldi	r24, 0x0A	; 10
    3826:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(9, 61);
    382a:	6d e3       	ldi	r22, 0x3D	; 61
    382c:	89 e0       	ldi	r24, 0x09	; 9
    382e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(8, 61);
    3832:	6d e3       	ldi	r22, 0x3D	; 61
    3834:	88 e0       	ldi	r24, 0x08	; 8
    3836:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(12, 61);
    383a:	6d e3       	ldi	r22, 0x3D	; 61
    383c:	8c e0       	ldi	r24, 0x0C	; 12
    383e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(13, 61);
    3842:	6d e3       	ldi	r22, 0x3D	; 61
    3844:	8d e0       	ldi	r24, 0x0D	; 13
    3846:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(14, 61);
    384a:	6d e3       	ldi	r22, 0x3D	; 61
    384c:	8e e0       	ldi	r24, 0x0E	; 14
    384e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(9, 60);
    3852:	6c e3       	ldi	r22, 0x3C	; 60
    3854:	89 e0       	ldi	r24, 0x09	; 9
    3856:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(9, 63);
    385a:	6f e3       	ldi	r22, 0x3F	; 63
    385c:	89 e0       	ldi	r24, 0x09	; 9
    385e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 61);
    3862:	6d e3       	ldi	r22, 0x3D	; 61
    3864:	8a e0       	ldi	r24, 0x0A	; 10
    3866:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 59);
    386a:	6b e3       	ldi	r22, 0x3B	; 59
    386c:	8a e0       	ldi	r24, 0x0A	; 10
    386e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(10, 63);
    3872:	6f e3       	ldi	r22, 0x3F	; 63
    3874:	8a e0       	ldi	r24, 0x0A	; 10
    3876:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 61);
    387a:	6d e3       	ldi	r22, 0x3D	; 61
    387c:	8b e0       	ldi	r24, 0x0B	; 11
    387e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 59);
    3882:	6b e3       	ldi	r22, 0x3B	; 59
    3884:	8b e0       	ldi	r24, 0x0B	; 11
    3886:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(11, 63);
    388a:	6f e3       	ldi	r22, 0x3F	; 63
    388c:	8b e0       	ldi	r24, 0x0B	; 11
    388e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 61);
    3892:	6d e3       	ldi	r22, 0x3D	; 61
    3894:	8c e0       	ldi	r24, 0x0C	; 12
    3896:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 59);
    389a:	6b e3       	ldi	r22, 0x3B	; 59
    389c:	8c e0       	ldi	r24, 0x0C	; 12
    389e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(12, 63);
    38a2:	6f e3       	ldi	r22, 0x3F	; 63
    38a4:	8c e0       	ldi	r24, 0x0C	; 12
    38a6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 62);
    38aa:	6e e3       	ldi	r22, 0x3E	; 62
    38ac:	8d e0       	ldi	r24, 0x0D	; 13
    38ae:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(13, 59);
    38b2:	6b e3       	ldi	r22, 0x3B	; 59
    38b4:	8d e0       	ldi	r24, 0x0D	; 13
    38b6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	//---------E-----------------
	LCD_12864_Clean_pixel(20, 52);
    38ba:	64 e3       	ldi	r22, 0x34	; 52
    38bc:	84 e1       	ldi	r24, 0x14	; 20
    38be:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(20, 53);
    38c2:	65 e3       	ldi	r22, 0x35	; 53
    38c4:	84 e1       	ldi	r24, 0x14	; 20
    38c6:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(20, 54);
    38ca:	66 e3       	ldi	r22, 0x36	; 54
    38cc:	84 e1       	ldi	r24, 0x14	; 20
    38ce:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(19, 55);
    38d2:	67 e3       	ldi	r22, 0x37	; 55
    38d4:	83 e1       	ldi	r24, 0x13	; 19
    38d6:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(19, 48);
    38da:	60 e3       	ldi	r22, 0x30	; 48
    38dc:	83 e1       	ldi	r24, 0x13	; 19
    38de:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Clean_pixel(20, 51);
    38e2:	63 e3       	ldi	r22, 0x33	; 51
    38e4:	84 e1       	ldi	r24, 0x14	; 20
    38e6:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(20, 50);
    38ea:	62 e3       	ldi	r22, 0x32	; 50
    38ec:	84 e1       	ldi	r24, 0x14	; 20
    38ee:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(20, 52);
    38f2:	64 e3       	ldi	r22, 0x34	; 52
    38f4:	84 e1       	ldi	r24, 0x14	; 20
    38f6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(20, 50);
    38fa:	62 e3       	ldi	r22, 0x32	; 50
    38fc:	84 e1       	ldi	r24, 0x14	; 20
    38fe:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(20, 54);
    3902:	66 e3       	ldi	r22, 0x36	; 54
    3904:	84 e1       	ldi	r24, 0x14	; 20
    3906:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(21, 52);
    390a:	64 e3       	ldi	r22, 0x34	; 52
    390c:	85 e1       	ldi	r24, 0x15	; 21
    390e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(21, 50);
    3912:	62 e3       	ldi	r22, 0x32	; 50
    3914:	85 e1       	ldi	r24, 0x15	; 21
    3916:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(21, 54);
    391a:	66 e3       	ldi	r22, 0x36	; 54
    391c:	85 e1       	ldi	r24, 0x15	; 21
    391e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(22, 52);
    3922:	64 e3       	ldi	r22, 0x34	; 52
    3924:	86 e1       	ldi	r24, 0x16	; 22
    3926:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(22, 50);
    392a:	62 e3       	ldi	r22, 0x32	; 50
    392c:	86 e1       	ldi	r24, 0x16	; 22
    392e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(22, 54);
    3932:	66 e3       	ldi	r22, 0x36	; 54
    3934:	86 e1       	ldi	r24, 0x16	; 22
    3936:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(19, 52);
    393a:	64 e3       	ldi	r22, 0x34	; 52
    393c:	83 e1       	ldi	r24, 0x13	; 19
    393e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(19, 50);
    3942:	62 e3       	ldi	r22, 0x32	; 50
    3944:	83 e1       	ldi	r24, 0x13	; 19
    3946:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(19, 54);
    394a:	66 e3       	ldi	r22, 0x36	; 54
    394c:	83 e1       	ldi	r24, 0x13	; 19
    394e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 52);
    3952:	64 e3       	ldi	r22, 0x34	; 52
    3954:	82 e1       	ldi	r24, 0x12	; 18
    3956:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 53);
    395a:	65 e3       	ldi	r22, 0x35	; 53
    395c:	82 e1       	ldi	r24, 0x12	; 18
    395e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 54);
    3962:	66 e3       	ldi	r22, 0x36	; 54
    3964:	82 e1       	ldi	r24, 0x12	; 18
    3966:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 51);
    396a:	63 e3       	ldi	r22, 0x33	; 51
    396c:	82 e1       	ldi	r24, 0x12	; 18
    396e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(18, 50);
    3972:	62 e3       	ldi	r22, 0x32	; 50
    3974:	82 e1       	ldi	r24, 0x12	; 18
    3976:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	//---------W-----------------
	LCD_12864_Clean_pixel(2, 52);
    397a:	64 e3       	ldi	r22, 0x34	; 52
    397c:	82 e0       	ldi	r24, 0x02	; 2
    397e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(2, 53);
    3982:	65 e3       	ldi	r22, 0x35	; 53
    3984:	82 e0       	ldi	r24, 0x02	; 2
    3986:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(2, 54);
    398a:	66 e3       	ldi	r22, 0x36	; 54
    398c:	82 e0       	ldi	r24, 0x02	; 2
    398e:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(3, 55);
    3992:	67 e3       	ldi	r22, 0x37	; 55
    3994:	83 e0       	ldi	r24, 0x03	; 3
    3996:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(3, 48);
    399a:	60 e3       	ldi	r22, 0x30	; 48
    399c:	83 e0       	ldi	r24, 0x03	; 3
    399e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Clean_pixel(2, 51);
    39a2:	63 e3       	ldi	r22, 0x33	; 51
    39a4:	82 e0       	ldi	r24, 0x02	; 2
    39a6:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Clean_pixel(2, 50);
    39aa:	62 e3       	ldi	r22, 0x32	; 50
    39ac:	82 e0       	ldi	r24, 0x02	; 2
    39ae:	0e 94 24 04 	call	0x848	; 0x848 <LCD_12864_Clean_pixel>
	LCD_12864_Draw_pixel(2, 52);
    39b2:	64 e3       	ldi	r22, 0x34	; 52
    39b4:	82 e0       	ldi	r24, 0x02	; 2
    39b6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(2, 53);
    39ba:	65 e3       	ldi	r22, 0x35	; 53
    39bc:	82 e0       	ldi	r24, 0x02	; 2
    39be:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(3, 54);
    39c2:	66 e3       	ldi	r22, 0x36	; 54
    39c4:	83 e0       	ldi	r24, 0x03	; 3
    39c6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 52);
    39ca:	64 e3       	ldi	r22, 0x34	; 52
    39cc:	84 e0       	ldi	r24, 0x04	; 4
    39ce:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 53);
    39d2:	65 e3       	ldi	r22, 0x35	; 53
    39d4:	84 e0       	ldi	r24, 0x04	; 4
    39d6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 51);
    39da:	63 e3       	ldi	r22, 0x33	; 51
    39dc:	84 e0       	ldi	r24, 0x04	; 4
    39de:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(4, 50);
    39e2:	62 e3       	ldi	r22, 0x32	; 50
    39e4:	84 e0       	ldi	r24, 0x04	; 4
    39e6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(1, 54);
    39ea:	66 e3       	ldi	r22, 0x36	; 54
    39ec:	81 e0       	ldi	r24, 0x01	; 1
    39ee:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 52);
    39f2:	64 e3       	ldi	r22, 0x34	; 52
    39f4:	80 e0       	ldi	r24, 0x00	; 0
    39f6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 53);
    39fa:	65 e3       	ldi	r22, 0x35	; 53
    39fc:	80 e0       	ldi	r24, 0x00	; 0
    39fe:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 51);
    3a02:	63 e3       	ldi	r22, 0x33	; 51
    3a04:	80 e0       	ldi	r24, 0x00	; 0
    3a06:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(0, 50);
    3a0a:	62 e3       	ldi	r22, 0x32	; 50
    3a0c:	80 e0       	ldi	r24, 0x00	; 0
    3a0e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	//---------Стрелка-----------------
	//--точка в центре---
	LCD_12864_Draw_pixel(11, 52);
    3a12:	64 e3       	ldi	r22, 0x34	; 52
    3a14:	8b e0       	ldi	r24, 0x0B	; 11
    3a16:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	if (!strcmp(wind_direction, "N"))
    3a1a:	6f e7       	ldi	r22, 0x7F	; 127
    3a1c:	71 e0       	ldi	r23, 0x01	; 1
    3a1e:	8b e4       	ldi	r24, 0x4B	; 75
    3a20:	92 e0       	ldi	r25, 0x02	; 2
    3a22:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3a26:	89 2b       	or	r24, r25
    3a28:	09 f0       	breq	.+2      	; 0x3a2c <DrawWeatherVane+0x2bc>
    3a2a:	41 c0       	rjmp	.+130    	; 0x3aae <DrawWeatherVane+0x33e>
	{
		LCD_12864_Draw_pixel(10, 53);
    3a2c:	65 e3       	ldi	r22, 0x35	; 53
    3a2e:	8a e0       	ldi	r24, 0x0A	; 10
    3a30:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 54);
    3a34:	66 e3       	ldi	r22, 0x36	; 54
    3a36:	8a e0       	ldi	r24, 0x0A	; 10
    3a38:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3a3c:	65 e3       	ldi	r22, 0x35	; 53
    3a3e:	8c e0       	ldi	r24, 0x0C	; 12
    3a40:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 54);
    3a44:	66 e3       	ldi	r22, 0x36	; 54
    3a46:	8c e0       	ldi	r24, 0x0C	; 12
    3a48:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 51);
    3a4c:	63 e3       	ldi	r22, 0x33	; 51
    3a4e:	8b e0       	ldi	r24, 0x0B	; 11
    3a50:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 50);
    3a54:	62 e3       	ldi	r22, 0x32	; 50
    3a56:	8b e0       	ldi	r24, 0x0B	; 11
    3a58:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 49);
    3a5c:	61 e3       	ldi	r22, 0x31	; 49
    3a5e:	8b e0       	ldi	r24, 0x0B	; 11
    3a60:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 48);
    3a64:	60 e3       	ldi	r22, 0x30	; 48
    3a66:	8b e0       	ldi	r24, 0x0B	; 11
    3a68:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 47);
    3a6c:	6f e2       	ldi	r22, 0x2F	; 47
    3a6e:	8b e0       	ldi	r24, 0x0B	; 11
    3a70:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 46);
    3a74:	6e e2       	ldi	r22, 0x2E	; 46
    3a76:	8b e0       	ldi	r24, 0x0B	; 11
    3a78:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 47);
    3a7c:	6f e2       	ldi	r22, 0x2F	; 47
    3a7e:	8a e0       	ldi	r24, 0x0A	; 10
    3a80:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 47);
    3a84:	6f e2       	ldi	r22, 0x2F	; 47
    3a86:	8c e0       	ldi	r24, 0x0C	; 12
    3a88:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 48);
    3a8c:	60 e3       	ldi	r22, 0x30	; 48
    3a8e:	8a e0       	ldi	r24, 0x0A	; 10
    3a90:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 48);
    3a94:	60 e3       	ldi	r22, 0x30	; 48
    3a96:	89 e0       	ldi	r24, 0x09	; 9
    3a98:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 48);
    3a9c:	60 e3       	ldi	r22, 0x30	; 48
    3a9e:	8c e0       	ldi	r24, 0x0C	; 12
    3aa0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 48);
    3aa4:	60 e3       	ldi	r22, 0x30	; 48
    3aa6:	8d e0       	ldi	r24, 0x0D	; 13
    3aa8:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3aac:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "S"))
    3aae:	61 e8       	ldi	r22, 0x81	; 129
    3ab0:	71 e0       	ldi	r23, 0x01	; 1
    3ab2:	8b e4       	ldi	r24, 0x4B	; 75
    3ab4:	92 e0       	ldi	r25, 0x02	; 2
    3ab6:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3aba:	89 2b       	or	r24, r25
    3abc:	09 f0       	breq	.+2      	; 0x3ac0 <DrawWeatherVane+0x350>
    3abe:	41 c0       	rjmp	.+130    	; 0x3b42 <DrawWeatherVane+0x3d2>
	{
		LCD_12864_Draw_pixel(10, 50);
    3ac0:	62 e3       	ldi	r22, 0x32	; 50
    3ac2:	8a e0       	ldi	r24, 0x0A	; 10
    3ac4:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 51);
    3ac8:	63 e3       	ldi	r22, 0x33	; 51
    3aca:	8a e0       	ldi	r24, 0x0A	; 10
    3acc:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 50);
    3ad0:	62 e3       	ldi	r22, 0x32	; 50
    3ad2:	8c e0       	ldi	r24, 0x0C	; 12
    3ad4:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 51);
    3ad8:	63 e3       	ldi	r22, 0x33	; 51
    3ada:	8c e0       	ldi	r24, 0x0C	; 12
    3adc:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 53);
    3ae0:	65 e3       	ldi	r22, 0x35	; 53
    3ae2:	8b e0       	ldi	r24, 0x0B	; 11
    3ae4:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 54);
    3ae8:	66 e3       	ldi	r22, 0x36	; 54
    3aea:	8b e0       	ldi	r24, 0x0B	; 11
    3aec:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 55);
    3af0:	67 e3       	ldi	r22, 0x37	; 55
    3af2:	8b e0       	ldi	r24, 0x0B	; 11
    3af4:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 56);
    3af8:	68 e3       	ldi	r22, 0x38	; 56
    3afa:	8b e0       	ldi	r24, 0x0B	; 11
    3afc:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 57);
    3b00:	69 e3       	ldi	r22, 0x39	; 57
    3b02:	8b e0       	ldi	r24, 0x0B	; 11
    3b04:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 58);
    3b08:	6a e3       	ldi	r22, 0x3A	; 58
    3b0a:	8b e0       	ldi	r24, 0x0B	; 11
    3b0c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 57);
    3b10:	69 e3       	ldi	r22, 0x39	; 57
    3b12:	8a e0       	ldi	r24, 0x0A	; 10
    3b14:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 57);
    3b18:	69 e3       	ldi	r22, 0x39	; 57
    3b1a:	8c e0       	ldi	r24, 0x0C	; 12
    3b1c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 56);
    3b20:	68 e3       	ldi	r22, 0x38	; 56
    3b22:	8a e0       	ldi	r24, 0x0A	; 10
    3b24:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 56);
    3b28:	68 e3       	ldi	r22, 0x38	; 56
    3b2a:	89 e0       	ldi	r24, 0x09	; 9
    3b2c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 56);
    3b30:	68 e3       	ldi	r22, 0x38	; 56
    3b32:	8c e0       	ldi	r24, 0x0C	; 12
    3b34:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 56);
    3b38:	68 e3       	ldi	r22, 0x38	; 56
    3b3a:	8d e0       	ldi	r24, 0x0D	; 13
    3b3c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3b40:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "E"))
    3b42:	65 e8       	ldi	r22, 0x85	; 133
    3b44:	71 e0       	ldi	r23, 0x01	; 1
    3b46:	8b e4       	ldi	r24, 0x4B	; 75
    3b48:	92 e0       	ldi	r25, 0x02	; 2
    3b4a:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3b4e:	89 2b       	or	r24, r25
    3b50:	09 f0       	breq	.+2      	; 0x3b54 <DrawWeatherVane+0x3e4>
    3b52:	41 c0       	rjmp	.+130    	; 0x3bd6 <DrawWeatherVane+0x466>
	{
		LCD_12864_Draw_pixel(9, 51);
    3b54:	63 e3       	ldi	r22, 0x33	; 51
    3b56:	89 e0       	ldi	r24, 0x09	; 9
    3b58:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 51);
    3b5c:	63 e3       	ldi	r22, 0x33	; 51
    3b5e:	8a e0       	ldi	r24, 0x0A	; 10
    3b60:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 53);
    3b64:	65 e3       	ldi	r22, 0x35	; 53
    3b66:	89 e0       	ldi	r24, 0x09	; 9
    3b68:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 53);
    3b6c:	65 e3       	ldi	r22, 0x35	; 53
    3b6e:	8a e0       	ldi	r24, 0x0A	; 10
    3b70:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 52);
    3b74:	64 e3       	ldi	r22, 0x34	; 52
    3b76:	8c e0       	ldi	r24, 0x0C	; 12
    3b78:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 52);
    3b7c:	64 e3       	ldi	r22, 0x34	; 52
    3b7e:	8d e0       	ldi	r24, 0x0D	; 13
    3b80:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 52);
    3b84:	64 e3       	ldi	r22, 0x34	; 52
    3b86:	8e e0       	ldi	r24, 0x0E	; 14
    3b88:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 52);
    3b8c:	64 e3       	ldi	r22, 0x34	; 52
    3b8e:	8f e0       	ldi	r24, 0x0F	; 15
    3b90:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 52);
    3b94:	64 e3       	ldi	r22, 0x34	; 52
    3b96:	80 e1       	ldi	r24, 0x10	; 16
    3b98:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(17, 52);
    3b9c:	64 e3       	ldi	r22, 0x34	; 52
    3b9e:	81 e1       	ldi	r24, 0x11	; 17
    3ba0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 51);
    3ba4:	63 e3       	ldi	r22, 0x33	; 51
    3ba6:	80 e1       	ldi	r24, 0x10	; 16
    3ba8:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 53);
    3bac:	65 e3       	ldi	r22, 0x35	; 53
    3bae:	80 e1       	ldi	r24, 0x10	; 16
    3bb0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 53);
    3bb4:	65 e3       	ldi	r22, 0x35	; 53
    3bb6:	8f e0       	ldi	r24, 0x0F	; 15
    3bb8:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 54);
    3bbc:	66 e3       	ldi	r22, 0x36	; 54
    3bbe:	8f e0       	ldi	r24, 0x0F	; 15
    3bc0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 51);
    3bc4:	63 e3       	ldi	r22, 0x33	; 51
    3bc6:	8f e0       	ldi	r24, 0x0F	; 15
    3bc8:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 50);
    3bcc:	62 e3       	ldi	r22, 0x32	; 50
    3bce:	8f e0       	ldi	r24, 0x0F	; 15
    3bd0:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3bd4:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "W"))
    3bd6:	69 e8       	ldi	r22, 0x89	; 137
    3bd8:	71 e0       	ldi	r23, 0x01	; 1
    3bda:	8b e4       	ldi	r24, 0x4B	; 75
    3bdc:	92 e0       	ldi	r25, 0x02	; 2
    3bde:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3be2:	89 2b       	or	r24, r25
    3be4:	09 f0       	breq	.+2      	; 0x3be8 <DrawWeatherVane+0x478>
    3be6:	41 c0       	rjmp	.+130    	; 0x3c6a <DrawWeatherVane+0x4fa>
	{
		LCD_12864_Draw_pixel(13, 51);
    3be8:	63 e3       	ldi	r22, 0x33	; 51
    3bea:	8d e0       	ldi	r24, 0x0D	; 13
    3bec:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 51);
    3bf0:	63 e3       	ldi	r22, 0x33	; 51
    3bf2:	8c e0       	ldi	r24, 0x0C	; 12
    3bf4:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 53);
    3bf8:	65 e3       	ldi	r22, 0x35	; 53
    3bfa:	8d e0       	ldi	r24, 0x0D	; 13
    3bfc:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3c00:	65 e3       	ldi	r22, 0x35	; 53
    3c02:	8c e0       	ldi	r24, 0x0C	; 12
    3c04:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 52);
    3c08:	64 e3       	ldi	r22, 0x34	; 52
    3c0a:	8a e0       	ldi	r24, 0x0A	; 10
    3c0c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 52);
    3c10:	64 e3       	ldi	r22, 0x34	; 52
    3c12:	89 e0       	ldi	r24, 0x09	; 9
    3c14:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 52);
    3c18:	64 e3       	ldi	r22, 0x34	; 52
    3c1a:	88 e0       	ldi	r24, 0x08	; 8
    3c1c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 52);
    3c20:	64 e3       	ldi	r22, 0x34	; 52
    3c22:	87 e0       	ldi	r24, 0x07	; 7
    3c24:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 52);
    3c28:	64 e3       	ldi	r22, 0x34	; 52
    3c2a:	86 e0       	ldi	r24, 0x06	; 6
    3c2c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(5, 52);
    3c30:	64 e3       	ldi	r22, 0x34	; 52
    3c32:	85 e0       	ldi	r24, 0x05	; 5
    3c34:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 51);
    3c38:	63 e3       	ldi	r22, 0x33	; 51
    3c3a:	86 e0       	ldi	r24, 0x06	; 6
    3c3c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 53);
    3c40:	65 e3       	ldi	r22, 0x35	; 53
    3c42:	86 e0       	ldi	r24, 0x06	; 6
    3c44:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 53);
    3c48:	65 e3       	ldi	r22, 0x35	; 53
    3c4a:	87 e0       	ldi	r24, 0x07	; 7
    3c4c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 54);
    3c50:	66 e3       	ldi	r22, 0x36	; 54
    3c52:	87 e0       	ldi	r24, 0x07	; 7
    3c54:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 51);
    3c58:	63 e3       	ldi	r22, 0x33	; 51
    3c5a:	87 e0       	ldi	r24, 0x07	; 7
    3c5c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 50);
    3c60:	62 e3       	ldi	r22, 0x32	; 50
    3c62:	87 e0       	ldi	r24, 0x07	; 7
    3c64:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3c68:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "N-E"))
    3c6a:	63 e8       	ldi	r22, 0x83	; 131
    3c6c:	71 e0       	ldi	r23, 0x01	; 1
    3c6e:	8b e4       	ldi	r24, 0x4B	; 75
    3c70:	92 e0       	ldi	r25, 0x02	; 2
    3c72:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3c76:	89 2b       	or	r24, r25
    3c78:	b9 f5       	brne	.+110    	; 0x3ce8 <DrawWeatherVane+0x578>
	{
		LCD_12864_Draw_pixel(10, 51);
    3c7a:	63 e3       	ldi	r22, 0x33	; 51
    3c7c:	8a e0       	ldi	r24, 0x0A	; 10
    3c7e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 52);
    3c82:	64 e3       	ldi	r22, 0x34	; 52
    3c84:	89 e0       	ldi	r24, 0x09	; 9
    3c86:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3c8a:	65 e3       	ldi	r22, 0x35	; 53
    3c8c:	8c e0       	ldi	r24, 0x0C	; 12
    3c8e:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 54);
    3c92:	66 e3       	ldi	r22, 0x36	; 54
    3c94:	8b e0       	ldi	r24, 0x0B	; 11
    3c96:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 16, 47);
    3c9a:	2f e2       	ldi	r18, 0x2F	; 47
    3c9c:	40 e1       	ldi	r20, 0x10	; 16
    3c9e:	64 e3       	ldi	r22, 0x34	; 52
    3ca0:	8b e0       	ldi	r24, 0x0B	; 11
    3ca2:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(15, 47);
    3ca6:	6f e2       	ldi	r22, 0x2F	; 47
    3ca8:	8f e0       	ldi	r24, 0x0F	; 15
    3caa:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 47);
    3cae:	6f e2       	ldi	r22, 0x2F	; 47
    3cb0:	8e e0       	ldi	r24, 0x0E	; 14
    3cb2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 47);
    3cb6:	6f e2       	ldi	r22, 0x2F	; 47
    3cb8:	8d e0       	ldi	r24, 0x0D	; 13
    3cba:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 48);
    3cbe:	60 e3       	ldi	r22, 0x30	; 48
    3cc0:	8e e0       	ldi	r24, 0x0E	; 14
    3cc2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 48);
    3cc6:	60 e3       	ldi	r22, 0x30	; 48
    3cc8:	80 e1       	ldi	r24, 0x10	; 16
    3cca:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 49);
    3cce:	61 e3       	ldi	r22, 0x31	; 49
    3cd0:	80 e1       	ldi	r24, 0x10	; 16
    3cd2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 49);
    3cd6:	61 e3       	ldi	r22, 0x31	; 49
    3cd8:	8f e0       	ldi	r24, 0x0F	; 15
    3cda:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 50);
    3cde:	62 e3       	ldi	r22, 0x32	; 50
    3ce0:	80 e1       	ldi	r24, 0x10	; 16
    3ce2:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3ce6:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "N-W"))
    3ce8:	67 e8       	ldi	r22, 0x87	; 135
    3cea:	71 e0       	ldi	r23, 0x01	; 1
    3cec:	8b e4       	ldi	r24, 0x4B	; 75
    3cee:	92 e0       	ldi	r25, 0x02	; 2
    3cf0:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3cf4:	89 2b       	or	r24, r25
    3cf6:	b9 f5       	brne	.+110    	; 0x3d66 <DrawWeatherVane+0x5f6>
	{
		LCD_12864_Draw_pixel(12, 51);
    3cf8:	63 e3       	ldi	r22, 0x33	; 51
    3cfa:	8c e0       	ldi	r24, 0x0C	; 12
    3cfc:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 52);
    3d00:	64 e3       	ldi	r22, 0x34	; 52
    3d02:	8d e0       	ldi	r24, 0x0D	; 13
    3d04:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 53);
    3d08:	65 e3       	ldi	r22, 0x35	; 53
    3d0a:	8a e0       	ldi	r24, 0x0A	; 10
    3d0c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(11, 54);
    3d10:	66 e3       	ldi	r22, 0x36	; 54
    3d12:	8b e0       	ldi	r24, 0x0B	; 11
    3d14:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 6, 47);
    3d18:	2f e2       	ldi	r18, 0x2F	; 47
    3d1a:	46 e0       	ldi	r20, 0x06	; 6
    3d1c:	64 e3       	ldi	r22, 0x34	; 52
    3d1e:	8b e0       	ldi	r24, 0x0B	; 11
    3d20:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(7, 47);
    3d24:	6f e2       	ldi	r22, 0x2F	; 47
    3d26:	87 e0       	ldi	r24, 0x07	; 7
    3d28:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 47);
    3d2c:	6f e2       	ldi	r22, 0x2F	; 47
    3d2e:	88 e0       	ldi	r24, 0x08	; 8
    3d30:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 47);
    3d34:	6f e2       	ldi	r22, 0x2F	; 47
    3d36:	89 e0       	ldi	r24, 0x09	; 9
    3d38:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 48);
    3d3c:	60 e3       	ldi	r22, 0x30	; 48
    3d3e:	88 e0       	ldi	r24, 0x08	; 8
    3d40:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 48);
    3d44:	60 e3       	ldi	r22, 0x30	; 48
    3d46:	86 e0       	ldi	r24, 0x06	; 6
    3d48:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 49);
    3d4c:	61 e3       	ldi	r22, 0x31	; 49
    3d4e:	86 e0       	ldi	r24, 0x06	; 6
    3d50:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 50);
    3d54:	62 e3       	ldi	r22, 0x32	; 50
    3d56:	86 e0       	ldi	r24, 0x06	; 6
    3d58:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 49);
    3d5c:	61 e3       	ldi	r22, 0x31	; 49
    3d5e:	87 e0       	ldi	r24, 0x07	; 7
    3d60:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3d64:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "S-E"))
    3d66:	6b e8       	ldi	r22, 0x8B	; 139
    3d68:	71 e0       	ldi	r23, 0x01	; 1
    3d6a:	8b e4       	ldi	r24, 0x4B	; 75
    3d6c:	92 e0       	ldi	r25, 0x02	; 2
    3d6e:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3d72:	89 2b       	or	r24, r25
    3d74:	b9 f5       	brne	.+110    	; 0x3de4 <DrawWeatherVane+0x674>
	{
		LCD_12864_Draw_pixel(11, 50);
    3d76:	62 e3       	ldi	r22, 0x32	; 50
    3d78:	8b e0       	ldi	r24, 0x0B	; 11
    3d7a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 51);
    3d7e:	63 e3       	ldi	r22, 0x33	; 51
    3d80:	8c e0       	ldi	r24, 0x0C	; 12
    3d82:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 53);
    3d86:	65 e3       	ldi	r22, 0x35	; 53
    3d88:	8a e0       	ldi	r24, 0x0A	; 10
    3d8a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 52);
    3d8e:	64 e3       	ldi	r22, 0x34	; 52
    3d90:	89 e0       	ldi	r24, 0x09	; 9
    3d92:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 16, 57);
    3d96:	29 e3       	ldi	r18, 0x39	; 57
    3d98:	40 e1       	ldi	r20, 0x10	; 16
    3d9a:	64 e3       	ldi	r22, 0x34	; 52
    3d9c:	8b e0       	ldi	r24, 0x0B	; 11
    3d9e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(16, 56);
    3da2:	68 e3       	ldi	r22, 0x38	; 56
    3da4:	80 e1       	ldi	r24, 0x10	; 16
    3da6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 57);
    3daa:	69 e3       	ldi	r22, 0x39	; 57
    3dac:	8f e0       	ldi	r24, 0x0F	; 15
    3dae:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(15, 55);
    3db2:	67 e3       	ldi	r22, 0x37	; 55
    3db4:	8f e0       	ldi	r24, 0x0F	; 15
    3db6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 55);
    3dba:	67 e3       	ldi	r22, 0x37	; 55
    3dbc:	80 e1       	ldi	r24, 0x10	; 16
    3dbe:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(16, 54);
    3dc2:	66 e3       	ldi	r22, 0x36	; 54
    3dc4:	80 e1       	ldi	r24, 0x10	; 16
    3dc6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 56);
    3dca:	68 e3       	ldi	r22, 0x38	; 56
    3dcc:	8e e0       	ldi	r24, 0x0E	; 14
    3dce:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(14, 57);
    3dd2:	69 e3       	ldi	r22, 0x39	; 57
    3dd4:	8e e0       	ldi	r24, 0x0E	; 14
    3dd6:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 57);
    3dda:	69 e3       	ldi	r22, 0x39	; 57
    3ddc:	8d e0       	ldi	r24, 0x0D	; 13
    3dde:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3de2:	08 95       	ret
	}
	else if (!strcmp(wind_direction, "S-W"))
    3de4:	6f e8       	ldi	r22, 0x8F	; 143
    3de6:	71 e0       	ldi	r23, 0x01	; 1
    3de8:	8b e4       	ldi	r24, 0x4B	; 75
    3dea:	92 e0       	ldi	r25, 0x02	; 2
    3dec:	0e 94 54 2c 	call	0x58a8	; 0x58a8 <strcmp>
    3df0:	89 2b       	or	r24, r25
    3df2:	b1 f5       	brne	.+108    	; 0x3e60 <DrawWeatherVane+0x6f0>
	{
		LCD_12864_Draw_pixel(11, 50);
    3df4:	62 e3       	ldi	r22, 0x32	; 50
    3df6:	8b e0       	ldi	r24, 0x0B	; 11
    3df8:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(10, 51);
    3dfc:	63 e3       	ldi	r22, 0x33	; 51
    3dfe:	8a e0       	ldi	r24, 0x0A	; 10
    3e00:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(13, 52);
    3e04:	64 e3       	ldi	r22, 0x34	; 52
    3e06:	8d e0       	ldi	r24, 0x0D	; 13
    3e08:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(12, 53);
    3e0c:	65 e3       	ldi	r22, 0x35	; 53
    3e0e:	8c e0       	ldi	r24, 0x0C	; 12
    3e10:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_line(11, 52, 6, 57);
    3e14:	29 e3       	ldi	r18, 0x39	; 57
    3e16:	46 e0       	ldi	r20, 0x06	; 6
    3e18:	64 e3       	ldi	r22, 0x34	; 52
    3e1a:	8b e0       	ldi	r24, 0x0B	; 11
    3e1c:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_pixel(6, 56);
    3e20:	68 e3       	ldi	r22, 0x38	; 56
    3e22:	86 e0       	ldi	r24, 0x06	; 6
    3e24:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 55);
    3e28:	67 e3       	ldi	r22, 0x37	; 55
    3e2a:	86 e0       	ldi	r24, 0x06	; 6
    3e2c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 55);
    3e30:	67 e3       	ldi	r22, 0x37	; 55
    3e32:	87 e0       	ldi	r24, 0x07	; 7
    3e34:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(6, 54);
    3e38:	66 e3       	ldi	r22, 0x36	; 54
    3e3a:	86 e0       	ldi	r24, 0x06	; 6
    3e3c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(7, 57);
    3e40:	69 e3       	ldi	r22, 0x39	; 57
    3e42:	87 e0       	ldi	r24, 0x07	; 7
    3e44:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 57);
    3e48:	69 e3       	ldi	r22, 0x39	; 57
    3e4a:	88 e0       	ldi	r24, 0x08	; 8
    3e4c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(8, 56);
    3e50:	68 e3       	ldi	r22, 0x38	; 56
    3e52:	88 e0       	ldi	r24, 0x08	; 8
    3e54:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
		LCD_12864_Draw_pixel(9, 57);
    3e58:	69 e3       	ldi	r22, 0x39	; 57
    3e5a:	89 e0       	ldi	r24, 0x09	; 9
    3e5c:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
    3e60:	08 95       	ret

00003e62 <Clock>:
	else {}
}
void Clock (void)
{		
	//Читаем время (для DS3231) - по сути функция RTC_read_time
	I2C_StartCondition();               // запуск i2c
    3e62:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(0b11010000);			// передача адреса устройства, режим записи
    3e66:	80 ed       	ldi	r24, 0xD0	; 208
    3e68:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_SendByte(0x00);				    // передача адреса памяти
    3e6c:	80 e0       	ldi	r24, 0x00	; 0
    3e6e:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	I2C_StopCondition();                // остановка i2c
    3e72:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>
	
	I2C_StartCondition();               // запуск i2c
    3e76:	0e 94 a2 19 	call	0x3344	; 0x3344 <I2C_StartCondition>
	I2C_SendByte(0b11010001);			// передача адреса устройства, режим чтения
    3e7a:	81 ed       	ldi	r24, 0xD1	; 209
    3e7c:	0e 94 ae 19 	call	0x335c	; 0x335c <I2C_SendByte>
	sec = RTC_ConvertFromDec(I2C_ReadByte());     // чтение секунд, ACK
    3e80:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
    3e84:	0e 94 3d 19 	call	0x327a	; 0x327a <RTC_ConvertFromDec>
    3e88:	80 93 ea 06 	sts	0x06EA, r24	; 0x8006ea <sec>
	min = RTC_ConvertFromDec(I2C_ReadByte());     // чтение минут, ACK
    3e8c:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
    3e90:	0e 94 3d 19 	call	0x327a	; 0x327a <RTC_ConvertFromDec>
    3e94:	80 93 e4 06 	sts	0x06E4, r24	; 0x8006e4 <min>
	hour = RTC_ConvertFromDec(I2C_ReadByte());    // чтение часов, ACK
    3e98:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
    3e9c:	0e 94 3d 19 	call	0x327a	; 0x327a <RTC_ConvertFromDec>
    3ea0:	80 93 dd 06 	sts	0x06DD, r24	; 0x8006dd <hour>
	day = RTC_ConvertFromDec(I2C_ReadByte());     // чтение день недели, ACK
    3ea4:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
    3ea8:	0e 94 3d 19 	call	0x327a	; 0x327a <RTC_ConvertFromDec>
    3eac:	80 93 eb 06 	sts	0x06EB, r24	; 0x8006eb <day>
	date = RTC_ConvertFromDec(I2C_ReadByte());    // чтение число, ACK
    3eb0:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
    3eb4:	0e 94 3d 19 	call	0x327a	; 0x327a <RTC_ConvertFromDec>
    3eb8:	80 93 ed 06 	sts	0x06ED, r24	; 0x8006ed <date>
	month = RTC_ConvertFromDec(I2C_ReadByte());   // чтение месяц, ACK
    3ebc:	0e 94 b8 19 	call	0x3370	; 0x3370 <I2C_ReadByte>
    3ec0:	0e 94 3d 19 	call	0x327a	; 0x327a <RTC_ConvertFromDec>
    3ec4:	80 93 dc 06 	sts	0x06DC, r24	; 0x8006dc <month>
	year = RTC_ConvertFromDec(I2C_ReadLastByte());// чтение год, NACK
    3ec8:	0e 94 c2 19 	call	0x3384	; 0x3384 <I2C_ReadLastByte>
    3ecc:	0e 94 3d 19 	call	0x327a	; 0x327a <RTC_ConvertFromDec>
    3ed0:	80 93 e9 06 	sts	0x06E9, r24	; 0x8006e9 <year>
	I2C_StopCondition();                // остановка i2c
    3ed4:	0e 94 aa 19 	call	0x3354	; 0x3354 <I2C_StopCondition>
	
	if ((sec >= 0) && (sec <= 9)) {
    3ed8:	80 91 ea 06 	lds	r24, 0x06EA	; 0x8006ea <sec>
    3edc:	8a 30       	cpi	r24, 0x0A	; 10
    3ede:	98 f4       	brcc	.+38     	; 0x3f06 <Clock+0xa4>
		sprintf(seconds,"0%d",sec);
    3ee0:	1f 92       	push	r1
    3ee2:	8f 93       	push	r24
    3ee4:	83 e9       	ldi	r24, 0x93	; 147
    3ee6:	91 e0       	ldi	r25, 0x01	; 1
    3ee8:	9f 93       	push	r25
    3eea:	8f 93       	push	r24
    3eec:	8b ec       	ldi	r24, 0xCB	; 203
    3eee:	96 e0       	ldi	r25, 0x06	; 6
    3ef0:	9f 93       	push	r25
    3ef2:	8f 93       	push	r24
    3ef4:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    3ef8:	0f 90       	pop	r0
    3efa:	0f 90       	pop	r0
    3efc:	0f 90       	pop	r0
    3efe:	0f 90       	pop	r0
    3f00:	0f 90       	pop	r0
    3f02:	0f 90       	pop	r0
    3f04:	12 c0       	rjmp	.+36     	; 0x3f2a <Clock+0xc8>
	}
	else {
		sprintf(seconds,"%d",sec);
    3f06:	1f 92       	push	r1
    3f08:	8f 93       	push	r24
    3f0a:	84 e9       	ldi	r24, 0x94	; 148
    3f0c:	91 e0       	ldi	r25, 0x01	; 1
    3f0e:	9f 93       	push	r25
    3f10:	8f 93       	push	r24
    3f12:	8b ec       	ldi	r24, 0xCB	; 203
    3f14:	96 e0       	ldi	r25, 0x06	; 6
    3f16:	9f 93       	push	r25
    3f18:	8f 93       	push	r24
    3f1a:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    3f1e:	0f 90       	pop	r0
    3f20:	0f 90       	pop	r0
    3f22:	0f 90       	pop	r0
    3f24:	0f 90       	pop	r0
    3f26:	0f 90       	pop	r0
    3f28:	0f 90       	pop	r0
	}
	if ((min >= 0) && (min <= 9)) {
    3f2a:	80 91 e4 06 	lds	r24, 0x06E4	; 0x8006e4 <min>
    3f2e:	8a 30       	cpi	r24, 0x0A	; 10
    3f30:	98 f4       	brcc	.+38     	; 0x3f58 <Clock+0xf6>
		sprintf(minutes,"0%d",min);
    3f32:	1f 92       	push	r1
    3f34:	8f 93       	push	r24
    3f36:	83 e9       	ldi	r24, 0x93	; 147
    3f38:	91 e0       	ldi	r25, 0x01	; 1
    3f3a:	9f 93       	push	r25
    3f3c:	8f 93       	push	r24
    3f3e:	80 ed       	ldi	r24, 0xD0	; 208
    3f40:	96 e0       	ldi	r25, 0x06	; 6
    3f42:	9f 93       	push	r25
    3f44:	8f 93       	push	r24
    3f46:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    3f4a:	0f 90       	pop	r0
    3f4c:	0f 90       	pop	r0
    3f4e:	0f 90       	pop	r0
    3f50:	0f 90       	pop	r0
    3f52:	0f 90       	pop	r0
    3f54:	0f 90       	pop	r0
    3f56:	12 c0       	rjmp	.+36     	; 0x3f7c <Clock+0x11a>
	}
	else {
		sprintf(minutes,"%d",min);
    3f58:	1f 92       	push	r1
    3f5a:	8f 93       	push	r24
    3f5c:	84 e9       	ldi	r24, 0x94	; 148
    3f5e:	91 e0       	ldi	r25, 0x01	; 1
    3f60:	9f 93       	push	r25
    3f62:	8f 93       	push	r24
    3f64:	80 ed       	ldi	r24, 0xD0	; 208
    3f66:	96 e0       	ldi	r25, 0x06	; 6
    3f68:	9f 93       	push	r25
    3f6a:	8f 93       	push	r24
    3f6c:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    3f70:	0f 90       	pop	r0
    3f72:	0f 90       	pop	r0
    3f74:	0f 90       	pop	r0
    3f76:	0f 90       	pop	r0
    3f78:	0f 90       	pop	r0
    3f7a:	0f 90       	pop	r0
	}
	if ((hour >= 0) && (hour <= 9)) {
    3f7c:	80 91 dd 06 	lds	r24, 0x06DD	; 0x8006dd <hour>
    3f80:	8a 30       	cpi	r24, 0x0A	; 10
    3f82:	98 f4       	brcc	.+38     	; 0x3faa <Clock+0x148>
		sprintf(hours,"0%d",hour);
    3f84:	1f 92       	push	r1
    3f86:	8f 93       	push	r24
    3f88:	83 e9       	ldi	r24, 0x93	; 147
    3f8a:	91 e0       	ldi	r25, 0x01	; 1
    3f8c:	9f 93       	push	r25
    3f8e:	8f 93       	push	r24
    3f90:	84 ed       	ldi	r24, 0xD4	; 212
    3f92:	96 e0       	ldi	r25, 0x06	; 6
    3f94:	9f 93       	push	r25
    3f96:	8f 93       	push	r24
    3f98:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    3f9c:	0f 90       	pop	r0
    3f9e:	0f 90       	pop	r0
    3fa0:	0f 90       	pop	r0
    3fa2:	0f 90       	pop	r0
    3fa4:	0f 90       	pop	r0
    3fa6:	0f 90       	pop	r0
    3fa8:	12 c0       	rjmp	.+36     	; 0x3fce <Clock+0x16c>
	}
	else {
		sprintf(hours,"%d",hour);
    3faa:	1f 92       	push	r1
    3fac:	8f 93       	push	r24
    3fae:	84 e9       	ldi	r24, 0x94	; 148
    3fb0:	91 e0       	ldi	r25, 0x01	; 1
    3fb2:	9f 93       	push	r25
    3fb4:	8f 93       	push	r24
    3fb6:	84 ed       	ldi	r24, 0xD4	; 212
    3fb8:	96 e0       	ldi	r25, 0x06	; 6
    3fba:	9f 93       	push	r25
    3fbc:	8f 93       	push	r24
    3fbe:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    3fc2:	0f 90       	pop	r0
    3fc4:	0f 90       	pop	r0
    3fc6:	0f 90       	pop	r0
    3fc8:	0f 90       	pop	r0
    3fca:	0f 90       	pop	r0
    3fcc:	0f 90       	pop	r0
	}
	if ((date >= 0) && (date <= 9)) {
    3fce:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <date>
    3fd2:	8a 30       	cpi	r24, 0x0A	; 10
    3fd4:	98 f4       	brcc	.+38     	; 0x3ffc <Clock+0x19a>
		sprintf(mounthday,"0%d",date);
    3fd6:	1f 92       	push	r1
    3fd8:	8f 93       	push	r24
    3fda:	83 e9       	ldi	r24, 0x93	; 147
    3fdc:	91 e0       	ldi	r25, 0x01	; 1
    3fde:	9f 93       	push	r25
    3fe0:	8f 93       	push	r24
    3fe2:	85 ee       	ldi	r24, 0xE5	; 229
    3fe4:	96 e0       	ldi	r25, 0x06	; 6
    3fe6:	9f 93       	push	r25
    3fe8:	8f 93       	push	r24
    3fea:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    3fee:	0f 90       	pop	r0
    3ff0:	0f 90       	pop	r0
    3ff2:	0f 90       	pop	r0
    3ff4:	0f 90       	pop	r0
    3ff6:	0f 90       	pop	r0
    3ff8:	0f 90       	pop	r0
    3ffa:	12 c0       	rjmp	.+36     	; 0x4020 <Clock+0x1be>
	}
	else {
		sprintf(mounthday,"%d",date);
    3ffc:	1f 92       	push	r1
    3ffe:	8f 93       	push	r24
    4000:	84 e9       	ldi	r24, 0x94	; 148
    4002:	91 e0       	ldi	r25, 0x01	; 1
    4004:	9f 93       	push	r25
    4006:	8f 93       	push	r24
    4008:	85 ee       	ldi	r24, 0xE5	; 229
    400a:	96 e0       	ldi	r25, 0x06	; 6
    400c:	9f 93       	push	r25
    400e:	8f 93       	push	r24
    4010:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    4014:	0f 90       	pop	r0
    4016:	0f 90       	pop	r0
    4018:	0f 90       	pop	r0
    401a:	0f 90       	pop	r0
    401c:	0f 90       	pop	r0
    401e:	0f 90       	pop	r0
	}
	switch (day)
    4020:	e0 91 eb 06 	lds	r30, 0x06EB	; 0x8006eb <day>
    4024:	8e 2f       	mov	r24, r30
    4026:	90 e0       	ldi	r25, 0x00	; 0
    4028:	fc 01       	movw	r30, r24
    402a:	31 97       	sbiw	r30, 0x01	; 1
    402c:	e7 30       	cpi	r30, 0x07	; 7
    402e:	f1 05       	cpc	r31, r1
    4030:	d8 f5       	brcc	.+118    	; 0x40a8 <Clock+0x246>
    4032:	ec 5c       	subi	r30, 0xCC	; 204
    4034:	ff 4f       	sbci	r31, 0xFF	; 255
    4036:	0c 94 00 2b 	jmp	0x5600	; 0x5600 <__tablejump2__>
	{
		case 1:
			sprintf(weakday,"Пн");
    403a:	e8 ed       	ldi	r30, 0xD8	; 216
    403c:	f6 e0       	ldi	r31, 0x06	; 6
    403e:	8f ec       	ldi	r24, 0xCF	; 207
    4040:	9d ee       	ldi	r25, 0xED	; 237
    4042:	91 83       	std	Z+1, r25	; 0x01
    4044:	80 83       	st	Z, r24
    4046:	12 82       	std	Z+2, r1	; 0x02
			break;
    4048:	2f c0       	rjmp	.+94     	; 0x40a8 <Clock+0x246>
		case 2:
			sprintf(weakday,"Вт");
    404a:	e8 ed       	ldi	r30, 0xD8	; 216
    404c:	f6 e0       	ldi	r31, 0x06	; 6
    404e:	82 ec       	ldi	r24, 0xC2	; 194
    4050:	92 ef       	ldi	r25, 0xF2	; 242
    4052:	91 83       	std	Z+1, r25	; 0x01
    4054:	80 83       	st	Z, r24
    4056:	12 82       	std	Z+2, r1	; 0x02
			break;
    4058:	27 c0       	rjmp	.+78     	; 0x40a8 <Clock+0x246>
		case 3:
			sprintf(weakday,"Ср");
    405a:	e8 ed       	ldi	r30, 0xD8	; 216
    405c:	f6 e0       	ldi	r31, 0x06	; 6
    405e:	81 ed       	ldi	r24, 0xD1	; 209
    4060:	90 ef       	ldi	r25, 0xF0	; 240
    4062:	91 83       	std	Z+1, r25	; 0x01
    4064:	80 83       	st	Z, r24
    4066:	12 82       	std	Z+2, r1	; 0x02
			break;
    4068:	1f c0       	rjmp	.+62     	; 0x40a8 <Clock+0x246>
		case 4:
			sprintf(weakday,"Чт");
    406a:	e8 ed       	ldi	r30, 0xD8	; 216
    406c:	f6 e0       	ldi	r31, 0x06	; 6
    406e:	87 ed       	ldi	r24, 0xD7	; 215
    4070:	92 ef       	ldi	r25, 0xF2	; 242
    4072:	91 83       	std	Z+1, r25	; 0x01
    4074:	80 83       	st	Z, r24
    4076:	12 82       	std	Z+2, r1	; 0x02
			break;
    4078:	17 c0       	rjmp	.+46     	; 0x40a8 <Clock+0x246>
		case 5:
			sprintf(weakday,"Пт");
    407a:	e8 ed       	ldi	r30, 0xD8	; 216
    407c:	f6 e0       	ldi	r31, 0x06	; 6
    407e:	8f ec       	ldi	r24, 0xCF	; 207
    4080:	92 ef       	ldi	r25, 0xF2	; 242
    4082:	91 83       	std	Z+1, r25	; 0x01
    4084:	80 83       	st	Z, r24
    4086:	12 82       	std	Z+2, r1	; 0x02
			break;
    4088:	0f c0       	rjmp	.+30     	; 0x40a8 <Clock+0x246>
		case 6:
			sprintf(weakday,"Сб");
    408a:	e8 ed       	ldi	r30, 0xD8	; 216
    408c:	f6 e0       	ldi	r31, 0x06	; 6
    408e:	81 ed       	ldi	r24, 0xD1	; 209
    4090:	91 ee       	ldi	r25, 0xE1	; 225
    4092:	91 83       	std	Z+1, r25	; 0x01
    4094:	80 83       	st	Z, r24
    4096:	12 82       	std	Z+2, r1	; 0x02
			break;
    4098:	07 c0       	rjmp	.+14     	; 0x40a8 <Clock+0x246>
		case 7:
			sprintf(weakday,"Вс");
    409a:	e8 ed       	ldi	r30, 0xD8	; 216
    409c:	f6 e0       	ldi	r31, 0x06	; 6
    409e:	82 ec       	ldi	r24, 0xC2	; 194
    40a0:	91 ef       	ldi	r25, 0xF1	; 241
    40a2:	91 83       	std	Z+1, r25	; 0x01
    40a4:	80 83       	st	Z, r24
    40a6:	12 82       	std	Z+2, r1	; 0x02
			break;
		default:
			break;
	}
	switch (month)
    40a8:	e0 91 dc 06 	lds	r30, 0x06DC	; 0x8006dc <month>
    40ac:	8e 2f       	mov	r24, r30
    40ae:	90 e0       	ldi	r25, 0x00	; 0
    40b0:	fc 01       	movw	r30, r24
    40b2:	31 97       	sbiw	r30, 0x01	; 1
    40b4:	ec 30       	cpi	r30, 0x0C	; 12
    40b6:	f1 05       	cpc	r31, r1
    40b8:	08 f0       	brcs	.+2      	; 0x40bc <Clock+0x25a>
    40ba:	87 c0       	rjmp	.+270    	; 0x41ca <Clock+0x368>
    40bc:	e5 5c       	subi	r30, 0xC5	; 197
    40be:	ff 4f       	sbci	r31, 0xFF	; 255
    40c0:	0c 94 00 2b 	jmp	0x5600	; 0x5600 <__tablejump2__>
	{
		case 1:
		sprintf(Mounth,"Янв");
    40c4:	ee ed       	ldi	r30, 0xDE	; 222
    40c6:	f6 e0       	ldi	r31, 0x06	; 6
    40c8:	8f ed       	ldi	r24, 0xDF	; 223
    40ca:	9d ee       	ldi	r25, 0xED	; 237
    40cc:	91 83       	std	Z+1, r25	; 0x01
    40ce:	80 83       	st	Z, r24
    40d0:	82 ee       	ldi	r24, 0xE2	; 226
    40d2:	90 e0       	ldi	r25, 0x00	; 0
    40d4:	93 83       	std	Z+3, r25	; 0x03
    40d6:	82 83       	std	Z+2, r24	; 0x02
		break;
    40d8:	08 95       	ret
		case 2:
		sprintf(Mounth,"Фев");
    40da:	ee ed       	ldi	r30, 0xDE	; 222
    40dc:	f6 e0       	ldi	r31, 0x06	; 6
    40de:	84 ed       	ldi	r24, 0xD4	; 212
    40e0:	95 ee       	ldi	r25, 0xE5	; 229
    40e2:	91 83       	std	Z+1, r25	; 0x01
    40e4:	80 83       	st	Z, r24
    40e6:	82 ee       	ldi	r24, 0xE2	; 226
    40e8:	90 e0       	ldi	r25, 0x00	; 0
    40ea:	93 83       	std	Z+3, r25	; 0x03
    40ec:	82 83       	std	Z+2, r24	; 0x02
		break;
    40ee:	08 95       	ret
		case 3:
		sprintf(Mounth,"Мар");
    40f0:	ee ed       	ldi	r30, 0xDE	; 222
    40f2:	f6 e0       	ldi	r31, 0x06	; 6
    40f4:	8c ec       	ldi	r24, 0xCC	; 204
    40f6:	90 ee       	ldi	r25, 0xE0	; 224
    40f8:	91 83       	std	Z+1, r25	; 0x01
    40fa:	80 83       	st	Z, r24
    40fc:	80 ef       	ldi	r24, 0xF0	; 240
    40fe:	90 e0       	ldi	r25, 0x00	; 0
    4100:	93 83       	std	Z+3, r25	; 0x03
    4102:	82 83       	std	Z+2, r24	; 0x02
		break;
    4104:	08 95       	ret
		case 4:
		sprintf(Mounth,"Апр");
    4106:	ee ed       	ldi	r30, 0xDE	; 222
    4108:	f6 e0       	ldi	r31, 0x06	; 6
    410a:	80 ec       	ldi	r24, 0xC0	; 192
    410c:	9f ee       	ldi	r25, 0xEF	; 239
    410e:	91 83       	std	Z+1, r25	; 0x01
    4110:	80 83       	st	Z, r24
    4112:	80 ef       	ldi	r24, 0xF0	; 240
    4114:	90 e0       	ldi	r25, 0x00	; 0
    4116:	93 83       	std	Z+3, r25	; 0x03
    4118:	82 83       	std	Z+2, r24	; 0x02
		break;
    411a:	08 95       	ret
		case 5:
		sprintf(Mounth,"Май");
    411c:	ee ed       	ldi	r30, 0xDE	; 222
    411e:	f6 e0       	ldi	r31, 0x06	; 6
    4120:	8c ec       	ldi	r24, 0xCC	; 204
    4122:	90 ee       	ldi	r25, 0xE0	; 224
    4124:	91 83       	std	Z+1, r25	; 0x01
    4126:	80 83       	st	Z, r24
    4128:	89 ee       	ldi	r24, 0xE9	; 233
    412a:	90 e0       	ldi	r25, 0x00	; 0
    412c:	93 83       	std	Z+3, r25	; 0x03
    412e:	82 83       	std	Z+2, r24	; 0x02
		break;
    4130:	08 95       	ret
		case 6:
		sprintf(Mounth,"Июн");
    4132:	ee ed       	ldi	r30, 0xDE	; 222
    4134:	f6 e0       	ldi	r31, 0x06	; 6
    4136:	88 ec       	ldi	r24, 0xC8	; 200
    4138:	9e ef       	ldi	r25, 0xFE	; 254
    413a:	91 83       	std	Z+1, r25	; 0x01
    413c:	80 83       	st	Z, r24
    413e:	8d ee       	ldi	r24, 0xED	; 237
    4140:	90 e0       	ldi	r25, 0x00	; 0
    4142:	93 83       	std	Z+3, r25	; 0x03
    4144:	82 83       	std	Z+2, r24	; 0x02
		break;
    4146:	08 95       	ret
		case 7:
		sprintf(Mounth,"Июл");
    4148:	ee ed       	ldi	r30, 0xDE	; 222
    414a:	f6 e0       	ldi	r31, 0x06	; 6
    414c:	88 ec       	ldi	r24, 0xC8	; 200
    414e:	9e ef       	ldi	r25, 0xFE	; 254
    4150:	91 83       	std	Z+1, r25	; 0x01
    4152:	80 83       	st	Z, r24
    4154:	8b ee       	ldi	r24, 0xEB	; 235
    4156:	90 e0       	ldi	r25, 0x00	; 0
    4158:	93 83       	std	Z+3, r25	; 0x03
    415a:	82 83       	std	Z+2, r24	; 0x02
		break;
    415c:	08 95       	ret
		case 8:
		sprintf(Mounth,"Авг");
    415e:	ee ed       	ldi	r30, 0xDE	; 222
    4160:	f6 e0       	ldi	r31, 0x06	; 6
    4162:	80 ec       	ldi	r24, 0xC0	; 192
    4164:	92 ee       	ldi	r25, 0xE2	; 226
    4166:	91 83       	std	Z+1, r25	; 0x01
    4168:	80 83       	st	Z, r24
    416a:	83 ee       	ldi	r24, 0xE3	; 227
    416c:	90 e0       	ldi	r25, 0x00	; 0
    416e:	93 83       	std	Z+3, r25	; 0x03
    4170:	82 83       	std	Z+2, r24	; 0x02
		break;
    4172:	08 95       	ret
		case 9:
		sprintf(Mounth,"Сен");
    4174:	ee ed       	ldi	r30, 0xDE	; 222
    4176:	f6 e0       	ldi	r31, 0x06	; 6
    4178:	81 ed       	ldi	r24, 0xD1	; 209
    417a:	95 ee       	ldi	r25, 0xE5	; 229
    417c:	91 83       	std	Z+1, r25	; 0x01
    417e:	80 83       	st	Z, r24
    4180:	8d ee       	ldi	r24, 0xED	; 237
    4182:	90 e0       	ldi	r25, 0x00	; 0
    4184:	93 83       	std	Z+3, r25	; 0x03
    4186:	82 83       	std	Z+2, r24	; 0x02
		break;
    4188:	08 95       	ret
		case 10:
		sprintf(Mounth,"Окт");
    418a:	ee ed       	ldi	r30, 0xDE	; 222
    418c:	f6 e0       	ldi	r31, 0x06	; 6
    418e:	8e ec       	ldi	r24, 0xCE	; 206
    4190:	9a ee       	ldi	r25, 0xEA	; 234
    4192:	91 83       	std	Z+1, r25	; 0x01
    4194:	80 83       	st	Z, r24
    4196:	82 ef       	ldi	r24, 0xF2	; 242
    4198:	90 e0       	ldi	r25, 0x00	; 0
    419a:	93 83       	std	Z+3, r25	; 0x03
    419c:	82 83       	std	Z+2, r24	; 0x02
		break;
    419e:	08 95       	ret
		case 11:
		sprintf(Mounth,"Ноя");
    41a0:	ee ed       	ldi	r30, 0xDE	; 222
    41a2:	f6 e0       	ldi	r31, 0x06	; 6
    41a4:	8d ec       	ldi	r24, 0xCD	; 205
    41a6:	9e ee       	ldi	r25, 0xEE	; 238
    41a8:	91 83       	std	Z+1, r25	; 0x01
    41aa:	80 83       	st	Z, r24
    41ac:	8f ef       	ldi	r24, 0xFF	; 255
    41ae:	90 e0       	ldi	r25, 0x00	; 0
    41b0:	93 83       	std	Z+3, r25	; 0x03
    41b2:	82 83       	std	Z+2, r24	; 0x02
		break;
    41b4:	08 95       	ret
		case 12:
		sprintf(Mounth,"Дек");
    41b6:	ee ed       	ldi	r30, 0xDE	; 222
    41b8:	f6 e0       	ldi	r31, 0x06	; 6
    41ba:	84 ec       	ldi	r24, 0xC4	; 196
    41bc:	95 ee       	ldi	r25, 0xE5	; 229
    41be:	91 83       	std	Z+1, r25	; 0x01
    41c0:	80 83       	st	Z, r24
    41c2:	8a ee       	ldi	r24, 0xEA	; 234
    41c4:	90 e0       	ldi	r25, 0x00	; 0
    41c6:	93 83       	std	Z+3, r25	; 0x03
    41c8:	82 83       	std	Z+2, r24	; 0x02
    41ca:	08 95       	ret

000041cc <RAIN_AMOUNT>:
	}
	
}
//Вычисление кол-ва осадков
float RAIN_AMOUNT(char *adc_value)
{
    41cc:	cf 93       	push	r28
    41ce:	df 93       	push	r29
    41d0:	00 d0       	rcall	.+0      	; 0x41d2 <RAIN_AMOUNT+0x6>
    41d2:	cd b7       	in	r28, 0x3d	; 61
    41d4:	de b7       	in	r29, 0x3e	; 62
	float RAIN;
	int R;
	if (strlen(adc_value) != 0)
    41d6:	fc 01       	movw	r30, r24
    41d8:	20 81       	ld	r18, Z
    41da:	22 23       	and	r18, r18
    41dc:	a1 f0       	breq	.+40     	; 0x4206 <RAIN_AMOUNT+0x3a>
	{
		sscanf(adc_value, "%d", &R);
    41de:	9e 01       	movw	r18, r28
    41e0:	2f 5f       	subi	r18, 0xFF	; 255
    41e2:	3f 4f       	sbci	r19, 0xFF	; 255
    41e4:	3f 93       	push	r19
    41e6:	2f 93       	push	r18
    41e8:	24 e9       	ldi	r18, 0x94	; 148
    41ea:	31 e0       	ldi	r19, 0x01	; 1
    41ec:	3f 93       	push	r19
    41ee:	2f 93       	push	r18
    41f0:	9f 93       	push	r25
    41f2:	8f 93       	push	r24
    41f4:	0e 94 c6 2c 	call	0x598c	; 0x598c <sscanf>
    41f8:	0f 90       	pop	r0
    41fa:	0f 90       	pop	r0
    41fc:	0f 90       	pop	r0
    41fe:	0f 90       	pop	r0
    4200:	0f 90       	pop	r0
    4202:	0f 90       	pop	r0
    4204:	02 c0       	rjmp	.+4      	; 0x420a <RAIN_AMOUNT+0x3e>
	}
	else
	{
		R = 0;
    4206:	1a 82       	std	Y+2, r1	; 0x02
    4208:	19 82       	std	Y+1, r1	; 0x01
	}
	RAIN = 3*R*2.45/5120;
    420a:	69 81       	ldd	r22, Y+1	; 0x01
    420c:	7a 81       	ldd	r23, Y+2	; 0x02
    420e:	cb 01       	movw	r24, r22
    4210:	88 0f       	add	r24, r24
    4212:	99 1f       	adc	r25, r25
    4214:	68 0f       	add	r22, r24
    4216:	79 1f       	adc	r23, r25
    4218:	07 2e       	mov	r0, r23
    421a:	00 0c       	add	r0, r0
    421c:	88 0b       	sbc	r24, r24
    421e:	99 0b       	sbc	r25, r25
    4220:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    4224:	2d ec       	ldi	r18, 0xCD	; 205
    4226:	3c ec       	ldi	r19, 0xCC	; 204
    4228:	4c e1       	ldi	r20, 0x1C	; 28
    422a:	50 e4       	ldi	r21, 0x40	; 64
    422c:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
    4230:	20 e0       	ldi	r18, 0x00	; 0
    4232:	30 e0       	ldi	r19, 0x00	; 0
    4234:	40 ea       	ldi	r20, 0xA0	; 160
    4236:	55 e4       	ldi	r21, 0x45	; 69
    4238:	0e 94 66 25 	call	0x4acc	; 0x4acc <__divsf3>
	
	return RAIN;
}
    423c:	0f 90       	pop	r0
    423e:	0f 90       	pop	r0
    4240:	df 91       	pop	r29
    4242:	cf 91       	pop	r28
    4244:	08 95       	ret

00004246 <V_BAT>:
//Вычисление уровня заряда АКБ
float V_BAT (char *adc_value)
{
    4246:	cf 93       	push	r28
    4248:	df 93       	push	r29
    424a:	00 d0       	rcall	.+0      	; 0x424c <V_BAT+0x6>
    424c:	cd b7       	in	r28, 0x3d	; 61
    424e:	de b7       	in	r29, 0x3e	; 62
	float VBAT;
	int V;
	if (strlen(adc_value) != 0)
    4250:	fc 01       	movw	r30, r24
    4252:	20 81       	ld	r18, Z
    4254:	22 23       	and	r18, r18
    4256:	a1 f0       	breq	.+40     	; 0x4280 <V_BAT+0x3a>
	{
		sscanf(adc_value, "%d", &V);
    4258:	9e 01       	movw	r18, r28
    425a:	2f 5f       	subi	r18, 0xFF	; 255
    425c:	3f 4f       	sbci	r19, 0xFF	; 255
    425e:	3f 93       	push	r19
    4260:	2f 93       	push	r18
    4262:	24 e9       	ldi	r18, 0x94	; 148
    4264:	31 e0       	ldi	r19, 0x01	; 1
    4266:	3f 93       	push	r19
    4268:	2f 93       	push	r18
    426a:	9f 93       	push	r25
    426c:	8f 93       	push	r24
    426e:	0e 94 c6 2c 	call	0x598c	; 0x598c <sscanf>
    4272:	0f 90       	pop	r0
    4274:	0f 90       	pop	r0
    4276:	0f 90       	pop	r0
    4278:	0f 90       	pop	r0
    427a:	0f 90       	pop	r0
    427c:	0f 90       	pop	r0
    427e:	02 c0       	rjmp	.+4      	; 0x4284 <V_BAT+0x3e>
	}
	else
	{
		V = 0;
    4280:	1a 82       	std	Y+2, r1	; 0x02
    4282:	19 82       	std	Y+1, r1	; 0x01
	}
	VBAT = V*2.45*3/1024;
    4284:	69 81       	ldd	r22, Y+1	; 0x01
    4286:	7a 81       	ldd	r23, Y+2	; 0x02
    4288:	07 2e       	mov	r0, r23
    428a:	00 0c       	add	r0, r0
    428c:	88 0b       	sbc	r24, r24
    428e:	99 0b       	sbc	r25, r25
    4290:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    4294:	2d ec       	ldi	r18, 0xCD	; 205
    4296:	3c ec       	ldi	r19, 0xCC	; 204
    4298:	4c e1       	ldi	r20, 0x1C	; 28
    429a:	50 e4       	ldi	r21, 0x40	; 64
    429c:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
    42a0:	20 e0       	ldi	r18, 0x00	; 0
    42a2:	30 e0       	ldi	r19, 0x00	; 0
    42a4:	40 e4       	ldi	r20, 0x40	; 64
    42a6:	50 e4       	ldi	r21, 0x40	; 64
    42a8:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
    42ac:	20 e0       	ldi	r18, 0x00	; 0
    42ae:	30 e0       	ldi	r19, 0x00	; 0
    42b0:	40 e8       	ldi	r20, 0x80	; 128
    42b2:	5a e3       	ldi	r21, 0x3A	; 58
    42b4:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
	
	return VBAT;
}
    42b8:	0f 90       	pop	r0
    42ba:	0f 90       	pop	r0
    42bc:	df 91       	pop	r29
    42be:	cf 91       	pop	r28
    42c0:	08 95       	ret

000042c2 <DrawBattery>:
	}
	else {}
}
void DrawBattery(void)
{
	LCD_12864_Draw_line(34, 28, 40, 28);
    42c2:	2c e1       	ldi	r18, 0x1C	; 28
    42c4:	48 e2       	ldi	r20, 0x28	; 40
    42c6:	6c e1       	ldi	r22, 0x1C	; 28
    42c8:	82 e2       	ldi	r24, 0x22	; 34
    42ca:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(34, 19, 34, 27);
    42ce:	2b e1       	ldi	r18, 0x1B	; 27
    42d0:	42 e2       	ldi	r20, 0x22	; 34
    42d2:	63 e1       	ldi	r22, 0x13	; 19
    42d4:	82 e2       	ldi	r24, 0x22	; 34
    42d6:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(40, 19, 40, 27);
    42da:	2b e1       	ldi	r18, 0x1B	; 27
    42dc:	48 e2       	ldi	r20, 0x28	; 40
    42de:	63 e1       	ldi	r22, 0x13	; 19
    42e0:	88 e2       	ldi	r24, 0x28	; 40
    42e2:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(34, 19, 36, 19);
    42e6:	23 e1       	ldi	r18, 0x13	; 19
    42e8:	44 e2       	ldi	r20, 0x24	; 36
    42ea:	63 e1       	ldi	r22, 0x13	; 19
    42ec:	82 e2       	ldi	r24, 0x22	; 34
    42ee:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(38, 19, 40, 19);
    42f2:	23 e1       	ldi	r18, 0x13	; 19
    42f4:	48 e2       	ldi	r20, 0x28	; 40
    42f6:	63 e1       	ldi	r22, 0x13	; 19
    42f8:	86 e2       	ldi	r24, 0x26	; 38
    42fa:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(36, 18, 36, 19);
    42fe:	23 e1       	ldi	r18, 0x13	; 19
    4300:	44 e2       	ldi	r20, 0x24	; 36
    4302:	62 e1       	ldi	r22, 0x12	; 18
    4304:	84 e2       	ldi	r24, 0x24	; 36
    4306:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(38, 18, 38, 19);
    430a:	23 e1       	ldi	r18, 0x13	; 19
    430c:	46 e2       	ldi	r20, 0x26	; 38
    430e:	62 e1       	ldi	r22, 0x12	; 18
    4310:	86 e2       	ldi	r24, 0x26	; 38
    4312:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(36, 18, 38, 18);
    4316:	22 e1       	ldi	r18, 0x12	; 18
    4318:	46 e2       	ldi	r20, 0x26	; 38
    431a:	62 e1       	ldi	r22, 0x12	; 18
    431c:	84 e2       	ldi	r24, 0x24	; 36
    431e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	if (V_BAT(adc_value1) >= 4.0f) {
    4322:	81 e4       	ldi	r24, 0x41	; 65
    4324:	92 e0       	ldi	r25, 0x02	; 2
    4326:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    432a:	20 e0       	ldi	r18, 0x00	; 0
    432c:	30 e0       	ldi	r19, 0x00	; 0
    432e:	40 e8       	ldi	r20, 0x80	; 128
    4330:	50 e4       	ldi	r21, 0x40	; 64
    4332:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__gesf2>
    4336:	88 23       	and	r24, r24
    4338:	2c f1       	brlt	.+74     	; 0x4384 <DrawBattery+0xc2>
		LCD_12864_Draw_line(36, 26, 38, 26);
    433a:	2a e1       	ldi	r18, 0x1A	; 26
    433c:	46 e2       	ldi	r20, 0x26	; 38
    433e:	6a e1       	ldi	r22, 0x1A	; 26
    4340:	84 e2       	ldi	r24, 0x24	; 36
    4342:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    4346:	29 e1       	ldi	r18, 0x19	; 25
    4348:	46 e2       	ldi	r20, 0x26	; 38
    434a:	69 e1       	ldi	r22, 0x19	; 25
    434c:	84 e2       	ldi	r24, 0x24	; 36
    434e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    4352:	28 e1       	ldi	r18, 0x18	; 24
    4354:	46 e2       	ldi	r20, 0x26	; 38
    4356:	68 e1       	ldi	r22, 0x18	; 24
    4358:	84 e2       	ldi	r24, 0x24	; 36
    435a:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    435e:	27 e1       	ldi	r18, 0x17	; 23
    4360:	46 e2       	ldi	r20, 0x26	; 38
    4362:	67 e1       	ldi	r22, 0x17	; 23
    4364:	84 e2       	ldi	r24, 0x24	; 36
    4366:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 22, 38, 22);
    436a:	26 e1       	ldi	r18, 0x16	; 22
    436c:	46 e2       	ldi	r20, 0x26	; 38
    436e:	66 e1       	ldi	r22, 0x16	; 22
    4370:	84 e2       	ldi	r24, 0x24	; 36
    4372:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 21, 38, 21);
    4376:	25 e1       	ldi	r18, 0x15	; 21
    4378:	46 e2       	ldi	r20, 0x26	; 38
    437a:	65 e1       	ldi	r22, 0x15	; 21
    437c:	84 e2       	ldi	r24, 0x24	; 36
    437e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
    4382:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.9f) && (V_BAT(adc_value1) < 4.0f)) {
    4384:	81 e4       	ldi	r24, 0x41	; 65
    4386:	92 e0       	ldi	r25, 0x02	; 2
    4388:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    438c:	2a e9       	ldi	r18, 0x9A	; 154
    438e:	39 e9       	ldi	r19, 0x99	; 153
    4390:	49 e7       	ldi	r20, 0x79	; 121
    4392:	50 e4       	ldi	r21, 0x40	; 64
    4394:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__gesf2>
    4398:	88 23       	and	r24, r24
    439a:	5c f1       	brlt	.+86     	; 0x43f2 <DrawBattery+0x130>
    439c:	81 e4       	ldi	r24, 0x41	; 65
    439e:	92 e0       	ldi	r25, 0x02	; 2
    43a0:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    43a4:	20 e0       	ldi	r18, 0x00	; 0
    43a6:	30 e0       	ldi	r19, 0x00	; 0
    43a8:	40 e8       	ldi	r20, 0x80	; 128
    43aa:	50 e4       	ldi	r21, 0x40	; 64
    43ac:	0e 94 61 25 	call	0x4ac2	; 0x4ac2 <__cmpsf2>
    43b0:	88 23       	and	r24, r24
    43b2:	fc f4       	brge	.+62     	; 0x43f2 <DrawBattery+0x130>
		LCD_12864_Draw_line(36, 26, 38, 26);
    43b4:	2a e1       	ldi	r18, 0x1A	; 26
    43b6:	46 e2       	ldi	r20, 0x26	; 38
    43b8:	6a e1       	ldi	r22, 0x1A	; 26
    43ba:	84 e2       	ldi	r24, 0x24	; 36
    43bc:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    43c0:	29 e1       	ldi	r18, 0x19	; 25
    43c2:	46 e2       	ldi	r20, 0x26	; 38
    43c4:	69 e1       	ldi	r22, 0x19	; 25
    43c6:	84 e2       	ldi	r24, 0x24	; 36
    43c8:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    43cc:	28 e1       	ldi	r18, 0x18	; 24
    43ce:	46 e2       	ldi	r20, 0x26	; 38
    43d0:	68 e1       	ldi	r22, 0x18	; 24
    43d2:	84 e2       	ldi	r24, 0x24	; 36
    43d4:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    43d8:	27 e1       	ldi	r18, 0x17	; 23
    43da:	46 e2       	ldi	r20, 0x26	; 38
    43dc:	67 e1       	ldi	r22, 0x17	; 23
    43de:	84 e2       	ldi	r24, 0x24	; 36
    43e0:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 22, 38, 22);
    43e4:	26 e1       	ldi	r18, 0x16	; 22
    43e6:	46 e2       	ldi	r20, 0x26	; 38
    43e8:	66 e1       	ldi	r22, 0x16	; 22
    43ea:	84 e2       	ldi	r24, 0x24	; 36
    43ec:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
    43f0:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.8f) && (V_BAT(adc_value1) < 3.9f)) {
    43f2:	81 e4       	ldi	r24, 0x41	; 65
    43f4:	92 e0       	ldi	r25, 0x02	; 2
    43f6:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    43fa:	23 e3       	ldi	r18, 0x33	; 51
    43fc:	33 e3       	ldi	r19, 0x33	; 51
    43fe:	43 e7       	ldi	r20, 0x73	; 115
    4400:	50 e4       	ldi	r21, 0x40	; 64
    4402:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__gesf2>
    4406:	88 23       	and	r24, r24
    4408:	2c f1       	brlt	.+74     	; 0x4454 <DrawBattery+0x192>
    440a:	81 e4       	ldi	r24, 0x41	; 65
    440c:	92 e0       	ldi	r25, 0x02	; 2
    440e:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    4412:	2a e9       	ldi	r18, 0x9A	; 154
    4414:	39 e9       	ldi	r19, 0x99	; 153
    4416:	49 e7       	ldi	r20, 0x79	; 121
    4418:	50 e4       	ldi	r21, 0x40	; 64
    441a:	0e 94 61 25 	call	0x4ac2	; 0x4ac2 <__cmpsf2>
    441e:	88 23       	and	r24, r24
    4420:	cc f4       	brge	.+50     	; 0x4454 <DrawBattery+0x192>
		LCD_12864_Draw_line(36, 26, 38, 26);
    4422:	2a e1       	ldi	r18, 0x1A	; 26
    4424:	46 e2       	ldi	r20, 0x26	; 38
    4426:	6a e1       	ldi	r22, 0x1A	; 26
    4428:	84 e2       	ldi	r24, 0x24	; 36
    442a:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    442e:	29 e1       	ldi	r18, 0x19	; 25
    4430:	46 e2       	ldi	r20, 0x26	; 38
    4432:	69 e1       	ldi	r22, 0x19	; 25
    4434:	84 e2       	ldi	r24, 0x24	; 36
    4436:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    443a:	28 e1       	ldi	r18, 0x18	; 24
    443c:	46 e2       	ldi	r20, 0x26	; 38
    443e:	68 e1       	ldi	r22, 0x18	; 24
    4440:	84 e2       	ldi	r24, 0x24	; 36
    4442:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 23, 38, 23);
    4446:	27 e1       	ldi	r18, 0x17	; 23
    4448:	46 e2       	ldi	r20, 0x26	; 38
    444a:	67 e1       	ldi	r22, 0x17	; 23
    444c:	84 e2       	ldi	r24, 0x24	; 36
    444e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
    4452:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.7f) && (V_BAT(adc_value1) < 3.8f)) {
    4454:	81 e4       	ldi	r24, 0x41	; 65
    4456:	92 e0       	ldi	r25, 0x02	; 2
    4458:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    445c:	2d ec       	ldi	r18, 0xCD	; 205
    445e:	3c ec       	ldi	r19, 0xCC	; 204
    4460:	4c e6       	ldi	r20, 0x6C	; 108
    4462:	50 e4       	ldi	r21, 0x40	; 64
    4464:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__gesf2>
    4468:	88 23       	and	r24, r24
    446a:	fc f0       	brlt	.+62     	; 0x44aa <DrawBattery+0x1e8>
    446c:	81 e4       	ldi	r24, 0x41	; 65
    446e:	92 e0       	ldi	r25, 0x02	; 2
    4470:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    4474:	23 e3       	ldi	r18, 0x33	; 51
    4476:	33 e3       	ldi	r19, 0x33	; 51
    4478:	43 e7       	ldi	r20, 0x73	; 115
    447a:	50 e4       	ldi	r21, 0x40	; 64
    447c:	0e 94 61 25 	call	0x4ac2	; 0x4ac2 <__cmpsf2>
    4480:	88 23       	and	r24, r24
    4482:	9c f4       	brge	.+38     	; 0x44aa <DrawBattery+0x1e8>
		LCD_12864_Draw_line(36, 26, 38, 26);
    4484:	2a e1       	ldi	r18, 0x1A	; 26
    4486:	46 e2       	ldi	r20, 0x26	; 38
    4488:	6a e1       	ldi	r22, 0x1A	; 26
    448a:	84 e2       	ldi	r24, 0x24	; 36
    448c:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    4490:	29 e1       	ldi	r18, 0x19	; 25
    4492:	46 e2       	ldi	r20, 0x26	; 38
    4494:	69 e1       	ldi	r22, 0x19	; 25
    4496:	84 e2       	ldi	r24, 0x24	; 36
    4498:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 24, 38, 24);
    449c:	28 e1       	ldi	r18, 0x18	; 24
    449e:	46 e2       	ldi	r20, 0x26	; 38
    44a0:	68 e1       	ldi	r22, 0x18	; 24
    44a2:	84 e2       	ldi	r24, 0x24	; 36
    44a4:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
    44a8:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.6f) && (V_BAT(adc_value1) < 3.7f)) {
    44aa:	81 e4       	ldi	r24, 0x41	; 65
    44ac:	92 e0       	ldi	r25, 0x02	; 2
    44ae:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    44b2:	26 e6       	ldi	r18, 0x66	; 102
    44b4:	36 e6       	ldi	r19, 0x66	; 102
    44b6:	46 e6       	ldi	r20, 0x66	; 102
    44b8:	50 e4       	ldi	r21, 0x40	; 64
    44ba:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__gesf2>
    44be:	88 23       	and	r24, r24
    44c0:	cc f0       	brlt	.+50     	; 0x44f4 <DrawBattery+0x232>
    44c2:	81 e4       	ldi	r24, 0x41	; 65
    44c4:	92 e0       	ldi	r25, 0x02	; 2
    44c6:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    44ca:	2d ec       	ldi	r18, 0xCD	; 205
    44cc:	3c ec       	ldi	r19, 0xCC	; 204
    44ce:	4c e6       	ldi	r20, 0x6C	; 108
    44d0:	50 e4       	ldi	r21, 0x40	; 64
    44d2:	0e 94 61 25 	call	0x4ac2	; 0x4ac2 <__cmpsf2>
    44d6:	88 23       	and	r24, r24
    44d8:	6c f4       	brge	.+26     	; 0x44f4 <DrawBattery+0x232>
		LCD_12864_Draw_line(36, 26, 38, 26);
    44da:	2a e1       	ldi	r18, 0x1A	; 26
    44dc:	46 e2       	ldi	r20, 0x26	; 38
    44de:	6a e1       	ldi	r22, 0x1A	; 26
    44e0:	84 e2       	ldi	r24, 0x24	; 36
    44e2:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
		LCD_12864_Draw_line(36, 25, 38, 25);
    44e6:	29 e1       	ldi	r18, 0x19	; 25
    44e8:	46 e2       	ldi	r20, 0x26	; 38
    44ea:	69 e1       	ldi	r22, 0x19	; 25
    44ec:	84 e2       	ldi	r24, 0x24	; 36
    44ee:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
    44f2:	08 95       	ret
	}
	else if ((V_BAT(adc_value1) >= 3.5f) && (V_BAT(adc_value1) < 3.6f)) {
    44f4:	81 e4       	ldi	r24, 0x41	; 65
    44f6:	92 e0       	ldi	r25, 0x02	; 2
    44f8:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    44fc:	20 e0       	ldi	r18, 0x00	; 0
    44fe:	30 e0       	ldi	r19, 0x00	; 0
    4500:	40 e6       	ldi	r20, 0x60	; 96
    4502:	50 e4       	ldi	r21, 0x40	; 64
    4504:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__gesf2>
    4508:	88 23       	and	r24, r24
    450a:	94 f0       	brlt	.+36     	; 0x4530 <DrawBattery+0x26e>
    450c:	81 e4       	ldi	r24, 0x41	; 65
    450e:	92 e0       	ldi	r25, 0x02	; 2
    4510:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    4514:	26 e6       	ldi	r18, 0x66	; 102
    4516:	36 e6       	ldi	r19, 0x66	; 102
    4518:	46 e6       	ldi	r20, 0x66	; 102
    451a:	50 e4       	ldi	r21, 0x40	; 64
    451c:	0e 94 61 25 	call	0x4ac2	; 0x4ac2 <__cmpsf2>
    4520:	88 23       	and	r24, r24
    4522:	34 f4       	brge	.+12     	; 0x4530 <DrawBattery+0x26e>
		LCD_12864_Draw_line(36, 26, 38, 26);
    4524:	2a e1       	ldi	r18, 0x1A	; 26
    4526:	46 e2       	ldi	r20, 0x26	; 38
    4528:	6a e1       	ldi	r22, 0x1A	; 26
    452a:	84 e2       	ldi	r24, 0x24	; 36
    452c:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
    4530:	08 95       	ret

00004532 <wind_speed>:
	
	return VBAT;
}
//Вычисление скорости ветра
float wind_speed (char *counter)
{
    4532:	cf 93       	push	r28
    4534:	df 93       	push	r29
    4536:	00 d0       	rcall	.+0      	; 0x4538 <wind_speed+0x6>
    4538:	cd b7       	in	r28, 0x3d	; 61
    453a:	de b7       	in	r29, 0x3e	; 62
	float RADIUS = 0.09;
	float speed = 0;
	int n;
	if (strlen(counter) != 0)
    453c:	fc 01       	movw	r30, r24
    453e:	20 81       	ld	r18, Z
    4540:	22 23       	and	r18, r18
    4542:	a1 f0       	breq	.+40     	; 0x456c <wind_speed+0x3a>
	{
		sscanf(counter, "%d", &n);
    4544:	9e 01       	movw	r18, r28
    4546:	2f 5f       	subi	r18, 0xFF	; 255
    4548:	3f 4f       	sbci	r19, 0xFF	; 255
    454a:	3f 93       	push	r19
    454c:	2f 93       	push	r18
    454e:	24 e9       	ldi	r18, 0x94	; 148
    4550:	31 e0       	ldi	r19, 0x01	; 1
    4552:	3f 93       	push	r19
    4554:	2f 93       	push	r18
    4556:	9f 93       	push	r25
    4558:	8f 93       	push	r24
    455a:	0e 94 c6 2c 	call	0x598c	; 0x598c <sscanf>
    455e:	0f 90       	pop	r0
    4560:	0f 90       	pop	r0
    4562:	0f 90       	pop	r0
    4564:	0f 90       	pop	r0
    4566:	0f 90       	pop	r0
    4568:	0f 90       	pop	r0
    456a:	02 c0       	rjmp	.+4      	; 0x4570 <wind_speed+0x3e>
	}
	else
	{
		n = 0;
    456c:	1a 82       	std	Y+2, r1	; 0x02
    456e:	19 82       	std	Y+1, r1	; 0x01
	}
	speed = 2*3.14*RADIUS*n/4; //период 2 сек+2 магнита
    4570:	69 81       	ldd	r22, Y+1	; 0x01
    4572:	7a 81       	ldd	r23, Y+2	; 0x02
    4574:	07 2e       	mov	r0, r23
    4576:	00 0c       	add	r0, r0
    4578:	88 0b       	sbc	r24, r24
    457a:	99 0b       	sbc	r25, r25
    457c:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    4580:	23 ef       	ldi	r18, 0xF3	; 243
    4582:	30 eb       	ldi	r19, 0xB0	; 176
    4584:	40 e1       	ldi	r20, 0x10	; 16
    4586:	5f e3       	ldi	r21, 0x3F	; 63
    4588:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
    458c:	20 e0       	ldi	r18, 0x00	; 0
    458e:	30 e0       	ldi	r19, 0x00	; 0
    4590:	40 e8       	ldi	r20, 0x80	; 128
    4592:	5e e3       	ldi	r21, 0x3E	; 62
    4594:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
	
	return speed;
    4598:	0f 90       	pop	r0
    459a:	0f 90       	pop	r0
    459c:	df 91       	pop	r29
    459e:	cf 91       	pop	r28
    45a0:	08 95       	ret

000045a2 <Print_Home_Page>:
	}	
	LCD_12864_GrapnicMode(0);
}
//Главное окно
void Print_Home_Page(uint8_t *Frame_buffer)
{
    45a2:	0f 93       	push	r16
    45a4:	1f 93       	push	r17
    45a6:	cf 93       	push	r28
    45a8:	df 93       	push	r29
    45aa:	ec 01       	movw	r28, r24
	LCD_12864_GrapnicMode(1);
    45ac:	81 e0       	ldi	r24, 0x01	; 1
    45ae:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
	LCD_12864_Clean_Frame_buffer();
    45b2:	0e 94 95 0a 	call	0x152a	; 0x152a <LCD_12864_Clean_Frame_buffer>
	//-----------Вывод времени/даты-------------------------------//
	Clock();
    45b6:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <Clock>
	sprintf(TIME,"%s:%s",hours, minutes);
    45ba:	80 ed       	ldi	r24, 0xD0	; 208
    45bc:	96 e0       	ldi	r25, 0x06	; 6
    45be:	9f 93       	push	r25
    45c0:	8f 93       	push	r24
    45c2:	84 ed       	ldi	r24, 0xD4	; 212
    45c4:	96 e0       	ldi	r25, 0x06	; 6
    45c6:	9f 93       	push	r25
    45c8:	8f 93       	push	r24
    45ca:	87 e9       	ldi	r24, 0x97	; 151
    45cc:	91 e0       	ldi	r25, 0x01	; 1
    45ce:	9f 93       	push	r25
    45d0:	8f 93       	push	r24
    45d2:	8e eb       	ldi	r24, 0xBE	; 190
    45d4:	96 e0       	ldi	r25, 0x06	; 6
    45d6:	9f 93       	push	r25
    45d8:	8f 93       	push	r24
    45da:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
	LCD_12864_Print_11_16(2, 0, 0, TIME);
    45de:	2e eb       	ldi	r18, 0xBE	; 190
    45e0:	36 e0       	ldi	r19, 0x06	; 6
    45e2:	40 e0       	ldi	r20, 0x00	; 0
    45e4:	60 e0       	ldi	r22, 0x00	; 0
    45e6:	82 e0       	ldi	r24, 0x02	; 2
    45e8:	90 e0       	ldi	r25, 0x00	; 0
    45ea:	0e 94 19 09 	call	0x1232	; 0x1232 <LCD_12864_Print_11_16>
	//LCD_12864_Decode_UTF8(73, 0, 0, "День");
	//LCD_12864_Decode_UTF8(99, 0, 0, "Месяц");
	//LCD_12864_Decode_UTF8(73, 1, 0, mounthday);
	//LCD_12864_Decode_UTF8(85, 1, 0, weakday);
	//LCD_12864_Decode_UTF8(99, 1, 0, Mounth);
	LCD_12864_Decode_UTF8(61, 1, 0, weakday);
    45ee:	28 ed       	ldi	r18, 0xD8	; 216
    45f0:	36 e0       	ldi	r19, 0x06	; 6
    45f2:	40 e0       	ldi	r20, 0x00	; 0
    45f4:	61 e0       	ldi	r22, 0x01	; 1
    45f6:	8d e3       	ldi	r24, 0x3D	; 61
    45f8:	90 e0       	ldi	r25, 0x00	; 0
    45fa:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(73, 1, 0, ",");
    45fe:	2d e9       	ldi	r18, 0x9D	; 157
    4600:	31 e0       	ldi	r19, 0x01	; 1
    4602:	40 e0       	ldi	r20, 0x00	; 0
    4604:	61 e0       	ldi	r22, 0x01	; 1
    4606:	89 e4       	ldi	r24, 0x49	; 73
    4608:	90 e0       	ldi	r25, 0x00	; 0
    460a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(76, 1, 0, mounthday);
    460e:	25 ee       	ldi	r18, 0xE5	; 229
    4610:	36 e0       	ldi	r19, 0x06	; 6
    4612:	40 e0       	ldi	r20, 0x00	; 0
    4614:	61 e0       	ldi	r22, 0x01	; 1
    4616:	8c e4       	ldi	r24, 0x4C	; 76
    4618:	90 e0       	ldi	r25, 0x00	; 0
    461a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(88, 1, 0, "/");
    461e:	2f e9       	ldi	r18, 0x9F	; 159
    4620:	31 e0       	ldi	r19, 0x01	; 1
    4622:	40 e0       	ldi	r20, 0x00	; 0
    4624:	61 e0       	ldi	r22, 0x01	; 1
    4626:	88 e5       	ldi	r24, 0x58	; 88
    4628:	90 e0       	ldi	r25, 0x00	; 0
    462a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(93, 1, 0, Mounth);
    462e:	2e ed       	ldi	r18, 0xDE	; 222
    4630:	36 e0       	ldi	r19, 0x06	; 6
    4632:	40 e0       	ldi	r20, 0x00	; 0
    4634:	61 e0       	ldi	r22, 0x01	; 1
    4636:	8d e5       	ldi	r24, 0x5D	; 93
    4638:	90 e0       	ldi	r25, 0x00	; 0
    463a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(111, 1, 0, "/");
    463e:	2f e9       	ldi	r18, 0x9F	; 159
    4640:	31 e0       	ldi	r19, 0x01	; 1
    4642:	40 e0       	ldi	r20, 0x00	; 0
    4644:	61 e0       	ldi	r22, 0x01	; 1
    4646:	8f e6       	ldi	r24, 0x6F	; 111
    4648:	90 e0       	ldi	r25, 0x00	; 0
    464a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(116, 1, 0, "22");
    464e:	21 ea       	ldi	r18, 0xA1	; 161
    4650:	31 e0       	ldi	r19, 0x01	; 1
    4652:	40 e0       	ldi	r20, 0x00	; 0
    4654:	61 e0       	ldi	r22, 0x01	; 1
    4656:	84 e7       	ldi	r24, 0x74	; 116
    4658:	90 e0       	ldi	r25, 0x00	; 0
    465a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	
	//-----------Вывод уличных показателей-----------------------//
	LCD_12864_Decode_UTF8(30, 4, 0, "°C");
    465e:	24 ea       	ldi	r18, 0xA4	; 164
    4660:	31 e0       	ldi	r19, 0x01	; 1
    4662:	40 e0       	ldi	r20, 0x00	; 0
    4664:	64 e0       	ldi	r22, 0x04	; 4
    4666:	8e e1       	ldi	r24, 0x1E	; 30
    4668:	90 e0       	ldi	r25, 0x00	; 0
    466a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(58, 4, 0, "%");
    466e:	27 ea       	ldi	r18, 0xA7	; 167
    4670:	31 e0       	ldi	r19, 0x01	; 1
    4672:	40 e0       	ldi	r20, 0x00	; 0
    4674:	64 e0       	ldi	r22, 0x04	; 4
    4676:	8a e3       	ldi	r24, 0x3A	; 58
    4678:	90 e0       	ldi	r25, 0x00	; 0
    467a:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(1, 3, 0, temp_street);
    467e:	27 e8       	ldi	r18, 0x87	; 135
    4680:	32 e0       	ldi	r19, 0x02	; 2
    4682:	40 e0       	ldi	r20, 0x00	; 0
    4684:	63 e0       	ldi	r22, 0x03	; 3
    4686:	81 e0       	ldi	r24, 0x01	; 1
    4688:	90 e0       	ldi	r25, 0x00	; 0
    468a:	0e 94 37 08 	call	0x106e	; 0x106e <LCD_12864_Print_7_11>
	LCD_12864_Print_7_11(43, 3, 0, hum_street);
    468e:	2d e7       	ldi	r18, 0x7D	; 125
    4690:	32 e0       	ldi	r19, 0x02	; 2
    4692:	40 e0       	ldi	r20, 0x00	; 0
    4694:	63 e0       	ldi	r22, 0x03	; 3
    4696:	8b e2       	ldi	r24, 0x2B	; 43
    4698:	90 e0       	ldi	r25, 0x00	; 0
    469a:	0e 94 37 08 	call	0x106e	; 0x106e <LCD_12864_Print_7_11>
	sprintf(Vbat,"%.2f",V_BAT(adc_value1));
    469e:	81 e4       	ldi	r24, 0x41	; 65
    46a0:	92 e0       	ldi	r25, 0x02	; 2
    46a2:	0e 94 23 21 	call	0x4246	; 0x4246 <V_BAT>
    46a6:	9f 93       	push	r25
    46a8:	8f 93       	push	r24
    46aa:	7f 93       	push	r23
    46ac:	6f 93       	push	r22
    46ae:	09 ea       	ldi	r16, 0xA9	; 169
    46b0:	11 e0       	ldi	r17, 0x01	; 1
    46b2:	1f 93       	push	r17
    46b4:	0f 93       	push	r16
    46b6:	8d e2       	ldi	r24, 0x2D	; 45
    46b8:	92 e0       	ldi	r25, 0x02	; 2
    46ba:	9f 93       	push	r25
    46bc:	8f 93       	push	r24
    46be:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
	LCD_12864_Print_4_6(44, 2, 0, Vbat);
    46c2:	2d e2       	ldi	r18, 0x2D	; 45
    46c4:	32 e0       	ldi	r19, 0x02	; 2
    46c6:	40 e0       	ldi	r20, 0x00	; 0
    46c8:	62 e0       	ldi	r22, 0x02	; 2
    46ca:	8c e2       	ldi	r24, 0x2C	; 44
    46cc:	90 e0       	ldi	r25, 0x00	; 0
    46ce:	0e 94 a8 08 	call	0x1150	; 0x1150 <LCD_12864_Print_4_6>
	sprintf(WIND_speed,"%.2f", wind_speed (HALL_counter));
    46d2:	8f e5       	ldi	r24, 0x5F	; 95
    46d4:	92 e0       	ldi	r25, 0x02	; 2
    46d6:	0e 94 99 22 	call	0x4532	; 0x4532 <wind_speed>
    46da:	9f 93       	push	r25
    46dc:	8f 93       	push	r24
    46de:	7f 93       	push	r23
    46e0:	6f 93       	push	r22
    46e2:	1f 93       	push	r17
    46e4:	0f 93       	push	r16
    46e6:	85 e5       	ldi	r24, 0x55	; 85
    46e8:	92 e0       	ldi	r25, 0x02	; 2
    46ea:	9f 93       	push	r25
    46ec:	8f 93       	push	r24
    46ee:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
	LCD_12864_Print_4_6(26, 5, 0, WIND_speed);
    46f2:	25 e5       	ldi	r18, 0x55	; 85
    46f4:	32 e0       	ldi	r19, 0x02	; 2
    46f6:	40 e0       	ldi	r20, 0x00	; 0
    46f8:	65 e0       	ldi	r22, 0x05	; 5
    46fa:	8a e1       	ldi	r24, 0x1A	; 26
    46fc:	90 e0       	ldi	r25, 0x00	; 0
    46fe:	0e 94 a8 08 	call	0x1150	; 0x1150 <LCD_12864_Print_4_6>
	LCD_12864_Decode_UTF8(45, 5, 0, "м/с");
    4702:	2e ea       	ldi	r18, 0xAE	; 174
    4704:	31 e0       	ldi	r19, 0x01	; 1
    4706:	40 e0       	ldi	r20, 0x00	; 0
    4708:	65 e0       	ldi	r22, 0x05	; 5
    470a:	8d e2       	ldi	r24, 0x2D	; 45
    470c:	90 e0       	ldi	r25, 0x00	; 0
    470e:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(30, 6, 0, "осадки");
    4712:	22 eb       	ldi	r18, 0xB2	; 178
    4714:	31 e0       	ldi	r19, 0x01	; 1
    4716:	40 e0       	ldi	r20, 0x00	; 0
    4718:	66 e0       	ldi	r22, 0x06	; 6
    471a:	8e e1       	ldi	r24, 0x1E	; 30
    471c:	90 e0       	ldi	r25, 0x00	; 0
    471e:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_line(27, 52, 24, 52);
    4722:	24 e3       	ldi	r18, 0x34	; 52
    4724:	48 e1       	ldi	r20, 0x18	; 24
    4726:	64 e3       	ldi	r22, 0x34	; 52
    4728:	8b e1       	ldi	r24, 0x1B	; 27
    472a:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(24, 52, 24, 59);
    472e:	2b e3       	ldi	r18, 0x3B	; 59
    4730:	48 e1       	ldi	r20, 0x18	; 24
    4732:	64 e3       	ldi	r22, 0x34	; 52
    4734:	88 e1       	ldi	r24, 0x18	; 24
    4736:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(24, 59, 28, 59);
    473a:	2b e3       	ldi	r18, 0x3B	; 59
    473c:	4c e1       	ldi	r20, 0x1C	; 28
    473e:	6b e3       	ldi	r22, 0x3B	; 59
    4740:	88 e1       	ldi	r24, 0x18	; 24
    4742:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_pixel(27, 58);
    4746:	6a e3       	ldi	r22, 0x3A	; 58
    4748:	8b e1       	ldi	r24, 0x1B	; 27
    474a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(27, 60);
    474e:	6c e3       	ldi	r22, 0x3C	; 60
    4750:	8b e1       	ldi	r24, 0x1B	; 27
    4752:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(26, 57);
    4756:	69 e3       	ldi	r22, 0x39	; 57
    4758:	8a e1       	ldi	r24, 0x1A	; 26
    475a:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	LCD_12864_Draw_pixel(26, 61);
    475e:	6d e3       	ldi	r22, 0x3D	; 61
    4760:	8a e1       	ldi	r24, 0x1A	; 26
    4762:	0e 94 03 04 	call	0x806	; 0x806 <LCD_12864_Draw_pixel>
	if (RAIN_AMOUNT(adc_value2) >= 0.9f)  LCD_12864_Decode_UTF8(30, 7, 0, "отсутств.");
    4766:	87 e3       	ldi	r24, 0x37	; 55
    4768:	92 e0       	ldi	r25, 0x02	; 2
    476a:	0e 94 e6 20 	call	0x41cc	; 0x41cc <RAIN_AMOUNT>
    476e:	2d b7       	in	r18, 0x3d	; 61
    4770:	3e b7       	in	r19, 0x3e	; 62
    4772:	28 5e       	subi	r18, 0xE8	; 232
    4774:	3f 4f       	sbci	r19, 0xFF	; 255
    4776:	0f b6       	in	r0, 0x3f	; 63
    4778:	f8 94       	cli
    477a:	3e bf       	out	0x3e, r19	; 62
    477c:	0f be       	out	0x3f, r0	; 63
    477e:	2d bf       	out	0x3d, r18	; 61
    4780:	26 e6       	ldi	r18, 0x66	; 102
    4782:	36 e6       	ldi	r19, 0x66	; 102
    4784:	46 e6       	ldi	r20, 0x66	; 102
    4786:	5f e3       	ldi	r21, 0x3F	; 63
    4788:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__gesf2>
    478c:	88 23       	and	r24, r24
    478e:	44 f0       	brlt	.+16     	; 0x47a0 <Print_Home_Page+0x1fe>
    4790:	29 eb       	ldi	r18, 0xB9	; 185
    4792:	31 e0       	ldi	r19, 0x01	; 1
    4794:	40 e0       	ldi	r20, 0x00	; 0
    4796:	67 e0       	ldi	r22, 0x07	; 7
    4798:	8e e1       	ldi	r24, 0x1E	; 30
    479a:	90 e0       	ldi	r25, 0x00	; 0
    479c:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	

	//-----------Вывод показателей в доме-----------------------//
	if (dht22_GetData(data))
    47a0:	88 ed       	ldi	r24, 0xD8	; 216
    47a2:	91 e0       	ldi	r25, 0x01	; 1
    47a4:	0e 94 98 03 	call	0x730	; 0x730 <dht22_GetData>
    47a8:	88 23       	and	r24, r24
    47aa:	09 f4       	brne	.+2      	; 0x47ae <Print_Home_Page+0x20c>
    47ac:	72 c0       	rjmp	.+228    	; 0x4892 <Print_Home_Page+0x2f0>
	{
		 //data[1]-младший бит температуры
		 //data[2]-старший бит температуры
		 //data[3]-младший бит влажности
		 //data[4]-старший бит влажности
		 temp = (float)(((data[2]<<8)|data[1]) / 10.0);
    47ae:	e8 ed       	ldi	r30, 0xD8	; 216
    47b0:	f1 e0       	ldi	r31, 0x01	; 1
    47b2:	02 81       	ldd	r16, Z+2	; 0x02
    47b4:	10 e0       	ldi	r17, 0x00	; 0
    47b6:	10 2f       	mov	r17, r16
    47b8:	00 27       	eor	r16, r16
    47ba:	81 81       	ldd	r24, Z+1	; 0x01
    47bc:	08 2b       	or	r16, r24
    47be:	b8 01       	movw	r22, r16
    47c0:	01 2e       	mov	r0, r17
    47c2:	00 0c       	add	r0, r0
    47c4:	88 0b       	sbc	r24, r24
    47c6:	99 0b       	sbc	r25, r25
    47c8:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    47cc:	20 e0       	ldi	r18, 0x00	; 0
    47ce:	30 e0       	ldi	r19, 0x00	; 0
    47d0:	40 e2       	ldi	r20, 0x20	; 32
    47d2:	51 e4       	ldi	r21, 0x41	; 65
    47d4:	0e 94 66 25 	call	0x4acc	; 0x4acc <__divsf3>
    47d8:	60 93 e3 01 	sts	0x01E3, r22	; 0x8001e3 <temp>
    47dc:	70 93 e4 01 	sts	0x01E4, r23	; 0x8001e4 <temp+0x1>
    47e0:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <temp+0x2>
    47e4:	90 93 e6 01 	sts	0x01E6, r25	; 0x8001e6 <temp+0x3>
		 if (((data[2]<<8)|data[1]) & 0x8000) temp *= -1.0;
    47e8:	11 23       	and	r17, r17
    47ea:	5c f4       	brge	.+22     	; 0x4802 <Print_Home_Page+0x260>
    47ec:	dc 01       	movw	r26, r24
    47ee:	cb 01       	movw	r24, r22
    47f0:	b0 58       	subi	r27, 0x80	; 128
    47f2:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <temp>
    47f6:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <temp+0x1>
    47fa:	a0 93 e5 01 	sts	0x01E5, r26	; 0x8001e5 <temp+0x2>
    47fe:	b0 93 e6 01 	sts	0x01E6, r27	; 0x8001e6 <temp+0x3>
		 sprintf(temp_home,"%.1f",temp);
    4802:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <temp+0x3>
    4806:	8f 93       	push	r24
    4808:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <temp+0x2>
    480c:	8f 93       	push	r24
    480e:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <temp+0x1>
    4812:	8f 93       	push	r24
    4814:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <temp>
    4818:	8f 93       	push	r24
    481a:	8a e3       	ldi	r24, 0x3A	; 58
    481c:	91 e0       	ldi	r25, 0x01	; 1
    481e:	9f 93       	push	r25
    4820:	8f 93       	push	r24
    4822:	83 e7       	ldi	r24, 0x73	; 115
    4824:	92 e0       	ldi	r25, 0x02	; 2
    4826:	9f 93       	push	r25
    4828:	8f 93       	push	r24
    482a:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
		 hum = (float)(((data[4]<<8)|data[3]) / 10.0);
    482e:	e8 ed       	ldi	r30, 0xD8	; 216
    4830:	f1 e0       	ldi	r31, 0x01	; 1
    4832:	64 81       	ldd	r22, Z+4	; 0x04
    4834:	70 e0       	ldi	r23, 0x00	; 0
    4836:	76 2f       	mov	r23, r22
    4838:	66 27       	eor	r22, r22
    483a:	83 81       	ldd	r24, Z+3	; 0x03
    483c:	68 2b       	or	r22, r24
    483e:	07 2e       	mov	r0, r23
    4840:	00 0c       	add	r0, r0
    4842:	88 0b       	sbc	r24, r24
    4844:	99 0b       	sbc	r25, r25
    4846:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    484a:	20 e0       	ldi	r18, 0x00	; 0
    484c:	30 e0       	ldi	r19, 0x00	; 0
    484e:	40 e2       	ldi	r20, 0x20	; 32
    4850:	51 e4       	ldi	r21, 0x41	; 65
    4852:	0e 94 66 25 	call	0x4acc	; 0x4acc <__divsf3>
    4856:	60 93 df 01 	sts	0x01DF, r22	; 0x8001df <hum>
    485a:	70 93 e0 01 	sts	0x01E0, r23	; 0x8001e0 <hum+0x1>
    485e:	80 93 e1 01 	sts	0x01E1, r24	; 0x8001e1 <hum+0x2>
    4862:	90 93 e2 01 	sts	0x01E2, r25	; 0x8001e2 <hum+0x3>
		 sprintf(hum_home,"%d",(int)hum);
    4866:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <__fixsfsi>
    486a:	7f 93       	push	r23
    486c:	6f 93       	push	r22
    486e:	84 e9       	ldi	r24, 0x94	; 148
    4870:	91 e0       	ldi	r25, 0x01	; 1
    4872:	9f 93       	push	r25
    4874:	8f 93       	push	r24
    4876:	89 e6       	ldi	r24, 0x69	; 105
    4878:	92 e0       	ldi	r25, 0x02	; 2
    487a:	9f 93       	push	r25
    487c:	8f 93       	push	r24
    487e:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
    4882:	8d b7       	in	r24, 0x3d	; 61
    4884:	9e b7       	in	r25, 0x3e	; 62
    4886:	0e 96       	adiw	r24, 0x0e	; 14
    4888:	0f b6       	in	r0, 0x3f	; 63
    488a:	f8 94       	cli
    488c:	9e bf       	out	0x3e, r25	; 62
    488e:	0f be       	out	0x3f, r0	; 63
    4890:	8d bf       	out	0x3d, r24	; 61
	}
	pressure_home = BMP180_calculation()*0.0075;
    4892:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <BMP180_calculation>
    4896:	0e 94 10 26 	call	0x4c20	; 0x4c20 <__floatsisf>
    489a:	2f e8       	ldi	r18, 0x8F	; 143
    489c:	32 ec       	ldi	r19, 0xC2	; 194
    489e:	45 ef       	ldi	r20, 0xF5	; 245
    48a0:	5b e3       	ldi	r21, 0x3B	; 59
    48a2:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__mulsf3>
    48a6:	0e 94 d8 25 	call	0x4bb0	; 0x4bb0 <__fixsfsi>
    48aa:	60 93 dd 01 	sts	0x01DD, r22	; 0x8001dd <pressure_home>
    48ae:	70 93 de 01 	sts	0x01DE, r23	; 0x8001de <pressure_home+0x1>
	sprintf(Press_home,"%d",pressure_home);
    48b2:	7f 93       	push	r23
    48b4:	6f 93       	push	r22
    48b6:	84 e9       	ldi	r24, 0x94	; 148
    48b8:	91 e0       	ldi	r25, 0x01	; 1
    48ba:	9f 93       	push	r25
    48bc:	8f 93       	push	r24
    48be:	87 ee       	ldi	r24, 0xE7	; 231
    48c0:	91 e0       	ldi	r25, 0x01	; 1
    48c2:	9f 93       	push	r25
    48c4:	8f 93       	push	r24
    48c6:	0e 94 a4 2c 	call	0x5948	; 0x5948 <sprintf>
	LCD_12864_Decode_UTF8(95, 4, 0, "°C");
    48ca:	24 ea       	ldi	r18, 0xA4	; 164
    48cc:	31 e0       	ldi	r19, 0x01	; 1
    48ce:	40 e0       	ldi	r20, 0x00	; 0
    48d0:	64 e0       	ldi	r22, 0x04	; 4
    48d2:	8f e5       	ldi	r24, 0x5F	; 95
    48d4:	90 e0       	ldi	r25, 0x00	; 0
    48d6:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(66, 3, 0, temp_home);
    48da:	23 e7       	ldi	r18, 0x73	; 115
    48dc:	32 e0       	ldi	r19, 0x02	; 2
    48de:	40 e0       	ldi	r20, 0x00	; 0
    48e0:	63 e0       	ldi	r22, 0x03	; 3
    48e2:	82 e4       	ldi	r24, 0x42	; 66
    48e4:	90 e0       	ldi	r25, 0x00	; 0
    48e6:	0e 94 37 08 	call	0x106e	; 0x106e <LCD_12864_Print_7_11>
	LCD_12864_Decode_UTF8(123, 4, 0, "%");
    48ea:	27 ea       	ldi	r18, 0xA7	; 167
    48ec:	31 e0       	ldi	r19, 0x01	; 1
    48ee:	40 e0       	ldi	r20, 0x00	; 0
    48f0:	64 e0       	ldi	r22, 0x04	; 4
    48f2:	8b e7       	ldi	r24, 0x7B	; 123
    48f4:	90 e0       	ldi	r25, 0x00	; 0
    48f6:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Print_7_11(108, 3, 0, hum_home);
    48fa:	29 e6       	ldi	r18, 0x69	; 105
    48fc:	32 e0       	ldi	r19, 0x02	; 2
    48fe:	40 e0       	ldi	r20, 0x00	; 0
    4900:	63 e0       	ldi	r22, 0x03	; 3
    4902:	8c e6       	ldi	r24, 0x6C	; 108
    4904:	90 e0       	ldi	r25, 0x00	; 0
    4906:	0e 94 37 08 	call	0x106e	; 0x106e <LCD_12864_Print_7_11>
	LCD_12864_Print_4_6(86, 2, 0, Press_home);
    490a:	27 ee       	ldi	r18, 0xE7	; 231
    490c:	31 e0       	ldi	r19, 0x01	; 1
    490e:	40 e0       	ldi	r20, 0x00	; 0
    4910:	62 e0       	ldi	r22, 0x02	; 2
    4912:	86 e5       	ldi	r24, 0x56	; 86
    4914:	90 e0       	ldi	r25, 0x00	; 0
    4916:	0e 94 a8 08 	call	0x1150	; 0x1150 <LCD_12864_Print_4_6>
	LCD_12864_Decode_UTF8(101, 2, 0, "мм");
    491a:	23 ec       	ldi	r18, 0xC3	; 195
    491c:	31 e0       	ldi	r19, 0x01	; 1
    491e:	40 e0       	ldi	r20, 0x00	; 0
    4920:	62 e0       	ldi	r22, 0x02	; 2
    4922:	85 e6       	ldi	r24, 0x65	; 101
    4924:	90 e0       	ldi	r25, 0x00	; 0
    4926:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(114, 2, 0, "Hg");
    492a:	26 ec       	ldi	r18, 0xC6	; 198
    492c:	31 e0       	ldi	r19, 0x01	; 1
    492e:	40 e0       	ldi	r20, 0x00	; 0
    4930:	62 e0       	ldi	r22, 0x02	; 2
    4932:	82 e7       	ldi	r24, 0x72	; 114
    4934:	90 e0       	ldi	r25, 0x00	; 0
    4936:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	
	//-----------Вывод разделительных линий-----------------------//
	LCD_12864_Decode_UTF8(2, 2, 0, "улица");
    493a:	29 ec       	ldi	r18, 0xC9	; 201
    493c:	31 e0       	ldi	r19, 0x01	; 1
    493e:	40 e0       	ldi	r20, 0x00	; 0
    4940:	62 e0       	ldi	r22, 0x02	; 2
    4942:	82 e0       	ldi	r24, 0x02	; 2
    4944:	90 e0       	ldi	r25, 0x00	; 0
    4946:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Decode_UTF8(65, 2, 0, "дом");
    494a:	2f ec       	ldi	r18, 0xCF	; 207
    494c:	31 e0       	ldi	r19, 0x01	; 1
    494e:	40 e0       	ldi	r20, 0x00	; 0
    4950:	62 e0       	ldi	r22, 0x02	; 2
    4952:	81 e4       	ldi	r24, 0x41	; 65
    4954:	90 e0       	ldi	r25, 0x00	; 0
    4956:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_12864_Decode_UTF8>
	LCD_12864_Draw_line(0, 16, 128, 16);
    495a:	20 e1       	ldi	r18, 0x10	; 16
    495c:	40 e8       	ldi	r20, 0x80	; 128
    495e:	60 e1       	ldi	r22, 0x10	; 16
    4960:	80 e0       	ldi	r24, 0x00	; 0
    4962:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	//LCD_12864_Draw_line(71, 0, 71, 15);
	//LCD_12864_Draw_line(97, 0, 97, 15);
	LCD_12864_Draw_line(0, 24, 32, 24);
    4966:	28 e1       	ldi	r18, 0x18	; 24
    4968:	40 e2       	ldi	r20, 0x20	; 32
    496a:	68 e1       	ldi	r22, 0x18	; 24
    496c:	80 e0       	ldi	r24, 0x00	; 0
    496e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(32, 17, 32, 24);
    4972:	28 e1       	ldi	r18, 0x18	; 24
    4974:	40 e2       	ldi	r20, 0x20	; 32
    4976:	61 e1       	ldi	r22, 0x11	; 17
    4978:	80 e2       	ldi	r24, 0x20	; 32
    497a:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(0, 17, 0, 24);
    497e:	28 e1       	ldi	r18, 0x18	; 24
    4980:	40 e0       	ldi	r20, 0x00	; 0
    4982:	61 e1       	ldi	r22, 0x11	; 17
    4984:	80 e0       	ldi	r24, 0x00	; 0
    4986:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(64, 24, 83, 24);
    498a:	28 e1       	ldi	r18, 0x18	; 24
    498c:	43 e5       	ldi	r20, 0x53	; 83
    498e:	68 e1       	ldi	r22, 0x18	; 24
    4990:	80 e4       	ldi	r24, 0x40	; 64
    4992:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(83, 17, 83, 24);
    4996:	28 e1       	ldi	r18, 0x18	; 24
    4998:	43 e5       	ldi	r20, 0x53	; 83
    499a:	61 e1       	ldi	r22, 0x11	; 17
    499c:	83 e5       	ldi	r24, 0x53	; 83
    499e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(63, 17, 63, 41);
    49a2:	29 e2       	ldi	r18, 0x29	; 41
    49a4:	4f e3       	ldi	r20, 0x3F	; 63
    49a6:	61 e1       	ldi	r22, 0x11	; 17
    49a8:	8f e3       	ldi	r24, 0x3F	; 63
    49aa:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	LCD_12864_Draw_line(63, 41, 128, 41);
    49ae:	29 e2       	ldi	r18, 0x29	; 41
    49b0:	40 e8       	ldi	r20, 0x80	; 128
    49b2:	69 e2       	ldi	r22, 0x29	; 41
    49b4:	8f e3       	ldi	r24, 0x3F	; 63
    49b6:	0e 94 a0 0a 	call	0x1540	; 0x1540 <LCD_12864_Draw_line>
	//-----------Вывод индикатора АКБ-----------------------//
	DrawBattery();
    49ba:	0e 94 61 21 	call	0x42c2	; 0x42c2 <DrawBattery>
	//-----------Вывод индикатора флюгера-----------------------//
	DrawWeatherVane();
    49be:	0e 94 b8 1b 	call	0x3770	; 0x3770 <DrawWeatherVane>
	//-----------Вывод прогноза погоды-----------------------//
	DrawCloudsWithRain();
    49c2:	0e 94 6f 1a 	call	0x34de	; 0x34de <DrawCloudsWithRain>
	
	LCD_12864_Draw_bitmap(Frame_buffer);
    49c6:	ce 01       	movw	r24, r28
    49c8:	0e 94 25 05 	call	0xa4a	; 0xa4a <LCD_12864_Draw_bitmap>
	LCD_12864_GrapnicMode(0);
    49cc:	80 e0       	ldi	r24, 0x00	; 0
    49ce:	0e 94 06 05 	call	0xa0c	; 0xa0c <LCD_12864_GrapnicMode>
}
    49d2:	0f 90       	pop	r0
    49d4:	0f 90       	pop	r0
    49d6:	0f 90       	pop	r0
    49d8:	0f 90       	pop	r0
    49da:	0f 90       	pop	r0
    49dc:	0f 90       	pop	r0
    49de:	df 91       	pop	r29
    49e0:	cf 91       	pop	r28
    49e2:	1f 91       	pop	r17
    49e4:	0f 91       	pop	r16
    49e6:	08 95       	ret

000049e8 <__subsf3>:
    49e8:	50 58       	subi	r21, 0x80	; 128

000049ea <__addsf3>:
    49ea:	bb 27       	eor	r27, r27
    49ec:	aa 27       	eor	r26, r26
    49ee:	0e 94 0c 25 	call	0x4a18	; 0x4a18 <__addsf3x>
    49f2:	0c 94 86 26 	jmp	0x4d0c	; 0x4d0c <__fp_round>
    49f6:	0e 94 78 26 	call	0x4cf0	; 0x4cf0 <__fp_pscA>
    49fa:	38 f0       	brcs	.+14     	; 0x4a0a <__addsf3+0x20>
    49fc:	0e 94 7f 26 	call	0x4cfe	; 0x4cfe <__fp_pscB>
    4a00:	20 f0       	brcs	.+8      	; 0x4a0a <__addsf3+0x20>
    4a02:	39 f4       	brne	.+14     	; 0x4a12 <__addsf3+0x28>
    4a04:	9f 3f       	cpi	r25, 0xFF	; 255
    4a06:	19 f4       	brne	.+6      	; 0x4a0e <__addsf3+0x24>
    4a08:	26 f4       	brtc	.+8      	; 0x4a12 <__addsf3+0x28>
    4a0a:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__fp_nan>
    4a0e:	0e f4       	brtc	.+2      	; 0x4a12 <__addsf3+0x28>
    4a10:	e0 95       	com	r30
    4a12:	e7 fb       	bst	r30, 7
    4a14:	0c 94 6f 26 	jmp	0x4cde	; 0x4cde <__fp_inf>

00004a18 <__addsf3x>:
    4a18:	e9 2f       	mov	r30, r25
    4a1a:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <__fp_split3>
    4a1e:	58 f3       	brcs	.-42     	; 0x49f6 <__addsf3+0xc>
    4a20:	ba 17       	cp	r27, r26
    4a22:	62 07       	cpc	r22, r18
    4a24:	73 07       	cpc	r23, r19
    4a26:	84 07       	cpc	r24, r20
    4a28:	95 07       	cpc	r25, r21
    4a2a:	20 f0       	brcs	.+8      	; 0x4a34 <__addsf3x+0x1c>
    4a2c:	79 f4       	brne	.+30     	; 0x4a4c <__addsf3x+0x34>
    4a2e:	a6 f5       	brtc	.+104    	; 0x4a98 <__addsf3x+0x80>
    4a30:	0c 94 b9 26 	jmp	0x4d72	; 0x4d72 <__fp_zero>
    4a34:	0e f4       	brtc	.+2      	; 0x4a38 <__addsf3x+0x20>
    4a36:	e0 95       	com	r30
    4a38:	0b 2e       	mov	r0, r27
    4a3a:	ba 2f       	mov	r27, r26
    4a3c:	a0 2d       	mov	r26, r0
    4a3e:	0b 01       	movw	r0, r22
    4a40:	b9 01       	movw	r22, r18
    4a42:	90 01       	movw	r18, r0
    4a44:	0c 01       	movw	r0, r24
    4a46:	ca 01       	movw	r24, r20
    4a48:	a0 01       	movw	r20, r0
    4a4a:	11 24       	eor	r1, r1
    4a4c:	ff 27       	eor	r31, r31
    4a4e:	59 1b       	sub	r21, r25
    4a50:	99 f0       	breq	.+38     	; 0x4a78 <__addsf3x+0x60>
    4a52:	59 3f       	cpi	r21, 0xF9	; 249
    4a54:	50 f4       	brcc	.+20     	; 0x4a6a <__addsf3x+0x52>
    4a56:	50 3e       	cpi	r21, 0xE0	; 224
    4a58:	68 f1       	brcs	.+90     	; 0x4ab4 <__addsf3x+0x9c>
    4a5a:	1a 16       	cp	r1, r26
    4a5c:	f0 40       	sbci	r31, 0x00	; 0
    4a5e:	a2 2f       	mov	r26, r18
    4a60:	23 2f       	mov	r18, r19
    4a62:	34 2f       	mov	r19, r20
    4a64:	44 27       	eor	r20, r20
    4a66:	58 5f       	subi	r21, 0xF8	; 248
    4a68:	f3 cf       	rjmp	.-26     	; 0x4a50 <__addsf3x+0x38>
    4a6a:	46 95       	lsr	r20
    4a6c:	37 95       	ror	r19
    4a6e:	27 95       	ror	r18
    4a70:	a7 95       	ror	r26
    4a72:	f0 40       	sbci	r31, 0x00	; 0
    4a74:	53 95       	inc	r21
    4a76:	c9 f7       	brne	.-14     	; 0x4a6a <__addsf3x+0x52>
    4a78:	7e f4       	brtc	.+30     	; 0x4a98 <__addsf3x+0x80>
    4a7a:	1f 16       	cp	r1, r31
    4a7c:	ba 0b       	sbc	r27, r26
    4a7e:	62 0b       	sbc	r22, r18
    4a80:	73 0b       	sbc	r23, r19
    4a82:	84 0b       	sbc	r24, r20
    4a84:	ba f0       	brmi	.+46     	; 0x4ab4 <__addsf3x+0x9c>
    4a86:	91 50       	subi	r25, 0x01	; 1
    4a88:	a1 f0       	breq	.+40     	; 0x4ab2 <__addsf3x+0x9a>
    4a8a:	ff 0f       	add	r31, r31
    4a8c:	bb 1f       	adc	r27, r27
    4a8e:	66 1f       	adc	r22, r22
    4a90:	77 1f       	adc	r23, r23
    4a92:	88 1f       	adc	r24, r24
    4a94:	c2 f7       	brpl	.-16     	; 0x4a86 <__addsf3x+0x6e>
    4a96:	0e c0       	rjmp	.+28     	; 0x4ab4 <__addsf3x+0x9c>
    4a98:	ba 0f       	add	r27, r26
    4a9a:	62 1f       	adc	r22, r18
    4a9c:	73 1f       	adc	r23, r19
    4a9e:	84 1f       	adc	r24, r20
    4aa0:	48 f4       	brcc	.+18     	; 0x4ab4 <__addsf3x+0x9c>
    4aa2:	87 95       	ror	r24
    4aa4:	77 95       	ror	r23
    4aa6:	67 95       	ror	r22
    4aa8:	b7 95       	ror	r27
    4aaa:	f7 95       	ror	r31
    4aac:	9e 3f       	cpi	r25, 0xFE	; 254
    4aae:	08 f0       	brcs	.+2      	; 0x4ab2 <__addsf3x+0x9a>
    4ab0:	b0 cf       	rjmp	.-160    	; 0x4a12 <__addsf3+0x28>
    4ab2:	93 95       	inc	r25
    4ab4:	88 0f       	add	r24, r24
    4ab6:	08 f0       	brcs	.+2      	; 0x4aba <__addsf3x+0xa2>
    4ab8:	99 27       	eor	r25, r25
    4aba:	ee 0f       	add	r30, r30
    4abc:	97 95       	ror	r25
    4abe:	87 95       	ror	r24
    4ac0:	08 95       	ret

00004ac2 <__cmpsf2>:
    4ac2:	0e 94 4b 26 	call	0x4c96	; 0x4c96 <__fp_cmp>
    4ac6:	08 f4       	brcc	.+2      	; 0x4aca <__cmpsf2+0x8>
    4ac8:	81 e0       	ldi	r24, 0x01	; 1
    4aca:	08 95       	ret

00004acc <__divsf3>:
    4acc:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <__divsf3x>
    4ad0:	0c 94 86 26 	jmp	0x4d0c	; 0x4d0c <__fp_round>
    4ad4:	0e 94 7f 26 	call	0x4cfe	; 0x4cfe <__fp_pscB>
    4ad8:	58 f0       	brcs	.+22     	; 0x4af0 <__divsf3+0x24>
    4ada:	0e 94 78 26 	call	0x4cf0	; 0x4cf0 <__fp_pscA>
    4ade:	40 f0       	brcs	.+16     	; 0x4af0 <__divsf3+0x24>
    4ae0:	29 f4       	brne	.+10     	; 0x4aec <__divsf3+0x20>
    4ae2:	5f 3f       	cpi	r21, 0xFF	; 255
    4ae4:	29 f0       	breq	.+10     	; 0x4af0 <__divsf3+0x24>
    4ae6:	0c 94 6f 26 	jmp	0x4cde	; 0x4cde <__fp_inf>
    4aea:	51 11       	cpse	r21, r1
    4aec:	0c 94 ba 26 	jmp	0x4d74	; 0x4d74 <__fp_szero>
    4af0:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__fp_nan>

00004af4 <__divsf3x>:
    4af4:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <__fp_split3>
    4af8:	68 f3       	brcs	.-38     	; 0x4ad4 <__divsf3+0x8>

00004afa <__divsf3_pse>:
    4afa:	99 23       	and	r25, r25
    4afc:	b1 f3       	breq	.-20     	; 0x4aea <__divsf3+0x1e>
    4afe:	55 23       	and	r21, r21
    4b00:	91 f3       	breq	.-28     	; 0x4ae6 <__divsf3+0x1a>
    4b02:	95 1b       	sub	r25, r21
    4b04:	55 0b       	sbc	r21, r21
    4b06:	bb 27       	eor	r27, r27
    4b08:	aa 27       	eor	r26, r26
    4b0a:	62 17       	cp	r22, r18
    4b0c:	73 07       	cpc	r23, r19
    4b0e:	84 07       	cpc	r24, r20
    4b10:	38 f0       	brcs	.+14     	; 0x4b20 <__divsf3_pse+0x26>
    4b12:	9f 5f       	subi	r25, 0xFF	; 255
    4b14:	5f 4f       	sbci	r21, 0xFF	; 255
    4b16:	22 0f       	add	r18, r18
    4b18:	33 1f       	adc	r19, r19
    4b1a:	44 1f       	adc	r20, r20
    4b1c:	aa 1f       	adc	r26, r26
    4b1e:	a9 f3       	breq	.-22     	; 0x4b0a <__divsf3_pse+0x10>
    4b20:	35 d0       	rcall	.+106    	; 0x4b8c <__divsf3_pse+0x92>
    4b22:	0e 2e       	mov	r0, r30
    4b24:	3a f0       	brmi	.+14     	; 0x4b34 <__divsf3_pse+0x3a>
    4b26:	e0 e8       	ldi	r30, 0x80	; 128
    4b28:	32 d0       	rcall	.+100    	; 0x4b8e <__divsf3_pse+0x94>
    4b2a:	91 50       	subi	r25, 0x01	; 1
    4b2c:	50 40       	sbci	r21, 0x00	; 0
    4b2e:	e6 95       	lsr	r30
    4b30:	00 1c       	adc	r0, r0
    4b32:	ca f7       	brpl	.-14     	; 0x4b26 <__divsf3_pse+0x2c>
    4b34:	2b d0       	rcall	.+86     	; 0x4b8c <__divsf3_pse+0x92>
    4b36:	fe 2f       	mov	r31, r30
    4b38:	29 d0       	rcall	.+82     	; 0x4b8c <__divsf3_pse+0x92>
    4b3a:	66 0f       	add	r22, r22
    4b3c:	77 1f       	adc	r23, r23
    4b3e:	88 1f       	adc	r24, r24
    4b40:	bb 1f       	adc	r27, r27
    4b42:	26 17       	cp	r18, r22
    4b44:	37 07       	cpc	r19, r23
    4b46:	48 07       	cpc	r20, r24
    4b48:	ab 07       	cpc	r26, r27
    4b4a:	b0 e8       	ldi	r27, 0x80	; 128
    4b4c:	09 f0       	breq	.+2      	; 0x4b50 <__divsf3_pse+0x56>
    4b4e:	bb 0b       	sbc	r27, r27
    4b50:	80 2d       	mov	r24, r0
    4b52:	bf 01       	movw	r22, r30
    4b54:	ff 27       	eor	r31, r31
    4b56:	93 58       	subi	r25, 0x83	; 131
    4b58:	5f 4f       	sbci	r21, 0xFF	; 255
    4b5a:	3a f0       	brmi	.+14     	; 0x4b6a <__divsf3_pse+0x70>
    4b5c:	9e 3f       	cpi	r25, 0xFE	; 254
    4b5e:	51 05       	cpc	r21, r1
    4b60:	78 f0       	brcs	.+30     	; 0x4b80 <__divsf3_pse+0x86>
    4b62:	0c 94 6f 26 	jmp	0x4cde	; 0x4cde <__fp_inf>
    4b66:	0c 94 ba 26 	jmp	0x4d74	; 0x4d74 <__fp_szero>
    4b6a:	5f 3f       	cpi	r21, 0xFF	; 255
    4b6c:	e4 f3       	brlt	.-8      	; 0x4b66 <__divsf3_pse+0x6c>
    4b6e:	98 3e       	cpi	r25, 0xE8	; 232
    4b70:	d4 f3       	brlt	.-12     	; 0x4b66 <__divsf3_pse+0x6c>
    4b72:	86 95       	lsr	r24
    4b74:	77 95       	ror	r23
    4b76:	67 95       	ror	r22
    4b78:	b7 95       	ror	r27
    4b7a:	f7 95       	ror	r31
    4b7c:	9f 5f       	subi	r25, 0xFF	; 255
    4b7e:	c9 f7       	brne	.-14     	; 0x4b72 <__divsf3_pse+0x78>
    4b80:	88 0f       	add	r24, r24
    4b82:	91 1d       	adc	r25, r1
    4b84:	96 95       	lsr	r25
    4b86:	87 95       	ror	r24
    4b88:	97 f9       	bld	r25, 7
    4b8a:	08 95       	ret
    4b8c:	e1 e0       	ldi	r30, 0x01	; 1
    4b8e:	66 0f       	add	r22, r22
    4b90:	77 1f       	adc	r23, r23
    4b92:	88 1f       	adc	r24, r24
    4b94:	bb 1f       	adc	r27, r27
    4b96:	62 17       	cp	r22, r18
    4b98:	73 07       	cpc	r23, r19
    4b9a:	84 07       	cpc	r24, r20
    4b9c:	ba 07       	cpc	r27, r26
    4b9e:	20 f0       	brcs	.+8      	; 0x4ba8 <__divsf3_pse+0xae>
    4ba0:	62 1b       	sub	r22, r18
    4ba2:	73 0b       	sbc	r23, r19
    4ba4:	84 0b       	sbc	r24, r20
    4ba6:	ba 0b       	sbc	r27, r26
    4ba8:	ee 1f       	adc	r30, r30
    4baa:	88 f7       	brcc	.-30     	; 0x4b8e <__divsf3_pse+0x94>
    4bac:	e0 95       	com	r30
    4bae:	08 95       	ret

00004bb0 <__fixsfsi>:
    4bb0:	0e 94 df 25 	call	0x4bbe	; 0x4bbe <__fixunssfsi>
    4bb4:	68 94       	set
    4bb6:	b1 11       	cpse	r27, r1
    4bb8:	0c 94 ba 26 	jmp	0x4d74	; 0x4d74 <__fp_szero>
    4bbc:	08 95       	ret

00004bbe <__fixunssfsi>:
    4bbe:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <__fp_splitA>
    4bc2:	88 f0       	brcs	.+34     	; 0x4be6 <__fixunssfsi+0x28>
    4bc4:	9f 57       	subi	r25, 0x7F	; 127
    4bc6:	98 f0       	brcs	.+38     	; 0x4bee <__fixunssfsi+0x30>
    4bc8:	b9 2f       	mov	r27, r25
    4bca:	99 27       	eor	r25, r25
    4bcc:	b7 51       	subi	r27, 0x17	; 23
    4bce:	b0 f0       	brcs	.+44     	; 0x4bfc <__fixunssfsi+0x3e>
    4bd0:	e1 f0       	breq	.+56     	; 0x4c0a <__fixunssfsi+0x4c>
    4bd2:	66 0f       	add	r22, r22
    4bd4:	77 1f       	adc	r23, r23
    4bd6:	88 1f       	adc	r24, r24
    4bd8:	99 1f       	adc	r25, r25
    4bda:	1a f0       	brmi	.+6      	; 0x4be2 <__fixunssfsi+0x24>
    4bdc:	ba 95       	dec	r27
    4bde:	c9 f7       	brne	.-14     	; 0x4bd2 <__fixunssfsi+0x14>
    4be0:	14 c0       	rjmp	.+40     	; 0x4c0a <__fixunssfsi+0x4c>
    4be2:	b1 30       	cpi	r27, 0x01	; 1
    4be4:	91 f0       	breq	.+36     	; 0x4c0a <__fixunssfsi+0x4c>
    4be6:	0e 94 b9 26 	call	0x4d72	; 0x4d72 <__fp_zero>
    4bea:	b1 e0       	ldi	r27, 0x01	; 1
    4bec:	08 95       	ret
    4bee:	0c 94 b9 26 	jmp	0x4d72	; 0x4d72 <__fp_zero>
    4bf2:	67 2f       	mov	r22, r23
    4bf4:	78 2f       	mov	r23, r24
    4bf6:	88 27       	eor	r24, r24
    4bf8:	b8 5f       	subi	r27, 0xF8	; 248
    4bfa:	39 f0       	breq	.+14     	; 0x4c0a <__fixunssfsi+0x4c>
    4bfc:	b9 3f       	cpi	r27, 0xF9	; 249
    4bfe:	cc f3       	brlt	.-14     	; 0x4bf2 <__fixunssfsi+0x34>
    4c00:	86 95       	lsr	r24
    4c02:	77 95       	ror	r23
    4c04:	67 95       	ror	r22
    4c06:	b3 95       	inc	r27
    4c08:	d9 f7       	brne	.-10     	; 0x4c00 <__fixunssfsi+0x42>
    4c0a:	3e f4       	brtc	.+14     	; 0x4c1a <__fixunssfsi+0x5c>
    4c0c:	90 95       	com	r25
    4c0e:	80 95       	com	r24
    4c10:	70 95       	com	r23
    4c12:	61 95       	neg	r22
    4c14:	7f 4f       	sbci	r23, 0xFF	; 255
    4c16:	8f 4f       	sbci	r24, 0xFF	; 255
    4c18:	9f 4f       	sbci	r25, 0xFF	; 255
    4c1a:	08 95       	ret

00004c1c <__floatunsisf>:
    4c1c:	e8 94       	clt
    4c1e:	09 c0       	rjmp	.+18     	; 0x4c32 <__floatsisf+0x12>

00004c20 <__floatsisf>:
    4c20:	97 fb       	bst	r25, 7
    4c22:	3e f4       	brtc	.+14     	; 0x4c32 <__floatsisf+0x12>
    4c24:	90 95       	com	r25
    4c26:	80 95       	com	r24
    4c28:	70 95       	com	r23
    4c2a:	61 95       	neg	r22
    4c2c:	7f 4f       	sbci	r23, 0xFF	; 255
    4c2e:	8f 4f       	sbci	r24, 0xFF	; 255
    4c30:	9f 4f       	sbci	r25, 0xFF	; 255
    4c32:	99 23       	and	r25, r25
    4c34:	a9 f0       	breq	.+42     	; 0x4c60 <__floatsisf+0x40>
    4c36:	f9 2f       	mov	r31, r25
    4c38:	96 e9       	ldi	r25, 0x96	; 150
    4c3a:	bb 27       	eor	r27, r27
    4c3c:	93 95       	inc	r25
    4c3e:	f6 95       	lsr	r31
    4c40:	87 95       	ror	r24
    4c42:	77 95       	ror	r23
    4c44:	67 95       	ror	r22
    4c46:	b7 95       	ror	r27
    4c48:	f1 11       	cpse	r31, r1
    4c4a:	f8 cf       	rjmp	.-16     	; 0x4c3c <__floatsisf+0x1c>
    4c4c:	fa f4       	brpl	.+62     	; 0x4c8c <__floatsisf+0x6c>
    4c4e:	bb 0f       	add	r27, r27
    4c50:	11 f4       	brne	.+4      	; 0x4c56 <__floatsisf+0x36>
    4c52:	60 ff       	sbrs	r22, 0
    4c54:	1b c0       	rjmp	.+54     	; 0x4c8c <__floatsisf+0x6c>
    4c56:	6f 5f       	subi	r22, 0xFF	; 255
    4c58:	7f 4f       	sbci	r23, 0xFF	; 255
    4c5a:	8f 4f       	sbci	r24, 0xFF	; 255
    4c5c:	9f 4f       	sbci	r25, 0xFF	; 255
    4c5e:	16 c0       	rjmp	.+44     	; 0x4c8c <__floatsisf+0x6c>
    4c60:	88 23       	and	r24, r24
    4c62:	11 f0       	breq	.+4      	; 0x4c68 <__floatsisf+0x48>
    4c64:	96 e9       	ldi	r25, 0x96	; 150
    4c66:	11 c0       	rjmp	.+34     	; 0x4c8a <__floatsisf+0x6a>
    4c68:	77 23       	and	r23, r23
    4c6a:	21 f0       	breq	.+8      	; 0x4c74 <__floatsisf+0x54>
    4c6c:	9e e8       	ldi	r25, 0x8E	; 142
    4c6e:	87 2f       	mov	r24, r23
    4c70:	76 2f       	mov	r23, r22
    4c72:	05 c0       	rjmp	.+10     	; 0x4c7e <__floatsisf+0x5e>
    4c74:	66 23       	and	r22, r22
    4c76:	71 f0       	breq	.+28     	; 0x4c94 <__floatsisf+0x74>
    4c78:	96 e8       	ldi	r25, 0x86	; 134
    4c7a:	86 2f       	mov	r24, r22
    4c7c:	70 e0       	ldi	r23, 0x00	; 0
    4c7e:	60 e0       	ldi	r22, 0x00	; 0
    4c80:	2a f0       	brmi	.+10     	; 0x4c8c <__floatsisf+0x6c>
    4c82:	9a 95       	dec	r25
    4c84:	66 0f       	add	r22, r22
    4c86:	77 1f       	adc	r23, r23
    4c88:	88 1f       	adc	r24, r24
    4c8a:	da f7       	brpl	.-10     	; 0x4c82 <__floatsisf+0x62>
    4c8c:	88 0f       	add	r24, r24
    4c8e:	96 95       	lsr	r25
    4c90:	87 95       	ror	r24
    4c92:	97 f9       	bld	r25, 7
    4c94:	08 95       	ret

00004c96 <__fp_cmp>:
    4c96:	99 0f       	add	r25, r25
    4c98:	00 08       	sbc	r0, r0
    4c9a:	55 0f       	add	r21, r21
    4c9c:	aa 0b       	sbc	r26, r26
    4c9e:	e0 e8       	ldi	r30, 0x80	; 128
    4ca0:	fe ef       	ldi	r31, 0xFE	; 254
    4ca2:	16 16       	cp	r1, r22
    4ca4:	17 06       	cpc	r1, r23
    4ca6:	e8 07       	cpc	r30, r24
    4ca8:	f9 07       	cpc	r31, r25
    4caa:	c0 f0       	brcs	.+48     	; 0x4cdc <__fp_cmp+0x46>
    4cac:	12 16       	cp	r1, r18
    4cae:	13 06       	cpc	r1, r19
    4cb0:	e4 07       	cpc	r30, r20
    4cb2:	f5 07       	cpc	r31, r21
    4cb4:	98 f0       	brcs	.+38     	; 0x4cdc <__fp_cmp+0x46>
    4cb6:	62 1b       	sub	r22, r18
    4cb8:	73 0b       	sbc	r23, r19
    4cba:	84 0b       	sbc	r24, r20
    4cbc:	95 0b       	sbc	r25, r21
    4cbe:	39 f4       	brne	.+14     	; 0x4cce <__fp_cmp+0x38>
    4cc0:	0a 26       	eor	r0, r26
    4cc2:	61 f0       	breq	.+24     	; 0x4cdc <__fp_cmp+0x46>
    4cc4:	23 2b       	or	r18, r19
    4cc6:	24 2b       	or	r18, r20
    4cc8:	25 2b       	or	r18, r21
    4cca:	21 f4       	brne	.+8      	; 0x4cd4 <__fp_cmp+0x3e>
    4ccc:	08 95       	ret
    4cce:	0a 26       	eor	r0, r26
    4cd0:	09 f4       	brne	.+2      	; 0x4cd4 <__fp_cmp+0x3e>
    4cd2:	a1 40       	sbci	r26, 0x01	; 1
    4cd4:	a6 95       	lsr	r26
    4cd6:	8f ef       	ldi	r24, 0xFF	; 255
    4cd8:	81 1d       	adc	r24, r1
    4cda:	81 1d       	adc	r24, r1
    4cdc:	08 95       	ret

00004cde <__fp_inf>:
    4cde:	97 f9       	bld	r25, 7
    4ce0:	9f 67       	ori	r25, 0x7F	; 127
    4ce2:	80 e8       	ldi	r24, 0x80	; 128
    4ce4:	70 e0       	ldi	r23, 0x00	; 0
    4ce6:	60 e0       	ldi	r22, 0x00	; 0
    4ce8:	08 95       	ret

00004cea <__fp_nan>:
    4cea:	9f ef       	ldi	r25, 0xFF	; 255
    4cec:	80 ec       	ldi	r24, 0xC0	; 192
    4cee:	08 95       	ret

00004cf0 <__fp_pscA>:
    4cf0:	00 24       	eor	r0, r0
    4cf2:	0a 94       	dec	r0
    4cf4:	16 16       	cp	r1, r22
    4cf6:	17 06       	cpc	r1, r23
    4cf8:	18 06       	cpc	r1, r24
    4cfa:	09 06       	cpc	r0, r25
    4cfc:	08 95       	ret

00004cfe <__fp_pscB>:
    4cfe:	00 24       	eor	r0, r0
    4d00:	0a 94       	dec	r0
    4d02:	12 16       	cp	r1, r18
    4d04:	13 06       	cpc	r1, r19
    4d06:	14 06       	cpc	r1, r20
    4d08:	05 06       	cpc	r0, r21
    4d0a:	08 95       	ret

00004d0c <__fp_round>:
    4d0c:	09 2e       	mov	r0, r25
    4d0e:	03 94       	inc	r0
    4d10:	00 0c       	add	r0, r0
    4d12:	11 f4       	brne	.+4      	; 0x4d18 <__fp_round+0xc>
    4d14:	88 23       	and	r24, r24
    4d16:	52 f0       	brmi	.+20     	; 0x4d2c <__fp_round+0x20>
    4d18:	bb 0f       	add	r27, r27
    4d1a:	40 f4       	brcc	.+16     	; 0x4d2c <__fp_round+0x20>
    4d1c:	bf 2b       	or	r27, r31
    4d1e:	11 f4       	brne	.+4      	; 0x4d24 <__fp_round+0x18>
    4d20:	60 ff       	sbrs	r22, 0
    4d22:	04 c0       	rjmp	.+8      	; 0x4d2c <__fp_round+0x20>
    4d24:	6f 5f       	subi	r22, 0xFF	; 255
    4d26:	7f 4f       	sbci	r23, 0xFF	; 255
    4d28:	8f 4f       	sbci	r24, 0xFF	; 255
    4d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    4d2c:	08 95       	ret

00004d2e <__fp_split3>:
    4d2e:	57 fd       	sbrc	r21, 7
    4d30:	90 58       	subi	r25, 0x80	; 128
    4d32:	44 0f       	add	r20, r20
    4d34:	55 1f       	adc	r21, r21
    4d36:	59 f0       	breq	.+22     	; 0x4d4e <__fp_splitA+0x10>
    4d38:	5f 3f       	cpi	r21, 0xFF	; 255
    4d3a:	71 f0       	breq	.+28     	; 0x4d58 <__fp_splitA+0x1a>
    4d3c:	47 95       	ror	r20

00004d3e <__fp_splitA>:
    4d3e:	88 0f       	add	r24, r24
    4d40:	97 fb       	bst	r25, 7
    4d42:	99 1f       	adc	r25, r25
    4d44:	61 f0       	breq	.+24     	; 0x4d5e <__fp_splitA+0x20>
    4d46:	9f 3f       	cpi	r25, 0xFF	; 255
    4d48:	79 f0       	breq	.+30     	; 0x4d68 <__fp_splitA+0x2a>
    4d4a:	87 95       	ror	r24
    4d4c:	08 95       	ret
    4d4e:	12 16       	cp	r1, r18
    4d50:	13 06       	cpc	r1, r19
    4d52:	14 06       	cpc	r1, r20
    4d54:	55 1f       	adc	r21, r21
    4d56:	f2 cf       	rjmp	.-28     	; 0x4d3c <__fp_split3+0xe>
    4d58:	46 95       	lsr	r20
    4d5a:	f1 df       	rcall	.-30     	; 0x4d3e <__fp_splitA>
    4d5c:	08 c0       	rjmp	.+16     	; 0x4d6e <__fp_splitA+0x30>
    4d5e:	16 16       	cp	r1, r22
    4d60:	17 06       	cpc	r1, r23
    4d62:	18 06       	cpc	r1, r24
    4d64:	99 1f       	adc	r25, r25
    4d66:	f1 cf       	rjmp	.-30     	; 0x4d4a <__fp_splitA+0xc>
    4d68:	86 95       	lsr	r24
    4d6a:	71 05       	cpc	r23, r1
    4d6c:	61 05       	cpc	r22, r1
    4d6e:	08 94       	sec
    4d70:	08 95       	ret

00004d72 <__fp_zero>:
    4d72:	e8 94       	clt

00004d74 <__fp_szero>:
    4d74:	bb 27       	eor	r27, r27
    4d76:	66 27       	eor	r22, r22
    4d78:	77 27       	eor	r23, r23
    4d7a:	cb 01       	movw	r24, r22
    4d7c:	97 f9       	bld	r25, 7
    4d7e:	08 95       	ret

00004d80 <__gesf2>:
    4d80:	0e 94 4b 26 	call	0x4c96	; 0x4c96 <__fp_cmp>
    4d84:	08 f4       	brcc	.+2      	; 0x4d88 <__gesf2+0x8>
    4d86:	8f ef       	ldi	r24, 0xFF	; 255
    4d88:	08 95       	ret

00004d8a <__mulsf3>:
    4d8a:	0e 94 d8 26 	call	0x4db0	; 0x4db0 <__mulsf3x>
    4d8e:	0c 94 86 26 	jmp	0x4d0c	; 0x4d0c <__fp_round>
    4d92:	0e 94 78 26 	call	0x4cf0	; 0x4cf0 <__fp_pscA>
    4d96:	38 f0       	brcs	.+14     	; 0x4da6 <__mulsf3+0x1c>
    4d98:	0e 94 7f 26 	call	0x4cfe	; 0x4cfe <__fp_pscB>
    4d9c:	20 f0       	brcs	.+8      	; 0x4da6 <__mulsf3+0x1c>
    4d9e:	95 23       	and	r25, r21
    4da0:	11 f0       	breq	.+4      	; 0x4da6 <__mulsf3+0x1c>
    4da2:	0c 94 6f 26 	jmp	0x4cde	; 0x4cde <__fp_inf>
    4da6:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__fp_nan>
    4daa:	11 24       	eor	r1, r1
    4dac:	0c 94 ba 26 	jmp	0x4d74	; 0x4d74 <__fp_szero>

00004db0 <__mulsf3x>:
    4db0:	0e 94 97 26 	call	0x4d2e	; 0x4d2e <__fp_split3>
    4db4:	70 f3       	brcs	.-36     	; 0x4d92 <__mulsf3+0x8>

00004db6 <__mulsf3_pse>:
    4db6:	95 9f       	mul	r25, r21
    4db8:	c1 f3       	breq	.-16     	; 0x4daa <__mulsf3+0x20>
    4dba:	95 0f       	add	r25, r21
    4dbc:	50 e0       	ldi	r21, 0x00	; 0
    4dbe:	55 1f       	adc	r21, r21
    4dc0:	62 9f       	mul	r22, r18
    4dc2:	f0 01       	movw	r30, r0
    4dc4:	72 9f       	mul	r23, r18
    4dc6:	bb 27       	eor	r27, r27
    4dc8:	f0 0d       	add	r31, r0
    4dca:	b1 1d       	adc	r27, r1
    4dcc:	63 9f       	mul	r22, r19
    4dce:	aa 27       	eor	r26, r26
    4dd0:	f0 0d       	add	r31, r0
    4dd2:	b1 1d       	adc	r27, r1
    4dd4:	aa 1f       	adc	r26, r26
    4dd6:	64 9f       	mul	r22, r20
    4dd8:	66 27       	eor	r22, r22
    4dda:	b0 0d       	add	r27, r0
    4ddc:	a1 1d       	adc	r26, r1
    4dde:	66 1f       	adc	r22, r22
    4de0:	82 9f       	mul	r24, r18
    4de2:	22 27       	eor	r18, r18
    4de4:	b0 0d       	add	r27, r0
    4de6:	a1 1d       	adc	r26, r1
    4de8:	62 1f       	adc	r22, r18
    4dea:	73 9f       	mul	r23, r19
    4dec:	b0 0d       	add	r27, r0
    4dee:	a1 1d       	adc	r26, r1
    4df0:	62 1f       	adc	r22, r18
    4df2:	83 9f       	mul	r24, r19
    4df4:	a0 0d       	add	r26, r0
    4df6:	61 1d       	adc	r22, r1
    4df8:	22 1f       	adc	r18, r18
    4dfa:	74 9f       	mul	r23, r20
    4dfc:	33 27       	eor	r19, r19
    4dfe:	a0 0d       	add	r26, r0
    4e00:	61 1d       	adc	r22, r1
    4e02:	23 1f       	adc	r18, r19
    4e04:	84 9f       	mul	r24, r20
    4e06:	60 0d       	add	r22, r0
    4e08:	21 1d       	adc	r18, r1
    4e0a:	82 2f       	mov	r24, r18
    4e0c:	76 2f       	mov	r23, r22
    4e0e:	6a 2f       	mov	r22, r26
    4e10:	11 24       	eor	r1, r1
    4e12:	9f 57       	subi	r25, 0x7F	; 127
    4e14:	50 40       	sbci	r21, 0x00	; 0
    4e16:	9a f0       	brmi	.+38     	; 0x4e3e <__mulsf3_pse+0x88>
    4e18:	f1 f0       	breq	.+60     	; 0x4e56 <__mulsf3_pse+0xa0>
    4e1a:	88 23       	and	r24, r24
    4e1c:	4a f0       	brmi	.+18     	; 0x4e30 <__mulsf3_pse+0x7a>
    4e1e:	ee 0f       	add	r30, r30
    4e20:	ff 1f       	adc	r31, r31
    4e22:	bb 1f       	adc	r27, r27
    4e24:	66 1f       	adc	r22, r22
    4e26:	77 1f       	adc	r23, r23
    4e28:	88 1f       	adc	r24, r24
    4e2a:	91 50       	subi	r25, 0x01	; 1
    4e2c:	50 40       	sbci	r21, 0x00	; 0
    4e2e:	a9 f7       	brne	.-22     	; 0x4e1a <__mulsf3_pse+0x64>
    4e30:	9e 3f       	cpi	r25, 0xFE	; 254
    4e32:	51 05       	cpc	r21, r1
    4e34:	80 f0       	brcs	.+32     	; 0x4e56 <__mulsf3_pse+0xa0>
    4e36:	0c 94 6f 26 	jmp	0x4cde	; 0x4cde <__fp_inf>
    4e3a:	0c 94 ba 26 	jmp	0x4d74	; 0x4d74 <__fp_szero>
    4e3e:	5f 3f       	cpi	r21, 0xFF	; 255
    4e40:	e4 f3       	brlt	.-8      	; 0x4e3a <__mulsf3_pse+0x84>
    4e42:	98 3e       	cpi	r25, 0xE8	; 232
    4e44:	d4 f3       	brlt	.-12     	; 0x4e3a <__mulsf3_pse+0x84>
    4e46:	86 95       	lsr	r24
    4e48:	77 95       	ror	r23
    4e4a:	67 95       	ror	r22
    4e4c:	b7 95       	ror	r27
    4e4e:	f7 95       	ror	r31
    4e50:	e7 95       	ror	r30
    4e52:	9f 5f       	subi	r25, 0xFF	; 255
    4e54:	c1 f7       	brne	.-16     	; 0x4e46 <__mulsf3_pse+0x90>
    4e56:	fe 2b       	or	r31, r30
    4e58:	88 0f       	add	r24, r24
    4e5a:	91 1d       	adc	r25, r1
    4e5c:	96 95       	lsr	r25
    4e5e:	87 95       	ror	r24
    4e60:	97 f9       	bld	r25, 7
    4e62:	08 95       	ret

00004e64 <vfprintf>:
    4e64:	a0 e1       	ldi	r26, 0x10	; 16
    4e66:	b0 e0       	ldi	r27, 0x00	; 0
    4e68:	e8 e3       	ldi	r30, 0x38	; 56
    4e6a:	f7 e2       	ldi	r31, 0x27	; 39
    4e6c:	0c 94 19 2b 	jmp	0x5632	; 0x5632 <__prologue_saves__>
    4e70:	7c 01       	movw	r14, r24
    4e72:	1b 01       	movw	r2, r22
    4e74:	6a 01       	movw	r12, r20
    4e76:	fc 01       	movw	r30, r24
    4e78:	17 82       	std	Z+7, r1	; 0x07
    4e7a:	16 82       	std	Z+6, r1	; 0x06
    4e7c:	83 81       	ldd	r24, Z+3	; 0x03
    4e7e:	81 ff       	sbrs	r24, 1
    4e80:	44 c3       	rjmp	.+1672   	; 0x550a <vfprintf+0x6a6>
    4e82:	9e 01       	movw	r18, r28
    4e84:	2f 5f       	subi	r18, 0xFF	; 255
    4e86:	3f 4f       	sbci	r19, 0xFF	; 255
    4e88:	39 01       	movw	r6, r18
    4e8a:	f7 01       	movw	r30, r14
    4e8c:	93 81       	ldd	r25, Z+3	; 0x03
    4e8e:	f1 01       	movw	r30, r2
    4e90:	93 fd       	sbrc	r25, 3
    4e92:	85 91       	lpm	r24, Z+
    4e94:	93 ff       	sbrs	r25, 3
    4e96:	81 91       	ld	r24, Z+
    4e98:	1f 01       	movw	r2, r30
    4e9a:	88 23       	and	r24, r24
    4e9c:	09 f4       	brne	.+2      	; 0x4ea0 <vfprintf+0x3c>
    4e9e:	31 c3       	rjmp	.+1634   	; 0x5502 <vfprintf+0x69e>
    4ea0:	85 32       	cpi	r24, 0x25	; 37
    4ea2:	39 f4       	brne	.+14     	; 0x4eb2 <vfprintf+0x4e>
    4ea4:	93 fd       	sbrc	r25, 3
    4ea6:	85 91       	lpm	r24, Z+
    4ea8:	93 ff       	sbrs	r25, 3
    4eaa:	81 91       	ld	r24, Z+
    4eac:	1f 01       	movw	r2, r30
    4eae:	85 32       	cpi	r24, 0x25	; 37
    4eb0:	39 f4       	brne	.+14     	; 0x4ec0 <vfprintf+0x5c>
    4eb2:	b7 01       	movw	r22, r14
    4eb4:	90 e0       	ldi	r25, 0x00	; 0
    4eb6:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    4eba:	56 01       	movw	r10, r12
    4ebc:	65 01       	movw	r12, r10
    4ebe:	e5 cf       	rjmp	.-54     	; 0x4e8a <vfprintf+0x26>
    4ec0:	10 e0       	ldi	r17, 0x00	; 0
    4ec2:	51 2c       	mov	r5, r1
    4ec4:	91 2c       	mov	r9, r1
    4ec6:	ff e1       	ldi	r31, 0x1F	; 31
    4ec8:	f9 15       	cp	r31, r9
    4eca:	d8 f0       	brcs	.+54     	; 0x4f02 <vfprintf+0x9e>
    4ecc:	8b 32       	cpi	r24, 0x2B	; 43
    4ece:	79 f0       	breq	.+30     	; 0x4eee <vfprintf+0x8a>
    4ed0:	38 f4       	brcc	.+14     	; 0x4ee0 <vfprintf+0x7c>
    4ed2:	80 32       	cpi	r24, 0x20	; 32
    4ed4:	79 f0       	breq	.+30     	; 0x4ef4 <vfprintf+0x90>
    4ed6:	83 32       	cpi	r24, 0x23	; 35
    4ed8:	a1 f4       	brne	.+40     	; 0x4f02 <vfprintf+0x9e>
    4eda:	f9 2d       	mov	r31, r9
    4edc:	f0 61       	ori	r31, 0x10	; 16
    4ede:	2e c0       	rjmp	.+92     	; 0x4f3c <vfprintf+0xd8>
    4ee0:	8d 32       	cpi	r24, 0x2D	; 45
    4ee2:	61 f0       	breq	.+24     	; 0x4efc <vfprintf+0x98>
    4ee4:	80 33       	cpi	r24, 0x30	; 48
    4ee6:	69 f4       	brne	.+26     	; 0x4f02 <vfprintf+0x9e>
    4ee8:	29 2d       	mov	r18, r9
    4eea:	21 60       	ori	r18, 0x01	; 1
    4eec:	2d c0       	rjmp	.+90     	; 0x4f48 <vfprintf+0xe4>
    4eee:	39 2d       	mov	r19, r9
    4ef0:	32 60       	ori	r19, 0x02	; 2
    4ef2:	93 2e       	mov	r9, r19
    4ef4:	89 2d       	mov	r24, r9
    4ef6:	84 60       	ori	r24, 0x04	; 4
    4ef8:	98 2e       	mov	r9, r24
    4efa:	2a c0       	rjmp	.+84     	; 0x4f50 <vfprintf+0xec>
    4efc:	e9 2d       	mov	r30, r9
    4efe:	e8 60       	ori	r30, 0x08	; 8
    4f00:	15 c0       	rjmp	.+42     	; 0x4f2c <vfprintf+0xc8>
    4f02:	97 fc       	sbrc	r9, 7
    4f04:	2d c0       	rjmp	.+90     	; 0x4f60 <vfprintf+0xfc>
    4f06:	20 ed       	ldi	r18, 0xD0	; 208
    4f08:	28 0f       	add	r18, r24
    4f0a:	2a 30       	cpi	r18, 0x0A	; 10
    4f0c:	88 f4       	brcc	.+34     	; 0x4f30 <vfprintf+0xcc>
    4f0e:	96 fe       	sbrs	r9, 6
    4f10:	06 c0       	rjmp	.+12     	; 0x4f1e <vfprintf+0xba>
    4f12:	3a e0       	ldi	r19, 0x0A	; 10
    4f14:	13 9f       	mul	r17, r19
    4f16:	20 0d       	add	r18, r0
    4f18:	11 24       	eor	r1, r1
    4f1a:	12 2f       	mov	r17, r18
    4f1c:	19 c0       	rjmp	.+50     	; 0x4f50 <vfprintf+0xec>
    4f1e:	8a e0       	ldi	r24, 0x0A	; 10
    4f20:	58 9e       	mul	r5, r24
    4f22:	20 0d       	add	r18, r0
    4f24:	11 24       	eor	r1, r1
    4f26:	52 2e       	mov	r5, r18
    4f28:	e9 2d       	mov	r30, r9
    4f2a:	e0 62       	ori	r30, 0x20	; 32
    4f2c:	9e 2e       	mov	r9, r30
    4f2e:	10 c0       	rjmp	.+32     	; 0x4f50 <vfprintf+0xec>
    4f30:	8e 32       	cpi	r24, 0x2E	; 46
    4f32:	31 f4       	brne	.+12     	; 0x4f40 <vfprintf+0xdc>
    4f34:	96 fc       	sbrc	r9, 6
    4f36:	e5 c2       	rjmp	.+1482   	; 0x5502 <vfprintf+0x69e>
    4f38:	f9 2d       	mov	r31, r9
    4f3a:	f0 64       	ori	r31, 0x40	; 64
    4f3c:	9f 2e       	mov	r9, r31
    4f3e:	08 c0       	rjmp	.+16     	; 0x4f50 <vfprintf+0xec>
    4f40:	8c 36       	cpi	r24, 0x6C	; 108
    4f42:	21 f4       	brne	.+8      	; 0x4f4c <vfprintf+0xe8>
    4f44:	29 2d       	mov	r18, r9
    4f46:	20 68       	ori	r18, 0x80	; 128
    4f48:	92 2e       	mov	r9, r18
    4f4a:	02 c0       	rjmp	.+4      	; 0x4f50 <vfprintf+0xec>
    4f4c:	88 36       	cpi	r24, 0x68	; 104
    4f4e:	41 f4       	brne	.+16     	; 0x4f60 <vfprintf+0xfc>
    4f50:	f1 01       	movw	r30, r2
    4f52:	93 fd       	sbrc	r25, 3
    4f54:	85 91       	lpm	r24, Z+
    4f56:	93 ff       	sbrs	r25, 3
    4f58:	81 91       	ld	r24, Z+
    4f5a:	1f 01       	movw	r2, r30
    4f5c:	81 11       	cpse	r24, r1
    4f5e:	b3 cf       	rjmp	.-154    	; 0x4ec6 <vfprintf+0x62>
    4f60:	9b eb       	ldi	r25, 0xBB	; 187
    4f62:	98 0f       	add	r25, r24
    4f64:	93 30       	cpi	r25, 0x03	; 3
    4f66:	20 f4       	brcc	.+8      	; 0x4f70 <vfprintf+0x10c>
    4f68:	99 2d       	mov	r25, r9
    4f6a:	90 61       	ori	r25, 0x10	; 16
    4f6c:	80 5e       	subi	r24, 0xE0	; 224
    4f6e:	07 c0       	rjmp	.+14     	; 0x4f7e <vfprintf+0x11a>
    4f70:	9b e9       	ldi	r25, 0x9B	; 155
    4f72:	98 0f       	add	r25, r24
    4f74:	93 30       	cpi	r25, 0x03	; 3
    4f76:	08 f0       	brcs	.+2      	; 0x4f7a <vfprintf+0x116>
    4f78:	66 c1       	rjmp	.+716    	; 0x5246 <vfprintf+0x3e2>
    4f7a:	99 2d       	mov	r25, r9
    4f7c:	9f 7e       	andi	r25, 0xEF	; 239
    4f7e:	96 ff       	sbrs	r25, 6
    4f80:	16 e0       	ldi	r17, 0x06	; 6
    4f82:	9f 73       	andi	r25, 0x3F	; 63
    4f84:	99 2e       	mov	r9, r25
    4f86:	85 36       	cpi	r24, 0x65	; 101
    4f88:	19 f4       	brne	.+6      	; 0x4f90 <vfprintf+0x12c>
    4f8a:	90 64       	ori	r25, 0x40	; 64
    4f8c:	99 2e       	mov	r9, r25
    4f8e:	08 c0       	rjmp	.+16     	; 0x4fa0 <vfprintf+0x13c>
    4f90:	86 36       	cpi	r24, 0x66	; 102
    4f92:	21 f4       	brne	.+8      	; 0x4f9c <vfprintf+0x138>
    4f94:	39 2f       	mov	r19, r25
    4f96:	30 68       	ori	r19, 0x80	; 128
    4f98:	93 2e       	mov	r9, r19
    4f9a:	02 c0       	rjmp	.+4      	; 0x4fa0 <vfprintf+0x13c>
    4f9c:	11 11       	cpse	r17, r1
    4f9e:	11 50       	subi	r17, 0x01	; 1
    4fa0:	97 fe       	sbrs	r9, 7
    4fa2:	07 c0       	rjmp	.+14     	; 0x4fb2 <vfprintf+0x14e>
    4fa4:	1c 33       	cpi	r17, 0x3C	; 60
    4fa6:	50 f4       	brcc	.+20     	; 0x4fbc <vfprintf+0x158>
    4fa8:	44 24       	eor	r4, r4
    4faa:	43 94       	inc	r4
    4fac:	41 0e       	add	r4, r17
    4fae:	27 e0       	ldi	r18, 0x07	; 7
    4fb0:	0b c0       	rjmp	.+22     	; 0x4fc8 <vfprintf+0x164>
    4fb2:	18 30       	cpi	r17, 0x08	; 8
    4fb4:	38 f0       	brcs	.+14     	; 0x4fc4 <vfprintf+0x160>
    4fb6:	27 e0       	ldi	r18, 0x07	; 7
    4fb8:	17 e0       	ldi	r17, 0x07	; 7
    4fba:	05 c0       	rjmp	.+10     	; 0x4fc6 <vfprintf+0x162>
    4fbc:	27 e0       	ldi	r18, 0x07	; 7
    4fbe:	9c e3       	ldi	r25, 0x3C	; 60
    4fc0:	49 2e       	mov	r4, r25
    4fc2:	02 c0       	rjmp	.+4      	; 0x4fc8 <vfprintf+0x164>
    4fc4:	21 2f       	mov	r18, r17
    4fc6:	41 2c       	mov	r4, r1
    4fc8:	56 01       	movw	r10, r12
    4fca:	84 e0       	ldi	r24, 0x04	; 4
    4fcc:	a8 0e       	add	r10, r24
    4fce:	b1 1c       	adc	r11, r1
    4fd0:	f6 01       	movw	r30, r12
    4fd2:	60 81       	ld	r22, Z
    4fd4:	71 81       	ldd	r23, Z+1	; 0x01
    4fd6:	82 81       	ldd	r24, Z+2	; 0x02
    4fd8:	93 81       	ldd	r25, Z+3	; 0x03
    4fda:	04 2d       	mov	r16, r4
    4fdc:	a3 01       	movw	r20, r6
    4fde:	0e 94 5f 2b 	call	0x56be	; 0x56be <__ftoa_engine>
    4fe2:	6c 01       	movw	r12, r24
    4fe4:	f9 81       	ldd	r31, Y+1	; 0x01
    4fe6:	fc 87       	std	Y+12, r31	; 0x0c
    4fe8:	f0 ff       	sbrs	r31, 0
    4fea:	02 c0       	rjmp	.+4      	; 0x4ff0 <vfprintf+0x18c>
    4fec:	f3 ff       	sbrs	r31, 3
    4fee:	06 c0       	rjmp	.+12     	; 0x4ffc <vfprintf+0x198>
    4ff0:	91 fc       	sbrc	r9, 1
    4ff2:	06 c0       	rjmp	.+12     	; 0x5000 <vfprintf+0x19c>
    4ff4:	92 fe       	sbrs	r9, 2
    4ff6:	06 c0       	rjmp	.+12     	; 0x5004 <vfprintf+0x1a0>
    4ff8:	00 e2       	ldi	r16, 0x20	; 32
    4ffa:	05 c0       	rjmp	.+10     	; 0x5006 <vfprintf+0x1a2>
    4ffc:	0d e2       	ldi	r16, 0x2D	; 45
    4ffe:	03 c0       	rjmp	.+6      	; 0x5006 <vfprintf+0x1a2>
    5000:	0b e2       	ldi	r16, 0x2B	; 43
    5002:	01 c0       	rjmp	.+2      	; 0x5006 <vfprintf+0x1a2>
    5004:	00 e0       	ldi	r16, 0x00	; 0
    5006:	8c 85       	ldd	r24, Y+12	; 0x0c
    5008:	8c 70       	andi	r24, 0x0C	; 12
    500a:	19 f0       	breq	.+6      	; 0x5012 <vfprintf+0x1ae>
    500c:	01 11       	cpse	r16, r1
    500e:	5a c2       	rjmp	.+1204   	; 0x54c4 <vfprintf+0x660>
    5010:	9b c2       	rjmp	.+1334   	; 0x5548 <vfprintf+0x6e4>
    5012:	97 fe       	sbrs	r9, 7
    5014:	10 c0       	rjmp	.+32     	; 0x5036 <vfprintf+0x1d2>
    5016:	4c 0c       	add	r4, r12
    5018:	fc 85       	ldd	r31, Y+12	; 0x0c
    501a:	f4 ff       	sbrs	r31, 4
    501c:	04 c0       	rjmp	.+8      	; 0x5026 <vfprintf+0x1c2>
    501e:	8a 81       	ldd	r24, Y+2	; 0x02
    5020:	81 33       	cpi	r24, 0x31	; 49
    5022:	09 f4       	brne	.+2      	; 0x5026 <vfprintf+0x1c2>
    5024:	4a 94       	dec	r4
    5026:	14 14       	cp	r1, r4
    5028:	74 f5       	brge	.+92     	; 0x5086 <vfprintf+0x222>
    502a:	28 e0       	ldi	r18, 0x08	; 8
    502c:	24 15       	cp	r18, r4
    502e:	78 f5       	brcc	.+94     	; 0x508e <vfprintf+0x22a>
    5030:	88 e0       	ldi	r24, 0x08	; 8
    5032:	48 2e       	mov	r4, r24
    5034:	2c c0       	rjmp	.+88     	; 0x508e <vfprintf+0x22a>
    5036:	96 fc       	sbrc	r9, 6
    5038:	2a c0       	rjmp	.+84     	; 0x508e <vfprintf+0x22a>
    503a:	81 2f       	mov	r24, r17
    503c:	90 e0       	ldi	r25, 0x00	; 0
    503e:	8c 15       	cp	r24, r12
    5040:	9d 05       	cpc	r25, r13
    5042:	9c f0       	brlt	.+38     	; 0x506a <vfprintf+0x206>
    5044:	3c ef       	ldi	r19, 0xFC	; 252
    5046:	c3 16       	cp	r12, r19
    5048:	3f ef       	ldi	r19, 0xFF	; 255
    504a:	d3 06       	cpc	r13, r19
    504c:	74 f0       	brlt	.+28     	; 0x506a <vfprintf+0x206>
    504e:	89 2d       	mov	r24, r9
    5050:	80 68       	ori	r24, 0x80	; 128
    5052:	98 2e       	mov	r9, r24
    5054:	0a c0       	rjmp	.+20     	; 0x506a <vfprintf+0x206>
    5056:	e2 e0       	ldi	r30, 0x02	; 2
    5058:	f0 e0       	ldi	r31, 0x00	; 0
    505a:	ec 0f       	add	r30, r28
    505c:	fd 1f       	adc	r31, r29
    505e:	e1 0f       	add	r30, r17
    5060:	f1 1d       	adc	r31, r1
    5062:	80 81       	ld	r24, Z
    5064:	80 33       	cpi	r24, 0x30	; 48
    5066:	19 f4       	brne	.+6      	; 0x506e <vfprintf+0x20a>
    5068:	11 50       	subi	r17, 0x01	; 1
    506a:	11 11       	cpse	r17, r1
    506c:	f4 cf       	rjmp	.-24     	; 0x5056 <vfprintf+0x1f2>
    506e:	97 fe       	sbrs	r9, 7
    5070:	0e c0       	rjmp	.+28     	; 0x508e <vfprintf+0x22a>
    5072:	44 24       	eor	r4, r4
    5074:	43 94       	inc	r4
    5076:	41 0e       	add	r4, r17
    5078:	81 2f       	mov	r24, r17
    507a:	90 e0       	ldi	r25, 0x00	; 0
    507c:	c8 16       	cp	r12, r24
    507e:	d9 06       	cpc	r13, r25
    5080:	2c f4       	brge	.+10     	; 0x508c <vfprintf+0x228>
    5082:	1c 19       	sub	r17, r12
    5084:	04 c0       	rjmp	.+8      	; 0x508e <vfprintf+0x22a>
    5086:	44 24       	eor	r4, r4
    5088:	43 94       	inc	r4
    508a:	01 c0       	rjmp	.+2      	; 0x508e <vfprintf+0x22a>
    508c:	10 e0       	ldi	r17, 0x00	; 0
    508e:	97 fe       	sbrs	r9, 7
    5090:	06 c0       	rjmp	.+12     	; 0x509e <vfprintf+0x23a>
    5092:	1c 14       	cp	r1, r12
    5094:	1d 04       	cpc	r1, r13
    5096:	34 f4       	brge	.+12     	; 0x50a4 <vfprintf+0x240>
    5098:	c6 01       	movw	r24, r12
    509a:	01 96       	adiw	r24, 0x01	; 1
    509c:	05 c0       	rjmp	.+10     	; 0x50a8 <vfprintf+0x244>
    509e:	85 e0       	ldi	r24, 0x05	; 5
    50a0:	90 e0       	ldi	r25, 0x00	; 0
    50a2:	02 c0       	rjmp	.+4      	; 0x50a8 <vfprintf+0x244>
    50a4:	81 e0       	ldi	r24, 0x01	; 1
    50a6:	90 e0       	ldi	r25, 0x00	; 0
    50a8:	01 11       	cpse	r16, r1
    50aa:	01 96       	adiw	r24, 0x01	; 1
    50ac:	11 23       	and	r17, r17
    50ae:	31 f0       	breq	.+12     	; 0x50bc <vfprintf+0x258>
    50b0:	21 2f       	mov	r18, r17
    50b2:	30 e0       	ldi	r19, 0x00	; 0
    50b4:	2f 5f       	subi	r18, 0xFF	; 255
    50b6:	3f 4f       	sbci	r19, 0xFF	; 255
    50b8:	82 0f       	add	r24, r18
    50ba:	93 1f       	adc	r25, r19
    50bc:	25 2d       	mov	r18, r5
    50be:	30 e0       	ldi	r19, 0x00	; 0
    50c0:	82 17       	cp	r24, r18
    50c2:	93 07       	cpc	r25, r19
    50c4:	14 f4       	brge	.+4      	; 0x50ca <vfprintf+0x266>
    50c6:	58 1a       	sub	r5, r24
    50c8:	01 c0       	rjmp	.+2      	; 0x50cc <vfprintf+0x268>
    50ca:	51 2c       	mov	r5, r1
    50cc:	89 2d       	mov	r24, r9
    50ce:	89 70       	andi	r24, 0x09	; 9
    50d0:	49 f4       	brne	.+18     	; 0x50e4 <vfprintf+0x280>
    50d2:	55 20       	and	r5, r5
    50d4:	39 f0       	breq	.+14     	; 0x50e4 <vfprintf+0x280>
    50d6:	b7 01       	movw	r22, r14
    50d8:	80 e2       	ldi	r24, 0x20	; 32
    50da:	90 e0       	ldi	r25, 0x00	; 0
    50dc:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    50e0:	5a 94       	dec	r5
    50e2:	f7 cf       	rjmp	.-18     	; 0x50d2 <vfprintf+0x26e>
    50e4:	00 23       	and	r16, r16
    50e6:	29 f0       	breq	.+10     	; 0x50f2 <vfprintf+0x28e>
    50e8:	b7 01       	movw	r22, r14
    50ea:	80 2f       	mov	r24, r16
    50ec:	90 e0       	ldi	r25, 0x00	; 0
    50ee:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    50f2:	93 fc       	sbrc	r9, 3
    50f4:	09 c0       	rjmp	.+18     	; 0x5108 <vfprintf+0x2a4>
    50f6:	55 20       	and	r5, r5
    50f8:	39 f0       	breq	.+14     	; 0x5108 <vfprintf+0x2a4>
    50fa:	b7 01       	movw	r22, r14
    50fc:	80 e3       	ldi	r24, 0x30	; 48
    50fe:	90 e0       	ldi	r25, 0x00	; 0
    5100:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    5104:	5a 94       	dec	r5
    5106:	f7 cf       	rjmp	.-18     	; 0x50f6 <vfprintf+0x292>
    5108:	97 fe       	sbrs	r9, 7
    510a:	4c c0       	rjmp	.+152    	; 0x51a4 <vfprintf+0x340>
    510c:	46 01       	movw	r8, r12
    510e:	d7 fe       	sbrs	r13, 7
    5110:	02 c0       	rjmp	.+4      	; 0x5116 <vfprintf+0x2b2>
    5112:	81 2c       	mov	r8, r1
    5114:	91 2c       	mov	r9, r1
    5116:	c6 01       	movw	r24, r12
    5118:	88 19       	sub	r24, r8
    511a:	99 09       	sbc	r25, r9
    511c:	f3 01       	movw	r30, r6
    511e:	e8 0f       	add	r30, r24
    5120:	f9 1f       	adc	r31, r25
    5122:	fe 87       	std	Y+14, r31	; 0x0e
    5124:	ed 87       	std	Y+13, r30	; 0x0d
    5126:	96 01       	movw	r18, r12
    5128:	24 19       	sub	r18, r4
    512a:	31 09       	sbc	r19, r1
    512c:	38 8b       	std	Y+16, r19	; 0x10
    512e:	2f 87       	std	Y+15, r18	; 0x0f
    5130:	01 2f       	mov	r16, r17
    5132:	10 e0       	ldi	r17, 0x00	; 0
    5134:	11 95       	neg	r17
    5136:	01 95       	neg	r16
    5138:	11 09       	sbc	r17, r1
    513a:	3f ef       	ldi	r19, 0xFF	; 255
    513c:	83 16       	cp	r8, r19
    513e:	93 06       	cpc	r9, r19
    5140:	29 f4       	brne	.+10     	; 0x514c <vfprintf+0x2e8>
    5142:	b7 01       	movw	r22, r14
    5144:	8e e2       	ldi	r24, 0x2E	; 46
    5146:	90 e0       	ldi	r25, 0x00	; 0
    5148:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    514c:	c8 14       	cp	r12, r8
    514e:	d9 04       	cpc	r13, r9
    5150:	4c f0       	brlt	.+18     	; 0x5164 <vfprintf+0x300>
    5152:	8f 85       	ldd	r24, Y+15	; 0x0f
    5154:	98 89       	ldd	r25, Y+16	; 0x10
    5156:	88 15       	cp	r24, r8
    5158:	99 05       	cpc	r25, r9
    515a:	24 f4       	brge	.+8      	; 0x5164 <vfprintf+0x300>
    515c:	ed 85       	ldd	r30, Y+13	; 0x0d
    515e:	fe 85       	ldd	r31, Y+14	; 0x0e
    5160:	81 81       	ldd	r24, Z+1	; 0x01
    5162:	01 c0       	rjmp	.+2      	; 0x5166 <vfprintf+0x302>
    5164:	80 e3       	ldi	r24, 0x30	; 48
    5166:	f1 e0       	ldi	r31, 0x01	; 1
    5168:	8f 1a       	sub	r8, r31
    516a:	91 08       	sbc	r9, r1
    516c:	2d 85       	ldd	r18, Y+13	; 0x0d
    516e:	3e 85       	ldd	r19, Y+14	; 0x0e
    5170:	2f 5f       	subi	r18, 0xFF	; 255
    5172:	3f 4f       	sbci	r19, 0xFF	; 255
    5174:	3e 87       	std	Y+14, r19	; 0x0e
    5176:	2d 87       	std	Y+13, r18	; 0x0d
    5178:	80 16       	cp	r8, r16
    517a:	91 06       	cpc	r9, r17
    517c:	2c f0       	brlt	.+10     	; 0x5188 <vfprintf+0x324>
    517e:	b7 01       	movw	r22, r14
    5180:	90 e0       	ldi	r25, 0x00	; 0
    5182:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    5186:	d9 cf       	rjmp	.-78     	; 0x513a <vfprintf+0x2d6>
    5188:	c8 14       	cp	r12, r8
    518a:	d9 04       	cpc	r13, r9
    518c:	41 f4       	brne	.+16     	; 0x519e <vfprintf+0x33a>
    518e:	9a 81       	ldd	r25, Y+2	; 0x02
    5190:	96 33       	cpi	r25, 0x36	; 54
    5192:	20 f4       	brcc	.+8      	; 0x519c <vfprintf+0x338>
    5194:	95 33       	cpi	r25, 0x35	; 53
    5196:	19 f4       	brne	.+6      	; 0x519e <vfprintf+0x33a>
    5198:	3c 85       	ldd	r19, Y+12	; 0x0c
    519a:	34 ff       	sbrs	r19, 4
    519c:	81 e3       	ldi	r24, 0x31	; 49
    519e:	b7 01       	movw	r22, r14
    51a0:	90 e0       	ldi	r25, 0x00	; 0
    51a2:	4e c0       	rjmp	.+156    	; 0x5240 <vfprintf+0x3dc>
    51a4:	8a 81       	ldd	r24, Y+2	; 0x02
    51a6:	81 33       	cpi	r24, 0x31	; 49
    51a8:	19 f0       	breq	.+6      	; 0x51b0 <vfprintf+0x34c>
    51aa:	9c 85       	ldd	r25, Y+12	; 0x0c
    51ac:	9f 7e       	andi	r25, 0xEF	; 239
    51ae:	9c 87       	std	Y+12, r25	; 0x0c
    51b0:	b7 01       	movw	r22, r14
    51b2:	90 e0       	ldi	r25, 0x00	; 0
    51b4:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    51b8:	11 11       	cpse	r17, r1
    51ba:	05 c0       	rjmp	.+10     	; 0x51c6 <vfprintf+0x362>
    51bc:	94 fc       	sbrc	r9, 4
    51be:	18 c0       	rjmp	.+48     	; 0x51f0 <vfprintf+0x38c>
    51c0:	85 e6       	ldi	r24, 0x65	; 101
    51c2:	90 e0       	ldi	r25, 0x00	; 0
    51c4:	17 c0       	rjmp	.+46     	; 0x51f4 <vfprintf+0x390>
    51c6:	b7 01       	movw	r22, r14
    51c8:	8e e2       	ldi	r24, 0x2E	; 46
    51ca:	90 e0       	ldi	r25, 0x00	; 0
    51cc:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    51d0:	1e 5f       	subi	r17, 0xFE	; 254
    51d2:	82 e0       	ldi	r24, 0x02	; 2
    51d4:	01 e0       	ldi	r16, 0x01	; 1
    51d6:	08 0f       	add	r16, r24
    51d8:	f3 01       	movw	r30, r6
    51da:	e8 0f       	add	r30, r24
    51dc:	f1 1d       	adc	r31, r1
    51de:	80 81       	ld	r24, Z
    51e0:	b7 01       	movw	r22, r14
    51e2:	90 e0       	ldi	r25, 0x00	; 0
    51e4:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    51e8:	80 2f       	mov	r24, r16
    51ea:	01 13       	cpse	r16, r17
    51ec:	f3 cf       	rjmp	.-26     	; 0x51d4 <vfprintf+0x370>
    51ee:	e6 cf       	rjmp	.-52     	; 0x51bc <vfprintf+0x358>
    51f0:	85 e4       	ldi	r24, 0x45	; 69
    51f2:	90 e0       	ldi	r25, 0x00	; 0
    51f4:	b7 01       	movw	r22, r14
    51f6:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    51fa:	d7 fc       	sbrc	r13, 7
    51fc:	06 c0       	rjmp	.+12     	; 0x520a <vfprintf+0x3a6>
    51fe:	c1 14       	cp	r12, r1
    5200:	d1 04       	cpc	r13, r1
    5202:	41 f4       	brne	.+16     	; 0x5214 <vfprintf+0x3b0>
    5204:	ec 85       	ldd	r30, Y+12	; 0x0c
    5206:	e4 ff       	sbrs	r30, 4
    5208:	05 c0       	rjmp	.+10     	; 0x5214 <vfprintf+0x3b0>
    520a:	d1 94       	neg	r13
    520c:	c1 94       	neg	r12
    520e:	d1 08       	sbc	r13, r1
    5210:	8d e2       	ldi	r24, 0x2D	; 45
    5212:	01 c0       	rjmp	.+2      	; 0x5216 <vfprintf+0x3b2>
    5214:	8b e2       	ldi	r24, 0x2B	; 43
    5216:	b7 01       	movw	r22, r14
    5218:	90 e0       	ldi	r25, 0x00	; 0
    521a:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    521e:	80 e3       	ldi	r24, 0x30	; 48
    5220:	2a e0       	ldi	r18, 0x0A	; 10
    5222:	c2 16       	cp	r12, r18
    5224:	d1 04       	cpc	r13, r1
    5226:	2c f0       	brlt	.+10     	; 0x5232 <vfprintf+0x3ce>
    5228:	8f 5f       	subi	r24, 0xFF	; 255
    522a:	fa e0       	ldi	r31, 0x0A	; 10
    522c:	cf 1a       	sub	r12, r31
    522e:	d1 08       	sbc	r13, r1
    5230:	f7 cf       	rjmp	.-18     	; 0x5220 <vfprintf+0x3bc>
    5232:	b7 01       	movw	r22, r14
    5234:	90 e0       	ldi	r25, 0x00	; 0
    5236:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    523a:	b7 01       	movw	r22, r14
    523c:	c6 01       	movw	r24, r12
    523e:	c0 96       	adiw	r24, 0x30	; 48
    5240:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    5244:	54 c1       	rjmp	.+680    	; 0x54ee <vfprintf+0x68a>
    5246:	83 36       	cpi	r24, 0x63	; 99
    5248:	31 f0       	breq	.+12     	; 0x5256 <vfprintf+0x3f2>
    524a:	83 37       	cpi	r24, 0x73	; 115
    524c:	79 f0       	breq	.+30     	; 0x526c <vfprintf+0x408>
    524e:	83 35       	cpi	r24, 0x53	; 83
    5250:	09 f0       	breq	.+2      	; 0x5254 <vfprintf+0x3f0>
    5252:	56 c0       	rjmp	.+172    	; 0x5300 <vfprintf+0x49c>
    5254:	20 c0       	rjmp	.+64     	; 0x5296 <vfprintf+0x432>
    5256:	56 01       	movw	r10, r12
    5258:	32 e0       	ldi	r19, 0x02	; 2
    525a:	a3 0e       	add	r10, r19
    525c:	b1 1c       	adc	r11, r1
    525e:	f6 01       	movw	r30, r12
    5260:	80 81       	ld	r24, Z
    5262:	89 83       	std	Y+1, r24	; 0x01
    5264:	01 e0       	ldi	r16, 0x01	; 1
    5266:	10 e0       	ldi	r17, 0x00	; 0
    5268:	63 01       	movw	r12, r6
    526a:	12 c0       	rjmp	.+36     	; 0x5290 <vfprintf+0x42c>
    526c:	56 01       	movw	r10, r12
    526e:	f2 e0       	ldi	r31, 0x02	; 2
    5270:	af 0e       	add	r10, r31
    5272:	b1 1c       	adc	r11, r1
    5274:	f6 01       	movw	r30, r12
    5276:	c0 80       	ld	r12, Z
    5278:	d1 80       	ldd	r13, Z+1	; 0x01
    527a:	96 fe       	sbrs	r9, 6
    527c:	03 c0       	rjmp	.+6      	; 0x5284 <vfprintf+0x420>
    527e:	61 2f       	mov	r22, r17
    5280:	70 e0       	ldi	r23, 0x00	; 0
    5282:	02 c0       	rjmp	.+4      	; 0x5288 <vfprintf+0x424>
    5284:	6f ef       	ldi	r22, 0xFF	; 255
    5286:	7f ef       	ldi	r23, 0xFF	; 255
    5288:	c6 01       	movw	r24, r12
    528a:	0e 94 5d 2c 	call	0x58ba	; 0x58ba <strnlen>
    528e:	8c 01       	movw	r16, r24
    5290:	f9 2d       	mov	r31, r9
    5292:	ff 77       	andi	r31, 0x7F	; 127
    5294:	14 c0       	rjmp	.+40     	; 0x52be <vfprintf+0x45a>
    5296:	56 01       	movw	r10, r12
    5298:	22 e0       	ldi	r18, 0x02	; 2
    529a:	a2 0e       	add	r10, r18
    529c:	b1 1c       	adc	r11, r1
    529e:	f6 01       	movw	r30, r12
    52a0:	c0 80       	ld	r12, Z
    52a2:	d1 80       	ldd	r13, Z+1	; 0x01
    52a4:	96 fe       	sbrs	r9, 6
    52a6:	03 c0       	rjmp	.+6      	; 0x52ae <vfprintf+0x44a>
    52a8:	61 2f       	mov	r22, r17
    52aa:	70 e0       	ldi	r23, 0x00	; 0
    52ac:	02 c0       	rjmp	.+4      	; 0x52b2 <vfprintf+0x44e>
    52ae:	6f ef       	ldi	r22, 0xFF	; 255
    52b0:	7f ef       	ldi	r23, 0xFF	; 255
    52b2:	c6 01       	movw	r24, r12
    52b4:	0e 94 37 2c 	call	0x586e	; 0x586e <strnlen_P>
    52b8:	8c 01       	movw	r16, r24
    52ba:	f9 2d       	mov	r31, r9
    52bc:	f0 68       	ori	r31, 0x80	; 128
    52be:	9f 2e       	mov	r9, r31
    52c0:	f3 fd       	sbrc	r31, 3
    52c2:	1a c0       	rjmp	.+52     	; 0x52f8 <vfprintf+0x494>
    52c4:	85 2d       	mov	r24, r5
    52c6:	90 e0       	ldi	r25, 0x00	; 0
    52c8:	08 17       	cp	r16, r24
    52ca:	19 07       	cpc	r17, r25
    52cc:	a8 f4       	brcc	.+42     	; 0x52f8 <vfprintf+0x494>
    52ce:	b7 01       	movw	r22, r14
    52d0:	80 e2       	ldi	r24, 0x20	; 32
    52d2:	90 e0       	ldi	r25, 0x00	; 0
    52d4:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    52d8:	5a 94       	dec	r5
    52da:	f4 cf       	rjmp	.-24     	; 0x52c4 <vfprintf+0x460>
    52dc:	f6 01       	movw	r30, r12
    52de:	97 fc       	sbrc	r9, 7
    52e0:	85 91       	lpm	r24, Z+
    52e2:	97 fe       	sbrs	r9, 7
    52e4:	81 91       	ld	r24, Z+
    52e6:	6f 01       	movw	r12, r30
    52e8:	b7 01       	movw	r22, r14
    52ea:	90 e0       	ldi	r25, 0x00	; 0
    52ec:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    52f0:	51 10       	cpse	r5, r1
    52f2:	5a 94       	dec	r5
    52f4:	01 50       	subi	r16, 0x01	; 1
    52f6:	11 09       	sbc	r17, r1
    52f8:	01 15       	cp	r16, r1
    52fa:	11 05       	cpc	r17, r1
    52fc:	79 f7       	brne	.-34     	; 0x52dc <vfprintf+0x478>
    52fe:	f7 c0       	rjmp	.+494    	; 0x54ee <vfprintf+0x68a>
    5300:	84 36       	cpi	r24, 0x64	; 100
    5302:	11 f0       	breq	.+4      	; 0x5308 <vfprintf+0x4a4>
    5304:	89 36       	cpi	r24, 0x69	; 105
    5306:	61 f5       	brne	.+88     	; 0x5360 <vfprintf+0x4fc>
    5308:	56 01       	movw	r10, r12
    530a:	97 fe       	sbrs	r9, 7
    530c:	09 c0       	rjmp	.+18     	; 0x5320 <vfprintf+0x4bc>
    530e:	24 e0       	ldi	r18, 0x04	; 4
    5310:	a2 0e       	add	r10, r18
    5312:	b1 1c       	adc	r11, r1
    5314:	f6 01       	movw	r30, r12
    5316:	60 81       	ld	r22, Z
    5318:	71 81       	ldd	r23, Z+1	; 0x01
    531a:	82 81       	ldd	r24, Z+2	; 0x02
    531c:	93 81       	ldd	r25, Z+3	; 0x03
    531e:	0a c0       	rjmp	.+20     	; 0x5334 <vfprintf+0x4d0>
    5320:	f2 e0       	ldi	r31, 0x02	; 2
    5322:	af 0e       	add	r10, r31
    5324:	b1 1c       	adc	r11, r1
    5326:	f6 01       	movw	r30, r12
    5328:	60 81       	ld	r22, Z
    532a:	71 81       	ldd	r23, Z+1	; 0x01
    532c:	07 2e       	mov	r0, r23
    532e:	00 0c       	add	r0, r0
    5330:	88 0b       	sbc	r24, r24
    5332:	99 0b       	sbc	r25, r25
    5334:	f9 2d       	mov	r31, r9
    5336:	ff 76       	andi	r31, 0x6F	; 111
    5338:	9f 2e       	mov	r9, r31
    533a:	97 ff       	sbrs	r25, 7
    533c:	09 c0       	rjmp	.+18     	; 0x5350 <vfprintf+0x4ec>
    533e:	90 95       	com	r25
    5340:	80 95       	com	r24
    5342:	70 95       	com	r23
    5344:	61 95       	neg	r22
    5346:	7f 4f       	sbci	r23, 0xFF	; 255
    5348:	8f 4f       	sbci	r24, 0xFF	; 255
    534a:	9f 4f       	sbci	r25, 0xFF	; 255
    534c:	f0 68       	ori	r31, 0x80	; 128
    534e:	9f 2e       	mov	r9, r31
    5350:	2a e0       	ldi	r18, 0x0A	; 10
    5352:	30 e0       	ldi	r19, 0x00	; 0
    5354:	a3 01       	movw	r20, r6
    5356:	0e 94 df 2c 	call	0x59be	; 0x59be <__ultoa_invert>
    535a:	c8 2e       	mov	r12, r24
    535c:	c6 18       	sub	r12, r6
    535e:	3f c0       	rjmp	.+126    	; 0x53de <vfprintf+0x57a>
    5360:	09 2d       	mov	r16, r9
    5362:	85 37       	cpi	r24, 0x75	; 117
    5364:	21 f4       	brne	.+8      	; 0x536e <vfprintf+0x50a>
    5366:	0f 7e       	andi	r16, 0xEF	; 239
    5368:	2a e0       	ldi	r18, 0x0A	; 10
    536a:	30 e0       	ldi	r19, 0x00	; 0
    536c:	1d c0       	rjmp	.+58     	; 0x53a8 <vfprintf+0x544>
    536e:	09 7f       	andi	r16, 0xF9	; 249
    5370:	8f 36       	cpi	r24, 0x6F	; 111
    5372:	91 f0       	breq	.+36     	; 0x5398 <vfprintf+0x534>
    5374:	18 f4       	brcc	.+6      	; 0x537c <vfprintf+0x518>
    5376:	88 35       	cpi	r24, 0x58	; 88
    5378:	59 f0       	breq	.+22     	; 0x5390 <vfprintf+0x52c>
    537a:	c3 c0       	rjmp	.+390    	; 0x5502 <vfprintf+0x69e>
    537c:	80 37       	cpi	r24, 0x70	; 112
    537e:	19 f0       	breq	.+6      	; 0x5386 <vfprintf+0x522>
    5380:	88 37       	cpi	r24, 0x78	; 120
    5382:	11 f0       	breq	.+4      	; 0x5388 <vfprintf+0x524>
    5384:	be c0       	rjmp	.+380    	; 0x5502 <vfprintf+0x69e>
    5386:	00 61       	ori	r16, 0x10	; 16
    5388:	04 ff       	sbrs	r16, 4
    538a:	09 c0       	rjmp	.+18     	; 0x539e <vfprintf+0x53a>
    538c:	04 60       	ori	r16, 0x04	; 4
    538e:	07 c0       	rjmp	.+14     	; 0x539e <vfprintf+0x53a>
    5390:	94 fe       	sbrs	r9, 4
    5392:	08 c0       	rjmp	.+16     	; 0x53a4 <vfprintf+0x540>
    5394:	06 60       	ori	r16, 0x06	; 6
    5396:	06 c0       	rjmp	.+12     	; 0x53a4 <vfprintf+0x540>
    5398:	28 e0       	ldi	r18, 0x08	; 8
    539a:	30 e0       	ldi	r19, 0x00	; 0
    539c:	05 c0       	rjmp	.+10     	; 0x53a8 <vfprintf+0x544>
    539e:	20 e1       	ldi	r18, 0x10	; 16
    53a0:	30 e0       	ldi	r19, 0x00	; 0
    53a2:	02 c0       	rjmp	.+4      	; 0x53a8 <vfprintf+0x544>
    53a4:	20 e1       	ldi	r18, 0x10	; 16
    53a6:	32 e0       	ldi	r19, 0x02	; 2
    53a8:	56 01       	movw	r10, r12
    53aa:	07 ff       	sbrs	r16, 7
    53ac:	09 c0       	rjmp	.+18     	; 0x53c0 <vfprintf+0x55c>
    53ae:	84 e0       	ldi	r24, 0x04	; 4
    53b0:	a8 0e       	add	r10, r24
    53b2:	b1 1c       	adc	r11, r1
    53b4:	f6 01       	movw	r30, r12
    53b6:	60 81       	ld	r22, Z
    53b8:	71 81       	ldd	r23, Z+1	; 0x01
    53ba:	82 81       	ldd	r24, Z+2	; 0x02
    53bc:	93 81       	ldd	r25, Z+3	; 0x03
    53be:	08 c0       	rjmp	.+16     	; 0x53d0 <vfprintf+0x56c>
    53c0:	f2 e0       	ldi	r31, 0x02	; 2
    53c2:	af 0e       	add	r10, r31
    53c4:	b1 1c       	adc	r11, r1
    53c6:	f6 01       	movw	r30, r12
    53c8:	60 81       	ld	r22, Z
    53ca:	71 81       	ldd	r23, Z+1	; 0x01
    53cc:	80 e0       	ldi	r24, 0x00	; 0
    53ce:	90 e0       	ldi	r25, 0x00	; 0
    53d0:	a3 01       	movw	r20, r6
    53d2:	0e 94 df 2c 	call	0x59be	; 0x59be <__ultoa_invert>
    53d6:	c8 2e       	mov	r12, r24
    53d8:	c6 18       	sub	r12, r6
    53da:	0f 77       	andi	r16, 0x7F	; 127
    53dc:	90 2e       	mov	r9, r16
    53de:	96 fe       	sbrs	r9, 6
    53e0:	0b c0       	rjmp	.+22     	; 0x53f8 <vfprintf+0x594>
    53e2:	09 2d       	mov	r16, r9
    53e4:	0e 7f       	andi	r16, 0xFE	; 254
    53e6:	c1 16       	cp	r12, r17
    53e8:	50 f4       	brcc	.+20     	; 0x53fe <vfprintf+0x59a>
    53ea:	94 fe       	sbrs	r9, 4
    53ec:	0a c0       	rjmp	.+20     	; 0x5402 <vfprintf+0x59e>
    53ee:	92 fc       	sbrc	r9, 2
    53f0:	08 c0       	rjmp	.+16     	; 0x5402 <vfprintf+0x59e>
    53f2:	09 2d       	mov	r16, r9
    53f4:	0e 7e       	andi	r16, 0xEE	; 238
    53f6:	05 c0       	rjmp	.+10     	; 0x5402 <vfprintf+0x59e>
    53f8:	dc 2c       	mov	r13, r12
    53fa:	09 2d       	mov	r16, r9
    53fc:	03 c0       	rjmp	.+6      	; 0x5404 <vfprintf+0x5a0>
    53fe:	dc 2c       	mov	r13, r12
    5400:	01 c0       	rjmp	.+2      	; 0x5404 <vfprintf+0x5a0>
    5402:	d1 2e       	mov	r13, r17
    5404:	04 ff       	sbrs	r16, 4
    5406:	0d c0       	rjmp	.+26     	; 0x5422 <vfprintf+0x5be>
    5408:	fe 01       	movw	r30, r28
    540a:	ec 0d       	add	r30, r12
    540c:	f1 1d       	adc	r31, r1
    540e:	80 81       	ld	r24, Z
    5410:	80 33       	cpi	r24, 0x30	; 48
    5412:	11 f4       	brne	.+4      	; 0x5418 <vfprintf+0x5b4>
    5414:	09 7e       	andi	r16, 0xE9	; 233
    5416:	09 c0       	rjmp	.+18     	; 0x542a <vfprintf+0x5c6>
    5418:	02 ff       	sbrs	r16, 2
    541a:	06 c0       	rjmp	.+12     	; 0x5428 <vfprintf+0x5c4>
    541c:	d3 94       	inc	r13
    541e:	d3 94       	inc	r13
    5420:	04 c0       	rjmp	.+8      	; 0x542a <vfprintf+0x5c6>
    5422:	80 2f       	mov	r24, r16
    5424:	86 78       	andi	r24, 0x86	; 134
    5426:	09 f0       	breq	.+2      	; 0x542a <vfprintf+0x5c6>
    5428:	d3 94       	inc	r13
    542a:	03 fd       	sbrc	r16, 3
    542c:	11 c0       	rjmp	.+34     	; 0x5450 <vfprintf+0x5ec>
    542e:	00 ff       	sbrs	r16, 0
    5430:	06 c0       	rjmp	.+12     	; 0x543e <vfprintf+0x5da>
    5432:	1c 2d       	mov	r17, r12
    5434:	d5 14       	cp	r13, r5
    5436:	80 f4       	brcc	.+32     	; 0x5458 <vfprintf+0x5f4>
    5438:	15 0d       	add	r17, r5
    543a:	1d 19       	sub	r17, r13
    543c:	0d c0       	rjmp	.+26     	; 0x5458 <vfprintf+0x5f4>
    543e:	d5 14       	cp	r13, r5
    5440:	58 f4       	brcc	.+22     	; 0x5458 <vfprintf+0x5f4>
    5442:	b7 01       	movw	r22, r14
    5444:	80 e2       	ldi	r24, 0x20	; 32
    5446:	90 e0       	ldi	r25, 0x00	; 0
    5448:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    544c:	d3 94       	inc	r13
    544e:	f7 cf       	rjmp	.-18     	; 0x543e <vfprintf+0x5da>
    5450:	d5 14       	cp	r13, r5
    5452:	10 f4       	brcc	.+4      	; 0x5458 <vfprintf+0x5f4>
    5454:	5d 18       	sub	r5, r13
    5456:	01 c0       	rjmp	.+2      	; 0x545a <vfprintf+0x5f6>
    5458:	51 2c       	mov	r5, r1
    545a:	04 ff       	sbrs	r16, 4
    545c:	10 c0       	rjmp	.+32     	; 0x547e <vfprintf+0x61a>
    545e:	b7 01       	movw	r22, r14
    5460:	80 e3       	ldi	r24, 0x30	; 48
    5462:	90 e0       	ldi	r25, 0x00	; 0
    5464:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    5468:	02 ff       	sbrs	r16, 2
    546a:	17 c0       	rjmp	.+46     	; 0x549a <vfprintf+0x636>
    546c:	01 fd       	sbrc	r16, 1
    546e:	03 c0       	rjmp	.+6      	; 0x5476 <vfprintf+0x612>
    5470:	88 e7       	ldi	r24, 0x78	; 120
    5472:	90 e0       	ldi	r25, 0x00	; 0
    5474:	02 c0       	rjmp	.+4      	; 0x547a <vfprintf+0x616>
    5476:	88 e5       	ldi	r24, 0x58	; 88
    5478:	90 e0       	ldi	r25, 0x00	; 0
    547a:	b7 01       	movw	r22, r14
    547c:	0c c0       	rjmp	.+24     	; 0x5496 <vfprintf+0x632>
    547e:	80 2f       	mov	r24, r16
    5480:	86 78       	andi	r24, 0x86	; 134
    5482:	59 f0       	breq	.+22     	; 0x549a <vfprintf+0x636>
    5484:	01 ff       	sbrs	r16, 1
    5486:	02 c0       	rjmp	.+4      	; 0x548c <vfprintf+0x628>
    5488:	8b e2       	ldi	r24, 0x2B	; 43
    548a:	01 c0       	rjmp	.+2      	; 0x548e <vfprintf+0x62a>
    548c:	80 e2       	ldi	r24, 0x20	; 32
    548e:	07 fd       	sbrc	r16, 7
    5490:	8d e2       	ldi	r24, 0x2D	; 45
    5492:	b7 01       	movw	r22, r14
    5494:	90 e0       	ldi	r25, 0x00	; 0
    5496:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    549a:	c1 16       	cp	r12, r17
    549c:	38 f4       	brcc	.+14     	; 0x54ac <vfprintf+0x648>
    549e:	b7 01       	movw	r22, r14
    54a0:	80 e3       	ldi	r24, 0x30	; 48
    54a2:	90 e0       	ldi	r25, 0x00	; 0
    54a4:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    54a8:	11 50       	subi	r17, 0x01	; 1
    54aa:	f7 cf       	rjmp	.-18     	; 0x549a <vfprintf+0x636>
    54ac:	ca 94       	dec	r12
    54ae:	f3 01       	movw	r30, r6
    54b0:	ec 0d       	add	r30, r12
    54b2:	f1 1d       	adc	r31, r1
    54b4:	80 81       	ld	r24, Z
    54b6:	b7 01       	movw	r22, r14
    54b8:	90 e0       	ldi	r25, 0x00	; 0
    54ba:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    54be:	c1 10       	cpse	r12, r1
    54c0:	f5 cf       	rjmp	.-22     	; 0x54ac <vfprintf+0x648>
    54c2:	15 c0       	rjmp	.+42     	; 0x54ee <vfprintf+0x68a>
    54c4:	f4 e0       	ldi	r31, 0x04	; 4
    54c6:	f5 15       	cp	r31, r5
    54c8:	60 f5       	brcc	.+88     	; 0x5522 <vfprintf+0x6be>
    54ca:	84 e0       	ldi	r24, 0x04	; 4
    54cc:	58 1a       	sub	r5, r24
    54ce:	93 fe       	sbrs	r9, 3
    54d0:	1f c0       	rjmp	.+62     	; 0x5510 <vfprintf+0x6ac>
    54d2:	01 11       	cpse	r16, r1
    54d4:	27 c0       	rjmp	.+78     	; 0x5524 <vfprintf+0x6c0>
    54d6:	2c 85       	ldd	r18, Y+12	; 0x0c
    54d8:	23 ff       	sbrs	r18, 3
    54da:	2a c0       	rjmp	.+84     	; 0x5530 <vfprintf+0x6cc>
    54dc:	0e e8       	ldi	r16, 0x8E	; 142
    54de:	10 e0       	ldi	r17, 0x00	; 0
    54e0:	39 2d       	mov	r19, r9
    54e2:	30 71       	andi	r19, 0x10	; 16
    54e4:	93 2e       	mov	r9, r19
    54e6:	f8 01       	movw	r30, r16
    54e8:	84 91       	lpm	r24, Z
    54ea:	81 11       	cpse	r24, r1
    54ec:	24 c0       	rjmp	.+72     	; 0x5536 <vfprintf+0x6d2>
    54ee:	55 20       	and	r5, r5
    54f0:	09 f4       	brne	.+2      	; 0x54f4 <vfprintf+0x690>
    54f2:	e4 cc       	rjmp	.-1592   	; 0x4ebc <vfprintf+0x58>
    54f4:	b7 01       	movw	r22, r14
    54f6:	80 e2       	ldi	r24, 0x20	; 32
    54f8:	90 e0       	ldi	r25, 0x00	; 0
    54fa:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    54fe:	5a 94       	dec	r5
    5500:	f6 cf       	rjmp	.-20     	; 0x54ee <vfprintf+0x68a>
    5502:	f7 01       	movw	r30, r14
    5504:	86 81       	ldd	r24, Z+6	; 0x06
    5506:	97 81       	ldd	r25, Z+7	; 0x07
    5508:	26 c0       	rjmp	.+76     	; 0x5556 <vfprintf+0x6f2>
    550a:	8f ef       	ldi	r24, 0xFF	; 255
    550c:	9f ef       	ldi	r25, 0xFF	; 255
    550e:	23 c0       	rjmp	.+70     	; 0x5556 <vfprintf+0x6f2>
    5510:	b7 01       	movw	r22, r14
    5512:	80 e2       	ldi	r24, 0x20	; 32
    5514:	90 e0       	ldi	r25, 0x00	; 0
    5516:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    551a:	5a 94       	dec	r5
    551c:	51 10       	cpse	r5, r1
    551e:	f8 cf       	rjmp	.-16     	; 0x5510 <vfprintf+0x6ac>
    5520:	d8 cf       	rjmp	.-80     	; 0x54d2 <vfprintf+0x66e>
    5522:	51 2c       	mov	r5, r1
    5524:	b7 01       	movw	r22, r14
    5526:	80 2f       	mov	r24, r16
    5528:	90 e0       	ldi	r25, 0x00	; 0
    552a:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    552e:	d3 cf       	rjmp	.-90     	; 0x54d6 <vfprintf+0x672>
    5530:	02 e9       	ldi	r16, 0x92	; 146
    5532:	10 e0       	ldi	r17, 0x00	; 0
    5534:	d5 cf       	rjmp	.-86     	; 0x54e0 <vfprintf+0x67c>
    5536:	91 10       	cpse	r9, r1
    5538:	80 52       	subi	r24, 0x20	; 32
    553a:	b7 01       	movw	r22, r14
    553c:	90 e0       	ldi	r25, 0x00	; 0
    553e:	0e 94 68 2c 	call	0x58d0	; 0x58d0 <fputc>
    5542:	0f 5f       	subi	r16, 0xFF	; 255
    5544:	1f 4f       	sbci	r17, 0xFF	; 255
    5546:	cf cf       	rjmp	.-98     	; 0x54e6 <vfprintf+0x682>
    5548:	23 e0       	ldi	r18, 0x03	; 3
    554a:	25 15       	cp	r18, r5
    554c:	10 f4       	brcc	.+4      	; 0x5552 <vfprintf+0x6ee>
    554e:	83 e0       	ldi	r24, 0x03	; 3
    5550:	bd cf       	rjmp	.-134    	; 0x54cc <vfprintf+0x668>
    5552:	51 2c       	mov	r5, r1
    5554:	c0 cf       	rjmp	.-128    	; 0x54d6 <vfprintf+0x672>
    5556:	60 96       	adiw	r28, 0x10	; 16
    5558:	e2 e1       	ldi	r30, 0x12	; 18
    555a:	0c 94 35 2b 	jmp	0x566a	; 0x566a <__epilogue_restores__>

0000555e <__mulsi3>:
    555e:	db 01       	movw	r26, r22
    5560:	8f 93       	push	r24
    5562:	9f 93       	push	r25
    5564:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
    5568:	bf 91       	pop	r27
    556a:	af 91       	pop	r26
    556c:	a2 9f       	mul	r26, r18
    556e:	80 0d       	add	r24, r0
    5570:	91 1d       	adc	r25, r1
    5572:	a3 9f       	mul	r26, r19
    5574:	90 0d       	add	r25, r0
    5576:	b2 9f       	mul	r27, r18
    5578:	90 0d       	add	r25, r0
    557a:	11 24       	eor	r1, r1
    557c:	08 95       	ret

0000557e <__udivmodsi4>:
    557e:	a1 e2       	ldi	r26, 0x21	; 33
    5580:	1a 2e       	mov	r1, r26
    5582:	aa 1b       	sub	r26, r26
    5584:	bb 1b       	sub	r27, r27
    5586:	fd 01       	movw	r30, r26
    5588:	0d c0       	rjmp	.+26     	; 0x55a4 <__udivmodsi4_ep>

0000558a <__udivmodsi4_loop>:
    558a:	aa 1f       	adc	r26, r26
    558c:	bb 1f       	adc	r27, r27
    558e:	ee 1f       	adc	r30, r30
    5590:	ff 1f       	adc	r31, r31
    5592:	a2 17       	cp	r26, r18
    5594:	b3 07       	cpc	r27, r19
    5596:	e4 07       	cpc	r30, r20
    5598:	f5 07       	cpc	r31, r21
    559a:	20 f0       	brcs	.+8      	; 0x55a4 <__udivmodsi4_ep>
    559c:	a2 1b       	sub	r26, r18
    559e:	b3 0b       	sbc	r27, r19
    55a0:	e4 0b       	sbc	r30, r20
    55a2:	f5 0b       	sbc	r31, r21

000055a4 <__udivmodsi4_ep>:
    55a4:	66 1f       	adc	r22, r22
    55a6:	77 1f       	adc	r23, r23
    55a8:	88 1f       	adc	r24, r24
    55aa:	99 1f       	adc	r25, r25
    55ac:	1a 94       	dec	r1
    55ae:	69 f7       	brne	.-38     	; 0x558a <__udivmodsi4_loop>
    55b0:	60 95       	com	r22
    55b2:	70 95       	com	r23
    55b4:	80 95       	com	r24
    55b6:	90 95       	com	r25
    55b8:	9b 01       	movw	r18, r22
    55ba:	ac 01       	movw	r20, r24
    55bc:	bd 01       	movw	r22, r26
    55be:	cf 01       	movw	r24, r30
    55c0:	08 95       	ret

000055c2 <__divmodsi4>:
    55c2:	05 2e       	mov	r0, r21
    55c4:	97 fb       	bst	r25, 7
    55c6:	1e f4       	brtc	.+6      	; 0x55ce <__divmodsi4+0xc>
    55c8:	00 94       	com	r0
    55ca:	0e 94 f8 2a 	call	0x55f0	; 0x55f0 <__negsi2>
    55ce:	57 fd       	sbrc	r21, 7
    55d0:	07 d0       	rcall	.+14     	; 0x55e0 <__divmodsi4_neg2>
    55d2:	0e 94 bf 2a 	call	0x557e	; 0x557e <__udivmodsi4>
    55d6:	07 fc       	sbrc	r0, 7
    55d8:	03 d0       	rcall	.+6      	; 0x55e0 <__divmodsi4_neg2>
    55da:	4e f4       	brtc	.+18     	; 0x55ee <__divmodsi4_exit>
    55dc:	0c 94 f8 2a 	jmp	0x55f0	; 0x55f0 <__negsi2>

000055e0 <__divmodsi4_neg2>:
    55e0:	50 95       	com	r21
    55e2:	40 95       	com	r20
    55e4:	30 95       	com	r19
    55e6:	21 95       	neg	r18
    55e8:	3f 4f       	sbci	r19, 0xFF	; 255
    55ea:	4f 4f       	sbci	r20, 0xFF	; 255
    55ec:	5f 4f       	sbci	r21, 0xFF	; 255

000055ee <__divmodsi4_exit>:
    55ee:	08 95       	ret

000055f0 <__negsi2>:
    55f0:	90 95       	com	r25
    55f2:	80 95       	com	r24
    55f4:	70 95       	com	r23
    55f6:	61 95       	neg	r22
    55f8:	7f 4f       	sbci	r23, 0xFF	; 255
    55fa:	8f 4f       	sbci	r24, 0xFF	; 255
    55fc:	9f 4f       	sbci	r25, 0xFF	; 255
    55fe:	08 95       	ret

00005600 <__tablejump2__>:
    5600:	ee 0f       	add	r30, r30
    5602:	ff 1f       	adc	r31, r31
    5604:	05 90       	lpm	r0, Z+
    5606:	f4 91       	lpm	r31, Z
    5608:	e0 2d       	mov	r30, r0
    560a:	09 94       	ijmp

0000560c <__muluhisi3>:
    560c:	0e 94 50 2b 	call	0x56a0	; 0x56a0 <__umulhisi3>
    5610:	a5 9f       	mul	r26, r21
    5612:	90 0d       	add	r25, r0
    5614:	b4 9f       	mul	r27, r20
    5616:	90 0d       	add	r25, r0
    5618:	a4 9f       	mul	r26, r20
    561a:	80 0d       	add	r24, r0
    561c:	91 1d       	adc	r25, r1
    561e:	11 24       	eor	r1, r1
    5620:	08 95       	ret

00005622 <__mulshisi3>:
    5622:	b7 ff       	sbrs	r27, 7
    5624:	0c 94 06 2b 	jmp	0x560c	; 0x560c <__muluhisi3>

00005628 <__mulohisi3>:
    5628:	0e 94 06 2b 	call	0x560c	; 0x560c <__muluhisi3>
    562c:	82 1b       	sub	r24, r18
    562e:	93 0b       	sbc	r25, r19
    5630:	08 95       	ret

00005632 <__prologue_saves__>:
    5632:	2f 92       	push	r2
    5634:	3f 92       	push	r3
    5636:	4f 92       	push	r4
    5638:	5f 92       	push	r5
    563a:	6f 92       	push	r6
    563c:	7f 92       	push	r7
    563e:	8f 92       	push	r8
    5640:	9f 92       	push	r9
    5642:	af 92       	push	r10
    5644:	bf 92       	push	r11
    5646:	cf 92       	push	r12
    5648:	df 92       	push	r13
    564a:	ef 92       	push	r14
    564c:	ff 92       	push	r15
    564e:	0f 93       	push	r16
    5650:	1f 93       	push	r17
    5652:	cf 93       	push	r28
    5654:	df 93       	push	r29
    5656:	cd b7       	in	r28, 0x3d	; 61
    5658:	de b7       	in	r29, 0x3e	; 62
    565a:	ca 1b       	sub	r28, r26
    565c:	db 0b       	sbc	r29, r27
    565e:	0f b6       	in	r0, 0x3f	; 63
    5660:	f8 94       	cli
    5662:	de bf       	out	0x3e, r29	; 62
    5664:	0f be       	out	0x3f, r0	; 63
    5666:	cd bf       	out	0x3d, r28	; 61
    5668:	09 94       	ijmp

0000566a <__epilogue_restores__>:
    566a:	2a 88       	ldd	r2, Y+18	; 0x12
    566c:	39 88       	ldd	r3, Y+17	; 0x11
    566e:	48 88       	ldd	r4, Y+16	; 0x10
    5670:	5f 84       	ldd	r5, Y+15	; 0x0f
    5672:	6e 84       	ldd	r6, Y+14	; 0x0e
    5674:	7d 84       	ldd	r7, Y+13	; 0x0d
    5676:	8c 84       	ldd	r8, Y+12	; 0x0c
    5678:	9b 84       	ldd	r9, Y+11	; 0x0b
    567a:	aa 84       	ldd	r10, Y+10	; 0x0a
    567c:	b9 84       	ldd	r11, Y+9	; 0x09
    567e:	c8 84       	ldd	r12, Y+8	; 0x08
    5680:	df 80       	ldd	r13, Y+7	; 0x07
    5682:	ee 80       	ldd	r14, Y+6	; 0x06
    5684:	fd 80       	ldd	r15, Y+5	; 0x05
    5686:	0c 81       	ldd	r16, Y+4	; 0x04
    5688:	1b 81       	ldd	r17, Y+3	; 0x03
    568a:	aa 81       	ldd	r26, Y+2	; 0x02
    568c:	b9 81       	ldd	r27, Y+1	; 0x01
    568e:	ce 0f       	add	r28, r30
    5690:	d1 1d       	adc	r29, r1
    5692:	0f b6       	in	r0, 0x3f	; 63
    5694:	f8 94       	cli
    5696:	de bf       	out	0x3e, r29	; 62
    5698:	0f be       	out	0x3f, r0	; 63
    569a:	cd bf       	out	0x3d, r28	; 61
    569c:	ed 01       	movw	r28, r26
    569e:	08 95       	ret

000056a0 <__umulhisi3>:
    56a0:	a2 9f       	mul	r26, r18
    56a2:	b0 01       	movw	r22, r0
    56a4:	b3 9f       	mul	r27, r19
    56a6:	c0 01       	movw	r24, r0
    56a8:	a3 9f       	mul	r26, r19
    56aa:	70 0d       	add	r23, r0
    56ac:	81 1d       	adc	r24, r1
    56ae:	11 24       	eor	r1, r1
    56b0:	91 1d       	adc	r25, r1
    56b2:	b2 9f       	mul	r27, r18
    56b4:	70 0d       	add	r23, r0
    56b6:	81 1d       	adc	r24, r1
    56b8:	11 24       	eor	r1, r1
    56ba:	91 1d       	adc	r25, r1
    56bc:	08 95       	ret

000056be <__ftoa_engine>:
    56be:	28 30       	cpi	r18, 0x08	; 8
    56c0:	08 f0       	brcs	.+2      	; 0x56c4 <__ftoa_engine+0x6>
    56c2:	27 e0       	ldi	r18, 0x07	; 7
    56c4:	33 27       	eor	r19, r19
    56c6:	da 01       	movw	r26, r20
    56c8:	99 0f       	add	r25, r25
    56ca:	31 1d       	adc	r19, r1
    56cc:	87 fd       	sbrc	r24, 7
    56ce:	91 60       	ori	r25, 0x01	; 1
    56d0:	00 96       	adiw	r24, 0x00	; 0
    56d2:	61 05       	cpc	r22, r1
    56d4:	71 05       	cpc	r23, r1
    56d6:	39 f4       	brne	.+14     	; 0x56e6 <__ftoa_engine+0x28>
    56d8:	32 60       	ori	r19, 0x02	; 2
    56da:	2e 5f       	subi	r18, 0xFE	; 254
    56dc:	3d 93       	st	X+, r19
    56de:	30 e3       	ldi	r19, 0x30	; 48
    56e0:	2a 95       	dec	r18
    56e2:	e1 f7       	brne	.-8      	; 0x56dc <__ftoa_engine+0x1e>
    56e4:	08 95       	ret
    56e6:	9f 3f       	cpi	r25, 0xFF	; 255
    56e8:	30 f0       	brcs	.+12     	; 0x56f6 <__ftoa_engine+0x38>
    56ea:	80 38       	cpi	r24, 0x80	; 128
    56ec:	71 05       	cpc	r23, r1
    56ee:	61 05       	cpc	r22, r1
    56f0:	09 f0       	breq	.+2      	; 0x56f4 <__ftoa_engine+0x36>
    56f2:	3c 5f       	subi	r19, 0xFC	; 252
    56f4:	3c 5f       	subi	r19, 0xFC	; 252
    56f6:	3d 93       	st	X+, r19
    56f8:	91 30       	cpi	r25, 0x01	; 1
    56fa:	08 f0       	brcs	.+2      	; 0x56fe <__ftoa_engine+0x40>
    56fc:	80 68       	ori	r24, 0x80	; 128
    56fe:	91 1d       	adc	r25, r1
    5700:	df 93       	push	r29
    5702:	cf 93       	push	r28
    5704:	1f 93       	push	r17
    5706:	0f 93       	push	r16
    5708:	ff 92       	push	r15
    570a:	ef 92       	push	r14
    570c:	19 2f       	mov	r17, r25
    570e:	98 7f       	andi	r25, 0xF8	; 248
    5710:	96 95       	lsr	r25
    5712:	e9 2f       	mov	r30, r25
    5714:	96 95       	lsr	r25
    5716:	96 95       	lsr	r25
    5718:	e9 0f       	add	r30, r25
    571a:	ff 27       	eor	r31, r31
    571c:	e0 51       	subi	r30, 0x10	; 16
    571e:	ff 4f       	sbci	r31, 0xFF	; 255
    5720:	99 27       	eor	r25, r25
    5722:	33 27       	eor	r19, r19
    5724:	ee 24       	eor	r14, r14
    5726:	ff 24       	eor	r15, r15
    5728:	a7 01       	movw	r20, r14
    572a:	e7 01       	movw	r28, r14
    572c:	05 90       	lpm	r0, Z+
    572e:	08 94       	sec
    5730:	07 94       	ror	r0
    5732:	28 f4       	brcc	.+10     	; 0x573e <__ftoa_engine+0x80>
    5734:	36 0f       	add	r19, r22
    5736:	e7 1e       	adc	r14, r23
    5738:	f8 1e       	adc	r15, r24
    573a:	49 1f       	adc	r20, r25
    573c:	51 1d       	adc	r21, r1
    573e:	66 0f       	add	r22, r22
    5740:	77 1f       	adc	r23, r23
    5742:	88 1f       	adc	r24, r24
    5744:	99 1f       	adc	r25, r25
    5746:	06 94       	lsr	r0
    5748:	a1 f7       	brne	.-24     	; 0x5732 <__ftoa_engine+0x74>
    574a:	05 90       	lpm	r0, Z+
    574c:	07 94       	ror	r0
    574e:	28 f4       	brcc	.+10     	; 0x575a <__ftoa_engine+0x9c>
    5750:	e7 0e       	add	r14, r23
    5752:	f8 1e       	adc	r15, r24
    5754:	49 1f       	adc	r20, r25
    5756:	56 1f       	adc	r21, r22
    5758:	c1 1d       	adc	r28, r1
    575a:	77 0f       	add	r23, r23
    575c:	88 1f       	adc	r24, r24
    575e:	99 1f       	adc	r25, r25
    5760:	66 1f       	adc	r22, r22
    5762:	06 94       	lsr	r0
    5764:	a1 f7       	brne	.-24     	; 0x574e <__ftoa_engine+0x90>
    5766:	05 90       	lpm	r0, Z+
    5768:	07 94       	ror	r0
    576a:	28 f4       	brcc	.+10     	; 0x5776 <__ftoa_engine+0xb8>
    576c:	f8 0e       	add	r15, r24
    576e:	49 1f       	adc	r20, r25
    5770:	56 1f       	adc	r21, r22
    5772:	c7 1f       	adc	r28, r23
    5774:	d1 1d       	adc	r29, r1
    5776:	88 0f       	add	r24, r24
    5778:	99 1f       	adc	r25, r25
    577a:	66 1f       	adc	r22, r22
    577c:	77 1f       	adc	r23, r23
    577e:	06 94       	lsr	r0
    5780:	a1 f7       	brne	.-24     	; 0x576a <__ftoa_engine+0xac>
    5782:	05 90       	lpm	r0, Z+
    5784:	07 94       	ror	r0
    5786:	20 f4       	brcc	.+8      	; 0x5790 <__ftoa_engine+0xd2>
    5788:	49 0f       	add	r20, r25
    578a:	56 1f       	adc	r21, r22
    578c:	c7 1f       	adc	r28, r23
    578e:	d8 1f       	adc	r29, r24
    5790:	99 0f       	add	r25, r25
    5792:	66 1f       	adc	r22, r22
    5794:	77 1f       	adc	r23, r23
    5796:	88 1f       	adc	r24, r24
    5798:	06 94       	lsr	r0
    579a:	a9 f7       	brne	.-22     	; 0x5786 <__ftoa_engine+0xc8>
    579c:	84 91       	lpm	r24, Z
    579e:	10 95       	com	r17
    57a0:	17 70       	andi	r17, 0x07	; 7
    57a2:	41 f0       	breq	.+16     	; 0x57b4 <__ftoa_engine+0xf6>
    57a4:	d6 95       	lsr	r29
    57a6:	c7 95       	ror	r28
    57a8:	57 95       	ror	r21
    57aa:	47 95       	ror	r20
    57ac:	f7 94       	ror	r15
    57ae:	e7 94       	ror	r14
    57b0:	1a 95       	dec	r17
    57b2:	c1 f7       	brne	.-16     	; 0x57a4 <__ftoa_engine+0xe6>
    57b4:	e6 e9       	ldi	r30, 0x96	; 150
    57b6:	f0 e0       	ldi	r31, 0x00	; 0
    57b8:	68 94       	set
    57ba:	15 90       	lpm	r1, Z+
    57bc:	15 91       	lpm	r17, Z+
    57be:	35 91       	lpm	r19, Z+
    57c0:	65 91       	lpm	r22, Z+
    57c2:	95 91       	lpm	r25, Z+
    57c4:	05 90       	lpm	r0, Z+
    57c6:	7f e2       	ldi	r23, 0x2F	; 47
    57c8:	73 95       	inc	r23
    57ca:	e1 18       	sub	r14, r1
    57cc:	f1 0a       	sbc	r15, r17
    57ce:	43 0b       	sbc	r20, r19
    57d0:	56 0b       	sbc	r21, r22
    57d2:	c9 0b       	sbc	r28, r25
    57d4:	d0 09       	sbc	r29, r0
    57d6:	c0 f7       	brcc	.-16     	; 0x57c8 <__ftoa_engine+0x10a>
    57d8:	e1 0c       	add	r14, r1
    57da:	f1 1e       	adc	r15, r17
    57dc:	43 1f       	adc	r20, r19
    57de:	56 1f       	adc	r21, r22
    57e0:	c9 1f       	adc	r28, r25
    57e2:	d0 1d       	adc	r29, r0
    57e4:	7e f4       	brtc	.+30     	; 0x5804 <__ftoa_engine+0x146>
    57e6:	70 33       	cpi	r23, 0x30	; 48
    57e8:	11 f4       	brne	.+4      	; 0x57ee <__ftoa_engine+0x130>
    57ea:	8a 95       	dec	r24
    57ec:	e6 cf       	rjmp	.-52     	; 0x57ba <__ftoa_engine+0xfc>
    57ee:	e8 94       	clt
    57f0:	01 50       	subi	r16, 0x01	; 1
    57f2:	30 f0       	brcs	.+12     	; 0x5800 <__ftoa_engine+0x142>
    57f4:	08 0f       	add	r16, r24
    57f6:	0a f4       	brpl	.+2      	; 0x57fa <__ftoa_engine+0x13c>
    57f8:	00 27       	eor	r16, r16
    57fa:	02 17       	cp	r16, r18
    57fc:	08 f4       	brcc	.+2      	; 0x5800 <__ftoa_engine+0x142>
    57fe:	20 2f       	mov	r18, r16
    5800:	23 95       	inc	r18
    5802:	02 2f       	mov	r16, r18
    5804:	7a 33       	cpi	r23, 0x3A	; 58
    5806:	28 f0       	brcs	.+10     	; 0x5812 <__ftoa_engine+0x154>
    5808:	79 e3       	ldi	r23, 0x39	; 57
    580a:	7d 93       	st	X+, r23
    580c:	2a 95       	dec	r18
    580e:	e9 f7       	brne	.-6      	; 0x580a <__ftoa_engine+0x14c>
    5810:	10 c0       	rjmp	.+32     	; 0x5832 <__ftoa_engine+0x174>
    5812:	7d 93       	st	X+, r23
    5814:	2a 95       	dec	r18
    5816:	89 f6       	brne	.-94     	; 0x57ba <__ftoa_engine+0xfc>
    5818:	06 94       	lsr	r0
    581a:	97 95       	ror	r25
    581c:	67 95       	ror	r22
    581e:	37 95       	ror	r19
    5820:	17 95       	ror	r17
    5822:	17 94       	ror	r1
    5824:	e1 18       	sub	r14, r1
    5826:	f1 0a       	sbc	r15, r17
    5828:	43 0b       	sbc	r20, r19
    582a:	56 0b       	sbc	r21, r22
    582c:	c9 0b       	sbc	r28, r25
    582e:	d0 09       	sbc	r29, r0
    5830:	98 f0       	brcs	.+38     	; 0x5858 <__ftoa_engine+0x19a>
    5832:	23 95       	inc	r18
    5834:	7e 91       	ld	r23, -X
    5836:	73 95       	inc	r23
    5838:	7a 33       	cpi	r23, 0x3A	; 58
    583a:	08 f0       	brcs	.+2      	; 0x583e <__ftoa_engine+0x180>
    583c:	70 e3       	ldi	r23, 0x30	; 48
    583e:	7c 93       	st	X, r23
    5840:	20 13       	cpse	r18, r16
    5842:	b8 f7       	brcc	.-18     	; 0x5832 <__ftoa_engine+0x174>
    5844:	7e 91       	ld	r23, -X
    5846:	70 61       	ori	r23, 0x10	; 16
    5848:	7d 93       	st	X+, r23
    584a:	30 f0       	brcs	.+12     	; 0x5858 <__ftoa_engine+0x19a>
    584c:	83 95       	inc	r24
    584e:	71 e3       	ldi	r23, 0x31	; 49
    5850:	7d 93       	st	X+, r23
    5852:	70 e3       	ldi	r23, 0x30	; 48
    5854:	2a 95       	dec	r18
    5856:	e1 f7       	brne	.-8      	; 0x5850 <__ftoa_engine+0x192>
    5858:	11 24       	eor	r1, r1
    585a:	ef 90       	pop	r14
    585c:	ff 90       	pop	r15
    585e:	0f 91       	pop	r16
    5860:	1f 91       	pop	r17
    5862:	cf 91       	pop	r28
    5864:	df 91       	pop	r29
    5866:	99 27       	eor	r25, r25
    5868:	87 fd       	sbrc	r24, 7
    586a:	90 95       	com	r25
    586c:	08 95       	ret

0000586e <strnlen_P>:
    586e:	fc 01       	movw	r30, r24
    5870:	05 90       	lpm	r0, Z+
    5872:	61 50       	subi	r22, 0x01	; 1
    5874:	70 40       	sbci	r23, 0x00	; 0
    5876:	01 10       	cpse	r0, r1
    5878:	d8 f7       	brcc	.-10     	; 0x5870 <strnlen_P+0x2>
    587a:	80 95       	com	r24
    587c:	90 95       	com	r25
    587e:	8e 0f       	add	r24, r30
    5880:	9f 1f       	adc	r25, r31
    5882:	08 95       	ret

00005884 <memset>:
    5884:	dc 01       	movw	r26, r24
    5886:	01 c0       	rjmp	.+2      	; 0x588a <memset+0x6>
    5888:	6d 93       	st	X+, r22
    588a:	41 50       	subi	r20, 0x01	; 1
    588c:	50 40       	sbci	r21, 0x00	; 0
    588e:	e0 f7       	brcc	.-8      	; 0x5888 <memset+0x4>
    5890:	08 95       	ret

00005892 <strcat>:
    5892:	fb 01       	movw	r30, r22
    5894:	dc 01       	movw	r26, r24
    5896:	0d 90       	ld	r0, X+
    5898:	00 20       	and	r0, r0
    589a:	e9 f7       	brne	.-6      	; 0x5896 <strcat+0x4>
    589c:	11 97       	sbiw	r26, 0x01	; 1
    589e:	01 90       	ld	r0, Z+
    58a0:	0d 92       	st	X+, r0
    58a2:	00 20       	and	r0, r0
    58a4:	e1 f7       	brne	.-8      	; 0x589e <strcat+0xc>
    58a6:	08 95       	ret

000058a8 <strcmp>:
    58a8:	fb 01       	movw	r30, r22
    58aa:	dc 01       	movw	r26, r24
    58ac:	8d 91       	ld	r24, X+
    58ae:	01 90       	ld	r0, Z+
    58b0:	80 19       	sub	r24, r0
    58b2:	01 10       	cpse	r0, r1
    58b4:	d9 f3       	breq	.-10     	; 0x58ac <strcmp+0x4>
    58b6:	99 0b       	sbc	r25, r25
    58b8:	08 95       	ret

000058ba <strnlen>:
    58ba:	fc 01       	movw	r30, r24
    58bc:	61 50       	subi	r22, 0x01	; 1
    58be:	70 40       	sbci	r23, 0x00	; 0
    58c0:	01 90       	ld	r0, Z+
    58c2:	01 10       	cpse	r0, r1
    58c4:	d8 f7       	brcc	.-10     	; 0x58bc <strnlen+0x2>
    58c6:	80 95       	com	r24
    58c8:	90 95       	com	r25
    58ca:	8e 0f       	add	r24, r30
    58cc:	9f 1f       	adc	r25, r31
    58ce:	08 95       	ret

000058d0 <fputc>:
    58d0:	0f 93       	push	r16
    58d2:	1f 93       	push	r17
    58d4:	cf 93       	push	r28
    58d6:	df 93       	push	r29
    58d8:	fb 01       	movw	r30, r22
    58da:	23 81       	ldd	r18, Z+3	; 0x03
    58dc:	21 fd       	sbrc	r18, 1
    58de:	03 c0       	rjmp	.+6      	; 0x58e6 <fputc+0x16>
    58e0:	8f ef       	ldi	r24, 0xFF	; 255
    58e2:	9f ef       	ldi	r25, 0xFF	; 255
    58e4:	2c c0       	rjmp	.+88     	; 0x593e <fputc+0x6e>
    58e6:	22 ff       	sbrs	r18, 2
    58e8:	16 c0       	rjmp	.+44     	; 0x5916 <fputc+0x46>
    58ea:	46 81       	ldd	r20, Z+6	; 0x06
    58ec:	57 81       	ldd	r21, Z+7	; 0x07
    58ee:	24 81       	ldd	r18, Z+4	; 0x04
    58f0:	35 81       	ldd	r19, Z+5	; 0x05
    58f2:	42 17       	cp	r20, r18
    58f4:	53 07       	cpc	r21, r19
    58f6:	44 f4       	brge	.+16     	; 0x5908 <fputc+0x38>
    58f8:	a0 81       	ld	r26, Z
    58fa:	b1 81       	ldd	r27, Z+1	; 0x01
    58fc:	9d 01       	movw	r18, r26
    58fe:	2f 5f       	subi	r18, 0xFF	; 255
    5900:	3f 4f       	sbci	r19, 0xFF	; 255
    5902:	31 83       	std	Z+1, r19	; 0x01
    5904:	20 83       	st	Z, r18
    5906:	8c 93       	st	X, r24
    5908:	26 81       	ldd	r18, Z+6	; 0x06
    590a:	37 81       	ldd	r19, Z+7	; 0x07
    590c:	2f 5f       	subi	r18, 0xFF	; 255
    590e:	3f 4f       	sbci	r19, 0xFF	; 255
    5910:	37 83       	std	Z+7, r19	; 0x07
    5912:	26 83       	std	Z+6, r18	; 0x06
    5914:	14 c0       	rjmp	.+40     	; 0x593e <fputc+0x6e>
    5916:	8b 01       	movw	r16, r22
    5918:	ec 01       	movw	r28, r24
    591a:	fb 01       	movw	r30, r22
    591c:	00 84       	ldd	r0, Z+8	; 0x08
    591e:	f1 85       	ldd	r31, Z+9	; 0x09
    5920:	e0 2d       	mov	r30, r0
    5922:	09 95       	icall
    5924:	89 2b       	or	r24, r25
    5926:	e1 f6       	brne	.-72     	; 0x58e0 <fputc+0x10>
    5928:	d8 01       	movw	r26, r16
    592a:	16 96       	adiw	r26, 0x06	; 6
    592c:	8d 91       	ld	r24, X+
    592e:	9c 91       	ld	r25, X
    5930:	17 97       	sbiw	r26, 0x07	; 7
    5932:	01 96       	adiw	r24, 0x01	; 1
    5934:	17 96       	adiw	r26, 0x07	; 7
    5936:	9c 93       	st	X, r25
    5938:	8e 93       	st	-X, r24
    593a:	16 97       	sbiw	r26, 0x06	; 6
    593c:	ce 01       	movw	r24, r28
    593e:	df 91       	pop	r29
    5940:	cf 91       	pop	r28
    5942:	1f 91       	pop	r17
    5944:	0f 91       	pop	r16
    5946:	08 95       	ret

00005948 <sprintf>:
    5948:	ae e0       	ldi	r26, 0x0E	; 14
    594a:	b0 e0       	ldi	r27, 0x00	; 0
    594c:	ea ea       	ldi	r30, 0xAA	; 170
    594e:	fc e2       	ldi	r31, 0x2C	; 44
    5950:	0c 94 27 2b 	jmp	0x564e	; 0x564e <__prologue_saves__+0x1c>
    5954:	0d 89       	ldd	r16, Y+21	; 0x15
    5956:	1e 89       	ldd	r17, Y+22	; 0x16
    5958:	86 e0       	ldi	r24, 0x06	; 6
    595a:	8c 83       	std	Y+4, r24	; 0x04
    595c:	1a 83       	std	Y+2, r17	; 0x02
    595e:	09 83       	std	Y+1, r16	; 0x01
    5960:	8f ef       	ldi	r24, 0xFF	; 255
    5962:	9f e7       	ldi	r25, 0x7F	; 127
    5964:	9e 83       	std	Y+6, r25	; 0x06
    5966:	8d 83       	std	Y+5, r24	; 0x05
    5968:	ae 01       	movw	r20, r28
    596a:	47 5e       	subi	r20, 0xE7	; 231
    596c:	5f 4f       	sbci	r21, 0xFF	; 255
    596e:	6f 89       	ldd	r22, Y+23	; 0x17
    5970:	78 8d       	ldd	r23, Y+24	; 0x18
    5972:	ce 01       	movw	r24, r28
    5974:	01 96       	adiw	r24, 0x01	; 1
    5976:	0e 94 32 27 	call	0x4e64	; 0x4e64 <vfprintf>
    597a:	ef 81       	ldd	r30, Y+7	; 0x07
    597c:	f8 85       	ldd	r31, Y+8	; 0x08
    597e:	e0 0f       	add	r30, r16
    5980:	f1 1f       	adc	r31, r17
    5982:	10 82       	st	Z, r1
    5984:	2e 96       	adiw	r28, 0x0e	; 14
    5986:	e4 e0       	ldi	r30, 0x04	; 4
    5988:	0c 94 43 2b 	jmp	0x5686	; 0x5686 <__epilogue_restores__+0x1c>

0000598c <sscanf>:
    598c:	ae e0       	ldi	r26, 0x0E	; 14
    598e:	b0 e0       	ldi	r27, 0x00	; 0
    5990:	ec ec       	ldi	r30, 0xCC	; 204
    5992:	fc e2       	ldi	r31, 0x2C	; 44
    5994:	0c 94 29 2b 	jmp	0x5652	; 0x5652 <__prologue_saves__+0x20>
    5998:	85 e0       	ldi	r24, 0x05	; 5
    599a:	8c 83       	std	Y+4, r24	; 0x04
    599c:	8b 89       	ldd	r24, Y+19	; 0x13
    599e:	9c 89       	ldd	r25, Y+20	; 0x14
    59a0:	9a 83       	std	Y+2, r25	; 0x02
    59a2:	89 83       	std	Y+1, r24	; 0x01
    59a4:	ae 01       	movw	r20, r28
    59a6:	49 5e       	subi	r20, 0xE9	; 233
    59a8:	5f 4f       	sbci	r21, 0xFF	; 255
    59aa:	6d 89       	ldd	r22, Y+21	; 0x15
    59ac:	7e 89       	ldd	r23, Y+22	; 0x16
    59ae:	ce 01       	movw	r24, r28
    59b0:	01 96       	adiw	r24, 0x01	; 1
    59b2:	0e 94 d9 2e 	call	0x5db2	; 0x5db2 <vfscanf>
    59b6:	2e 96       	adiw	r28, 0x0e	; 14
    59b8:	e2 e0       	ldi	r30, 0x02	; 2
    59ba:	0c 94 45 2b 	jmp	0x568a	; 0x568a <__epilogue_restores__+0x20>

000059be <__ultoa_invert>:
    59be:	fa 01       	movw	r30, r20
    59c0:	aa 27       	eor	r26, r26
    59c2:	28 30       	cpi	r18, 0x08	; 8
    59c4:	51 f1       	breq	.+84     	; 0x5a1a <__ultoa_invert+0x5c>
    59c6:	20 31       	cpi	r18, 0x10	; 16
    59c8:	81 f1       	breq	.+96     	; 0x5a2a <__ultoa_invert+0x6c>
    59ca:	e8 94       	clt
    59cc:	6f 93       	push	r22
    59ce:	6e 7f       	andi	r22, 0xFE	; 254
    59d0:	6e 5f       	subi	r22, 0xFE	; 254
    59d2:	7f 4f       	sbci	r23, 0xFF	; 255
    59d4:	8f 4f       	sbci	r24, 0xFF	; 255
    59d6:	9f 4f       	sbci	r25, 0xFF	; 255
    59d8:	af 4f       	sbci	r26, 0xFF	; 255
    59da:	b1 e0       	ldi	r27, 0x01	; 1
    59dc:	3e d0       	rcall	.+124    	; 0x5a5a <__ultoa_invert+0x9c>
    59de:	b4 e0       	ldi	r27, 0x04	; 4
    59e0:	3c d0       	rcall	.+120    	; 0x5a5a <__ultoa_invert+0x9c>
    59e2:	67 0f       	add	r22, r23
    59e4:	78 1f       	adc	r23, r24
    59e6:	89 1f       	adc	r24, r25
    59e8:	9a 1f       	adc	r25, r26
    59ea:	a1 1d       	adc	r26, r1
    59ec:	68 0f       	add	r22, r24
    59ee:	79 1f       	adc	r23, r25
    59f0:	8a 1f       	adc	r24, r26
    59f2:	91 1d       	adc	r25, r1
    59f4:	a1 1d       	adc	r26, r1
    59f6:	6a 0f       	add	r22, r26
    59f8:	71 1d       	adc	r23, r1
    59fa:	81 1d       	adc	r24, r1
    59fc:	91 1d       	adc	r25, r1
    59fe:	a1 1d       	adc	r26, r1
    5a00:	20 d0       	rcall	.+64     	; 0x5a42 <__ultoa_invert+0x84>
    5a02:	09 f4       	brne	.+2      	; 0x5a06 <__ultoa_invert+0x48>
    5a04:	68 94       	set
    5a06:	3f 91       	pop	r19
    5a08:	2a e0       	ldi	r18, 0x0A	; 10
    5a0a:	26 9f       	mul	r18, r22
    5a0c:	11 24       	eor	r1, r1
    5a0e:	30 19       	sub	r19, r0
    5a10:	30 5d       	subi	r19, 0xD0	; 208
    5a12:	31 93       	st	Z+, r19
    5a14:	de f6       	brtc	.-74     	; 0x59cc <__ultoa_invert+0xe>
    5a16:	cf 01       	movw	r24, r30
    5a18:	08 95       	ret
    5a1a:	46 2f       	mov	r20, r22
    5a1c:	47 70       	andi	r20, 0x07	; 7
    5a1e:	40 5d       	subi	r20, 0xD0	; 208
    5a20:	41 93       	st	Z+, r20
    5a22:	b3 e0       	ldi	r27, 0x03	; 3
    5a24:	0f d0       	rcall	.+30     	; 0x5a44 <__ultoa_invert+0x86>
    5a26:	c9 f7       	brne	.-14     	; 0x5a1a <__ultoa_invert+0x5c>
    5a28:	f6 cf       	rjmp	.-20     	; 0x5a16 <__ultoa_invert+0x58>
    5a2a:	46 2f       	mov	r20, r22
    5a2c:	4f 70       	andi	r20, 0x0F	; 15
    5a2e:	40 5d       	subi	r20, 0xD0	; 208
    5a30:	4a 33       	cpi	r20, 0x3A	; 58
    5a32:	18 f0       	brcs	.+6      	; 0x5a3a <__ultoa_invert+0x7c>
    5a34:	49 5d       	subi	r20, 0xD9	; 217
    5a36:	31 fd       	sbrc	r19, 1
    5a38:	40 52       	subi	r20, 0x20	; 32
    5a3a:	41 93       	st	Z+, r20
    5a3c:	02 d0       	rcall	.+4      	; 0x5a42 <__ultoa_invert+0x84>
    5a3e:	a9 f7       	brne	.-22     	; 0x5a2a <__ultoa_invert+0x6c>
    5a40:	ea cf       	rjmp	.-44     	; 0x5a16 <__ultoa_invert+0x58>
    5a42:	b4 e0       	ldi	r27, 0x04	; 4
    5a44:	a6 95       	lsr	r26
    5a46:	97 95       	ror	r25
    5a48:	87 95       	ror	r24
    5a4a:	77 95       	ror	r23
    5a4c:	67 95       	ror	r22
    5a4e:	ba 95       	dec	r27
    5a50:	c9 f7       	brne	.-14     	; 0x5a44 <__ultoa_invert+0x86>
    5a52:	00 97       	sbiw	r24, 0x00	; 0
    5a54:	61 05       	cpc	r22, r1
    5a56:	71 05       	cpc	r23, r1
    5a58:	08 95       	ret
    5a5a:	9b 01       	movw	r18, r22
    5a5c:	ac 01       	movw	r20, r24
    5a5e:	0a 2e       	mov	r0, r26
    5a60:	06 94       	lsr	r0
    5a62:	57 95       	ror	r21
    5a64:	47 95       	ror	r20
    5a66:	37 95       	ror	r19
    5a68:	27 95       	ror	r18
    5a6a:	ba 95       	dec	r27
    5a6c:	c9 f7       	brne	.-14     	; 0x5a60 <__ultoa_invert+0xa2>
    5a6e:	62 0f       	add	r22, r18
    5a70:	73 1f       	adc	r23, r19
    5a72:	84 1f       	adc	r24, r20
    5a74:	95 1f       	adc	r25, r21
    5a76:	a0 1d       	adc	r26, r0
    5a78:	08 95       	ret

00005a7a <putval>:
    5a7a:	20 fd       	sbrc	r18, 0
    5a7c:	09 c0       	rjmp	.+18     	; 0x5a90 <putval+0x16>
    5a7e:	fc 01       	movw	r30, r24
    5a80:	23 fd       	sbrc	r18, 3
    5a82:	05 c0       	rjmp	.+10     	; 0x5a8e <putval+0x14>
    5a84:	22 ff       	sbrs	r18, 2
    5a86:	02 c0       	rjmp	.+4      	; 0x5a8c <putval+0x12>
    5a88:	73 83       	std	Z+3, r23	; 0x03
    5a8a:	62 83       	std	Z+2, r22	; 0x02
    5a8c:	51 83       	std	Z+1, r21	; 0x01
    5a8e:	40 83       	st	Z, r20
    5a90:	08 95       	ret

00005a92 <mulacc>:
    5a92:	44 fd       	sbrc	r20, 4
    5a94:	17 c0       	rjmp	.+46     	; 0x5ac4 <mulacc+0x32>
    5a96:	46 fd       	sbrc	r20, 6
    5a98:	17 c0       	rjmp	.+46     	; 0x5ac8 <mulacc+0x36>
    5a9a:	ab 01       	movw	r20, r22
    5a9c:	bc 01       	movw	r22, r24
    5a9e:	da 01       	movw	r26, r20
    5aa0:	fb 01       	movw	r30, r22
    5aa2:	aa 0f       	add	r26, r26
    5aa4:	bb 1f       	adc	r27, r27
    5aa6:	ee 1f       	adc	r30, r30
    5aa8:	ff 1f       	adc	r31, r31
    5aaa:	10 94       	com	r1
    5aac:	d1 f7       	brne	.-12     	; 0x5aa2 <mulacc+0x10>
    5aae:	4a 0f       	add	r20, r26
    5ab0:	5b 1f       	adc	r21, r27
    5ab2:	6e 1f       	adc	r22, r30
    5ab4:	7f 1f       	adc	r23, r31
    5ab6:	cb 01       	movw	r24, r22
    5ab8:	ba 01       	movw	r22, r20
    5aba:	66 0f       	add	r22, r22
    5abc:	77 1f       	adc	r23, r23
    5abe:	88 1f       	adc	r24, r24
    5ac0:	99 1f       	adc	r25, r25
    5ac2:	09 c0       	rjmp	.+18     	; 0x5ad6 <mulacc+0x44>
    5ac4:	33 e0       	ldi	r19, 0x03	; 3
    5ac6:	01 c0       	rjmp	.+2      	; 0x5aca <mulacc+0x38>
    5ac8:	34 e0       	ldi	r19, 0x04	; 4
    5aca:	66 0f       	add	r22, r22
    5acc:	77 1f       	adc	r23, r23
    5ace:	88 1f       	adc	r24, r24
    5ad0:	99 1f       	adc	r25, r25
    5ad2:	31 50       	subi	r19, 0x01	; 1
    5ad4:	d1 f7       	brne	.-12     	; 0x5aca <mulacc+0x38>
    5ad6:	62 0f       	add	r22, r18
    5ad8:	71 1d       	adc	r23, r1
    5ada:	81 1d       	adc	r24, r1
    5adc:	91 1d       	adc	r25, r1
    5ade:	08 95       	ret

00005ae0 <skip_spaces>:
    5ae0:	0f 93       	push	r16
    5ae2:	1f 93       	push	r17
    5ae4:	cf 93       	push	r28
    5ae6:	df 93       	push	r29
    5ae8:	8c 01       	movw	r16, r24
    5aea:	c8 01       	movw	r24, r16
    5aec:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5af0:	ec 01       	movw	r28, r24
    5af2:	97 fd       	sbrc	r25, 7
    5af4:	08 c0       	rjmp	.+16     	; 0x5b06 <skip_spaces+0x26>
    5af6:	0e 94 ea 2f 	call	0x5fd4	; 0x5fd4 <isspace>
    5afa:	89 2b       	or	r24, r25
    5afc:	b1 f7       	brne	.-20     	; 0x5aea <skip_spaces+0xa>
    5afe:	b8 01       	movw	r22, r16
    5b00:	ce 01       	movw	r24, r28
    5b02:	0e 94 3c 30 	call	0x6078	; 0x6078 <ungetc>
    5b06:	ce 01       	movw	r24, r28
    5b08:	df 91       	pop	r29
    5b0a:	cf 91       	pop	r28
    5b0c:	1f 91       	pop	r17
    5b0e:	0f 91       	pop	r16
    5b10:	08 95       	ret

00005b12 <conv_int>:
    5b12:	8f 92       	push	r8
    5b14:	9f 92       	push	r9
    5b16:	af 92       	push	r10
    5b18:	bf 92       	push	r11
    5b1a:	ef 92       	push	r14
    5b1c:	ff 92       	push	r15
    5b1e:	0f 93       	push	r16
    5b20:	1f 93       	push	r17
    5b22:	cf 93       	push	r28
    5b24:	df 93       	push	r29
    5b26:	8c 01       	movw	r16, r24
    5b28:	d6 2f       	mov	r29, r22
    5b2a:	7a 01       	movw	r14, r20
    5b2c:	b2 2e       	mov	r11, r18
    5b2e:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5b32:	9c 01       	movw	r18, r24
    5b34:	33 27       	eor	r19, r19
    5b36:	2b 32       	cpi	r18, 0x2B	; 43
    5b38:	31 05       	cpc	r19, r1
    5b3a:	31 f0       	breq	.+12     	; 0x5b48 <conv_int+0x36>
    5b3c:	2d 32       	cpi	r18, 0x2D	; 45
    5b3e:	31 05       	cpc	r19, r1
    5b40:	61 f4       	brne	.+24     	; 0x5b5a <conv_int+0x48>
    5b42:	8b 2d       	mov	r24, r11
    5b44:	80 68       	ori	r24, 0x80	; 128
    5b46:	b8 2e       	mov	r11, r24
    5b48:	d1 50       	subi	r29, 0x01	; 1
    5b4a:	11 f4       	brne	.+4      	; 0x5b50 <conv_int+0x3e>
    5b4c:	80 e0       	ldi	r24, 0x00	; 0
    5b4e:	68 c0       	rjmp	.+208    	; 0x5c20 <conv_int+0x10e>
    5b50:	c8 01       	movw	r24, r16
    5b52:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5b56:	97 fd       	sbrc	r25, 7
    5b58:	f9 cf       	rjmp	.-14     	; 0x5b4c <conv_int+0x3a>
    5b5a:	cb 2d       	mov	r28, r11
    5b5c:	cd 7f       	andi	r28, 0xFD	; 253
    5b5e:	2b 2d       	mov	r18, r11
    5b60:	20 73       	andi	r18, 0x30	; 48
    5b62:	09 f5       	brne	.+66     	; 0x5ba6 <conv_int+0x94>
    5b64:	80 33       	cpi	r24, 0x30	; 48
    5b66:	f9 f4       	brne	.+62     	; 0x5ba6 <conv_int+0x94>
    5b68:	aa 24       	eor	r10, r10
    5b6a:	aa 94       	dec	r10
    5b6c:	ad 0e       	add	r10, r29
    5b6e:	09 f4       	brne	.+2      	; 0x5b72 <conv_int+0x60>
    5b70:	43 c0       	rjmp	.+134    	; 0x5bf8 <conv_int+0xe6>
    5b72:	c8 01       	movw	r24, r16
    5b74:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5b78:	97 fd       	sbrc	r25, 7
    5b7a:	3e c0       	rjmp	.+124    	; 0x5bf8 <conv_int+0xe6>
    5b7c:	9c 01       	movw	r18, r24
    5b7e:	2f 7d       	andi	r18, 0xDF	; 223
    5b80:	33 27       	eor	r19, r19
    5b82:	28 35       	cpi	r18, 0x58	; 88
    5b84:	31 05       	cpc	r19, r1
    5b86:	49 f4       	brne	.+18     	; 0x5b9a <conv_int+0x88>
    5b88:	c2 64       	ori	r28, 0x42	; 66
    5b8a:	d2 50       	subi	r29, 0x02	; 2
    5b8c:	a9 f1       	breq	.+106    	; 0x5bf8 <conv_int+0xe6>
    5b8e:	c8 01       	movw	r24, r16
    5b90:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5b94:	97 ff       	sbrs	r25, 7
    5b96:	07 c0       	rjmp	.+14     	; 0x5ba6 <conv_int+0x94>
    5b98:	2f c0       	rjmp	.+94     	; 0x5bf8 <conv_int+0xe6>
    5b9a:	b6 fe       	sbrs	r11, 6
    5b9c:	02 c0       	rjmp	.+4      	; 0x5ba2 <conv_int+0x90>
    5b9e:	c2 60       	ori	r28, 0x02	; 2
    5ba0:	01 c0       	rjmp	.+2      	; 0x5ba4 <conv_int+0x92>
    5ba2:	c2 61       	ori	r28, 0x12	; 18
    5ba4:	da 2d       	mov	r29, r10
    5ba6:	81 2c       	mov	r8, r1
    5ba8:	91 2c       	mov	r9, r1
    5baa:	54 01       	movw	r10, r8
    5bac:	20 ed       	ldi	r18, 0xD0	; 208
    5bae:	28 0f       	add	r18, r24
    5bb0:	28 30       	cpi	r18, 0x08	; 8
    5bb2:	80 f0       	brcs	.+32     	; 0x5bd4 <conv_int+0xc2>
    5bb4:	c4 ff       	sbrs	r28, 4
    5bb6:	04 c0       	rjmp	.+8      	; 0x5bc0 <conv_int+0xae>
    5bb8:	b8 01       	movw	r22, r16
    5bba:	0e 94 3c 30 	call	0x6078	; 0x6078 <ungetc>
    5bbe:	19 c0       	rjmp	.+50     	; 0x5bf2 <conv_int+0xe0>
    5bc0:	2a 30       	cpi	r18, 0x0A	; 10
    5bc2:	40 f0       	brcs	.+16     	; 0x5bd4 <conv_int+0xc2>
    5bc4:	c6 ff       	sbrs	r28, 6
    5bc6:	f8 cf       	rjmp	.-16     	; 0x5bb8 <conv_int+0xa6>
    5bc8:	2f 7d       	andi	r18, 0xDF	; 223
    5bca:	3f ee       	ldi	r19, 0xEF	; 239
    5bcc:	32 0f       	add	r19, r18
    5bce:	36 30       	cpi	r19, 0x06	; 6
    5bd0:	98 f7       	brcc	.-26     	; 0x5bb8 <conv_int+0xa6>
    5bd2:	27 50       	subi	r18, 0x07	; 7
    5bd4:	4c 2f       	mov	r20, r28
    5bd6:	c5 01       	movw	r24, r10
    5bd8:	b4 01       	movw	r22, r8
    5bda:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <mulacc>
    5bde:	4b 01       	movw	r8, r22
    5be0:	5c 01       	movw	r10, r24
    5be2:	c2 60       	ori	r28, 0x02	; 2
    5be4:	d1 50       	subi	r29, 0x01	; 1
    5be6:	59 f0       	breq	.+22     	; 0x5bfe <conv_int+0xec>
    5be8:	c8 01       	movw	r24, r16
    5bea:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5bee:	97 ff       	sbrs	r25, 7
    5bf0:	dd cf       	rjmp	.-70     	; 0x5bac <conv_int+0x9a>
    5bf2:	c1 fd       	sbrc	r28, 1
    5bf4:	04 c0       	rjmp	.+8      	; 0x5bfe <conv_int+0xec>
    5bf6:	aa cf       	rjmp	.-172    	; 0x5b4c <conv_int+0x3a>
    5bf8:	81 2c       	mov	r8, r1
    5bfa:	91 2c       	mov	r9, r1
    5bfc:	54 01       	movw	r10, r8
    5bfe:	c7 ff       	sbrs	r28, 7
    5c00:	08 c0       	rjmp	.+16     	; 0x5c12 <conv_int+0x100>
    5c02:	b0 94       	com	r11
    5c04:	a0 94       	com	r10
    5c06:	90 94       	com	r9
    5c08:	80 94       	com	r8
    5c0a:	81 1c       	adc	r8, r1
    5c0c:	91 1c       	adc	r9, r1
    5c0e:	a1 1c       	adc	r10, r1
    5c10:	b1 1c       	adc	r11, r1
    5c12:	2c 2f       	mov	r18, r28
    5c14:	b5 01       	movw	r22, r10
    5c16:	a4 01       	movw	r20, r8
    5c18:	c7 01       	movw	r24, r14
    5c1a:	0e 94 3d 2d 	call	0x5a7a	; 0x5a7a <putval>
    5c1e:	81 e0       	ldi	r24, 0x01	; 1
    5c20:	df 91       	pop	r29
    5c22:	cf 91       	pop	r28
    5c24:	1f 91       	pop	r17
    5c26:	0f 91       	pop	r16
    5c28:	ff 90       	pop	r15
    5c2a:	ef 90       	pop	r14
    5c2c:	bf 90       	pop	r11
    5c2e:	af 90       	pop	r10
    5c30:	9f 90       	pop	r9
    5c32:	8f 90       	pop	r8
    5c34:	08 95       	ret

00005c36 <conv_brk>:
    5c36:	a0 e2       	ldi	r26, 0x20	; 32
    5c38:	b0 e0       	ldi	r27, 0x00	; 0
    5c3a:	e1 e2       	ldi	r30, 0x21	; 33
    5c3c:	fe e2       	ldi	r31, 0x2E	; 46
    5c3e:	0c 94 1c 2b 	jmp	0x5638	; 0x5638 <__prologue_saves__+0x6>
    5c42:	5c 01       	movw	r10, r24
    5c44:	96 2e       	mov	r9, r22
    5c46:	7a 01       	movw	r14, r20
    5c48:	f9 01       	movw	r30, r18
    5c4a:	8e 01       	movw	r16, r28
    5c4c:	0f 5f       	subi	r16, 0xFF	; 255
    5c4e:	1f 4f       	sbci	r17, 0xFF	; 255
    5c50:	68 01       	movw	r12, r16
    5c52:	80 e2       	ldi	r24, 0x20	; 32
    5c54:	d8 01       	movw	r26, r16
    5c56:	1d 92       	st	X+, r1
    5c58:	8a 95       	dec	r24
    5c5a:	e9 f7       	brne	.-6      	; 0x5c56 <conv_brk+0x20>
    5c5c:	d5 01       	movw	r26, r10
    5c5e:	13 96       	adiw	r26, 0x03	; 3
    5c60:	8c 90       	ld	r8, X
    5c62:	80 e0       	ldi	r24, 0x00	; 0
    5c64:	90 e0       	ldi	r25, 0x00	; 0
    5c66:	61 2c       	mov	r6, r1
    5c68:	71 2c       	mov	r7, r1
    5c6a:	30 e0       	ldi	r19, 0x00	; 0
    5c6c:	61 e0       	ldi	r22, 0x01	; 1
    5c6e:	70 e0       	ldi	r23, 0x00	; 0
    5c70:	83 fc       	sbrc	r8, 3
    5c72:	25 91       	lpm	r18, Z+
    5c74:	83 fe       	sbrs	r8, 3
    5c76:	21 91       	ld	r18, Z+
    5c78:	8f 01       	movw	r16, r30
    5c7a:	52 2e       	mov	r5, r18
    5c7c:	21 11       	cpse	r18, r1
    5c7e:	03 c0       	rjmp	.+6      	; 0x5c86 <conv_brk+0x50>
    5c80:	80 e0       	ldi	r24, 0x00	; 0
    5c82:	90 e0       	ldi	r25, 0x00	; 0
    5c84:	92 c0       	rjmp	.+292    	; 0x5daa <conv_brk+0x174>
    5c86:	2e 35       	cpi	r18, 0x5E	; 94
    5c88:	11 f4       	brne	.+4      	; 0x5c8e <conv_brk+0x58>
    5c8a:	00 97       	sbiw	r24, 0x00	; 0
    5c8c:	51 f1       	breq	.+84     	; 0x5ce2 <conv_brk+0xac>
    5c8e:	43 2f       	mov	r20, r19
    5c90:	50 e0       	ldi	r21, 0x00	; 0
    5c92:	48 17       	cp	r20, r24
    5c94:	59 07       	cpc	r21, r25
    5c96:	3c f4       	brge	.+14     	; 0x5ca6 <conv_brk+0x70>
    5c98:	2d 35       	cpi	r18, 0x5D	; 93
    5c9a:	59 f1       	breq	.+86     	; 0x5cf2 <conv_brk+0xbc>
    5c9c:	2d 32       	cpi	r18, 0x2D	; 45
    5c9e:	19 f4       	brne	.+6      	; 0x5ca6 <conv_brk+0x70>
    5ca0:	77 20       	and	r7, r7
    5ca2:	09 f1       	breq	.+66     	; 0x5ce6 <conv_brk+0xb0>
    5ca4:	03 c0       	rjmp	.+6      	; 0x5cac <conv_brk+0x76>
    5ca6:	77 20       	and	r7, r7
    5ca8:	09 f4       	brne	.+2      	; 0x5cac <conv_brk+0x76>
    5caa:	6a c0       	rjmp	.+212    	; 0x5d80 <conv_brk+0x14a>
    5cac:	45 2d       	mov	r20, r5
    5cae:	46 95       	lsr	r20
    5cb0:	46 95       	lsr	r20
    5cb2:	46 95       	lsr	r20
    5cb4:	d6 01       	movw	r26, r12
    5cb6:	a4 0f       	add	r26, r20
    5cb8:	b1 1d       	adc	r27, r1
    5cba:	45 2d       	mov	r20, r5
    5cbc:	47 70       	andi	r20, 0x07	; 7
    5cbe:	8b 01       	movw	r16, r22
    5cc0:	02 c0       	rjmp	.+4      	; 0x5cc6 <conv_brk+0x90>
    5cc2:	00 0f       	add	r16, r16
    5cc4:	11 1f       	adc	r17, r17
    5cc6:	4a 95       	dec	r20
    5cc8:	e2 f7       	brpl	.-8      	; 0x5cc2 <conv_brk+0x8c>
    5cca:	a8 01       	movw	r20, r16
    5ccc:	5c 91       	ld	r21, X
    5cce:	45 2b       	or	r20, r21
    5cd0:	4c 93       	st	X, r20
    5cd2:	65 14       	cp	r6, r5
    5cd4:	59 f0       	breq	.+22     	; 0x5cec <conv_brk+0xb6>
    5cd6:	56 14       	cp	r5, r6
    5cd8:	10 f4       	brcc	.+4      	; 0x5cde <conv_brk+0xa8>
    5cda:	53 94       	inc	r5
    5cdc:	e7 cf       	rjmp	.-50     	; 0x5cac <conv_brk+0x76>
    5cde:	5a 94       	dec	r5
    5ce0:	e5 cf       	rjmp	.-54     	; 0x5cac <conv_brk+0x76>
    5ce2:	31 e0       	ldi	r19, 0x01	; 1
    5ce4:	04 c0       	rjmp	.+8      	; 0x5cee <conv_brk+0xb8>
    5ce6:	77 24       	eor	r7, r7
    5ce8:	73 94       	inc	r7
    5cea:	01 c0       	rjmp	.+2      	; 0x5cee <conv_brk+0xb8>
    5cec:	71 2c       	mov	r7, r1
    5cee:	01 96       	adiw	r24, 0x01	; 1
    5cf0:	bf cf       	rjmp	.-130    	; 0x5c70 <conv_brk+0x3a>
    5cf2:	77 20       	and	r7, r7
    5cf4:	19 f0       	breq	.+6      	; 0x5cfc <conv_brk+0xc6>
    5cf6:	8e 81       	ldd	r24, Y+6	; 0x06
    5cf8:	80 62       	ori	r24, 0x20	; 32
    5cfa:	8e 83       	std	Y+6, r24	; 0x06
    5cfc:	31 11       	cpse	r19, r1
    5cfe:	03 c0       	rjmp	.+6      	; 0x5d06 <conv_brk+0xd0>
    5d00:	88 24       	eor	r8, r8
    5d02:	83 94       	inc	r8
    5d04:	17 c0       	rjmp	.+46     	; 0x5d34 <conv_brk+0xfe>
    5d06:	f6 01       	movw	r30, r12
    5d08:	9e 01       	movw	r18, r28
    5d0a:	2f 5d       	subi	r18, 0xDF	; 223
    5d0c:	3f 4f       	sbci	r19, 0xFF	; 255
    5d0e:	80 81       	ld	r24, Z
    5d10:	80 95       	com	r24
    5d12:	81 93       	st	Z+, r24
    5d14:	2e 17       	cp	r18, r30
    5d16:	3f 07       	cpc	r19, r31
    5d18:	d1 f7       	brne	.-12     	; 0x5d0e <conv_brk+0xd8>
    5d1a:	f2 cf       	rjmp	.-28     	; 0x5d00 <conv_brk+0xca>
    5d1c:	e1 14       	cp	r14, r1
    5d1e:	f1 04       	cpc	r15, r1
    5d20:	29 f0       	breq	.+10     	; 0x5d2c <conv_brk+0xf6>
    5d22:	d7 01       	movw	r26, r14
    5d24:	8c 93       	st	X, r24
    5d26:	f7 01       	movw	r30, r14
    5d28:	31 96       	adiw	r30, 0x01	; 1
    5d2a:	7f 01       	movw	r14, r30
    5d2c:	9a 94       	dec	r9
    5d2e:	81 2c       	mov	r8, r1
    5d30:	99 20       	and	r9, r9
    5d32:	f9 f0       	breq	.+62     	; 0x5d72 <conv_brk+0x13c>
    5d34:	c5 01       	movw	r24, r10
    5d36:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5d3a:	97 fd       	sbrc	r25, 7
    5d3c:	18 c0       	rjmp	.+48     	; 0x5d6e <conv_brk+0x138>
    5d3e:	fc 01       	movw	r30, r24
    5d40:	ff 27       	eor	r31, r31
    5d42:	23 e0       	ldi	r18, 0x03	; 3
    5d44:	f5 95       	asr	r31
    5d46:	e7 95       	ror	r30
    5d48:	2a 95       	dec	r18
    5d4a:	e1 f7       	brne	.-8      	; 0x5d44 <conv_brk+0x10e>
    5d4c:	ec 0d       	add	r30, r12
    5d4e:	fd 1d       	adc	r31, r13
    5d50:	20 81       	ld	r18, Z
    5d52:	30 e0       	ldi	r19, 0x00	; 0
    5d54:	ac 01       	movw	r20, r24
    5d56:	47 70       	andi	r20, 0x07	; 7
    5d58:	55 27       	eor	r21, r21
    5d5a:	02 c0       	rjmp	.+4      	; 0x5d60 <conv_brk+0x12a>
    5d5c:	35 95       	asr	r19
    5d5e:	27 95       	ror	r18
    5d60:	4a 95       	dec	r20
    5d62:	e2 f7       	brpl	.-8      	; 0x5d5c <conv_brk+0x126>
    5d64:	20 fd       	sbrc	r18, 0
    5d66:	da cf       	rjmp	.-76     	; 0x5d1c <conv_brk+0xe6>
    5d68:	b5 01       	movw	r22, r10
    5d6a:	0e 94 3c 30 	call	0x6078	; 0x6078 <ungetc>
    5d6e:	81 10       	cpse	r8, r1
    5d70:	87 cf       	rjmp	.-242    	; 0x5c80 <conv_brk+0x4a>
    5d72:	e1 14       	cp	r14, r1
    5d74:	f1 04       	cpc	r15, r1
    5d76:	11 f0       	breq	.+4      	; 0x5d7c <conv_brk+0x146>
    5d78:	d7 01       	movw	r26, r14
    5d7a:	1c 92       	st	X, r1
    5d7c:	c8 01       	movw	r24, r16
    5d7e:	15 c0       	rjmp	.+42     	; 0x5daa <conv_brk+0x174>
    5d80:	42 2f       	mov	r20, r18
    5d82:	46 95       	lsr	r20
    5d84:	46 95       	lsr	r20
    5d86:	46 95       	lsr	r20
    5d88:	d6 01       	movw	r26, r12
    5d8a:	a4 0f       	add	r26, r20
    5d8c:	b1 1d       	adc	r27, r1
    5d8e:	42 2f       	mov	r20, r18
    5d90:	47 70       	andi	r20, 0x07	; 7
    5d92:	8b 01       	movw	r16, r22
    5d94:	02 c0       	rjmp	.+4      	; 0x5d9a <conv_brk+0x164>
    5d96:	00 0f       	add	r16, r16
    5d98:	11 1f       	adc	r17, r17
    5d9a:	4a 95       	dec	r20
    5d9c:	e2 f7       	brpl	.-8      	; 0x5d96 <conv_brk+0x160>
    5d9e:	a8 01       	movw	r20, r16
    5da0:	5c 91       	ld	r21, X
    5da2:	45 2b       	or	r20, r21
    5da4:	4c 93       	st	X, r20
    5da6:	62 2e       	mov	r6, r18
    5da8:	a2 cf       	rjmp	.-188    	; 0x5cee <conv_brk+0xb8>
    5daa:	a0 96       	adiw	r28, 0x20	; 32
    5dac:	ef e0       	ldi	r30, 0x0F	; 15
    5dae:	0c 94 38 2b 	jmp	0x5670	; 0x5670 <__epilogue_restores__+0x6>

00005db2 <vfscanf>:
    5db2:	a0 e0       	ldi	r26, 0x00	; 0
    5db4:	b0 e0       	ldi	r27, 0x00	; 0
    5db6:	ef ed       	ldi	r30, 0xDF	; 223
    5db8:	fe e2       	ldi	r31, 0x2E	; 46
    5dba:	0c 94 1c 2b 	jmp	0x5638	; 0x5638 <__prologue_saves__+0x6>
    5dbe:	6c 01       	movw	r12, r24
    5dc0:	eb 01       	movw	r28, r22
    5dc2:	5a 01       	movw	r10, r20
    5dc4:	fc 01       	movw	r30, r24
    5dc6:	17 82       	std	Z+7, r1	; 0x07
    5dc8:	16 82       	std	Z+6, r1	; 0x06
    5dca:	51 2c       	mov	r5, r1
    5dcc:	f6 01       	movw	r30, r12
    5dce:	e3 80       	ldd	r14, Z+3	; 0x03
    5dd0:	fe 01       	movw	r30, r28
    5dd2:	e3 fc       	sbrc	r14, 3
    5dd4:	85 91       	lpm	r24, Z+
    5dd6:	e3 fe       	sbrs	r14, 3
    5dd8:	81 91       	ld	r24, Z+
    5dda:	18 2f       	mov	r17, r24
    5ddc:	ef 01       	movw	r28, r30
    5dde:	88 23       	and	r24, r24
    5de0:	09 f4       	brne	.+2      	; 0x5de4 <vfscanf+0x32>
    5de2:	ee c0       	rjmp	.+476    	; 0x5fc0 <vfscanf+0x20e>
    5de4:	90 e0       	ldi	r25, 0x00	; 0
    5de6:	0e 94 ea 2f 	call	0x5fd4	; 0x5fd4 <isspace>
    5dea:	89 2b       	or	r24, r25
    5dec:	21 f0       	breq	.+8      	; 0x5df6 <vfscanf+0x44>
    5dee:	c6 01       	movw	r24, r12
    5df0:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <skip_spaces>
    5df4:	eb cf       	rjmp	.-42     	; 0x5dcc <vfscanf+0x1a>
    5df6:	15 32       	cpi	r17, 0x25	; 37
    5df8:	41 f4       	brne	.+16     	; 0x5e0a <vfscanf+0x58>
    5dfa:	fe 01       	movw	r30, r28
    5dfc:	e3 fc       	sbrc	r14, 3
    5dfe:	15 91       	lpm	r17, Z+
    5e00:	e3 fe       	sbrs	r14, 3
    5e02:	11 91       	ld	r17, Z+
    5e04:	ef 01       	movw	r28, r30
    5e06:	15 32       	cpi	r17, 0x25	; 37
    5e08:	81 f4       	brne	.+32     	; 0x5e2a <vfscanf+0x78>
    5e0a:	c6 01       	movw	r24, r12
    5e0c:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5e10:	97 fd       	sbrc	r25, 7
    5e12:	d4 c0       	rjmp	.+424    	; 0x5fbc <vfscanf+0x20a>
    5e14:	41 2f       	mov	r20, r17
    5e16:	50 e0       	ldi	r21, 0x00	; 0
    5e18:	9c 01       	movw	r18, r24
    5e1a:	33 27       	eor	r19, r19
    5e1c:	24 17       	cp	r18, r20
    5e1e:	35 07       	cpc	r19, r21
    5e20:	a9 f2       	breq	.-86     	; 0x5dcc <vfscanf+0x1a>
    5e22:	b6 01       	movw	r22, r12
    5e24:	0e 94 3c 30 	call	0x6078	; 0x6078 <ungetc>
    5e28:	cb c0       	rjmp	.+406    	; 0x5fc0 <vfscanf+0x20e>
    5e2a:	1a 32       	cpi	r17, 0x2A	; 42
    5e2c:	39 f4       	brne	.+14     	; 0x5e3c <vfscanf+0x8a>
    5e2e:	e3 fc       	sbrc	r14, 3
    5e30:	15 91       	lpm	r17, Z+
    5e32:	e3 fe       	sbrs	r14, 3
    5e34:	11 91       	ld	r17, Z+
    5e36:	ef 01       	movw	r28, r30
    5e38:	01 e0       	ldi	r16, 0x01	; 1
    5e3a:	01 c0       	rjmp	.+2      	; 0x5e3e <vfscanf+0x8c>
    5e3c:	00 e0       	ldi	r16, 0x00	; 0
    5e3e:	f1 2c       	mov	r15, r1
    5e40:	20 ed       	ldi	r18, 0xD0	; 208
    5e42:	21 0f       	add	r18, r17
    5e44:	2a 30       	cpi	r18, 0x0A	; 10
    5e46:	80 f4       	brcc	.+32     	; 0x5e68 <vfscanf+0xb6>
    5e48:	02 60       	ori	r16, 0x02	; 2
    5e4a:	6f 2d       	mov	r22, r15
    5e4c:	70 e0       	ldi	r23, 0x00	; 0
    5e4e:	80 e0       	ldi	r24, 0x00	; 0
    5e50:	90 e0       	ldi	r25, 0x00	; 0
    5e52:	40 e2       	ldi	r20, 0x20	; 32
    5e54:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <mulacc>
    5e58:	f6 2e       	mov	r15, r22
    5e5a:	fe 01       	movw	r30, r28
    5e5c:	e3 fc       	sbrc	r14, 3
    5e5e:	15 91       	lpm	r17, Z+
    5e60:	e3 fe       	sbrs	r14, 3
    5e62:	11 91       	ld	r17, Z+
    5e64:	ef 01       	movw	r28, r30
    5e66:	ec cf       	rjmp	.-40     	; 0x5e40 <vfscanf+0x8e>
    5e68:	01 ff       	sbrs	r16, 1
    5e6a:	03 c0       	rjmp	.+6      	; 0x5e72 <vfscanf+0xc0>
    5e6c:	f1 10       	cpse	r15, r1
    5e6e:	03 c0       	rjmp	.+6      	; 0x5e76 <vfscanf+0xc4>
    5e70:	a7 c0       	rjmp	.+334    	; 0x5fc0 <vfscanf+0x20e>
    5e72:	ff 24       	eor	r15, r15
    5e74:	fa 94       	dec	r15
    5e76:	18 36       	cpi	r17, 0x68	; 104
    5e78:	19 f0       	breq	.+6      	; 0x5e80 <vfscanf+0xce>
    5e7a:	1c 36       	cpi	r17, 0x6C	; 108
    5e7c:	51 f0       	breq	.+20     	; 0x5e92 <vfscanf+0xe0>
    5e7e:	10 c0       	rjmp	.+32     	; 0x5ea0 <vfscanf+0xee>
    5e80:	fe 01       	movw	r30, r28
    5e82:	e3 fc       	sbrc	r14, 3
    5e84:	15 91       	lpm	r17, Z+
    5e86:	e3 fe       	sbrs	r14, 3
    5e88:	11 91       	ld	r17, Z+
    5e8a:	ef 01       	movw	r28, r30
    5e8c:	18 36       	cpi	r17, 0x68	; 104
    5e8e:	41 f4       	brne	.+16     	; 0x5ea0 <vfscanf+0xee>
    5e90:	08 60       	ori	r16, 0x08	; 8
    5e92:	04 60       	ori	r16, 0x04	; 4
    5e94:	fe 01       	movw	r30, r28
    5e96:	e3 fc       	sbrc	r14, 3
    5e98:	15 91       	lpm	r17, Z+
    5e9a:	e3 fe       	sbrs	r14, 3
    5e9c:	11 91       	ld	r17, Z+
    5e9e:	ef 01       	movw	r28, r30
    5ea0:	11 23       	and	r17, r17
    5ea2:	09 f4       	brne	.+2      	; 0x5ea6 <vfscanf+0xf4>
    5ea4:	8d c0       	rjmp	.+282    	; 0x5fc0 <vfscanf+0x20e>
    5ea6:	61 2f       	mov	r22, r17
    5ea8:	70 e0       	ldi	r23, 0x00	; 0
    5eaa:	80 e9       	ldi	r24, 0x90	; 144
    5eac:	91 e0       	ldi	r25, 0x01	; 1
    5eae:	0e 94 f3 2f 	call	0x5fe6	; 0x5fe6 <strchr_P>
    5eb2:	89 2b       	or	r24, r25
    5eb4:	09 f4       	brne	.+2      	; 0x5eb8 <vfscanf+0x106>
    5eb6:	84 c0       	rjmp	.+264    	; 0x5fc0 <vfscanf+0x20e>
    5eb8:	00 fd       	sbrc	r16, 0
    5eba:	07 c0       	rjmp	.+14     	; 0x5eca <vfscanf+0x118>
    5ebc:	f5 01       	movw	r30, r10
    5ebe:	80 80       	ld	r8, Z
    5ec0:	91 80       	ldd	r9, Z+1	; 0x01
    5ec2:	c5 01       	movw	r24, r10
    5ec4:	02 96       	adiw	r24, 0x02	; 2
    5ec6:	5c 01       	movw	r10, r24
    5ec8:	02 c0       	rjmp	.+4      	; 0x5ece <vfscanf+0x11c>
    5eca:	81 2c       	mov	r8, r1
    5ecc:	91 2c       	mov	r9, r1
    5ece:	1e 36       	cpi	r17, 0x6E	; 110
    5ed0:	51 f4       	brne	.+20     	; 0x5ee6 <vfscanf+0x134>
    5ed2:	f6 01       	movw	r30, r12
    5ed4:	46 81       	ldd	r20, Z+6	; 0x06
    5ed6:	57 81       	ldd	r21, Z+7	; 0x07
    5ed8:	60 e0       	ldi	r22, 0x00	; 0
    5eda:	70 e0       	ldi	r23, 0x00	; 0
    5edc:	20 2f       	mov	r18, r16
    5ede:	c4 01       	movw	r24, r8
    5ee0:	0e 94 3d 2d 	call	0x5a7a	; 0x5a7a <putval>
    5ee4:	73 cf       	rjmp	.-282    	; 0x5dcc <vfscanf+0x1a>
    5ee6:	13 36       	cpi	r17, 0x63	; 99
    5ee8:	a9 f4       	brne	.+42     	; 0x5f14 <vfscanf+0x162>
    5eea:	01 fd       	sbrc	r16, 1
    5eec:	02 c0       	rjmp	.+4      	; 0x5ef2 <vfscanf+0x140>
    5eee:	ff 24       	eor	r15, r15
    5ef0:	f3 94       	inc	r15
    5ef2:	c6 01       	movw	r24, r12
    5ef4:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5ef8:	97 fd       	sbrc	r25, 7
    5efa:	60 c0       	rjmp	.+192    	; 0x5fbc <vfscanf+0x20a>
    5efc:	81 14       	cp	r8, r1
    5efe:	91 04       	cpc	r9, r1
    5f00:	29 f0       	breq	.+10     	; 0x5f0c <vfscanf+0x15a>
    5f02:	f4 01       	movw	r30, r8
    5f04:	80 83       	st	Z, r24
    5f06:	c4 01       	movw	r24, r8
    5f08:	01 96       	adiw	r24, 0x01	; 1
    5f0a:	4c 01       	movw	r8, r24
    5f0c:	fa 94       	dec	r15
    5f0e:	f1 10       	cpse	r15, r1
    5f10:	f0 cf       	rjmp	.-32     	; 0x5ef2 <vfscanf+0x140>
    5f12:	50 c0       	rjmp	.+160    	; 0x5fb4 <vfscanf+0x202>
    5f14:	1b 35       	cpi	r17, 0x5B	; 91
    5f16:	59 f4       	brne	.+22     	; 0x5f2e <vfscanf+0x17c>
    5f18:	9e 01       	movw	r18, r28
    5f1a:	a4 01       	movw	r20, r8
    5f1c:	6f 2d       	mov	r22, r15
    5f1e:	c6 01       	movw	r24, r12
    5f20:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <conv_brk>
    5f24:	ec 01       	movw	r28, r24
    5f26:	89 2b       	or	r24, r25
    5f28:	09 f0       	breq	.+2      	; 0x5f2c <vfscanf+0x17a>
    5f2a:	44 c0       	rjmp	.+136    	; 0x5fb4 <vfscanf+0x202>
    5f2c:	3e c0       	rjmp	.+124    	; 0x5faa <vfscanf+0x1f8>
    5f2e:	c6 01       	movw	r24, r12
    5f30:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <skip_spaces>
    5f34:	97 fd       	sbrc	r25, 7
    5f36:	42 c0       	rjmp	.+132    	; 0x5fbc <vfscanf+0x20a>
    5f38:	1f 36       	cpi	r17, 0x6F	; 111
    5f3a:	61 f1       	breq	.+88     	; 0x5f94 <vfscanf+0x1e2>
    5f3c:	28 f4       	brcc	.+10     	; 0x5f48 <vfscanf+0x196>
    5f3e:	14 36       	cpi	r17, 0x64	; 100
    5f40:	39 f1       	breq	.+78     	; 0x5f90 <vfscanf+0x1de>
    5f42:	19 36       	cpi	r17, 0x69	; 105
    5f44:	51 f1       	breq	.+84     	; 0x5f9a <vfscanf+0x1e8>
    5f46:	28 c0       	rjmp	.+80     	; 0x5f98 <vfscanf+0x1e6>
    5f48:	13 37       	cpi	r17, 0x73	; 115
    5f4a:	71 f0       	breq	.+28     	; 0x5f68 <vfscanf+0x1b6>
    5f4c:	15 37       	cpi	r17, 0x75	; 117
    5f4e:	01 f1       	breq	.+64     	; 0x5f90 <vfscanf+0x1de>
    5f50:	23 c0       	rjmp	.+70     	; 0x5f98 <vfscanf+0x1e6>
    5f52:	81 14       	cp	r8, r1
    5f54:	91 04       	cpc	r9, r1
    5f56:	29 f0       	breq	.+10     	; 0x5f62 <vfscanf+0x1b0>
    5f58:	f4 01       	movw	r30, r8
    5f5a:	60 82       	st	Z, r6
    5f5c:	c4 01       	movw	r24, r8
    5f5e:	01 96       	adiw	r24, 0x01	; 1
    5f60:	4c 01       	movw	r8, r24
    5f62:	fa 94       	dec	r15
    5f64:	ff 20       	and	r15, r15
    5f66:	71 f0       	breq	.+28     	; 0x5f84 <vfscanf+0x1d2>
    5f68:	c6 01       	movw	r24, r12
    5f6a:	0e 94 fe 2f 	call	0x5ffc	; 0x5ffc <fgetc>
    5f6e:	3c 01       	movw	r6, r24
    5f70:	97 fd       	sbrc	r25, 7
    5f72:	08 c0       	rjmp	.+16     	; 0x5f84 <vfscanf+0x1d2>
    5f74:	0e 94 ea 2f 	call	0x5fd4	; 0x5fd4 <isspace>
    5f78:	89 2b       	or	r24, r25
    5f7a:	59 f3       	breq	.-42     	; 0x5f52 <vfscanf+0x1a0>
    5f7c:	b6 01       	movw	r22, r12
    5f7e:	c3 01       	movw	r24, r6
    5f80:	0e 94 3c 30 	call	0x6078	; 0x6078 <ungetc>
    5f84:	81 14       	cp	r8, r1
    5f86:	91 04       	cpc	r9, r1
    5f88:	a9 f0       	breq	.+42     	; 0x5fb4 <vfscanf+0x202>
    5f8a:	f4 01       	movw	r30, r8
    5f8c:	10 82       	st	Z, r1
    5f8e:	12 c0       	rjmp	.+36     	; 0x5fb4 <vfscanf+0x202>
    5f90:	00 62       	ori	r16, 0x20	; 32
    5f92:	03 c0       	rjmp	.+6      	; 0x5f9a <vfscanf+0x1e8>
    5f94:	00 61       	ori	r16, 0x10	; 16
    5f96:	01 c0       	rjmp	.+2      	; 0x5f9a <vfscanf+0x1e8>
    5f98:	00 64       	ori	r16, 0x40	; 64
    5f9a:	20 2f       	mov	r18, r16
    5f9c:	a4 01       	movw	r20, r8
    5f9e:	6f 2d       	mov	r22, r15
    5fa0:	c6 01       	movw	r24, r12
    5fa2:	0e 94 89 2d 	call	0x5b12	; 0x5b12 <conv_int>
    5fa6:	81 11       	cpse	r24, r1
    5fa8:	05 c0       	rjmp	.+10     	; 0x5fb4 <vfscanf+0x202>
    5faa:	f6 01       	movw	r30, r12
    5fac:	83 81       	ldd	r24, Z+3	; 0x03
    5fae:	80 73       	andi	r24, 0x30	; 48
    5fb0:	29 f4       	brne	.+10     	; 0x5fbc <vfscanf+0x20a>
    5fb2:	06 c0       	rjmp	.+12     	; 0x5fc0 <vfscanf+0x20e>
    5fb4:	00 fd       	sbrc	r16, 0
    5fb6:	0a cf       	rjmp	.-492    	; 0x5dcc <vfscanf+0x1a>
    5fb8:	53 94       	inc	r5
    5fba:	08 cf       	rjmp	.-496    	; 0x5dcc <vfscanf+0x1a>
    5fbc:	55 20       	and	r5, r5
    5fbe:	19 f0       	breq	.+6      	; 0x5fc6 <vfscanf+0x214>
    5fc0:	85 2d       	mov	r24, r5
    5fc2:	90 e0       	ldi	r25, 0x00	; 0
    5fc4:	02 c0       	rjmp	.+4      	; 0x5fca <vfscanf+0x218>
    5fc6:	8f ef       	ldi	r24, 0xFF	; 255
    5fc8:	9f ef       	ldi	r25, 0xFF	; 255
    5fca:	cd b7       	in	r28, 0x3d	; 61
    5fcc:	de b7       	in	r29, 0x3e	; 62
    5fce:	ef e0       	ldi	r30, 0x0F	; 15
    5fd0:	0c 94 38 2b 	jmp	0x5670	; 0x5670 <__epilogue_restores__+0x6>

00005fd4 <isspace>:
    5fd4:	91 11       	cpse	r25, r1
    5fd6:	0c 94 55 30 	jmp	0x60aa	; 0x60aa <__ctype_isfalse>
    5fda:	80 32       	cpi	r24, 0x20	; 32
    5fdc:	19 f0       	breq	.+6      	; 0x5fe4 <isspace+0x10>
    5fde:	89 50       	subi	r24, 0x09	; 9
    5fe0:	85 50       	subi	r24, 0x05	; 5
    5fe2:	c8 f7       	brcc	.-14     	; 0x5fd6 <isspace+0x2>
    5fe4:	08 95       	ret

00005fe6 <strchr_P>:
    5fe6:	fc 01       	movw	r30, r24
    5fe8:	05 90       	lpm	r0, Z+
    5fea:	06 16       	cp	r0, r22
    5fec:	21 f0       	breq	.+8      	; 0x5ff6 <strchr_P+0x10>
    5fee:	00 20       	and	r0, r0
    5ff0:	d9 f7       	brne	.-10     	; 0x5fe8 <strchr_P+0x2>
    5ff2:	c0 01       	movw	r24, r0
    5ff4:	08 95       	ret
    5ff6:	31 97       	sbiw	r30, 0x01	; 1
    5ff8:	cf 01       	movw	r24, r30
    5ffa:	08 95       	ret

00005ffc <fgetc>:
    5ffc:	cf 93       	push	r28
    5ffe:	df 93       	push	r29
    6000:	ec 01       	movw	r28, r24
    6002:	2b 81       	ldd	r18, Y+3	; 0x03
    6004:	20 ff       	sbrs	r18, 0
    6006:	33 c0       	rjmp	.+102    	; 0x606e <fgetc+0x72>
    6008:	26 ff       	sbrs	r18, 6
    600a:	0a c0       	rjmp	.+20     	; 0x6020 <fgetc+0x24>
    600c:	2f 7b       	andi	r18, 0xBF	; 191
    600e:	2b 83       	std	Y+3, r18	; 0x03
    6010:	8e 81       	ldd	r24, Y+6	; 0x06
    6012:	9f 81       	ldd	r25, Y+7	; 0x07
    6014:	01 96       	adiw	r24, 0x01	; 1
    6016:	9f 83       	std	Y+7, r25	; 0x07
    6018:	8e 83       	std	Y+6, r24	; 0x06
    601a:	8a 81       	ldd	r24, Y+2	; 0x02
    601c:	90 e0       	ldi	r25, 0x00	; 0
    601e:	29 c0       	rjmp	.+82     	; 0x6072 <fgetc+0x76>
    6020:	22 ff       	sbrs	r18, 2
    6022:	0f c0       	rjmp	.+30     	; 0x6042 <fgetc+0x46>
    6024:	e8 81       	ld	r30, Y
    6026:	f9 81       	ldd	r31, Y+1	; 0x01
    6028:	80 81       	ld	r24, Z
    602a:	08 2e       	mov	r0, r24
    602c:	00 0c       	add	r0, r0
    602e:	99 0b       	sbc	r25, r25
    6030:	00 97       	sbiw	r24, 0x00	; 0
    6032:	19 f4       	brne	.+6      	; 0x603a <fgetc+0x3e>
    6034:	20 62       	ori	r18, 0x20	; 32
    6036:	2b 83       	std	Y+3, r18	; 0x03
    6038:	1a c0       	rjmp	.+52     	; 0x606e <fgetc+0x72>
    603a:	31 96       	adiw	r30, 0x01	; 1
    603c:	f9 83       	std	Y+1, r31	; 0x01
    603e:	e8 83       	st	Y, r30
    6040:	0e c0       	rjmp	.+28     	; 0x605e <fgetc+0x62>
    6042:	ea 85       	ldd	r30, Y+10	; 0x0a
    6044:	fb 85       	ldd	r31, Y+11	; 0x0b
    6046:	09 95       	icall
    6048:	97 ff       	sbrs	r25, 7
    604a:	09 c0       	rjmp	.+18     	; 0x605e <fgetc+0x62>
    604c:	2b 81       	ldd	r18, Y+3	; 0x03
    604e:	01 96       	adiw	r24, 0x01	; 1
    6050:	11 f0       	breq	.+4      	; 0x6056 <fgetc+0x5a>
    6052:	80 e2       	ldi	r24, 0x20	; 32
    6054:	01 c0       	rjmp	.+2      	; 0x6058 <fgetc+0x5c>
    6056:	80 e1       	ldi	r24, 0x10	; 16
    6058:	82 2b       	or	r24, r18
    605a:	8b 83       	std	Y+3, r24	; 0x03
    605c:	08 c0       	rjmp	.+16     	; 0x606e <fgetc+0x72>
    605e:	2e 81       	ldd	r18, Y+6	; 0x06
    6060:	3f 81       	ldd	r19, Y+7	; 0x07
    6062:	2f 5f       	subi	r18, 0xFF	; 255
    6064:	3f 4f       	sbci	r19, 0xFF	; 255
    6066:	3f 83       	std	Y+7, r19	; 0x07
    6068:	2e 83       	std	Y+6, r18	; 0x06
    606a:	99 27       	eor	r25, r25
    606c:	02 c0       	rjmp	.+4      	; 0x6072 <fgetc+0x76>
    606e:	8f ef       	ldi	r24, 0xFF	; 255
    6070:	9f ef       	ldi	r25, 0xFF	; 255
    6072:	df 91       	pop	r29
    6074:	cf 91       	pop	r28
    6076:	08 95       	ret

00006078 <ungetc>:
    6078:	fb 01       	movw	r30, r22
    607a:	23 81       	ldd	r18, Z+3	; 0x03
    607c:	20 ff       	sbrs	r18, 0
    607e:	12 c0       	rjmp	.+36     	; 0x60a4 <ungetc+0x2c>
    6080:	26 fd       	sbrc	r18, 6
    6082:	10 c0       	rjmp	.+32     	; 0x60a4 <ungetc+0x2c>
    6084:	8f 3f       	cpi	r24, 0xFF	; 255
    6086:	3f ef       	ldi	r19, 0xFF	; 255
    6088:	93 07       	cpc	r25, r19
    608a:	61 f0       	breq	.+24     	; 0x60a4 <ungetc+0x2c>
    608c:	82 83       	std	Z+2, r24	; 0x02
    608e:	2f 7d       	andi	r18, 0xDF	; 223
    6090:	20 64       	ori	r18, 0x40	; 64
    6092:	23 83       	std	Z+3, r18	; 0x03
    6094:	26 81       	ldd	r18, Z+6	; 0x06
    6096:	37 81       	ldd	r19, Z+7	; 0x07
    6098:	21 50       	subi	r18, 0x01	; 1
    609a:	31 09       	sbc	r19, r1
    609c:	37 83       	std	Z+7, r19	; 0x07
    609e:	26 83       	std	Z+6, r18	; 0x06
    60a0:	99 27       	eor	r25, r25
    60a2:	08 95       	ret
    60a4:	8f ef       	ldi	r24, 0xFF	; 255
    60a6:	9f ef       	ldi	r25, 0xFF	; 255
    60a8:	08 95       	ret

000060aa <__ctype_isfalse>:
    60aa:	99 27       	eor	r25, r25
    60ac:	88 27       	eor	r24, r24

000060ae <__ctype_istrue>:
    60ae:	08 95       	ret

000060b0 <_exit>:
    60b0:	f8 94       	cli

000060b2 <__stop_program>:
    60b2:	ff cf       	rjmp	.-2      	; 0x60b2 <__stop_program>
